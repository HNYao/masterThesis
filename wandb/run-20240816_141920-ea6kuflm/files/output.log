2024-08-16 14:19:25,742 [Worker 0] Is distributed: False
2024-08-16 14:19:25,742 [Process: 0] Starting training
2024-08-16 14:19:25,742 [Process: 0] EPOCH 1:
2024-08-16 14:19:25,745 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:19:28,312 [Process: 0] Synchronize training processes
2024-08-16 14:19:28,312 [Process: 0] Evaluating...
2024-08-16 14:19:28,321 [Process: 0] EPOCH 2:
2024-08-16 14:19:28,323 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2288, 0.2102, 0.2691,  ..., 0.3613, 0.3844, 0.3568],
         [0.2360, 0.3695, 0.2254,  ..., 0.2129, 0.2029, 0.2303],
         [0.3065, 0.2102, 0.2067,  ..., 0.2129, 0.2029, 0.2065],
         [0.2288, 0.2102, 0.2988,  ..., 0.2129, 0.2099, 0.2065]],
        [[0.2659, 0.2759, 0.2439,  ..., 0.2364, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2683,  ..., 0.2658, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2439,  ..., 0.2615, 0.3221, 0.2638],
         [0.2447, 0.2414, 0.2439,  ..., 0.2364, 0.2260, 0.2454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2106, 0.2500, 0.2515,  ..., 0.2500, 0.1480, 0.2500],
         [0.2470, 0.2500, 0.2281,  ..., 0.2500, 0.1480, 0.2500],
         [0.3318, 0.2500, 0.2923,  ..., 0.2500, 0.5561, 0.2500],
         [0.2106, 0.2500, 0.2281,  ..., 0.2500, 0.1480, 0.2500]],
        [[0.2462, 0.2194, 0.1280,  ..., 0.1480, 0.4223, 0.2258],
         [0.1834, 0.2194, 0.1280,  ..., 0.4956, 0.1276, 0.2947],
         [0.3027, 0.3417, 0.4137,  ..., 0.2084, 0.0893, 0.1259],
         [0.2677, 0.2194, 0.3302,  ..., 0.1480, 0.3607, 0.3536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:19:30,315 [Process: 0] Synchronize training processes
2024-08-16 14:19:30,315 [Process: 0] Evaluating...
2024-08-16 14:19:30,317 [Process: 0] EPOCH 3:
2024-08-16 14:19:30,319 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2406, 0.2334, 0.2294,  ..., 0.2352, 0.2361, 0.2424],
         [0.2406, 0.2356, 0.2488,  ..., 0.2352, 0.2361, 0.2714],
         [0.2406, 0.2334, 0.2294,  ..., 0.2352, 0.2361, 0.2168],
         [0.2782, 0.2976, 0.2924,  ..., 0.2945, 0.2918, 0.2695]],
        [[0.2439, 0.2785, 0.2641,  ..., 0.2729, 0.2766, 0.2894],
         [0.2550, 0.2651, 0.2521,  ..., 0.2858, 0.2935, 0.2838],
         [0.2270, 0.2124, 0.2182,  ..., 0.1991, 0.1983, 0.1948],
         [0.2741, 0.2440, 0.2656,  ..., 0.2423, 0.2316, 0.2320]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3782, 0.3077, 0.2541,  ..., 0.5804, 0.2174, 0.3252],
         [0.2600, 0.2680, 0.2360,  ..., 0.1623, 0.2852, 0.2073],
         [0.1598, 0.1822, 0.2075,  ..., 0.1366, 0.2407, 0.2103],
         [0.2021, 0.2421, 0.3024,  ..., 0.1207, 0.2567, 0.2572]],
        [[0.2448, 0.2340, 0.2487,  ..., 0.2443, 0.2465, 0.2304],
         [0.2448, 0.2340, 0.2487,  ..., 0.2443, 0.2465, 0.2304],
         [0.2448, 0.2340, 0.2487,  ..., 0.2443, 0.2465, 0.2304],
         [0.2655, 0.2981, 0.2538,  ..., 0.2672, 0.2606, 0.3088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:19:32,298 [Process: 0] Synchronize training processes
2024-08-16 14:19:32,298 [Process: 0] Evaluating...
2024-08-16 14:19:32,300 [Process: 0] EPOCH 4:
2024-08-16 14:19:32,302 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2398, 0.2420, 0.2531,  ..., 0.2438, 0.2392, 0.2439],
         [0.2403, 0.2504, 0.2552,  ..., 0.2459, 0.2441, 0.2531],
         [0.2364, 0.2291, 0.2288,  ..., 0.2320, 0.2392, 0.2323],
         [0.2835, 0.2786, 0.2630,  ..., 0.2782, 0.2776, 0.2707]],
        [[0.2509, 0.2583, 0.2543,  ..., 0.2558, 0.2582, 0.2589],
         [0.2522, 0.2542, 0.2524,  ..., 0.2533, 0.2554, 0.2554],
         [0.2205, 0.2177, 0.2210,  ..., 0.2165, 0.2175, 0.2151],
         [0.2764, 0.2699, 0.2724,  ..., 0.2745, 0.2689, 0.2706]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3114, 0.2439, 0.2542,  ..., 0.2550, 0.2833, 0.2289],
         [0.2832, 0.3040, 0.3906,  ..., 0.2422, 0.2520, 0.2708],
         [0.1273, 0.1129, 0.1128,  ..., 0.1198, 0.1290, 0.1291],
         [0.2781, 0.3393, 0.2423,  ..., 0.3830, 0.3357, 0.3713]],
        [[0.2448, 0.2276, 0.1323,  ..., 0.1760, 0.1633, 0.1238],
         [0.2448, 0.2276, 0.1323,  ..., 0.1760, 0.1633, 0.1238],
         [0.2655, 0.3172, 0.6032,  ..., 0.4720, 0.5102, 0.6286],
         [0.2448, 0.2276, 0.1323,  ..., 0.1760, 0.1633, 0.1238]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:19:34,216 [Process: 0] Synchronize training processes
2024-08-16 14:19:34,216 [Process: 0] Evaluating...
2024-08-16 14:19:34,218 [Process: 0] EPOCH 5:
2024-08-16 14:19:34,220 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2373, 0.2385, 0.2437,  ..., 0.2385, 0.2418, 0.2418],
         [0.2522, 0.2461, 0.2487,  ..., 0.2495, 0.2517, 0.2484],
         [0.2223, 0.2227, 0.2226,  ..., 0.2253, 0.2233, 0.2238],
         [0.2882, 0.2926, 0.2850,  ..., 0.2867, 0.2832, 0.2860]],
        [[0.2372, 0.2421, 0.2509,  ..., 0.2465, 0.2410, 0.2407],
         [0.2465, 0.2461, 0.2428,  ..., 0.2462, 0.2431, 0.2454],
         [0.2253, 0.2276, 0.2248,  ..., 0.2278, 0.2267, 0.2253],
         [0.2910, 0.2842, 0.2815,  ..., 0.2794, 0.2892, 0.2886]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2246, 0.3103, 0.3330,  ..., 0.2702, 0.2725, 0.2809],
         [0.2682, 0.2589, 0.2646,  ..., 0.2826, 0.2878, 0.2463],
         [0.1065, 0.0972, 0.1398,  ..., 0.1275, 0.1120, 0.1060],
         [0.4007, 0.3336, 0.2625,  ..., 0.3197, 0.3277, 0.3668]],
        [[0.2034, 0.1866, 0.1265,  ..., 0.1822, 0.1896, 0.1927],
         [0.2034, 0.1866, 0.1265,  ..., 0.1822, 0.1896, 0.1927],
         [0.3898, 0.4401, 0.6205,  ..., 0.4535, 0.4313, 0.4220],
         [0.2034, 0.1866, 0.1265,  ..., 0.1822, 0.1896, 0.1927]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:19:36,153 [Process: 0] Synchronize training processes
2024-08-16 14:19:36,153 [Process: 0] Evaluating...
2024-08-16 14:19:36,155 [Process: 0] EPOCH 6:
2024-08-16 14:19:36,157 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2425, 0.2455, 0.2369,  ..., 0.2431, 0.2408, 0.2430],
         [0.2420, 0.2424, 0.2420,  ..., 0.2421, 0.2434, 0.2416],
         [0.2287, 0.2244, 0.2284,  ..., 0.2252, 0.2251, 0.2259],
         [0.2869, 0.2877, 0.2926,  ..., 0.2896, 0.2906, 0.2895]],
        [[0.2326, 0.2424, 0.2303,  ..., 0.2363, 0.2391, 0.2392],
         [0.2415, 0.2419, 0.2394,  ..., 0.2409, 0.2395, 0.2389],
         [0.2300, 0.2304, 0.2294,  ..., 0.2263, 0.2311, 0.2287],
         [0.2959, 0.2853, 0.3009,  ..., 0.2965, 0.2903, 0.2932]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1807, 0.1746, 0.1717,  ..., 0.0887, 0.2284, 0.2500],
         [0.1807, 0.1746, 0.1717,  ..., 0.0887, 0.2284, 0.2500],
         [0.4579, 0.4762, 0.4849,  ..., 0.7338, 0.3149, 0.2500],
         [0.1807, 0.1746, 0.1717,  ..., 0.0887, 0.2284, 0.2500]],
        [[0.2452, 0.3104, 0.3245,  ..., 0.2058, 0.3320, 0.2432],
         [0.2313, 0.2779, 0.2452,  ..., 0.2530, 0.2570, 0.2496],
         [0.1090, 0.1129, 0.1570,  ..., 0.1066, 0.1203, 0.2077],
         [0.4145, 0.2987, 0.2733,  ..., 0.4346, 0.2907, 0.2995]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:19:38,144 [Process: 0] Synchronize training processes
2024-08-16 14:19:38,144 [Process: 0] Evaluating...
2024-08-16 14:19:38,146 [Process: 0] EPOCH 7:
2024-08-16 14:19:38,148 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2289, 0.2298, 0.2321,  ..., 0.2349, 0.2244, 0.2287],
         [0.2369, 0.2378, 0.2385,  ..., 0.2391, 0.2392, 0.2381],
         [0.2289, 0.2259, 0.2251,  ..., 0.2221, 0.2226, 0.2251],
         [0.3054, 0.3064, 0.3043,  ..., 0.3039, 0.3138, 0.3081]],
        [[0.2346, 0.2351, 0.2333,  ..., 0.2386, 0.2371, 0.2367],
         [0.2370, 0.2361, 0.2378,  ..., 0.2352, 0.2396, 0.2356],
         [0.2289, 0.2272, 0.2238,  ..., 0.2273, 0.2269, 0.2291],
         [0.2995, 0.3016, 0.3051,  ..., 0.2989, 0.2964, 0.2985]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2283, 0.2202, 0.2088,  ..., 0.2208, 0.2422, 0.2185],
         [0.2350, 0.2282, 0.2339,  ..., 0.2373, 0.2319, 0.2321],
         [0.2283, 0.2202, 0.2088,  ..., 0.2173, 0.2319, 0.2105],
         [0.3084, 0.3315, 0.3484,  ..., 0.3246, 0.2940, 0.3389]],
        [[0.2414, 0.2429, 0.2448,  ..., 0.2393, 0.2478, 0.2491],
         [0.2414, 0.2429, 0.2448,  ..., 0.2393, 0.2478, 0.2491],
         [0.2414, 0.2429, 0.2448,  ..., 0.2393, 0.2478, 0.2491],
         [0.2759, 0.2712, 0.2657,  ..., 0.2820, 0.2566, 0.2526]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:19:40,075 [Process: 0] Synchronize training processes
2024-08-16 14:19:40,075 [Process: 0] Evaluating...
2024-08-16 14:19:40,077 [Process: 0] EPOCH 8:
2024-08-16 14:19:40,079 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2325, 0.2260, 0.2263,  ..., 0.2292, 0.2278, 0.2294],
         [0.2355, 0.2324, 0.2345,  ..., 0.2327, 0.2328, 0.2334],
         [0.2246, 0.2260, 0.2240,  ..., 0.2262, 0.2250, 0.2243],
         [0.3074, 0.3156, 0.3152,  ..., 0.3119, 0.3144, 0.3128]],
        [[0.2264, 0.2253, 0.2228,  ..., 0.2252, 0.2329, 0.2245],
         [0.2307, 0.2350, 0.2333,  ..., 0.2319, 0.2346, 0.2338],
         [0.2264, 0.2253, 0.2228,  ..., 0.2252, 0.2235, 0.2233],
         [0.3165, 0.3144, 0.3212,  ..., 0.3177, 0.3090, 0.3183]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2358, 0.1551, 0.0967,  ..., 0.1852, 0.2026, 0.1439],
         [0.2358, 0.1551, 0.0967,  ..., 0.1852, 0.2026, 0.1439],
         [0.2927, 0.5346, 0.7100,  ..., 0.4445, 0.3923, 0.5682],
         [0.2358, 0.1551, 0.0967,  ..., 0.1852, 0.2026, 0.1439]],
        [[0.2485, 0.1756, 0.2425,  ..., 0.2250, 0.1543, 0.1653],
         [0.2655, 0.2710, 0.2384,  ..., 0.2820, 0.2391, 0.2514],
         [0.1126, 0.0988, 0.0870,  ..., 0.1324, 0.1057, 0.1496],
         [0.3733, 0.4546, 0.4320,  ..., 0.3607, 0.5010, 0.4337]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:19:42,076 [Process: 0] Synchronize training processes
2024-08-16 14:19:42,076 [Process: 0] Evaluating...
2024-08-16 14:19:42,078 [Process: 0] EPOCH 9:
2024-08-16 14:19:42,080 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2211, 0.2219, 0.2239,  ..., 0.2193, 0.2231, 0.2215],
         [0.2283, 0.2277, 0.2279,  ..., 0.2287, 0.2262, 0.2297],
         [0.2211, 0.2219, 0.2232,  ..., 0.2193, 0.2231, 0.2215],
         [0.3294, 0.3286, 0.3251,  ..., 0.3327, 0.3276, 0.3274]],
        [[0.2212, 0.2210, 0.2223,  ..., 0.2229, 0.2215, 0.2230],
         [0.2263, 0.2313, 0.2295,  ..., 0.2283, 0.2257, 0.2320],
         [0.2212, 0.2208, 0.2223,  ..., 0.2229, 0.2215, 0.2230],
         [0.3314, 0.3269, 0.3259,  ..., 0.3258, 0.3313, 0.3220]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2202, 0.2171, 0.2185,  ..., 0.2170, 0.2105, 0.2183],
         [0.2202, 0.2171, 0.2188,  ..., 0.2170, 0.2121, 0.2186],
         [0.2202, 0.2171, 0.2185,  ..., 0.2170, 0.2105, 0.2183],
         [0.3394, 0.3486, 0.3442,  ..., 0.3490, 0.3668, 0.3448]],
        [[0.2554, 0.2607, 0.2545,  ..., 0.2658, 0.2427, 0.2447],
         [0.2269, 0.2298, 0.2358,  ..., 0.2330, 0.2302, 0.2306],
         [0.2269, 0.2298, 0.2358,  ..., 0.2330, 0.2302, 0.2306],
         [0.2907, 0.2796, 0.2738,  ..., 0.2682, 0.2968, 0.2940]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:19:44,091 [Process: 0] Synchronize training processes
2024-08-16 14:19:44,091 [Process: 0] Evaluating...
2024-08-16 14:19:44,093 [Process: 0] EPOCH 10:
2024-08-16 14:19:44,095 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2197, 0.2232, 0.2174,  ..., 0.2229, 0.2213, 0.2213],
         [0.2197, 0.2258, 0.2174,  ..., 0.2229, 0.2213, 0.2213],
         [0.2197, 0.2232, 0.2174,  ..., 0.2229, 0.2213, 0.2213],
         [0.3410, 0.3277, 0.3478,  ..., 0.3313, 0.3362, 0.3361]],
        [[0.2170, 0.2211, 0.2224,  ..., 0.2205, 0.2194, 0.2207],
         [0.2170, 0.2223, 0.2229,  ..., 0.2205, 0.2194, 0.2207],
         [0.2170, 0.2211, 0.2224,  ..., 0.2205, 0.2194, 0.2207],
         [0.3491, 0.3355, 0.3324,  ..., 0.3385, 0.3418, 0.3378]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1468, 0.1136, 0.1358,  ..., 0.0968, 0.1056, 0.0677],
         [0.2580, 0.2452, 0.2007,  ..., 0.1750, 0.2131, 0.1269],
         [0.1468, 0.2095, 0.1358,  ..., 0.3238, 0.1682, 0.4434],
         [0.4485, 0.4318, 0.5277,  ..., 0.4044, 0.5131, 0.3621]],
        [[0.4078, 0.2500, 0.4214,  ..., 0.4598, 0.4119, 0.2684],
         [0.1675, 0.2500, 0.1517,  ..., 0.1801, 0.1960, 0.2089],
         [0.2572, 0.2500, 0.2752,  ..., 0.1801, 0.1960, 0.3137],
         [0.1675, 0.2500, 0.1517,  ..., 0.1801, 0.1960, 0.2089]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 14:19:46,079 [Process: 0] Synchronize training processes
2024-08-16 14:19:46,079 [Process: 0] Evaluating...
2024-08-16 14:19:46,081 [Process: 0] EPOCH 11:
2024-08-16 14:19:46,083 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2117, 0.2168, 0.2103,  ..., 0.2149, 0.2152, 0.2141],
         [0.2157, 0.2168, 0.2134,  ..., 0.2149, 0.2177, 0.2158],
         [0.2117, 0.2168, 0.2103,  ..., 0.2149, 0.2152, 0.2141],
         [0.3610, 0.3495, 0.3661,  ..., 0.3552, 0.3519, 0.3560]],
        [[0.2188, 0.2161, 0.2165,  ..., 0.2150, 0.2174, 0.2158],
         [0.2212, 0.2179, 0.2180,  ..., 0.2150, 0.2174, 0.2158],
         [0.2188, 0.2161, 0.2165,  ..., 0.2150, 0.2174, 0.2158],
         [0.3413, 0.3499, 0.3491,  ..., 0.3550, 0.3477, 0.3525]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1262, 0.1572, 0.1188,  ..., 0.1460, 0.1843, 0.1602],
         [0.1973, 0.2025, 0.1708,  ..., 0.2242, 0.2699, 0.3094],
         [0.1262, 0.1794, 0.1188,  ..., 0.1460, 0.1235, 0.1341],
         [0.5503, 0.4610, 0.5915,  ..., 0.4839, 0.4223, 0.3963]],
        [[0.2012, 0.2738, 0.3402,  ..., 0.2634, 0.2461, 0.4964],
         [0.2012, 0.1230, 0.2007,  ..., 0.2201, 0.1586, 0.1554],
         [0.3963, 0.4803, 0.2584,  ..., 0.2965, 0.4366, 0.1927],
         [0.2012, 0.1230, 0.2007,  ..., 0.2201, 0.1586, 0.1554]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 14:19:47,998 [Process: 0] Synchronize training processes
2024-08-16 14:19:47,998 [Process: 0] Evaluating...
2024-08-16 14:19:48,007 [Process: 0] EPOCH 12:
2024-08-16 14:19:48,009 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.2127, 0.2108, 0.2122,  ..., 0.2118, 0.2124, 0.2130],
         [0.2127, 0.2108, 0.2122,  ..., 0.2118, 0.2124, 0.2130],
         [0.2127, 0.2108, 0.2122,  ..., 0.2118, 0.2124, 0.2130],
         [0.3620, 0.3675, 0.3635,  ..., 0.3645, 0.3628, 0.3610]],
        [[0.2101, 0.2067, 0.2168,  ..., 0.2115, 0.2114, 0.2113],
         [0.2101, 0.2067, 0.2168,  ..., 0.2115, 0.2114, 0.2113],
         [0.2101, 0.2067, 0.2168,  ..., 0.2115, 0.2114, 0.2113],
         [0.3698, 0.3800, 0.3496,  ..., 0.3655, 0.3658, 0.3660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1145, 0.1212, 0.1472,  ..., 0.1392, 0.1262, 0.1318],
         [0.1481, 0.1212, 0.1941,  ..., 0.2112, 0.2404, 0.1855],
         [0.1145, 0.1212, 0.1472,  ..., 0.1392, 0.1262, 0.1318],
         [0.6229, 0.6364, 0.5115,  ..., 0.5103, 0.5073, 0.5510]],
        [[0.5290, 0.3699, 0.3716,  ..., 0.3303, 0.2285, 0.2162],
         [0.1139, 0.1676, 0.1650,  ..., 0.1561, 0.2285, 0.2162],
         [0.2432, 0.2948, 0.2984,  ..., 0.3576, 0.3146, 0.3514],
         [0.1139, 0.1676, 0.1650,  ..., 0.1561, 0.2285, 0.2162]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2002, 0.2025, 0.2083,  ..., 0.2015, 0.2026, 0.2076],
         [0.2002, 0.2025, 0.2083,  ..., 0.2015, 0.2026, 0.2076],
         [0.2002, 0.2025, 0.2083,  ..., 0.2015, 0.2026, 0.2076],
         [0.3995, 0.3925, 0.3751,  ..., 0.3955, 0.3921, 0.3773]],
        [[0.2043, 0.2152, 0.2075,  ..., 0.2067, 0.2047, 0.2063],
         [0.2043, 0.2152, 0.2084,  ..., 0.2088, 0.2047, 0.2063],
         [0.2043, 0.2152, 0.2075,  ..., 0.2067, 0.2047, 0.2063],
         [0.3872, 0.3543, 0.3765,  ..., 0.3778, 0.3860, 0.3810]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:19:49,919 [Process: 0] Synchronize training processes
2024-08-16 14:19:49,920 [Process: 0] Evaluating...
2024-08-16 14:19:49,922 [Process: 0] EPOCH 13:
2024-08-16 14:19:49,924 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2085, 0.2305, 0.1566,  ..., 0.1255, 0.1449, 0.1552],
         [0.2085, 0.4673, 0.3380,  ..., 0.1255, 0.2277, 0.1552],
         [0.2085, 0.1156, 0.1566,  ..., 0.1255, 0.1449, 0.1552],
         [0.3744, 0.1866, 0.3487,  ..., 0.6235, 0.4824, 0.5345]],
        [[0.3291, 0.3345, 0.3354,  ..., 0.2152, 0.2383, 0.2252],
         [0.1624, 0.2218, 0.2347,  ..., 0.2152, 0.1828, 0.2252],
         [0.3461, 0.2218, 0.2562,  ..., 0.3543, 0.3962, 0.3244],
         [0.1624, 0.2218, 0.1737,  ..., 0.2152, 0.1828, 0.2252]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1985, 0.2063, 0.2006,  ..., 0.2009, 0.2010, 0.1998],
         [0.1985, 0.2063, 0.2006,  ..., 0.2009, 0.2010, 0.1998],
         [0.1985, 0.2063, 0.2006,  ..., 0.2009, 0.2010, 0.1998],
         [0.4045, 0.3811, 0.3982,  ..., 0.3972, 0.3970, 0.4006]],
        [[0.2002, 0.1973, 0.2056,  ..., 0.2045, 0.2079, 0.2006],
         [0.2002, 0.1973, 0.2056,  ..., 0.2045, 0.2079, 0.2006],
         [0.2002, 0.1973, 0.2056,  ..., 0.2045, 0.2079, 0.2006],
         [0.3995, 0.4082, 0.3833,  ..., 0.3864, 0.3764, 0.3981]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:19:51,943 [Process: 0] Synchronize training processes
2024-08-16 14:19:51,943 [Process: 0] Evaluating...
2024-08-16 14:19:51,945 [Process: 0] EPOCH 14:
2024-08-16 14:19:51,947 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1556, 0.1372, 0.1238,  ..., 0.0697, 0.1519, 0.1262],
         [0.3392, 0.1418, 0.1603,  ..., 0.0697, 0.1519, 0.2583],
         [0.1150, 0.1372, 0.3949,  ..., 0.0740, 0.1542, 0.1470],
         [0.3902, 0.5837, 0.3210,  ..., 0.7867, 0.5420, 0.4685]],
        [[0.3531, 0.2529, 0.3818,  ..., 0.4600, 0.2500, 0.3017],
         [0.2177, 0.3584, 0.2155,  ..., 0.2769, 0.2500, 0.2279],
         [0.2146, 0.1893, 0.2173,  ..., 0.1316, 0.2500, 0.2424],
         [0.2146, 0.1993, 0.1854,  ..., 0.1316, 0.2500, 0.2279]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2035, 0.2039, 0.2070,  ..., 0.2067, 0.2027, 0.1999],
         [0.2035, 0.2039, 0.2070,  ..., 0.2067, 0.2027, 0.1999],
         [0.2035, 0.2039, 0.2070,  ..., 0.2067, 0.2027, 0.1999],
         [0.3894, 0.3882, 0.3790,  ..., 0.3799, 0.3919, 0.4002]],
        [[0.2072, 0.2076, 0.2061,  ..., 0.2032, 0.2073, 0.2068],
         [0.2072, 0.2076, 0.2061,  ..., 0.2032, 0.2073, 0.2068],
         [0.2072, 0.2076, 0.2061,  ..., 0.2032, 0.2073, 0.2068],
         [0.3784, 0.3771, 0.3818,  ..., 0.3903, 0.3780, 0.3795]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:19:53,879 [Process: 0] Synchronize training processes
2024-08-16 14:19:53,880 [Process: 0] Evaluating...
2024-08-16 14:19:53,881 [Process: 0] EPOCH 15:
2024-08-16 14:19:53,883 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2330, 0.3624, 0.1255,  ..., 0.2473, 0.0203, 0.1259],
         [0.2330, 0.2125, 0.1255,  ..., 0.2473, 0.0203, 0.1738],
         [0.2330, 0.2125, 0.1255,  ..., 0.2473, 0.0203, 0.0976],
         [0.3011, 0.2125, 0.6234,  ..., 0.2580, 0.9391, 0.6027]],
        [[0.2514, 0.2500, 0.1778,  ..., 0.0859, 0.2038, 0.2017],
         [0.2125, 0.2500, 0.2094,  ..., 0.0859, 0.2038, 0.2503],
         [0.3214, 0.2500, 0.2196,  ..., 0.0859, 0.2698, 0.3836],
         [0.2148, 0.2500, 0.3931,  ..., 0.7424, 0.3227, 0.1644]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1954, 0.1961, 0.1989,  ..., 0.1943, 0.1997, 0.1974],
         [0.1954, 0.1961, 0.1989,  ..., 0.1943, 0.1997, 0.1974],
         [0.1954, 0.1961, 0.1989,  ..., 0.1943, 0.1997, 0.1974],
         [0.4138, 0.4118, 0.4032,  ..., 0.4172, 0.4009, 0.4078]],
        [[0.1970, 0.1974, 0.2014,  ..., 0.1988, 0.1936, 0.1921],
         [0.1970, 0.1974, 0.2014,  ..., 0.1988, 0.1936, 0.1921],
         [0.1970, 0.1974, 0.2014,  ..., 0.1988, 0.1936, 0.1921],
         [0.4091, 0.4077, 0.3959,  ..., 0.4035, 0.4191, 0.4237]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:19:55,787 [Process: 0] Synchronize training processes
2024-08-16 14:19:55,787 [Process: 0] Evaluating...
2024-08-16 14:19:55,789 [Process: 0] EPOCH 16:
2024-08-16 14:19:55,791 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1778, 0.1776, 0.1947,  ..., 0.1819, 0.2077, 0.0432],
         [0.1778, 0.1776, 0.1947,  ..., 0.1819, 0.2077, 0.0432],
         [0.1778, 0.1776, 0.1947,  ..., 0.1819, 0.2077, 0.8704],
         [0.4665, 0.4671, 0.4158,  ..., 0.4543, 0.3770, 0.0432]],
        [[0.2384, 0.3710, 0.3505,  ..., 0.3596, 0.2734, 0.2403],
         [0.2384, 0.2363, 0.2526,  ..., 0.2420, 0.2383, 0.2403],
         [0.2384, 0.1963, 0.1984,  ..., 0.1992, 0.2383, 0.2403],
         [0.2849, 0.1963, 0.1984,  ..., 0.1992, 0.2499, 0.2790]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1908, 0.1955, 0.1924,  ..., 0.1943, 0.1942, 0.1868],
         [0.1908, 0.1955, 0.1924,  ..., 0.1943, 0.1942, 0.1868],
         [0.1908, 0.1955, 0.1924,  ..., 0.1943, 0.1942, 0.1868],
         [0.4275, 0.4134, 0.4229,  ..., 0.4170, 0.4173, 0.4397]],
        [[0.1912, 0.1947, 0.1863,  ..., 0.1914, 0.1946, 0.1838],
         [0.1912, 0.1947, 0.1863,  ..., 0.1914, 0.1946, 0.1838],
         [0.1912, 0.1947, 0.1863,  ..., 0.1914, 0.1946, 0.1838],
         [0.4263, 0.4159, 0.4412,  ..., 0.4257, 0.4163, 0.4486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:19:57,675 [Process: 0] Synchronize training processes
2024-08-16 14:19:57,676 [Process: 0] Evaluating...
2024-08-16 14:19:57,678 [Process: 0] EPOCH 17:
2024-08-16 14:19:57,680 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2616, 0.2415, 0.2889,  ..., 0.2469, 0.2296, 0.2525],
         [0.3804, 0.3008, 0.2304,  ..., 0.1790, 0.2657, 0.2162],
         [0.1790, 0.2289, 0.2939,  ..., 0.4176, 0.3513, 0.3963],
         [0.1790, 0.2289, 0.1868,  ..., 0.1566, 0.1533, 0.1350]],
        [[0.1360, 0.1158, 0.1333,  ..., 0.1218, 0.1575, 0.1062],
         [0.1360, 0.1158, 0.1333,  ..., 0.1218, 0.1575, 0.1062],
         [0.1360, 0.1158, 0.1333,  ..., 0.1218, 0.1575, 0.1062],
         [0.5919, 0.6527, 0.6002,  ..., 0.6347, 0.5275, 0.6814]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1970, 0.1848, 0.1873,  ..., 0.1949, 0.1932, 0.1972],
         [0.1970, 0.1848, 0.1873,  ..., 0.1949, 0.1932, 0.1972],
         [0.1970, 0.1848, 0.1873,  ..., 0.1949, 0.1932, 0.1972],
         [0.4089, 0.4456, 0.4380,  ..., 0.4153, 0.4204, 0.4083]],
        [[0.1902, 0.1966, 0.1795,  ..., 0.1919, 0.1872, 0.1815],
         [0.1902, 0.1966, 0.1795,  ..., 0.1919, 0.1872, 0.1815],
         [0.1902, 0.1966, 0.1795,  ..., 0.1919, 0.1872, 0.1815],
         [0.4293, 0.4101, 0.4614,  ..., 0.4242, 0.4383, 0.4554]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:19:59,556 [Process: 0] Synchronize training processes
2024-08-16 14:19:59,557 [Process: 0] Evaluating...
2024-08-16 14:19:59,558 [Process: 0] EPOCH 18:
2024-08-16 14:19:59,560 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3268, 0.3128, 0.3327,  ..., 0.3303, 0.3562, 0.3842],
         [0.2552, 0.2434, 0.3027,  ..., 0.2726, 0.2687, 0.2440],
         [0.2090, 0.2369, 0.1823,  ..., 0.2041, 0.1875, 0.2154],
         [0.2090, 0.2069, 0.1823,  ..., 0.1929, 0.1875, 0.1564]],
        [[0.1113, 0.1163, 0.0901,  ..., 0.1123, 0.0992, 0.1234],
         [0.1113, 0.1163, 0.0901,  ..., 0.1123, 0.0992, 0.1234],
         [0.1113, 0.1163, 0.0901,  ..., 0.1123, 0.0992, 0.1234],
         [0.6660, 0.6510, 0.7298,  ..., 0.6631, 0.7024, 0.6297]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1753, 0.1769, 0.1723,  ..., 0.1803, 0.1735, 0.1905],
         [0.1753, 0.1769, 0.1723,  ..., 0.1803, 0.1735, 0.1905],
         [0.1753, 0.1769, 0.1723,  ..., 0.1803, 0.1735, 0.1905],
         [0.4741, 0.4692, 0.4831,  ..., 0.4592, 0.4795, 0.4286]],
        [[0.1925, 0.1840, 0.1899,  ..., 0.1892, 0.1907, 0.1994],
         [0.1925, 0.1840, 0.1899,  ..., 0.1892, 0.1907, 0.1994],
         [0.1925, 0.1840, 0.1899,  ..., 0.1892, 0.1907, 0.1994],
         [0.4224, 0.4479, 0.4302,  ..., 0.4325, 0.4278, 0.4019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:01,443 [Process: 0] Synchronize training processes
2024-08-16 14:20:01,444 [Process: 0] Evaluating...
2024-08-16 14:20:01,446 [Process: 0] EPOCH 19:
2024-08-16 14:20:01,448 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2499, 0.2656, 0.2719,  ..., 0.2624, 0.2886, 0.2451],
         [0.1820, 0.3272, 0.2048,  ..., 0.3186, 0.2083, 0.1649],
         [0.3861, 0.2601, 0.3185,  ..., 0.2470, 0.3422, 0.4252],
         [0.1820, 0.1470, 0.2048,  ..., 0.1720, 0.1608, 0.1649]],
        [[0.1182, 0.1264, 0.1344,  ..., 0.1382, 0.1257, 0.1059],
         [0.1182, 0.1264, 0.2292,  ..., 0.1382, 0.1257, 0.1059],
         [0.1182, 0.1264, 0.1344,  ..., 0.1382, 0.1257, 0.1059],
         [0.6454, 0.6208, 0.5020,  ..., 0.5853, 0.6228, 0.6823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1835, 0.1978, 0.1788,  ..., 0.1867, 0.1755, 0.1897],
         [0.1835, 0.1978, 0.1788,  ..., 0.1867, 0.1755, 0.1897],
         [0.1835, 0.1978, 0.1788,  ..., 0.1867, 0.1755, 0.1897],
         [0.4495, 0.4067, 0.4637,  ..., 0.4398, 0.4736, 0.4308]],
        [[0.1800, 0.1982, 0.1983,  ..., 0.1833, 0.1859, 0.1782],
         [0.1800, 0.1982, 0.1983,  ..., 0.1833, 0.1859, 0.1782],
         [0.1800, 0.1982, 0.1983,  ..., 0.1833, 0.1859, 0.1782],
         [0.4600, 0.4055, 0.4052,  ..., 0.4501, 0.4424, 0.4655]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:03,339 [Process: 0] Synchronize training processes
2024-08-16 14:20:03,339 [Process: 0] Evaluating...
2024-08-16 14:20:03,341 [Process: 0] EPOCH 20:
2024-08-16 14:20:03,343 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2586, 0.3045, 0.2570,  ..., 0.2177, 0.3139, 0.2575],
         [0.1886, 0.1989, 0.1631,  ..., 0.1765, 0.1777, 0.2278],
         [0.3641, 0.3188, 0.4167,  ..., 0.4292, 0.3308, 0.2868],
         [0.1886, 0.1778, 0.1631,  ..., 0.1765, 0.1777, 0.2278]],
        [[0.1191, 0.1124, 0.1019,  ..., 0.1167, 0.0909, 0.1114],
         [0.1191, 0.1124, 0.1019,  ..., 0.3113, 0.0909, 0.1114],
         [0.1191, 0.1124, 0.1019,  ..., 0.1167, 0.0909, 0.1114],
         [0.6426, 0.6629, 0.6944,  ..., 0.4553, 0.7274, 0.6657]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1716, 0.1779, 0.1879,  ..., 0.1950, 0.1994, 0.1803],
         [0.1716, 0.1779, 0.1879,  ..., 0.1950, 0.1994, 0.1803],
         [0.1716, 0.1779, 0.1879,  ..., 0.1950, 0.1994, 0.1803],
         [0.4851, 0.4664, 0.4364,  ..., 0.4151, 0.4018, 0.4590]],
        [[0.1836, 0.1902, 0.1844,  ..., 0.1866, 0.1896, 0.1819],
         [0.1836, 0.1902, 0.1844,  ..., 0.1866, 0.1896, 0.1819],
         [0.1836, 0.1902, 0.1844,  ..., 0.1866, 0.1896, 0.1819],
         [0.4493, 0.4293, 0.4469,  ..., 0.4402, 0.4311, 0.4542]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:05,215 [Process: 0] Synchronize training processes
2024-08-16 14:20:05,216 [Process: 0] Evaluating...
2024-08-16 14:20:05,218 [Process: 0] EPOCH 21:
2024-08-16 14:20:05,219 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1238, 0.1046, 0.1292,  ..., 0.1087, 0.1421, 0.1093],
         [0.1330, 0.1046, 0.1292,  ..., 0.1087, 0.1560, 0.1093],
         [0.1238, 0.1046, 0.1292,  ..., 0.1087, 0.1421, 0.1093],
         [0.6194, 0.6861, 0.6124,  ..., 0.6739, 0.5597, 0.6722]],
        [[0.3809, 0.2399, 0.2925,  ..., 0.2929, 0.2702, 0.2392],
         [0.1934, 0.2399, 0.2046,  ..., 0.1527, 0.2031, 0.1660],
         [0.2696, 0.2803, 0.2984,  ..., 0.4017, 0.3237, 0.4288],
         [0.1561, 0.2399, 0.2046,  ..., 0.1527, 0.2031, 0.1660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1853, 0.1731, 0.1709,  ..., 0.1867, 0.1763, 0.1638],
         [0.1853, 0.1731, 0.1709,  ..., 0.1867, 0.1763, 0.1638],
         [0.1853, 0.1731, 0.1709,  ..., 0.1867, 0.1763, 0.1638],
         [0.4441, 0.4808, 0.4872,  ..., 0.4398, 0.4710, 0.5085]],
        [[0.1958, 0.1910, 0.1733,  ..., 0.1771, 0.1967, 0.1793],
         [0.1958, 0.1910, 0.1733,  ..., 0.1771, 0.1967, 0.1793],
         [0.1958, 0.1910, 0.1733,  ..., 0.1771, 0.1967, 0.1793],
         [0.4125, 0.4270, 0.4802,  ..., 0.4687, 0.4099, 0.4620]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:20:07,108 [Process: 0] Synchronize training processes
2024-08-16 14:20:07,108 [Process: 0] Evaluating...
2024-08-16 14:20:07,116 [Process: 0] EPOCH 22:
2024-08-16 14:20:07,118 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2343, 0.3193, 0.2799,  ..., 0.2827, 0.2980, 0.2575],
         [0.2046, 0.1707, 0.2009,  ..., 0.1361, 0.3116, 0.1562],
         [0.3565, 0.3393, 0.3182,  ..., 0.4451, 0.2102, 0.4302],
         [0.2046, 0.1707, 0.2009,  ..., 0.1361, 0.1802, 0.1562]],
        [[0.1083, 0.1236, 0.1085,  ..., 0.1230, 0.1497, 0.0900],
         [0.1344, 0.1236, 0.1317,  ..., 0.1230, 0.1643, 0.0900],
         [0.1083, 0.1236, 0.1085,  ..., 0.1230, 0.1497, 0.0900],
         [0.6491, 0.6293, 0.6513,  ..., 0.6311, 0.5363, 0.7300]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1662, 0.1610, 0.1549,  ..., 0.1772, 0.1830, 0.1802],
         [0.1662, 0.1610, 0.1549,  ..., 0.1772, 0.1830, 0.1802],
         [0.1662, 0.1610, 0.1549,  ..., 0.1772, 0.1830, 0.1802],
         [0.5015, 0.5170, 0.5353,  ..., 0.4684, 0.4509, 0.4594]],
        [[0.1623, 0.1721, 0.1778,  ..., 0.1692, 0.1629, 0.1842],
         [0.1623, 0.1721, 0.1778,  ..., 0.1692, 0.1629, 0.1842],
         [0.1623, 0.1721, 0.1778,  ..., 0.1692, 0.1629, 0.1842],
         [0.5130, 0.4837, 0.4665,  ..., 0.4924, 0.5113, 0.4475]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2893, 0.2443, 0.2273,  ..., 0.2522, 0.2617, 0.2688],
         [0.1982, 0.2276, 0.2273,  ..., 0.1748, 0.2089, 0.1762],
         [0.3143, 0.3006, 0.3180,  ..., 0.3982, 0.3205, 0.3788],
         [0.1982, 0.2276, 0.2273,  ..., 0.1748, 0.2089, 0.1762]],
        [[0.0987, 0.1349, 0.1266,  ..., 0.0850, 0.1082, 0.0780],
         [0.0987, 0.1349, 0.1266,  ..., 0.0850, 0.1082, 0.0780],
         [0.0987, 0.1349, 0.1266,  ..., 0.0850, 0.1082, 0.0780],
         [0.7039, 0.5953, 0.6202,  ..., 0.7451, 0.6755, 0.7659]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:08,991 [Process: 0] Synchronize training processes
2024-08-16 14:20:08,992 [Process: 0] Evaluating...
2024-08-16 14:20:08,994 [Process: 0] EPOCH 23:
2024-08-16 14:20:08,996 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1508, 0.1769, 0.1607,  ..., 0.1627, 0.1844, 0.1842],
         [0.1508, 0.1769, 0.1607,  ..., 0.1627, 0.1844, 0.1842],
         [0.1508, 0.1769, 0.1607,  ..., 0.1627, 0.1844, 0.1842],
         [0.5475, 0.4693, 0.5179,  ..., 0.5118, 0.4469, 0.4475]],
        [[0.1963, 0.1645, 0.1785,  ..., 0.1732, 0.1697, 0.1717],
         [0.1963, 0.1645, 0.1785,  ..., 0.1732, 0.1697, 0.1717],
         [0.1963, 0.1645, 0.1785,  ..., 0.1732, 0.1697, 0.1717],
         [0.4112, 0.5066, 0.4646,  ..., 0.4805, 0.4908, 0.4848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2839, 0.3004, 0.2658,  ..., 0.2699, 0.2631, 0.3208],
         [0.2382, 0.1959, 0.1705,  ..., 0.3815, 0.2977, 0.2217],
         [0.2953, 0.3079, 0.4422,  ..., 0.1983, 0.2262, 0.2358],
         [0.1826, 0.1959, 0.1216,  ..., 0.1504, 0.2131, 0.2217]],
        [[0.1063, 0.1299, 0.1058,  ..., 0.1165, 0.1181, 0.1358],
         [0.1063, 0.1299, 0.1058,  ..., 0.1165, 0.1181, 0.1358],
         [0.1063, 0.1299, 0.1058,  ..., 0.1165, 0.1181, 0.1358],
         [0.6812, 0.6102, 0.6826,  ..., 0.6505, 0.6456, 0.5925]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:20:10,880 [Process: 0] Synchronize training processes
2024-08-16 14:20:10,880 [Process: 0] Evaluating...
2024-08-16 14:20:10,882 [Process: 0] EPOCH 24:
2024-08-16 14:20:10,884 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:20:12,761 [Process: 0] Synchronize training processes
2024-08-16 14:20:12,761 [Process: 0] Evaluating...
2024-08-16 14:20:12,763 [Process: 0] EPOCH 25:
2024-08-16 14:20:12,765 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1722, 0.1652, 0.1796,  ..., 0.1700, 0.1817, 0.1779],
         [0.1722, 0.1652, 0.1796,  ..., 0.1700, 0.1817, 0.1779],
         [0.1722, 0.1652, 0.1796,  ..., 0.1700, 0.1817, 0.1779],
         [0.4835, 0.5044, 0.4611,  ..., 0.4899, 0.4548, 0.4664]],
        [[0.1666, 0.1692, 0.1695,  ..., 0.1710, 0.1800, 0.1590],
         [0.1666, 0.1692, 0.1695,  ..., 0.1710, 0.1800, 0.1590],
         [0.1666, 0.1692, 0.1695,  ..., 0.1710, 0.1800, 0.1590],
         [0.5001, 0.4923, 0.4915,  ..., 0.4869, 0.4599, 0.5229]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1056, 0.1158, 0.0992,  ..., 0.1359, 0.0953, 0.0834],
         [0.1056, 0.1158, 0.0992,  ..., 0.1359, 0.0953, 0.0834],
         [0.1056, 0.1158, 0.1085,  ..., 0.1359, 0.0953, 0.0834],
         [0.6831, 0.6525, 0.6930,  ..., 0.5922, 0.7140, 0.7499]],
        [[0.2272, 0.2601, 0.2716,  ..., 0.2457, 0.2769, 0.2479],
         [0.1345, 0.2228, 0.1583,  ..., 0.1749, 0.2267, 0.1955],
         [0.5039, 0.3321, 0.4119,  ..., 0.4044, 0.2698, 0.3611],
         [0.1345, 0.1849, 0.1583,  ..., 0.1749, 0.2267, 0.1955]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:20:14,658 [Process: 0] Synchronize training processes
2024-08-16 14:20:14,658 [Process: 0] Evaluating...
2024-08-16 14:20:14,660 [Process: 0] EPOCH 26:
2024-08-16 14:20:14,662 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1736, 0.1639, 0.1639,  ..., 0.1663, 0.1712, 0.1809],
         [0.1736, 0.1639, 0.1639,  ..., 0.1663, 0.1712, 0.1809],
         [0.1736, 0.1639, 0.1639,  ..., 0.1663, 0.1712, 0.1809],
         [0.4791, 0.5084, 0.5082,  ..., 0.5012, 0.4863, 0.4573]],
        [[0.1662, 0.1599, 0.1615,  ..., 0.1680, 0.1655, 0.1628],
         [0.1662, 0.1599, 0.1615,  ..., 0.1680, 0.1655, 0.1628],
         [0.1662, 0.1599, 0.1615,  ..., 0.1680, 0.1655, 0.1628],
         [0.5015, 0.5204, 0.5156,  ..., 0.4959, 0.5034, 0.5116]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2499, 0.2956, 0.2490,  ..., 0.2904, 0.2854, 0.3608],
         [0.1844, 0.3504, 0.3064,  ..., 0.3702, 0.2382, 0.2263],
         [0.3946, 0.1770, 0.2223,  ..., 0.1851, 0.2382, 0.2291],
         [0.1711, 0.1770, 0.2223,  ..., 0.1543, 0.2382, 0.1839]],
        [[0.0916, 0.1308, 0.0926,  ..., 0.1175, 0.0812, 0.1229],
         [0.0916, 0.1308, 0.0926,  ..., 0.1175, 0.0812, 0.1229],
         [0.0916, 0.1308, 0.0926,  ..., 0.1175, 0.0812, 0.1229],
         [0.7253, 0.6075, 0.7223,  ..., 0.6475, 0.7565, 0.6312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:20:16,538 [Process: 0] Synchronize training processes
2024-08-16 14:20:16,539 [Process: 0] Evaluating...
2024-08-16 14:20:16,540 [Process: 0] EPOCH 27:
2024-08-16 14:20:16,542 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1726, 0.1661, 0.1647,  ..., 0.1846, 0.1703, 0.1683],
         [0.1726, 0.1661, 0.1647,  ..., 0.1846, 0.1703, 0.1683],
         [0.1726, 0.1661, 0.1647,  ..., 0.1846, 0.1703, 0.1683],
         [0.4822, 0.5017, 0.5060,  ..., 0.4461, 0.4891, 0.4952]],
        [[0.1663, 0.1526, 0.1436,  ..., 0.1688, 0.1803, 0.1717],
         [0.1663, 0.1526, 0.1436,  ..., 0.1688, 0.1803, 0.1717],
         [0.1663, 0.1526, 0.1436,  ..., 0.1688, 0.1803, 0.1717],
         [0.5010, 0.5421, 0.5692,  ..., 0.4937, 0.4591, 0.4849]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3064, 0.3060, 0.2895,  ..., 0.2274, 0.2808, 0.2331],
         [0.2172, 0.2313, 0.1868,  ..., 0.3973, 0.2795, 0.2331],
         [0.3629, 0.2313, 0.3470,  ..., 0.1876, 0.2198, 0.2331],
         [0.1135, 0.2313, 0.1767,  ..., 0.1876, 0.2198, 0.3007]],
        [[0.0979, 0.0899, 0.1187,  ..., 0.1113, 0.0926, 0.0963],
         [0.0979, 0.0899, 0.1187,  ..., 0.1113, 0.0926, 0.0963],
         [0.0979, 0.0899, 0.1187,  ..., 0.1113, 0.0926, 0.0963],
         [0.7062, 0.7304, 0.6440,  ..., 0.6660, 0.7221, 0.7112]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:20:18,422 [Process: 0] Synchronize training processes
2024-08-16 14:20:18,422 [Process: 0] Evaluating...
2024-08-16 14:20:18,424 [Process: 0] EPOCH 28:
2024-08-16 14:20:18,426 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1423, 0.1538, 0.1337,  ..., 0.1463, 0.1411, 0.1578],
         [0.1423, 0.1538, 0.1337,  ..., 0.1463, 0.1411, 0.1578],
         [0.1423, 0.1538, 0.1337,  ..., 0.1463, 0.1411, 0.1578],
         [0.5731, 0.5386, 0.5988,  ..., 0.5610, 0.5768, 0.5266]],
        [[0.1788, 0.1757, 0.1888,  ..., 0.1864, 0.1859, 0.1961],
         [0.1788, 0.1757, 0.1888,  ..., 0.1864, 0.1859, 0.1961],
         [0.1788, 0.1757, 0.1888,  ..., 0.1864, 0.1859, 0.1961],
         [0.4636, 0.4730, 0.4337,  ..., 0.4407, 0.4423, 0.4118]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0903, 0.1124, 0.0909,  ..., 0.1065, 0.0883, 0.1224],
         [0.0903, 0.1124, 0.0909,  ..., 0.1065, 0.0883, 0.1224],
         [0.0903, 0.1124, 0.1141,  ..., 0.1065, 0.0883, 0.1224],
         [0.7290, 0.6628, 0.7042,  ..., 0.6804, 0.7351, 0.6329]],
        [[0.3296, 0.2550, 0.2451,  ..., 0.3193, 0.2357, 0.3060],
         [0.3367, 0.3005, 0.2312,  ..., 0.2597, 0.1683, 0.3297],
         [0.1669, 0.2222, 0.3671,  ..., 0.2163, 0.4277, 0.1822],
         [0.1669, 0.2222, 0.1566,  ..., 0.2046, 0.1683, 0.1822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:20:20,322 [Process: 0] Synchronize training processes
2024-08-16 14:20:20,322 [Process: 0] Evaluating...
2024-08-16 14:20:20,324 [Process: 0] EPOCH 29:
2024-08-16 14:20:20,326 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1541, 0.1523, 0.1608,  ..., 0.1536, 0.1674, 0.1584],
         [0.1541, 0.1523, 0.1608,  ..., 0.1536, 0.1674, 0.1584],
         [0.1541, 0.1523, 0.1608,  ..., 0.1536, 0.1674, 0.1584],
         [0.5376, 0.5432, 0.5175,  ..., 0.5393, 0.4977, 0.5248]],
        [[0.1639, 0.1608, 0.1778,  ..., 0.1612, 0.1585, 0.1688],
         [0.1639, 0.1608, 0.1778,  ..., 0.1612, 0.1585, 0.1688],
         [0.1639, 0.1608, 0.1778,  ..., 0.1612, 0.1585, 0.1688],
         [0.5084, 0.5176, 0.4665,  ..., 0.5165, 0.5245, 0.4936]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2747, 0.2928, 0.2870,  ..., 0.2757, 0.3214, 0.2148],
         [0.2407, 0.2226, 0.2439,  ..., 0.3546, 0.3229, 0.2397],
         [0.2438, 0.2672, 0.2345,  ..., 0.1848, 0.1778, 0.4034],
         [0.2407, 0.2175, 0.2345,  ..., 0.1848, 0.1778, 0.1421]],
        [[0.0980, 0.0876, 0.1099,  ..., 0.1003, 0.0990, 0.0955],
         [0.0980, 0.0876, 0.1099,  ..., 0.1003, 0.0990, 0.0955],
         [0.0980, 0.0876, 0.1356,  ..., 0.1003, 0.0990, 0.0955],
         [0.7059, 0.7371, 0.6446,  ..., 0.6992, 0.7029, 0.7134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:20:22,203 [Process: 0] Synchronize training processes
2024-08-16 14:20:22,204 [Process: 0] Evaluating...
2024-08-16 14:20:22,205 [Process: 0] EPOCH 30:
2024-08-16 14:20:22,207 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2141, 0.1943, 0.2021,  ..., 0.2035, 0.1944, 0.2388],
         [0.2141, 0.1943, 0.2021,  ..., 0.2035, 0.1944, 0.2357],
         [0.2141, 0.1943, 0.2021,  ..., 0.2035, 0.1944, 0.2357],
         [0.3576, 0.4171, 0.3937,  ..., 0.3896, 0.4168, 0.2897]],
        [[0.1083, 0.1103, 0.1211,  ..., 0.1243, 0.1136, 0.1195],
         [0.1083, 0.1103, 0.1211,  ..., 0.1243, 0.1136, 0.1195],
         [0.1083, 0.1103, 0.1211,  ..., 0.1243, 0.1136, 0.1195],
         [0.6752, 0.6691, 0.6366,  ..., 0.6272, 0.6591, 0.6415]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2399, 0.2660, 0.3326,  ..., 0.2890, 0.2725, 0.2340],
         [0.3345, 0.2447, 0.2459,  ..., 0.3101, 0.3330, 0.1656],
         [0.2128, 0.2447, 0.2107,  ..., 0.2005, 0.1972, 0.4654],
         [0.2128, 0.2447, 0.2107,  ..., 0.2005, 0.1972, 0.1349]],
        [[0.0914, 0.0776, 0.0879,  ..., 0.1061, 0.0961, 0.0916],
         [0.0914, 0.0776, 0.0879,  ..., 0.1061, 0.0961, 0.0916],
         [0.0914, 0.0776, 0.0879,  ..., 0.1061, 0.1316, 0.0916],
         [0.7259, 0.7671, 0.7364,  ..., 0.6816, 0.6761, 0.7252]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1549, 0.1596, 0.1513,  ..., 0.1534, 0.1434, 0.1598],
         [0.1549, 0.1596, 0.1513,  ..., 0.1534, 0.1434, 0.1598],
         [0.1549, 0.1596, 0.1513,  ..., 0.1534, 0.1434, 0.1598],
         [0.5354, 0.5212, 0.5462,  ..., 0.5397, 0.5699, 0.5205]],
        [[0.1649, 0.1657, 0.1678,  ..., 0.1762, 0.1612, 0.1639],
         [0.1649, 0.1657, 0.1678,  ..., 0.1762, 0.1612, 0.1639],
         [0.1649, 0.1657, 0.1678,  ..., 0.1762, 0.1612, 0.1639],
         [0.5052, 0.5028, 0.4967,  ..., 0.4714, 0.5164, 0.5083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:24,082 [Process: 0] Synchronize training processes
2024-08-16 14:20:24,083 [Process: 0] Evaluating...
2024-08-16 14:20:24,084 [Process: 0] EPOCH 31:
2024-08-16 14:20:24,086 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2626, 0.3113, 0.2695,  ..., 0.3032, 0.2821, 0.2717],
         [0.2604, 0.2162, 0.2851,  ..., 0.1889, 0.2473, 0.2025],
         [0.2385, 0.2819, 0.2227,  ..., 0.3190, 0.2787, 0.3821],
         [0.2385, 0.1905, 0.2227,  ..., 0.1889, 0.1920, 0.1437]],
        [[0.0870, 0.0863, 0.1043,  ..., 0.1053, 0.0994, 0.0864],
         [0.0870, 0.0863, 0.1043,  ..., 0.1053, 0.0994, 0.0864],
         [0.0870, 0.0863, 0.1043,  ..., 0.1053, 0.0994, 0.0864],
         [0.7389, 0.7412, 0.6870,  ..., 0.6840, 0.7018, 0.7407]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1487, 0.1455, 0.1544,  ..., 0.1468, 0.1467, 0.1478],
         [0.1487, 0.1455, 0.1544,  ..., 0.1468, 0.1467, 0.1478],
         [0.1487, 0.1455, 0.1544,  ..., 0.1468, 0.1467, 0.1478],
         [0.5538, 0.5634, 0.5369,  ..., 0.5597, 0.5599, 0.5565]],
        [[0.1575, 0.1621, 0.1638,  ..., 0.1747, 0.1680, 0.1644],
         [0.1575, 0.1621, 0.1638,  ..., 0.1747, 0.1680, 0.1644],
         [0.1575, 0.1621, 0.1638,  ..., 0.1747, 0.1680, 0.1644],
         [0.5275, 0.5138, 0.5085,  ..., 0.4759, 0.4961, 0.5069]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:25,964 [Process: 0] Synchronize training processes
2024-08-16 14:20:25,964 [Process: 0] Evaluating...
2024-08-16 14:20:25,972 [Process: 0] EPOCH 32:
2024-08-16 14:20:25,974 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2946, 0.3032, 0.3112,  ..., 0.2593, 0.3079, 0.2958],
         [0.1985, 0.2782, 0.2474,  ..., 0.2134, 0.3018, 0.2878],
         [0.3519, 0.2410, 0.2207,  ..., 0.3774, 0.1977, 0.2082],
         [0.1549, 0.1777, 0.2207,  ..., 0.1500, 0.1926, 0.2082]],
        [[0.0838, 0.0868, 0.0853,  ..., 0.0851, 0.0935, 0.0949],
         [0.0838, 0.0868, 0.0853,  ..., 0.0851, 0.0935, 0.0949],
         [0.0838, 0.0868, 0.0853,  ..., 0.0851, 0.0935, 0.0949],
         [0.7485, 0.7397, 0.7441,  ..., 0.7447, 0.7195, 0.7154]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1491, 0.1623, 0.1527,  ..., 0.1503, 0.1470, 0.1414],
         [0.1491, 0.1623, 0.1527,  ..., 0.1503, 0.1470, 0.1414],
         [0.1491, 0.1623, 0.1527,  ..., 0.1503, 0.1470, 0.1414],
         [0.5527, 0.5130, 0.5418,  ..., 0.5492, 0.5590, 0.5758]],
        [[0.1537, 0.1586, 0.1478,  ..., 0.1475, 0.1574, 0.1557],
         [0.1537, 0.1586, 0.1478,  ..., 0.1475, 0.1574, 0.1557],
         [0.1537, 0.1586, 0.1478,  ..., 0.1475, 0.1574, 0.1557],
         [0.5390, 0.5241, 0.5566,  ..., 0.5574, 0.5278, 0.5329]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:27,853 [Process: 0] Synchronize training processes
2024-08-16 14:20:27,853 [Process: 0] Evaluating...
2024-08-16 14:20:27,855 [Process: 0] EPOCH 33:
2024-08-16 14:20:27,857 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0617, 0.0952, 0.0945,  ..., 0.0854, 0.0752, 0.0803],
         [0.0617, 0.0952, 0.0945,  ..., 0.0854, 0.0752, 0.0803],
         [0.0617, 0.0952, 0.0945,  ..., 0.0854, 0.0752, 0.0803],
         [0.8149, 0.7144, 0.7164,  ..., 0.7437, 0.7743, 0.7591]],
        [[0.3095, 0.3006, 0.2500,  ..., 0.2743, 0.2713, 0.2692],
         [0.2131, 0.2204, 0.2500,  ..., 0.2163, 0.2000, 0.3247],
         [0.3053, 0.3087, 0.2500,  ..., 0.2931, 0.3397, 0.2031],
         [0.1721, 0.1704, 0.2500,  ..., 0.2163, 0.1891, 0.2031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1332, 0.1219, 0.1316,  ..., 0.1162, 0.1307, 0.1177],
         [0.1332, 0.1219, 0.1316,  ..., 0.1162, 0.1307, 0.1177],
         [0.1332, 0.1219, 0.1316,  ..., 0.1162, 0.1307, 0.1177],
         [0.6004, 0.6343, 0.6051,  ..., 0.6514, 0.6079, 0.6470]],
        [[0.1851, 0.1783, 0.1656,  ..., 0.1877, 0.1836, 0.1813],
         [0.1851, 0.1783, 0.1656,  ..., 0.1877, 0.1836, 0.1813],
         [0.1851, 0.1783, 0.1656,  ..., 0.1877, 0.1836, 0.1813],
         [0.4446, 0.4651, 0.5032,  ..., 0.4370, 0.4492, 0.4560]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:29,726 [Process: 0] Synchronize training processes
2024-08-16 14:20:29,726 [Process: 0] Evaluating...
2024-08-16 14:20:29,728 [Process: 0] EPOCH 34:
2024-08-16 14:20:29,730 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0748, 0.0858, 0.0842,  ..., 0.0815, 0.0817, 0.0810],
         [0.0748, 0.0858, 0.0842,  ..., 0.0815, 0.0817, 0.0810],
         [0.0748, 0.0858, 0.0842,  ..., 0.0815, 0.0817, 0.1084],
         [0.7755, 0.7426, 0.7474,  ..., 0.7555, 0.7550, 0.7295]],
        [[0.2767, 0.2474, 0.3107,  ..., 0.3247, 0.2695, 0.2875],
         [0.2411, 0.2241, 0.2692,  ..., 0.2401, 0.2058, 0.2375],
         [0.2411, 0.3044, 0.2398,  ..., 0.2176, 0.3188, 0.2375],
         [0.2411, 0.2241, 0.1803,  ..., 0.2176, 0.2058, 0.2375]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1375, 0.1427, 0.1529,  ..., 0.1407, 0.1430, 0.1394],
         [0.1375, 0.1427, 0.1529,  ..., 0.1407, 0.1430, 0.1394],
         [0.1375, 0.1427, 0.1529,  ..., 0.1407, 0.1430, 0.1394],
         [0.5876, 0.5720, 0.5412,  ..., 0.5780, 0.5710, 0.5817]],
        [[0.1446, 0.1459, 0.1625,  ..., 0.1502, 0.1438, 0.1566],
         [0.1446, 0.1459, 0.1625,  ..., 0.1502, 0.1438, 0.1566],
         [0.1446, 0.1459, 0.1625,  ..., 0.1502, 0.1438, 0.1566],
         [0.5661, 0.5624, 0.5125,  ..., 0.5495, 0.5685, 0.5302]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:31,606 [Process: 0] Synchronize training processes
2024-08-16 14:20:31,607 [Process: 0] Evaluating...
2024-08-16 14:20:31,609 [Process: 0] EPOCH 35:
2024-08-16 14:20:31,611 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0835, 0.0659, 0.0765,  ..., 0.0682, 0.0767, 0.0579],
         [0.0835, 0.0659, 0.0765,  ..., 0.0682, 0.0767, 0.0579],
         [0.1219, 0.0659, 0.0765,  ..., 0.0755, 0.0767, 0.0579],
         [0.7111, 0.8023, 0.7705,  ..., 0.7881, 0.7699, 0.8262]],
        [[0.3129, 0.2500, 0.2734,  ..., 0.2572, 0.2720, 0.3063],
         [0.2363, 0.2500, 0.2490,  ..., 0.1915, 0.2750, 0.2527],
         [0.2254, 0.2500, 0.2388,  ..., 0.3598, 0.2265, 0.2205],
         [0.2254, 0.2500, 0.2388,  ..., 0.1915, 0.2265, 0.2205]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1402, 0.1448, 0.1418,  ..., 0.1402, 0.1449, 0.1521],
         [0.1402, 0.1448, 0.1418,  ..., 0.1402, 0.1449, 0.1521],
         [0.1402, 0.1448, 0.1418,  ..., 0.1402, 0.1449, 0.1521],
         [0.5793, 0.5655, 0.5746,  ..., 0.5793, 0.5653, 0.5438]],
        [[0.1543, 0.1503, 0.1445,  ..., 0.1502, 0.1536, 0.1523],
         [0.1543, 0.1503, 0.1445,  ..., 0.1502, 0.1536, 0.1523],
         [0.1543, 0.1503, 0.1445,  ..., 0.1502, 0.1536, 0.1523],
         [0.5370, 0.5492, 0.5666,  ..., 0.5494, 0.5392, 0.5431]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:33,501 [Process: 0] Synchronize training processes
2024-08-16 14:20:33,501 [Process: 0] Evaluating...
2024-08-16 14:20:33,503 [Process: 0] EPOCH 36:
2024-08-16 14:20:33,505 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0792, 0.0793, 0.0615,  ..., 0.0839, 0.0633, 0.0721],
         [0.0792, 0.0793, 0.0615,  ..., 0.0839, 0.0633, 0.0721],
         [0.0792, 0.0793, 0.0615,  ..., 0.0839, 0.0633, 0.0721],
         [0.7623, 0.7621, 0.8154,  ..., 0.7482, 0.8100, 0.7836]],
        [[0.2244, 0.2525, 0.2865,  ..., 0.2832, 0.3001, 0.2680],
         [0.2083, 0.1961, 0.2226,  ..., 0.2038, 0.2634, 0.2092],
         [0.3590, 0.3701, 0.2914,  ..., 0.3093, 0.2374, 0.3136],
         [0.2083, 0.1813, 0.1995,  ..., 0.2038, 0.1991, 0.2092]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1439, 0.1538, 0.1412,  ..., 0.1426, 0.1414, 0.1408],
         [0.1439, 0.1538, 0.1412,  ..., 0.1426, 0.1414, 0.1408],
         [0.1439, 0.1538, 0.1412,  ..., 0.1426, 0.1414, 0.1408],
         [0.5682, 0.5385, 0.5764,  ..., 0.5723, 0.5759, 0.5777]],
        [[0.1478, 0.1542, 0.1491,  ..., 0.1508, 0.1510, 0.1423],
         [0.1478, 0.1542, 0.1491,  ..., 0.1508, 0.1510, 0.1423],
         [0.1478, 0.1542, 0.1491,  ..., 0.1508, 0.1510, 0.1423],
         [0.5567, 0.5375, 0.5526,  ..., 0.5476, 0.5470, 0.5732]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:35,383 [Process: 0] Synchronize training processes
2024-08-16 14:20:35,383 [Process: 0] Evaluating...
2024-08-16 14:20:35,385 [Process: 0] EPOCH 37:
2024-08-16 14:20:35,387 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0835, 0.0652, 0.0840,  ..., 0.0637, 0.0668, 0.0697],
         [0.0835, 0.0652, 0.0840,  ..., 0.0637, 0.0668, 0.0697],
         [0.0835, 0.0652, 0.0840,  ..., 0.0637, 0.0668, 0.0697],
         [0.7494, 0.8043, 0.7479,  ..., 0.8089, 0.7996, 0.7909]],
        [[0.2776, 0.2902, 0.1742,  ..., 0.2259, 0.3177, 0.2609],
         [0.2645, 0.2420, 0.1389,  ..., 0.1792, 0.2451, 0.2464],
         [0.2351, 0.2339, 0.5479,  ..., 0.4164, 0.2186, 0.2464],
         [0.2228, 0.2339, 0.1389,  ..., 0.1784, 0.2186, 0.2464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1445, 0.1342, 0.1428,  ..., 0.1373, 0.1415, 0.1382],
         [0.1445, 0.1342, 0.1428,  ..., 0.1373, 0.1415, 0.1382],
         [0.1445, 0.1342, 0.1428,  ..., 0.1373, 0.1415, 0.1382],
         [0.5665, 0.5975, 0.5715,  ..., 0.5880, 0.5756, 0.5855]],
        [[0.1348, 0.1411, 0.1479,  ..., 0.1438, 0.1470, 0.1525],
         [0.1348, 0.1411, 0.1479,  ..., 0.1438, 0.1470, 0.1525],
         [0.1348, 0.1411, 0.1479,  ..., 0.1438, 0.1470, 0.1525],
         [0.5955, 0.5767, 0.5564,  ..., 0.5687, 0.5590, 0.5426]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:37,273 [Process: 0] Synchronize training processes
2024-08-16 14:20:37,273 [Process: 0] Evaluating...
2024-08-16 14:20:37,275 [Process: 0] EPOCH 38:
2024-08-16 14:20:37,277 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2722, 0.2255, 0.2666,  ..., 0.2790, 0.3059, 0.3030],
         [0.3113, 0.2255, 0.2747,  ..., 0.2480, 0.2353, 0.2323],
         [0.2083, 0.2255, 0.2294,  ..., 0.2621, 0.2294, 0.2323],
         [0.2083, 0.3236, 0.2294,  ..., 0.2109, 0.2294, 0.2323]],
        [[0.0751, 0.0684, 0.0730,  ..., 0.0721, 0.0812, 0.0660],
         [0.0751, 0.0684, 0.0730,  ..., 0.0721, 0.0812, 0.0660],
         [0.0751, 0.0684, 0.0730,  ..., 0.0721, 0.0812, 0.0660],
         [0.7747, 0.7948, 0.7811,  ..., 0.7837, 0.7565, 0.8021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1445, 0.1434, 0.1429,  ..., 0.1387, 0.1474, 0.1351],
         [0.1445, 0.1434, 0.1429,  ..., 0.1387, 0.1474, 0.1351],
         [0.1445, 0.1434, 0.1429,  ..., 0.1387, 0.1474, 0.1351],
         [0.5664, 0.5699, 0.5714,  ..., 0.5838, 0.5578, 0.5946]],
        [[0.1456, 0.1328, 0.1427,  ..., 0.1379, 0.1344, 0.1361],
         [0.1456, 0.1328, 0.1427,  ..., 0.1379, 0.1344, 0.1361],
         [0.1456, 0.1328, 0.1427,  ..., 0.1379, 0.1344, 0.1361],
         [0.5633, 0.6015, 0.5718,  ..., 0.5864, 0.5967, 0.5917]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 14:20:39,170 [Process: 0] Synchronize training processes
2024-08-16 14:20:39,170 [Process: 0] Evaluating...
2024-08-16 14:20:39,172 [Process: 0] EPOCH 39:
2024-08-16 14:20:39,174 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.0751, 0.0801, 0.0614,  ..., 0.0691, 0.0804, 0.0713],
         [0.0751, 0.0801, 0.0614,  ..., 0.0691, 0.0804, 0.0713],
         [0.0751, 0.0801, 0.0614,  ..., 0.0691, 0.0804, 0.0713],
         [0.7747, 0.7597, 0.8157,  ..., 0.7927, 0.7587, 0.7861]],
        [[0.2597, 0.2734, 0.2744,  ..., 0.3249, 0.2770, 0.2804],
         [0.2468, 0.2422, 0.1913,  ..., 0.2668, 0.2872, 0.2399],
         [0.2468, 0.2422, 0.3475,  ..., 0.2042, 0.2179, 0.2399],
         [0.2468, 0.2422, 0.1867,  ..., 0.2042, 0.2179, 0.2399]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1369, 0.1419, 0.1335,  ..., 0.1357, 0.1402, 0.1486],
         [0.1369, 0.1419, 0.1335,  ..., 0.1357, 0.1402, 0.1486],
         [0.1369, 0.1419, 0.1335,  ..., 0.1357, 0.1402, 0.1486],
         [0.5894, 0.5742, 0.5996,  ..., 0.5928, 0.5794, 0.5541]],
        [[0.1357, 0.1494, 0.1314,  ..., 0.1253, 0.1489, 0.1377],
         [0.1357, 0.1494, 0.1314,  ..., 0.1253, 0.1489, 0.1377],
         [0.1357, 0.1494, 0.1314,  ..., 0.1253, 0.1489, 0.1377],
         [0.5929, 0.5517, 0.6059,  ..., 0.6242, 0.5533, 0.5868]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0515, 0.0762, 0.0589,  ..., 0.0555, 0.0661, 0.0796],
         [0.0515, 0.0762, 0.0589,  ..., 0.0555, 0.0661, 0.0796],
         [0.0515, 0.0762, 0.0589,  ..., 0.0555, 0.0661, 0.0796],
         [0.8454, 0.7713, 0.8232,  ..., 0.8334, 0.8016, 0.7613]],
        [[0.2684, 0.2717, 0.2258,  ..., 0.2288, 0.2573, 0.2568],
         [0.2780, 0.2719, 0.1772,  ..., 0.2288, 0.2476, 0.2477],
         [0.2268, 0.2282, 0.4199,  ..., 0.3137, 0.2476, 0.2477],
         [0.2268, 0.2282, 0.1772,  ..., 0.2288, 0.2476, 0.2477]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
2024-08-16 14:20:41,050 [Process: 0] Synchronize training processes
2024-08-16 14:20:41,050 [Process: 0] Evaluating...
2024-08-16 14:20:41,052 [Process: 0] EPOCH 40:
2024-08-16 14:20:41,054 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1271, 0.1290, 0.1340,  ..., 0.1239, 0.1372, 0.1342],
         [0.1271, 0.1290, 0.1340,  ..., 0.1239, 0.1372, 0.1342],
         [0.1271, 0.1290, 0.1340,  ..., 0.1239, 0.1372, 0.1342],
         [0.6188, 0.6131, 0.5979,  ..., 0.6282, 0.5884, 0.5973]],
        [[0.1359, 0.1378, 0.1418,  ..., 0.1423, 0.1365, 0.1449],
         [0.1359, 0.1378, 0.1418,  ..., 0.1423, 0.1365, 0.1449],
         [0.1359, 0.1378, 0.1418,  ..., 0.1423, 0.1365, 0.1449],
         [0.5923, 0.5866, 0.5746,  ..., 0.5732, 0.5904, 0.5654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0645, 0.0535, 0.0568,  ..., 0.0667, 0.0514, 0.0853],
         [0.0645, 0.0535, 0.0568,  ..., 0.0667, 0.0514, 0.0853],
         [0.0645, 0.0672, 0.0568,  ..., 0.0667, 0.0514, 0.0853],
         [0.8064, 0.8257, 0.8297,  ..., 0.7999, 0.8457, 0.7441]],
        [[0.3002, 0.2570, 0.2465,  ..., 0.2616, 0.2613, 0.3002],
         [0.2034, 0.2477, 0.2465,  ..., 0.1862, 0.2231, 0.2374],
         [0.2931, 0.2477, 0.2465,  ..., 0.3660, 0.2986, 0.2312],
         [0.2034, 0.2477, 0.2605,  ..., 0.1862, 0.2170, 0.2312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:20:42,951 [Process: 0] Synchronize training processes
2024-08-16 14:20:42,952 [Process: 0] Evaluating...
2024-08-16 14:20:42,954 [Process: 0] EPOCH 41:
2024-08-16 14:20:42,956 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:20:44,829 [Process: 0] Synchronize training processes
2024-08-16 14:20:44,830 [Process: 0] Evaluating...
2024-08-16 14:20:44,838 [Process: 0] EPOCH 42:
2024-08-16 14:20:44,840 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1300, 0.1304, 0.1335,  ..., 0.1327, 0.1423, 0.1247],
         [0.1300, 0.1304, 0.1335,  ..., 0.1327, 0.1423, 0.1247],
         [0.1300, 0.1304, 0.1335,  ..., 0.1327, 0.1423, 0.1247],
         [0.6099, 0.6087, 0.5995,  ..., 0.6018, 0.5732, 0.6258]],
        [[0.1309, 0.1302, 0.1364,  ..., 0.1313, 0.1332, 0.1290],
         [0.1309, 0.1302, 0.1364,  ..., 0.1313, 0.1332, 0.1290],
         [0.1309, 0.1302, 0.1364,  ..., 0.1313, 0.1332, 0.1290],
         [0.6073, 0.6094, 0.5908,  ..., 0.6060, 0.6003, 0.6131]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0744, 0.0719, 0.0732,  ..., 0.0703, 0.0723, 0.0765],
         [0.0744, 0.0719, 0.0732,  ..., 0.0703, 0.0723, 0.0765],
         [0.0744, 0.0719, 0.0732,  ..., 0.0703, 0.0723, 0.0765],
         [0.7769, 0.7843, 0.7805,  ..., 0.7890, 0.7832, 0.7706]],
        [[0.3050, 0.3521, 0.3779,  ..., 0.3366, 0.3239, 0.3536],
         [0.2070, 0.2085, 0.2074,  ..., 0.2205, 0.2326, 0.2155],
         [0.2810, 0.2309, 0.2074,  ..., 0.2223, 0.2217, 0.2155],
         [0.2070, 0.2085, 0.2074,  ..., 0.2205, 0.2217, 0.2155]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:20:46,724 [Process: 0] Synchronize training processes
2024-08-16 14:20:46,725 [Process: 0] Evaluating...
2024-08-16 14:20:46,727 [Process: 0] EPOCH 43:
2024-08-16 14:20:46,729 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1385, 0.1315, 0.1287,  ..., 0.1328, 0.1256, 0.1315],
         [0.1385, 0.1315, 0.1287,  ..., 0.1328, 0.1256, 0.1315],
         [0.1385, 0.1315, 0.1287,  ..., 0.1328, 0.1256, 0.1315],
         [0.5845, 0.6056, 0.6138,  ..., 0.6017, 0.6233, 0.6054]],
        [[0.1454, 0.1319, 0.1187,  ..., 0.1279, 0.1290, 0.1372],
         [0.1454, 0.1319, 0.1187,  ..., 0.1279, 0.1290, 0.1372],
         [0.1454, 0.1319, 0.1187,  ..., 0.1279, 0.1290, 0.1372],
         [0.5639, 0.6044, 0.6439,  ..., 0.6162, 0.6131, 0.5884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3062, 0.2064, 0.2533,  ..., 0.2894, 0.2500, 0.2963],
         [0.2827, 0.1897, 0.2410,  ..., 0.2555, 0.2500, 0.2436],
         [0.2090, 0.4143, 0.2647,  ..., 0.2275, 0.2500, 0.2301],
         [0.2022, 0.1897, 0.2410,  ..., 0.2275, 0.2500, 0.2301]],
        [[0.0480, 0.0647, 0.0503,  ..., 0.0517, 0.0662, 0.0609],
         [0.0480, 0.0647, 0.0503,  ..., 0.0517, 0.0662, 0.0609],
         [0.0480, 0.0647, 0.0503,  ..., 0.0517, 0.0662, 0.0609],
         [0.8559, 0.8060, 0.8492,  ..., 0.8448, 0.8013, 0.8172]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:20:48,621 [Process: 0] Synchronize training processes
2024-08-16 14:20:48,622 [Process: 0] Evaluating...
2024-08-16 14:20:48,624 [Process: 0] EPOCH 44:
2024-08-16 14:20:48,626 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1248, 0.1231, 0.1323,  ..., 0.1280, 0.1277, 0.1259],
         [0.1248, 0.1231, 0.1323,  ..., 0.1280, 0.1277, 0.1259],
         [0.1248, 0.1231, 0.1323,  ..., 0.1280, 0.1277, 0.1259],
         [0.6255, 0.6307, 0.6031,  ..., 0.6159, 0.6168, 0.6224]],
        [[0.1340, 0.1337, 0.1283,  ..., 0.1231, 0.1357, 0.1247],
         [0.1340, 0.1337, 0.1283,  ..., 0.1231, 0.1357, 0.1247],
         [0.1340, 0.1337, 0.1283,  ..., 0.1231, 0.1357, 0.1247],
         [0.5979, 0.5989, 0.6151,  ..., 0.6307, 0.5929, 0.6258]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0627, 0.0535, 0.0667,  ..., 0.0719, 0.0515, 0.0660],
         [0.0627, 0.0535, 0.0667,  ..., 0.0719, 0.0515, 0.0660],
         [0.0627, 0.0535, 0.0667,  ..., 0.0719, 0.0515, 0.0660],
         [0.8120, 0.8395, 0.7999,  ..., 0.7842, 0.8456, 0.8021]],
        [[0.3082, 0.2835, 0.2182,  ..., 0.2422, 0.2740, 0.2746],
         [0.2333, 0.1895, 0.2182,  ..., 0.2420, 0.1980, 0.2216],
         [0.2292, 0.3376, 0.3455,  ..., 0.2738, 0.3300, 0.2822],
         [0.2292, 0.1895, 0.2182,  ..., 0.2420, 0.1980, 0.2216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:20:50,505 [Process: 0] Synchronize training processes
2024-08-16 14:20:50,506 [Process: 0] Evaluating...
2024-08-16 14:20:50,508 [Process: 0] EPOCH 45:
2024-08-16 14:20:50,510 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1142, 0.1351, 0.1282,  ..., 0.1285, 0.1176, 0.1247],
         [0.1142, 0.1351, 0.1282,  ..., 0.1285, 0.1176, 0.1247],
         [0.1142, 0.1351, 0.1282,  ..., 0.1285, 0.1176, 0.1247],
         [0.6575, 0.5946, 0.6154,  ..., 0.6146, 0.6471, 0.6258]],
        [[0.1280, 0.1423, 0.1248,  ..., 0.1336, 0.1198, 0.1203],
         [0.1280, 0.1423, 0.1248,  ..., 0.1336, 0.1198, 0.1203],
         [0.1280, 0.1423, 0.1248,  ..., 0.1336, 0.1198, 0.1203],
         [0.6161, 0.5730, 0.6255,  ..., 0.5991, 0.6405, 0.6392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0526, 0.0618, 0.0555,  ..., 0.0602, 0.0550, 0.0545],
         [0.0526, 0.0618, 0.0555,  ..., 0.0602, 0.0550, 0.0545],
         [0.0526, 0.0890, 0.0555,  ..., 0.0874, 0.0610, 0.0617],
         [0.8421, 0.7873, 0.8335,  ..., 0.7922, 0.8291, 0.8292]],
        [[0.3248, 0.2502, 0.2996,  ..., 0.2500, 0.2322, 0.2500],
         [0.2466, 0.2499, 0.2309,  ..., 0.2500, 0.2126, 0.2500],
         [0.2143, 0.2499, 0.2386,  ..., 0.2500, 0.3426, 0.2500],
         [0.2143, 0.2499, 0.2309,  ..., 0.2500, 0.2126, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:20:52,403 [Process: 0] Synchronize training processes
2024-08-16 14:20:52,403 [Process: 0] Evaluating...
2024-08-16 14:20:52,405 [Process: 0] EPOCH 46:
2024-08-16 14:20:52,407 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1317, 0.1146, 0.1167,  ..., 0.1237, 0.1225, 0.1299],
         [0.1317, 0.1146, 0.1167,  ..., 0.1237, 0.1225, 0.1299],
         [0.1317, 0.1146, 0.1167,  ..., 0.1237, 0.1225, 0.1299],
         [0.6050, 0.6562, 0.6498,  ..., 0.6289, 0.6325, 0.6102]],
        [[0.1251, 0.1252, 0.1276,  ..., 0.1228, 0.1304, 0.1201],
         [0.1251, 0.1252, 0.1276,  ..., 0.1228, 0.1304, 0.1201],
         [0.1251, 0.1252, 0.1276,  ..., 0.1228, 0.1304, 0.1201],
         [0.6248, 0.6245, 0.6172,  ..., 0.6315, 0.6088, 0.6398]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0546, 0.0553, 0.0534,  ..., 0.0519, 0.0545, 0.0562],
         [0.0546, 0.0553, 0.0534,  ..., 0.0519, 0.0545, 0.0562],
         [0.0546, 0.0553, 0.0534,  ..., 0.0519, 0.0545, 0.0744],
         [0.8363, 0.8340, 0.8398,  ..., 0.8444, 0.8365, 0.8132]],
        [[0.3182, 0.3404, 0.2842,  ..., 0.2985, 0.2934, 0.2784],
         [0.2273, 0.2341, 0.2486,  ..., 0.2338, 0.2355, 0.2405],
         [0.2273, 0.2128, 0.2336,  ..., 0.2338, 0.2355, 0.2405],
         [0.2273, 0.2128, 0.2336,  ..., 0.2338, 0.2355, 0.2405]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-16 14:20:54,295 [Process: 0] Synchronize training processes
2024-08-16 14:20:54,296 [Process: 0] Evaluating...
2024-08-16 14:20:54,297 [Process: 0] EPOCH 47:
2024-08-16 14:20:54,299 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1135, 0.1302, 0.1296,  ..., 0.1236, 0.1247, 0.1163],
         [0.1135, 0.1302, 0.1296,  ..., 0.1236, 0.1247, 0.1163],
         [0.1135, 0.1302, 0.1296,  ..., 0.1236, 0.1247, 0.1163],
         [0.6596, 0.6094, 0.6113,  ..., 0.6291, 0.6259, 0.6511]],
        [[0.1266, 0.1312, 0.1202,  ..., 0.1232, 0.1264, 0.1198],
         [0.1266, 0.1312, 0.1202,  ..., 0.1232, 0.1264, 0.1198],
         [0.1266, 0.1312, 0.1202,  ..., 0.1232, 0.1264, 0.1198],
         [0.6202, 0.6064, 0.6393,  ..., 0.6303, 0.6209, 0.6407]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0581, 0.0495, 0.0632,  ..., 0.0565, 0.0653, 0.0508],
         [0.0581, 0.0495, 0.0632,  ..., 0.0565, 0.0653, 0.0508],
         [0.0581, 0.0495, 0.0680,  ..., 0.0565, 0.0653, 0.0508],
         [0.8256, 0.8516, 0.8056,  ..., 0.8305, 0.8042, 0.8475]],
        [[0.3231, 0.2500, 0.2473,  ..., 0.2363, 0.2416, 0.2500],
         [0.2446, 0.2500, 0.2372,  ..., 0.1896, 0.2175, 0.2500],
         [0.2162, 0.2500, 0.2784,  ..., 0.3846, 0.3234, 0.2500],
         [0.2162, 0.2500, 0.2372,  ..., 0.1896, 0.2175, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1248, 0.1123, 0.1230,  ..., 0.1220, 0.1187, 0.1230],
         [0.1248, 0.1123, 0.1230,  ..., 0.1220, 0.1187, 0.1230],
         [0.1248, 0.1123, 0.1230,  ..., 0.1220, 0.1187, 0.1230],
         [0.6255, 0.6630, 0.6309,  ..., 0.6341, 0.6439, 0.6310]],
        [[0.1181, 0.1308, 0.1190,  ..., 0.1210, 0.1140, 0.1185],
         [0.1181, 0.1308, 0.1190,  ..., 0.1210, 0.1140, 0.1185],
         [0.1181, 0.1308, 0.1190,  ..., 0.1210, 0.1140, 0.1185],
         [0.6457, 0.6076, 0.6430,  ..., 0.6370, 0.6579, 0.6445]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:56,182 [Process: 0] Synchronize training processes
2024-08-16 14:20:56,183 [Process: 0] Evaluating...
2024-08-16 14:20:56,184 [Process: 0] EPOCH 48:
2024-08-16 14:20:56,186 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0502, 0.0596, 0.0506,  ..., 0.0431, 0.0563, 0.0473],
         [0.0502, 0.0596, 0.0506,  ..., 0.0431, 0.0563, 0.0473],
         [0.0502, 0.0596, 0.0556,  ..., 0.0431, 0.0563, 0.0473],
         [0.8495, 0.8213, 0.8432,  ..., 0.8708, 0.8311, 0.8582]],
        [[0.2985, 0.2597, 0.2634,  ..., 0.2620, 0.2951, 0.2610],
         [0.2338, 0.2468, 0.2455,  ..., 0.2460, 0.2350, 0.2463],
         [0.2338, 0.2468, 0.2455,  ..., 0.2460, 0.2350, 0.2463],
         [0.2338, 0.2468, 0.2455,  ..., 0.2460, 0.2350, 0.2463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1269, 0.1136, 0.1085,  ..., 0.1241, 0.1124, 0.1179],
         [0.1269, 0.1136, 0.1085,  ..., 0.1241, 0.1124, 0.1179],
         [0.1269, 0.1136, 0.1085,  ..., 0.1241, 0.1124, 0.1179],
         [0.6192, 0.6591, 0.6746,  ..., 0.6278, 0.6627, 0.6462]],
        [[0.1235, 0.1206, 0.1160,  ..., 0.1173, 0.1212, 0.1204],
         [0.1235, 0.1206, 0.1160,  ..., 0.1173, 0.1212, 0.1204],
         [0.1235, 0.1206, 0.1160,  ..., 0.1173, 0.1212, 0.1204],
         [0.6296, 0.6381, 0.6520,  ..., 0.6481, 0.6365, 0.6387]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:58,060 [Process: 0] Synchronize training processes
2024-08-16 14:20:58,060 [Process: 0] Evaluating...
2024-08-16 14:20:58,062 [Process: 0] EPOCH 49:
2024-08-16 14:20:58,064 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2629, 0.3229, 0.2719,  ..., 0.2500, 0.2514, 0.2530],
         [0.2235, 0.2257, 0.1931,  ..., 0.2500, 0.2071, 0.2490],
         [0.2901, 0.2257, 0.3452,  ..., 0.2500, 0.3343, 0.2490],
         [0.2235, 0.2257, 0.1898,  ..., 0.2500, 0.2071, 0.2490]],
        [[0.0524, 0.0487, 0.0467,  ..., 0.0527, 0.0590, 0.0558],
         [0.0524, 0.0487, 0.0467,  ..., 0.0527, 0.0590, 0.0558],
         [0.0524, 0.0487, 0.0467,  ..., 0.0657, 0.0590, 0.0558],
         [0.8429, 0.8538, 0.8598,  ..., 0.8290, 0.8229, 0.8325]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1222, 0.1155, 0.1177,  ..., 0.1239, 0.1187, 0.1085],
         [0.1222, 0.1155, 0.1177,  ..., 0.1239, 0.1187, 0.1085],
         [0.1222, 0.1155, 0.1177,  ..., 0.1239, 0.1187, 0.1085],
         [0.6333, 0.6535, 0.6468,  ..., 0.6284, 0.6440, 0.6746]],
        [[0.1109, 0.1159, 0.1290,  ..., 0.1191, 0.1131, 0.1096],
         [0.1109, 0.1159, 0.1290,  ..., 0.1191, 0.1131, 0.1096],
         [0.1109, 0.1159, 0.1290,  ..., 0.1191, 0.1131, 0.1096],
         [0.6672, 0.6524, 0.6131,  ..., 0.6428, 0.6607, 0.6712]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:20:59,943 [Process: 0] Synchronize training processes
2024-08-16 14:20:59,944 [Process: 0] Evaluating...
2024-08-16 14:20:59,946 [Process: 0] EPOCH 50:
2024-08-16 14:20:59,947 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0528, 0.0543, 0.0501,  ..., 0.0541, 0.0538, 0.0482],
         [0.0528, 0.0543, 0.0501,  ..., 0.0541, 0.0538, 0.0482],
         [0.0528, 0.0543, 0.0501,  ..., 0.0541, 0.0538, 0.0482],
         [0.8415, 0.8372, 0.8497,  ..., 0.8377, 0.8385, 0.8555]],
        [[0.2500, 0.2711, 0.2923,  ..., 0.2067, 0.2500, 0.2748],
         [0.2500, 0.2134, 0.2359,  ..., 0.2036, 0.2500, 0.2134],
         [0.2500, 0.3021, 0.2359,  ..., 0.3862, 0.2500, 0.2984],
         [0.2500, 0.2134, 0.2359,  ..., 0.2036, 0.2500, 0.2134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1166, 0.1272, 0.1153,  ..., 0.1211, 0.1205, 0.1113],
         [0.1166, 0.1272, 0.1153,  ..., 0.1211, 0.1205, 0.1113],
         [0.1166, 0.1272, 0.1153,  ..., 0.1211, 0.1205, 0.1113],
         [0.6502, 0.6185, 0.6541,  ..., 0.6366, 0.6384, 0.6660]],
        [[0.1202, 0.1146, 0.1121,  ..., 0.1171, 0.1148, 0.1135],
         [0.1202, 0.1146, 0.1121,  ..., 0.1171, 0.1148, 0.1135],
         [0.1202, 0.1146, 0.1121,  ..., 0.1171, 0.1148, 0.1135],
         [0.6394, 0.6563, 0.6636,  ..., 0.6486, 0.6557, 0.6595]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:21:01,829 [Process: 0] Synchronize training processes
2024-08-16 14:21:01,830 [Process: 0] Evaluating...
2024-08-16 14:21:01,832 [Process: 0] EPOCH 51:
2024-08-16 14:21:01,834 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2714, 0.2772, 0.2903,  ..., 0.2627, 0.2862, 0.3106],
         [0.2429, 0.2409, 0.2366,  ..., 0.2458, 0.2379, 0.2138],
         [0.2429, 0.2409, 0.2366,  ..., 0.2458, 0.2379, 0.2695],
         [0.2429, 0.2409, 0.2366,  ..., 0.2458, 0.2379, 0.2061]],
        [[0.0459, 0.0525, 0.0516,  ..., 0.0421, 0.0496, 0.0462],
         [0.0459, 0.0525, 0.0516,  ..., 0.0421, 0.0496, 0.0462],
         [0.0494, 0.0525, 0.0516,  ..., 0.1304, 0.0496, 0.0462],
         [0.8588, 0.8425, 0.8451,  ..., 0.7854, 0.8513, 0.8615]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1121, 0.1150, 0.1173,  ..., 0.1169, 0.1157, 0.1137],
         [0.1121, 0.1150, 0.1173,  ..., 0.1169, 0.1157, 0.1137],
         [0.1121, 0.1150, 0.1173,  ..., 0.1169, 0.1157, 0.1137],
         [0.6638, 0.6549, 0.6481,  ..., 0.6493, 0.6529, 0.6589]],
        [[0.1123, 0.1169, 0.1140,  ..., 0.1196, 0.1205, 0.1110],
         [0.1123, 0.1169, 0.1140,  ..., 0.1196, 0.1205, 0.1110],
         [0.1123, 0.1169, 0.1140,  ..., 0.1196, 0.1205, 0.1110],
         [0.6630, 0.6494, 0.6581,  ..., 0.6412, 0.6384, 0.6670]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:21:03,714 [Process: 0] Synchronize training processes
2024-08-16 14:21:03,714 [Process: 0] Evaluating...
2024-08-16 14:21:03,723 [Process: 0] EPOCH 52:
2024-08-16 14:21:03,725 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0560, 0.0574, 0.0482,  ..., 0.0638, 0.0549, 0.0582],
         [0.0560, 0.0574, 0.0482,  ..., 0.0638, 0.0549, 0.0582],
         [0.0560, 0.0574, 0.0482,  ..., 0.0638, 0.0549, 0.0582],
         [0.8319, 0.8279, 0.8555,  ..., 0.8086, 0.8354, 0.8254]],
        [[0.2681, 0.2873, 0.3282,  ..., 0.2912, 0.2750, 0.2153],
         [0.1968, 0.2309, 0.2239,  ..., 0.2398, 0.2206, 0.2136],
         [0.3383, 0.2509, 0.2239,  ..., 0.2345, 0.2838, 0.3574],
         [0.1968, 0.2309, 0.2239,  ..., 0.2345, 0.2206, 0.2136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1163, 0.1186, 0.1106,  ..., 0.1112, 0.1118, 0.1120],
         [0.1163, 0.1186, 0.1106,  ..., 0.1112, 0.1118, 0.1120],
         [0.1163, 0.1186, 0.1106,  ..., 0.1112, 0.1118, 0.1120],
         [0.6511, 0.6442, 0.6682,  ..., 0.6664, 0.6645, 0.6639]],
        [[0.1056, 0.1163, 0.1131,  ..., 0.1159, 0.1166, 0.1085],
         [0.1056, 0.1163, 0.1131,  ..., 0.1159, 0.1166, 0.1085],
         [0.1056, 0.1163, 0.1131,  ..., 0.1159, 0.1166, 0.1085],
         [0.6833, 0.6510, 0.6606,  ..., 0.6524, 0.6503, 0.6744]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:21:05,599 [Process: 0] Synchronize training processes
2024-08-16 14:21:05,600 [Process: 0] Evaluating...
2024-08-16 14:21:05,602 [Process: 0] EPOCH 53:
2024-08-16 14:21:05,603 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0386, 0.0468, 0.0433,  ..., 0.0418, 0.0458, 0.0486],
         [0.0386, 0.0468, 0.0433,  ..., 0.0418, 0.0458, 0.0486],
         [0.0386, 0.0468, 0.0475,  ..., 0.0418, 0.0550, 0.0486],
         [0.8842, 0.8595, 0.8659,  ..., 0.8745, 0.8535, 0.8541]],
        [[0.2500, 0.2892, 0.2671,  ..., 0.3211, 0.2728, 0.2800],
         [0.2500, 0.2369, 0.2443,  ..., 0.2263, 0.2424, 0.2400],
         [0.2500, 0.2369, 0.2443,  ..., 0.2263, 0.2424, 0.2400],
         [0.2500, 0.2369, 0.2443,  ..., 0.2263, 0.2424, 0.2400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1085, 0.1143, 0.1100,  ..., 0.1175, 0.1113, 0.1121],
         [0.1085, 0.1143, 0.1100,  ..., 0.1175, 0.1113, 0.1121],
         [0.1085, 0.1143, 0.1100,  ..., 0.1175, 0.1113, 0.1121],
         [0.6745, 0.6572, 0.6700,  ..., 0.6475, 0.6662, 0.6637]],
        [[0.1098, 0.1099, 0.1103,  ..., 0.1123, 0.1092, 0.1147],
         [0.1098, 0.1099, 0.1103,  ..., 0.1123, 0.1092, 0.1147],
         [0.1098, 0.1099, 0.1103,  ..., 0.1123, 0.1092, 0.1147],
         [0.6707, 0.6703, 0.6690,  ..., 0.6631, 0.6724, 0.6560]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:21:07,473 [Process: 0] Synchronize training processes
2024-08-16 14:21:07,473 [Process: 0] Evaluating...
2024-08-16 14:21:07,475 [Process: 0] EPOCH 54:
2024-08-16 14:21:07,477 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0424, 0.0396, 0.0512,  ..., 0.0423, 0.0458, 0.0436],
         [0.0424, 0.0396, 0.0512,  ..., 0.0423, 0.0458, 0.0436],
         [0.0942, 0.0625, 0.0512,  ..., 0.1178, 0.0458, 0.0436],
         [0.8210, 0.8583, 0.8464,  ..., 0.7975, 0.8626, 0.8692]],
        [[0.2937, 0.2606, 0.2667,  ..., 0.3190, 0.2707, 0.2677],
         [0.2242, 0.2294, 0.2444,  ..., 0.2111, 0.2431, 0.2441],
         [0.2580, 0.2807, 0.2444,  ..., 0.2589, 0.2431, 0.2441],
         [0.2242, 0.2294, 0.2444,  ..., 0.2111, 0.2431, 0.2441]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1102, 0.1064, 0.1101,  ..., 0.1154, 0.1142, 0.1145],
         [0.1102, 0.1064, 0.1101,  ..., 0.1154, 0.1142, 0.1145],
         [0.1102, 0.1064, 0.1101,  ..., 0.1154, 0.1142, 0.1145],
         [0.6693, 0.6808, 0.6698,  ..., 0.6539, 0.6573, 0.6564]],
        [[0.1065, 0.1077, 0.1112,  ..., 0.1114, 0.1084, 0.1123],
         [0.1065, 0.1077, 0.1112,  ..., 0.1114, 0.1084, 0.1123],
         [0.1065, 0.1077, 0.1112,  ..., 0.1114, 0.1084, 0.1123],
         [0.6804, 0.6770, 0.6663,  ..., 0.6657, 0.6747, 0.6631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 14:21:09,349 [Process: 0] Synchronize training processes
2024-08-16 14:21:09,350 [Process: 0] Evaluating...
2024-08-16 14:21:09,351 [Process: 0] EPOCH 55:
2024-08-16 14:21:09,353 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0444, 0.0427, 0.0459,  ..., 0.0410, 0.0417, 0.0408],
         [0.0444, 0.0427, 0.0459,  ..., 0.0410, 0.0417, 0.0408],
         [0.0475, 0.0427, 0.0459,  ..., 0.0410, 0.0926, 0.0408],
         [0.8636, 0.8718, 0.8624,  ..., 0.8770, 0.8239, 0.8776]],
        [[0.2515, 0.2500, 0.2539,  ..., 0.2057, 0.3074, 0.3016],
         [0.2495, 0.2500, 0.2487,  ..., 0.2057, 0.2309, 0.2328],
         [0.2495, 0.2500, 0.2487,  ..., 0.2057, 0.2309, 0.2328],
         [0.2495, 0.2500, 0.2487,  ..., 0.3829, 0.2309, 0.2328]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1052, 0.1087, 0.1051,  ..., 0.1091, 0.1151, 0.1121],
         [0.1052, 0.1087, 0.1051,  ..., 0.1091, 0.1151, 0.1121],
         [0.1052, 0.1087, 0.1051,  ..., 0.1091, 0.1151, 0.1121],
         [0.6844, 0.6738, 0.6846,  ..., 0.6726, 0.6548, 0.6638]],
        [[0.1127, 0.1086, 0.1100,  ..., 0.1065, 0.1046, 0.1031],
         [0.1127, 0.1086, 0.1100,  ..., 0.1065, 0.1046, 0.1031],
         [0.1127, 0.1086, 0.1100,  ..., 0.1065, 0.1046, 0.1031],
         [0.6619, 0.6742, 0.6699,  ..., 0.6805, 0.6863, 0.6907]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0665, 0.0439, 0.0427,  ..., 0.0400, 0.0524, 0.0451],
         [0.0665, 0.0439, 0.0427,  ..., 0.0400, 0.0524, 0.0451],
         [0.0665, 0.0439, 0.0427,  ..., 0.0400, 0.0524, 0.3541],
         [0.8006, 0.8682, 0.8719,  ..., 0.8799, 0.8427, 0.5557]],
        [[0.2500, 0.2500, 0.2935,  ..., 0.3147, 0.2953, 0.2500],
         [0.2500, 0.2500, 0.2355,  ..., 0.2284, 0.2349, 0.2500],
         [0.2500, 0.2500, 0.2355,  ..., 0.2284, 0.2349, 0.2500],
         [0.2500, 0.2500, 0.2355,  ..., 0.2284, 0.2349, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:21:11,244 [Process: 0] Synchronize training processes
2024-08-16 14:21:11,244 [Process: 0] Evaluating...
2024-08-16 14:21:11,246 [Process: 0] EPOCH 56:
2024-08-16 14:21:11,248 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1074, 0.1060, 0.1058,  ..., 0.1074, 0.1102, 0.1088],
         [0.1074, 0.1060, 0.1058,  ..., 0.1074, 0.1102, 0.1088],
         [0.1074, 0.1060, 0.1058,  ..., 0.1074, 0.1102, 0.1088],
         [0.6777, 0.6819, 0.6827,  ..., 0.6779, 0.6695, 0.6736]],
        [[0.1028, 0.1023, 0.1050,  ..., 0.1107, 0.1100, 0.1091],
         [0.1028, 0.1023, 0.1050,  ..., 0.1107, 0.1100, 0.1091],
         [0.1028, 0.1023, 0.1050,  ..., 0.1107, 0.1100, 0.1091],
         [0.6916, 0.6931, 0.6851,  ..., 0.6678, 0.6701, 0.6726]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0334, 0.0444, 0.0418,  ..., 0.0359, 0.0455, 0.0505],
         [0.0334, 0.0444, 0.0418,  ..., 0.0359, 0.0455, 0.0505],
         [0.0334, 0.0444, 0.0418,  ..., 0.0640, 0.0455, 0.0505],
         [0.8997, 0.8667, 0.8746,  ..., 0.8642, 0.8636, 0.8486]],
        [[0.2827, 0.2452, 0.2500,  ..., 0.2500, 0.1973, 0.2701],
         [0.2391, 0.2452, 0.2500,  ..., 0.2500, 0.1973, 0.2433],
         [0.2391, 0.2644, 0.2500,  ..., 0.2500, 0.4080, 0.2433],
         [0.2391, 0.2452, 0.2500,  ..., 0.2500, 0.1973, 0.2433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:13,115 [Process: 0] Synchronize training processes
2024-08-16 14:21:13,115 [Process: 0] Evaluating...
2024-08-16 14:21:13,117 [Process: 0] EPOCH 57:
2024-08-16 14:21:13,119 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1072, 0.1049, 0.1052,  ..., 0.1037, 0.1040, 0.1047],
         [0.1072, 0.1049, 0.1052,  ..., 0.1037, 0.1040, 0.1047],
         [0.1072, 0.1049, 0.1052,  ..., 0.1037, 0.1040, 0.1047],
         [0.6783, 0.6853, 0.6843,  ..., 0.6889, 0.6879, 0.6859]],
        [[0.1066, 0.1029, 0.1095,  ..., 0.1012, 0.1032, 0.1007],
         [0.1066, 0.1029, 0.1095,  ..., 0.1012, 0.1032, 0.1007],
         [0.1066, 0.1029, 0.1095,  ..., 0.1012, 0.1032, 0.1007],
         [0.6802, 0.6914, 0.6716,  ..., 0.6964, 0.6904, 0.6979]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2885, 0.3051, 0.2500,  ..., 0.2297, 0.2878, 0.3236],
         [0.2168, 0.2312, 0.2500,  ..., 0.2297, 0.2374, 0.1787],
         [0.2779, 0.2325, 0.2500,  ..., 0.2297, 0.2374, 0.3191],
         [0.2168, 0.2312, 0.2500,  ..., 0.3109, 0.2374, 0.1787]],
        [[0.0373, 0.0397, 0.0500,  ..., 0.0471, 0.0386, 0.0258],
         [0.0373, 0.0397, 0.0500,  ..., 0.0471, 0.0386, 0.0258],
         [0.0373, 0.0397, 0.0500,  ..., 0.0471, 0.0386, 0.0258],
         [0.8880, 0.8810, 0.8500,  ..., 0.8588, 0.8841, 0.9227]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:14,995 [Process: 0] Synchronize training processes
2024-08-16 14:21:14,995 [Process: 0] Evaluating...
2024-08-16 14:21:14,997 [Process: 0] EPOCH 58:
2024-08-16 14:21:14,999 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:16,885 [Process: 0] Synchronize training processes
2024-08-16 14:21:16,886 [Process: 0] Evaluating...
2024-08-16 14:21:16,888 [Process: 0] EPOCH 59:
2024-08-16 14:21:16,890 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0986, 0.1042, 0.1015,  ..., 0.1013, 0.1066, 0.1009],
         [0.0986, 0.1042, 0.1015,  ..., 0.1013, 0.1066, 0.1009],
         [0.0986, 0.1042, 0.1015,  ..., 0.1013, 0.1066, 0.1009],
         [0.7043, 0.6873, 0.6954,  ..., 0.6960, 0.6803, 0.6972]],
        [[0.1049, 0.1082, 0.1023,  ..., 0.1027, 0.1091, 0.1061],
         [0.1049, 0.1082, 0.1023,  ..., 0.1027, 0.1091, 0.1061],
         [0.1049, 0.1082, 0.1023,  ..., 0.1027, 0.1091, 0.1061],
         [0.6854, 0.6755, 0.6931,  ..., 0.6920, 0.6726, 0.6818]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2399, 0.2500,  ..., 0.2489, 0.2500, 0.3724],
         [0.2500, 0.2399, 0.2500,  ..., 0.2489, 0.2500, 0.1604],
         [0.2500, 0.2399, 0.2500,  ..., 0.2489, 0.2500, 0.3067],
         [0.2500, 0.2802, 0.2500,  ..., 0.2532, 0.2500, 0.1604]],
        [[0.0652, 0.0802, 0.0757,  ..., 0.0546, 0.0681, 0.0756],
         [0.0652, 0.0802, 0.0757,  ..., 0.0546, 0.0681, 0.0756],
         [0.0652, 0.0802, 0.0757,  ..., 0.0546, 0.0681, 0.0756],
         [0.8044, 0.7595, 0.7728,  ..., 0.8362, 0.7957, 0.7731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:18,782 [Process: 0] Synchronize training processes
2024-08-16 14:21:18,783 [Process: 0] Evaluating...
2024-08-16 14:21:18,785 [Process: 0] EPOCH 60:
2024-08-16 14:21:18,786 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1063, 0.1061, 0.1042,  ..., 0.1035, 0.1054, 0.0999],
         [0.1063, 0.1061, 0.1042,  ..., 0.1035, 0.1054, 0.0999],
         [0.1063, 0.1061, 0.1042,  ..., 0.1035, 0.1054, 0.0999],
         [0.6811, 0.6818, 0.6875,  ..., 0.6895, 0.6839, 0.7004]],
        [[0.1026, 0.1013, 0.1004,  ..., 0.1000, 0.1042, 0.1061],
         [0.1026, 0.1013, 0.1004,  ..., 0.1000, 0.1042, 0.1061],
         [0.1026, 0.1013, 0.1004,  ..., 0.1000, 0.1042, 0.1061],
         [0.6922, 0.6960, 0.6988,  ..., 0.6999, 0.6875, 0.6816]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0398, 0.0487, 0.0292,  ..., 0.0422, 0.0277, 0.0452],
         [0.0398, 0.0487, 0.0292,  ..., 0.0422, 0.0277, 0.0452],
         [0.0398, 0.0569, 0.0292,  ..., 0.0422, 0.0277, 0.0452],
         [0.8805, 0.8458, 0.9123,  ..., 0.8734, 0.9170, 0.8645]],
        [[0.2673, 0.2292, 0.2547,  ..., 0.2500, 0.2500, 0.2500],
         [0.2442, 0.2007, 0.2484,  ..., 0.2500, 0.2500, 0.2500],
         [0.2442, 0.3694, 0.2484,  ..., 0.2500, 0.2500, 0.2500],
         [0.2442, 0.2007, 0.2484,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:20,674 [Process: 0] Synchronize training processes
2024-08-16 14:21:20,674 [Process: 0] Evaluating...
2024-08-16 14:21:20,676 [Process: 0] EPOCH 61:
2024-08-16 14:21:20,678 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1047, 0.0984, 0.1049,  ..., 0.1013, 0.0985, 0.0985],
         [0.1047, 0.0984, 0.1049,  ..., 0.1013, 0.0985, 0.0985],
         [0.1047, 0.0984, 0.1049,  ..., 0.1013, 0.0985, 0.0985],
         [0.6858, 0.7048, 0.6854,  ..., 0.6962, 0.7045, 0.7044]],
        [[0.1008, 0.1001, 0.1030,  ..., 0.1001, 0.1025, 0.1039],
         [0.1008, 0.1001, 0.1030,  ..., 0.1001, 0.1025, 0.1039],
         [0.1008, 0.1001, 0.1030,  ..., 0.1001, 0.1025, 0.1039],
         [0.6975, 0.6996, 0.6910,  ..., 0.6997, 0.6924, 0.6882]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1846, 0.2861, 0.2305,  ..., 0.2500, 0.2500, 0.2500],
         [0.1846, 0.2380, 0.2305,  ..., 0.2500, 0.2500, 0.2500],
         [0.1846, 0.2380, 0.2305,  ..., 0.2500, 0.2500, 0.2500],
         [0.4461, 0.2380, 0.3086,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0100, 0.0123, 0.0123,  ..., 0.0291, 0.0901, 0.0182],
         [0.0100, 0.0123, 0.0123,  ..., 0.0291, 0.0901, 0.0182],
         [0.0100, 0.0123, 0.0123,  ..., 0.0291, 0.1014, 0.0182],
         [0.9700, 0.9631, 0.9630,  ..., 0.9127, 0.7183, 0.9453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:22,555 [Process: 0] Synchronize training processes
2024-08-16 14:21:22,555 [Process: 0] Evaluating...
2024-08-16 14:21:22,564 [Process: 0] EPOCH 62:
2024-08-16 14:21:22,566 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0987, 0.0967, 0.1011,  ..., 0.0979, 0.0997, 0.0981],
         [0.0987, 0.0967, 0.1011,  ..., 0.0979, 0.0997, 0.0981],
         [0.0987, 0.0967, 0.1011,  ..., 0.0979, 0.0997, 0.0981],
         [0.7039, 0.7100, 0.6966,  ..., 0.7064, 0.7008, 0.7058]],
        [[0.0993, 0.1014, 0.1005,  ..., 0.1015, 0.1011, 0.0994],
         [0.0993, 0.1014, 0.1005,  ..., 0.1015, 0.1011, 0.0994],
         [0.0993, 0.1014, 0.1005,  ..., 0.1015, 0.1011, 0.0994],
         [0.7020, 0.6959, 0.6985,  ..., 0.6956, 0.6967, 0.7019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0987, 0.0366, 0.1085,  ..., 0.0694, 0.1687, 0.0437],
         [0.0987, 0.0366, 0.1085,  ..., 0.0694, 0.1687, 0.0437],
         [0.1041, 0.0366, 0.1704,  ..., 0.0694, 0.4201, 0.0437],
         [0.6985, 0.8901, 0.6127,  ..., 0.7919, 0.2425, 0.8689]],
        [[0.2364, 0.2102, 0.2832,  ..., 0.1576, 0.2971, 0.3769],
         [0.2364, 0.2102, 0.2389,  ..., 0.1705, 0.2343, 0.2217],
         [0.2364, 0.2102, 0.2389,  ..., 0.1576, 0.2343, 0.2007],
         [0.2909, 0.3693, 0.2389,  ..., 0.5142, 0.2343, 0.2007]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:24,446 [Process: 0] Synchronize training processes
2024-08-16 14:21:24,447 [Process: 0] Evaluating...
2024-08-16 14:21:24,448 [Process: 0] EPOCH 63:
2024-08-16 14:21:24,450 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0971, 0.1001, 0.0993,  ..., 0.0959, 0.0991, 0.0992],
         [0.0971, 0.1001, 0.0993,  ..., 0.0959, 0.0991, 0.0992],
         [0.0971, 0.1001, 0.0993,  ..., 0.0959, 0.0991, 0.0992],
         [0.7087, 0.6998, 0.7020,  ..., 0.7123, 0.7027, 0.7025]],
        [[0.1004, 0.0995, 0.0960,  ..., 0.1003, 0.0980, 0.1003],
         [0.1004, 0.0995, 0.0960,  ..., 0.1003, 0.0980, 0.1003],
         [0.1004, 0.0995, 0.0960,  ..., 0.1003, 0.0980, 0.1003],
         [0.6987, 0.7015, 0.7121,  ..., 0.6992, 0.7059, 0.6991]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0473, 0.0432, 0.0426,  ..., 0.0495, 0.0380, 0.0444],
         [0.0473, 0.0432, 0.0426,  ..., 0.0495, 0.0380, 0.0444],
         [0.0473, 0.0432, 0.0426,  ..., 0.0495, 0.0380, 0.0444],
         [0.8582, 0.8705, 0.8723,  ..., 0.8516, 0.8861, 0.8668]],
        [[0.2920, 0.2339, 0.2956,  ..., 0.2577, 0.2528, 0.2130],
         [0.2360, 0.2339, 0.1906,  ..., 0.2474, 0.2258, 0.1585],
         [0.2360, 0.2984, 0.3231,  ..., 0.2474, 0.2956, 0.4701],
         [0.2360, 0.2339, 0.1906,  ..., 0.2474, 0.2258, 0.1585]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:21:26,331 [Process: 0] Synchronize training processes
2024-08-16 14:21:26,331 [Process: 0] Evaluating...
2024-08-16 14:21:26,333 [Process: 0] EPOCH 64:
2024-08-16 14:21:26,335 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0978, 0.0985, 0.0958,  ..., 0.0974, 0.0978, 0.0947],
         [0.0978, 0.0985, 0.0958,  ..., 0.0974, 0.0978, 0.0947],
         [0.0978, 0.0985, 0.0958,  ..., 0.0974, 0.0978, 0.0947],
         [0.7067, 0.7046, 0.7125,  ..., 0.7078, 0.7067, 0.7160]],
        [[0.0992, 0.0939, 0.0957,  ..., 0.0963, 0.0945, 0.0955],
         [0.0992, 0.0939, 0.0957,  ..., 0.0963, 0.0945, 0.0955],
         [0.0992, 0.0939, 0.0957,  ..., 0.0963, 0.0945, 0.0955],
         [0.7024, 0.7184, 0.7128,  ..., 0.7110, 0.7166, 0.7134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0488, 0.0426, 0.0285,  ..., 0.0223, 0.0439, 0.0536],
         [0.0488, 0.0426, 0.0285,  ..., 0.0223, 0.0439, 0.0536],
         [0.0648, 0.0426, 0.0333,  ..., 0.0587, 0.0439, 0.0536],
         [0.8376, 0.8722, 0.9097,  ..., 0.8966, 0.8684, 0.8392]],
        [[0.3188, 0.2175, 0.3015,  ..., 0.3454, 0.2500, 0.2900],
         [0.2271, 0.2175, 0.2328,  ..., 0.2242, 0.2500, 0.2367],
         [0.2271, 0.2175, 0.2328,  ..., 0.2177, 0.2500, 0.2367],
         [0.2271, 0.3474, 0.2328,  ..., 0.2127, 0.2500, 0.2367]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0968, 0.0916, 0.0941,  ..., 0.0941, 0.0946, 0.0983],
         [0.0968, 0.0916, 0.0941,  ..., 0.0941, 0.0946, 0.0983],
         [0.0968, 0.0916, 0.0941,  ..., 0.0941, 0.0946, 0.0983],
         [0.7096, 0.7251, 0.7176,  ..., 0.7176, 0.7163, 0.7052]],
        [[0.0974, 0.0970, 0.0964,  ..., 0.0984, 0.0968, 0.0960],
         [0.0974, 0.0970, 0.0964,  ..., 0.0984, 0.0968, 0.0960],
         [0.0974, 0.0970, 0.0964,  ..., 0.0984, 0.0968, 0.0960],
         [0.7079, 0.7091, 0.7107,  ..., 0.7049, 0.7095, 0.7119]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:21:28,204 [Process: 0] Synchronize training processes
2024-08-16 14:21:28,205 [Process: 0] Evaluating...
2024-08-16 14:21:28,206 [Process: 0] EPOCH 65:
2024-08-16 14:21:28,209 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2710, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2080],
         [0.2430, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2068],
         [0.2430, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.3785],
         [0.2430, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2068]],
        [[0.0379, 0.0353, 0.0383,  ..., 0.0376, 0.0315, 0.0350],
         [0.0379, 0.0353, 0.0383,  ..., 0.0376, 0.0315, 0.0350],
         [0.0379, 0.0379, 0.0383,  ..., 0.0376, 0.0923, 0.0350],
         [0.8862, 0.8914, 0.8850,  ..., 0.8871, 0.8447, 0.8949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0949, 0.0942, 0.0920,  ..., 0.0938, 0.0907, 0.0959],
         [0.0949, 0.0942, 0.0920,  ..., 0.0938, 0.0907, 0.0959],
         [0.0949, 0.0942, 0.0920,  ..., 0.0938, 0.0907, 0.0959],
         [0.7153, 0.7173, 0.7240,  ..., 0.7186, 0.7280, 0.7124]],
        [[0.1007, 0.0992, 0.0986,  ..., 0.0961, 0.0971, 0.0971],
         [0.1007, 0.0992, 0.0986,  ..., 0.0961, 0.0971, 0.0971],
         [0.1007, 0.0992, 0.0986,  ..., 0.0961, 0.0971, 0.0971],
         [0.6980, 0.7024, 0.7043,  ..., 0.7118, 0.7087, 0.7088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:21:30,081 [Process: 0] Synchronize training processes
2024-08-16 14:21:30,082 [Process: 0] Evaluating...
2024-08-16 14:21:30,084 [Process: 0] EPOCH 66:
2024-08-16 14:21:30,086 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2797, 0.2500,  ..., 0.2626, 0.2500, 0.2500],
         [0.2500, 0.2401, 0.2500,  ..., 0.2458, 0.2500, 0.2500],
         [0.2500, 0.2401, 0.2500,  ..., 0.2458, 0.2500, 0.2500],
         [0.2500, 0.2401, 0.2500,  ..., 0.2458, 0.2500, 0.2500]],
        [[0.0324, 0.0351, 0.0286,  ..., 0.0295, 0.0335, 0.0421],
         [0.0324, 0.0351, 0.0286,  ..., 0.0295, 0.0335, 0.0421],
         [0.0324, 0.0351, 0.0536,  ..., 0.0295, 0.0501, 0.0421],
         [0.9028, 0.8946, 0.8892,  ..., 0.9115, 0.8830, 0.8738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0924, 0.0946, 0.0926,  ..., 0.0919, 0.0885, 0.0910],
         [0.0924, 0.0946, 0.0926,  ..., 0.0919, 0.0885, 0.0910],
         [0.0924, 0.0946, 0.0926,  ..., 0.0919, 0.0885, 0.0910],
         [0.7227, 0.7162, 0.7223,  ..., 0.7242, 0.7344, 0.7269]],
        [[0.0974, 0.1009, 0.0945,  ..., 0.0958, 0.0975, 0.1019],
         [0.0974, 0.1009, 0.0945,  ..., 0.0958, 0.0975, 0.1019],
         [0.0974, 0.1009, 0.0945,  ..., 0.0958, 0.0975, 0.1019],
         [0.7078, 0.6974, 0.7164,  ..., 0.7126, 0.7074, 0.6944]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:21:31,959 [Process: 0] Synchronize training processes
2024-08-16 14:21:31,960 [Process: 0] Evaluating...
2024-08-16 14:21:31,962 [Process: 0] EPOCH 67:
2024-08-16 14:21:31,963 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2610, 0.2500,  ..., 0.2742, 0.3748, 0.2545],
         [0.2500, 0.2463, 0.2500,  ..., 0.2451, 0.2084, 0.2485],
         [0.2500, 0.2463, 0.2500,  ..., 0.2403, 0.2084, 0.2485],
         [0.2500, 0.2463, 0.2500,  ..., 0.2403, 0.2084, 0.2485]],
        [[0.0338, 0.0329, 0.0442,  ..., 0.0327, 0.0345, 0.0365],
         [0.0338, 0.0329, 0.0442,  ..., 0.0327, 0.0345, 0.0365],
         [0.0338, 0.0329, 0.0442,  ..., 0.0327, 0.0345, 0.0365],
         [0.8987, 0.9013, 0.8675,  ..., 0.9018, 0.8965, 0.8904]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0914, 0.0894, 0.0908,  ..., 0.0919, 0.0962, 0.0914],
         [0.0914, 0.0894, 0.0908,  ..., 0.0919, 0.0962, 0.0914],
         [0.0914, 0.0894, 0.0908,  ..., 0.0919, 0.0962, 0.0914],
         [0.7257, 0.7319, 0.7275,  ..., 0.7242, 0.7114, 0.7257]],
        [[0.0905, 0.0900, 0.0930,  ..., 0.0895, 0.0927, 0.0912],
         [0.0905, 0.0900, 0.0930,  ..., 0.0895, 0.0927, 0.0912],
         [0.0905, 0.0900, 0.0930,  ..., 0.0895, 0.0927, 0.0912],
         [0.7286, 0.7299, 0.7211,  ..., 0.7315, 0.7218, 0.7263]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:21:33,836 [Process: 0] Synchronize training processes
2024-08-16 14:21:33,836 [Process: 0] Evaluating...
2024-08-16 14:21:33,838 [Process: 0] EPOCH 68:
2024-08-16 14:21:33,840 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0340, 0.0375, 0.0334,  ..., 0.0291, 0.0451, 0.0441],
         [0.0340, 0.0375, 0.0334,  ..., 0.0291, 0.0451, 0.0441],
         [0.0340, 0.0375, 0.0334,  ..., 0.0291, 0.0451, 0.0532],
         [0.8980, 0.8874, 0.8997,  ..., 0.9128, 0.8648, 0.8586]],
        [[0.2921, 0.2744, 0.2500,  ..., 0.2500, 0.3151, 0.2686],
         [0.2360, 0.2419, 0.2500,  ..., 0.2500, 0.2283, 0.2438],
         [0.2360, 0.2419, 0.2500,  ..., 0.2500, 0.2283, 0.2438],
         [0.2360, 0.2419, 0.2500,  ..., 0.2500, 0.2283, 0.2438]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0891, 0.0918, 0.0943,  ..., 0.0915, 0.0892, 0.0870],
         [0.0891, 0.0918, 0.0943,  ..., 0.0915, 0.0892, 0.0870],
         [0.0891, 0.0918, 0.0943,  ..., 0.0915, 0.0892, 0.0870],
         [0.7326, 0.7247, 0.7172,  ..., 0.7254, 0.7323, 0.7391]],
        [[0.0853, 0.0872, 0.0877,  ..., 0.0927, 0.0821, 0.0837],
         [0.0853, 0.0872, 0.0877,  ..., 0.0927, 0.0821, 0.0837],
         [0.0853, 0.0872, 0.0877,  ..., 0.0927, 0.0821, 0.0837],
         [0.7441, 0.7383, 0.7369,  ..., 0.7219, 0.7536, 0.7490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:21:35,715 [Process: 0] Synchronize training processes
2024-08-16 14:21:35,716 [Process: 0] Evaluating...
2024-08-16 14:21:35,717 [Process: 0] EPOCH 69:
2024-08-16 14:21:35,719 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0244, 0.0278, 0.0278,  ..., 0.0369, 0.0299, 0.0378],
         [0.0244, 0.0278, 0.0278,  ..., 0.0369, 0.0299, 0.0378],
         [0.0244, 0.0278, 0.0278,  ..., 0.0369, 0.0299, 0.0524],
         [0.9269, 0.9166, 0.9166,  ..., 0.8893, 0.9104, 0.8720]],
        [[0.2653, 0.2841, 0.2500,  ..., 0.2545, 0.2936, 0.2500],
         [0.2449, 0.2386, 0.2500,  ..., 0.2485, 0.2355, 0.2500],
         [0.2449, 0.2386, 0.2500,  ..., 0.2485, 0.2355, 0.2500],
         [0.2449, 0.2386, 0.2500,  ..., 0.2485, 0.2355, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0886, 0.0905, 0.0853,  ..., 0.0862, 0.0878, 0.0880],
         [0.0886, 0.0905, 0.0853,  ..., 0.0862, 0.0878, 0.0880],
         [0.0886, 0.0905, 0.0853,  ..., 0.0862, 0.0878, 0.0880],
         [0.7341, 0.7284, 0.7441,  ..., 0.7414, 0.7367, 0.7360]],
        [[0.0916, 0.0977, 0.0921,  ..., 0.0941, 0.0960, 0.0883],
         [0.0916, 0.0977, 0.0921,  ..., 0.0941, 0.0960, 0.0883],
         [0.0916, 0.0977, 0.0921,  ..., 0.0941, 0.0960, 0.0883],
         [0.7251, 0.7068, 0.7238,  ..., 0.7176, 0.7120, 0.7350]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:21:37,598 [Process: 0] Synchronize training processes
2024-08-16 14:21:37,599 [Process: 0] Evaluating...
2024-08-16 14:21:37,600 [Process: 0] EPOCH 70:
2024-08-16 14:21:37,602 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2345, 0.2500, 0.2721,  ..., 0.2704, 0.2500, 0.2500],
         [0.2345, 0.2500, 0.2426,  ..., 0.2432, 0.2500, 0.2500],
         [0.2345, 0.2500, 0.2426,  ..., 0.2432, 0.2500, 0.2500],
         [0.2965, 0.2500, 0.2426,  ..., 0.2432, 0.2500, 0.2500]],
        [[0.0280, 0.0338, 0.0197,  ..., 0.0315, 0.0364, 0.0394],
         [0.0280, 0.0338, 0.0197,  ..., 0.0315, 0.0364, 0.0394],
         [0.0280, 0.0390, 0.0197,  ..., 0.0315, 0.0543, 0.0394],
         [0.9159, 0.8933, 0.9408,  ..., 0.9054, 0.8730, 0.8819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0817, 0.0865, 0.0865,  ..., 0.0839, 0.0829, 0.0851],
         [0.0817, 0.0865, 0.0865,  ..., 0.0839, 0.0829, 0.0851],
         [0.0817, 0.0865, 0.0865,  ..., 0.0839, 0.0829, 0.0851],
         [0.7550, 0.7406, 0.7406,  ..., 0.7484, 0.7513, 0.7448]],
        [[0.0947, 0.0884, 0.0861,  ..., 0.0848, 0.0934, 0.0882],
         [0.0947, 0.0884, 0.0861,  ..., 0.0848, 0.0934, 0.0882],
         [0.0947, 0.0884, 0.0861,  ..., 0.0848, 0.0934, 0.0882],
         [0.7159, 0.7348, 0.7418,  ..., 0.7455, 0.7198, 0.7354]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:21:39,482 [Process: 0] Synchronize training processes
2024-08-16 14:21:39,482 [Process: 0] Evaluating...
2024-08-16 14:21:39,484 [Process: 0] EPOCH 71:
2024-08-16 14:21:39,486 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2895, 0.2609, 0.2500,  ..., 0.2764, 0.2506, 0.1999],
         [0.2368, 0.2464, 0.2500,  ..., 0.2412, 0.2498, 0.1999],
         [0.2368, 0.2464, 0.2500,  ..., 0.2412, 0.2498, 0.1999],
         [0.2368, 0.2464, 0.2500,  ..., 0.2412, 0.2498, 0.4002]],
        [[0.0244, 0.0304, 0.0223,  ..., 0.0325, 0.0256, 0.0285],
         [0.0244, 0.0304, 0.0223,  ..., 0.0325, 0.0256, 0.0285],
         [0.0284, 0.0347, 0.0223,  ..., 0.0382, 0.0420, 0.0425],
         [0.9228, 0.9045, 0.9332,  ..., 0.8969, 0.9068, 0.9006]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0851, 0.0866, 0.0871,  ..., 0.0890, 0.0825, 0.0849],
         [0.0851, 0.0866, 0.0871,  ..., 0.0890, 0.0825, 0.0849],
         [0.0851, 0.0866, 0.0871,  ..., 0.0890, 0.0825, 0.0849],
         [0.7447, 0.7403, 0.7386,  ..., 0.7330, 0.7524, 0.7453]],
        [[0.0870, 0.0876, 0.0858,  ..., 0.0805, 0.0866, 0.0846],
         [0.0870, 0.0876, 0.0858,  ..., 0.0805, 0.0866, 0.0846],
         [0.0870, 0.0876, 0.0858,  ..., 0.0805, 0.0866, 0.0846],
         [0.7389, 0.7371, 0.7427,  ..., 0.7586, 0.7402, 0.7461]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2610, 0.2599, 0.2576,  ..., 0.2738, 0.2500, 0.2139],
         [0.2463, 0.2467, 0.2475,  ..., 0.2421, 0.2500, 0.2139],
         [0.2463, 0.2467, 0.2475,  ..., 0.2421, 0.2500, 0.2139],
         [0.2463, 0.2467, 0.2475,  ..., 0.2421, 0.2500, 0.3583]],
        [[0.0337, 0.0296, 0.0252,  ..., 0.0315, 0.0307, 0.0375],
         [0.0337, 0.0296, 0.0252,  ..., 0.0315, 0.0307, 0.0375],
         [0.0337, 0.0296, 0.0542,  ..., 0.0430, 0.0703, 0.0375],
         [0.8990, 0.9111, 0.8955,  ..., 0.8940, 0.8682, 0.8876]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:21:41,359 [Process: 0] Synchronize training processes
2024-08-16 14:21:41,360 [Process: 0] Evaluating...
2024-08-16 14:21:41,368 [Process: 0] EPOCH 72:
2024-08-16 14:21:41,371 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0847, 0.0869, 0.0823,  ..., 0.0858, 0.0863, 0.0861],
         [0.0847, 0.0869, 0.0823,  ..., 0.0858, 0.0863, 0.0861],
         [0.0847, 0.0869, 0.0823,  ..., 0.0858, 0.0863, 0.0861],
         [0.7458, 0.7393, 0.7532,  ..., 0.7426, 0.7411, 0.7416]],
        [[0.0805, 0.0837, 0.0800,  ..., 0.0895, 0.0878, 0.0887],
         [0.0805, 0.0837, 0.0800,  ..., 0.0895, 0.0878, 0.0887],
         [0.0805, 0.0837, 0.0800,  ..., 0.0895, 0.0878, 0.0887],
         [0.7584, 0.7489, 0.7601,  ..., 0.7316, 0.7366, 0.7338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2213, 0.2588, 0.2500,  ..., 0.2500, 0.2500, 0.2638],
         [0.2213, 0.2471, 0.2500,  ..., 0.2500, 0.2500, 0.2454],
         [0.2213, 0.2471, 0.2500,  ..., 0.2500, 0.2500, 0.2454],
         [0.3360, 0.2471, 0.2500,  ..., 0.2500, 0.2500, 0.2454]],
        [[0.0330, 0.0312, 0.0320,  ..., 0.0351, 0.0234, 0.0367],
         [0.0330, 0.0312, 0.0320,  ..., 0.0351, 0.0234, 0.0367],
         [0.0330, 0.0312, 0.0331,  ..., 0.0351, 0.0234, 0.0367],
         [0.9009, 0.9064, 0.9030,  ..., 0.8948, 0.9297, 0.8898]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:43,254 [Process: 0] Synchronize training processes
2024-08-16 14:21:43,255 [Process: 0] Evaluating...
2024-08-16 14:21:43,257 [Process: 0] EPOCH 73:
2024-08-16 14:21:43,258 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0799, 0.0832, 0.0825,  ..., 0.0789, 0.0826, 0.0827],
         [0.0799, 0.0832, 0.0825,  ..., 0.0789, 0.0826, 0.0827],
         [0.0799, 0.0832, 0.0825,  ..., 0.0789, 0.0826, 0.0827],
         [0.7602, 0.7504, 0.7526,  ..., 0.7634, 0.7523, 0.7520]],
        [[0.0900, 0.0899, 0.0845,  ..., 0.0883, 0.0865, 0.0788],
         [0.0900, 0.0899, 0.0845,  ..., 0.0883, 0.0865, 0.0788],
         [0.0900, 0.0899, 0.0845,  ..., 0.0883, 0.0865, 0.0788],
         [0.7301, 0.7304, 0.7465,  ..., 0.7350, 0.7406, 0.7635]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0268, 0.0288, 0.0252,  ..., 0.0257, 0.0245, 0.0291],
         [0.0268, 0.0288, 0.0252,  ..., 0.0257, 0.0245, 0.0291],
         [0.0320, 0.0288, 0.0252,  ..., 0.0308, 0.0378, 0.0348],
         [0.9144, 0.9135, 0.9244,  ..., 0.9178, 0.9132, 0.9071]],
        [[0.2618, 0.2500, 0.2500,  ..., 0.2380, 0.2580, 0.2683],
         [0.2461, 0.2500, 0.2500,  ..., 0.2380, 0.2473, 0.2439],
         [0.2461, 0.2500, 0.2500,  ..., 0.2380, 0.2473, 0.2439],
         [0.2461, 0.2500, 0.2500,  ..., 0.2859, 0.2473, 0.2439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:45,158 [Process: 0] Synchronize training processes
2024-08-16 14:21:45,159 [Process: 0] Evaluating...
2024-08-16 14:21:45,160 [Process: 0] EPOCH 74:
2024-08-16 14:21:45,163 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0846, 0.0789, 0.0795,  ..., 0.0811, 0.0864, 0.0888],
         [0.0846, 0.0789, 0.0795,  ..., 0.0811, 0.0864, 0.0888],
         [0.0846, 0.0789, 0.0795,  ..., 0.0811, 0.0864, 0.0888],
         [0.7463, 0.7633, 0.7615,  ..., 0.7568, 0.7409, 0.7335]],
        [[0.0828, 0.0834, 0.0803,  ..., 0.0824, 0.0864, 0.0818],
         [0.0828, 0.0834, 0.0803,  ..., 0.0824, 0.0864, 0.0818],
         [0.0828, 0.0834, 0.0803,  ..., 0.0824, 0.0864, 0.0818],
         [0.7516, 0.7499, 0.7590,  ..., 0.7528, 0.7409, 0.7547]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2500,  ..., 0.2099, 0.3403, 0.2564],
         [0.2500, 0.2500, 0.2500,  ..., 0.2099, 0.2199, 0.2479],
         [0.2500, 0.2500, 0.2500,  ..., 0.2099, 0.2199, 0.2479],
         [0.2500, 0.2500, 0.2500,  ..., 0.3703, 0.2199, 0.2479]],
        [[0.0369, 0.0287, 0.0238,  ..., 0.0215, 0.0296, 0.0354],
         [0.0369, 0.0287, 0.0238,  ..., 0.0215, 0.0296, 0.0354],
         [0.0454, 0.0287, 0.0287,  ..., 0.0236, 0.0490, 0.0765],
         [0.8807, 0.9138, 0.9237,  ..., 0.9333, 0.8917, 0.8528]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:47,038 [Process: 0] Synchronize training processes
2024-08-16 14:21:47,039 [Process: 0] Evaluating...
2024-08-16 14:21:47,041 [Process: 0] EPOCH 75:
2024-08-16 14:21:47,043 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:48,914 [Process: 0] Synchronize training processes
2024-08-16 14:21:48,914 [Process: 0] Evaluating...
2024-08-16 14:21:48,916 [Process: 0] EPOCH 76:
2024-08-16 14:21:48,918 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0750, 0.0818, 0.0803,  ..., 0.0847, 0.0811, 0.0820],
         [0.0750, 0.0818, 0.0803,  ..., 0.0847, 0.0811, 0.0820],
         [0.0750, 0.0818, 0.0803,  ..., 0.0847, 0.0811, 0.0820],
         [0.7749, 0.7546, 0.7592,  ..., 0.7460, 0.7566, 0.7540]],
        [[0.0744, 0.0731, 0.0745,  ..., 0.0865, 0.0819, 0.0787],
         [0.0744, 0.0731, 0.0745,  ..., 0.0865, 0.0819, 0.0787],
         [0.0744, 0.0731, 0.0745,  ..., 0.0865, 0.0819, 0.0787],
         [0.7769, 0.7808, 0.7766,  ..., 0.7406, 0.7542, 0.7640]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1811, 0.2940, 0.2805,  ..., 0.2500, 0.2500, 0.2654],
         [0.1811, 0.2353, 0.2398,  ..., 0.2500, 0.2500, 0.2449],
         [0.1811, 0.2353, 0.2398,  ..., 0.2500, 0.2500, 0.2449],
         [0.4567, 0.2353, 0.2398,  ..., 0.2500, 0.2500, 0.2449]],
        [[0.0222, 0.0212, 0.0284,  ..., 0.0265, 0.0265, 0.0345],
         [0.0222, 0.0212, 0.0284,  ..., 0.0265, 0.0265, 0.0345],
         [0.0374, 0.0266, 0.0401,  ..., 0.0265, 0.0265, 0.0345],
         [0.9183, 0.9311, 0.9030,  ..., 0.9204, 0.9205, 0.8965]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:50,800 [Process: 0] Synchronize training processes
2024-08-16 14:21:50,800 [Process: 0] Evaluating...
2024-08-16 14:21:50,802 [Process: 0] EPOCH 77:
2024-08-16 14:21:50,804 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0826, 0.0767, 0.0771,  ..., 0.0800, 0.0797, 0.0820],
         [0.0826, 0.0767, 0.0771,  ..., 0.0800, 0.0797, 0.0820],
         [0.0826, 0.0767, 0.0771,  ..., 0.0800, 0.0797, 0.0820],
         [0.7522, 0.7700, 0.7686,  ..., 0.7601, 0.7608, 0.7540]],
        [[0.0812, 0.0815, 0.0779,  ..., 0.0748, 0.0751, 0.0713],
         [0.0812, 0.0815, 0.0779,  ..., 0.0748, 0.0751, 0.0713],
         [0.0812, 0.0815, 0.0779,  ..., 0.0748, 0.0751, 0.0713],
         [0.7563, 0.7555, 0.7663,  ..., 0.7757, 0.7746, 0.7860]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0427, 0.0286, 0.0407,  ..., 0.0301, 0.0261, 0.0229],
         [0.0427, 0.0286, 0.0407,  ..., 0.0301, 0.0261, 0.0229],
         [0.0427, 0.0494, 0.0793,  ..., 0.0408, 0.0279, 0.0229],
         [0.8719, 0.8934, 0.8393,  ..., 0.8990, 0.9199, 0.9314]],
        [[0.2476, 0.2881, 0.2500,  ..., 0.2600, 0.2748, 0.2714],
         [0.2476, 0.2373, 0.2500,  ..., 0.2467, 0.2417, 0.2429],
         [0.2476, 0.2373, 0.2500,  ..., 0.2467, 0.2417, 0.2429],
         [0.2571, 0.2373, 0.2500,  ..., 0.2467, 0.2417, 0.2429]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:52,668 [Process: 0] Synchronize training processes
2024-08-16 14:21:52,669 [Process: 0] Evaluating...
2024-08-16 14:21:52,671 [Process: 0] EPOCH 78:
2024-08-16 14:21:52,673 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0782, 0.0821, 0.0762,  ..., 0.0827, 0.0752, 0.0801],
         [0.0782, 0.0821, 0.0762,  ..., 0.0827, 0.0752, 0.0801],
         [0.0782, 0.0821, 0.0762,  ..., 0.0827, 0.0752, 0.0801],
         [0.7653, 0.7537, 0.7714,  ..., 0.7518, 0.7744, 0.7598]],
        [[0.0791, 0.0820, 0.0807,  ..., 0.0790, 0.0802, 0.0800],
         [0.0791, 0.0820, 0.0807,  ..., 0.0790, 0.0802, 0.0800],
         [0.0791, 0.0820, 0.0807,  ..., 0.0790, 0.0802, 0.0800],
         [0.7627, 0.7540, 0.7579,  ..., 0.7631, 0.7594, 0.7601]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0421, 0.0654, 0.0325,  ..., 0.0424, 0.0527, 0.0319],
         [0.0421, 0.0654, 0.0325,  ..., 0.0424, 0.0527, 0.0319],
         [0.0738, 0.1245, 0.0498,  ..., 0.0424, 0.1133, 0.0382],
         [0.8421, 0.7448, 0.8852,  ..., 0.8729, 0.7814, 0.8981]],
        [[0.2660, 0.3038, 0.2643,  ..., 0.0521, 0.2443, 0.0620],
         [0.2447, 0.2321, 0.2452,  ..., 0.0521, 0.2443, 0.0620],
         [0.2447, 0.2321, 0.2452,  ..., 0.0521, 0.2443, 0.0620],
         [0.2447, 0.2321, 0.2452,  ..., 0.8436, 0.2671, 0.8140]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:54,614 [Process: 0] Synchronize training processes
2024-08-16 14:21:54,614 [Process: 0] Evaluating...
2024-08-16 14:21:54,616 [Process: 0] EPOCH 79:
2024-08-16 14:21:54,618 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0829, 0.0769, 0.0791,  ..., 0.0826, 0.0765, 0.0831],
         [0.0829, 0.0769, 0.0791,  ..., 0.0826, 0.0765, 0.0831],
         [0.0829, 0.0769, 0.0791,  ..., 0.0826, 0.0765, 0.0831],
         [0.7513, 0.7693, 0.7626,  ..., 0.7523, 0.7705, 0.7508]],
        [[0.0811, 0.0769, 0.0771,  ..., 0.0827, 0.0708, 0.0697],
         [0.0811, 0.0769, 0.0771,  ..., 0.0827, 0.0708, 0.0697],
         [0.0811, 0.0769, 0.0771,  ..., 0.0827, 0.0708, 0.0697],
         [0.7566, 0.7692, 0.7686,  ..., 0.7519, 0.7875, 0.7908]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2650, 0.2500,  ..., 0.1432, 0.2500, 0.2826],
         [0.2500, 0.2450, 0.2500,  ..., 0.1432, 0.2500, 0.2391],
         [0.2500, 0.2450, 0.2500,  ..., 0.1432, 0.2500, 0.2391],
         [0.2500, 0.2450, 0.2500,  ..., 0.5703, 0.2500, 0.2391]],
        [[0.0320, 0.0111, 0.0102,  ..., 0.0329, 0.0163, 0.0189],
         [0.0320, 0.0111, 0.0102,  ..., 0.0329, 0.0163, 0.0189],
         [0.0399, 0.0111, 0.0102,  ..., 0.0329, 0.0163, 0.0189],
         [0.8962, 0.9667, 0.9694,  ..., 0.9013, 0.9510, 0.9432]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:56,616 [Process: 0] Synchronize training processes
2024-08-16 14:21:56,617 [Process: 0] Evaluating...
2024-08-16 14:21:56,618 [Process: 0] EPOCH 80:
2024-08-16 14:21:56,620 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0747, 0.0766, 0.0690,  ..., 0.0766, 0.0725, 0.0750],
         [0.0747, 0.0766, 0.0690,  ..., 0.0766, 0.0725, 0.0750],
         [0.0747, 0.0766, 0.0690,  ..., 0.0766, 0.0725, 0.0750],
         [0.7760, 0.7703, 0.7929,  ..., 0.7701, 0.7824, 0.7750]],
        [[0.0711, 0.0840, 0.0760,  ..., 0.0684, 0.0976, 0.0874],
         [0.0711, 0.0840, 0.0760,  ..., 0.0684, 0.0976, 0.0874],
         [0.0711, 0.0840, 0.0760,  ..., 0.0684, 0.0976, 0.0874],
         [0.7867, 0.7479, 0.7721,  ..., 0.7947, 0.7073, 0.7379]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1159, 0.2500, 0.2319,  ..., 0.2500, 0.2500, 0.2582],
         [0.1159, 0.2500, 0.2319,  ..., 0.2500, 0.2500, 0.2473],
         [0.1159, 0.2500, 0.2319,  ..., 0.2500, 0.2500, 0.2473],
         [0.6523, 0.2500, 0.3044,  ..., 0.2500, 0.2500, 0.2473]],
        [[0.0180, 0.0494, 0.0221,  ..., 0.1902, 0.0455, 0.0349],
         [0.0180, 0.0494, 0.0221,  ..., 0.1902, 0.0455, 0.0349],
         [0.0180, 0.0804, 0.0255,  ..., 0.3127, 0.0455, 0.0349],
         [0.9460, 0.8209, 0.9303,  ..., 0.3069, 0.8635, 0.8953]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:21:58,626 [Process: 0] Synchronize training processes
2024-08-16 14:21:58,627 [Process: 0] Evaluating...
2024-08-16 14:21:58,629 [Process: 0] EPOCH 81:
2024-08-16 14:21:58,631 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0751, 0.0725, 0.0762,  ..., 0.0693, 0.0749, 0.0771],
         [0.0751, 0.0725, 0.0762,  ..., 0.0693, 0.0749, 0.0771],
         [0.0751, 0.0725, 0.0762,  ..., 0.0693, 0.0749, 0.0771],
         [0.7746, 0.7824, 0.7713,  ..., 0.7922, 0.7752, 0.7687]],
        [[0.0777, 0.0706, 0.0763,  ..., 0.0813, 0.0805, 0.0748],
         [0.0777, 0.0706, 0.0763,  ..., 0.0813, 0.0805, 0.0748],
         [0.0777, 0.0706, 0.0763,  ..., 0.0813, 0.0805, 0.0748],
         [0.7668, 0.7882, 0.7712,  ..., 0.7560, 0.7584, 0.7757]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3254, 0.2547, 0.2798,  ..., 0.2653, 0.2500, 0.2586],
         [0.2249, 0.2484, 0.2401,  ..., 0.2449, 0.2500, 0.2471],
         [0.2249, 0.2484, 0.2401,  ..., 0.2449, 0.2500, 0.2471],
         [0.2249, 0.2484, 0.2401,  ..., 0.2449, 0.2500, 0.2471]],
        [[0.0144, 0.0835, 0.0053,  ..., 0.0766, 0.0143, 0.0297],
         [0.0144, 0.0835, 0.0053,  ..., 0.0766, 0.0143, 0.0297],
         [0.0144, 0.1344, 0.0053,  ..., 0.0996, 0.0143, 0.0297],
         [0.9567, 0.6986, 0.9840,  ..., 0.7473, 0.9570, 0.9110]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:22:00,610 [Process: 0] Synchronize training processes
2024-08-16 14:22:00,610 [Process: 0] Evaluating...
2024-08-16 14:22:00,619 [Process: 0] EPOCH 82:
2024-08-16 14:22:00,621 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0693, 0.0753, 0.0620,  ..., 0.0650, 0.0774, 0.0691],
         [0.0693, 0.0753, 0.0620,  ..., 0.0650, 0.0774, 0.0691],
         [0.0693, 0.0753, 0.0620,  ..., 0.0650, 0.0774, 0.0691],
         [0.7920, 0.7740, 0.8141,  ..., 0.8051, 0.7678, 0.7928]],
        [[0.0786, 0.0821, 0.0752,  ..., 0.0702, 0.0808, 0.0754],
         [0.0786, 0.0821, 0.0752,  ..., 0.0702, 0.0808, 0.0754],
         [0.0786, 0.0821, 0.0752,  ..., 0.0702, 0.0808, 0.0754],
         [0.7643, 0.7537, 0.7744,  ..., 0.7894, 0.7576, 0.7738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2688, 0.2190, 0.2500,  ..., 0.1032, 0.1674, 0.2839],
         [0.2437, 0.2190, 0.2500,  ..., 0.1032, 0.1674, 0.2387],
         [0.2437, 0.2190, 0.2500,  ..., 0.1032, 0.1674, 0.2387],
         [0.2437, 0.3430, 0.2500,  ..., 0.6903, 0.4979, 0.2387]],
        [[0.0102, 0.0326, 0.0514,  ..., 0.0398, 0.0380, 0.0357],
         [0.0102, 0.0326, 0.0514,  ..., 0.0398, 0.0380, 0.0357],
         [0.0102, 0.0383, 0.0604,  ..., 0.0536, 0.0450, 0.0357],
         [0.9695, 0.8966, 0.8368,  ..., 0.8668, 0.8790, 0.8928]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-16 14:22:02,553 [Process: 0] Synchronize training processes
2024-08-16 14:22:02,554 [Process: 0] Evaluating...
2024-08-16 14:22:02,556 [Process: 0] EPOCH 83:
2024-08-16 14:22:02,558 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0744, 0.0651, 0.0938,  ..., 0.0710, 0.0764, 0.0745],
         [0.0744, 0.0651, 0.0938,  ..., 0.0710, 0.0764, 0.0745],
         [0.0744, 0.0651, 0.0938,  ..., 0.0710, 0.0764, 0.0745],
         [0.7767, 0.8048, 0.7185,  ..., 0.7871, 0.7708, 0.7766]],
        [[0.0732, 0.0686, 0.0760,  ..., 0.0662, 0.0820, 0.0791],
         [0.0732, 0.0686, 0.0760,  ..., 0.0662, 0.0820, 0.0791],
         [0.0732, 0.0686, 0.0760,  ..., 0.0662, 0.0820, 0.0791],
         [0.7804, 0.7943, 0.7721,  ..., 0.8013, 0.7539, 0.7627]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0649, 0.1358, 0.1641,  ..., 0.2559, 0.0030, 0.2591],
         [0.0649, 0.1358, 0.1641,  ..., 0.2480, 0.0030, 0.2470],
         [0.0649, 0.1358, 0.1641,  ..., 0.2480, 0.0030, 0.2470],
         [0.8052, 0.5927, 0.5078,  ..., 0.2480, 0.9911, 0.2470]],
        [[0.0232, 0.0292, 0.0191,  ..., 0.0229, 0.0551, 0.0940],
         [0.0232, 0.0292, 0.0191,  ..., 0.0229, 0.0551, 0.0940],
         [0.0232, 0.0292, 0.0191,  ..., 0.0229, 0.0551, 0.2054],
         [0.9303, 0.9123, 0.9426,  ..., 0.9314, 0.8346, 0.6065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:22:04,513 [Process: 0] Synchronize training processes
2024-08-16 14:22:04,513 [Process: 0] Evaluating...
2024-08-16 14:22:04,515 [Process: 0] EPOCH 84:
2024-08-16 14:22:04,517 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0721, 0.0760, 0.0664,  ..., 0.0853, 0.0701, 0.0712],
         [0.0721, 0.0760, 0.0664,  ..., 0.0853, 0.0701, 0.0712],
         [0.0721, 0.0760, 0.0664,  ..., 0.0853, 0.0701, 0.0712],
         [0.7838, 0.7720, 0.8008,  ..., 0.7442, 0.7898, 0.7863]],
        [[0.0859, 0.0692, 0.0802,  ..., 0.0701, 0.0846, 0.0790],
         [0.0859, 0.0692, 0.0802,  ..., 0.0701, 0.0846, 0.0790],
         [0.0859, 0.0692, 0.0802,  ..., 0.0701, 0.0846, 0.0790],
         [0.7422, 0.7925, 0.7595,  ..., 0.7897, 0.7462, 0.7631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2324, 0.3403, 0.2900,  ..., 0.2500, 0.2751, 0.2587],
         [0.2324, 0.2199, 0.2367,  ..., 0.2500, 0.2416, 0.2471],
         [0.2324, 0.2199, 0.2367,  ..., 0.2500, 0.2416, 0.2471],
         [0.3027, 0.2199, 0.2367,  ..., 0.2500, 0.2416, 0.2471]],
        [[0.0386, 0.0355, 0.0300,  ..., 0.0518, 0.1189, 0.0510],
         [0.0386, 0.0355, 0.0300,  ..., 0.0518, 0.1189, 0.0510],
         [0.0386, 0.0403, 0.0300,  ..., 0.0652, 0.1378, 0.0510],
         [0.8843, 0.8888, 0.9100,  ..., 0.8311, 0.6244, 0.8470]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:22:06,623 [Process: 0] Synchronize training processes
2024-08-16 14:22:06,623 [Process: 0] Evaluating...
2024-08-16 14:22:06,625 [Process: 0] EPOCH 85:
2024-08-16 14:22:06,627 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0655, 0.0837, 0.0622,  ..., 0.0742, 0.0848, 0.0640],
         [0.0655, 0.0837, 0.0622,  ..., 0.0742, 0.0848, 0.0640],
         [0.0655, 0.0837, 0.0622,  ..., 0.0742, 0.0848, 0.0640],
         [0.8035, 0.7490, 0.8134,  ..., 0.7775, 0.7456, 0.8081]],
        [[0.0790, 0.0736, 0.0766,  ..., 0.0803, 0.0660, 0.0820],
         [0.0790, 0.0736, 0.0766,  ..., 0.0803, 0.0660, 0.0820],
         [0.0790, 0.0736, 0.0766,  ..., 0.0803, 0.0660, 0.0820],
         [0.7631, 0.7793, 0.7701,  ..., 0.7590, 0.8019, 0.7539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0502, 0.0452, 0.0310,  ..., 0.0410, 0.0617, 0.0256],
         [0.0502, 0.0452, 0.0310,  ..., 0.0410, 0.0617, 0.0256],
         [0.0502, 0.0452, 0.0310,  ..., 0.0467, 0.0688, 0.0265],
         [0.8493, 0.8643, 0.9071,  ..., 0.8713, 0.8077, 0.9224]],
        [[0.2516, 0.1738, 0.2500,  ..., 0.2008, 0.1273, 0.0172],
         [0.2495, 0.1738, 0.2500,  ..., 0.2008, 0.1273, 0.0172],
         [0.2495, 0.1738, 0.2500,  ..., 0.2008, 0.1273, 0.0172],
         [0.2495, 0.4785, 0.2500,  ..., 0.3977, 0.6182, 0.9483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:22:08,701 [Process: 0] Synchronize training processes
2024-08-16 14:22:08,701 [Process: 0] Evaluating...
2024-08-16 14:22:08,703 [Process: 0] EPOCH 86:
2024-08-16 14:22:08,705 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0647, 0.0594, 0.0556,  ..., 0.0754, 0.0795, 0.0598],
         [0.0647, 0.0594, 0.0556,  ..., 0.0754, 0.0795, 0.0598],
         [0.0647, 0.0594, 0.0556,  ..., 0.0754, 0.0795, 0.0598],
         [0.8058, 0.8219, 0.8333,  ..., 0.7739, 0.7616, 0.8206]],
        [[0.0805, 0.0583, 0.0693,  ..., 0.0725, 0.0862, 0.0612],
         [0.0805, 0.0583, 0.0693,  ..., 0.0725, 0.0862, 0.0612],
         [0.0805, 0.0583, 0.0693,  ..., 0.0725, 0.0862, 0.0612],
         [0.7585, 0.8252, 0.7920,  ..., 0.7826, 0.7415, 0.8164]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3163, 0.1785, 0.2512,  ..., 0.3231, 0.1998, 0.2463],
         [0.2279, 0.1785, 0.2496,  ..., 0.2256, 0.1998, 0.2463],
         [0.2279, 0.1785, 0.2496,  ..., 0.2256, 0.1998, 0.2463],
         [0.2279, 0.4646, 0.2496,  ..., 0.2256, 0.4006, 0.2611]],
        [[0.0566, 0.0587, 0.0267,  ..., 0.0306, 0.0420, 0.0375],
         [0.0566, 0.0587, 0.0267,  ..., 0.0306, 0.0420, 0.0375],
         [0.0680, 0.0707, 0.0267,  ..., 0.0306, 0.0602, 0.0376],
         [0.8188, 0.8119, 0.9199,  ..., 0.9081, 0.8558, 0.8873]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:22:10,800 [Process: 0] Synchronize training processes
2024-08-16 14:22:10,800 [Process: 0] Evaluating...
2024-08-16 14:22:10,802 [Process: 0] EPOCH 87:
2024-08-16 14:22:10,804 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0653, 0.0592, 0.0682,  ..., 0.0617, 0.0908, 0.0863],
         [0.0653, 0.0592, 0.0682,  ..., 0.0617, 0.0908, 0.0863],
         [0.0653, 0.0592, 0.0682,  ..., 0.0617, 0.0908, 0.0863],
         [0.8041, 0.8225, 0.7953,  ..., 0.8148, 0.7277, 0.7411]],
        [[0.0623, 0.0659, 0.0629,  ..., 0.0578, 0.0783, 0.0848],
         [0.0623, 0.0659, 0.0629,  ..., 0.0578, 0.0783, 0.0848],
         [0.0623, 0.0659, 0.0629,  ..., 0.0578, 0.0783, 0.0848],
         [0.8132, 0.8024, 0.8114,  ..., 0.8266, 0.7650, 0.7455]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2255, 0.2649, 0.1838,  ..., 0.2737, 0.1374, 0.2500],
         [0.2255, 0.2450, 0.1838,  ..., 0.2421, 0.1374, 0.2500],
         [0.2255, 0.2450, 0.1838,  ..., 0.2421, 0.1374, 0.2500],
         [0.3234, 0.2450, 0.4487,  ..., 0.2421, 0.5877, 0.2500]],
        [[0.0695, 0.0863, 0.0290,  ..., 0.0356, 0.0444, 0.0655],
         [0.0695, 0.0863, 0.0290,  ..., 0.0356, 0.0444, 0.0655],
         [0.0830, 0.0863, 0.0290,  ..., 0.0356, 0.0444, 0.0655],
         [0.7780, 0.7411, 0.9131,  ..., 0.8931, 0.8668, 0.8036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:22:12,893 [Process: 0] Synchronize training processes
2024-08-16 14:22:12,893 [Process: 0] Evaluating...
2024-08-16 14:22:12,895 [Process: 0] EPOCH 88:
2024-08-16 14:22:12,897 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0634, 0.0617, 0.0610,  ..., 0.0511, 0.0633, 0.0672],
         [0.0634, 0.0617, 0.0610,  ..., 0.0511, 0.0633, 0.0672],
         [0.0634, 0.0617, 0.0610,  ..., 0.0511, 0.0633, 0.0672],
         [0.8098, 0.8150, 0.8171,  ..., 0.8468, 0.8102, 0.7984]],
        [[0.0909, 0.0789, 0.0647,  ..., 0.0807, 0.0829, 0.0905],
         [0.0909, 0.0789, 0.0647,  ..., 0.0807, 0.0829, 0.0905],
         [0.0909, 0.0789, 0.0647,  ..., 0.0807, 0.0829, 0.0905],
         [0.7274, 0.7632, 0.8058,  ..., 0.7578, 0.7514, 0.7284]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0353, 0.0536, 0.0448,  ..., 0.0570, 0.0439, 0.0378],
         [0.0353, 0.0536, 0.0448,  ..., 0.0570, 0.0439, 0.0378],
         [0.0433, 0.0536, 0.0511,  ..., 0.0570, 0.0653, 0.0408],
         [0.8862, 0.8392, 0.8594,  ..., 0.8291, 0.8470, 0.8836]],
        [[0.2875, 0.0190, 0.1585,  ..., 0.3067, 0.2500, 0.2500],
         [0.2375, 0.0190, 0.1585,  ..., 0.2311, 0.2500, 0.2500],
         [0.2375, 0.0190, 0.1585,  ..., 0.2311, 0.2500, 0.2500],
         [0.2375, 0.9430, 0.5244,  ..., 0.2311, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:22:14,972 [Process: 0] Synchronize training processes
2024-08-16 14:22:14,972 [Process: 0] Evaluating...
2024-08-16 14:22:14,974 [Process: 0] EPOCH 89:
2024-08-16 14:22:14,976 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0594, 0.0686, 0.0456,  ..., 0.0634, 0.0669, 0.0894],
         [0.0594, 0.0686, 0.0456,  ..., 0.0634, 0.0669, 0.0894],
         [0.0594, 0.0686, 0.0456,  ..., 0.0634, 0.0669, 0.0894],
         [0.8217, 0.7942, 0.8631,  ..., 0.8097, 0.7993, 0.7319]],
        [[0.0650, 0.0661, 0.0704,  ..., 0.0686, 0.0701, 0.0671],
         [0.0650, 0.0661, 0.0704,  ..., 0.0686, 0.0701, 0.0671],
         [0.0650, 0.0661, 0.0704,  ..., 0.0686, 0.0701, 0.0671],
         [0.8049, 0.8018, 0.7887,  ..., 0.7941, 0.7897, 0.7987]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0358, 0.0602, 0.0598,  ..., 0.0234, 0.0342, 0.0288],
         [0.0358, 0.0602, 0.0598,  ..., 0.0234, 0.0342, 0.0288],
         [0.0393, 0.0802, 0.0774,  ..., 0.0234, 0.0388, 0.0396],
         [0.8891, 0.7994, 0.8030,  ..., 0.9299, 0.8928, 0.9028]],
        [[0.2985, 0.0598, 0.2500,  ..., 0.2500, 0.2589, 0.2763],
         [0.2338, 0.0598, 0.2500,  ..., 0.2500, 0.2470, 0.2412],
         [0.2338, 0.0598, 0.2500,  ..., 0.2500, 0.2470, 0.2412],
         [0.2338, 0.8206, 0.2500,  ..., 0.2500, 0.2470, 0.2412]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0655, 0.0696, 0.0501,  ..., 0.0662, 0.0685, 0.0720],
         [0.0655, 0.0696, 0.0501,  ..., 0.0662, 0.0685, 0.0720],
         [0.0655, 0.0696, 0.0501,  ..., 0.0662, 0.0685, 0.0720],
         [0.8034, 0.7913, 0.8497,  ..., 0.8015, 0.7945, 0.7841]],
        [[0.0756, 0.0523, 0.0638,  ..., 0.0535, 0.0556, 0.0626],
         [0.0756, 0.0523, 0.0638,  ..., 0.0535, 0.0556, 0.0626],
         [0.0756, 0.0523, 0.0638,  ..., 0.0535, 0.0556, 0.0626],
         [0.7731, 0.8430, 0.8086,  ..., 0.8394, 0.8331, 0.8122]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0023, 0.0285, 0.2500,  ..., 0.2500, 0.0773, 0.1746],
         [0.0023, 0.0285, 0.2500,  ..., 0.2500, 0.0773, 0.1746],
         [0.0023, 0.0285, 0.2500,  ..., 0.2500, 0.0773, 0.1746],
         [0.9931, 0.9145, 0.2500,  ..., 0.2500, 0.7680, 0.4762]],
        [[0.1135, 0.1119, 0.1128,  ..., 0.1121, 0.0678, 0.0861],
         [0.1135, 0.1119, 0.1128,  ..., 0.1121, 0.0678, 0.0861],
         [0.1135, 0.1119, 0.1387,  ..., 0.1594, 0.0678, 0.1036],
         [0.6595, 0.6643, 0.6357,  ..., 0.6164, 0.7966, 0.7242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:22:17,078 [Process: 0] Synchronize training processes
2024-08-16 14:22:17,079 [Process: 0] Evaluating...
2024-08-16 14:22:17,081 [Process: 0] EPOCH 90:
2024-08-16 14:22:17,082 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0715, 0.0935, 0.0659,  ..., 0.0489, 0.0812, 0.0849],
         [0.0715, 0.0935, 0.0659,  ..., 0.0489, 0.0812, 0.0849],
         [0.0715, 0.0935, 0.0659,  ..., 0.0489, 0.0812, 0.0849],
         [0.7856, 0.7196, 0.8024,  ..., 0.8532, 0.7563, 0.7454]],
        [[0.0772, 0.0642, 0.0905,  ..., 0.0727, 0.0698, 0.0694],
         [0.0772, 0.0642, 0.0905,  ..., 0.0727, 0.0698, 0.0694],
         [0.0772, 0.0642, 0.0905,  ..., 0.0727, 0.0698, 0.0694],
         [0.7683, 0.8074, 0.7284,  ..., 0.7820, 0.7905, 0.7918]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2889, 0.1147, 0.2500,  ..., 0.2729, 0.0753, 0.1252],
         [0.2370, 0.1147, 0.2500,  ..., 0.2424, 0.0753, 0.1252],
         [0.2370, 0.1147, 0.2500,  ..., 0.2424, 0.0753, 0.1252],
         [0.2370, 0.6560, 0.2500,  ..., 0.2424, 0.7742, 0.6243]],
        [[0.0284, 0.0235, 0.0350,  ..., 0.0320, 0.0252, 0.0223],
         [0.0284, 0.0235, 0.0350,  ..., 0.0320, 0.0252, 0.0223],
         [0.0284, 0.0366, 0.0350,  ..., 0.0320, 0.0252, 0.0244],
         [0.9148, 0.9163, 0.8949,  ..., 0.9040, 0.9245, 0.9310]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:22:19,172 [Process: 0] Synchronize training processes
2024-08-16 14:22:19,172 [Process: 0] Evaluating...
2024-08-16 14:22:19,175 [Process: 0] EPOCH 91:
2024-08-16 14:22:19,177 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0580, 0.0652, 0.0520,  ..., 0.0529, 0.0584, 0.0830],
         [0.0580, 0.0652, 0.0520,  ..., 0.0529, 0.0584, 0.0830],
         [0.0580, 0.0652, 0.0520,  ..., 0.0529, 0.0584, 0.0830],
         [0.8260, 0.8044, 0.8439,  ..., 0.8412, 0.8248, 0.7511]],
        [[0.0660, 0.0630, 0.0731,  ..., 0.0689, 0.0757, 0.0727],
         [0.0660, 0.0630, 0.0731,  ..., 0.0689, 0.0757, 0.0727],
         [0.0660, 0.0630, 0.0731,  ..., 0.0689, 0.0757, 0.0727],
         [0.8021, 0.8111, 0.7807,  ..., 0.7934, 0.7729, 0.7820]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2524, 0.2500, 0.2500,  ..., 0.1067, 0.2500, 0.2500],
         [0.2492, 0.2500, 0.2500,  ..., 0.1067, 0.2500, 0.2500],
         [0.2492, 0.2500, 0.2500,  ..., 0.1067, 0.2500, 0.2500],
         [0.2492, 0.2500, 0.2500,  ..., 0.6798, 0.2500, 0.2500]],
        [[0.0204, 0.0285, 0.0276,  ..., 0.0282, 0.0245, 0.0290],
         [0.0204, 0.0285, 0.0276,  ..., 0.0282, 0.0245, 0.0290],
         [0.0248, 0.0285, 0.0339,  ..., 0.0282, 0.0245, 0.0290],
         [0.9345, 0.9145, 0.9109,  ..., 0.9154, 0.9266, 0.9129]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:22:21,302 [Process: 0] Synchronize training processes
2024-08-16 14:22:21,302 [Process: 0] Evaluating...
2024-08-16 14:22:21,310 [Process: 0] EPOCH 92:
2024-08-16 14:22:21,312 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0512, 0.0591, 0.0768,  ..., 0.0648, 0.0570, 0.0753],
         [0.0512, 0.0591, 0.0768,  ..., 0.0648, 0.0570, 0.0753],
         [0.0512, 0.0591, 0.0768,  ..., 0.0648, 0.0570, 0.0753],
         [0.8465, 0.8228, 0.7696,  ..., 0.8056, 0.8291, 0.7740]],
        [[0.0524, 0.0569, 0.0808,  ..., 0.0762, 0.0609, 0.0873],
         [0.0524, 0.0569, 0.0808,  ..., 0.0762, 0.0609, 0.0873],
         [0.0524, 0.0569, 0.0808,  ..., 0.0762, 0.0609, 0.0873],
         [0.8427, 0.8292, 0.7575,  ..., 0.7714, 0.8174, 0.7382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2969, 0.2519, 0.2864,  ..., 0.0882, 0.2543, 0.1836],
         [0.2344, 0.2494, 0.2379,  ..., 0.0882, 0.2486, 0.1836],
         [0.2344, 0.2494, 0.2379,  ..., 0.0882, 0.2486, 0.1836],
         [0.2344, 0.2494, 0.2379,  ..., 0.7353, 0.2486, 0.4491]],
        [[0.0229, 0.0213, 0.0225,  ..., 0.0204, 0.0228, 0.0226],
         [0.0229, 0.0213, 0.0225,  ..., 0.0204, 0.0228, 0.0226],
         [0.0229, 0.0214, 0.0265,  ..., 0.0204, 0.0228, 0.0226],
         [0.9314, 0.9361, 0.9284,  ..., 0.9388, 0.9316, 0.9323]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:22:23,424 [Process: 0] Synchronize training processes
2024-08-16 14:22:23,425 [Process: 0] Evaluating...
2024-08-16 14:22:23,427 [Process: 0] EPOCH 93:
2024-08-16 14:22:23,429 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0621, 0.0725, 0.0570,  ..., 0.0626, 0.0677, 0.0648],
         [0.0621, 0.0725, 0.0570,  ..., 0.0626, 0.0677, 0.0648],
         [0.0621, 0.0725, 0.0570,  ..., 0.0626, 0.0677, 0.0648],
         [0.8137, 0.7824, 0.8290,  ..., 0.8123, 0.7969, 0.8056]],
        [[0.0566, 0.0657, 0.0555,  ..., 0.0699, 0.0831, 0.0557],
         [0.0566, 0.0657, 0.0555,  ..., 0.0699, 0.0831, 0.0557],
         [0.0566, 0.0657, 0.0555,  ..., 0.0699, 0.0831, 0.0557],
         [0.8302, 0.8028, 0.8335,  ..., 0.7904, 0.7506, 0.8328]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2294, 0.2519,  ..., 0.2933, 0.3092, 0.2500],
         [0.2500, 0.2294, 0.2494,  ..., 0.2356, 0.2303, 0.2500],
         [0.2500, 0.2294, 0.2494,  ..., 0.2356, 0.2303, 0.2500],
         [0.2500, 0.3119, 0.2494,  ..., 0.2356, 0.2303, 0.2500]],
        [[0.0232, 0.0275, 0.0191,  ..., 0.0210, 0.0207, 0.0288],
         [0.0232, 0.0275, 0.0191,  ..., 0.0210, 0.0207, 0.0288],
         [0.0283, 0.0275, 0.0218,  ..., 0.0346, 0.0316, 0.0288],
         [0.9254, 0.9174, 0.9400,  ..., 0.9234, 0.9270, 0.9136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:22:25,515 [Process: 0] Synchronize training processes
2024-08-16 14:22:25,515 [Process: 0] Evaluating...
2024-08-16 14:22:25,517 [Process: 0] EPOCH 94:
2024-08-16 14:22:25,519 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0584, 0.0570, 0.0715,  ..., 0.0636, 0.0557, 0.0546],
         [0.0584, 0.0570, 0.0715,  ..., 0.0636, 0.0557, 0.0546],
         [0.0584, 0.0570, 0.0715,  ..., 0.0636, 0.0557, 0.0546],
         [0.8248, 0.8289, 0.7854,  ..., 0.8093, 0.8329, 0.8363]],
        [[0.0526, 0.0642, 0.0592,  ..., 0.0939, 0.0579, 0.0637],
         [0.0526, 0.0642, 0.0592,  ..., 0.0939, 0.0579, 0.0637],
         [0.0526, 0.0642, 0.0592,  ..., 0.0939, 0.0579, 0.0637],
         [0.8421, 0.8075, 0.8225,  ..., 0.7182, 0.8262, 0.8090]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:22:27,610 [Process: 0] Synchronize training processes
2024-08-16 14:22:27,611 [Process: 0] Evaluating...
2024-08-16 14:22:27,613 [Process: 0] EPOCH 95:
2024-08-16 14:22:27,615 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2662, 0.0432, 0.2500,  ..., 0.1856, 0.2683, 0.2500],
         [0.2446, 0.0432, 0.2500,  ..., 0.1856, 0.2439, 0.2500],
         [0.2446, 0.0432, 0.2500,  ..., 0.1856, 0.2439, 0.2500],
         [0.2446, 0.8703, 0.2500,  ..., 0.4433, 0.2439, 0.2500]],
        [[0.0218, 0.0261, 0.0222,  ..., 0.0235, 0.0224, 0.0233],
         [0.0218, 0.0261, 0.0222,  ..., 0.0235, 0.0224, 0.0233],
         [0.0218, 0.0261, 0.0222,  ..., 0.0235, 0.0305, 0.0233],
         [0.9346, 0.9216, 0.9333,  ..., 0.9295, 0.9248, 0.9300]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0569, 0.0650, 0.0765,  ..., 0.0852, 0.0649, 0.0330],
         [0.0569, 0.0650, 0.0765,  ..., 0.0852, 0.0649, 0.0330],
         [0.0569, 0.0650, 0.0765,  ..., 0.0852, 0.0649, 0.0330],
         [0.8294, 0.8051, 0.7705,  ..., 0.7443, 0.8054, 0.9009]],
        [[0.0791, 0.0573, 0.0669,  ..., 0.0637, 0.0469, 0.0834],
         [0.0791, 0.0573, 0.0669,  ..., 0.0637, 0.0469, 0.0834],
         [0.0791, 0.0573, 0.0669,  ..., 0.0637, 0.0469, 0.0834],
         [0.7626, 0.8282, 0.7992,  ..., 0.8088, 0.8594, 0.7499]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:22:29,745 [Process: 0] Synchronize training processes
2024-08-16 14:22:29,746 [Process: 0] Evaluating...
2024-08-16 14:22:29,748 [Process: 0] EPOCH 96:
2024-08-16 14:22:29,750 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2701, 0.2500, 0.1090,  ..., 0.2231, 0.0669, 0.1684],
         [0.2317, 0.2500, 0.1090,  ..., 0.2231, 0.0669, 0.1684],
         [0.2317, 0.2500, 0.1090,  ..., 0.2231, 0.0669, 0.1684],
         [0.2665, 0.2500, 0.6729,  ..., 0.3308, 0.7993, 0.4947]],
        [[0.0293, 0.0310, 0.0319,  ..., 0.0342, 0.0308, 0.0338],
         [0.0293, 0.0310, 0.0319,  ..., 0.0342, 0.0308, 0.0338],
         [0.0389, 0.0310, 0.0319,  ..., 0.0415, 0.0308, 0.0407],
         [0.9025, 0.9069, 0.9042,  ..., 0.8901, 0.9077, 0.8918]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0586, 0.0392, 0.0573,  ..., 0.0701, 0.0569, 0.0464],
         [0.0586, 0.0392, 0.0573,  ..., 0.0701, 0.0569, 0.0464],
         [0.0586, 0.0392, 0.0573,  ..., 0.0701, 0.0569, 0.0464],
         [0.8242, 0.8823, 0.8280,  ..., 0.7897, 0.8293, 0.8609]],
        [[0.0587, 0.0719, 0.0601,  ..., 0.0748, 0.0699, 0.0687],
         [0.0587, 0.0719, 0.0601,  ..., 0.0748, 0.0699, 0.0687],
         [0.0587, 0.0719, 0.0601,  ..., 0.0748, 0.0699, 0.0687],
         [0.8240, 0.7842, 0.8196,  ..., 0.7755, 0.7903, 0.7940]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:22:31,903 [Process: 0] Synchronize training processes
2024-08-16 14:22:31,904 [Process: 0] Evaluating...
2024-08-16 14:22:31,906 [Process: 0] EPOCH 97:
2024-08-16 14:22:31,908 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.0221e-06, 4.5461e-02, 2.1889e-01,  ..., 1.7714e-01,
          2.5000e-01, 2.5000e-01],
         [3.0221e-06, 4.5461e-02, 2.1569e-01,  ..., 1.7714e-01,
          2.5000e-01, 2.5000e-01],
         [3.0221e-06, 4.5461e-02, 2.1569e-01,  ..., 1.7714e-01,
          2.5000e-01, 2.5000e-01],
         [9.9999e-01, 8.6362e-01, 3.4974e-01,  ..., 4.6858e-01,
          2.5000e-01, 2.5000e-01]],
        [[5.4911e-02, 6.0382e-02, 5.9793e-02,  ..., 4.3494e-02,
          7.9981e-02, 5.1072e-02],
         [5.4911e-02, 6.0382e-02, 5.9793e-02,  ..., 4.3494e-02,
          7.9981e-02, 5.1072e-02],
         [5.6039e-02, 6.1694e-02, 5.9793e-02,  ..., 4.3494e-02,
          1.2749e-01, 5.1072e-02],
         [8.3414e-01, 8.1754e-01, 8.2062e-01,  ..., 8.6952e-01,
          7.1255e-01, 8.4678e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0608, 0.0548, 0.0576,  ..., 0.0768, 0.0500, 0.0755],
         [0.0608, 0.0548, 0.0576,  ..., 0.0768, 0.0500, 0.0755],
         [0.0608, 0.0548, 0.0576,  ..., 0.0768, 0.0500, 0.0755],
         [0.8177, 0.8355, 0.8273,  ..., 0.7695, 0.8500, 0.7736]],
        [[0.0546, 0.0561, 0.0862,  ..., 0.0674, 0.0592, 0.0583],
         [0.0546, 0.0561, 0.0862,  ..., 0.0674, 0.0592, 0.0583],
         [0.0546, 0.0561, 0.0862,  ..., 0.0674, 0.0592, 0.0583],
         [0.8363, 0.8316, 0.7413,  ..., 0.7979, 0.8225, 0.8251]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:22:34,085 [Process: 0] Synchronize training processes
2024-08-16 14:22:34,085 [Process: 0] Evaluating...
2024-08-16 14:22:34,087 [Process: 0] EPOCH 98:
2024-08-16 14:22:34,089 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1278, 0.2556, 0.1317,  ..., 0.1600, 0.0774, 0.0252],
         [0.1278, 0.2481, 0.1317,  ..., 0.1600, 0.0774, 0.0252],
         [0.1278, 0.2481, 0.1317,  ..., 0.1600, 0.0774, 0.0252],
         [0.6165, 0.2481, 0.6049,  ..., 0.5199, 0.7679, 0.9245]],
        [[0.0714, 0.0611, 0.0620,  ..., 0.0680, 0.0792, 0.0751],
         [0.0714, 0.0611, 0.0620,  ..., 0.0680, 0.0792, 0.0751],
         [0.0749, 0.0611, 0.0620,  ..., 0.0680, 0.0843, 0.0910],
         [0.7824, 0.8168, 0.8139,  ..., 0.7960, 0.7572, 0.7588]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0550, 0.0714, 0.0495,  ..., 0.0706, 0.0634, 0.0679],
         [0.0550, 0.0714, 0.0495,  ..., 0.0706, 0.0634, 0.0679],
         [0.0550, 0.0714, 0.0495,  ..., 0.0706, 0.0634, 0.0679],
         [0.8351, 0.7859, 0.8515,  ..., 0.7882, 0.8098, 0.7964]],
        [[0.0596, 0.0517, 0.0644,  ..., 0.0598, 0.0465, 0.0752],
         [0.0596, 0.0517, 0.0644,  ..., 0.0598, 0.0465, 0.0752],
         [0.0596, 0.0517, 0.0644,  ..., 0.0598, 0.0465, 0.0752],
         [0.8212, 0.8448, 0.8068,  ..., 0.8206, 0.8606, 0.7743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:22:36,167 [Process: 0] Synchronize training processes
2024-08-16 14:22:36,168 [Process: 0] Evaluating...
2024-08-16 14:22:36,169 [Process: 0] EPOCH 99:
2024-08-16 14:22:36,171 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2820, 0.0755, 0.0906,  ..., 0.2702, 0.2241, 0.3317],
         [0.2393, 0.0755, 0.0906,  ..., 0.2433, 0.2241, 0.2228],
         [0.2393, 0.0755, 0.0906,  ..., 0.2433, 0.2241, 0.2228],
         [0.2393, 0.7734, 0.7283,  ..., 0.2433, 0.3277, 0.2228]],
        [[0.0405, 0.0405, 0.0349,  ..., 0.0368, 0.0399, 0.0472],
         [0.0405, 0.0405, 0.0349,  ..., 0.0368, 0.0399, 0.0472],
         [0.0618, 0.0405, 0.0349,  ..., 0.0368, 0.0399, 0.0637],
         [0.8572, 0.8784, 0.8952,  ..., 0.8895, 0.8803, 0.8419]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0598, 0.0520, 0.0515,  ..., 0.0617, 0.0421, 0.0548],
         [0.0598, 0.0520, 0.0515,  ..., 0.0617, 0.0421, 0.0548],
         [0.0598, 0.0520, 0.0515,  ..., 0.0617, 0.0421, 0.0548],
         [0.8206, 0.8439, 0.8454,  ..., 0.8149, 0.8736, 0.8357]],
        [[0.0538, 0.0628, 0.0468,  ..., 0.0647, 0.0568, 0.0496],
         [0.0538, 0.0628, 0.0468,  ..., 0.0647, 0.0568, 0.0496],
         [0.0538, 0.0628, 0.0468,  ..., 0.0647, 0.0568, 0.0496],
         [0.8387, 0.8115, 0.8595,  ..., 0.8058, 0.8295, 0.8511]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:22:38,295 [Process: 0] Synchronize training processes
2024-08-16 14:22:38,295 [Process: 0] Evaluating...
2024-08-16 14:22:38,298 [Process: 0] EPOCH 100:
2024-08-16 14:22:38,300 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2546, 0.2506, 0.1936,  ..., 0.2500, 0.2550, 0.2815],
         [0.2485, 0.2498, 0.1936,  ..., 0.2500, 0.2483, 0.2395],
         [0.2485, 0.2498, 0.1936,  ..., 0.2500, 0.2483, 0.2395],
         [0.2485, 0.2498, 0.4191,  ..., 0.2500, 0.2483, 0.2395]],
        [[0.0293, 0.0287, 0.0278,  ..., 0.0369, 0.0330, 0.0329],
         [0.0293, 0.0287, 0.0278,  ..., 0.0369, 0.0330, 0.0329],
         [0.0293, 0.0287, 0.0278,  ..., 0.0495, 0.0426, 0.0372],
         [0.9121, 0.9138, 0.9167,  ..., 0.8768, 0.8914, 0.8970]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0427, 0.0773, 0.0507,  ..., 0.0624, 0.0524, 0.0549],
         [0.0427, 0.0773, 0.0507,  ..., 0.0624, 0.0524, 0.0549],
         [0.0427, 0.0773, 0.0507,  ..., 0.0624, 0.0524, 0.0549],
         [0.8719, 0.7680, 0.8479,  ..., 0.8128, 0.8429, 0.8354]],
        [[0.0462, 0.0643, 0.0597,  ..., 0.0579, 0.0593, 0.0670],
         [0.0462, 0.0643, 0.0597,  ..., 0.0579, 0.0593, 0.0670],
         [0.0462, 0.0643, 0.0597,  ..., 0.0579, 0.0593, 0.0670],
         [0.8614, 0.8070, 0.8208,  ..., 0.8263, 0.8221, 0.7990]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:22:40,399 [Process: 0] Synchronize training processes
2024-08-16 14:22:40,400 [Process: 0] Evaluating...
2024-08-16 14:22:40,402 [Process: 0] EPOCH 101:
2024-08-16 14:22:40,403 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2622, 0.0397, 0.2672,  ..., 0.0148, 0.0654, 0.3153],
         [0.2459, 0.0397, 0.2443,  ..., 0.0148, 0.0653, 0.2282],
         [0.2459, 0.0397, 0.2443,  ..., 0.0148, 0.0653, 0.2282],
         [0.2459, 0.8810, 0.2443,  ..., 0.9557, 0.8041, 0.2282]],
        [[0.0289, 0.0306, 0.0287,  ..., 0.0270, 0.0292, 0.0329],
         [0.0289, 0.0306, 0.0287,  ..., 0.0270, 0.0292, 0.0329],
         [0.0289, 0.0306, 0.0287,  ..., 0.0270, 0.0348, 0.0388],
         [0.9134, 0.9081, 0.9138,  ..., 0.9191, 0.9068, 0.8955]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0509, 0.0726, 0.0544,  ..., 0.0644, 0.0546, 0.0583],
         [0.0509, 0.0726, 0.0544,  ..., 0.0644, 0.0546, 0.0583],
         [0.0509, 0.0726, 0.0544,  ..., 0.0644, 0.0546, 0.0583],
         [0.8473, 0.7822, 0.8369,  ..., 0.8067, 0.8361, 0.8251]],
        [[0.0658, 0.0524, 0.0538,  ..., 0.0622, 0.0608, 0.0709],
         [0.0658, 0.0524, 0.0538,  ..., 0.0622, 0.0608, 0.0709],
         [0.0658, 0.0524, 0.0538,  ..., 0.0622, 0.0608, 0.0709],
         [0.8026, 0.8429, 0.8387,  ..., 0.8133, 0.8177, 0.7872]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:22:42,469 [Process: 0] Synchronize training processes
2024-08-16 14:22:42,469 [Process: 0] Evaluating...
2024-08-16 14:22:42,477 [Process: 0] EPOCH 102:
2024-08-16 14:22:42,479 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0915, 0.2500, 0.2500,  ..., 0.2500, 0.0748, 0.0090],
         [0.0885, 0.2500, 0.2500,  ..., 0.2500, 0.0739, 0.0090],
         [0.0885, 0.2500, 0.2500,  ..., 0.2500, 0.0739, 0.0090],
         [0.7316, 0.2500, 0.2500,  ..., 0.2500, 0.7775, 0.9730]],
        [[0.0348, 0.0315, 0.0267,  ..., 0.0309, 0.0314, 0.0336],
         [0.0348, 0.0315, 0.0267,  ..., 0.0309, 0.0314, 0.0336],
         [0.0377, 0.0315, 0.0267,  ..., 0.0309, 0.0314, 0.0416],
         [0.8927, 0.9055, 0.9199,  ..., 0.9072, 0.9058, 0.8912]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0488, 0.0645, 0.0674,  ..., 0.0519, 0.0521, 0.0485],
         [0.0488, 0.0645, 0.0674,  ..., 0.0519, 0.0521, 0.0485],
         [0.0488, 0.0645, 0.0674,  ..., 0.0519, 0.0521, 0.0485],
         [0.8535, 0.8066, 0.7977,  ..., 0.8443, 0.8438, 0.8545]],
        [[0.0454, 0.0558, 0.0460,  ..., 0.0412, 0.0611, 0.0546],
         [0.0454, 0.0558, 0.0460,  ..., 0.0412, 0.0611, 0.0546],
         [0.0454, 0.0558, 0.0460,  ..., 0.0412, 0.0611, 0.0546],
         [0.8638, 0.8326, 0.8621,  ..., 0.8763, 0.8168, 0.8362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:22:44,584 [Process: 0] Synchronize training processes
2024-08-16 14:22:44,584 [Process: 0] Evaluating...
2024-08-16 14:22:44,586 [Process: 0] EPOCH 103:
2024-08-16 14:22:44,588 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2951, 0.2500, 0.1487,  ..., 0.2770, 0.2524, 0.2500],
         [0.2350, 0.2500, 0.1487,  ..., 0.2410, 0.2492, 0.2500],
         [0.2350, 0.2500, 0.1487,  ..., 0.2410, 0.2492, 0.2500],
         [0.2350, 0.2500, 0.5540,  ..., 0.2410, 0.2492, 0.2500]],
        [[0.0373, 0.0489, 0.0344,  ..., 0.0315, 0.0283, 0.0421],
         [0.0373, 0.0489, 0.0344,  ..., 0.0315, 0.0283, 0.0421],
         [0.0460, 0.0704, 0.0344,  ..., 0.0315, 0.0283, 0.0447],
         [0.8795, 0.8317, 0.8967,  ..., 0.9054, 0.9151, 0.8712]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0494, 0.0553, 0.0649,  ..., 0.0582, 0.0380, 0.0517],
         [0.0494, 0.0553, 0.0649,  ..., 0.0582, 0.0380, 0.0517],
         [0.0494, 0.0553, 0.0649,  ..., 0.0582, 0.0380, 0.0517],
         [0.8517, 0.8342, 0.8054,  ..., 0.8253, 0.8859, 0.8449]],
        [[0.0568, 0.0540, 0.0687,  ..., 0.0684, 0.0526, 0.0596],
         [0.0568, 0.0540, 0.0687,  ..., 0.0684, 0.0526, 0.0596],
         [0.0568, 0.0540, 0.0687,  ..., 0.0684, 0.0526, 0.0596],
         [0.8296, 0.8379, 0.7939,  ..., 0.7948, 0.8422, 0.8213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:22:46,684 [Process: 0] Synchronize training processes
2024-08-16 14:22:46,685 [Process: 0] Evaluating...
2024-08-16 14:22:46,687 [Process: 0] EPOCH 104:
2024-08-16 14:22:46,689 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1652, 0.2603, 0.0562,  ..., 0.1621, 0.2661, 0.2500],
         [0.1652, 0.2466, 0.0562,  ..., 0.1621, 0.2446, 0.2500],
         [0.1652, 0.2466, 0.0562,  ..., 0.1621, 0.2446, 0.2500],
         [0.5045, 0.2466, 0.8315,  ..., 0.5136, 0.2446, 0.2500]],
        [[0.0579, 0.0452, 0.0502,  ..., 0.0519, 0.0426, 0.0420],
         [0.0579, 0.0452, 0.0502,  ..., 0.0519, 0.0426, 0.0420],
         [0.0867, 0.0452, 0.0561,  ..., 0.0574, 0.0500, 0.0420],
         [0.7975, 0.8645, 0.8436,  ..., 0.8388, 0.8648, 0.8740]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-16 14:22:48,839 [Process: 0] Synchronize training processes
2024-08-16 14:22:48,839 [Process: 0] Evaluating...
2024-08-16 14:22:48,841 [Process: 0] EPOCH 105:
2024-08-16 14:22:48,843 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0583, 0.0582, 0.0461,  ..., 0.0751, 0.0439, 0.0478],
         [0.0583, 0.0582, 0.0461,  ..., 0.0751, 0.0439, 0.0478],
         [0.0583, 0.0582, 0.0461,  ..., 0.0751, 0.0439, 0.0478],
         [0.8251, 0.8255, 0.8617,  ..., 0.7748, 0.8682, 0.8565]],
        [[0.0652, 0.0643, 0.0590,  ..., 0.0604, 0.0598, 0.0482],
         [0.0652, 0.0643, 0.0590,  ..., 0.0604, 0.0598, 0.0482],
         [0.0652, 0.0643, 0.0590,  ..., 0.0604, 0.0598, 0.0482],
         [0.8043, 0.8071, 0.8230,  ..., 0.8188, 0.8207, 0.8553]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.3266, 0.2500,  ..., 0.2691, 0.1677, 0.0086],
         [0.2500, 0.2245, 0.2500,  ..., 0.2436, 0.1677, 0.0086],
         [0.2500, 0.2245, 0.2500,  ..., 0.2436, 0.1677, 0.0086],
         [0.2500, 0.2245, 0.2500,  ..., 0.2436, 0.4969, 0.9741]],
        [[0.0455, 0.0606, 0.0408,  ..., 0.0469, 0.0480, 0.0467],
         [0.0455, 0.0606, 0.0408,  ..., 0.0469, 0.0480, 0.0467],
         [0.0458, 0.0721, 0.0408,  ..., 0.0469, 0.0515, 0.0467],
         [0.8631, 0.8068, 0.8775,  ..., 0.8593, 0.8525, 0.8600]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:22:51,007 [Process: 0] Synchronize training processes
2024-08-16 14:22:51,007 [Process: 0] Evaluating...
2024-08-16 14:22:51,009 [Process: 0] EPOCH 106:
2024-08-16 14:22:51,011 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0699, 0.0490, 0.0555,  ..., 0.0640, 0.0470, 0.0661],
         [0.0699, 0.0490, 0.0555,  ..., 0.0640, 0.0470, 0.0661],
         [0.0699, 0.0490, 0.0555,  ..., 0.0640, 0.0470, 0.0661],
         [0.7902, 0.8529, 0.8335,  ..., 0.8080, 0.8590, 0.8016]],
        [[0.0425, 0.0693, 0.0516,  ..., 0.0703, 0.0409, 0.0391],
         [0.0425, 0.0693, 0.0516,  ..., 0.0703, 0.0409, 0.0391],
         [0.0425, 0.0693, 0.0516,  ..., 0.0703, 0.0409, 0.0391],
         [0.8726, 0.7921, 0.8451,  ..., 0.7891, 0.8773, 0.8826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0742, 0.0229, 0.1446,  ..., 0.1234, 0.0720, 0.2500],
         [0.0742, 0.0200, 0.1375,  ..., 0.1234, 0.0719, 0.2500],
         [0.0742, 0.0200, 0.1375,  ..., 0.1234, 0.0719, 0.2500],
         [0.7774, 0.9372, 0.5804,  ..., 0.6298, 0.7841, 0.2500]],
        [[0.0491, 0.0354, 0.0519,  ..., 0.0407, 0.0332, 0.0342],
         [0.0491, 0.0354, 0.0519,  ..., 0.0407, 0.0332, 0.0342],
         [0.0670, 0.0354, 0.0711,  ..., 0.0407, 0.0332, 0.0342],
         [0.8349, 0.8939, 0.8251,  ..., 0.8780, 0.9005, 0.8975]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0622, 0.0441, 0.0450,  ..., 0.0454, 0.0402, 0.0606],
         [0.0622, 0.0441, 0.0450,  ..., 0.0454, 0.0402, 0.0606],
         [0.0622, 0.0441, 0.0450,  ..., 0.0454, 0.0402, 0.0606],
         [0.8134, 0.8677, 0.8651,  ..., 0.8637, 0.8793, 0.8183]],
        [[0.0493, 0.0530, 0.0595,  ..., 0.0591, 0.0564, 0.0559],
         [0.0493, 0.0530, 0.0595,  ..., 0.0591, 0.0564, 0.0559],
         [0.0493, 0.0530, 0.0595,  ..., 0.0591, 0.0564, 0.0559],
         [0.8522, 0.8410, 0.8214,  ..., 0.8226, 0.8308, 0.8322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2811, 0.1431, 0.1226,  ..., 0.1624, 0.1901, 0.2500],
         [0.2396, 0.1352, 0.1226,  ..., 0.1624, 0.1737, 0.2500],
         [0.2396, 0.1352, 0.1226,  ..., 0.1624, 0.1737, 0.2500],
         [0.2396, 0.5866, 0.6321,  ..., 0.5127, 0.4625, 0.2500]],
        [[0.0325, 0.0248, 0.0345,  ..., 0.0334, 0.0339, 0.0342],
         [0.0325, 0.0248, 0.0345,  ..., 0.0334, 0.0339, 0.0342],
         [0.0325, 0.0248, 0.0345,  ..., 0.0334, 0.0359, 0.0385],
         [0.9025, 0.9257, 0.8965,  ..., 0.8998, 0.8963, 0.8931]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:22:53,116 [Process: 0] Synchronize training processes
2024-08-16 14:22:53,117 [Process: 0] Evaluating...
2024-08-16 14:22:53,119 [Process: 0] EPOCH 107:
2024-08-16 14:22:53,121 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0581, 0.0535, 0.0573,  ..., 0.0362, 0.0515, 0.0700],
         [0.0581, 0.0535, 0.0573,  ..., 0.0362, 0.0515, 0.0700],
         [0.0581, 0.0535, 0.0573,  ..., 0.0362, 0.0515, 0.0700],
         [0.8256, 0.8394, 0.8281,  ..., 0.8915, 0.8454, 0.7900]],
        [[0.0499, 0.0533, 0.0544,  ..., 0.0541, 0.0599, 0.0553],
         [0.0499, 0.0533, 0.0544,  ..., 0.0541, 0.0599, 0.0553],
         [0.0499, 0.0533, 0.0544,  ..., 0.0541, 0.0599, 0.0553],
         [0.8502, 0.8402, 0.8368,  ..., 0.8376, 0.8204, 0.8341]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2626, 0.2500, 0.2500,  ..., 0.0070, 0.2605, 0.2794],
         [0.2458, 0.2500, 0.2500,  ..., 0.0070, 0.2465, 0.2402],
         [0.2458, 0.2500, 0.2500,  ..., 0.0070, 0.2465, 0.2402],
         [0.2458, 0.2500, 0.2500,  ..., 0.9790, 0.2465, 0.2402]],
        [[0.0328, 0.0335, 0.0296,  ..., 0.0379, 0.0311, 0.0314],
         [0.0328, 0.0335, 0.0296,  ..., 0.0379, 0.0311, 0.0314],
         [0.0328, 0.0419, 0.0296,  ..., 0.0379, 0.0311, 0.0314],
         [0.9015, 0.8910, 0.9112,  ..., 0.8864, 0.9066, 0.9057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:22:55,242 [Process: 0] Synchronize training processes
2024-08-16 14:22:55,243 [Process: 0] Evaluating...
2024-08-16 14:22:55,245 [Process: 0] EPOCH 108:
2024-08-16 14:22:55,247 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0470, 0.0536, 0.0643,  ..., 0.0436, 0.0645, 0.0403],
         [0.0470, 0.0536, 0.0643,  ..., 0.0436, 0.0645, 0.0403],
         [0.0470, 0.0536, 0.0643,  ..., 0.0436, 0.0645, 0.0403],
         [0.8589, 0.8392, 0.8070,  ..., 0.8693, 0.8065, 0.8791]],
        [[0.0591, 0.0483, 0.0518,  ..., 0.0555, 0.0442, 0.0451],
         [0.0591, 0.0483, 0.0518,  ..., 0.0555, 0.0442, 0.0451],
         [0.0591, 0.0483, 0.0518,  ..., 0.0555, 0.0442, 0.0451],
         [0.8226, 0.8552, 0.8446,  ..., 0.8335, 0.8674, 0.8646]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2507,  ..., 0.2654, 0.2979, 0.2500],
         [0.2500, 0.2500, 0.2498,  ..., 0.2449, 0.2340, 0.2500],
         [0.2500, 0.2500, 0.2498,  ..., 0.2449, 0.2340, 0.2500],
         [0.2500, 0.2500, 0.2498,  ..., 0.2449, 0.2340, 0.2500]],
        [[0.0300, 0.0376, 0.0358,  ..., 0.0320, 0.0353, 0.0372],
         [0.0300, 0.0376, 0.0358,  ..., 0.0320, 0.0353, 0.0372],
         [0.0300, 0.0439, 0.0358,  ..., 0.0320, 0.0353, 0.0410],
         [0.9101, 0.8809, 0.8926,  ..., 0.9039, 0.8940, 0.8846]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:22:57,355 [Process: 0] Synchronize training processes
2024-08-16 14:22:57,355 [Process: 0] Evaluating...
2024-08-16 14:22:57,357 [Process: 0] EPOCH 109:
2024-08-16 14:22:57,359 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0364, 0.0433, 0.0560,  ..., 0.0560, 0.0448, 0.0527],
         [0.0364, 0.0433, 0.0560,  ..., 0.0560, 0.0448, 0.0527],
         [0.0364, 0.0433, 0.0560,  ..., 0.0560, 0.0448, 0.0527],
         [0.8907, 0.8701, 0.8321,  ..., 0.8321, 0.8656, 0.8419]],
        [[0.0526, 0.0514, 0.0551,  ..., 0.0451, 0.0409, 0.0554],
         [0.0526, 0.0514, 0.0551,  ..., 0.0451, 0.0409, 0.0554],
         [0.0526, 0.0514, 0.0551,  ..., 0.0451, 0.0409, 0.0554],
         [0.8421, 0.8458, 0.8347,  ..., 0.8648, 0.8774, 0.8339]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0900, 0.2500, 0.2721,  ..., 0.0016, 0.2647, 0.2543],
         [0.0900, 0.2500, 0.2426,  ..., 0.0016, 0.2451, 0.2486],
         [0.0900, 0.2500, 0.2426,  ..., 0.0016, 0.2451, 0.2486],
         [0.7299, 0.2500, 0.2426,  ..., 0.9953, 0.2451, 0.2486]],
        [[0.0365, 0.0422, 0.0423,  ..., 0.0353, 0.0484, 0.0431],
         [0.0365, 0.0422, 0.0423,  ..., 0.0353, 0.0484, 0.0431],
         [0.0365, 0.0422, 0.0423,  ..., 0.0353, 0.0484, 0.0431],
         [0.8906, 0.8735, 0.8730,  ..., 0.8942, 0.8548, 0.8707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:22:59,449 [Process: 0] Synchronize training processes
2024-08-16 14:22:59,450 [Process: 0] Evaluating...
2024-08-16 14:22:59,452 [Process: 0] EPOCH 110:
2024-08-16 14:22:59,454 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0535, 0.0501, 0.0563,  ..., 0.0477, 0.0463, 0.0633],
         [0.0535, 0.0501, 0.0563,  ..., 0.0477, 0.0463, 0.0633],
         [0.0535, 0.0501, 0.0563,  ..., 0.0477, 0.0463, 0.0633],
         [0.8396, 0.8496, 0.8312,  ..., 0.8568, 0.8612, 0.8102]],
        [[0.0486, 0.0383, 0.0392,  ..., 0.0467, 0.0383, 0.0429],
         [0.0486, 0.0383, 0.0392,  ..., 0.0467, 0.0383, 0.0429],
         [0.0486, 0.0383, 0.0392,  ..., 0.0467, 0.0383, 0.0429],
         [0.8541, 0.8852, 0.8825,  ..., 0.8598, 0.8852, 0.8714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0038, 0.1284, 0.2500,  ..., 0.1704, 0.2537, 0.2306],
         [0.0038, 0.0966, 0.2500,  ..., 0.1609, 0.2186, 0.2306],
         [0.0038, 0.0966, 0.2500,  ..., 0.1609, 0.2186, 0.3082],
         [0.9886, 0.6784, 0.2500,  ..., 0.5079, 0.3091, 0.2306]],
        [[0.0383, 0.0476, 0.0186,  ..., 0.0229, 0.0398, 0.0391],
         [0.0383, 0.0476, 0.0186,  ..., 0.0229, 0.0398, 0.0391],
         [0.0383, 0.0561, 0.0186,  ..., 0.0229, 0.0398, 0.0391],
         [0.8852, 0.8487, 0.9442,  ..., 0.9313, 0.8805, 0.8826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:01,554 [Process: 0] Synchronize training processes
2024-08-16 14:23:01,555 [Process: 0] Evaluating...
2024-08-16 14:23:01,557 [Process: 0] EPOCH 111:
2024-08-16 14:23:01,559 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0424, 0.0463, 0.0426,  ..., 0.0527, 0.0536, 0.0405],
         [0.0424, 0.0463, 0.0426,  ..., 0.0527, 0.0536, 0.0405],
         [0.0424, 0.0463, 0.0426,  ..., 0.0527, 0.0536, 0.0405],
         [0.8727, 0.8612, 0.8722,  ..., 0.8418, 0.8391, 0.8785]],
        [[0.0395, 0.0422, 0.0407,  ..., 0.0411, 0.0476, 0.0448],
         [0.0395, 0.0422, 0.0407,  ..., 0.0411, 0.0476, 0.0448],
         [0.0395, 0.0422, 0.0407,  ..., 0.0411, 0.0476, 0.0448],
         [0.8814, 0.8734, 0.8780,  ..., 0.8767, 0.8572, 0.8657]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2526, 0.1267,  ..., 0.2500, 0.1933, 0.2526],
         [0.2500, 0.2376, 0.1267,  ..., 0.2500, 0.1933, 0.2491],
         [0.2500, 0.2376, 0.1267,  ..., 0.2500, 0.1933, 0.2491],
         [0.2500, 0.2722, 0.6198,  ..., 0.2500, 0.4201, 0.2491]],
        [[0.0497, 0.0279, 0.0179,  ..., 0.0618, 0.0565, 0.0462],
         [0.0497, 0.0279, 0.0179,  ..., 0.0618, 0.0565, 0.0462],
         [0.0497, 0.0279, 0.0179,  ..., 0.0653, 0.0737, 0.0462],
         [0.8510, 0.9164, 0.9462,  ..., 0.8112, 0.8134, 0.8614]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:03,662 [Process: 0] Synchronize training processes
2024-08-16 14:23:03,663 [Process: 0] Evaluating...
2024-08-16 14:23:03,670 [Process: 0] EPOCH 112:
2024-08-16 14:23:03,673 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0520, 0.0375, 0.0470,  ..., 0.0639, 0.0465, 0.0416],
         [0.0520, 0.0375, 0.0470,  ..., 0.0639, 0.0465, 0.0416],
         [0.0520, 0.0375, 0.0470,  ..., 0.0639, 0.0465, 0.0416],
         [0.8441, 0.8874, 0.8591,  ..., 0.8082, 0.8606, 0.8752]],
        [[0.0509, 0.0519, 0.0581,  ..., 0.0527, 0.0684, 0.0381],
         [0.0509, 0.0519, 0.0581,  ..., 0.0527, 0.0684, 0.0381],
         [0.0509, 0.0519, 0.0581,  ..., 0.0527, 0.0684, 0.0381],
         [0.8474, 0.8443, 0.8258,  ..., 0.8418, 0.7947, 0.8856]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 14:23:05,764 [Process: 0] Synchronize training processes
2024-08-16 14:23:05,765 [Process: 0] Evaluating...
2024-08-16 14:23:05,767 [Process: 0] EPOCH 113:
2024-08-16 14:23:05,769 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2738, 0.0753,  ..., 0.0248, 0.2500, 0.2770],
         [0.2500, 0.2421, 0.0753,  ..., 0.0233, 0.2500, 0.2297],
         [0.2500, 0.2421, 0.0753,  ..., 0.0233, 0.2500, 0.2297],
         [0.2500, 0.2421, 0.7742,  ..., 0.9287, 0.2500, 0.2637]],
        [[0.0204, 0.0496, 0.0425,  ..., 0.0516, 0.0247, 0.0451],
         [0.0204, 0.0496, 0.0425,  ..., 0.0516, 0.0247, 0.0451],
         [0.0204, 0.0745, 0.0425,  ..., 0.0516, 0.0249, 0.0459],
         [0.9389, 0.8263, 0.8726,  ..., 0.8451, 0.9257, 0.8639]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0440, 0.0628, 0.0416,  ..., 0.0514, 0.0555, 0.0600],
         [0.0440, 0.0628, 0.0416,  ..., 0.0514, 0.0555, 0.0600],
         [0.0440, 0.0628, 0.0416,  ..., 0.0514, 0.0555, 0.0600],
         [0.8680, 0.8115, 0.8751,  ..., 0.8458, 0.8336, 0.8200]],
        [[0.0413, 0.0511, 0.0362,  ..., 0.0519, 0.0426, 0.0497],
         [0.0413, 0.0511, 0.0362,  ..., 0.0519, 0.0426, 0.0497],
         [0.0413, 0.0511, 0.0362,  ..., 0.0519, 0.0426, 0.0497],
         [0.8762, 0.8466, 0.8913,  ..., 0.8443, 0.8721, 0.8510]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:07,850 [Process: 0] Synchronize training processes
2024-08-16 14:23:07,851 [Process: 0] Evaluating...
2024-08-16 14:23:07,853 [Process: 0] EPOCH 114:
2024-08-16 14:23:07,855 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0309, 0.0387, 0.2600,  ..., 0.2419, 0.0447, 0.0112],
         [0.0290, 0.0367, 0.2467,  ..., 0.2166, 0.0447, 0.0098],
         [0.0290, 0.0367, 0.2467,  ..., 0.2166, 0.0447, 0.0098],
         [0.9111, 0.8879, 0.2467,  ..., 0.3250, 0.8658, 0.9692]],
        [[0.0412, 0.0274, 0.0662,  ..., 0.0640, 0.0400, 0.0247],
         [0.0412, 0.0274, 0.0662,  ..., 0.0640, 0.0400, 0.0247],
         [0.0412, 0.0274, 0.0662,  ..., 0.0830, 0.0421, 0.0247],
         [0.8763, 0.9177, 0.8014,  ..., 0.7890, 0.8780, 0.9258]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0447, 0.0582, 0.0544,  ..., 0.0400, 0.0459, 0.0525],
         [0.0447, 0.0582, 0.0544,  ..., 0.0400, 0.0459, 0.0525],
         [0.0447, 0.0582, 0.0544,  ..., 0.0400, 0.0459, 0.0525],
         [0.8658, 0.8255, 0.8369,  ..., 0.8801, 0.8623, 0.8424]],
        [[0.0543, 0.0500, 0.0454,  ..., 0.0527, 0.0425, 0.0438],
         [0.0543, 0.0500, 0.0454,  ..., 0.0527, 0.0425, 0.0438],
         [0.0543, 0.0500, 0.0454,  ..., 0.0527, 0.0425, 0.0438],
         [0.8372, 0.8499, 0.8638,  ..., 0.8420, 0.8724, 0.8687]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:09,949 [Process: 0] Synchronize training processes
2024-08-16 14:23:09,950 [Process: 0] Evaluating...
2024-08-16 14:23:09,952 [Process: 0] EPOCH 115:
2024-08-16 14:23:09,954 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.5000e-01, 2.6802e-01, 2.5000e-01,  ..., 2.2381e-04,
          1.4967e-01, 3.1316e-02],
         [2.5000e-01, 2.4399e-01, 2.5000e-01,  ..., 2.1047e-04,
          1.4967e-01, 2.8885e-02],
         [2.5000e-01, 2.4399e-01, 2.5000e-01,  ..., 2.1047e-04,
          1.4967e-01, 2.8885e-02],
         [2.5000e-01, 2.4399e-01, 2.5000e-01,  ..., 9.9936e-01,
          5.5098e-01, 9.1091e-01]],
        [[2.6548e-02, 6.3709e-02, 2.7533e-02,  ..., 3.8995e-02,
          5.8572e-02, 7.0308e-02],
         [2.6548e-02, 6.3709e-02, 2.7533e-02,  ..., 3.8995e-02,
          5.8572e-02, 7.0308e-02],
         [2.6548e-02, 7.7010e-02, 2.7533e-02,  ..., 4.2154e-02,
          6.8456e-02, 9.1003e-02],
         [9.2035e-01, 7.9557e-01, 9.1740e-01,  ..., 8.7986e-01,
          8.1440e-01, 7.6838e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0419, 0.0460, 0.0410,  ..., 0.0397, 0.0419, 0.0424],
         [0.0419, 0.0460, 0.0410,  ..., 0.0397, 0.0419, 0.0424],
         [0.0419, 0.0460, 0.0410,  ..., 0.0397, 0.0419, 0.0424],
         [0.8742, 0.8621, 0.8771,  ..., 0.8809, 0.8744, 0.8728]],
        [[0.0562, 0.0557, 0.0515,  ..., 0.0489, 0.0655, 0.0468],
         [0.0562, 0.0557, 0.0515,  ..., 0.0489, 0.0655, 0.0468],
         [0.0562, 0.0557, 0.0515,  ..., 0.0489, 0.0655, 0.0468],
         [0.8314, 0.8328, 0.8456,  ..., 0.8534, 0.8034, 0.8595]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:12,078 [Process: 0] Synchronize training processes
2024-08-16 14:23:12,078 [Process: 0] Evaluating...
2024-08-16 14:23:12,080 [Process: 0] EPOCH 116:
2024-08-16 14:23:12,082 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1974, 0.1534, 0.0019,  ..., 0.1818, 0.2500, 0.2500],
         [0.1722, 0.1534, 0.0019,  ..., 0.1818, 0.2500, 0.2500],
         [0.1722, 0.1534, 0.0019,  ..., 0.1818, 0.2500, 0.2500],
         [0.4581, 0.5397, 0.9943,  ..., 0.4546, 0.2500, 0.2500]],
        [[0.0474, 0.0269, 0.0331,  ..., 0.0279, 0.0464, 0.0308],
         [0.0474, 0.0269, 0.0331,  ..., 0.0279, 0.0464, 0.0308],
         [0.0474, 0.0269, 0.0331,  ..., 0.0279, 0.0464, 0.0308],
         [0.8578, 0.9194, 0.9008,  ..., 0.9163, 0.8608, 0.9076]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0442, 0.0359, 0.0507,  ..., 0.0587, 0.0490, 0.0491],
         [0.0442, 0.0359, 0.0507,  ..., 0.0587, 0.0490, 0.0491],
         [0.0442, 0.0359, 0.0507,  ..., 0.0587, 0.0490, 0.0491],
         [0.8673, 0.8923, 0.8479,  ..., 0.8240, 0.8530, 0.8527]],
        [[0.0537, 0.0507, 0.0515,  ..., 0.0488, 0.0475, 0.0433],
         [0.0537, 0.0507, 0.0515,  ..., 0.0488, 0.0475, 0.0433],
         [0.0537, 0.0507, 0.0515,  ..., 0.0488, 0.0475, 0.0433],
         [0.8388, 0.8478, 0.8456,  ..., 0.8535, 0.8576, 0.8700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:14,167 [Process: 0] Synchronize training processes
2024-08-16 14:23:14,167 [Process: 0] Evaluating...
2024-08-16 14:23:14,169 [Process: 0] EPOCH 117:
2024-08-16 14:23:14,171 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0187, 0.2657, 0.2614,  ..., 0.2500, 0.1199, 0.0701],
         [0.0187, 0.2448, 0.2462,  ..., 0.2500, 0.1175, 0.0701],
         [0.0187, 0.2448, 0.2462,  ..., 0.2500, 0.1175, 0.0701],
         [0.9438, 0.2448, 0.2462,  ..., 0.2500, 0.6450, 0.7898]],
        [[0.0389, 0.0222, 0.0279,  ..., 0.0294, 0.0375, 0.0291],
         [0.0389, 0.0222, 0.0279,  ..., 0.0294, 0.0375, 0.0291],
         [0.0389, 0.0222, 0.0279,  ..., 0.0294, 0.0375, 0.0342],
         [0.8834, 0.9333, 0.9162,  ..., 0.9118, 0.8875, 0.9076]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0484, 0.0554, 0.0507,  ..., 0.0458, 0.0470, 0.0517],
         [0.0484, 0.0554, 0.0507,  ..., 0.0458, 0.0470, 0.0517],
         [0.0484, 0.0554, 0.0507,  ..., 0.0458, 0.0470, 0.0517],
         [0.8547, 0.8338, 0.8480,  ..., 0.8626, 0.8589, 0.8450]],
        [[0.0556, 0.0458, 0.0504,  ..., 0.0468, 0.0488, 0.0471],
         [0.0556, 0.0458, 0.0504,  ..., 0.0468, 0.0488, 0.0471],
         [0.0556, 0.0458, 0.0504,  ..., 0.0468, 0.0488, 0.0471],
         [0.8332, 0.8625, 0.8489,  ..., 0.8596, 0.8536, 0.8588]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:16,156 [Process: 0] Synchronize training processes
2024-08-16 14:23:16,157 [Process: 0] Evaluating...
2024-08-16 14:23:16,159 [Process: 0] EPOCH 118:
2024-08-16 14:23:16,161 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2324, 0.0845, 0.0540,  ..., 0.0777, 0.2500, 0.2500],
         [0.1962, 0.0845, 0.0540,  ..., 0.0631, 0.2500, 0.2500],
         [0.1962, 0.0845, 0.0540,  ..., 0.0631, 0.2500, 0.2500],
         [0.3751, 0.7466, 0.8380,  ..., 0.7960, 0.2500, 0.2500]],
        [[0.0189, 0.0350, 0.0266,  ..., 0.0261, 0.0249, 0.0397],
         [0.0189, 0.0350, 0.0266,  ..., 0.0261, 0.0249, 0.0397],
         [0.0189, 0.0350, 0.0266,  ..., 0.0261, 0.0261, 0.0478],
         [0.9434, 0.8949, 0.9203,  ..., 0.9218, 0.9241, 0.8728]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0342, 0.0350, 0.0552,  ..., 0.0441, 0.0430, 0.0500],
         [0.0342, 0.0350, 0.0552,  ..., 0.0441, 0.0430, 0.0500],
         [0.0342, 0.0350, 0.0552,  ..., 0.0441, 0.0430, 0.0500],
         [0.8974, 0.8951, 0.8343,  ..., 0.8678, 0.8710, 0.8501]],
        [[0.0472, 0.0544, 0.0494,  ..., 0.0455, 0.0502, 0.0544],
         [0.0472, 0.0544, 0.0494,  ..., 0.0455, 0.0502, 0.0544],
         [0.0472, 0.0544, 0.0494,  ..., 0.0455, 0.0502, 0.0544],
         [0.8583, 0.8367, 0.8518,  ..., 0.8634, 0.8495, 0.8368]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:18,214 [Process: 0] Synchronize training processes
2024-08-16 14:23:18,214 [Process: 0] Evaluating...
2024-08-16 14:23:18,216 [Process: 0] EPOCH 119:
2024-08-16 14:23:18,218 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0273,  ..., 0.0125, 0.2500, 0.0117],
         [0.2500, 0.2500, 0.0273,  ..., 0.0116, 0.2500, 0.0117],
         [0.2500, 0.2500, 0.0273,  ..., 0.0116, 0.2500, 0.0117],
         [0.2500, 0.2500, 0.9182,  ..., 0.9643, 0.2500, 0.9649]],
        [[0.0369, 0.0281, 0.0247,  ..., 0.0314, 0.0359, 0.0390],
         [0.0369, 0.0281, 0.0247,  ..., 0.0314, 0.0359, 0.0390],
         [0.0379, 0.0281, 0.0247,  ..., 0.0314, 0.0359, 0.0402],
         [0.8882, 0.9158, 0.9259,  ..., 0.9058, 0.8922, 0.8818]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0414, 0.0497, 0.0508,  ..., 0.0488, 0.0545, 0.0551],
         [0.0414, 0.0497, 0.0508,  ..., 0.0488, 0.0545, 0.0551],
         [0.0414, 0.0497, 0.0508,  ..., 0.0488, 0.0545, 0.0551],
         [0.8757, 0.8508, 0.8475,  ..., 0.8535, 0.8366, 0.8347]],
        [[0.0323, 0.0435, 0.0504,  ..., 0.0324, 0.0370, 0.0470],
         [0.0323, 0.0435, 0.0504,  ..., 0.0324, 0.0370, 0.0470],
         [0.0323, 0.0435, 0.0504,  ..., 0.0324, 0.0370, 0.0470],
         [0.9032, 0.8696, 0.8489,  ..., 0.9027, 0.8891, 0.8589]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:20,164 [Process: 0] Synchronize training processes
2024-08-16 14:23:20,164 [Process: 0] Evaluating...
2024-08-16 14:23:20,166 [Process: 0] EPOCH 120:
2024-08-16 14:23:20,168 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0257, 0.2413, 0.1166,  ..., 0.0121, 0.2500, 0.2500],
         [0.0257, 0.2126, 0.1054,  ..., 0.0116, 0.2500, 0.2500],
         [0.0257, 0.2126, 0.1054,  ..., 0.0108, 0.2500, 0.2500],
         [0.9230, 0.3335, 0.6725,  ..., 0.9655, 0.2500, 0.2500]],
        [[0.0460, 0.0375, 0.0467,  ..., 0.0466, 0.0338, 0.0298],
         [0.0460, 0.0375, 0.0467,  ..., 0.0466, 0.0338, 0.0298],
         [0.0511, 0.0375, 0.0467,  ..., 0.0515, 0.0338, 0.0298],
         [0.8569, 0.8874, 0.8599,  ..., 0.8553, 0.8986, 0.9107]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0366, 0.0380, 0.0466,  ..., 0.0458, 0.0430, 0.0461],
         [0.0366, 0.0380, 0.0466,  ..., 0.0458, 0.0430, 0.0461],
         [0.0366, 0.0380, 0.0466,  ..., 0.0458, 0.0430, 0.0461],
         [0.8901, 0.8859, 0.8603,  ..., 0.8626, 0.8710, 0.8617]],
        [[0.0517, 0.0324, 0.0447,  ..., 0.0641, 0.0443, 0.0538],
         [0.0517, 0.0324, 0.0447,  ..., 0.0641, 0.0443, 0.0538],
         [0.0517, 0.0324, 0.0447,  ..., 0.0641, 0.0443, 0.0538],
         [0.8450, 0.9029, 0.8658,  ..., 0.8077, 0.8671, 0.8385]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:22,205 [Process: 0] Synchronize training processes
2024-08-16 14:23:22,205 [Process: 0] Evaluating...
2024-08-16 14:23:22,207 [Process: 0] EPOCH 121:
2024-08-16 14:23:22,209 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2343, 0.2500,  ..., 0.2500, 0.0350, 0.2500],
         [0.2500, 0.2206, 0.2500,  ..., 0.2500, 0.0350, 0.2500],
         [0.2500, 0.2206, 0.2500,  ..., 0.2500, 0.0350, 0.2500],
         [0.2500, 0.3244, 0.2500,  ..., 0.2500, 0.8949, 0.2500]],
        [[0.0417, 0.0440, 0.0445,  ..., 0.0351, 0.0317, 0.0461],
         [0.0417, 0.0440, 0.0445,  ..., 0.0351, 0.0317, 0.0461],
         [0.0443, 0.0446, 0.0533,  ..., 0.0370, 0.0317, 0.0461],
         [0.8724, 0.8674, 0.8577,  ..., 0.8928, 0.9050, 0.8617]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0394, 0.0446, 0.0334,  ..., 0.0469, 0.0435, 0.0592],
         [0.0394, 0.0446, 0.0334,  ..., 0.0469, 0.0435, 0.0592],
         [0.0394, 0.0446, 0.0334,  ..., 0.0469, 0.0435, 0.0592],
         [0.8819, 0.8663, 0.8998,  ..., 0.8594, 0.8696, 0.8225]],
        [[0.0483, 0.0606, 0.0496,  ..., 0.0509, 0.0519, 0.0477],
         [0.0483, 0.0606, 0.0496,  ..., 0.0509, 0.0519, 0.0477],
         [0.0483, 0.0606, 0.0496,  ..., 0.0509, 0.0519, 0.0477],
         [0.8551, 0.8183, 0.8512,  ..., 0.8474, 0.8444, 0.8568]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:24,319 [Process: 0] Synchronize training processes
2024-08-16 14:23:24,319 [Process: 0] Evaluating...
2024-08-16 14:23:24,328 [Process: 0] EPOCH 122:
2024-08-16 14:23:24,329 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7497e-04, 1.3051e-03, 2.5000e-01,  ..., 2.6711e-01,
          2.6468e-01, 2.5000e-01],
         [4.3298e-04, 1.3051e-03, 2.5000e-01,  ..., 2.4430e-01,
          2.4511e-01, 2.5000e-01],
         [4.3258e-04, 1.3051e-03, 2.5000e-01,  ..., 2.4430e-01,
          2.4511e-01, 2.5000e-01],
         [9.9866e-01, 9.9608e-01, 2.5000e-01,  ..., 2.4430e-01,
          2.4511e-01, 2.5000e-01]],
        [[4.4618e-02, 3.7397e-02, 4.4639e-02,  ..., 2.5666e-02,
          4.0418e-02, 3.3404e-02],
         [4.4618e-02, 3.7397e-02, 4.4639e-02,  ..., 2.5666e-02,
          4.0418e-02, 3.3404e-02],
         [4.9419e-02, 3.7433e-02, 4.4639e-02,  ..., 2.5666e-02,
          4.9371e-02, 3.3404e-02],
         [8.6134e-01, 8.8777e-01, 8.6608e-01,  ..., 9.2300e-01,
          8.6979e-01, 8.9979e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0378, 0.0506, 0.0482,  ..., 0.0518, 0.0391, 0.0448],
         [0.0378, 0.0506, 0.0482,  ..., 0.0518, 0.0391, 0.0448],
         [0.0378, 0.0506, 0.0482,  ..., 0.0518, 0.0391, 0.0448],
         [0.8867, 0.8483, 0.8554,  ..., 0.8447, 0.8828, 0.8657]],
        [[0.0450, 0.0566, 0.0426,  ..., 0.0352, 0.0477, 0.0359],
         [0.0450, 0.0566, 0.0426,  ..., 0.0352, 0.0477, 0.0359],
         [0.0450, 0.0566, 0.0426,  ..., 0.0352, 0.0477, 0.0359],
         [0.8649, 0.8303, 0.8721,  ..., 0.8943, 0.8568, 0.8922]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:26,404 [Process: 0] Synchronize training processes
2024-08-16 14:23:26,404 [Process: 0] Evaluating...
2024-08-16 14:23:26,406 [Process: 0] EPOCH 123:
2024-08-16 14:23:26,408 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0390,  ..., 0.2500, 0.2500, 0.0023],
         [0.2500, 0.2500, 0.0390,  ..., 0.2500, 0.2500, 0.0023],
         [0.2500, 0.2500, 0.0390,  ..., 0.2500, 0.2500, 0.0023],
         [0.2500, 0.2500, 0.8829,  ..., 0.2500, 0.2500, 0.9931]],
        [[0.0393, 0.0332, 0.0245,  ..., 0.0243, 0.0337, 0.0318],
         [0.0393, 0.0332, 0.0245,  ..., 0.0243, 0.0337, 0.0318],
         [0.0461, 0.0342, 0.0245,  ..., 0.0243, 0.0337, 0.0318],
         [0.8753, 0.8994, 0.9266,  ..., 0.9271, 0.8988, 0.9046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0446, 0.0545, 0.0393,  ..., 0.0423, 0.0543, 0.0475],
         [0.0446, 0.0545, 0.0393,  ..., 0.0423, 0.0543, 0.0475],
         [0.0446, 0.0545, 0.0393,  ..., 0.0423, 0.0543, 0.0475],
         [0.8662, 0.8366, 0.8821,  ..., 0.8731, 0.8371, 0.8575]],
        [[0.0374, 0.0546, 0.0489,  ..., 0.0321, 0.0475, 0.0471],
         [0.0374, 0.0546, 0.0489,  ..., 0.0321, 0.0475, 0.0471],
         [0.0374, 0.0546, 0.0489,  ..., 0.0321, 0.0475, 0.0471],
         [0.8879, 0.8362, 0.8534,  ..., 0.9038, 0.8575, 0.8586]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:28,508 [Process: 0] Synchronize training processes
2024-08-16 14:23:28,508 [Process: 0] Evaluating...
2024-08-16 14:23:28,510 [Process: 0] EPOCH 124:
2024-08-16 14:23:28,512 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2717, 0.2839,  ..., 0.1525, 0.0105, 0.2476],
         [0.2500, 0.2302, 0.2387,  ..., 0.1397, 0.0102, 0.2236],
         [0.2500, 0.2302, 0.2387,  ..., 0.1397, 0.0102, 0.2236],
         [0.2500, 0.2680, 0.2387,  ..., 0.5682, 0.9692, 0.3051]],
        [[0.0295, 0.0283, 0.0330,  ..., 0.0283, 0.0314, 0.0299],
         [0.0295, 0.0283, 0.0330,  ..., 0.0283, 0.0314, 0.0299],
         [0.0300, 0.0283, 0.0330,  ..., 0.0283, 0.0314, 0.0299],
         [0.9110, 0.9151, 0.9009,  ..., 0.9151, 0.9057, 0.9103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0356, 0.0365, 0.0412,  ..., 0.0392, 0.0370, 0.0436],
         [0.0356, 0.0365, 0.0412,  ..., 0.0392, 0.0370, 0.0436],
         [0.0356, 0.0365, 0.0412,  ..., 0.0392, 0.0370, 0.0436],
         [0.8931, 0.8905, 0.8763,  ..., 0.8824, 0.8889, 0.8693]],
        [[0.0427, 0.0480, 0.0483,  ..., 0.0403, 0.0527, 0.0456],
         [0.0427, 0.0480, 0.0483,  ..., 0.0403, 0.0527, 0.0456],
         [0.0427, 0.0480, 0.0483,  ..., 0.0403, 0.0527, 0.0456],
         [0.8718, 0.8559, 0.8552,  ..., 0.8791, 0.8420, 0.8632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:30,583 [Process: 0] Synchronize training processes
2024-08-16 14:23:30,584 [Process: 0] Evaluating...
2024-08-16 14:23:30,586 [Process: 0] EPOCH 125:
2024-08-16 14:23:30,588 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2794, 0.0127, 0.0963,  ..., 0.1133, 0.2504, 0.1834],
         [0.2402, 0.0127, 0.0881,  ..., 0.1133, 0.2499, 0.1351],
         [0.2402, 0.0127, 0.0881,  ..., 0.1133, 0.2499, 0.1334],
         [0.2402, 0.9620, 0.7275,  ..., 0.6600, 0.2499, 0.5481]],
        [[0.0312, 0.0313, 0.0307,  ..., 0.0283, 0.0327, 0.0335],
         [0.0312, 0.0313, 0.0307,  ..., 0.0283, 0.0327, 0.0335],
         [0.0312, 0.0313, 0.0325,  ..., 0.0283, 0.0395, 0.0351],
         [0.9064, 0.9060, 0.9061,  ..., 0.9152, 0.8951, 0.8979]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0408, 0.0405, 0.0406,  ..., 0.0519, 0.0614, 0.0412],
         [0.0408, 0.0405, 0.0406,  ..., 0.0519, 0.0614, 0.0412],
         [0.0408, 0.0405, 0.0406,  ..., 0.0519, 0.0614, 0.0412],
         [0.8775, 0.8784, 0.8783,  ..., 0.8443, 0.8158, 0.8763]],
        [[0.0397, 0.0458, 0.0420,  ..., 0.0464, 0.0467, 0.0432],
         [0.0397, 0.0458, 0.0420,  ..., 0.0464, 0.0467, 0.0432],
         [0.0397, 0.0458, 0.0420,  ..., 0.0464, 0.0467, 0.0432],
         [0.8810, 0.8625, 0.8740,  ..., 0.8607, 0.8598, 0.8705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:32,674 [Process: 0] Synchronize training processes
2024-08-16 14:23:32,674 [Process: 0] Evaluating...
2024-08-16 14:23:32,676 [Process: 0] EPOCH 126:
2024-08-16 14:23:32,678 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2576, 0.0399, 0.2757,  ..., 0.0513, 0.2522, 0.2584],
         [0.2475, 0.0396, 0.2414,  ..., 0.0513, 0.2493, 0.2472],
         [0.2475, 0.0396, 0.2414,  ..., 0.0513, 0.2493, 0.2472],
         [0.2475, 0.8810, 0.2414,  ..., 0.8460, 0.2493, 0.2472]],
        [[0.0325, 0.0273, 0.0369,  ..., 0.0316, 0.0259, 0.0354],
         [0.0325, 0.0273, 0.0369,  ..., 0.0316, 0.0259, 0.0354],
         [0.0334, 0.0273, 0.0369,  ..., 0.0316, 0.0259, 0.0354],
         [0.9016, 0.9181, 0.8892,  ..., 0.9052, 0.9224, 0.8937]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0418, 0.0436, 0.0388,  ..., 0.0369, 0.0474, 0.0425],
         [0.0418, 0.0436, 0.0388,  ..., 0.0369, 0.0474, 0.0425],
         [0.0418, 0.0436, 0.0388,  ..., 0.0369, 0.0474, 0.0425],
         [0.8746, 0.8692, 0.8836,  ..., 0.8892, 0.8577, 0.8725]],
        [[0.0508, 0.0450, 0.0351,  ..., 0.0447, 0.0288, 0.0301],
         [0.0508, 0.0450, 0.0351,  ..., 0.0447, 0.0288, 0.0301],
         [0.0508, 0.0450, 0.0351,  ..., 0.0447, 0.0288, 0.0301],
         [0.8477, 0.8649, 0.8946,  ..., 0.8658, 0.9137, 0.9097]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:34,752 [Process: 0] Synchronize training processes
2024-08-16 14:23:34,752 [Process: 0] Evaluating...
2024-08-16 14:23:34,754 [Process: 0] EPOCH 127:
2024-08-16 14:23:34,756 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0260, 0.2066, 0.0601,  ..., 0.0255, 0.2500, 0.0198],
         [0.0253, 0.2032, 0.0601,  ..., 0.0255, 0.2500, 0.0198],
         [0.0253, 0.2032, 0.0601,  ..., 0.0255, 0.2500, 0.0198],
         [0.9234, 0.3870, 0.8196,  ..., 0.9235, 0.2500, 0.9407]],
        [[0.0310, 0.0327, 0.0274,  ..., 0.0334, 0.0367, 0.0260],
         [0.0310, 0.0327, 0.0274,  ..., 0.0334, 0.0367, 0.0260],
         [0.0310, 0.0327, 0.0274,  ..., 0.0363, 0.0367, 0.0260],
         [0.9070, 0.9019, 0.9178,  ..., 0.8969, 0.8898, 0.9219]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0318, 0.0452, 0.0409,  ..., 0.0323, 0.0472, 0.0342],
         [0.0318, 0.0452, 0.0409,  ..., 0.0323, 0.0472, 0.0342],
         [0.0318, 0.0452, 0.0409,  ..., 0.0323, 0.0472, 0.0342],
         [0.9047, 0.8643, 0.8772,  ..., 0.9030, 0.8584, 0.8973]],
        [[0.0520, 0.0478, 0.0365,  ..., 0.0425, 0.0400, 0.0496],
         [0.0520, 0.0478, 0.0365,  ..., 0.0425, 0.0400, 0.0496],
         [0.0520, 0.0478, 0.0365,  ..., 0.0425, 0.0400, 0.0496],
         [0.8440, 0.8567, 0.8904,  ..., 0.8724, 0.8799, 0.8513]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:23:36,806 [Process: 0] Synchronize training processes
2024-08-16 14:23:36,806 [Process: 0] Evaluating...
2024-08-16 14:23:36,808 [Process: 0] EPOCH 128:
2024-08-16 14:23:36,810 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2654, 0.0075, 0.0247,  ..., 0.0734, 0.2500, 0.0024],
         [0.2449, 0.0068, 0.0247,  ..., 0.0549, 0.2500, 0.0024],
         [0.2449, 0.0068, 0.0247,  ..., 0.0549, 0.2500, 0.0024],
         [0.2449, 0.9788, 0.9259,  ..., 0.8167, 0.2500, 0.9929]],
        [[0.0298, 0.0394, 0.0275,  ..., 0.0339, 0.0350, 0.0311],
         [0.0298, 0.0394, 0.0275,  ..., 0.0339, 0.0350, 0.0311],
         [0.0298, 0.0432, 0.0275,  ..., 0.0339, 0.0405, 0.0311],
         [0.9106, 0.8780, 0.9175,  ..., 0.8984, 0.8896, 0.9068]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:23:38,892 [Process: 0] Synchronize training processes
2024-08-16 14:23:38,892 [Process: 0] Evaluating...
2024-08-16 14:23:38,894 [Process: 0] EPOCH 129:
2024-08-16 14:23:38,896 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0375, 0.0419, 0.0424,  ..., 0.0439, 0.0337, 0.0339],
         [0.0375, 0.0419, 0.0424,  ..., 0.0439, 0.0337, 0.0339],
         [0.0375, 0.0419, 0.0424,  ..., 0.0439, 0.0337, 0.0339],
         [0.8875, 0.8742, 0.8729,  ..., 0.8684, 0.8990, 0.8984]],
        [[0.0578, 0.0488, 0.0500,  ..., 0.0467, 0.0361, 0.0509],
         [0.0578, 0.0488, 0.0500,  ..., 0.0467, 0.0361, 0.0509],
         [0.0578, 0.0488, 0.0500,  ..., 0.0467, 0.0361, 0.0509],
         [0.8266, 0.8535, 0.8500,  ..., 0.8600, 0.8917, 0.8472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2799, 0.0473, 0.0234,  ..., 0.2500, 0.0014, 0.0504],
         [0.2400, 0.0417, 0.0194,  ..., 0.2500, 0.0013, 0.0487],
         [0.2400, 0.0417, 0.0194,  ..., 0.2500, 0.0013, 0.0487],
         [0.2400, 0.8693, 0.9379,  ..., 0.2500, 0.9960, 0.8523]],
        [[0.0430, 0.0324, 0.0316,  ..., 0.0424, 0.0282, 0.0295],
         [0.0430, 0.0324, 0.0316,  ..., 0.0424, 0.0282, 0.0295],
         [0.0488, 0.0324, 0.0316,  ..., 0.0469, 0.0282, 0.0295],
         [0.8651, 0.9029, 0.9053,  ..., 0.8683, 0.9155, 0.9115]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:23:40,974 [Process: 0] Synchronize training processes
2024-08-16 14:23:40,974 [Process: 0] Evaluating...
2024-08-16 14:23:40,976 [Process: 0] EPOCH 130:
2024-08-16 14:23:40,978 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0396, 0.0463, 0.0427,  ..., 0.0445, 0.0473, 0.0453],
         [0.0396, 0.0463, 0.0427,  ..., 0.0445, 0.0473, 0.0453],
         [0.0396, 0.0463, 0.0427,  ..., 0.0445, 0.0473, 0.0453],
         [0.8811, 0.8611, 0.8719,  ..., 0.8666, 0.8581, 0.8640]],
        [[0.0456, 0.0411, 0.0311,  ..., 0.0490, 0.0503, 0.0283],
         [0.0456, 0.0411, 0.0311,  ..., 0.0490, 0.0503, 0.0283],
         [0.0456, 0.0411, 0.0311,  ..., 0.0490, 0.0503, 0.0283],
         [0.8633, 0.8767, 0.9068,  ..., 0.8530, 0.8491, 0.9150]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2205, 0.1834, 0.0105,  ..., 0.1910, 0.0161, 0.0017],
         [0.2205, 0.1834, 0.0091,  ..., 0.1783, 0.0161, 0.0016],
         [0.2205, 0.1834, 0.0091,  ..., 0.1783, 0.0161, 0.0016],
         [0.3386, 0.4499, 0.9712,  ..., 0.4524, 0.9517, 0.9951]],
        [[0.0259, 0.0375, 0.0327,  ..., 0.0281, 0.0279, 0.0237],
         [0.0259, 0.0375, 0.0327,  ..., 0.0281, 0.0279, 0.0237],
         [0.0259, 0.0401, 0.0327,  ..., 0.0281, 0.0279, 0.0237],
         [0.9223, 0.8848, 0.9018,  ..., 0.9158, 0.9163, 0.9290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:23:43,047 [Process: 0] Synchronize training processes
2024-08-16 14:23:43,047 [Process: 0] Evaluating...
2024-08-16 14:23:43,049 [Process: 0] EPOCH 131:
2024-08-16 14:23:43,051 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0425, 0.0402, 0.0483,  ..., 0.0416, 0.0350, 0.0420],
         [0.0425, 0.0402, 0.0483,  ..., 0.0416, 0.0350, 0.0420],
         [0.0425, 0.0402, 0.0483,  ..., 0.0416, 0.0350, 0.0420],
         [0.8725, 0.8795, 0.8550,  ..., 0.8753, 0.8950, 0.8740]],
        [[0.0412, 0.0470, 0.0402,  ..., 0.0450, 0.0427, 0.0374],
         [0.0412, 0.0470, 0.0402,  ..., 0.0450, 0.0427, 0.0374],
         [0.0412, 0.0470, 0.0402,  ..., 0.0450, 0.0427, 0.0374],
         [0.8763, 0.8591, 0.8793,  ..., 0.8649, 0.8720, 0.8878]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0038, 0.2500, 0.2519,  ..., 0.2500, 0.0797, 0.0849],
         [0.0038, 0.2500, 0.2494,  ..., 0.2500, 0.0797, 0.0757],
         [0.0038, 0.2500, 0.2494,  ..., 0.2500, 0.0797, 0.0757],
         [0.9887, 0.2500, 0.2494,  ..., 0.2500, 0.7610, 0.7636]],
        [[0.0252, 0.0302, 0.0327,  ..., 0.0305, 0.0305, 0.0391],
         [0.0252, 0.0302, 0.0327,  ..., 0.0305, 0.0305, 0.0391],
         [0.0252, 0.0302, 0.0338,  ..., 0.0305, 0.0305, 0.0427],
         [0.9245, 0.9094, 0.9007,  ..., 0.9086, 0.9086, 0.8791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:23:45,128 [Process: 0] Synchronize training processes
2024-08-16 14:23:45,129 [Process: 0] Evaluating...
2024-08-16 14:23:45,137 [Process: 0] EPOCH 132:
2024-08-16 14:23:45,139 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0519, 0.0488, 0.0369,  ..., 0.0378, 0.0371, 0.0375],
         [0.0519, 0.0488, 0.0369,  ..., 0.0378, 0.0371, 0.0375],
         [0.0519, 0.0488, 0.0369,  ..., 0.0378, 0.0371, 0.0375],
         [0.8444, 0.8535, 0.8893,  ..., 0.8866, 0.8887, 0.8875]],
        [[0.0441, 0.0411, 0.0415,  ..., 0.0471, 0.0440, 0.0466],
         [0.0441, 0.0411, 0.0415,  ..., 0.0471, 0.0440, 0.0466],
         [0.0441, 0.0411, 0.0415,  ..., 0.0471, 0.0440, 0.0466],
         [0.8677, 0.8766, 0.8756,  ..., 0.8586, 0.8679, 0.8603]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2212, 0.2500,  ..., 0.2500, 0.2500, 0.0011],
         [0.2500, 0.1792, 0.2500,  ..., 0.2500, 0.2500, 0.0011],
         [0.2500, 0.1792, 0.2500,  ..., 0.2500, 0.2500, 0.0011],
         [0.2500, 0.4204, 0.2500,  ..., 0.2500, 0.2500, 0.9968]],
        [[0.0290, 0.0230, 0.0229,  ..., 0.0285, 0.0271, 0.0289],
         [0.0290, 0.0230, 0.0229,  ..., 0.0285, 0.0271, 0.0289],
         [0.0290, 0.0230, 0.0229,  ..., 0.0296, 0.0288, 0.0326],
         [0.9129, 0.9310, 0.9314,  ..., 0.9134, 0.9170, 0.9096]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0258, 0.0367, 0.0417,  ..., 0.0401, 0.0364, 0.0292],
         [0.0258, 0.0367, 0.0417,  ..., 0.0401, 0.0364, 0.0292],
         [0.0258, 0.0367, 0.0417,  ..., 0.0401, 0.0364, 0.0292],
         [0.9225, 0.8899, 0.8749,  ..., 0.8797, 0.8908, 0.9125]],
        [[0.0399, 0.0270, 0.0324,  ..., 0.0335, 0.0420, 0.0416],
         [0.0399, 0.0270, 0.0324,  ..., 0.0335, 0.0420, 0.0416],
         [0.0399, 0.0270, 0.0324,  ..., 0.0335, 0.0420, 0.0416],
         [0.8802, 0.9191, 0.9029,  ..., 0.8995, 0.8741, 0.8751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1955, 0.0967,  ..., 0.0275, 0.0359, 0.0052],
         [0.2500, 0.1952, 0.0967,  ..., 0.0248, 0.0329, 0.0040],
         [0.2500, 0.1952, 0.0967,  ..., 0.0248, 0.0329, 0.0039],
         [0.2500, 0.4142, 0.7098,  ..., 0.9228, 0.8983, 0.9869]],
        [[0.0365, 0.0364, 0.0265,  ..., 0.0337, 0.0265, 0.0301],
         [0.0365, 0.0364, 0.0265,  ..., 0.0337, 0.0265, 0.0301],
         [0.0434, 0.0466, 0.0265,  ..., 0.0433, 0.0265, 0.0301],
         [0.8836, 0.8806, 0.9206,  ..., 0.8893, 0.9206, 0.9098]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:23:47,228 [Process: 0] Synchronize training processes
2024-08-16 14:23:47,228 [Process: 0] Evaluating...
2024-08-16 14:23:47,230 [Process: 0] EPOCH 133:
2024-08-16 14:23:47,232 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0418, 0.0291, 0.0323,  ..., 0.0407, 0.0347, 0.0312],
         [0.0418, 0.0291, 0.0323,  ..., 0.0407, 0.0347, 0.0312],
         [0.0418, 0.0291, 0.0323,  ..., 0.0407, 0.0347, 0.0312],
         [0.8746, 0.9126, 0.9032,  ..., 0.8780, 0.8958, 0.9063]],
        [[0.0364, 0.0395, 0.0349,  ..., 0.0315, 0.0435, 0.0334],
         [0.0364, 0.0395, 0.0349,  ..., 0.0315, 0.0435, 0.0334],
         [0.0364, 0.0395, 0.0349,  ..., 0.0315, 0.0435, 0.0334],
         [0.8909, 0.8816, 0.8954,  ..., 0.9054, 0.8696, 0.8997]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0770, 0.0015, 0.0759,  ..., 0.2088, 0.0874, 0.2500],
         [0.0770, 0.0015, 0.0759,  ..., 0.2088, 0.0871, 0.2500],
         [0.0770, 0.0015, 0.0759,  ..., 0.2088, 0.0871, 0.2500],
         [0.7689, 0.9956, 0.7724,  ..., 0.3736, 0.7385, 0.2500]],
        [[0.0318, 0.0318, 0.0271,  ..., 0.0309, 0.0304, 0.0295],
         [0.0318, 0.0318, 0.0271,  ..., 0.0309, 0.0304, 0.0295],
         [0.0379, 0.0318, 0.0271,  ..., 0.0309, 0.0304, 0.0308],
         [0.8985, 0.9047, 0.9186,  ..., 0.9073, 0.9088, 0.9101]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:23:49,326 [Process: 0] Synchronize training processes
2024-08-16 14:23:49,327 [Process: 0] Evaluating...
2024-08-16 14:23:49,329 [Process: 0] EPOCH 134:
2024-08-16 14:23:49,331 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0347, 0.0354, 0.0452,  ..., 0.0396, 0.0388, 0.0377],
         [0.0347, 0.0354, 0.0452,  ..., 0.0396, 0.0388, 0.0377],
         [0.0347, 0.0354, 0.0452,  ..., 0.0396, 0.0388, 0.0377],
         [0.8958, 0.8939, 0.8644,  ..., 0.8811, 0.8835, 0.8868]],
        [[0.0363, 0.0366, 0.0399,  ..., 0.0270, 0.0438, 0.0473],
         [0.0363, 0.0366, 0.0399,  ..., 0.0270, 0.0438, 0.0473],
         [0.0363, 0.0366, 0.0399,  ..., 0.0270, 0.0438, 0.0473],
         [0.8912, 0.8901, 0.8803,  ..., 0.9190, 0.8687, 0.8581]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2374,  ..., 0.2347, 0.2500, 0.0150],
         [0.2500, 0.2500, 0.1986,  ..., 0.2181, 0.2500, 0.0125],
         [0.2500, 0.2500, 0.1986,  ..., 0.2181, 0.2500, 0.0125],
         [0.2500, 0.2500, 0.3653,  ..., 0.3290, 0.2500, 0.9600]],
        [[0.0239, 0.0362, 0.0285,  ..., 0.0287, 0.0355, 0.0257],
         [0.0239, 0.0362, 0.0285,  ..., 0.0287, 0.0355, 0.0257],
         [0.0239, 0.0485, 0.0297,  ..., 0.0287, 0.0370, 0.0257],
         [0.9282, 0.8791, 0.9133,  ..., 0.9140, 0.8919, 0.9228]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:23:51,376 [Process: 0] Synchronize training processes
2024-08-16 14:23:51,377 [Process: 0] Evaluating...
2024-08-16 14:23:51,379 [Process: 0] EPOCH 135:
2024-08-16 14:23:51,380 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0463, 0.0384, 0.0322,  ..., 0.0329, 0.0380, 0.0333],
         [0.0463, 0.0384, 0.0322,  ..., 0.0329, 0.0380, 0.0333],
         [0.0463, 0.0384, 0.0322,  ..., 0.0329, 0.0380, 0.0333],
         [0.8610, 0.8848, 0.9034,  ..., 0.9014, 0.8861, 0.9000]],
        [[0.0423, 0.0477, 0.0311,  ..., 0.0252, 0.0337, 0.0478],
         [0.0423, 0.0477, 0.0311,  ..., 0.0252, 0.0337, 0.0478],
         [0.0423, 0.0477, 0.0311,  ..., 0.0252, 0.0337, 0.0478],
         [0.8731, 0.8570, 0.9066,  ..., 0.9243, 0.8990, 0.8567]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0351, 0.2252, 0.2500,  ..., 0.2500, 0.0574, 0.2594],
         [0.0351, 0.2252, 0.2500,  ..., 0.2500, 0.0498, 0.2469],
         [0.0351, 0.2252, 0.2500,  ..., 0.2500, 0.0498, 0.2469],
         [0.8946, 0.3243, 0.2500,  ..., 0.2500, 0.8430, 0.2469]],
        [[0.0270, 0.0301, 0.0255,  ..., 0.0237, 0.0307, 0.0296],
         [0.0270, 0.0301, 0.0255,  ..., 0.0237, 0.0307, 0.0296],
         [0.0270, 0.0301, 0.0255,  ..., 0.0237, 0.0307, 0.0301],
         [0.9190, 0.9098, 0.9234,  ..., 0.9289, 0.9080, 0.9107]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:23:53,335 [Process: 0] Synchronize training processes
2024-08-16 14:23:53,336 [Process: 0] Evaluating...
2024-08-16 14:23:53,338 [Process: 0] EPOCH 136:
2024-08-16 14:23:53,340 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0400, 0.0462, 0.0383,  ..., 0.0461, 0.0454, 0.0295],
         [0.0400, 0.0462, 0.0383,  ..., 0.0461, 0.0454, 0.0295],
         [0.0400, 0.0462, 0.0383,  ..., 0.0461, 0.0454, 0.0295],
         [0.8801, 0.8613, 0.8851,  ..., 0.8616, 0.8638, 0.9114]],
        [[0.0292, 0.0400, 0.0409,  ..., 0.0373, 0.0338, 0.0393],
         [0.0292, 0.0400, 0.0409,  ..., 0.0373, 0.0338, 0.0393],
         [0.0292, 0.0400, 0.0409,  ..., 0.0373, 0.0338, 0.0393],
         [0.9124, 0.8801, 0.8774,  ..., 0.8880, 0.8986, 0.8820]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.7312e-01, 2.6076e-01, 1.7630e-02,  ..., 2.0394e-03,
          9.7795e-04, 2.5065e-01],
         [2.4229e-01, 2.4641e-01, 1.7286e-02,  ..., 2.0394e-03,
          8.0679e-04, 2.4978e-01],
         [2.4229e-01, 2.4641e-01, 1.7286e-02,  ..., 2.0394e-03,
          7.6580e-04, 2.4978e-01],
         [2.4229e-01, 2.4641e-01, 9.4780e-01,  ..., 9.9388e-01,
          9.9745e-01, 2.4978e-01]],
        [[3.3152e-02, 3.0895e-02, 3.0783e-02,  ..., 2.9765e-02,
          2.8747e-02, 3.0459e-02],
         [3.3152e-02, 3.0895e-02, 3.0783e-02,  ..., 2.9765e-02,
          2.8747e-02, 3.0459e-02],
         [3.8652e-02, 3.2024e-02, 3.0783e-02,  ..., 2.9765e-02,
          2.8747e-02, 3.0459e-02],
         [8.9504e-01, 9.0619e-01, 9.0765e-01,  ..., 9.1070e-01,
          9.1376e-01, 9.0862e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:23:55,342 [Process: 0] Synchronize training processes
2024-08-16 14:23:55,342 [Process: 0] Evaluating...
2024-08-16 14:23:55,344 [Process: 0] EPOCH 137:
2024-08-16 14:23:55,346 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0357, 0.0338, 0.0376,  ..., 0.0348, 0.0277, 0.0323],
         [0.0357, 0.0338, 0.0376,  ..., 0.0348, 0.0277, 0.0323],
         [0.0357, 0.0338, 0.0376,  ..., 0.0348, 0.0277, 0.0323],
         [0.8929, 0.8985, 0.8871,  ..., 0.8956, 0.9168, 0.9032]],
        [[0.0483, 0.0377, 0.0385,  ..., 0.0349, 0.0398, 0.0398],
         [0.0483, 0.0377, 0.0385,  ..., 0.0349, 0.0398, 0.0398],
         [0.0483, 0.0377, 0.0385,  ..., 0.0349, 0.0398, 0.0398],
         [0.8552, 0.8868, 0.8844,  ..., 0.8952, 0.8806, 0.8806]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.5963e-01, 2.6301e-01, 2.7720e-01,  ..., 5.9600e-04,
          2.5000e-01, 2.6723e-01],
         [2.4679e-01, 2.4566e-01, 2.4093e-01,  ..., 5.9600e-04,
          2.5000e-01, 2.4426e-01],
         [2.4679e-01, 2.4566e-01, 2.4093e-01,  ..., 5.9600e-04,
          2.5000e-01, 2.4426e-01],
         [2.4679e-01, 2.4566e-01, 2.4093e-01,  ..., 9.9821e-01,
          2.5000e-01, 2.4426e-01]],
        [[2.5638e-02, 2.8703e-02, 3.2896e-02,  ..., 3.3752e-02,
          3.1398e-02, 2.8769e-02],
         [2.5638e-02, 2.8703e-02, 3.2896e-02,  ..., 3.3752e-02,
          3.1398e-02, 2.8769e-02],
         [2.5638e-02, 2.9000e-02, 3.7103e-02,  ..., 3.7050e-02,
          3.7212e-02, 2.8769e-02],
         [9.2309e-01, 9.1359e-01, 8.9710e-01,  ..., 8.9544e-01,
          8.9999e-01, 9.1369e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:23:57,430 [Process: 0] Synchronize training processes
2024-08-16 14:23:57,431 [Process: 0] Evaluating...
2024-08-16 14:23:57,433 [Process: 0] EPOCH 138:
2024-08-16 14:23:57,435 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0323, 0.0396, 0.0323,  ..., 0.0254, 0.0492, 0.0385],
         [0.0323, 0.0396, 0.0323,  ..., 0.0254, 0.0492, 0.0385],
         [0.0323, 0.0396, 0.0323,  ..., 0.0254, 0.0492, 0.0385],
         [0.9031, 0.8811, 0.9031,  ..., 0.9238, 0.8525, 0.8846]],
        [[0.0341, 0.0305, 0.0407,  ..., 0.0423, 0.0319, 0.0321],
         [0.0341, 0.0305, 0.0407,  ..., 0.0423, 0.0319, 0.0321],
         [0.0341, 0.0305, 0.0407,  ..., 0.0423, 0.0319, 0.0321],
         [0.8977, 0.9085, 0.8779,  ..., 0.8732, 0.9044, 0.9038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0715,  ..., 0.0625, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.0606,  ..., 0.0625, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.0606,  ..., 0.0625, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.8074,  ..., 0.8124, 0.2500, 0.2500]],
        [[0.0268, 0.0246, 0.0247,  ..., 0.0323, 0.0218, 0.0247],
         [0.0268, 0.0246, 0.0247,  ..., 0.0323, 0.0218, 0.0247],
         [0.0269, 0.0250, 0.0264,  ..., 0.0436, 0.0218, 0.0247],
         [0.9196, 0.9258, 0.9243,  ..., 0.8918, 0.9347, 0.9260]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:23:59,521 [Process: 0] Synchronize training processes
2024-08-16 14:23:59,522 [Process: 0] Evaluating...
2024-08-16 14:23:59,524 [Process: 0] EPOCH 139:
2024-08-16 14:23:59,526 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0349, 0.0290, 0.0358,  ..., 0.0368, 0.0285, 0.0385],
         [0.0349, 0.0290, 0.0358,  ..., 0.0368, 0.0285, 0.0385],
         [0.0349, 0.0290, 0.0358,  ..., 0.0368, 0.0285, 0.0385],
         [0.8953, 0.9129, 0.8925,  ..., 0.8897, 0.9145, 0.8844]],
        [[0.0415, 0.0363, 0.0507,  ..., 0.0293, 0.0478, 0.0311],
         [0.0415, 0.0363, 0.0507,  ..., 0.0293, 0.0478, 0.0311],
         [0.0415, 0.0363, 0.0507,  ..., 0.0293, 0.0478, 0.0311],
         [0.8755, 0.8910, 0.8479,  ..., 0.9121, 0.8567, 0.9068]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0972, 0.2228, 0.0069,  ..., 0.0214, 0.2188, 0.2500],
         [0.0972, 0.2228, 0.0062,  ..., 0.0214, 0.2188, 0.2500],
         [0.0972, 0.3317, 0.0062,  ..., 0.0214, 0.3437, 0.2500],
         [0.7083, 0.2228, 0.9807,  ..., 0.9357, 0.2188, 0.2500]],
        [[0.0325, 0.0212, 0.0233,  ..., 0.0264, 0.0238, 0.0247],
         [0.0325, 0.0212, 0.0233,  ..., 0.0264, 0.0238, 0.0247],
         [0.0457, 0.0212, 0.0261,  ..., 0.0264, 0.0238, 0.0252],
         [0.8894, 0.9364, 0.9274,  ..., 0.9208, 0.9285, 0.9254]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:24:01,621 [Process: 0] Synchronize training processes
2024-08-16 14:24:01,621 [Process: 0] Evaluating...
2024-08-16 14:24:01,623 [Process: 0] EPOCH 140:
2024-08-16 14:24:01,625 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0315, 0.0434, 0.0352,  ..., 0.0330, 0.0527, 0.0432],
         [0.0315, 0.0434, 0.0352,  ..., 0.0330, 0.0527, 0.0432],
         [0.0315, 0.0434, 0.0352,  ..., 0.0330, 0.0527, 0.0432],
         [0.9056, 0.8699, 0.8943,  ..., 0.9011, 0.8419, 0.8705]],
        [[0.0373, 0.0331, 0.0386,  ..., 0.0311, 0.0367, 0.0402],
         [0.0373, 0.0331, 0.0386,  ..., 0.0311, 0.0367, 0.0402],
         [0.0373, 0.0331, 0.0386,  ..., 0.0311, 0.0367, 0.0402],
         [0.8880, 0.9006, 0.8843,  ..., 0.9068, 0.8900, 0.8794]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0335, 0.1123, 0.0558,  ..., 0.0335, 0.2568, 0.0402],
         [0.0329, 0.1027, 0.0558,  ..., 0.0335, 0.2477, 0.0367],
         [0.0329, 0.1027, 0.0558,  ..., 0.0335, 0.2477, 0.0367],
         [0.9006, 0.6822, 0.8325,  ..., 0.8994, 0.2477, 0.8864]],
        [[0.0247, 0.0235, 0.0252,  ..., 0.0252, 0.0221, 0.0234],
         [0.0247, 0.0235, 0.0252,  ..., 0.0252, 0.0221, 0.0234],
         [0.0284, 0.0235, 0.0256,  ..., 0.0272, 0.0221, 0.0258],
         [0.9222, 0.9296, 0.9240,  ..., 0.9223, 0.9338, 0.9274]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:03,734 [Process: 0] Synchronize training processes
2024-08-16 14:24:03,734 [Process: 0] Evaluating...
2024-08-16 14:24:03,736 [Process: 0] EPOCH 141:
2024-08-16 14:24:03,738 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0349, 0.0454, 0.0511,  ..., 0.0322, 0.0321, 0.0354],
         [0.0349, 0.0454, 0.0511,  ..., 0.0322, 0.0321, 0.0354],
         [0.0349, 0.0454, 0.0511,  ..., 0.0322, 0.0321, 0.0354],
         [0.8953, 0.8639, 0.8466,  ..., 0.9033, 0.9036, 0.8937]],
        [[0.0326, 0.0352, 0.0335,  ..., 0.0384, 0.0445, 0.0340],
         [0.0326, 0.0352, 0.0335,  ..., 0.0384, 0.0445, 0.0340],
         [0.0326, 0.0352, 0.0335,  ..., 0.0384, 0.0445, 0.0340],
         [0.9022, 0.8944, 0.8996,  ..., 0.8849, 0.8665, 0.8981]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0135, 0.0625, 0.0136,  ..., 0.2835, 0.0115, 0.1134],
         [0.0112, 0.0592, 0.0136,  ..., 0.2388, 0.0099, 0.1134],
         [0.0112, 0.0592, 0.0136,  ..., 0.2388, 0.0099, 0.1134],
         [0.9641, 0.8190, 0.9591,  ..., 0.2388, 0.9687, 0.6599]],
        [[0.0248, 0.0227, 0.0226,  ..., 0.0262, 0.0242, 0.0271],
         [0.0248, 0.0227, 0.0226,  ..., 0.0262, 0.0242, 0.0271],
         [0.0254, 0.0236, 0.0226,  ..., 0.0302, 0.0249, 0.0329],
         [0.9250, 0.9310, 0.9321,  ..., 0.9173, 0.9267, 0.9129]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:05,823 [Process: 0] Synchronize training processes
2024-08-16 14:24:05,823 [Process: 0] Evaluating...
2024-08-16 14:24:05,831 [Process: 0] EPOCH 142:
2024-08-16 14:24:05,834 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0289, 0.0324, 0.0450,  ..., 0.0348, 0.0354, 0.0337],
         [0.0289, 0.0324, 0.0450,  ..., 0.0348, 0.0354, 0.0337],
         [0.0289, 0.0324, 0.0450,  ..., 0.0348, 0.0354, 0.0337],
         [0.9134, 0.9027, 0.8649,  ..., 0.8956, 0.8938, 0.8990]],
        [[0.0305, 0.0388, 0.0338,  ..., 0.0248, 0.0359, 0.0342],
         [0.0305, 0.0388, 0.0338,  ..., 0.0248, 0.0359, 0.0342],
         [0.0305, 0.0388, 0.0338,  ..., 0.0248, 0.0359, 0.0342],
         [0.9084, 0.8837, 0.8986,  ..., 0.9257, 0.8924, 0.8975]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 14:24:07,978 [Process: 0] Synchronize training processes
2024-08-16 14:24:07,978 [Process: 0] Evaluating...
2024-08-16 14:24:07,980 [Process: 0] EPOCH 143:
2024-08-16 14:24:07,982 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0263, 0.0152,  ..., 0.2500, 0.0221, 0.0417],
         [0.2500, 0.0263, 0.0152,  ..., 0.2500, 0.0221, 0.0339],
         [0.2500, 0.0263, 0.0152,  ..., 0.2500, 0.0221, 0.0339],
         [0.2500, 0.9210, 0.9544,  ..., 0.2500, 0.9337, 0.8906]],
        [[0.0174, 0.0260, 0.0257,  ..., 0.0220, 0.0256, 0.0303],
         [0.0174, 0.0260, 0.0257,  ..., 0.0220, 0.0256, 0.0303],
         [0.0174, 0.0299, 0.0257,  ..., 0.0220, 0.0265, 0.0425],
         [0.9478, 0.9182, 0.9230,  ..., 0.9340, 0.9223, 0.8969]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0350, 0.0392, 0.0304,  ..., 0.0301, 0.0289, 0.0429],
         [0.0350, 0.0392, 0.0304,  ..., 0.0301, 0.0289, 0.0429],
         [0.0350, 0.0392, 0.0304,  ..., 0.0301, 0.0289, 0.0429],
         [0.8950, 0.8824, 0.9088,  ..., 0.9096, 0.9134, 0.8714]],
        [[0.0326, 0.0347, 0.0385,  ..., 0.0306, 0.0357, 0.0417],
         [0.0326, 0.0347, 0.0385,  ..., 0.0306, 0.0357, 0.0417],
         [0.0326, 0.0347, 0.0385,  ..., 0.0306, 0.0357, 0.0417],
         [0.9023, 0.8960, 0.8846,  ..., 0.9082, 0.8930, 0.8748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:10,090 [Process: 0] Synchronize training processes
2024-08-16 14:24:10,091 [Process: 0] Evaluating...
2024-08-16 14:24:10,093 [Process: 0] EPOCH 144:
2024-08-16 14:24:10,095 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2572, 0.2500, 0.2510,  ..., 0.2500, 0.2500, 0.0151],
         [0.2476, 0.2500, 0.2497,  ..., 0.2500, 0.2500, 0.0151],
         [0.2476, 0.2500, 0.2497,  ..., 0.2500, 0.2500, 0.0151],
         [0.2476, 0.2500, 0.2497,  ..., 0.2500, 0.2500, 0.9546]],
        [[0.0235, 0.0235, 0.0197,  ..., 0.0239, 0.0254, 0.0273],
         [0.0235, 0.0235, 0.0197,  ..., 0.0239, 0.0254, 0.0273],
         [0.0235, 0.0235, 0.0197,  ..., 0.0280, 0.0289, 0.0279],
         [0.9294, 0.9295, 0.9408,  ..., 0.9241, 0.9203, 0.9176]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0274, 0.0257, 0.0358,  ..., 0.0302, 0.0408, 0.0290],
         [0.0274, 0.0257, 0.0358,  ..., 0.0302, 0.0408, 0.0290],
         [0.0274, 0.0257, 0.0358,  ..., 0.0302, 0.0408, 0.0290],
         [0.9177, 0.9230, 0.8925,  ..., 0.9093, 0.8775, 0.9130]],
        [[0.0384, 0.0382, 0.0343,  ..., 0.0276, 0.0286, 0.0313],
         [0.0384, 0.0382, 0.0343,  ..., 0.0276, 0.0286, 0.0313],
         [0.0384, 0.0382, 0.0343,  ..., 0.0276, 0.0286, 0.0313],
         [0.8849, 0.8854, 0.8972,  ..., 0.9172, 0.9141, 0.9060]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:12,164 [Process: 0] Synchronize training processes
2024-08-16 14:24:12,165 [Process: 0] Evaluating...
2024-08-16 14:24:12,167 [Process: 0] EPOCH 145:
2024-08-16 14:24:12,169 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2321, 0.2500, 0.0249,  ..., 0.2691, 0.0666, 0.0201],
         [0.2174, 0.2500, 0.0223,  ..., 0.2436, 0.0666, 0.0177],
         [0.2174, 0.2500, 0.0223,  ..., 0.2436, 0.0666, 0.0177],
         [0.3332, 0.2500, 0.9304,  ..., 0.2436, 0.8002, 0.9446]],
        [[0.0180, 0.0244, 0.0268,  ..., 0.0306, 0.0263, 0.0214],
         [0.0180, 0.0244, 0.0268,  ..., 0.0306, 0.0263, 0.0214],
         [0.0180, 0.0249, 0.0289,  ..., 0.0384, 0.0291, 0.0214],
         [0.9459, 0.9263, 0.9175,  ..., 0.9003, 0.9184, 0.9357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0243, 0.0305, 0.0280,  ..., 0.0314, 0.0398, 0.0326],
         [0.0243, 0.0305, 0.0280,  ..., 0.0314, 0.0398, 0.0326],
         [0.0243, 0.0305, 0.0280,  ..., 0.0314, 0.0398, 0.0326],
         [0.9272, 0.9085, 0.9160,  ..., 0.9057, 0.8807, 0.9021]],
        [[0.0335, 0.0439, 0.0298,  ..., 0.0372, 0.0327, 0.0293],
         [0.0335, 0.0439, 0.0298,  ..., 0.0372, 0.0327, 0.0293],
         [0.0335, 0.0439, 0.0298,  ..., 0.0372, 0.0327, 0.0293],
         [0.8994, 0.8682, 0.9107,  ..., 0.8885, 0.9018, 0.9122]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:14,237 [Process: 0] Synchronize training processes
2024-08-16 14:24:14,238 [Process: 0] Evaluating...
2024-08-16 14:24:14,240 [Process: 0] EPOCH 146:
2024-08-16 14:24:14,242 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0375, 0.2500, 0.2500,  ..., 0.2699, 0.2683, 0.2500],
         [0.0310, 0.2500, 0.2500,  ..., 0.2434, 0.2439, 0.2500],
         [0.0310, 0.2500, 0.2500,  ..., 0.2434, 0.2439, 0.2500],
         [0.9006, 0.2500, 0.2500,  ..., 0.2434, 0.2439, 0.2500]],
        [[0.0237, 0.0235, 0.0196,  ..., 0.0217, 0.0224, 0.0230],
         [0.0237, 0.0235, 0.0196,  ..., 0.0217, 0.0224, 0.0230],
         [0.0297, 0.0266, 0.0196,  ..., 0.0224, 0.0224, 0.0259],
         [0.9230, 0.9265, 0.9412,  ..., 0.9342, 0.9327, 0.9281]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0278, 0.0319, 0.0293,  ..., 0.0283, 0.0253, 0.0379],
         [0.0278, 0.0319, 0.0293,  ..., 0.0283, 0.0253, 0.0379],
         [0.0278, 0.0319, 0.0293,  ..., 0.0283, 0.0253, 0.0379],
         [0.9167, 0.9042, 0.9120,  ..., 0.9152, 0.9241, 0.8863]],
        [[0.0412, 0.0506, 0.0301,  ..., 0.0411, 0.0304, 0.0419],
         [0.0412, 0.0506, 0.0301,  ..., 0.0411, 0.0304, 0.0419],
         [0.0412, 0.0506, 0.0301,  ..., 0.0411, 0.0304, 0.0419],
         [0.8763, 0.8483, 0.9097,  ..., 0.8767, 0.9089, 0.8742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:16,358 [Process: 0] Synchronize training processes
2024-08-16 14:24:16,359 [Process: 0] Evaluating...
2024-08-16 14:24:16,361 [Process: 0] EPOCH 147:
2024-08-16 14:24:16,363 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0275, 0.0857, 0.0311,  ..., 0.2524, 0.0252, 0.0089],
         [0.0275, 0.0803, 0.0301,  ..., 0.2492, 0.0252, 0.0084],
         [0.0275, 0.0803, 0.0301,  ..., 0.2492, 0.0252, 0.0084],
         [0.9174, 0.7537, 0.9088,  ..., 0.2492, 0.9245, 0.9744]],
        [[0.0237, 0.0182, 0.0230,  ..., 0.0215, 0.0205, 0.0196],
         [0.0237, 0.0182, 0.0230,  ..., 0.0215, 0.0205, 0.0196],
         [0.0241, 0.0182, 0.0230,  ..., 0.0215, 0.0205, 0.0196],
         [0.9285, 0.9454, 0.9309,  ..., 0.9356, 0.9384, 0.9413]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0398, 0.0299, 0.0280,  ..., 0.0340, 0.0309, 0.0318],
         [0.0398, 0.0299, 0.0280,  ..., 0.0340, 0.0309, 0.0318],
         [0.0398, 0.0299, 0.0280,  ..., 0.0340, 0.0309, 0.0318],
         [0.8807, 0.9102, 0.9160,  ..., 0.8979, 0.9074, 0.9045]],
        [[0.0370, 0.0436, 0.0313,  ..., 0.0397, 0.0299, 0.0294],
         [0.0370, 0.0436, 0.0313,  ..., 0.0397, 0.0299, 0.0294],
         [0.0370, 0.0436, 0.0313,  ..., 0.0397, 0.0299, 0.0294],
         [0.8890, 0.8692, 0.9060,  ..., 0.8808, 0.9102, 0.9118]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:18,440 [Process: 0] Synchronize training processes
2024-08-16 14:24:18,441 [Process: 0] Evaluating...
2024-08-16 14:24:18,443 [Process: 0] EPOCH 148:
2024-08-16 14:24:18,445 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0381, 0.2720, 0.0214,  ..., 0.2763, 0.2500, 0.0419],
         [0.0351, 0.2427, 0.0214,  ..., 0.2412, 0.2500, 0.0352],
         [0.0351, 0.2427, 0.0214,  ..., 0.2412, 0.2500, 0.0352],
         [0.8918, 0.2427, 0.9357,  ..., 0.2412, 0.2500, 0.8877]],
        [[0.0193, 0.0318, 0.0230,  ..., 0.0200, 0.0179, 0.0193],
         [0.0193, 0.0318, 0.0230,  ..., 0.0200, 0.0179, 0.0193],
         [0.0193, 0.0441, 0.0242,  ..., 0.0200, 0.0179, 0.0193],
         [0.9421, 0.8923, 0.9298,  ..., 0.9400, 0.9464, 0.9422]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0340, 0.0356, 0.0393,  ..., 0.0307, 0.0352, 0.0269],
         [0.0340, 0.0356, 0.0393,  ..., 0.0307, 0.0352, 0.0269],
         [0.0340, 0.0356, 0.0393,  ..., 0.0307, 0.0352, 0.0269],
         [0.8979, 0.8932, 0.8820,  ..., 0.9079, 0.8945, 0.9194]],
        [[0.0366, 0.0376, 0.0365,  ..., 0.0352, 0.0261, 0.0357],
         [0.0366, 0.0376, 0.0365,  ..., 0.0352, 0.0261, 0.0357],
         [0.0366, 0.0376, 0.0365,  ..., 0.0352, 0.0261, 0.0357],
         [0.8901, 0.8872, 0.8906,  ..., 0.8945, 0.9217, 0.8930]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:20,498 [Process: 0] Synchronize training processes
2024-08-16 14:24:20,499 [Process: 0] Evaluating...
2024-08-16 14:24:20,501 [Process: 0] EPOCH 149:
2024-08-16 14:24:20,503 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2631, 0.2796, 0.0420,  ..., 0.0537, 0.2659, 0.2427],
         [0.2456, 0.2401, 0.0420,  ..., 0.0392, 0.2447, 0.2427],
         [0.2456, 0.2401, 0.0420,  ..., 0.0392, 0.2447, 0.2719],
         [0.2456, 0.2401, 0.8741,  ..., 0.8678, 0.2447, 0.2427]],
        [[0.0223, 0.0194, 0.0245,  ..., 0.0230, 0.0190, 0.0204],
         [0.0223, 0.0194, 0.0245,  ..., 0.0230, 0.0190, 0.0204],
         [0.0252, 0.0194, 0.0272,  ..., 0.0303, 0.0190, 0.0204],
         [0.9301, 0.9419, 0.9237,  ..., 0.9237, 0.9429, 0.9388]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0378, 0.0267, 0.0442,  ..., 0.0341, 0.0273, 0.0257],
         [0.0378, 0.0267, 0.0442,  ..., 0.0341, 0.0273, 0.0257],
         [0.0378, 0.0267, 0.0442,  ..., 0.0341, 0.0273, 0.0257],
         [0.8865, 0.9198, 0.8675,  ..., 0.8976, 0.9182, 0.9228]],
        [[0.0339, 0.0391, 0.0292,  ..., 0.0341, 0.0240, 0.0289],
         [0.0339, 0.0391, 0.0292,  ..., 0.0341, 0.0240, 0.0289],
         [0.0339, 0.0391, 0.0292,  ..., 0.0341, 0.0240, 0.0289],
         [0.8983, 0.8827, 0.9125,  ..., 0.8976, 0.9279, 0.9133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:22,593 [Process: 0] Synchronize training processes
2024-08-16 14:24:22,593 [Process: 0] Evaluating...
2024-08-16 14:24:22,595 [Process: 0] EPOCH 150:
2024-08-16 14:24:22,598 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0138, 0.2500, 0.0400,  ..., 0.0137, 0.2504, 0.2500],
         [0.0128, 0.2500, 0.0400,  ..., 0.0129, 0.2499, 0.2500],
         [0.0125, 0.2500, 0.0400,  ..., 0.0129, 0.2499, 0.2500],
         [0.9608, 0.2500, 0.8799,  ..., 0.9605, 0.2499, 0.2500]],
        [[0.0223, 0.0193, 0.0237,  ..., 0.0188, 0.0195, 0.0150],
         [0.0223, 0.0193, 0.0237,  ..., 0.0188, 0.0195, 0.0150],
         [0.0253, 0.0194, 0.0279,  ..., 0.0188, 0.0195, 0.0150],
         [0.9301, 0.9420, 0.9247,  ..., 0.9435, 0.9414, 0.9551]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0235, 0.0412, 0.0259,  ..., 0.0267, 0.0290, 0.0267],
         [0.0235, 0.0412, 0.0259,  ..., 0.0267, 0.0290, 0.0267],
         [0.0235, 0.0412, 0.0259,  ..., 0.0267, 0.0290, 0.0267],
         [0.9294, 0.8765, 0.9222,  ..., 0.9198, 0.9130, 0.9199]],
        [[0.0276, 0.0378, 0.0245,  ..., 0.0396, 0.0373, 0.0361],
         [0.0276, 0.0378, 0.0245,  ..., 0.0396, 0.0373, 0.0361],
         [0.0276, 0.0378, 0.0245,  ..., 0.0396, 0.0373, 0.0361],
         [0.9172, 0.8867, 0.9265,  ..., 0.8811, 0.8882, 0.8918]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:24,680 [Process: 0] Synchronize training processes
2024-08-16 14:24:24,680 [Process: 0] Evaluating...
2024-08-16 14:24:24,682 [Process: 0] EPOCH 151:
2024-08-16 14:24:24,684 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2500,  ..., 0.0100, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.0100, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.0100, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.9701, 0.2500, 0.2500]],
        [[0.0246, 0.0180, 0.0194,  ..., 0.0146, 0.0177, 0.0198],
         [0.0246, 0.0180, 0.0194,  ..., 0.0146, 0.0177, 0.0198],
         [0.0341, 0.0182, 0.0194,  ..., 0.0146, 0.0177, 0.0208],
         [0.9168, 0.9458, 0.9419,  ..., 0.9561, 0.9469, 0.9397]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0378, 0.0290, 0.0317,  ..., 0.0290, 0.0377, 0.0256],
         [0.0378, 0.0290, 0.0317,  ..., 0.0290, 0.0377, 0.0256],
         [0.0378, 0.0290, 0.0317,  ..., 0.0290, 0.0377, 0.0256],
         [0.8866, 0.9130, 0.9048,  ..., 0.9131, 0.8868, 0.9232]],
        [[0.0377, 0.0283, 0.0281,  ..., 0.0268, 0.0363, 0.0346],
         [0.0377, 0.0283, 0.0281,  ..., 0.0268, 0.0363, 0.0346],
         [0.0377, 0.0283, 0.0281,  ..., 0.0268, 0.0363, 0.0346],
         [0.8870, 0.9150, 0.9156,  ..., 0.9197, 0.8910, 0.8961]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:26,786 [Process: 0] Synchronize training processes
2024-08-16 14:24:26,787 [Process: 0] Evaluating...
2024-08-16 14:24:26,795 [Process: 0] EPOCH 152:
2024-08-16 14:24:26,797 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0126, 0.2513, 0.2540,  ..., 0.2500, 0.0124, 0.2500],
         [0.0112, 0.2496, 0.2487,  ..., 0.2500, 0.0124, 0.2500],
         [0.0112, 0.2496, 0.2487,  ..., 0.2500, 0.0124, 0.2500],
         [0.9651, 0.2496, 0.2487,  ..., 0.2500, 0.9627, 0.2500]],
        [[0.0213, 0.0173, 0.0204,  ..., 0.0218, 0.0202, 0.0165],
         [0.0213, 0.0173, 0.0204,  ..., 0.0218, 0.0202, 0.0165],
         [0.0228, 0.0173, 0.0215,  ..., 0.0246, 0.0236, 0.0165],
         [0.9345, 0.9482, 0.9378,  ..., 0.9318, 0.9359, 0.9506]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0286, 0.0327, 0.0345,  ..., 0.0330, 0.0297, 0.0344],
         [0.0286, 0.0327, 0.0345,  ..., 0.0330, 0.0297, 0.0344],
         [0.0286, 0.0327, 0.0345,  ..., 0.0330, 0.0297, 0.0344],
         [0.9143, 0.9019, 0.8966,  ..., 0.9011, 0.9108, 0.8969]],
        [[0.0255, 0.0240, 0.0271,  ..., 0.0258, 0.0369, 0.0339],
         [0.0255, 0.0240, 0.0271,  ..., 0.0258, 0.0369, 0.0339],
         [0.0255, 0.0240, 0.0271,  ..., 0.0258, 0.0369, 0.0339],
         [0.9236, 0.9279, 0.9187,  ..., 0.9225, 0.8894, 0.8984]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:28,899 [Process: 0] Synchronize training processes
2024-08-16 14:24:28,900 [Process: 0] Evaluating...
2024-08-16 14:24:28,902 [Process: 0] EPOCH 153:
2024-08-16 14:24:28,904 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0062, 0.2500, 0.2582,  ..., 0.2521, 0.0066, 0.2781],
         [0.0061, 0.2500, 0.2473,  ..., 0.2493, 0.0060, 0.2406],
         [0.0061, 0.2500, 0.2473,  ..., 0.2493, 0.0056, 0.2406],
         [0.9816, 0.2500, 0.2473,  ..., 0.2493, 0.9818, 0.2406]],
        [[0.0212, 0.0153, 0.0171,  ..., 0.0220, 0.0157, 0.0194],
         [0.0212, 0.0153, 0.0171,  ..., 0.0220, 0.0157, 0.0194],
         [0.0266, 0.0153, 0.0171,  ..., 0.0251, 0.0157, 0.0217],
         [0.9311, 0.9541, 0.9488,  ..., 0.9309, 0.9528, 0.9394]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0355, 0.0240, 0.0221,  ..., 0.0324, 0.0339, 0.0258],
         [0.0355, 0.0240, 0.0221,  ..., 0.0324, 0.0339, 0.0258],
         [0.0355, 0.0240, 0.0221,  ..., 0.0324, 0.0339, 0.0258],
         [0.8936, 0.9281, 0.9338,  ..., 0.9028, 0.8982, 0.9226]],
        [[0.0398, 0.0274, 0.0257,  ..., 0.0432, 0.0384, 0.0255],
         [0.0398, 0.0274, 0.0257,  ..., 0.0432, 0.0384, 0.0255],
         [0.0398, 0.0274, 0.0257,  ..., 0.0432, 0.0384, 0.0255],
         [0.8805, 0.9179, 0.9228,  ..., 0.8703, 0.8848, 0.9234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:31,000 [Process: 0] Synchronize training processes
2024-08-16 14:24:31,001 [Process: 0] Evaluating...
2024-08-16 14:24:31,003 [Process: 0] EPOCH 154:
2024-08-16 14:24:31,005 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2789, 0.0290, 0.0547,  ..., 0.0083, 0.0170, 0.0924],
         [0.2404, 0.0241, 0.0486,  ..., 0.0067, 0.0158, 0.0802],
         [0.2404, 0.0241, 0.0486,  ..., 0.0061, 0.0158, 0.0802],
         [0.2404, 0.9228, 0.8480,  ..., 0.9789, 0.9514, 0.7473]],
        [[0.0150, 0.0203, 0.0170,  ..., 0.0164, 0.0251, 0.0216],
         [0.0150, 0.0203, 0.0170,  ..., 0.0164, 0.0251, 0.0216],
         [0.0150, 0.0208, 0.0180,  ..., 0.0164, 0.0361, 0.0281],
         [0.9551, 0.9386, 0.9479,  ..., 0.9507, 0.9136, 0.9288]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:24:33,091 [Process: 0] Synchronize training processes
2024-08-16 14:24:33,092 [Process: 0] Evaluating...
2024-08-16 14:24:33,094 [Process: 0] EPOCH 155:
2024-08-16 14:24:33,096 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0278, 0.0371, 0.0351,  ..., 0.0358, 0.0243, 0.0277],
         [0.0278, 0.0371, 0.0351,  ..., 0.0358, 0.0243, 0.0277],
         [0.0278, 0.0371, 0.0351,  ..., 0.0358, 0.0243, 0.0277],
         [0.9167, 0.8886, 0.8946,  ..., 0.8927, 0.9271, 0.9168]],
        [[0.0372, 0.0358, 0.0296,  ..., 0.0280, 0.0358, 0.0386],
         [0.0372, 0.0358, 0.0296,  ..., 0.0280, 0.0358, 0.0386],
         [0.0372, 0.0358, 0.0296,  ..., 0.0280, 0.0358, 0.0386],
         [0.8884, 0.8927, 0.9113,  ..., 0.9159, 0.8927, 0.8842]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0025, 0.2500, 0.2500,  ..., 0.0087, 0.2503, 0.0059],
         [0.0025, 0.2500, 0.2500,  ..., 0.0087, 0.2499, 0.0057],
         [0.0025, 0.2500, 0.2500,  ..., 0.0087, 0.2499, 0.0057],
         [0.9926, 0.2500, 0.2500,  ..., 0.9738, 0.2499, 0.9827]],
        [[0.0195, 0.0234, 0.0201,  ..., 0.0213, 0.0222, 0.0221],
         [0.0195, 0.0234, 0.0201,  ..., 0.0213, 0.0222, 0.0221],
         [0.0199, 0.0338, 0.0217,  ..., 0.0280, 0.0303, 0.0264],
         [0.9410, 0.9194, 0.9380,  ..., 0.9293, 0.9254, 0.9295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:24:35,092 [Process: 0] Synchronize training processes
2024-08-16 14:24:35,092 [Process: 0] Evaluating...
2024-08-16 14:24:35,094 [Process: 0] EPOCH 156:
2024-08-16 14:24:35,096 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0337, 0.0375, 0.0291,  ..., 0.0266, 0.0311, 0.0298],
         [0.0337, 0.0375, 0.0291,  ..., 0.0266, 0.0311, 0.0298],
         [0.0337, 0.0375, 0.0291,  ..., 0.0266, 0.0311, 0.0298],
         [0.8988, 0.8874, 0.9128,  ..., 0.9202, 0.9066, 0.9106]],
        [[0.0273, 0.0337, 0.0321,  ..., 0.0313, 0.0358, 0.0338],
         [0.0273, 0.0337, 0.0321,  ..., 0.0313, 0.0358, 0.0338],
         [0.0273, 0.0337, 0.0321,  ..., 0.0313, 0.0358, 0.0338],
         [0.9181, 0.8989, 0.9036,  ..., 0.9060, 0.8925, 0.8986]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0263, 0.2500,  ..., 0.0062, 0.2500, 0.2503],
         [0.0101, 0.0243, 0.2500,  ..., 0.0051, 0.2500, 0.2499],
         [0.0101, 0.0243, 0.2500,  ..., 0.0051, 0.2500, 0.2499],
         [0.9698, 0.9251, 0.2500,  ..., 0.9835, 0.2500, 0.2499]],
        [[0.0170, 0.0181, 0.0174,  ..., 0.0131, 0.0200, 0.0165],
         [0.0170, 0.0181, 0.0174,  ..., 0.0131, 0.0200, 0.0165],
         [0.0170, 0.0184, 0.0174,  ..., 0.0131, 0.0210, 0.0165],
         [0.9489, 0.9453, 0.9477,  ..., 0.9608, 0.9389, 0.9505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 14:24:37,006 [Process: 0] Synchronize training processes
2024-08-16 14:24:37,006 [Process: 0] Evaluating...
2024-08-16 14:24:37,008 [Process: 0] EPOCH 157:
2024-08-16 14:24:37,010 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0257, 0.0242, 0.0241,  ..., 0.0392, 0.0269, 0.0376],
         [0.0257, 0.0242, 0.0241,  ..., 0.0392, 0.0269, 0.0376],
         [0.0257, 0.0242, 0.0241,  ..., 0.0392, 0.0269, 0.0376],
         [0.9229, 0.9273, 0.9277,  ..., 0.8824, 0.9192, 0.8873]],
        [[0.0247, 0.0319, 0.0369,  ..., 0.0362, 0.0342, 0.0244],
         [0.0247, 0.0319, 0.0369,  ..., 0.0362, 0.0342, 0.0244],
         [0.0247, 0.0319, 0.0369,  ..., 0.0362, 0.0342, 0.0244],
         [0.9258, 0.9043, 0.8893,  ..., 0.8914, 0.8974, 0.9269]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0158, 0.2500, 0.0178,  ..., 0.0212, 0.2575, 0.0568],
         [0.0131, 0.2500, 0.0146,  ..., 0.0170, 0.2475, 0.0385],
         [0.0131, 0.2500, 0.0146,  ..., 0.0170, 0.2475, 0.0385],
         [0.9581, 0.2500, 0.9530,  ..., 0.9448, 0.2475, 0.8663]],
        [[0.0143, 0.0173, 0.0153,  ..., 0.0206, 0.0198, 0.0186],
         [0.0143, 0.0173, 0.0153,  ..., 0.0206, 0.0198, 0.0186],
         [0.0143, 0.0173, 0.0153,  ..., 0.0264, 0.0214, 0.0186],
         [0.9570, 0.9482, 0.9542,  ..., 0.9324, 0.9391, 0.9442]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0275, 0.0338, 0.0295,  ..., 0.0261, 0.0327, 0.0281],
         [0.0275, 0.0338, 0.0295,  ..., 0.0261, 0.0327, 0.0281],
         [0.0275, 0.0338, 0.0295,  ..., 0.0261, 0.0327, 0.0281],
         [0.9176, 0.8987, 0.9114,  ..., 0.9216, 0.9018, 0.9156]],
        [[0.0350, 0.0269, 0.0275,  ..., 0.0337, 0.0321, 0.0284],
         [0.0350, 0.0269, 0.0275,  ..., 0.0337, 0.0321, 0.0284],
         [0.0350, 0.0269, 0.0275,  ..., 0.0337, 0.0321, 0.0284],
         [0.8950, 0.9192, 0.9176,  ..., 0.8989, 0.9036, 0.9147]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:39,023 [Process: 0] Synchronize training processes
2024-08-16 14:24:39,023 [Process: 0] Evaluating...
2024-08-16 14:24:39,025 [Process: 0] EPOCH 158:
2024-08-16 14:24:39,027 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0466, 0.2758, 0.2500,  ..., 0.0146, 0.0307, 0.0331],
         [0.0466, 0.2414, 0.2500,  ..., 0.0139, 0.0258, 0.0281],
         [0.0466, 0.2414, 0.2500,  ..., 0.0139, 0.0258, 0.0281],
         [0.8602, 0.2414, 0.2500,  ..., 0.9576, 0.9176, 0.9108]],
        [[0.0189, 0.0203, 0.0189,  ..., 0.0146, 0.0203, 0.0158],
         [0.0189, 0.0203, 0.0189,  ..., 0.0146, 0.0203, 0.0158],
         [0.0199, 0.0260, 0.0190,  ..., 0.0146, 0.0284, 0.0158],
         [0.9423, 0.9334, 0.9433,  ..., 0.9563, 0.9310, 0.9525]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:24:41,092 [Process: 0] Synchronize training processes
2024-08-16 14:24:41,093 [Process: 0] Evaluating...
2024-08-16 14:24:41,095 [Process: 0] EPOCH 159:
2024-08-16 14:24:41,097 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0262, 0.0330, 0.0275,  ..., 0.0243, 0.0333, 0.0348],
         [0.0262, 0.0330, 0.0275,  ..., 0.0243, 0.0333, 0.0348],
         [0.0262, 0.0330, 0.0275,  ..., 0.0243, 0.0333, 0.0348],
         [0.9214, 0.9011, 0.9176,  ..., 0.9272, 0.9002, 0.8957]],
        [[0.0262, 0.0248, 0.0278,  ..., 0.0334, 0.0282, 0.0259],
         [0.0262, 0.0248, 0.0278,  ..., 0.0334, 0.0282, 0.0259],
         [0.0262, 0.0248, 0.0278,  ..., 0.0334, 0.0282, 0.0259],
         [0.9215, 0.9255, 0.9167,  ..., 0.8998, 0.9154, 0.9224]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2586, 0.2500, 0.0036,  ..., 0.0068, 0.0224, 0.2540],
         [0.2471, 0.2500, 0.0036,  ..., 0.0068, 0.0176, 0.2487],
         [0.2471, 0.2500, 0.0036,  ..., 0.0068, 0.0176, 0.2487],
         [0.2471, 0.2500, 0.9892,  ..., 0.9795, 0.9425, 0.2487]],
        [[0.0169, 0.0198, 0.0151,  ..., 0.0117, 0.0147, 0.0173],
         [0.0169, 0.0198, 0.0151,  ..., 0.0117, 0.0147, 0.0173],
         [0.0169, 0.0231, 0.0151,  ..., 0.0117, 0.0147, 0.0186],
         [0.9494, 0.9372, 0.9547,  ..., 0.9649, 0.9558, 0.9468]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:24:43,167 [Process: 0] Synchronize training processes
2024-08-16 14:24:43,167 [Process: 0] Evaluating...
2024-08-16 14:24:43,169 [Process: 0] EPOCH 160:
2024-08-16 14:24:43,171 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0249, 0.0249, 0.0342,  ..., 0.0297, 0.0346, 0.0344],
         [0.0249, 0.0249, 0.0342,  ..., 0.0297, 0.0346, 0.0344],
         [0.0249, 0.0249, 0.0342,  ..., 0.0297, 0.0346, 0.0344],
         [0.9252, 0.9254, 0.8975,  ..., 0.9110, 0.8961, 0.8969]],
        [[0.0342, 0.0337, 0.0335,  ..., 0.0318, 0.0246, 0.0350],
         [0.0342, 0.0337, 0.0335,  ..., 0.0318, 0.0246, 0.0350],
         [0.0342, 0.0337, 0.0335,  ..., 0.0318, 0.0246, 0.0350],
         [0.8973, 0.8988, 0.8994,  ..., 0.9047, 0.9262, 0.8949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0106, 0.2896,  ..., 0.2500, 0.0257, 0.0527],
         [0.0059, 0.0106, 0.2368,  ..., 0.2500, 0.0255, 0.0454],
         [0.0059, 0.0106, 0.2368,  ..., 0.2500, 0.0255, 0.0454],
         [0.9821, 0.9681, 0.2368,  ..., 0.2500, 0.9233, 0.8566]],
        [[0.0150, 0.0177, 0.0191,  ..., 0.0172, 0.0222, 0.0232],
         [0.0150, 0.0177, 0.0191,  ..., 0.0172, 0.0222, 0.0232],
         [0.0150, 0.0206, 0.0205,  ..., 0.0175, 0.0305, 0.0371],
         [0.9549, 0.9441, 0.9413,  ..., 0.9480, 0.9251, 0.9166]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0359, 0.0336, 0.0248,  ..., 0.0231, 0.0308, 0.0241],
         [0.0359, 0.0336, 0.0248,  ..., 0.0231, 0.0308, 0.0241],
         [0.0359, 0.0336, 0.0248,  ..., 0.0231, 0.0308, 0.0241],
         [0.8923, 0.8992, 0.9257,  ..., 0.9308, 0.9075, 0.9278]],
        [[0.0246, 0.0385, 0.0356,  ..., 0.0346, 0.0330, 0.0320],
         [0.0246, 0.0385, 0.0356,  ..., 0.0346, 0.0330, 0.0320],
         [0.0246, 0.0385, 0.0356,  ..., 0.0346, 0.0330, 0.0320],
         [0.9262, 0.8846, 0.8932,  ..., 0.8962, 0.9009, 0.9041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0163, 0.0055, 0.0234,  ..., 0.0644, 0.2831, 0.2500],
         [0.0140, 0.0048, 0.0219,  ..., 0.0512, 0.2390, 0.2500],
         [0.0140, 0.0048, 0.0219,  ..., 0.0512, 0.2390, 0.2500],
         [0.9557, 0.9850, 0.9328,  ..., 0.8331, 0.2390, 0.2500]],
        [[0.0199, 0.0168, 0.0164,  ..., 0.0190, 0.0137, 0.0179],
         [0.0199, 0.0168, 0.0164,  ..., 0.0190, 0.0137, 0.0179],
         [0.0224, 0.0182, 0.0185,  ..., 0.0230, 0.0137, 0.0217],
         [0.9379, 0.9482, 0.9486,  ..., 0.9390, 0.9589, 0.9426]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:24:45,269 [Process: 0] Synchronize training processes
2024-08-16 14:24:45,270 [Process: 0] Evaluating...
2024-08-16 14:24:45,272 [Process: 0] EPOCH 161:
2024-08-16 14:24:45,273 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0263, 0.0309, 0.0246,  ..., 0.0297, 0.0260, 0.0241],
         [0.0263, 0.0309, 0.0246,  ..., 0.0297, 0.0260, 0.0241],
         [0.0263, 0.0309, 0.0246,  ..., 0.0297, 0.0260, 0.0241],
         [0.9210, 0.9074, 0.9261,  ..., 0.9110, 0.9219, 0.9276]],
        [[0.0268, 0.0340, 0.0315,  ..., 0.0263, 0.0249, 0.0248],
         [0.0268, 0.0340, 0.0315,  ..., 0.0263, 0.0249, 0.0248],
         [0.0268, 0.0340, 0.0315,  ..., 0.0263, 0.0249, 0.0248],
         [0.9195, 0.8981, 0.9054,  ..., 0.9210, 0.9252, 0.9256]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0181, 0.0157, 0.0272,  ..., 0.2500, 0.2829, 0.0055],
         [0.0165, 0.0129, 0.0213,  ..., 0.2500, 0.2390, 0.0052],
         [0.0165, 0.0129, 0.0213,  ..., 0.2500, 0.2390, 0.0052],
         [0.9490, 0.9585, 0.9302,  ..., 0.2500, 0.2390, 0.9842]],
        [[0.0171, 0.0154, 0.0188,  ..., 0.0198, 0.0149, 0.0192],
         [0.0171, 0.0154, 0.0188,  ..., 0.0198, 0.0149, 0.0192],
         [0.0171, 0.0154, 0.0220,  ..., 0.0222, 0.0149, 0.0240],
         [0.9486, 0.9538, 0.9403,  ..., 0.9383, 0.9554, 0.9377]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:24:47,368 [Process: 0] Synchronize training processes
2024-08-16 14:24:47,369 [Process: 0] Evaluating...
2024-08-16 14:24:47,377 [Process: 0] EPOCH 162:
2024-08-16 14:24:47,379 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0241, 0.0355, 0.0296,  ..., 0.0347, 0.0243, 0.0217],
         [0.0241, 0.0355, 0.0296,  ..., 0.0347, 0.0243, 0.0217],
         [0.0241, 0.0355, 0.0296,  ..., 0.0347, 0.0243, 0.0217],
         [0.9277, 0.8935, 0.9111,  ..., 0.8959, 0.9271, 0.9350]],
        [[0.0239, 0.0315, 0.0248,  ..., 0.0256, 0.0301, 0.0319],
         [0.0239, 0.0315, 0.0248,  ..., 0.0256, 0.0301, 0.0319],
         [0.0239, 0.0315, 0.0248,  ..., 0.0256, 0.0301, 0.0319],
         [0.9283, 0.9055, 0.9257,  ..., 0.9231, 0.9096, 0.9043]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0136, 0.2500,  ..., 0.2500, 0.0337, 0.2500],
         [0.2500, 0.0117, 0.2500,  ..., 0.2500, 0.0265, 0.2500],
         [0.2500, 0.0117, 0.2500,  ..., 0.2500, 0.0265, 0.2500],
         [0.2500, 0.9630, 0.2500,  ..., 0.2500, 0.9133, 0.2500]],
        [[0.0160, 0.0126, 0.0243,  ..., 0.0131, 0.0176, 0.0177],
         [0.0160, 0.0126, 0.0243,  ..., 0.0131, 0.0176, 0.0177],
         [0.0170, 0.0126, 0.0295,  ..., 0.0131, 0.0215, 0.0182],
         [0.9510, 0.9621, 0.9220,  ..., 0.9606, 0.9433, 0.9464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:24:49,471 [Process: 0] Synchronize training processes
2024-08-16 14:24:49,471 [Process: 0] Evaluating...
2024-08-16 14:24:49,473 [Process: 0] EPOCH 163:
2024-08-16 14:24:49,475 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0304, 0.0268, 0.0319,  ..., 0.0240, 0.0337, 0.0329],
         [0.0304, 0.0268, 0.0319,  ..., 0.0240, 0.0337, 0.0329],
         [0.0304, 0.0268, 0.0319,  ..., 0.0240, 0.0337, 0.0329],
         [0.9088, 0.9197, 0.9043,  ..., 0.9280, 0.8988, 0.9014]],
        [[0.0256, 0.0247, 0.0346,  ..., 0.0245, 0.0282, 0.0319],
         [0.0256, 0.0247, 0.0346,  ..., 0.0245, 0.0282, 0.0319],
         [0.0256, 0.0247, 0.0346,  ..., 0.0245, 0.0282, 0.0319],
         [0.9231, 0.9260, 0.8963,  ..., 0.9266, 0.9153, 0.9042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0143, 0.2500, 0.2500,  ..., 0.0334, 0.0183, 0.0117],
         [0.0132, 0.2500, 0.2500,  ..., 0.0317, 0.0175, 0.0098],
         [0.0132, 0.2500, 0.2500,  ..., 0.0317, 0.0175, 0.0098],
         [0.9592, 0.2500, 0.2500,  ..., 0.9032, 0.9466, 0.9687]],
        [[0.0155, 0.0176, 0.0134,  ..., 0.0168, 0.0221, 0.0213],
         [0.0155, 0.0176, 0.0134,  ..., 0.0168, 0.0221, 0.0213],
         [0.0155, 0.0197, 0.0134,  ..., 0.0168, 0.0365, 0.0252],
         [0.9536, 0.9451, 0.9597,  ..., 0.9495, 0.9194, 0.9322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:24:51,565 [Process: 0] Synchronize training processes
2024-08-16 14:24:51,565 [Process: 0] Evaluating...
2024-08-16 14:24:51,567 [Process: 0] EPOCH 164:
2024-08-16 14:24:51,569 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0216, 0.0321, 0.0341,  ..., 0.0231, 0.0315, 0.0342],
         [0.0216, 0.0321, 0.0341,  ..., 0.0231, 0.0315, 0.0342],
         [0.0216, 0.0321, 0.0341,  ..., 0.0231, 0.0315, 0.0342],
         [0.9352, 0.9036, 0.8977,  ..., 0.9306, 0.9054, 0.8975]],
        [[0.0263, 0.0318, 0.0334,  ..., 0.0353, 0.0260, 0.0225],
         [0.0263, 0.0318, 0.0334,  ..., 0.0353, 0.0260, 0.0225],
         [0.0263, 0.0318, 0.0334,  ..., 0.0353, 0.0260, 0.0225],
         [0.9212, 0.9047, 0.8998,  ..., 0.8941, 0.9219, 0.9325]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0104, 0.2500, 0.0124,  ..., 0.0097, 0.0343, 0.0119],
         [0.0104, 0.2500, 0.0110,  ..., 0.0091, 0.0326, 0.0116],
         [0.0104, 0.2500, 0.0110,  ..., 0.0091, 0.0326, 0.0116],
         [0.9688, 0.2500, 0.9656,  ..., 0.9722, 0.9004, 0.9650]],
        [[0.0185, 0.0149, 0.0157,  ..., 0.0229, 0.0149, 0.0168],
         [0.0185, 0.0149, 0.0157,  ..., 0.0229, 0.0149, 0.0168],
         [0.0201, 0.0149, 0.0157,  ..., 0.0303, 0.0149, 0.0184],
         [0.9428, 0.9554, 0.9528,  ..., 0.9239, 0.9554, 0.9481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:24:53,655 [Process: 0] Synchronize training processes
2024-08-16 14:24:53,655 [Process: 0] Evaluating...
2024-08-16 14:24:53,657 [Process: 0] EPOCH 165:
2024-08-16 14:24:53,659 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0285, 0.0319, 0.0287,  ..., 0.0234, 0.0320, 0.0236],
         [0.0285, 0.0319, 0.0287,  ..., 0.0234, 0.0320, 0.0236],
         [0.0285, 0.0319, 0.0287,  ..., 0.0234, 0.0320, 0.0236],
         [0.9144, 0.9043, 0.9139,  ..., 0.9298, 0.9039, 0.9293]],
        [[0.0262, 0.0297, 0.0239,  ..., 0.0242, 0.0248, 0.0263],
         [0.0262, 0.0297, 0.0239,  ..., 0.0242, 0.0248, 0.0263],
         [0.0262, 0.0297, 0.0239,  ..., 0.0242, 0.0248, 0.0263],
         [0.9215, 0.9109, 0.9283,  ..., 0.9273, 0.9256, 0.9212]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0332, 0.0114,  ..., 0.0200, 0.2500, 0.2769],
         [0.0048, 0.0314, 0.0104,  ..., 0.0192, 0.2500, 0.2410],
         [0.0048, 0.0314, 0.0104,  ..., 0.0192, 0.2500, 0.2410],
         [0.9856, 0.9040, 0.9679,  ..., 0.9415, 0.2500, 0.2410]],
        [[0.0137, 0.0148, 0.0154,  ..., 0.0268, 0.0160, 0.0169],
         [0.0137, 0.0148, 0.0154,  ..., 0.0268, 0.0160, 0.0169],
         [0.0137, 0.0161, 0.0180,  ..., 0.0516, 0.0172, 0.0184],
         [0.9588, 0.9543, 0.9513,  ..., 0.8948, 0.9509, 0.9479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:24:55,723 [Process: 0] Synchronize training processes
2024-08-16 14:24:55,723 [Process: 0] Evaluating...
2024-08-16 14:24:55,725 [Process: 0] EPOCH 166:
2024-08-16 14:24:55,727 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0252, 0.0240, 0.0261,  ..., 0.0328, 0.0233, 0.0291],
         [0.0252, 0.0240, 0.0261,  ..., 0.0328, 0.0233, 0.0291],
         [0.0252, 0.0240, 0.0261,  ..., 0.0328, 0.0233, 0.0291],
         [0.9244, 0.9279, 0.9218,  ..., 0.9015, 0.9302, 0.9127]],
        [[0.0293, 0.0304, 0.0324,  ..., 0.0238, 0.0237, 0.0233],
         [0.0293, 0.0304, 0.0324,  ..., 0.0238, 0.0237, 0.0233],
         [0.0293, 0.0304, 0.0324,  ..., 0.0238, 0.0237, 0.0233],
         [0.9121, 0.9087, 0.9029,  ..., 0.9287, 0.9290, 0.9301]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0072, 0.0301,  ..., 0.0342, 0.2500, 0.0061],
         [0.2500, 0.0064, 0.0267,  ..., 0.0291, 0.2500, 0.0055],
         [0.2500, 0.0064, 0.0267,  ..., 0.0291, 0.2500, 0.0055],
         [0.2500, 0.9800, 0.9164,  ..., 0.9076, 0.2500, 0.9828]],
        [[0.0125, 0.0176, 0.0184,  ..., 0.0191, 0.0198, 0.0131],
         [0.0125, 0.0176, 0.0184,  ..., 0.0191, 0.0198, 0.0131],
         [0.0125, 0.0244, 0.0188,  ..., 0.0215, 0.0253, 0.0131],
         [0.9626, 0.9404, 0.9445,  ..., 0.9404, 0.9351, 0.9607]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:24:57,836 [Process: 0] Synchronize training processes
2024-08-16 14:24:57,836 [Process: 0] Evaluating...
2024-08-16 14:24:57,838 [Process: 0] EPOCH 167:
2024-08-16 14:24:57,840 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0325, 0.0214, 0.0223,  ..., 0.0243, 0.0320, 0.0227],
         [0.0325, 0.0214, 0.0223,  ..., 0.0243, 0.0320, 0.0227],
         [0.0325, 0.0214, 0.0223,  ..., 0.0243, 0.0320, 0.0227],
         [0.9025, 0.9358, 0.9330,  ..., 0.9270, 0.9041, 0.9319]],
        [[0.0234, 0.0236, 0.0233,  ..., 0.0240, 0.0251, 0.0321],
         [0.0234, 0.0236, 0.0233,  ..., 0.0240, 0.0251, 0.0321],
         [0.0234, 0.0236, 0.0233,  ..., 0.0240, 0.0251, 0.0321],
         [0.9299, 0.9292, 0.9301,  ..., 0.9279, 0.9248, 0.9036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0235, 0.2500, 0.0152,  ..., 0.0425, 0.0318, 0.0469],
         [0.0192, 0.2500, 0.0117,  ..., 0.0415, 0.0268, 0.0378],
         [0.0192, 0.2500, 0.0117,  ..., 0.0415, 0.0268, 0.0378],
         [0.9382, 0.2500, 0.9615,  ..., 0.8745, 0.9146, 0.8775]],
        [[0.0135, 0.0164, 0.0117,  ..., 0.0168, 0.0117, 0.0129],
         [0.0135, 0.0164, 0.0117,  ..., 0.0168, 0.0117, 0.0129],
         [0.0135, 0.0164, 0.0117,  ..., 0.0199, 0.0117, 0.0129],
         [0.9594, 0.9507, 0.9650,  ..., 0.9465, 0.9649, 0.9612]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:24:59,931 [Process: 0] Synchronize training processes
2024-08-16 14:24:59,931 [Process: 0] Evaluating...
2024-08-16 14:24:59,933 [Process: 0] EPOCH 168:
2024-08-16 14:24:59,935 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0233, 0.0278, 0.0291,  ..., 0.0245, 0.0309, 0.0237],
         [0.0233, 0.0278, 0.0291,  ..., 0.0245, 0.0309, 0.0237],
         [0.0233, 0.0278, 0.0291,  ..., 0.0245, 0.0309, 0.0237],
         [0.9301, 0.9167, 0.9127,  ..., 0.9266, 0.9074, 0.9289]],
        [[0.0308, 0.0257, 0.0315,  ..., 0.0311, 0.0304, 0.0238],
         [0.0308, 0.0257, 0.0315,  ..., 0.0311, 0.0304, 0.0238],
         [0.0308, 0.0257, 0.0315,  ..., 0.0311, 0.0304, 0.0238],
         [0.9075, 0.9228, 0.9055,  ..., 0.9067, 0.9087, 0.9285]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2584, 0.0197,  ..., 0.0231, 0.2548, 0.2500],
         [0.2500, 0.2472, 0.0150,  ..., 0.0190, 0.2484, 0.2500],
         [0.2500, 0.2472, 0.0150,  ..., 0.0190, 0.2484, 0.2500],
         [0.2500, 0.2472, 0.9504,  ..., 0.9389, 0.2484, 0.2500]],
        [[0.0106, 0.0142, 0.0190,  ..., 0.0221, 0.0114, 0.0170],
         [0.0106, 0.0142, 0.0190,  ..., 0.0221, 0.0114, 0.0170],
         [0.0106, 0.0142, 0.0224,  ..., 0.0357, 0.0114, 0.0170],
         [0.9682, 0.9573, 0.9395,  ..., 0.9201, 0.9657, 0.9490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:02,009 [Process: 0] Synchronize training processes
2024-08-16 14:25:02,010 [Process: 0] Evaluating...
2024-08-16 14:25:02,012 [Process: 0] EPOCH 169:
2024-08-16 14:25:02,014 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0213, 0.0215, 0.0224,  ..., 0.0287, 0.0228, 0.0325],
         [0.0213, 0.0215, 0.0224,  ..., 0.0287, 0.0228, 0.0325],
         [0.0213, 0.0215, 0.0224,  ..., 0.0287, 0.0228, 0.0325],
         [0.9362, 0.9356, 0.9328,  ..., 0.9138, 0.9316, 0.9026]],
        [[0.0318, 0.0220, 0.0243,  ..., 0.0249, 0.0243, 0.0291],
         [0.0318, 0.0220, 0.0243,  ..., 0.0249, 0.0243, 0.0291],
         [0.0318, 0.0220, 0.0243,  ..., 0.0249, 0.0243, 0.0291],
         [0.9045, 0.9340, 0.9271,  ..., 0.9252, 0.9272, 0.9127]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:25:04,089 [Process: 0] Synchronize training processes
2024-08-16 14:25:04,089 [Process: 0] Evaluating...
2024-08-16 14:25:04,091 [Process: 0] EPOCH 170:
2024-08-16 14:25:04,093 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0184, 0.0229, 0.0159,  ..., 0.0369, 0.0128, 0.2719],
         [0.0148, 0.0201, 0.0118,  ..., 0.0355, 0.0107, 0.2427],
         [0.0148, 0.0201, 0.0118,  ..., 0.0355, 0.0107, 0.2427],
         [0.9520, 0.9369, 0.9605,  ..., 0.8922, 0.9658, 0.2427]],
        [[0.0213, 0.0174, 0.0170,  ..., 0.0137, 0.0249, 0.0144],
         [0.0213, 0.0174, 0.0170,  ..., 0.0137, 0.0249, 0.0144],
         [0.0293, 0.0219, 0.0231,  ..., 0.0137, 0.0409, 0.0152],
         [0.9282, 0.9432, 0.9428,  ..., 0.9588, 0.9092, 0.9561]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0219, 0.0276, 0.0243,  ..., 0.0281, 0.0243, 0.0274],
         [0.0219, 0.0276, 0.0243,  ..., 0.0281, 0.0243, 0.0274],
         [0.0219, 0.0276, 0.0243,  ..., 0.0281, 0.0243, 0.0274],
         [0.9342, 0.9172, 0.9270,  ..., 0.9158, 0.9272, 0.9178]],
        [[0.0229, 0.0227, 0.0330,  ..., 0.0313, 0.0311, 0.0302],
         [0.0229, 0.0227, 0.0330,  ..., 0.0313, 0.0311, 0.0302],
         [0.0229, 0.0227, 0.0330,  ..., 0.0313, 0.0311, 0.0302],
         [0.9312, 0.9319, 0.9010,  ..., 0.9060, 0.9066, 0.9094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:06,172 [Process: 0] Synchronize training processes
2024-08-16 14:25:06,172 [Process: 0] Evaluating...
2024-08-16 14:25:06,174 [Process: 0] EPOCH 171:
2024-08-16 14:25:06,176 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0614, 0.0132, 0.0304,  ..., 0.2618, 0.0374, 0.2553],
         [0.0492, 0.0112, 0.0257,  ..., 0.2461, 0.0307, 0.2482],
         [0.0492, 0.0112, 0.0257,  ..., 0.2461, 0.0307, 0.2482],
         [0.8403, 0.9644, 0.9182,  ..., 0.2461, 0.9011, 0.2482]],
        [[0.0133, 0.0148, 0.0132,  ..., 0.0134, 0.0164, 0.0214],
         [0.0133, 0.0148, 0.0132,  ..., 0.0134, 0.0164, 0.0214],
         [0.0133, 0.0163, 0.0132,  ..., 0.0135, 0.0201, 0.0282],
         [0.9601, 0.9542, 0.9605,  ..., 0.9596, 0.9471, 0.9289]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0219, 0.0218, 0.0297,  ..., 0.0241, 0.0237, 0.0302],
         [0.0219, 0.0218, 0.0297,  ..., 0.0241, 0.0237, 0.0302],
         [0.0219, 0.0218, 0.0297,  ..., 0.0241, 0.0237, 0.0302],
         [0.9342, 0.9347, 0.9109,  ..., 0.9276, 0.9288, 0.9093]],
        [[0.0220, 0.0292, 0.0222,  ..., 0.0245, 0.0211, 0.0224],
         [0.0220, 0.0292, 0.0222,  ..., 0.0245, 0.0211, 0.0224],
         [0.0220, 0.0292, 0.0222,  ..., 0.0245, 0.0211, 0.0224],
         [0.9340, 0.9124, 0.9334,  ..., 0.9265, 0.9367, 0.9329]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:08,265 [Process: 0] Synchronize training processes
2024-08-16 14:25:08,266 [Process: 0] Evaluating...
2024-08-16 14:25:08,274 [Process: 0] EPOCH 172:
2024-08-16 14:25:08,276 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0175, 0.2500, 0.0462,  ..., 0.0118, 0.2500, 0.2500],
         [0.0155, 0.2500, 0.0399,  ..., 0.0115, 0.2500, 0.2500],
         [0.0155, 0.2500, 0.0399,  ..., 0.0115, 0.2500, 0.2500],
         [0.9514, 0.2500, 0.8740,  ..., 0.9652, 0.2500, 0.2500]],
        [[0.0162, 0.0131, 0.0144,  ..., 0.0182, 0.0177, 0.0121],
         [0.0162, 0.0131, 0.0144,  ..., 0.0182, 0.0177, 0.0121],
         [0.0207, 0.0149, 0.0146,  ..., 0.0227, 0.0228, 0.0121],
         [0.9470, 0.9589, 0.9565,  ..., 0.9410, 0.9419, 0.9637]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0232, 0.0300, 0.0229,  ..., 0.0235, 0.0211, 0.0228],
         [0.0232, 0.0300, 0.0229,  ..., 0.0235, 0.0211, 0.0228],
         [0.0232, 0.0300, 0.0229,  ..., 0.0235, 0.0211, 0.0228],
         [0.9303, 0.9100, 0.9312,  ..., 0.9296, 0.9368, 0.9316]],
        [[0.0215, 0.0222, 0.0204,  ..., 0.0215, 0.0204, 0.0290],
         [0.0215, 0.0222, 0.0204,  ..., 0.0215, 0.0204, 0.0290],
         [0.0215, 0.0222, 0.0204,  ..., 0.0215, 0.0204, 0.0290],
         [0.9356, 0.9335, 0.9387,  ..., 0.9354, 0.9387, 0.9131]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:10,371 [Process: 0] Synchronize training processes
2024-08-16 14:25:10,372 [Process: 0] Evaluating...
2024-08-16 14:25:10,373 [Process: 0] EPOCH 173:
2024-08-16 14:25:10,375 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0225, 0.1832, 0.0804,  ..., 0.0122, 0.0198, 0.2500],
         [0.0225, 0.1832, 0.0681,  ..., 0.0100, 0.0161, 0.2500],
         [0.0225, 0.4504, 0.0681,  ..., 0.0100, 0.0161, 0.2500],
         [0.9324, 0.1832, 0.7834,  ..., 0.9678, 0.9480, 0.2500]],
        [[0.0111, 0.0102, 0.0137,  ..., 0.0161, 0.0159, 0.0143],
         [0.0111, 0.0102, 0.0137,  ..., 0.0161, 0.0159, 0.0143],
         [0.0111, 0.0102, 0.0137,  ..., 0.0195, 0.0161, 0.0172],
         [0.9667, 0.9693, 0.9590,  ..., 0.9483, 0.9521, 0.9541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0247, 0.0266, 0.0272,  ..., 0.0249, 0.0273, 0.0260],
         [0.0247, 0.0266, 0.0272,  ..., 0.0249, 0.0273, 0.0260],
         [0.0247, 0.0266, 0.0272,  ..., 0.0249, 0.0273, 0.0260],
         [0.9258, 0.9201, 0.9183,  ..., 0.9254, 0.9182, 0.9220]],
        [[0.0269, 0.0248, 0.0287,  ..., 0.0269, 0.0272, 0.0248],
         [0.0269, 0.0248, 0.0287,  ..., 0.0269, 0.0272, 0.0248],
         [0.0269, 0.0248, 0.0287,  ..., 0.0269, 0.0272, 0.0248],
         [0.9194, 0.9255, 0.9139,  ..., 0.9193, 0.9183, 0.9257]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:12,453 [Process: 0] Synchronize training processes
2024-08-16 14:25:12,453 [Process: 0] Evaluating...
2024-08-16 14:25:12,455 [Process: 0] EPOCH 174:
2024-08-16 14:25:12,457 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0204, 0.0216, 0.0214,  ..., 0.0296, 0.2600, 0.0267],
         [0.0178, 0.0175, 0.0181,  ..., 0.0248, 0.2467, 0.0213],
         [0.0178, 0.0175, 0.0181,  ..., 0.0248, 0.2467, 0.0213],
         [0.9439, 0.9434, 0.9423,  ..., 0.9209, 0.2467, 0.9307]],
        [[0.0143, 0.0139, 0.0123,  ..., 0.0093, 0.0116, 0.0165],
         [0.0143, 0.0139, 0.0123,  ..., 0.0093, 0.0116, 0.0165],
         [0.0143, 0.0150, 0.0123,  ..., 0.0093, 0.0116, 0.0197],
         [0.9572, 0.9572, 0.9631,  ..., 0.9721, 0.9652, 0.9474]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0254, 0.0226, 0.0268,  ..., 0.0210, 0.0256, 0.0263],
         [0.0254, 0.0226, 0.0268,  ..., 0.0210, 0.0256, 0.0263],
         [0.0254, 0.0226, 0.0268,  ..., 0.0210, 0.0256, 0.0263],
         [0.9239, 0.9321, 0.9196,  ..., 0.9369, 0.9232, 0.9211]],
        [[0.0303, 0.0277, 0.0223,  ..., 0.0206, 0.0234, 0.0224],
         [0.0303, 0.0277, 0.0223,  ..., 0.0206, 0.0234, 0.0224],
         [0.0303, 0.0277, 0.0223,  ..., 0.0206, 0.0234, 0.0224],
         [0.9092, 0.9169, 0.9332,  ..., 0.9381, 0.9299, 0.9329]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:14,531 [Process: 0] Synchronize training processes
2024-08-16 14:25:14,531 [Process: 0] Evaluating...
2024-08-16 14:25:14,533 [Process: 0] EPOCH 175:
2024-08-16 14:25:14,535 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0217, 0.0264,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.0163, 0.0204,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.0163, 0.0204,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.9456, 0.9327,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0143, 0.0146, 0.0167,  ..., 0.0128, 0.0103, 0.0157],
         [0.0143, 0.0146, 0.0167,  ..., 0.0128, 0.0103, 0.0157],
         [0.0167, 0.0196, 0.0178,  ..., 0.0128, 0.0103, 0.0185],
         [0.9547, 0.9511, 0.9487,  ..., 0.9617, 0.9691, 0.9501]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0224, 0.0227, 0.0226,  ..., 0.0206, 0.0260, 0.0258],
         [0.0224, 0.0227, 0.0226,  ..., 0.0206, 0.0260, 0.0258],
         [0.0224, 0.0227, 0.0226,  ..., 0.0206, 0.0260, 0.0258],
         [0.9329, 0.9320, 0.9321,  ..., 0.9382, 0.9221, 0.9225]],
        [[0.0229, 0.0222, 0.0265,  ..., 0.0239, 0.0296, 0.0221],
         [0.0229, 0.0222, 0.0265,  ..., 0.0239, 0.0296, 0.0221],
         [0.0229, 0.0222, 0.0265,  ..., 0.0239, 0.0296, 0.0221],
         [0.9314, 0.9334, 0.9205,  ..., 0.9282, 0.9112, 0.9337]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:16,608 [Process: 0] Synchronize training processes
2024-08-16 14:25:16,608 [Process: 0] Evaluating...
2024-08-16 14:25:16,610 [Process: 0] EPOCH 176:
2024-08-16 14:25:16,612 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0359, 0.2500,  ..., 0.0469, 0.0276, 0.2500],
         [0.2500, 0.0306, 0.2500,  ..., 0.0410, 0.0198, 0.2500],
         [0.2500, 0.0306, 0.2500,  ..., 0.0410, 0.0198, 0.2500],
         [0.2500, 0.9030, 0.2500,  ..., 0.8711, 0.9327, 0.2500]],
        [[0.0131, 0.0133, 0.0141,  ..., 0.0141, 0.0159, 0.0133],
         [0.0131, 0.0133, 0.0141,  ..., 0.0141, 0.0159, 0.0133],
         [0.0131, 0.0139, 0.0141,  ..., 0.0141, 0.0177, 0.0133],
         [0.9606, 0.9596, 0.9576,  ..., 0.9578, 0.9505, 0.9602]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0269, 0.0228, 0.0221,  ..., 0.0234, 0.0297, 0.0231],
         [0.0269, 0.0228, 0.0221,  ..., 0.0234, 0.0297, 0.0231],
         [0.0269, 0.0228, 0.0221,  ..., 0.0234, 0.0297, 0.0231],
         [0.9192, 0.9316, 0.9338,  ..., 0.9297, 0.9108, 0.9308]],
        [[0.0234, 0.0264, 0.0251,  ..., 0.0216, 0.0260, 0.0230],
         [0.0234, 0.0264, 0.0251,  ..., 0.0216, 0.0260, 0.0230],
         [0.0234, 0.0264, 0.0251,  ..., 0.0216, 0.0260, 0.0230],
         [0.9297, 0.9207, 0.9246,  ..., 0.9353, 0.9221, 0.9311]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:18,689 [Process: 0] Synchronize training processes
2024-08-16 14:25:18,689 [Process: 0] Evaluating...
2024-08-16 14:25:18,691 [Process: 0] EPOCH 177:
2024-08-16 14:25:18,693 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.2500, 0.0212,  ..., 0.2500, 0.0242, 0.2500],
         [0.0071, 0.2500, 0.0192,  ..., 0.2500, 0.0175, 0.2500],
         [0.0071, 0.2500, 0.0192,  ..., 0.2500, 0.0175, 0.2500],
         [0.9769, 0.2500, 0.9403,  ..., 0.2500, 0.9407, 0.2500]],
        [[0.0205, 0.0186, 0.0178,  ..., 0.0169, 0.0109, 0.0153],
         [0.0205, 0.0186, 0.0178,  ..., 0.0169, 0.0109, 0.0153],
         [0.0256, 0.0214, 0.0224,  ..., 0.0194, 0.0109, 0.0153],
         [0.9333, 0.9415, 0.9419,  ..., 0.9469, 0.9672, 0.9540]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0190, 0.0307, 0.0349,  ..., 0.0198, 0.0195, 0.0200],
         [0.0190, 0.0307, 0.0349,  ..., 0.0198, 0.0195, 0.0200],
         [0.0190, 0.0307, 0.0349,  ..., 0.0198, 0.0195, 0.0200],
         [0.9429, 0.9080, 0.8953,  ..., 0.9407, 0.9415, 0.9399]],
        [[0.0198, 0.0277, 0.0276,  ..., 0.0273, 0.0212, 0.0201],
         [0.0198, 0.0277, 0.0276,  ..., 0.0273, 0.0212, 0.0201],
         [0.0198, 0.0277, 0.0276,  ..., 0.0273, 0.0212, 0.0201],
         [0.9406, 0.9168, 0.9172,  ..., 0.9182, 0.9365, 0.9397]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:20,782 [Process: 0] Synchronize training processes
2024-08-16 14:25:20,783 [Process: 0] Evaluating...
2024-08-16 14:25:20,785 [Process: 0] EPOCH 178:
2024-08-16 14:25:20,787 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0222, 0.2500, 0.0233,  ..., 0.2500, 0.2549, 0.2614],
         [0.0182, 0.2500, 0.0177,  ..., 0.2500, 0.2484, 0.2462],
         [0.0182, 0.2500, 0.0177,  ..., 0.2500, 0.2484, 0.2462],
         [0.9414, 0.2500, 0.9412,  ..., 0.2500, 0.2484, 0.2462]],
        [[0.0141, 0.0147, 0.0178,  ..., 0.0115, 0.0132, 0.0126],
         [0.0141, 0.0147, 0.0178,  ..., 0.0115, 0.0132, 0.0126],
         [0.0148, 0.0168, 0.0228,  ..., 0.0115, 0.0132, 0.0126],
         [0.9570, 0.9539, 0.9416,  ..., 0.9654, 0.9603, 0.9623]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0257, 0.0250, 0.0255,  ..., 0.0258, 0.0262, 0.0239],
         [0.0257, 0.0250, 0.0255,  ..., 0.0258, 0.0262, 0.0239],
         [0.0257, 0.0250, 0.0255,  ..., 0.0258, 0.0262, 0.0239],
         [0.9229, 0.9251, 0.9236,  ..., 0.9225, 0.9213, 0.9282]],
        [[0.0257, 0.0253, 0.0241,  ..., 0.0245, 0.0255, 0.0243],
         [0.0257, 0.0253, 0.0241,  ..., 0.0245, 0.0255, 0.0243],
         [0.0257, 0.0253, 0.0241,  ..., 0.0245, 0.0255, 0.0243],
         [0.9230, 0.9242, 0.9276,  ..., 0.9266, 0.9236, 0.9272]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:22,862 [Process: 0] Synchronize training processes
2024-08-16 14:25:22,862 [Process: 0] Evaluating...
2024-08-16 14:25:22,864 [Process: 0] EPOCH 179:
2024-08-16 14:25:22,866 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0426, 0.2542, 0.0282,  ..., 0.0082, 0.0131, 0.2500],
         [0.0353, 0.2486, 0.0211,  ..., 0.0074, 0.0114, 0.2500],
         [0.0353, 0.2486, 0.0211,  ..., 0.0074, 0.0114, 0.2500],
         [0.8868, 0.2486, 0.9296,  ..., 0.9769, 0.9641, 0.2500]],
        [[0.0176, 0.0164, 0.0134,  ..., 0.0133, 0.0137, 0.0184],
         [0.0176, 0.0164, 0.0134,  ..., 0.0133, 0.0137, 0.0184],
         [0.0217, 0.0187, 0.0134,  ..., 0.0133, 0.0141, 0.0228],
         [0.9430, 0.9485, 0.9597,  ..., 0.9602, 0.9585, 0.9405]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0246, 0.0240, 0.0244,  ..., 0.0252, 0.0249, 0.0242],
         [0.0246, 0.0240, 0.0244,  ..., 0.0252, 0.0249, 0.0242],
         [0.0246, 0.0240, 0.0244,  ..., 0.0252, 0.0249, 0.0242],
         [0.9262, 0.9281, 0.9268,  ..., 0.9244, 0.9254, 0.9274]],
        [[0.0280, 0.0247, 0.0237,  ..., 0.0235, 0.0235, 0.0218],
         [0.0280, 0.0247, 0.0237,  ..., 0.0235, 0.0235, 0.0218],
         [0.0280, 0.0247, 0.0237,  ..., 0.0235, 0.0235, 0.0218],
         [0.9161, 0.9260, 0.9290,  ..., 0.9294, 0.9295, 0.9345]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:24,947 [Process: 0] Synchronize training processes
2024-08-16 14:25:24,948 [Process: 0] Evaluating...
2024-08-16 14:25:24,950 [Process: 0] EPOCH 180:
2024-08-16 14:25:24,952 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2659, 0.0214, 0.2883,  ..., 0.0057, 0.2500, 0.0210],
         [0.2447, 0.0167, 0.2372,  ..., 0.0053, 0.2500, 0.0178],
         [0.2447, 0.0167, 0.2372,  ..., 0.0053, 0.2500, 0.0178],
         [0.2447, 0.9453, 0.2372,  ..., 0.9838, 0.2500, 0.9434]],
        [[0.0177, 0.0178, 0.0162,  ..., 0.0141, 0.0187, 0.0116],
         [0.0177, 0.0178, 0.0162,  ..., 0.0141, 0.0187, 0.0116],
         [0.0206, 0.0221, 0.0181,  ..., 0.0146, 0.0264, 0.0116],
         [0.9439, 0.9422, 0.9494,  ..., 0.9572, 0.9362, 0.9651]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-16 14:25:26,953 [Process: 0] Synchronize training processes
2024-08-16 14:25:26,953 [Process: 0] Evaluating...
2024-08-16 14:25:26,955 [Process: 0] EPOCH 181:
2024-08-16 14:25:26,957 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0183, 0.0177, 0.0295,  ..., 0.0315, 0.0301, 0.0307],
         [0.0183, 0.0177, 0.0295,  ..., 0.0315, 0.0301, 0.0307],
         [0.0183, 0.0177, 0.0295,  ..., 0.0315, 0.0301, 0.0307],
         [0.9452, 0.9468, 0.9114,  ..., 0.9054, 0.9097, 0.9079]],
        [[0.0291, 0.0294, 0.0287,  ..., 0.0198, 0.0204, 0.0315],
         [0.0291, 0.0294, 0.0287,  ..., 0.0198, 0.0204, 0.0315],
         [0.0291, 0.0294, 0.0287,  ..., 0.0198, 0.0204, 0.0315],
         [0.9128, 0.9118, 0.9138,  ..., 0.9406, 0.9389, 0.9056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0165, 0.0240, 0.2734,  ..., 0.0161, 0.0028, 0.2723],
         [0.0163, 0.0231, 0.2392,  ..., 0.0140, 0.0028, 0.2426],
         [0.0163, 0.0231, 0.2482,  ..., 0.0140, 0.0028, 0.2426],
         [0.9510, 0.9297, 0.2392,  ..., 0.9560, 0.9916, 0.2426]],
        [[0.0100, 0.0183, 0.0112,  ..., 0.0144, 0.0156, 0.0136],
         [0.0100, 0.0183, 0.0112,  ..., 0.0144, 0.0156, 0.0136],
         [0.0100, 0.0268, 0.0112,  ..., 0.0149, 0.0189, 0.0154],
         [0.9701, 0.9366, 0.9663,  ..., 0.9563, 0.9499, 0.9575]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0205, 0.0223, 0.0291,  ..., 0.0315, 0.0201, 0.0281],
         [0.0205, 0.0223, 0.0291,  ..., 0.0315, 0.0201, 0.0281],
         [0.0205, 0.0223, 0.0291,  ..., 0.0315, 0.0201, 0.0281],
         [0.9385, 0.9330, 0.9128,  ..., 0.9055, 0.9398, 0.9156]],
        [[0.0256, 0.0206, 0.0256,  ..., 0.0272, 0.0206, 0.0256],
         [0.0256, 0.0206, 0.0256,  ..., 0.0272, 0.0206, 0.0256],
         [0.0256, 0.0206, 0.0256,  ..., 0.0272, 0.0206, 0.0256],
         [0.9232, 0.9381, 0.9231,  ..., 0.9183, 0.9381, 0.9233]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:28,858 [Process: 0] Synchronize training processes
2024-08-16 14:25:28,859 [Process: 0] Evaluating...
2024-08-16 14:25:28,867 [Process: 0] EPOCH 182:
2024-08-16 14:25:28,869 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0339, 0.2661,  ..., 0.0147, 0.0139, 0.2604],
         [0.2500, 0.0274, 0.2446,  ..., 0.0115, 0.0110, 0.2465],
         [0.2500, 0.0274, 0.2446,  ..., 0.0115, 0.0110, 0.2465],
         [0.2500, 0.9112, 0.2446,  ..., 0.9622, 0.9641, 0.2465]],
        [[0.0137, 0.0129, 0.0103,  ..., 0.0087, 0.0121, 0.0197],
         [0.0137, 0.0129, 0.0103,  ..., 0.0087, 0.0121, 0.0197],
         [0.0145, 0.0148, 0.0103,  ..., 0.0087, 0.0121, 0.0299],
         [0.9580, 0.9594, 0.9691,  ..., 0.9738, 0.9637, 0.9306]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0213, 0.0202, 0.0216,  ..., 0.0204, 0.0211, 0.0205],
         [0.0213, 0.0202, 0.0216,  ..., 0.0204, 0.0211, 0.0205],
         [0.0213, 0.0202, 0.0216,  ..., 0.0204, 0.0211, 0.0205],
         [0.9362, 0.9393, 0.9351,  ..., 0.9389, 0.9366, 0.9384]],
        [[0.0201, 0.0379, 0.0390,  ..., 0.0391, 0.0190, 0.0211],
         [0.0201, 0.0379, 0.0390,  ..., 0.0391, 0.0190, 0.0211],
         [0.0201, 0.0379, 0.0390,  ..., 0.0391, 0.0190, 0.0211],
         [0.9398, 0.8864, 0.8830,  ..., 0.8828, 0.9430, 0.9366]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:30,786 [Process: 0] Synchronize training processes
2024-08-16 14:25:30,787 [Process: 0] Evaluating...
2024-08-16 14:25:30,789 [Process: 0] EPOCH 183:
2024-08-16 14:25:30,791 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0368, 0.0092, 0.0242,  ..., 0.2500, 0.2500, 0.2500],
         [0.0276, 0.0088, 0.0183,  ..., 0.2500, 0.2500, 0.2500],
         [0.0276, 0.0088, 0.0183,  ..., 0.2500, 0.2500, 0.2500],
         [0.9080, 0.9732, 0.9392,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0123, 0.0121, 0.0151,  ..., 0.0159, 0.0117, 0.0077],
         [0.0123, 0.0121, 0.0151,  ..., 0.0159, 0.0117, 0.0077],
         [0.0123, 0.0138, 0.0175,  ..., 0.0205, 0.0117, 0.0077],
         [0.9631, 0.9621, 0.9524,  ..., 0.9476, 0.9648, 0.9768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0257, 0.0234, 0.0234,  ..., 0.0251, 0.0238, 0.0252],
         [0.0257, 0.0234, 0.0234,  ..., 0.0251, 0.0238, 0.0252],
         [0.0257, 0.0234, 0.0234,  ..., 0.0251, 0.0238, 0.0252],
         [0.9230, 0.9299, 0.9299,  ..., 0.9247, 0.9287, 0.9243]],
        [[0.0234, 0.0249, 0.0254,  ..., 0.0240, 0.0237, 0.0259],
         [0.0234, 0.0249, 0.0254,  ..., 0.0240, 0.0237, 0.0259],
         [0.0234, 0.0249, 0.0254,  ..., 0.0240, 0.0237, 0.0259],
         [0.9299, 0.9254, 0.9239,  ..., 0.9281, 0.9289, 0.9222]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:32,744 [Process: 0] Synchronize training processes
2024-08-16 14:25:32,744 [Process: 0] Evaluating...
2024-08-16 14:25:32,746 [Process: 0] EPOCH 184:
2024-08-16 14:25:32,748 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2569, 0.0117,  ..., 0.0133, 0.0074, 0.2541],
         [0.2500, 0.2477, 0.0103,  ..., 0.0107, 0.0074, 0.2486],
         [0.2500, 0.2477, 0.0103,  ..., 0.0107, 0.0074, 0.2486],
         [0.2500, 0.2477, 0.9678,  ..., 0.9653, 0.9779, 0.2486]],
        [[0.0134, 0.0159, 0.0141,  ..., 0.0157, 0.0123, 0.0136],
         [0.0134, 0.0159, 0.0141,  ..., 0.0157, 0.0123, 0.0136],
         [0.0143, 0.0196, 0.0149,  ..., 0.0221, 0.0124, 0.0136],
         [0.9589, 0.9487, 0.9568,  ..., 0.9465, 0.9629, 0.9592]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0225, 0.0238, 0.0229,  ..., 0.0240, 0.0236, 0.0240],
         [0.0225, 0.0238, 0.0229,  ..., 0.0240, 0.0236, 0.0240],
         [0.0225, 0.0238, 0.0229,  ..., 0.0240, 0.0236, 0.0240],
         [0.9325, 0.9287, 0.9312,  ..., 0.9279, 0.9293, 0.9281]],
        [[0.0225, 0.0233, 0.0231,  ..., 0.0235, 0.0242, 0.0236],
         [0.0225, 0.0233, 0.0231,  ..., 0.0235, 0.0242, 0.0236],
         [0.0225, 0.0233, 0.0231,  ..., 0.0235, 0.0242, 0.0236],
         [0.9326, 0.9301, 0.9307,  ..., 0.9296, 0.9274, 0.9292]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:34,631 [Process: 0] Synchronize training processes
2024-08-16 14:25:34,631 [Process: 0] Evaluating...
2024-08-16 14:25:34,633 [Process: 0] EPOCH 185:
2024-08-16 14:25:34,635 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0174, 0.2500, 0.0205,  ..., 0.0175, 0.2425, 0.0172],
         [0.0131, 0.2500, 0.0149,  ..., 0.0125, 0.2425, 0.0154],
         [0.0131, 0.2500, 0.0149,  ..., 0.0125, 0.2726, 0.0154],
         [0.9565, 0.2500, 0.9498,  ..., 0.9576, 0.2425, 0.9519]],
        [[0.0120, 0.0155, 0.0130,  ..., 0.0159, 0.0117, 0.0144],
         [0.0120, 0.0155, 0.0130,  ..., 0.0159, 0.0117, 0.0144],
         [0.0120, 0.0174, 0.0130,  ..., 0.0206, 0.0117, 0.0150],
         [0.9639, 0.9516, 0.9609,  ..., 0.9475, 0.9650, 0.9563]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0211, 0.0208, 0.0218,  ..., 0.0216, 0.0210, 0.0222],
         [0.0211, 0.0208, 0.0218,  ..., 0.0216, 0.0210, 0.0222],
         [0.0211, 0.0208, 0.0218,  ..., 0.0216, 0.0210, 0.0222],
         [0.9368, 0.9377, 0.9346,  ..., 0.9353, 0.9371, 0.9334]],
        [[0.0216, 0.0230, 0.0258,  ..., 0.0216, 0.0295, 0.0299],
         [0.0216, 0.0230, 0.0258,  ..., 0.0216, 0.0295, 0.0299],
         [0.0216, 0.0230, 0.0258,  ..., 0.0216, 0.0295, 0.0299],
         [0.9351, 0.9310, 0.9225,  ..., 0.9352, 0.9115, 0.9102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:36,596 [Process: 0] Synchronize training processes
2024-08-16 14:25:36,596 [Process: 0] Evaluating...
2024-08-16 14:25:36,598 [Process: 0] EPOCH 186:
2024-08-16 14:25:36,600 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0082, 0.2500,  ..., 0.2500, 0.2500, 0.2676],
         [0.2500, 0.0082, 0.2500,  ..., 0.2500, 0.2500, 0.2441],
         [0.2500, 0.0082, 0.2500,  ..., 0.2500, 0.2500, 0.2441],
         [0.2500, 0.9753, 0.2500,  ..., 0.2500, 0.2500, 0.2441]],
        [[0.0093, 0.0175, 0.0219,  ..., 0.0136, 0.0169, 0.0092],
         [0.0093, 0.0175, 0.0219,  ..., 0.0136, 0.0169, 0.0092],
         [0.0093, 0.0228, 0.0376,  ..., 0.0136, 0.0227, 0.0092],
         [0.9721, 0.9421, 0.9185,  ..., 0.9593, 0.9436, 0.9724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0174, 0.0185, 0.0275,  ..., 0.0270, 0.0301, 0.0177],
         [0.0174, 0.0185, 0.0275,  ..., 0.0270, 0.0301, 0.0177],
         [0.0174, 0.0185, 0.0275,  ..., 0.0270, 0.0301, 0.0177],
         [0.9477, 0.9446, 0.9175,  ..., 0.9191, 0.9096, 0.9470]],
        [[0.0187, 0.0195, 0.0188,  ..., 0.0195, 0.0192, 0.0185],
         [0.0187, 0.0195, 0.0188,  ..., 0.0195, 0.0192, 0.0185],
         [0.0187, 0.0195, 0.0188,  ..., 0.0195, 0.0192, 0.0185],
         [0.9440, 0.9414, 0.9437,  ..., 0.9416, 0.9424, 0.9444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:38,495 [Process: 0] Synchronize training processes
2024-08-16 14:25:38,495 [Process: 0] Evaluating...
2024-08-16 14:25:38,497 [Process: 0] EPOCH 187:
2024-08-16 14:25:38,499 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0179, 0.2500,  ..., 0.2730, 0.2580, 0.2500],
         [0.2500, 0.0144, 0.2500,  ..., 0.2423, 0.2473, 0.2500],
         [0.2500, 0.0144, 0.2500,  ..., 0.2423, 0.2473, 0.2500],
         [0.2500, 0.9534, 0.2500,  ..., 0.2423, 0.2473, 0.2500]],
        [[0.0162, 0.0119, 0.0171,  ..., 0.0130, 0.0099, 0.0109],
         [0.0162, 0.0119, 0.0171,  ..., 0.0130, 0.0099, 0.0109],
         [0.0185, 0.0119, 0.0292,  ..., 0.0165, 0.0099, 0.0109],
         [0.9491, 0.9642, 0.9365,  ..., 0.9575, 0.9703, 0.9673]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0195, 0.0179, 0.0300,  ..., 0.0289, 0.0181, 0.0305],
         [0.0195, 0.0179, 0.0300,  ..., 0.0289, 0.0181, 0.0305],
         [0.0195, 0.0179, 0.0300,  ..., 0.0289, 0.0181, 0.0305],
         [0.9415, 0.9463, 0.9101,  ..., 0.9134, 0.9456, 0.9084]],
        [[0.0284, 0.0268, 0.0188,  ..., 0.0262, 0.0169, 0.0192],
         [0.0284, 0.0268, 0.0188,  ..., 0.0262, 0.0169, 0.0192],
         [0.0284, 0.0268, 0.0188,  ..., 0.0262, 0.0169, 0.0192],
         [0.9148, 0.9195, 0.9435,  ..., 0.9214, 0.9493, 0.9424]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:40,398 [Process: 0] Synchronize training processes
2024-08-16 14:25:40,399 [Process: 0] Evaluating...
2024-08-16 14:25:40,400 [Process: 0] EPOCH 188:
2024-08-16 14:25:40,402 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0149, 0.2266, 0.0133,  ..., 0.2500, 0.0336, 0.0113],
         [0.0123, 0.2195, 0.0108,  ..., 0.2500, 0.0236, 0.0107],
         [0.0123, 0.3343, 0.0108,  ..., 0.2500, 0.0236, 0.0107],
         [0.9606, 0.2195, 0.9651,  ..., 0.2500, 0.9191, 0.9673]],
        [[0.0137, 0.0194, 0.0170,  ..., 0.0099, 0.0109, 0.0186],
         [0.0137, 0.0194, 0.0170,  ..., 0.0099, 0.0109, 0.0186],
         [0.0145, 0.0303, 0.0218,  ..., 0.0099, 0.0109, 0.0255],
         [0.9581, 0.9309, 0.9443,  ..., 0.9704, 0.9672, 0.9373]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0273, 0.0184, 0.0191,  ..., 0.0192, 0.0185, 0.0197],
         [0.0273, 0.0184, 0.0191,  ..., 0.0192, 0.0185, 0.0197],
         [0.0273, 0.0184, 0.0191,  ..., 0.0192, 0.0185, 0.0197],
         [0.9182, 0.9449, 0.9427,  ..., 0.9425, 0.9446, 0.9408]],
        [[0.0247, 0.0190, 0.0268,  ..., 0.0198, 0.0263, 0.0235],
         [0.0247, 0.0190, 0.0268,  ..., 0.0198, 0.0263, 0.0235],
         [0.0247, 0.0190, 0.0268,  ..., 0.0198, 0.0263, 0.0235],
         [0.9260, 0.9431, 0.9195,  ..., 0.9405, 0.9212, 0.9294]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:42,308 [Process: 0] Synchronize training processes
2024-08-16 14:25:42,309 [Process: 0] Evaluating...
2024-08-16 14:25:42,311 [Process: 0] EPOCH 189:
2024-08-16 14:25:42,313 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0134, 0.2500,  ..., 0.0261, 0.2500, 0.0154],
         [0.2500, 0.0112, 0.2500,  ..., 0.0188, 0.2500, 0.0121],
         [0.2500, 0.0112, 0.2500,  ..., 0.0188, 0.2500, 0.0121],
         [0.2500, 0.9641, 0.2500,  ..., 0.9364, 0.2500, 0.9603]],
        [[0.0107, 0.0100, 0.0129,  ..., 0.0108, 0.0060, 0.0153],
         [0.0107, 0.0100, 0.0129,  ..., 0.0108, 0.0060, 0.0153],
         [0.0116, 0.0100, 0.0129,  ..., 0.0108, 0.0060, 0.0169],
         [0.9670, 0.9700, 0.9614,  ..., 0.9676, 0.9819, 0.9525]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0227, 0.0261, 0.0237,  ..., 0.0192, 0.0262, 0.0247],
         [0.0227, 0.0261, 0.0237,  ..., 0.0192, 0.0262, 0.0247],
         [0.0227, 0.0261, 0.0237,  ..., 0.0192, 0.0262, 0.0247],
         [0.9320, 0.9217, 0.9289,  ..., 0.9424, 0.9215, 0.9260]],
        [[0.0199, 0.0191, 0.0231,  ..., 0.0205, 0.0228, 0.0224],
         [0.0199, 0.0191, 0.0231,  ..., 0.0205, 0.0228, 0.0224],
         [0.0199, 0.0191, 0.0231,  ..., 0.0205, 0.0228, 0.0224],
         [0.9402, 0.9428, 0.9307,  ..., 0.9385, 0.9316, 0.9327]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:25:44,213 [Process: 0] Synchronize training processes
2024-08-16 14:25:44,213 [Process: 0] Evaluating...
2024-08-16 14:25:44,215 [Process: 0] EPOCH 190:
2024-08-16 14:25:44,218 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0326, 0.2740,  ..., 0.2500, 0.0037, 0.0329],
         [0.2500, 0.0272, 0.2420,  ..., 0.2500, 0.0035, 0.0234],
         [0.2500, 0.0272, 0.2420,  ..., 0.2500, 0.0035, 0.0234],
         [0.2500, 0.9130, 0.2420,  ..., 0.2500, 0.9893, 0.9203]],
        [[0.0126, 0.0130, 0.0137,  ..., 0.0095, 0.0106, 0.0139],
         [0.0126, 0.0130, 0.0137,  ..., 0.0095, 0.0106, 0.0139],
         [0.0126, 0.0135, 0.0139,  ..., 0.0095, 0.0106, 0.0146],
         [0.9623, 0.9605, 0.9587,  ..., 0.9716, 0.9682, 0.9576]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0236, 0.0239, 0.0233,  ..., 0.0215, 0.0215, 0.0218],
         [0.0236, 0.0239, 0.0233,  ..., 0.0215, 0.0215, 0.0218],
         [0.0236, 0.0239, 0.0233,  ..., 0.0215, 0.0215, 0.0218],
         [0.9293, 0.9284, 0.9302,  ..., 0.9355, 0.9356, 0.9346]],
        [[0.0215, 0.0202, 0.0218,  ..., 0.0220, 0.0218, 0.0225],
         [0.0215, 0.0202, 0.0218,  ..., 0.0220, 0.0218, 0.0225],
         [0.0215, 0.0202, 0.0218,  ..., 0.0220, 0.0218, 0.0225],
         [0.9354, 0.9395, 0.9346,  ..., 0.9341, 0.9346, 0.9326]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0266, 0.2500, 0.2500,  ..., 0.0056, 0.0148, 0.2500],
         [0.0178, 0.2500, 0.2500,  ..., 0.0055, 0.0126, 0.2500],
         [0.0178, 0.2500, 0.2500,  ..., 0.0055, 0.0126, 0.2500],
         [0.9377, 0.2500, 0.2500,  ..., 0.9834, 0.9599, 0.2500]],
        [[0.0109, 0.0141, 0.0156,  ..., 0.0078, 0.0127, 0.0143],
         [0.0109, 0.0141, 0.0156,  ..., 0.0078, 0.0127, 0.0143],
         [0.0109, 0.0168, 0.0192,  ..., 0.0078, 0.0127, 0.0157],
         [0.9672, 0.9551, 0.9496,  ..., 0.9767, 0.9618, 0.9558]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:25:46,107 [Process: 0] Synchronize training processes
2024-08-16 14:25:46,107 [Process: 0] Evaluating...
2024-08-16 14:25:46,109 [Process: 0] EPOCH 191:
2024-08-16 14:25:46,111 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0228, 0.0234, 0.0204,  ..., 0.0242, 0.0207, 0.0214],
         [0.0228, 0.0234, 0.0204,  ..., 0.0242, 0.0207, 0.0214],
         [0.0228, 0.0234, 0.0204,  ..., 0.0242, 0.0207, 0.0214],
         [0.9315, 0.9297, 0.9387,  ..., 0.9275, 0.9378, 0.9359]],
        [[0.0212, 0.0216, 0.0211,  ..., 0.0219, 0.0213, 0.0203],
         [0.0212, 0.0216, 0.0211,  ..., 0.0219, 0.0213, 0.0203],
         [0.0212, 0.0216, 0.0211,  ..., 0.0219, 0.0213, 0.0203],
         [0.9363, 0.9352, 0.9367,  ..., 0.9342, 0.9360, 0.9391]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2585, 0.0088, 0.2500,  ..., 0.0190, 0.2500, 0.2500],
         [0.2472, 0.0079, 0.2500,  ..., 0.0130, 0.2500, 0.2500],
         [0.2472, 0.0079, 0.2500,  ..., 0.0130, 0.2500, 0.2500],
         [0.2472, 0.9753, 0.2500,  ..., 0.9551, 0.2500, 0.2500]],
        [[0.0106, 0.0176, 0.0161,  ..., 0.0115, 0.0126, 0.0103],
         [0.0106, 0.0176, 0.0161,  ..., 0.0115, 0.0126, 0.0103],
         [0.0115, 0.0215, 0.0194,  ..., 0.0115, 0.0126, 0.0103],
         [0.9672, 0.9432, 0.9483,  ..., 0.9656, 0.9621, 0.9692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:25:48,014 [Process: 0] Synchronize training processes
2024-08-16 14:25:48,015 [Process: 0] Evaluating...
2024-08-16 14:25:48,022 [Process: 0] EPOCH 192:
2024-08-16 14:25:48,024 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0208, 0.0234, 0.0232,  ..., 0.0212, 0.0217, 0.0243],
         [0.0208, 0.0234, 0.0232,  ..., 0.0212, 0.0217, 0.0243],
         [0.0208, 0.0234, 0.0232,  ..., 0.0212, 0.0217, 0.0243],
         [0.9375, 0.9299, 0.9304,  ..., 0.9363, 0.9349, 0.9271]],
        [[0.0215, 0.0221, 0.0201,  ..., 0.0220, 0.0215, 0.0213],
         [0.0215, 0.0221, 0.0201,  ..., 0.0220, 0.0215, 0.0213],
         [0.0215, 0.0221, 0.0201,  ..., 0.0220, 0.0215, 0.0213],
         [0.9355, 0.9338, 0.9397,  ..., 0.9341, 0.9355, 0.9360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0082, 0.0304,  ..., 0.0347, 0.0199, 0.2500],
         [0.0088, 0.0069, 0.0225,  ..., 0.0217, 0.0134, 0.2500],
         [0.0088, 0.0069, 0.0225,  ..., 0.0217, 0.0134, 0.2500],
         [0.9696, 0.9780, 0.9246,  ..., 0.9219, 0.9532, 0.2500]],
        [[0.0202, 0.0098, 0.0123,  ..., 0.0130, 0.0102, 0.0097],
         [0.0202, 0.0098, 0.0123,  ..., 0.0130, 0.0102, 0.0097],
         [0.0296, 0.0098, 0.0123,  ..., 0.0130, 0.0102, 0.0097],
         [0.9301, 0.9706, 0.9631,  ..., 0.9609, 0.9693, 0.9708]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:25:49,911 [Process: 0] Synchronize training processes
2024-08-16 14:25:49,912 [Process: 0] Evaluating...
2024-08-16 14:25:49,914 [Process: 0] EPOCH 193:
2024-08-16 14:25:49,916 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0223, 0.0200, 0.0219,  ..., 0.0206, 0.0215, 0.0235],
         [0.0223, 0.0200, 0.0219,  ..., 0.0206, 0.0215, 0.0235],
         [0.0223, 0.0200, 0.0219,  ..., 0.0206, 0.0215, 0.0235],
         [0.9330, 0.9400, 0.9342,  ..., 0.9383, 0.9355, 0.9296]],
        [[0.0205, 0.0220, 0.0238,  ..., 0.0215, 0.0233, 0.0204],
         [0.0205, 0.0220, 0.0238,  ..., 0.0215, 0.0233, 0.0204],
         [0.0205, 0.0220, 0.0238,  ..., 0.0215, 0.0233, 0.0204],
         [0.9386, 0.9341, 0.9287,  ..., 0.9356, 0.9300, 0.9388]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2703, 0.0131, 0.2500,  ..., 0.2627, 0.0126, 0.0156],
         [0.2432, 0.0102, 0.2500,  ..., 0.2458, 0.0094, 0.0129],
         [0.2432, 0.0102, 0.2500,  ..., 0.2458, 0.0094, 0.0129],
         [0.2432, 0.9666, 0.2500,  ..., 0.2458, 0.9686, 0.9587]],
        [[0.0119, 0.0148, 0.0132,  ..., 0.0096, 0.0153, 0.0093],
         [0.0119, 0.0148, 0.0132,  ..., 0.0096, 0.0153, 0.0093],
         [0.0119, 0.0206, 0.0133,  ..., 0.0096, 0.0221, 0.0093],
         [0.9644, 0.9498, 0.9602,  ..., 0.9712, 0.9473, 0.9722]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:25:51,821 [Process: 0] Synchronize training processes
2024-08-16 14:25:51,821 [Process: 0] Evaluating...
2024-08-16 14:25:51,823 [Process: 0] EPOCH 194:
2024-08-16 14:25:51,825 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0216, 0.0189, 0.0210,  ..., 0.0187, 0.0205, 0.0205],
         [0.0216, 0.0189, 0.0210,  ..., 0.0187, 0.0205, 0.0205],
         [0.0216, 0.0189, 0.0210,  ..., 0.0187, 0.0205, 0.0205],
         [0.9351, 0.9432, 0.9370,  ..., 0.9439, 0.9386, 0.9384]],
        [[0.0216, 0.0203, 0.0233,  ..., 0.0235, 0.0237, 0.0239],
         [0.0216, 0.0203, 0.0233,  ..., 0.0235, 0.0237, 0.0239],
         [0.0216, 0.0203, 0.0233,  ..., 0.0235, 0.0237, 0.0239],
         [0.9351, 0.9390, 0.9301,  ..., 0.9294, 0.9288, 0.9283]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0337, 0.0140, 0.2500,  ..., 0.2382, 0.2552, 0.0199],
         [0.0269, 0.0107, 0.2500,  ..., 0.2382, 0.2483, 0.0163],
         [0.0269, 0.0107, 0.2500,  ..., 0.2854, 0.2483, 0.0163],
         [0.9124, 0.9645, 0.2500,  ..., 0.2382, 0.2483, 0.9476]],
        [[0.0095, 0.0147, 0.0111,  ..., 0.0099, 0.0127, 0.0154],
         [0.0095, 0.0147, 0.0111,  ..., 0.0099, 0.0127, 0.0154],
         [0.0095, 0.0157, 0.0111,  ..., 0.0100, 0.0127, 0.0175],
         [0.9716, 0.9550, 0.9666,  ..., 0.9701, 0.9619, 0.9517]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:25:53,728 [Process: 0] Synchronize training processes
2024-08-16 14:25:53,728 [Process: 0] Evaluating...
2024-08-16 14:25:53,730 [Process: 0] EPOCH 195:
2024-08-16 14:25:53,732 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0217, 0.0225, 0.0215,  ..., 0.0213, 0.0190, 0.0215],
         [0.0217, 0.0225, 0.0215,  ..., 0.0213, 0.0190, 0.0215],
         [0.0217, 0.0225, 0.0215,  ..., 0.0213, 0.0190, 0.0215],
         [0.9350, 0.9325, 0.9356,  ..., 0.9362, 0.9429, 0.9356]],
        [[0.0226, 0.0228, 0.0236,  ..., 0.0197, 0.0205, 0.0192],
         [0.0226, 0.0228, 0.0236,  ..., 0.0197, 0.0205, 0.0192],
         [0.0226, 0.0228, 0.0236,  ..., 0.0197, 0.0205, 0.0192],
         [0.9322, 0.9317, 0.9292,  ..., 0.9410, 0.9384, 0.9423]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2500,  ..., 0.0187, 0.0083, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.0140, 0.0060, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.0140, 0.0060, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.9533, 0.9798, 0.2500]],
        [[0.0091, 0.0096, 0.0107,  ..., 0.0132, 0.0143, 0.0181],
         [0.0091, 0.0096, 0.0107,  ..., 0.0132, 0.0143, 0.0181],
         [0.0091, 0.0096, 0.0107,  ..., 0.0140, 0.0176, 0.0242],
         [0.9727, 0.9712, 0.9678,  ..., 0.9596, 0.9539, 0.9397]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:25:55,647 [Process: 0] Synchronize training processes
2024-08-16 14:25:55,647 [Process: 0] Evaluating...
2024-08-16 14:25:55,649 [Process: 0] EPOCH 196:
2024-08-16 14:25:55,651 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0208, 0.0213, 0.0228,  ..., 0.0214, 0.0202, 0.0199],
         [0.0208, 0.0213, 0.0228,  ..., 0.0214, 0.0202, 0.0199],
         [0.0208, 0.0213, 0.0228,  ..., 0.0214, 0.0202, 0.0199],
         [0.9377, 0.9361, 0.9315,  ..., 0.9358, 0.9394, 0.9404]],
        [[0.0199, 0.0203, 0.0217,  ..., 0.0195, 0.0220, 0.0202],
         [0.0199, 0.0203, 0.0217,  ..., 0.0195, 0.0220, 0.0202],
         [0.0199, 0.0203, 0.0217,  ..., 0.0195, 0.0220, 0.0202],
         [0.9404, 0.9390, 0.9349,  ..., 0.9416, 0.9339, 0.9394]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0201, 0.0071,  ..., 0.0144, 0.0088, 0.0105],
         [0.2500, 0.0144, 0.0061,  ..., 0.0117, 0.0068, 0.0094],
         [0.2500, 0.0144, 0.0061,  ..., 0.0117, 0.0068, 0.0094],
         [0.2500, 0.9512, 0.9808,  ..., 0.9622, 0.9775, 0.9706]],
        [[0.0098, 0.0118, 0.0095,  ..., 0.0127, 0.0151, 0.0075],
         [0.0098, 0.0118, 0.0095,  ..., 0.0127, 0.0151, 0.0075],
         [0.0098, 0.0118, 0.0095,  ..., 0.0148, 0.0158, 0.0075],
         [0.9705, 0.9645, 0.9714,  ..., 0.9597, 0.9540, 0.9776]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:25:57,545 [Process: 0] Synchronize training processes
2024-08-16 14:25:57,545 [Process: 0] Evaluating...
2024-08-16 14:25:57,547 [Process: 0] EPOCH 197:
2024-08-16 14:25:57,549 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0226, 0.0192, 0.0194,  ..., 0.0218, 0.0204, 0.0206],
         [0.0226, 0.0192, 0.0194,  ..., 0.0218, 0.0204, 0.0206],
         [0.0226, 0.0192, 0.0194,  ..., 0.0218, 0.0204, 0.0206],
         [0.9321, 0.9425, 0.9418,  ..., 0.9345, 0.9389, 0.9383]],
        [[0.0217, 0.0210, 0.0214,  ..., 0.0216, 0.0205, 0.0214],
         [0.0217, 0.0210, 0.0214,  ..., 0.0216, 0.0205, 0.0214],
         [0.0217, 0.0210, 0.0214,  ..., 0.0216, 0.0205, 0.0214],
         [0.9350, 0.9369, 0.9357,  ..., 0.9353, 0.9384, 0.9358]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2648, 0.0190,  ..., 0.0189, 0.0184, 0.2500],
         [0.2500, 0.2451, 0.0138,  ..., 0.0149, 0.0133, 0.2500],
         [0.2500, 0.2451, 0.0138,  ..., 0.0149, 0.0133, 0.2500],
         [0.2500, 0.2451, 0.9534,  ..., 0.9512, 0.9550, 0.2500]],
        [[0.0103, 0.0102, 0.0123,  ..., 0.0137, 0.0105, 0.0114],
         [0.0103, 0.0102, 0.0123,  ..., 0.0137, 0.0105, 0.0114],
         [0.0103, 0.0102, 0.0131,  ..., 0.0139, 0.0105, 0.0114],
         [0.9690, 0.9693, 0.9623,  ..., 0.9586, 0.9684, 0.9659]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:25:59,430 [Process: 0] Synchronize training processes
2024-08-16 14:25:59,430 [Process: 0] Evaluating...
2024-08-16 14:25:59,432 [Process: 0] EPOCH 198:
2024-08-16 14:25:59,434 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:26:01,330 [Process: 0] Synchronize training processes
2024-08-16 14:26:01,330 [Process: 0] Evaluating...
2024-08-16 14:26:01,332 [Process: 0] EPOCH 199:
2024-08-16 14:26:01,334 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0208, 0.0191, 0.0193,  ..., 0.0203, 0.0205, 0.0219],
         [0.0208, 0.0191, 0.0193,  ..., 0.0203, 0.0205, 0.0219],
         [0.0208, 0.0191, 0.0193,  ..., 0.0203, 0.0205, 0.0219],
         [0.9376, 0.9426, 0.9420,  ..., 0.9392, 0.9386, 0.9343]],
        [[0.0187, 0.0198, 0.0223,  ..., 0.0220, 0.0200, 0.0240],
         [0.0187, 0.0198, 0.0223,  ..., 0.0220, 0.0200, 0.0240],
         [0.0187, 0.0198, 0.0223,  ..., 0.0220, 0.0200, 0.0240],
         [0.9438, 0.9406, 0.9331,  ..., 0.9339, 0.9401, 0.9279]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2676, 0.2507, 0.2500,  ..., 0.2721, 0.0124, 0.2500],
         [0.2359, 0.2498, 0.2500,  ..., 0.2426, 0.0087, 0.2500],
         [0.2607, 0.2498, 0.2500,  ..., 0.2426, 0.0087, 0.2500],
         [0.2359, 0.2498, 0.2500,  ..., 0.2426, 0.9701, 0.2500]],
        [[0.0116, 0.0128, 0.0107,  ..., 0.0078, 0.0104, 0.0142],
         [0.0116, 0.0128, 0.0107,  ..., 0.0078, 0.0104, 0.0142],
         [0.0116, 0.0128, 0.0107,  ..., 0.0078, 0.0104, 0.0172],
         [0.9652, 0.9615, 0.9680,  ..., 0.9767, 0.9688, 0.9544]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:26:03,214 [Process: 0] Synchronize training processes
2024-08-16 14:26:03,214 [Process: 0] Evaluating...
2024-08-16 14:26:03,216 [Process: 0] EPOCH 200:
2024-08-16 14:26:03,218 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0215, 0.0247, 0.0220,  ..., 0.0219, 0.0221, 0.0179],
         [0.0215, 0.0247, 0.0220,  ..., 0.0219, 0.0221, 0.0179],
         [0.0215, 0.0247, 0.0220,  ..., 0.0219, 0.0221, 0.0179],
         [0.9354, 0.9260, 0.9341,  ..., 0.9343, 0.9337, 0.9462]],
        [[0.0229, 0.0198, 0.0203,  ..., 0.0189, 0.0199, 0.0206],
         [0.0229, 0.0198, 0.0203,  ..., 0.0189, 0.0199, 0.0206],
         [0.0229, 0.0198, 0.0203,  ..., 0.0189, 0.0199, 0.0206],
         [0.9313, 0.9406, 0.9390,  ..., 0.9432, 0.9402, 0.9382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2544, 0.2500, 0.0196,  ..., 0.0121, 0.0167, 0.2500],
         [0.2485, 0.2500, 0.0138,  ..., 0.0087, 0.0127, 0.2500],
         [0.2485, 0.2500, 0.0138,  ..., 0.0087, 0.0127, 0.2500],
         [0.2485, 0.2500, 0.9527,  ..., 0.9706, 0.9578, 0.2500]],
        [[0.0093, 0.0120, 0.0142,  ..., 0.0135, 0.0125, 0.0108],
         [0.0093, 0.0120, 0.0142,  ..., 0.0135, 0.0125, 0.0108],
         [0.0093, 0.0120, 0.0166,  ..., 0.0159, 0.0125, 0.0108],
         [0.9722, 0.9639, 0.9550,  ..., 0.9571, 0.9624, 0.9676]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0210, 0.0202, 0.0197,  ..., 0.0214, 0.0190, 0.0195],
         [0.0210, 0.0202, 0.0197,  ..., 0.0214, 0.0190, 0.0195],
         [0.0210, 0.0202, 0.0197,  ..., 0.0214, 0.0190, 0.0195],
         [0.9371, 0.9395, 0.9410,  ..., 0.9357, 0.9429, 0.9414]],
        [[0.0202, 0.0209, 0.0191,  ..., 0.0201, 0.0204, 0.0200],
         [0.0202, 0.0209, 0.0191,  ..., 0.0201, 0.0204, 0.0200],
         [0.0202, 0.0209, 0.0191,  ..., 0.0201, 0.0204, 0.0200],
         [0.9393, 0.9372, 0.9427,  ..., 0.9397, 0.9389, 0.9401]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:05,129 [Process: 0] Synchronize training processes
2024-08-16 14:26:05,130 [Process: 0] Evaluating...
2024-08-16 14:26:05,131 [Process: 0] EPOCH 201:
2024-08-16 14:26:05,133 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2514, 0.0149,  ..., 0.0255, 0.0132, 0.0210],
         [0.2500, 0.2495, 0.0107,  ..., 0.0160, 0.0099, 0.0179],
         [0.2500, 0.2495, 0.0107,  ..., 0.0160, 0.0099, 0.0179],
         [0.2500, 0.2495, 0.9636,  ..., 0.9424, 0.9670, 0.9432]],
        [[0.0112, 0.0121, 0.0151,  ..., 0.0114, 0.0105, 0.0095],
         [0.0112, 0.0121, 0.0151,  ..., 0.0114, 0.0105, 0.0095],
         [0.0124, 0.0146, 0.0212,  ..., 0.0125, 0.0105, 0.0095],
         [0.9653, 0.9612, 0.9486,  ..., 0.9646, 0.9685, 0.9714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 201:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0202, 0.0190, 0.0219,  ..., 0.0187, 0.0191, 0.0195],
         [0.0202, 0.0190, 0.0219,  ..., 0.0187, 0.0191, 0.0195],
         [0.0202, 0.0190, 0.0219,  ..., 0.0187, 0.0191, 0.0195],
         [0.9394, 0.9430, 0.9344,  ..., 0.9438, 0.9427, 0.9414]],
        [[0.0194, 0.0194, 0.0196,  ..., 0.0194, 0.0198, 0.0196],
         [0.0194, 0.0194, 0.0196,  ..., 0.0194, 0.0198, 0.0196],
         [0.0194, 0.0194, 0.0196,  ..., 0.0194, 0.0198, 0.0196],
         [0.9417, 0.9418, 0.9412,  ..., 0.9418, 0.9406, 0.9411]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:07,026 [Process: 0] Synchronize training processes
2024-08-16 14:26:07,026 [Process: 0] Evaluating...
2024-08-16 14:26:07,035 [Process: 0] EPOCH 202:
2024-08-16 14:26:07,037 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0295, 0.0200, 0.2500,  ..., 0.2500, 0.0194, 0.0186],
         [0.0202, 0.0133, 0.2500,  ..., 0.2500, 0.0145, 0.0128],
         [0.0202, 0.0133, 0.2500,  ..., 0.2500, 0.0145, 0.0128],
         [0.9301, 0.9533, 0.2500,  ..., 0.2500, 0.9517, 0.9557]],
        [[0.0148, 0.0144, 0.0137,  ..., 0.0108, 0.0099, 0.0114],
         [0.0148, 0.0144, 0.0137,  ..., 0.0108, 0.0099, 0.0114],
         [0.0182, 0.0186, 0.0160,  ..., 0.0108, 0.0099, 0.0114],
         [0.9522, 0.9525, 0.9566,  ..., 0.9677, 0.9702, 0.9657]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 202:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0190, 0.0194, 0.0193,  ..., 0.0193, 0.0182, 0.0181],
         [0.0190, 0.0194, 0.0193,  ..., 0.0193, 0.0182, 0.0181],
         [0.0190, 0.0194, 0.0193,  ..., 0.0193, 0.0182, 0.0181],
         [0.9429, 0.9419, 0.9420,  ..., 0.9420, 0.9455, 0.9458]],
        [[0.0215, 0.0224, 0.0229,  ..., 0.0187, 0.0235, 0.0234],
         [0.0215, 0.0224, 0.0229,  ..., 0.0187, 0.0235, 0.0234],
         [0.0215, 0.0224, 0.0229,  ..., 0.0187, 0.0235, 0.0234],
         [0.9354, 0.9327, 0.9313,  ..., 0.9438, 0.9295, 0.9297]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:08,946 [Process: 0] Synchronize training processes
2024-08-16 14:26:08,946 [Process: 0] Evaluating...
2024-08-16 14:26:08,948 [Process: 0] EPOCH 203:
2024-08-16 14:26:08,950 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0149, 0.2500, 0.0134,  ..., 0.2500, 0.0106, 0.0195],
         [0.0108, 0.2500, 0.0098,  ..., 0.2500, 0.0082, 0.0143],
         [0.0108, 0.2500, 0.0098,  ..., 0.2500, 0.0082, 0.0143],
         [0.9635, 0.2500, 0.9669,  ..., 0.2500, 0.9729, 0.9519]],
        [[0.0118, 0.0122, 0.0137,  ..., 0.0096, 0.0091, 0.0110],
         [0.0118, 0.0122, 0.0137,  ..., 0.0096, 0.0091, 0.0110],
         [0.0118, 0.0155, 0.0175,  ..., 0.0096, 0.0091, 0.0110],
         [0.9647, 0.9602, 0.9550,  ..., 0.9711, 0.9726, 0.9669]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 203:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0183, 0.0191, 0.0184,  ..., 0.0185, 0.0195, 0.0182],
         [0.0183, 0.0191, 0.0184,  ..., 0.0185, 0.0195, 0.0182],
         [0.0183, 0.0191, 0.0184,  ..., 0.0185, 0.0195, 0.0182],
         [0.9451, 0.9427, 0.9448,  ..., 0.9444, 0.9414, 0.9453]],
        [[0.0214, 0.0222, 0.0224,  ..., 0.0219, 0.0237, 0.0198],
         [0.0214, 0.0222, 0.0224,  ..., 0.0219, 0.0237, 0.0198],
         [0.0214, 0.0222, 0.0224,  ..., 0.0219, 0.0237, 0.0198],
         [0.9358, 0.9335, 0.9327,  ..., 0.9344, 0.9290, 0.9406]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:10,840 [Process: 0] Synchronize training processes
2024-08-16 14:26:10,840 [Process: 0] Evaluating...
2024-08-16 14:26:10,842 [Process: 0] EPOCH 204:
2024-08-16 14:26:10,844 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2509, 0.2500, 0.2500,  ..., 0.0163, 0.0160, 0.0209],
         [0.2497, 0.2500, 0.2500,  ..., 0.0109, 0.0108, 0.0140],
         [0.2497, 0.2500, 0.2500,  ..., 0.0109, 0.0108, 0.0140],
         [0.2497, 0.2500, 0.2500,  ..., 0.9619, 0.9624, 0.9512]],
        [[0.0110, 0.0142, 0.0126,  ..., 0.0122, 0.0107, 0.0138],
         [0.0110, 0.0142, 0.0126,  ..., 0.0122, 0.0107, 0.0138],
         [0.0110, 0.0183, 0.0154,  ..., 0.0123, 0.0120, 0.0171],
         [0.9670, 0.9533, 0.9594,  ..., 0.9633, 0.9666, 0.9553]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 204:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0191, 0.0216, 0.0215,  ..., 0.0184, 0.0220, 0.0215],
         [0.0191, 0.0216, 0.0215,  ..., 0.0184, 0.0220, 0.0215],
         [0.0191, 0.0216, 0.0215,  ..., 0.0184, 0.0220, 0.0215],
         [0.9426, 0.9352, 0.9354,  ..., 0.9449, 0.9341, 0.9356]],
        [[0.0183, 0.0195, 0.0192,  ..., 0.0200, 0.0196, 0.0195],
         [0.0183, 0.0195, 0.0192,  ..., 0.0200, 0.0196, 0.0195],
         [0.0183, 0.0195, 0.0192,  ..., 0.0200, 0.0196, 0.0195],
         [0.9451, 0.9416, 0.9423,  ..., 0.9401, 0.9412, 0.9416]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:12,762 [Process: 0] Synchronize training processes
2024-08-16 14:26:12,762 [Process: 0] Evaluating...
2024-08-16 14:26:12,764 [Process: 0] EPOCH 205:
2024-08-16 14:26:12,766 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0126, 0.2188, 0.0239,  ..., 0.2500, 0.0104, 0.2640],
         [0.0096, 0.2188, 0.0174,  ..., 0.2500, 0.0089, 0.2453],
         [0.0096, 0.3437, 0.0174,  ..., 0.2500, 0.0089, 0.2453],
         [0.9681, 0.2188, 0.9413,  ..., 0.2500, 0.9719, 0.2453]],
        [[0.0083, 0.0185, 0.0104,  ..., 0.0104, 0.0102, 0.0151],
         [0.0083, 0.0185, 0.0104,  ..., 0.0104, 0.0102, 0.0151],
         [0.0083, 0.0307, 0.0104,  ..., 0.0104, 0.0102, 0.0205],
         [0.9750, 0.9324, 0.9688,  ..., 0.9687, 0.9695, 0.9494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 205:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0214, 0.0217, 0.0184,  ..., 0.0194, 0.0188, 0.0210],
         [0.0214, 0.0217, 0.0184,  ..., 0.0194, 0.0188, 0.0210],
         [0.0214, 0.0217, 0.0184,  ..., 0.0194, 0.0188, 0.0210],
         [0.9357, 0.9348, 0.9448,  ..., 0.9419, 0.9437, 0.9369]],
        [[0.0174, 0.0175, 0.0186,  ..., 0.0199, 0.0193, 0.0195],
         [0.0174, 0.0175, 0.0186,  ..., 0.0199, 0.0193, 0.0195],
         [0.0174, 0.0175, 0.0186,  ..., 0.0199, 0.0193, 0.0195],
         [0.9477, 0.9475, 0.9443,  ..., 0.9402, 0.9420, 0.9414]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:14,662 [Process: 0] Synchronize training processes
2024-08-16 14:26:14,663 [Process: 0] Evaluating...
2024-08-16 14:26:14,664 [Process: 0] EPOCH 206:
2024-08-16 14:26:14,666 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0355, 0.2500,  ..., 0.0218, 0.2500, 0.0167],
         [0.2500, 0.0214, 0.2500,  ..., 0.0163, 0.2500, 0.0114],
         [0.2500, 0.0214, 0.2500,  ..., 0.0163, 0.2500, 0.0114],
         [0.2500, 0.9217, 0.2500,  ..., 0.9456, 0.2500, 0.9605]],
        [[0.0088, 0.0089, 0.0100,  ..., 0.0122, 0.0107, 0.0105],
         [0.0088, 0.0089, 0.0100,  ..., 0.0122, 0.0107, 0.0105],
         [0.0088, 0.0089, 0.0100,  ..., 0.0147, 0.0107, 0.0108],
         [0.9735, 0.9732, 0.9699,  ..., 0.9608, 0.9678, 0.9682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 206:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0192, 0.0190, 0.0202,  ..., 0.0188, 0.0190, 0.0201],
         [0.0192, 0.0190, 0.0202,  ..., 0.0188, 0.0190, 0.0201],
         [0.0192, 0.0190, 0.0202,  ..., 0.0188, 0.0190, 0.0201],
         [0.9425, 0.9431, 0.9395,  ..., 0.9436, 0.9429, 0.9396]],
        [[0.0190, 0.0183, 0.0198,  ..., 0.0196, 0.0201, 0.0181],
         [0.0190, 0.0183, 0.0198,  ..., 0.0196, 0.0201, 0.0181],
         [0.0190, 0.0183, 0.0198,  ..., 0.0196, 0.0201, 0.0181],
         [0.9429, 0.9451, 0.9406,  ..., 0.9413, 0.9397, 0.9456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:16,566 [Process: 0] Synchronize training processes
2024-08-16 14:26:16,566 [Process: 0] Evaluating...
2024-08-16 14:26:16,568 [Process: 0] EPOCH 207:
2024-08-16 14:26:16,570 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0181, 0.0189, 0.2500,  ..., 0.0073, 0.2500, 0.2500],
         [0.0127, 0.0137, 0.2500,  ..., 0.0051, 0.2500, 0.2500],
         [0.0127, 0.0137, 0.2500,  ..., 0.0051, 0.2500, 0.2500],
         [0.9564, 0.9537, 0.2500,  ..., 0.9825, 0.2500, 0.2500]],
        [[0.0113, 0.0098, 0.0172,  ..., 0.0120, 0.0123, 0.0095],
         [0.0113, 0.0098, 0.0172,  ..., 0.0120, 0.0123, 0.0095],
         [0.0113, 0.0098, 0.0281,  ..., 0.0124, 0.0123, 0.0095],
         [0.9662, 0.9706, 0.9376,  ..., 0.9635, 0.9632, 0.9714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 207:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0188, 0.0201, 0.0189,  ..., 0.0193, 0.0189, 0.0197],
         [0.0188, 0.0201, 0.0189,  ..., 0.0193, 0.0189, 0.0197],
         [0.0188, 0.0201, 0.0189,  ..., 0.0193, 0.0189, 0.0197],
         [0.9436, 0.9397, 0.9433,  ..., 0.9422, 0.9433, 0.9409]],
        [[0.0183, 0.0212, 0.0180,  ..., 0.0196, 0.0199, 0.0189],
         [0.0183, 0.0212, 0.0180,  ..., 0.0196, 0.0199, 0.0189],
         [0.0183, 0.0212, 0.0180,  ..., 0.0196, 0.0199, 0.0189],
         [0.9450, 0.9364, 0.9459,  ..., 0.9411, 0.9404, 0.9433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:18,508 [Process: 0] Synchronize training processes
2024-08-16 14:26:18,508 [Process: 0] Evaluating...
2024-08-16 14:26:18,510 [Process: 0] EPOCH 208:
2024-08-16 14:26:18,512 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0264, 0.0075,  ..., 0.2500, 0.2500, 0.2686],
         [0.2500, 0.0197, 0.0054,  ..., 0.2500, 0.2500, 0.2438],
         [0.2500, 0.0197, 0.0054,  ..., 0.2500, 0.2500, 0.2438],
         [0.2500, 0.9342, 0.9817,  ..., 0.2500, 0.2500, 0.2438]],
        [[0.0090, 0.0123, 0.0133,  ..., 0.0141, 0.0140, 0.0113],
         [0.0090, 0.0123, 0.0133,  ..., 0.0141, 0.0140, 0.0113],
         [0.0090, 0.0123, 0.0141,  ..., 0.0158, 0.0150, 0.0113],
         [0.9729, 0.9631, 0.9594,  ..., 0.9561, 0.9571, 0.9661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 208:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0195, 0.0202, 0.0187,  ..., 0.0179, 0.0190, 0.0199],
         [0.0195, 0.0202, 0.0187,  ..., 0.0179, 0.0190, 0.0199],
         [0.0195, 0.0202, 0.0187,  ..., 0.0179, 0.0190, 0.0199],
         [0.9416, 0.9394, 0.9439,  ..., 0.9463, 0.9430, 0.9402]],
        [[0.0190, 0.0192, 0.0208,  ..., 0.0196, 0.0185, 0.0196],
         [0.0190, 0.0192, 0.0208,  ..., 0.0196, 0.0185, 0.0196],
         [0.0190, 0.0192, 0.0208,  ..., 0.0196, 0.0185, 0.0196],
         [0.9431, 0.9423, 0.9377,  ..., 0.9411, 0.9446, 0.9411]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:20,459 [Process: 0] Synchronize training processes
2024-08-16 14:26:20,459 [Process: 0] Evaluating...
2024-08-16 14:26:20,461 [Process: 0] EPOCH 209:
2024-08-16 14:26:20,463 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0222,  ..., 0.0119, 0.0167, 0.2500],
         [0.2500, 0.2500, 0.0182,  ..., 0.0084, 0.0123, 0.2500],
         [0.2500, 0.2500, 0.0182,  ..., 0.0084, 0.0123, 0.2500],
         [0.2500, 0.2500, 0.9414,  ..., 0.9712, 0.9586, 0.2500]],
        [[0.0104, 0.0125, 0.0109,  ..., 0.0093, 0.0134, 0.0132],
         [0.0104, 0.0125, 0.0109,  ..., 0.0093, 0.0134, 0.0132],
         [0.0104, 0.0126, 0.0130,  ..., 0.0093, 0.0145, 0.0166],
         [0.9689, 0.9624, 0.9652,  ..., 0.9721, 0.9587, 0.9571]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 209:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0189, 0.0187, 0.0200,  ..., 0.0220, 0.0187, 0.0193],
         [0.0189, 0.0187, 0.0200,  ..., 0.0220, 0.0187, 0.0193],
         [0.0189, 0.0187, 0.0200,  ..., 0.0220, 0.0187, 0.0193],
         [0.9432, 0.9439, 0.9400,  ..., 0.9339, 0.9440, 0.9422]],
        [[0.0185, 0.0184, 0.0178,  ..., 0.0193, 0.0188, 0.0190],
         [0.0185, 0.0184, 0.0178,  ..., 0.0193, 0.0188, 0.0190],
         [0.0185, 0.0184, 0.0178,  ..., 0.0193, 0.0188, 0.0190],
         [0.9446, 0.9448, 0.9467,  ..., 0.9421, 0.9436, 0.9430]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:22,405 [Process: 0] Synchronize training processes
2024-08-16 14:26:22,405 [Process: 0] Evaluating...
2024-08-16 14:26:22,407 [Process: 0] EPOCH 210:
2024-08-16 14:26:22,409 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.2500, 0.2500,  ..., 0.0210, 0.2506, 0.0345],
         [0.0072, 0.2500, 0.2500,  ..., 0.0137, 0.2498, 0.0224],
         [0.0072, 0.2500, 0.2500,  ..., 0.0137, 0.2498, 0.0224],
         [0.9759, 0.2500, 0.2500,  ..., 0.9516, 0.2498, 0.9207]],
        [[0.0105, 0.0114, 0.0165,  ..., 0.0122, 0.0095, 0.0120],
         [0.0105, 0.0114, 0.0165,  ..., 0.0122, 0.0095, 0.0120],
         [0.0111, 0.0123, 0.0245,  ..., 0.0122, 0.0095, 0.0141],
         [0.9678, 0.9649, 0.9426,  ..., 0.9633, 0.9716, 0.9618]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 210:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0176, 0.0198, 0.0184,  ..., 0.0187, 0.0188, 0.0185],
         [0.0176, 0.0198, 0.0184,  ..., 0.0187, 0.0188, 0.0185],
         [0.0176, 0.0198, 0.0184,  ..., 0.0187, 0.0188, 0.0185],
         [0.9471, 0.9407, 0.9447,  ..., 0.9440, 0.9437, 0.9444]],
        [[0.0189, 0.0180, 0.0182,  ..., 0.0172, 0.0195, 0.0175],
         [0.0189, 0.0180, 0.0182,  ..., 0.0172, 0.0195, 0.0175],
         [0.0189, 0.0180, 0.0182,  ..., 0.0172, 0.0195, 0.0175],
         [0.9433, 0.9459, 0.9455,  ..., 0.9483, 0.9414, 0.9474]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:24,288 [Process: 0] Synchronize training processes
2024-08-16 14:26:24,289 [Process: 0] Evaluating...
2024-08-16 14:26:24,290 [Process: 0] EPOCH 211:
2024-08-16 14:26:24,292 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0105, 0.0130, 0.2500,  ..., 0.0094, 0.0109, 0.2500],
         [0.0087, 0.0092, 0.2500,  ..., 0.0070, 0.0080, 0.2500],
         [0.0087, 0.0092, 0.2500,  ..., 0.0070, 0.0080, 0.2500],
         [0.9720, 0.9686, 0.2500,  ..., 0.9766, 0.9732, 0.2500]],
        [[0.0128, 0.0105, 0.0079,  ..., 0.0132, 0.0114, 0.0112],
         [0.0128, 0.0105, 0.0079,  ..., 0.0132, 0.0114, 0.0112],
         [0.0143, 0.0105, 0.0079,  ..., 0.0172, 0.0117, 0.0116],
         [0.9601, 0.9685, 0.9762,  ..., 0.9564, 0.9655, 0.9660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 211:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0199, 0.0196, 0.0184,  ..., 0.0188, 0.0183, 0.0195],
         [0.0199, 0.0196, 0.0184,  ..., 0.0188, 0.0183, 0.0195],
         [0.0199, 0.0196, 0.0184,  ..., 0.0188, 0.0183, 0.0195],
         [0.9403, 0.9412, 0.9448,  ..., 0.9437, 0.9450, 0.9415]],
        [[0.0190, 0.0184, 0.0193,  ..., 0.0193, 0.0192, 0.0184],
         [0.0190, 0.0184, 0.0193,  ..., 0.0193, 0.0192, 0.0184],
         [0.0190, 0.0184, 0.0193,  ..., 0.0193, 0.0192, 0.0184],
         [0.9430, 0.9447, 0.9422,  ..., 0.9421, 0.9424, 0.9447]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:26,205 [Process: 0] Synchronize training processes
2024-08-16 14:26:26,205 [Process: 0] Evaluating...
2024-08-16 14:26:26,213 [Process: 0] EPOCH 212:
2024-08-16 14:26:26,216 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0142, 0.2500, 0.0251,  ..., 0.0144, 0.0206, 0.0111],
         [0.0107, 0.2500, 0.0147,  ..., 0.0107, 0.0145, 0.0085],
         [0.0107, 0.2500, 0.0147,  ..., 0.0107, 0.0145, 0.0085],
         [0.9644, 0.2500, 0.9455,  ..., 0.9642, 0.9504, 0.9719]],
        [[0.0113, 0.0090, 0.0102,  ..., 0.0118, 0.0088, 0.0124],
         [0.0113, 0.0090, 0.0102,  ..., 0.0118, 0.0088, 0.0124],
         [0.0121, 0.0090, 0.0113,  ..., 0.0118, 0.0088, 0.0139],
         [0.9654, 0.9731, 0.9683,  ..., 0.9646, 0.9737, 0.9614]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 212:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0182, 0.0172, 0.0178,  ..., 0.0188, 0.0176, 0.0169],
         [0.0182, 0.0172, 0.0178,  ..., 0.0188, 0.0176, 0.0169],
         [0.0182, 0.0172, 0.0178,  ..., 0.0188, 0.0176, 0.0169],
         [0.9455, 0.9483, 0.9466,  ..., 0.9437, 0.9471, 0.9492]],
        [[0.0202, 0.0179, 0.0177,  ..., 0.0191, 0.0196, 0.0181],
         [0.0202, 0.0179, 0.0177,  ..., 0.0191, 0.0196, 0.0181],
         [0.0202, 0.0179, 0.0177,  ..., 0.0191, 0.0196, 0.0181],
         [0.9395, 0.9464, 0.9468,  ..., 0.9427, 0.9413, 0.9457]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:28,145 [Process: 0] Synchronize training processes
2024-08-16 14:26:28,146 [Process: 0] Evaluating...
2024-08-16 14:26:28,147 [Process: 0] EPOCH 213:
2024-08-16 14:26:28,149 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0172, 0.0261, 0.0208,  ..., 0.2500, 0.0168, 0.0195],
         [0.0124, 0.0141, 0.0154,  ..., 0.2500, 0.0130, 0.0139],
         [0.0124, 0.0141, 0.0154,  ..., 0.2500, 0.0130, 0.0139],
         [0.9580, 0.9456, 0.9485,  ..., 0.2500, 0.9572, 0.9526]],
        [[0.0130, 0.0122, 0.0084,  ..., 0.0085, 0.0129, 0.0128],
         [0.0130, 0.0122, 0.0084,  ..., 0.0085, 0.0129, 0.0128],
         [0.0181, 0.0140, 0.0084,  ..., 0.0085, 0.0137, 0.0135],
         [0.9559, 0.9616, 0.9749,  ..., 0.9744, 0.9605, 0.9609]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 213:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0187, 0.0181, 0.0182,  ..., 0.0171, 0.0190, 0.0194],
         [0.0187, 0.0181, 0.0182,  ..., 0.0171, 0.0190, 0.0194],
         [0.0187, 0.0181, 0.0182,  ..., 0.0171, 0.0190, 0.0194],
         [0.9439, 0.9457, 0.9453,  ..., 0.9487, 0.9431, 0.9417]],
        [[0.0173, 0.0177, 0.0176,  ..., 0.0184, 0.0179, 0.0194],
         [0.0173, 0.0177, 0.0176,  ..., 0.0184, 0.0179, 0.0194],
         [0.0173, 0.0177, 0.0176,  ..., 0.0184, 0.0179, 0.0194],
         [0.9480, 0.9469, 0.9472,  ..., 0.9449, 0.9462, 0.9419]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:30,064 [Process: 0] Synchronize training processes
2024-08-16 14:26:30,064 [Process: 0] Evaluating...
2024-08-16 14:26:30,066 [Process: 0] EPOCH 214:
2024-08-16 14:26:30,068 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0153, 0.2520, 0.2500,  ..., 0.0087, 0.0085, 0.2500],
         [0.0108, 0.2493, 0.2500,  ..., 0.0067, 0.0066, 0.2500],
         [0.0108, 0.2493, 0.2500,  ..., 0.0067, 0.0066, 0.2500],
         [0.9630, 0.2493, 0.2500,  ..., 0.9779, 0.9783, 0.2500]],
        [[0.0102, 0.0109, 0.0121,  ..., 0.0111, 0.0097, 0.0099],
         [0.0102, 0.0109, 0.0121,  ..., 0.0111, 0.0097, 0.0099],
         [0.0102, 0.0126, 0.0159,  ..., 0.0124, 0.0097, 0.0106],
         [0.9695, 0.9656, 0.9599,  ..., 0.9653, 0.9708, 0.9696]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 214:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0190, 0.0182, 0.0186,  ..., 0.0196, 0.0189, 0.0180],
         [0.0190, 0.0182, 0.0186,  ..., 0.0196, 0.0189, 0.0180],
         [0.0190, 0.0182, 0.0186,  ..., 0.0196, 0.0189, 0.0180],
         [0.9429, 0.9454, 0.9443,  ..., 0.9412, 0.9433, 0.9460]],
        [[0.0192, 0.0173, 0.0188,  ..., 0.0176, 0.0186, 0.0182],
         [0.0192, 0.0173, 0.0188,  ..., 0.0176, 0.0186, 0.0182],
         [0.0192, 0.0173, 0.0188,  ..., 0.0176, 0.0186, 0.0182],
         [0.9424, 0.9480, 0.9437,  ..., 0.9471, 0.9443, 0.9455]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:31,981 [Process: 0] Synchronize training processes
2024-08-16 14:26:31,981 [Process: 0] Evaluating...
2024-08-16 14:26:31,983 [Process: 0] EPOCH 215:
2024-08-16 14:26:31,985 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0143, 0.2500,  ..., 0.2500, 0.0131, 0.2500],
         [0.0064, 0.0095, 0.2500,  ..., 0.2500, 0.0088, 0.2500],
         [0.0064, 0.0095, 0.2500,  ..., 0.2500, 0.0088, 0.2500],
         [0.9792, 0.9667, 0.2500,  ..., 0.2500, 0.9692, 0.2500]],
        [[0.0096, 0.0123, 0.0089,  ..., 0.0121, 0.0150, 0.0096],
         [0.0096, 0.0123, 0.0089,  ..., 0.0121, 0.0150, 0.0096],
         [0.0096, 0.0173, 0.0094,  ..., 0.0143, 0.0202, 0.0096],
         [0.9712, 0.9581, 0.9727,  ..., 0.9615, 0.9497, 0.9713]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 215:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0186, 0.0193, 0.0188,  ..., 0.0194, 0.0190, 0.0180],
         [0.0186, 0.0193, 0.0188,  ..., 0.0194, 0.0190, 0.0180],
         [0.0186, 0.0193, 0.0188,  ..., 0.0194, 0.0190, 0.0180],
         [0.9443, 0.9421, 0.9435,  ..., 0.9417, 0.9430, 0.9461]],
        [[0.0176, 0.0180, 0.0171,  ..., 0.0171, 0.0183, 0.0175],
         [0.0176, 0.0180, 0.0171,  ..., 0.0171, 0.0183, 0.0175],
         [0.0176, 0.0180, 0.0171,  ..., 0.0171, 0.0183, 0.0175],
         [0.9473, 0.9460, 0.9488,  ..., 0.9486, 0.9451, 0.9476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:26:33,897 [Process: 0] Synchronize training processes
2024-08-16 14:26:33,898 [Process: 0] Evaluating...
2024-08-16 14:26:33,900 [Process: 0] EPOCH 216:
2024-08-16 14:26:33,902 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.2500, 0.2500,  ..., 0.0276, 0.2500, 0.2638],
         [0.0053, 0.2500, 0.2500,  ..., 0.0190, 0.2500, 0.2454],
         [0.0053, 0.2500, 0.2500,  ..., 0.0190, 0.2500, 0.2454],
         [0.9825, 0.2500, 0.2500,  ..., 0.9345, 0.2500, 0.2454]],
        [[0.0086, 0.0099, 0.0094,  ..., 0.0085, 0.0106, 0.0104],
         [0.0086, 0.0099, 0.0094,  ..., 0.0085, 0.0106, 0.0104],
         [0.0086, 0.0099, 0.0094,  ..., 0.0085, 0.0113, 0.0110],
         [0.9741, 0.9703, 0.9718,  ..., 0.9745, 0.9676, 0.9681]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 216:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0181, 0.0192, 0.0180,  ..., 0.0173, 0.0182, 0.0196],
         [0.0181, 0.0192, 0.0180,  ..., 0.0173, 0.0182, 0.0196],
         [0.0181, 0.0192, 0.0180,  ..., 0.0173, 0.0182, 0.0196],
         [0.9457, 0.9425, 0.9459,  ..., 0.9482, 0.9453, 0.9412]],
        [[0.0172, 0.0180, 0.0179,  ..., 0.0191, 0.0181, 0.0180],
         [0.0172, 0.0180, 0.0179,  ..., 0.0191, 0.0181, 0.0180],
         [0.0172, 0.0180, 0.0179,  ..., 0.0191, 0.0181, 0.0180],
         [0.9483, 0.9461, 0.9464,  ..., 0.9427, 0.9456, 0.9460]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0120, 0.0212, 0.2500,  ..., 0.0149, 0.2500, 0.0238],
         [0.0083, 0.0131, 0.2500,  ..., 0.0104, 0.2500, 0.0177],
         [0.0083, 0.0131, 0.2500,  ..., 0.0104, 0.2500, 0.0177],
         [0.9713, 0.9526, 0.2500,  ..., 0.9642, 0.2500, 0.9407]],
        [[0.0141, 0.0123, 0.0117,  ..., 0.0119, 0.0087, 0.0095],
         [0.0141, 0.0123, 0.0117,  ..., 0.0119, 0.0087, 0.0095],
         [0.0185, 0.0150, 0.0135,  ..., 0.0126, 0.0087, 0.0095],
         [0.9533, 0.9604, 0.9631,  ..., 0.9637, 0.9740, 0.9716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:35,817 [Process: 0] Synchronize training processes
2024-08-16 14:26:35,818 [Process: 0] Evaluating...
2024-08-16 14:26:35,820 [Process: 0] EPOCH 217:
2024-08-16 14:26:35,822 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 217:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0189, 0.0185, 0.0188,  ..., 0.0183, 0.0184, 0.0179],
         [0.0189, 0.0185, 0.0188,  ..., 0.0183, 0.0184, 0.0179],
         [0.0189, 0.0185, 0.0188,  ..., 0.0183, 0.0184, 0.0179],
         [0.9433, 0.9445, 0.9436,  ..., 0.9451, 0.9449, 0.9462]],
        [[0.0185, 0.0188, 0.0180,  ..., 0.0192, 0.0185, 0.0179],
         [0.0185, 0.0188, 0.0180,  ..., 0.0192, 0.0185, 0.0179],
         [0.0185, 0.0188, 0.0180,  ..., 0.0192, 0.0185, 0.0179],
         [0.9444, 0.9436, 0.9459,  ..., 0.9425, 0.9446, 0.9464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2284, 0.0140, 0.2500,  ..., 0.2500, 0.0188, 0.0195],
         [0.2284, 0.0106, 0.2500,  ..., 0.2500, 0.0112, 0.0125],
         [0.3147, 0.0106, 0.2500,  ..., 0.2500, 0.0112, 0.0125],
         [0.2284, 0.9648, 0.2500,  ..., 0.2500, 0.9589, 0.9555]],
        [[0.0091, 0.0106, 0.0121,  ..., 0.0106, 0.0100, 0.0121],
         [0.0091, 0.0106, 0.0121,  ..., 0.0106, 0.0100, 0.0121],
         [0.0091, 0.0134, 0.0166,  ..., 0.0106, 0.0100, 0.0133],
         [0.9726, 0.9654, 0.9591,  ..., 0.9682, 0.9701, 0.9625]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:37,738 [Process: 0] Synchronize training processes
2024-08-16 14:26:37,738 [Process: 0] Evaluating...
2024-08-16 14:26:37,740 [Process: 0] EPOCH 218:
2024-08-16 14:26:37,742 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 218:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0184, 0.0169, 0.0184,  ..., 0.0183, 0.0171, 0.0175],
         [0.0184, 0.0169, 0.0184,  ..., 0.0183, 0.0171, 0.0175],
         [0.0184, 0.0169, 0.0184,  ..., 0.0183, 0.0171, 0.0175],
         [0.9447, 0.9493, 0.9448,  ..., 0.9450, 0.9486, 0.9476]],
        [[0.0174, 0.0180, 0.0177,  ..., 0.0182, 0.0180, 0.0182],
         [0.0174, 0.0180, 0.0177,  ..., 0.0182, 0.0180, 0.0182],
         [0.0174, 0.0180, 0.0177,  ..., 0.0182, 0.0180, 0.0182],
         [0.9478, 0.9459, 0.9469,  ..., 0.9453, 0.9461, 0.9454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0162, 0.2500, 0.2492,  ..., 0.0109, 0.2500, 0.2500],
         [0.0115, 0.2500, 0.2492,  ..., 0.0076, 0.2500, 0.2500],
         [0.0115, 0.2500, 0.2523,  ..., 0.0076, 0.2500, 0.2500],
         [0.9608, 0.2500, 0.2492,  ..., 0.9739, 0.2500, 0.2500]],
        [[0.0100, 0.0089, 0.0108,  ..., 0.0098, 0.0104, 0.0075],
         [0.0100, 0.0089, 0.0108,  ..., 0.0098, 0.0104, 0.0075],
         [0.0100, 0.0089, 0.0108,  ..., 0.0098, 0.0104, 0.0075],
         [0.9700, 0.9734, 0.9676,  ..., 0.9706, 0.9689, 0.9775]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 219:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:26:39,644 [Process: 0] Synchronize training processes
2024-08-16 14:26:39,645 [Process: 0] Evaluating...
2024-08-16 14:26:39,647 [Process: 0] EPOCH 219:
2024-08-16 14:26:39,649 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0166, 0.0165, 0.0171,  ..., 0.0170, 0.0180, 0.0179],
         [0.0166, 0.0165, 0.0171,  ..., 0.0170, 0.0180, 0.0179],
         [0.0166, 0.0165, 0.0171,  ..., 0.0170, 0.0180, 0.0179],
         [0.9502, 0.9505, 0.9487,  ..., 0.9490, 0.9460, 0.9463]],
        [[0.0188, 0.0185, 0.0184,  ..., 0.0170, 0.0186, 0.0186],
         [0.0188, 0.0185, 0.0184,  ..., 0.0170, 0.0186, 0.0186],
         [0.0188, 0.0185, 0.0184,  ..., 0.0170, 0.0186, 0.0186],
         [0.9437, 0.9444, 0.9449,  ..., 0.9491, 0.9443, 0.9441]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0194, 0.0181,  ..., 0.0070, 0.0124, 0.0134],
         [0.0073, 0.0130, 0.0115,  ..., 0.0056, 0.0094, 0.0089],
         [0.0073, 0.0130, 0.0115,  ..., 0.0056, 0.0094, 0.0089],
         [0.9753, 0.9546, 0.9590,  ..., 0.9817, 0.9688, 0.9688]],
        [[0.0098, 0.0115, 0.0100,  ..., 0.0093, 0.0101, 0.0088],
         [0.0098, 0.0115, 0.0100,  ..., 0.0093, 0.0101, 0.0088],
         [0.0098, 0.0151, 0.0111,  ..., 0.0093, 0.0108, 0.0088],
         [0.9705, 0.9618, 0.9688,  ..., 0.9721, 0.9691, 0.9736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 220:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:26:41,550 [Process: 0] Synchronize training processes
2024-08-16 14:26:41,550 [Process: 0] Evaluating...
2024-08-16 14:26:41,552 [Process: 0] EPOCH 220:
2024-08-16 14:26:41,554 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0168, 0.0169, 0.0167,  ..., 0.0169, 0.0178, 0.0171],
         [0.0168, 0.0169, 0.0167,  ..., 0.0169, 0.0178, 0.0171],
         [0.0168, 0.0169, 0.0167,  ..., 0.0169, 0.0178, 0.0171],
         [0.9497, 0.9493, 0.9499,  ..., 0.9494, 0.9467, 0.9488]],
        [[0.0177, 0.0188, 0.0196,  ..., 0.0191, 0.0195, 0.0178],
         [0.0177, 0.0188, 0.0196,  ..., 0.0191, 0.0195, 0.0178],
         [0.0177, 0.0188, 0.0196,  ..., 0.0191, 0.0195, 0.0178],
         [0.9469, 0.9435, 0.9412,  ..., 0.9426, 0.9416, 0.9466]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0236, 0.0083, 0.2500,  ..., 0.2445, 0.0120, 0.2500],
         [0.0164, 0.0068, 0.2500,  ..., 0.2445, 0.0086, 0.2500],
         [0.0164, 0.0068, 0.2500,  ..., 0.2665, 0.0086, 0.2500],
         [0.9436, 0.9781, 0.2500,  ..., 0.2445, 0.9708, 0.2500]],
        [[0.0114, 0.0119, 0.0105,  ..., 0.0109, 0.0091, 0.0101],
         [0.0114, 0.0119, 0.0105,  ..., 0.0109, 0.0091, 0.0101],
         [0.0127, 0.0133, 0.0121,  ..., 0.0109, 0.0091, 0.0127],
         [0.9644, 0.9628, 0.9669,  ..., 0.9672, 0.9728, 0.9671]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 221:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:26:43,451 [Process: 0] Synchronize training processes
2024-08-16 14:26:43,452 [Process: 0] Evaluating...
2024-08-16 14:26:43,454 [Process: 0] EPOCH 221:
2024-08-16 14:26:43,456 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:26:45,360 [Process: 0] Synchronize training processes
2024-08-16 14:26:45,361 [Process: 0] Evaluating...
2024-08-16 14:26:45,369 [Process: 0] EPOCH 222:
2024-08-16 14:26:45,371 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0167, 0.0172, 0.0167,  ..., 0.0174, 0.0168, 0.0168],
         [0.0167, 0.0172, 0.0167,  ..., 0.0174, 0.0168, 0.0168],
         [0.0167, 0.0172, 0.0167,  ..., 0.0174, 0.0168, 0.0168],
         [0.9500, 0.9484, 0.9500,  ..., 0.9479, 0.9497, 0.9495]],
        [[0.0181, 0.0172, 0.0175,  ..., 0.0170, 0.0189, 0.0173],
         [0.0181, 0.0172, 0.0175,  ..., 0.0170, 0.0189, 0.0173],
         [0.0181, 0.0172, 0.0175,  ..., 0.0170, 0.0189, 0.0173],
         [0.9458, 0.9484, 0.9475,  ..., 0.9489, 0.9432, 0.9481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3092, 0.2833, 0.0047,  ..., 0.2500, 0.2500, 0.2500],
         [0.2303, 0.2389, 0.0047,  ..., 0.2500, 0.2500, 0.2500],
         [0.2303, 0.2389, 0.0047,  ..., 0.2500, 0.2500, 0.2500],
         [0.2303, 0.2389, 0.9859,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0099, 0.0128, 0.0086,  ..., 0.0105, 0.0114, 0.0087],
         [0.0099, 0.0128, 0.0086,  ..., 0.0105, 0.0114, 0.0087],
         [0.0111, 0.0154, 0.0086,  ..., 0.0110, 0.0155, 0.0087],
         [0.9691, 0.9591, 0.9741,  ..., 0.9680, 0.9618, 0.9740]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 222:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:26:47,274 [Process: 0] Synchronize training processes
2024-08-16 14:26:47,274 [Process: 0] Evaluating...
2024-08-16 14:26:47,276 [Process: 0] EPOCH 223:
2024-08-16 14:26:47,278 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0182, 0.0168, 0.0167,  ..., 0.0172, 0.0181, 0.0162],
         [0.0182, 0.0168, 0.0167,  ..., 0.0172, 0.0181, 0.0162],
         [0.0182, 0.0168, 0.0167,  ..., 0.0172, 0.0181, 0.0162],
         [0.9455, 0.9495, 0.9498,  ..., 0.9483, 0.9457, 0.9514]],
        [[0.0185, 0.0177, 0.0185,  ..., 0.0175, 0.0174, 0.0177],
         [0.0185, 0.0177, 0.0185,  ..., 0.0175, 0.0174, 0.0177],
         [0.0185, 0.0177, 0.0185,  ..., 0.0175, 0.0174, 0.0177],
         [0.9445, 0.9469, 0.9444,  ..., 0.9475, 0.9478, 0.9469]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0259, 0.0292, 0.2500,  ..., 0.0263, 0.2707, 0.2500],
         [0.0105, 0.0112, 0.2500,  ..., 0.0107, 0.2431, 0.2500],
         [0.0105, 0.0112, 0.2500,  ..., 0.0103, 0.2431, 0.2500],
         [0.9531, 0.9483, 0.2500,  ..., 0.9527, 0.2431, 0.2500]],
        [[0.0101, 0.0116, 0.0098,  ..., 0.0121, 0.0117, 0.0095],
         [0.0101, 0.0116, 0.0098,  ..., 0.0121, 0.0117, 0.0095],
         [0.0108, 0.0142, 0.0098,  ..., 0.0137, 0.0128, 0.0095],
         [0.9690, 0.9626, 0.9707,  ..., 0.9620, 0.9638, 0.9715]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 223:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:26:49,177 [Process: 0] Synchronize training processes
2024-08-16 14:26:49,177 [Process: 0] Evaluating...
2024-08-16 14:26:49,179 [Process: 0] EPOCH 224:
2024-08-16 14:26:49,181 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0165, 0.0160, 0.0181,  ..., 0.0174, 0.0165, 0.0185],
         [0.0165, 0.0160, 0.0181,  ..., 0.0174, 0.0165, 0.0185],
         [0.0165, 0.0160, 0.0181,  ..., 0.0174, 0.0165, 0.0185],
         [0.9505, 0.9519, 0.9456,  ..., 0.9478, 0.9506, 0.9445]],
        [[0.0184, 0.0162, 0.0165,  ..., 0.0172, 0.0168, 0.0169],
         [0.0184, 0.0162, 0.0165,  ..., 0.0172, 0.0168, 0.0169],
         [0.0184, 0.0162, 0.0165,  ..., 0.0172, 0.0168, 0.0169],
         [0.9448, 0.9513, 0.9505,  ..., 0.9483, 0.9497, 0.9492]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0087, 0.2500,  ..., 0.2540, 0.0074, 0.2500],
         [0.2500, 0.0062, 0.2500,  ..., 0.2487, 0.0073, 0.2500],
         [0.2500, 0.0062, 0.2500,  ..., 0.2487, 0.0073, 0.2500],
         [0.2500, 0.9789, 0.2500,  ..., 0.2487, 0.9781, 0.2500]],
        [[0.0081, 0.0105, 0.0083,  ..., 0.0111, 0.0104, 0.0094],
         [0.0081, 0.0105, 0.0083,  ..., 0.0111, 0.0104, 0.0094],
         [0.0081, 0.0108, 0.0083,  ..., 0.0143, 0.0108, 0.0094],
         [0.9756, 0.9681, 0.9750,  ..., 0.9635, 0.9685, 0.9717]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 224:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:26:51,076 [Process: 0] Synchronize training processes
2024-08-16 14:26:51,076 [Process: 0] Evaluating...
2024-08-16 14:26:51,078 [Process: 0] EPOCH 225:
2024-08-16 14:26:51,080 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0163, 0.0171, 0.0165,  ..., 0.0160, 0.0163, 0.0183],
         [0.0163, 0.0171, 0.0165,  ..., 0.0160, 0.0163, 0.0183],
         [0.0163, 0.0171, 0.0165,  ..., 0.0160, 0.0163, 0.0183],
         [0.9510, 0.9486, 0.9506,  ..., 0.9521, 0.9511, 0.9451]],
        [[0.0170, 0.0179, 0.0174,  ..., 0.0179, 0.0164, 0.0163],
         [0.0170, 0.0179, 0.0174,  ..., 0.0179, 0.0164, 0.0163],
         [0.0170, 0.0179, 0.0174,  ..., 0.0179, 0.0164, 0.0163],
         [0.9489, 0.9464, 0.9477,  ..., 0.9464, 0.9509, 0.9511]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0157, 0.0169,  ..., 0.2500, 0.0102, 0.2178],
         [0.2500, 0.0059, 0.0116,  ..., 0.2500, 0.0074, 0.2178],
         [0.2500, 0.0057, 0.0116,  ..., 0.2500, 0.0074, 0.3465],
         [0.2500, 0.9727, 0.9599,  ..., 0.2500, 0.9750, 0.2178]],
        [[0.0109, 0.0114, 0.0113,  ..., 0.0100, 0.0098, 0.0126],
         [0.0109, 0.0114, 0.0113,  ..., 0.0100, 0.0098, 0.0126],
         [0.0126, 0.0147, 0.0126,  ..., 0.0109, 0.0111, 0.0174],
         [0.9656, 0.9625, 0.9649,  ..., 0.9690, 0.9693, 0.9574]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 225:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:26:52,998 [Process: 0] Synchronize training processes
2024-08-16 14:26:52,998 [Process: 0] Evaluating...
2024-08-16 14:26:53,000 [Process: 0] EPOCH 226:
2024-08-16 14:26:53,002 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0167, 0.0164, 0.0169,  ..., 0.0159, 0.0181, 0.0170],
         [0.0167, 0.0164, 0.0169,  ..., 0.0159, 0.0181, 0.0170],
         [0.0167, 0.0164, 0.0169,  ..., 0.0159, 0.0181, 0.0170],
         [0.9499, 0.9507, 0.9493,  ..., 0.9523, 0.9456, 0.9489]],
        [[0.0165, 0.0173, 0.0177,  ..., 0.0189, 0.0188, 0.0167],
         [0.0165, 0.0173, 0.0177,  ..., 0.0189, 0.0188, 0.0167],
         [0.0165, 0.0173, 0.0177,  ..., 0.0189, 0.0188, 0.0167],
         [0.9505, 0.9481, 0.9469,  ..., 0.9434, 0.9436, 0.9498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0368, 0.2500, 0.0171,  ..., 0.0104, 0.0083, 0.2500],
         [0.0127, 0.2500, 0.0066,  ..., 0.0080, 0.0082, 0.2500],
         [0.0127, 0.2500, 0.0066,  ..., 0.0080, 0.0082, 0.2500],
         [0.9378, 0.2500, 0.9698,  ..., 0.9736, 0.9753, 0.2500]],
        [[0.0115, 0.0111, 0.0106,  ..., 0.0094, 0.0100, 0.0119],
         [0.0115, 0.0111, 0.0106,  ..., 0.0094, 0.0100, 0.0119],
         [0.0131, 0.0113, 0.0131,  ..., 0.0094, 0.0100, 0.0140],
         [0.9639, 0.9665, 0.9658,  ..., 0.9717, 0.9700, 0.9622]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 226:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:26:54,912 [Process: 0] Synchronize training processes
2024-08-16 14:26:54,912 [Process: 0] Evaluating...
2024-08-16 14:26:54,914 [Process: 0] EPOCH 227:
2024-08-16 14:26:54,916 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0158, 0.0169, 0.0163,  ..., 0.0171, 0.0178, 0.0173],
         [0.0158, 0.0169, 0.0163,  ..., 0.0171, 0.0178, 0.0173],
         [0.0158, 0.0169, 0.0163,  ..., 0.0171, 0.0178, 0.0173],
         [0.9526, 0.9494, 0.9510,  ..., 0.9487, 0.9466, 0.9481]],
        [[0.0168, 0.0174, 0.0172,  ..., 0.0166, 0.0176, 0.0167],
         [0.0168, 0.0174, 0.0172,  ..., 0.0166, 0.0176, 0.0167],
         [0.0168, 0.0174, 0.0172,  ..., 0.0166, 0.0176, 0.0167],
         [0.9497, 0.9478, 0.9484,  ..., 0.9502, 0.9472, 0.9498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2506, 0.2509, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2498, 0.2497, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2498, 0.2497, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2498, 0.2497, 0.2500,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0074, 0.0110, 0.0083,  ..., 0.0090, 0.0099, 0.0077],
         [0.0074, 0.0110, 0.0083,  ..., 0.0090, 0.0099, 0.0077],
         [0.0074, 0.0117, 0.0083,  ..., 0.0090, 0.0111, 0.0077],
         [0.9779, 0.9662, 0.9751,  ..., 0.9731, 0.9690, 0.9769]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 227:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0163, 0.0172, 0.0161,  ..., 0.0168, 0.0163, 0.0171],
         [0.0163, 0.0172, 0.0161,  ..., 0.0168, 0.0163, 0.0171],
         [0.0163, 0.0172, 0.0161,  ..., 0.0168, 0.0163, 0.0171],
         [0.9510, 0.9483, 0.9517,  ..., 0.9496, 0.9510, 0.9488]],
        [[0.0160, 0.0167, 0.0175,  ..., 0.0165, 0.0170, 0.0176],
         [0.0160, 0.0167, 0.0175,  ..., 0.0165, 0.0170, 0.0176],
         [0.0160, 0.0167, 0.0175,  ..., 0.0165, 0.0170, 0.0176],
         [0.9519, 0.9499, 0.9475,  ..., 0.9504, 0.9490, 0.9472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:56,812 [Process: 0] Synchronize training processes
2024-08-16 14:26:56,812 [Process: 0] Evaluating...
2024-08-16 14:26:56,814 [Process: 0] EPOCH 228:
2024-08-16 14:26:56,816 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0182, 0.0143, 0.0166,  ..., 0.2500, 0.0088, 0.0170],
         [0.0076, 0.0114, 0.0114,  ..., 0.2500, 0.0069, 0.0078],
         [0.0076, 0.0114, 0.0114,  ..., 0.2500, 0.0069, 0.0078],
         [0.9667, 0.9629, 0.9605,  ..., 0.2500, 0.9775, 0.9673]],
        [[0.0095, 0.0122, 0.0126,  ..., 0.0109, 0.0102, 0.0101],
         [0.0095, 0.0122, 0.0126,  ..., 0.0109, 0.0102, 0.0101],
         [0.0095, 0.0165, 0.0167,  ..., 0.0130, 0.0110, 0.0101],
         [0.9716, 0.9592, 0.9580,  ..., 0.9651, 0.9687, 0.9697]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 228:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0159, 0.0176, 0.0165,  ..., 0.0173, 0.0164, 0.0177],
         [0.0159, 0.0176, 0.0165,  ..., 0.0173, 0.0164, 0.0177],
         [0.0159, 0.0176, 0.0165,  ..., 0.0173, 0.0164, 0.0177],
         [0.9523, 0.9473, 0.9504,  ..., 0.9480, 0.9508, 0.9468]],
        [[0.0167, 0.0155, 0.0169,  ..., 0.0171, 0.0163, 0.0176],
         [0.0167, 0.0155, 0.0169,  ..., 0.0171, 0.0163, 0.0176],
         [0.0167, 0.0155, 0.0169,  ..., 0.0171, 0.0163, 0.0176],
         [0.9500, 0.9534, 0.9492,  ..., 0.9487, 0.9512, 0.9472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:26:58,725 [Process: 0] Synchronize training processes
2024-08-16 14:26:58,725 [Process: 0] Evaluating...
2024-08-16 14:26:58,727 [Process: 0] EPOCH 229:
2024-08-16 14:26:58,729 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0129,  ..., 0.0129, 0.0183, 0.2784],
         [0.2500, 0.2500, 0.0105,  ..., 0.0106, 0.0121, 0.2405],
         [0.2500, 0.2500, 0.0105,  ..., 0.0106, 0.0121, 0.2405],
         [0.2500, 0.2500, 0.9661,  ..., 0.9658, 0.9574, 0.2405]],
        [[0.0115, 0.0109, 0.0110,  ..., 0.0085, 0.0120, 0.0092],
         [0.0115, 0.0109, 0.0110,  ..., 0.0085, 0.0120, 0.0092],
         [0.0151, 0.0115, 0.0110,  ..., 0.0085, 0.0151, 0.0092],
         [0.9618, 0.9666, 0.9671,  ..., 0.9744, 0.9608, 0.9725]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 229:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0157, 0.0158, 0.0168,  ..., 0.0166, 0.0162, 0.0165],
         [0.0157, 0.0158, 0.0168,  ..., 0.0166, 0.0162, 0.0165],
         [0.0157, 0.0158, 0.0168,  ..., 0.0166, 0.0162, 0.0165],
         [0.9529, 0.9527, 0.9496,  ..., 0.9501, 0.9515, 0.9506]],
        [[0.0167, 0.0172, 0.0165,  ..., 0.0164, 0.0176, 0.0165],
         [0.0167, 0.0172, 0.0165,  ..., 0.0164, 0.0176, 0.0165],
         [0.0167, 0.0172, 0.0165,  ..., 0.0164, 0.0176, 0.0165],
         [0.9499, 0.9485, 0.9505,  ..., 0.9507, 0.9471, 0.9504]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:00,655 [Process: 0] Synchronize training processes
2024-08-16 14:27:00,656 [Process: 0] Evaluating...
2024-08-16 14:27:00,658 [Process: 0] EPOCH 230:
2024-08-16 14:27:00,660 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0078, 0.2500,  ..., 0.0096, 0.2500, 0.2287],
         [0.2500, 0.0073, 0.2500,  ..., 0.0067, 0.2500, 0.2287],
         [0.2500, 0.0073, 0.2500,  ..., 0.0067, 0.2500, 0.3139],
         [0.2500, 0.9776, 0.2500,  ..., 0.9770, 0.2500, 0.2287]],
        [[0.0113, 0.0086, 0.0079,  ..., 0.0099, 0.0122, 0.0078],
         [0.0113, 0.0086, 0.0079,  ..., 0.0099, 0.0122, 0.0078],
         [0.0145, 0.0086, 0.0079,  ..., 0.0099, 0.0158, 0.0078],
         [0.9629, 0.9742, 0.9762,  ..., 0.9703, 0.9598, 0.9766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 230:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0170, 0.0163, 0.0176,  ..., 0.0154, 0.0167, 0.0168],
         [0.0170, 0.0163, 0.0176,  ..., 0.0154, 0.0167, 0.0168],
         [0.0170, 0.0163, 0.0176,  ..., 0.0154, 0.0167, 0.0168],
         [0.9491, 0.9511, 0.9473,  ..., 0.9537, 0.9500, 0.9496]],
        [[0.0167, 0.0170, 0.0161,  ..., 0.0170, 0.0160, 0.0158],
         [0.0167, 0.0170, 0.0161,  ..., 0.0170, 0.0160, 0.0158],
         [0.0167, 0.0170, 0.0161,  ..., 0.0170, 0.0160, 0.0158],
         [0.9500, 0.9491, 0.9516,  ..., 0.9491, 0.9519, 0.9527]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:02,557 [Process: 0] Synchronize training processes
2024-08-16 14:27:02,557 [Process: 0] Evaluating...
2024-08-16 14:27:02,559 [Process: 0] EPOCH 231:
2024-08-16 14:27:02,561 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0212, 0.2500, 0.0051,  ..., 0.2625, 0.2500, 0.2500],
         [0.0096, 0.2500, 0.0049,  ..., 0.2458, 0.2500, 0.2500],
         [0.0096, 0.2500, 0.0049,  ..., 0.2458, 0.2500, 0.2500],
         [0.9596, 0.2500, 0.9851,  ..., 0.2458, 0.2500, 0.2500]],
        [[0.0090, 0.0126, 0.0080,  ..., 0.0090, 0.0105, 0.0093],
         [0.0090, 0.0126, 0.0080,  ..., 0.0090, 0.0105, 0.0093],
         [0.0090, 0.0177, 0.0080,  ..., 0.0090, 0.0116, 0.0093],
         [0.9731, 0.9572, 0.9760,  ..., 0.9729, 0.9674, 0.9721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 231:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0163, 0.0169, 0.0162,  ..., 0.0153, 0.0176, 0.0175],
         [0.0163, 0.0169, 0.0162,  ..., 0.0153, 0.0176, 0.0175],
         [0.0163, 0.0169, 0.0162,  ..., 0.0153, 0.0176, 0.0175],
         [0.9510, 0.9492, 0.9514,  ..., 0.9541, 0.9471, 0.9475]],
        [[0.0161, 0.0161, 0.0171,  ..., 0.0160, 0.0167, 0.0158],
         [0.0161, 0.0161, 0.0171,  ..., 0.0160, 0.0167, 0.0158],
         [0.0161, 0.0161, 0.0171,  ..., 0.0160, 0.0167, 0.0158],
         [0.9516, 0.9517, 0.9488,  ..., 0.9521, 0.9500, 0.9525]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:04,552 [Process: 0] Synchronize training processes
2024-08-16 14:27:04,553 [Process: 0] Evaluating...
2024-08-16 14:27:04,561 [Process: 0] EPOCH 232:
2024-08-16 14:27:04,563 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2561, 0.2500, 0.0119,  ..., 0.2430, 0.2500, 0.0099],
         [0.2480, 0.2500, 0.0088,  ..., 0.2430, 0.2500, 0.0072],
         [0.2480, 0.2500, 0.0088,  ..., 0.2711, 0.2500, 0.0072],
         [0.2480, 0.2500, 0.9704,  ..., 0.2430, 0.2500, 0.9757]],
        [[0.0103, 0.0085, 0.0095,  ..., 0.0090, 0.0094, 0.0084],
         [0.0103, 0.0085, 0.0095,  ..., 0.0090, 0.0094, 0.0084],
         [0.0125, 0.0085, 0.0116,  ..., 0.0090, 0.0094, 0.0084],
         [0.9669, 0.9744, 0.9694,  ..., 0.9730, 0.9717, 0.9749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 232:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0167, 0.0161, 0.0146,  ..., 0.0160, 0.0156, 0.0158],
         [0.0167, 0.0161, 0.0146,  ..., 0.0160, 0.0156, 0.0158],
         [0.0167, 0.0161, 0.0146,  ..., 0.0160, 0.0156, 0.0158],
         [0.9500, 0.9516, 0.9563,  ..., 0.9520, 0.9532, 0.9527]],
        [[0.0157, 0.0165, 0.0164,  ..., 0.0162, 0.0170, 0.0173],
         [0.0157, 0.0165, 0.0164,  ..., 0.0162, 0.0170, 0.0173],
         [0.0157, 0.0165, 0.0164,  ..., 0.0162, 0.0170, 0.0173],
         [0.9529, 0.9505, 0.9509,  ..., 0.9514, 0.9490, 0.9480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:06,609 [Process: 0] Synchronize training processes
2024-08-16 14:27:06,609 [Process: 0] Evaluating...
2024-08-16 14:27:06,611 [Process: 0] EPOCH 233:
2024-08-16 14:27:06,613 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0195, 0.0131,  ..., 0.0154, 0.0115, 0.2500],
         [0.0051, 0.0096, 0.0079,  ..., 0.0076, 0.0085, 0.2500],
         [0.0051, 0.0096, 0.0079,  ..., 0.0076, 0.0085, 0.2500],
         [0.9843, 0.9613, 0.9712,  ..., 0.9694, 0.9715, 0.2500]],
        [[0.0082, 0.0105, 0.0089,  ..., 0.0097, 0.0120, 0.0116],
         [0.0082, 0.0105, 0.0089,  ..., 0.0097, 0.0120, 0.0116],
         [0.0082, 0.0132, 0.0089,  ..., 0.0108, 0.0172, 0.0162],
         [0.9754, 0.9657, 0.9734,  ..., 0.9698, 0.9588, 0.9606]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 233:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0158, 0.0170, 0.0160,  ..., 0.0166, 0.0162, 0.0155],
         [0.0158, 0.0170, 0.0160,  ..., 0.0166, 0.0162, 0.0155],
         [0.0158, 0.0170, 0.0160,  ..., 0.0166, 0.0162, 0.0155],
         [0.9525, 0.9490, 0.9519,  ..., 0.9501, 0.9514, 0.9534]],
        [[0.0152, 0.0165, 0.0164,  ..., 0.0160, 0.0153, 0.0153],
         [0.0152, 0.0165, 0.0164,  ..., 0.0160, 0.0153, 0.0153],
         [0.0152, 0.0165, 0.0164,  ..., 0.0160, 0.0153, 0.0153],
         [0.9544, 0.9506, 0.9507,  ..., 0.9521, 0.9540, 0.9540]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:08,549 [Process: 0] Synchronize training processes
2024-08-16 14:27:08,550 [Process: 0] Evaluating...
2024-08-16 14:27:08,552 [Process: 0] EPOCH 234:
2024-08-16 14:27:08,554 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0170, 0.2500, 0.2500,  ..., 0.0197, 0.0118, 0.2500],
         [0.0095, 0.2500, 0.2500,  ..., 0.0085, 0.0098, 0.2500],
         [0.0095, 0.2500, 0.2500,  ..., 0.0085, 0.0098, 0.2500],
         [0.9641, 0.2500, 0.2500,  ..., 0.9633, 0.9686, 0.2500]],
        [[0.0093, 0.0094, 0.0094,  ..., 0.0096, 0.0101, 0.0087],
         [0.0093, 0.0094, 0.0094,  ..., 0.0096, 0.0101, 0.0087],
         [0.0093, 0.0094, 0.0106,  ..., 0.0098, 0.0123, 0.0087],
         [0.9721, 0.9719, 0.9706,  ..., 0.9709, 0.9674, 0.9738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 234:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0156, 0.0168, 0.0165,  ..., 0.0170, 0.0167, 0.0166],
         [0.0156, 0.0168, 0.0165,  ..., 0.0170, 0.0167, 0.0166],
         [0.0156, 0.0168, 0.0165,  ..., 0.0170, 0.0167, 0.0166],
         [0.9531, 0.9497, 0.9505,  ..., 0.9491, 0.9500, 0.9502]],
        [[0.0159, 0.0165, 0.0156,  ..., 0.0167, 0.0158, 0.0155],
         [0.0159, 0.0165, 0.0156,  ..., 0.0167, 0.0158, 0.0155],
         [0.0159, 0.0165, 0.0156,  ..., 0.0167, 0.0158, 0.0155],
         [0.9523, 0.9506, 0.9533,  ..., 0.9500, 0.9527, 0.9536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:10,494 [Process: 0] Synchronize training processes
2024-08-16 14:27:10,495 [Process: 0] Evaluating...
2024-08-16 14:27:10,497 [Process: 0] EPOCH 235:
2024-08-16 14:27:10,499 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0212, 0.0174, 0.0257,  ..., 0.2500, 0.2500, 0.0153],
         [0.0096, 0.0113, 0.0117,  ..., 0.2500, 0.2500, 0.0076],
         [0.0096, 0.0113, 0.0117,  ..., 0.2500, 0.2500, 0.0076],
         [0.9597, 0.9600, 0.9508,  ..., 0.2500, 0.2500, 0.9695]],
        [[0.0083, 0.0081, 0.0105,  ..., 0.0088, 0.0087, 0.0092],
         [0.0083, 0.0081, 0.0105,  ..., 0.0088, 0.0087, 0.0092],
         [0.0083, 0.0083, 0.0114,  ..., 0.0088, 0.0087, 0.0094],
         [0.9751, 0.9754, 0.9676,  ..., 0.9737, 0.9739, 0.9723]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 235:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0153, 0.0158, 0.0160,  ..., 0.0158, 0.0162, 0.0162],
         [0.0153, 0.0158, 0.0160,  ..., 0.0158, 0.0162, 0.0162],
         [0.0153, 0.0158, 0.0160,  ..., 0.0158, 0.0162, 0.0162],
         [0.9542, 0.9525, 0.9520,  ..., 0.9526, 0.9513, 0.9513]],
        [[0.0166, 0.0159, 0.0156,  ..., 0.0153, 0.0153, 0.0156],
         [0.0166, 0.0159, 0.0156,  ..., 0.0153, 0.0153, 0.0156],
         [0.0166, 0.0159, 0.0156,  ..., 0.0153, 0.0153, 0.0156],
         [0.9501, 0.9523, 0.9532,  ..., 0.9541, 0.9541, 0.9532]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:12,506 [Process: 0] Synchronize training processes
2024-08-16 14:27:12,506 [Process: 0] Evaluating...
2024-08-16 14:27:12,508 [Process: 0] EPOCH 236:
2024-08-16 14:27:12,510 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0145, 0.2500, 0.0121,  ..., 0.0219, 0.0131, 0.0210],
         [0.0074, 0.2500, 0.0090,  ..., 0.0089, 0.0071, 0.0099],
         [0.0074, 0.2500, 0.0090,  ..., 0.0089, 0.0071, 0.0099],
         [0.9707, 0.2500, 0.9699,  ..., 0.9603, 0.9727, 0.9593]],
        [[0.0090, 0.0107, 0.0089,  ..., 0.0095, 0.0103, 0.0081],
         [0.0090, 0.0107, 0.0089,  ..., 0.0095, 0.0103, 0.0081],
         [0.0090, 0.0135, 0.0089,  ..., 0.0102, 0.0125, 0.0081],
         [0.9731, 0.9652, 0.9733,  ..., 0.9707, 0.9668, 0.9756]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 236:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0157, 0.0168, 0.0153,  ..., 0.0153, 0.0155, 0.0156],
         [0.0157, 0.0168, 0.0153,  ..., 0.0153, 0.0155, 0.0156],
         [0.0157, 0.0168, 0.0153,  ..., 0.0153, 0.0155, 0.0156],
         [0.9529, 0.9497, 0.9542,  ..., 0.9541, 0.9535, 0.9532]],
        [[0.0163, 0.0169, 0.0164,  ..., 0.0154, 0.0158, 0.0162],
         [0.0163, 0.0169, 0.0164,  ..., 0.0154, 0.0158, 0.0162],
         [0.0163, 0.0169, 0.0164,  ..., 0.0154, 0.0158, 0.0162],
         [0.9511, 0.9494, 0.9508,  ..., 0.9539, 0.9526, 0.9514]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:14,596 [Process: 0] Synchronize training processes
2024-08-16 14:27:14,596 [Process: 0] Evaluating...
2024-08-16 14:27:14,598 [Process: 0] EPOCH 237:
2024-08-16 14:27:14,600 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.0149, 0.0177],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.0081, 0.0090],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.0081, 0.0090],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.9688, 0.9643]],
        [[0.0069, 0.0107, 0.0090,  ..., 0.0105, 0.0091, 0.0094],
         [0.0069, 0.0107, 0.0090,  ..., 0.0105, 0.0091, 0.0094],
         [0.0069, 0.0149, 0.0090,  ..., 0.0124, 0.0108, 0.0098],
         [0.9793, 0.9638, 0.9729,  ..., 0.9666, 0.9709, 0.9714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 237:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0145, 0.0157, 0.0159,  ..., 0.0150, 0.0161, 0.0158],
         [0.0145, 0.0157, 0.0159,  ..., 0.0150, 0.0161, 0.0158],
         [0.0145, 0.0157, 0.0159,  ..., 0.0150, 0.0161, 0.0158],
         [0.9565, 0.9529, 0.9524,  ..., 0.9551, 0.9516, 0.9526]],
        [[0.0165, 0.0163, 0.0162,  ..., 0.0169, 0.0162, 0.0164],
         [0.0165, 0.0163, 0.0162,  ..., 0.0169, 0.0162, 0.0164],
         [0.0165, 0.0163, 0.0162,  ..., 0.0169, 0.0162, 0.0164],
         [0.9504, 0.9510, 0.9515,  ..., 0.9494, 0.9513, 0.9509]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:16,705 [Process: 0] Synchronize training processes
2024-08-16 14:27:16,706 [Process: 0] Evaluating...
2024-08-16 14:27:16,708 [Process: 0] EPOCH 238:
2024-08-16 14:27:16,710 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0157,  ..., 0.0132, 0.2500, 0.0182],
         [0.2500, 0.2500, 0.0076,  ..., 0.0101, 0.2500, 0.0092],
         [0.2500, 0.2500, 0.0075,  ..., 0.0101, 0.2500, 0.0092],
         [0.2500, 0.2500, 0.9692,  ..., 0.9666, 0.2500, 0.9633]],
        [[0.0091, 0.0099, 0.0079,  ..., 0.0073, 0.0086, 0.0094],
         [0.0091, 0.0099, 0.0079,  ..., 0.0073, 0.0086, 0.0094],
         [0.0091, 0.0114, 0.0079,  ..., 0.0073, 0.0087, 0.0128],
         [0.9728, 0.9687, 0.9764,  ..., 0.9780, 0.9740, 0.9683]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 238:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0158, 0.0171, 0.0166,  ..., 0.0166, 0.0170, 0.0173],
         [0.0158, 0.0171, 0.0166,  ..., 0.0166, 0.0170, 0.0173],
         [0.0158, 0.0171, 0.0166,  ..., 0.0166, 0.0170, 0.0173],
         [0.9525, 0.9488, 0.9502,  ..., 0.9502, 0.9489, 0.9481]],
        [[0.0141, 0.0144, 0.0141,  ..., 0.0145, 0.0143, 0.0146],
         [0.0141, 0.0144, 0.0141,  ..., 0.0145, 0.0143, 0.0146],
         [0.0141, 0.0144, 0.0141,  ..., 0.0145, 0.0143, 0.0146],
         [0.9578, 0.9569, 0.9577,  ..., 0.9565, 0.9571, 0.9563]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:18,820 [Process: 0] Synchronize training processes
2024-08-16 14:27:18,820 [Process: 0] Evaluating...
2024-08-16 14:27:18,822 [Process: 0] EPOCH 239:
2024-08-16 14:27:18,824 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0160, 0.2500, 0.2500,  ..., 0.0136, 0.0087, 0.2519],
         [0.0087, 0.2500, 0.2500,  ..., 0.0065, 0.0070, 0.2494],
         [0.0087, 0.2500, 0.2500,  ..., 0.0065, 0.0070, 0.2494],
         [0.9667, 0.2500, 0.2500,  ..., 0.9733, 0.9774, 0.2494]],
        [[0.0069, 0.0100, 0.0089,  ..., 0.0079, 0.0081, 0.0084],
         [0.0069, 0.0100, 0.0089,  ..., 0.0079, 0.0081, 0.0084],
         [0.0069, 0.0138, 0.0101,  ..., 0.0079, 0.0081, 0.0084],
         [0.9792, 0.9662, 0.9721,  ..., 0.9762, 0.9758, 0.9747]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 239:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0139, 0.0144, 0.0148,  ..., 0.0164, 0.0153, 0.0160],
         [0.0139, 0.0144, 0.0148,  ..., 0.0164, 0.0153, 0.0160],
         [0.0139, 0.0144, 0.0148,  ..., 0.0164, 0.0153, 0.0160],
         [0.9583, 0.9569, 0.9555,  ..., 0.9507, 0.9542, 0.9521]],
        [[0.0166, 0.0154, 0.0164,  ..., 0.0173, 0.0174, 0.0166],
         [0.0166, 0.0154, 0.0164,  ..., 0.0173, 0.0174, 0.0166],
         [0.0166, 0.0154, 0.0164,  ..., 0.0173, 0.0174, 0.0166],
         [0.9501, 0.9537, 0.9508,  ..., 0.9482, 0.9478, 0.9503]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:20,958 [Process: 0] Synchronize training processes
2024-08-16 14:27:20,958 [Process: 0] Evaluating...
2024-08-16 14:27:20,960 [Process: 0] EPOCH 240:
2024-08-16 14:27:20,962 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0093, 0.2500, 0.2500,  ..., 0.2500, 0.0115, 0.0208],
         [0.0063, 0.2500, 0.2500,  ..., 0.2500, 0.0085, 0.0106],
         [0.0063, 0.2500, 0.2500,  ..., 0.2500, 0.0085, 0.0106],
         [0.9781, 0.2500, 0.2500,  ..., 0.2500, 0.9716, 0.9580]],
        [[0.0090, 0.0091, 0.0097,  ..., 0.0083, 0.0098, 0.0090],
         [0.0090, 0.0091, 0.0097,  ..., 0.0083, 0.0098, 0.0090],
         [0.0098, 0.0091, 0.0110,  ..., 0.0083, 0.0114, 0.0090],
         [0.9723, 0.9728, 0.9696,  ..., 0.9751, 0.9690, 0.9731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 240:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 14:27:23,110 [Process: 0] Synchronize training processes
2024-08-16 14:27:23,110 [Process: 0] Evaluating...
2024-08-16 14:27:23,112 [Process: 0] EPOCH 241:
2024-08-16 14:27:23,114 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.0157, 0.0148, 0.0134,  ..., 0.0149, 0.0179, 0.0158],
         [0.0157, 0.0148, 0.0134,  ..., 0.0149, 0.0179, 0.0158],
         [0.0157, 0.0148, 0.0134,  ..., 0.0149, 0.0179, 0.0158],
         [0.9530, 0.9557, 0.9597,  ..., 0.9553, 0.9463, 0.9526]],
        [[0.0169, 0.0168, 0.0155,  ..., 0.0160, 0.0163, 0.0172],
         [0.0169, 0.0168, 0.0155,  ..., 0.0160, 0.0163, 0.0172],
         [0.0169, 0.0168, 0.0155,  ..., 0.0160, 0.0163, 0.0172],
         [0.9493, 0.9496, 0.9535,  ..., 0.9520, 0.9512, 0.9484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2688, 0.0186,  ..., 0.2500, 0.0263, 0.0187],
         [0.2500, 0.2437, 0.0095,  ..., 0.2500, 0.0119, 0.0098],
         [0.2500, 0.2437, 0.0095,  ..., 0.2500, 0.0119, 0.0098],
         [0.2500, 0.2437, 0.9624,  ..., 0.2500, 0.9498, 0.9617]],
        [[0.0092, 0.0098, 0.0094,  ..., 0.0095, 0.0103, 0.0091],
         [0.0092, 0.0098, 0.0094,  ..., 0.0095, 0.0103, 0.0091],
         [0.0106, 0.0120, 0.0119,  ..., 0.0109, 0.0122, 0.0101],
         [0.9709, 0.9684, 0.9692,  ..., 0.9701, 0.9673, 0.9716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 241:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:27:25,229 [Process: 0] Synchronize training processes
2024-08-16 14:27:25,229 [Process: 0] Evaluating...
2024-08-16 14:27:25,237 [Process: 0] EPOCH 242:
2024-08-16 14:27:25,239 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0132, 0.0127, 0.0117,  ..., 0.0127, 0.0125, 0.0275],
         [0.0132, 0.0127, 0.0117,  ..., 0.0127, 0.0125, 0.0275],
         [0.0132, 0.0127, 0.0117,  ..., 0.0127, 0.0125, 0.0275],
         [0.9604, 0.9619, 0.9650,  ..., 0.9620, 0.9624, 0.9176]],
        [[0.0122, 0.0130, 0.0124,  ..., 0.0118, 0.0120, 0.0116],
         [0.0122, 0.0130, 0.0124,  ..., 0.0118, 0.0120, 0.0116],
         [0.0122, 0.0130, 0.0124,  ..., 0.0118, 0.0120, 0.0116],
         [0.9634, 0.9610, 0.9628,  ..., 0.9647, 0.9641, 0.9651]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0105, 0.2609, 0.2683,  ..., 0.2500, 0.0196, 0.2500],
         [0.0075, 0.2464, 0.2439,  ..., 0.2500, 0.0127, 0.2500],
         [0.0075, 0.2464, 0.2439,  ..., 0.2500, 0.0127, 0.2500],
         [0.9744, 0.2464, 0.2439,  ..., 0.2500, 0.9550, 0.2500]],
        [[0.0069, 0.0073, 0.0079,  ..., 0.0068, 0.0085, 0.0082],
         [0.0069, 0.0073, 0.0079,  ..., 0.0068, 0.0085, 0.0082],
         [0.0069, 0.0073, 0.0079,  ..., 0.0068, 0.0089, 0.0082],
         [0.9793, 0.9780, 0.9764,  ..., 0.9795, 0.9741, 0.9754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 242:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:27:27,348 [Process: 0] Synchronize training processes
2024-08-16 14:27:27,348 [Process: 0] Evaluating...
2024-08-16 14:27:27,350 [Process: 0] EPOCH 243:
2024-08-16 14:27:27,352 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0163, 0.0157, 0.0162,  ..., 0.0162, 0.0158, 0.0159],
         [0.0163, 0.0157, 0.0162,  ..., 0.0162, 0.0158, 0.0159],
         [0.0163, 0.0157, 0.0162,  ..., 0.0162, 0.0158, 0.0159],
         [0.9510, 0.9528, 0.9514,  ..., 0.9514, 0.9525, 0.9524]],
        [[0.0157, 0.0156, 0.0158,  ..., 0.0155, 0.0154, 0.0150],
         [0.0157, 0.0156, 0.0158,  ..., 0.0155, 0.0154, 0.0150],
         [0.0157, 0.0156, 0.0158,  ..., 0.0155, 0.0154, 0.0150],
         [0.9530, 0.9533, 0.9525,  ..., 0.9536, 0.9538, 0.9550]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2599, 0.0141,  ..., 0.2531, 0.2500, 0.2500],
         [0.2500, 0.2467, 0.0078,  ..., 0.2490, 0.2500, 0.2500],
         [0.2500, 0.2467, 0.0078,  ..., 0.2490, 0.2500, 0.2500],
         [0.2500, 0.2467, 0.9704,  ..., 0.2490, 0.2500, 0.2500]],
        [[0.0078, 0.0066, 0.0066,  ..., 0.0071, 0.0086, 0.0082],
         [0.0078, 0.0066, 0.0066,  ..., 0.0071, 0.0086, 0.0082],
         [0.0078, 0.0066, 0.0066,  ..., 0.0071, 0.0091, 0.0085],
         [0.9765, 0.9802, 0.9801,  ..., 0.9787, 0.9737, 0.9752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 243:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:27:29,422 [Process: 0] Synchronize training processes
2024-08-16 14:27:29,422 [Process: 0] Evaluating...
2024-08-16 14:27:29,424 [Process: 0] EPOCH 244:
2024-08-16 14:27:29,426 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0161, 0.0168, 0.0163,  ..., 0.0166, 0.0166, 0.0162],
         [0.0161, 0.0168, 0.0163,  ..., 0.0166, 0.0166, 0.0162],
         [0.0161, 0.0168, 0.0163,  ..., 0.0166, 0.0166, 0.0162],
         [0.9518, 0.9495, 0.9511,  ..., 0.9502, 0.9501, 0.9515]],
        [[0.0163, 0.0161, 0.0162,  ..., 0.0160, 0.0158, 0.0164],
         [0.0163, 0.0161, 0.0162,  ..., 0.0160, 0.0158, 0.0164],
         [0.0163, 0.0161, 0.0162,  ..., 0.0160, 0.0158, 0.0164],
         [0.9510, 0.9517, 0.9514,  ..., 0.9520, 0.9525, 0.9508]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0084,  ..., 0.0130, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.0062,  ..., 0.0089, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.0062,  ..., 0.0089, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.9791,  ..., 0.9691, 0.2500, 0.2500]],
        [[0.0070, 0.0067, 0.0075,  ..., 0.0085, 0.0089, 0.0072],
         [0.0070, 0.0067, 0.0075,  ..., 0.0085, 0.0089, 0.0072],
         [0.0070, 0.0067, 0.0075,  ..., 0.0099, 0.0141, 0.0072],
         [0.9790, 0.9798, 0.9775,  ..., 0.9730, 0.9681, 0.9784]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 244:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0162, 0.0165, 0.0158,  ..., 0.0154, 0.0160, 0.0160],
         [0.0162, 0.0165, 0.0158,  ..., 0.0154, 0.0160, 0.0160],
         [0.0162, 0.0165, 0.0158,  ..., 0.0154, 0.0160, 0.0160],
         [0.9514, 0.9506, 0.9526,  ..., 0.9537, 0.9519, 0.9519]],
        [[0.0153, 0.0161, 0.0161,  ..., 0.0155, 0.0157, 0.0163],
         [0.0153, 0.0161, 0.0161,  ..., 0.0155, 0.0157, 0.0163],
         [0.0153, 0.0161, 0.0161,  ..., 0.0155, 0.0157, 0.0163],
         [0.9540, 0.9517, 0.9516,  ..., 0.9536, 0.9529, 0.9510]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0117, 0.0195,  ..., 0.2531, 0.2500, 0.2500],
         [0.2500, 0.0071, 0.0126,  ..., 0.2490, 0.2500, 0.2500],
         [0.2500, 0.0071, 0.0126,  ..., 0.2490, 0.2500, 0.2500],
         [0.2500, 0.9741, 0.9552,  ..., 0.2490, 0.2500, 0.2500]],
        [[0.0074, 0.0099, 0.0075,  ..., 0.0088, 0.0078, 0.0084],
         [0.0074, 0.0099, 0.0075,  ..., 0.0088, 0.0078, 0.0084],
         [0.0074, 0.0124, 0.0082,  ..., 0.0116, 0.0078, 0.0095],
         [0.9779, 0.9679, 0.9768,  ..., 0.9708, 0.9766, 0.9736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 245:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:27:31,494 [Process: 0] Synchronize training processes
2024-08-16 14:27:31,495 [Process: 0] Evaluating...
2024-08-16 14:27:31,497 [Process: 0] EPOCH 245:
2024-08-16 14:27:31,499 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0143, 0.0151, 0.0151,  ..., 0.0150, 0.0152, 0.0151],
         [0.0143, 0.0151, 0.0151,  ..., 0.0150, 0.0152, 0.0151],
         [0.0143, 0.0151, 0.0151,  ..., 0.0150, 0.0152, 0.0151],
         [0.9571, 0.9546, 0.9546,  ..., 0.9549, 0.9543, 0.9547]],
        [[0.0149, 0.0141, 0.0180,  ..., 0.0174, 0.0185, 0.0176],
         [0.0149, 0.0141, 0.0180,  ..., 0.0174, 0.0185, 0.0176],
         [0.0149, 0.0141, 0.0180,  ..., 0.0174, 0.0185, 0.0176],
         [0.9552, 0.9576, 0.9459,  ..., 0.9479, 0.9444, 0.9472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2607, 0.0116, 0.2500,  ..., 0.0082, 0.2500, 0.2500],
         [0.2464, 0.0068, 0.2500,  ..., 0.0065, 0.2500, 0.2500],
         [0.2464, 0.0068, 0.2500,  ..., 0.0065, 0.2500, 0.2500],
         [0.2464, 0.9749, 0.2500,  ..., 0.9789, 0.2500, 0.2500]],
        [[0.0106, 0.0064, 0.0096,  ..., 0.0086, 0.0075, 0.0095],
         [0.0106, 0.0064, 0.0096,  ..., 0.0086, 0.0075, 0.0095],
         [0.0166, 0.0064, 0.0134,  ..., 0.0114, 0.0084, 0.0111],
         [0.9622, 0.9807, 0.9674,  ..., 0.9713, 0.9767, 0.9700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 246:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:27:33,582 [Process: 0] Synchronize training processes
2024-08-16 14:27:33,582 [Process: 0] Evaluating...
2024-08-16 14:27:33,584 [Process: 0] EPOCH 246:
2024-08-16 14:27:33,586 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0154, 0.0144, 0.0151,  ..., 0.0148, 0.0158, 0.0150],
         [0.0154, 0.0144, 0.0151,  ..., 0.0148, 0.0158, 0.0150],
         [0.0154, 0.0144, 0.0151,  ..., 0.0148, 0.0158, 0.0150],
         [0.9539, 0.9567, 0.9548,  ..., 0.9555, 0.9527, 0.9551]],
        [[0.0158, 0.0148, 0.0152,  ..., 0.0144, 0.0144, 0.0150],
         [0.0158, 0.0148, 0.0152,  ..., 0.0144, 0.0144, 0.0150],
         [0.0158, 0.0148, 0.0152,  ..., 0.0144, 0.0144, 0.0150],
         [0.9526, 0.9555, 0.9544,  ..., 0.9568, 0.9568, 0.9551]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2657, 0.0187,  ..., 0.2500, 0.2500, 0.0158],
         [0.2500, 0.2448, 0.0106,  ..., 0.2500, 0.2500, 0.0114],
         [0.2500, 0.2448, 0.0106,  ..., 0.2500, 0.2500, 0.0114],
         [0.2500, 0.2448, 0.9601,  ..., 0.2500, 0.2500, 0.9613]],
        [[0.0079, 0.0073, 0.0068,  ..., 0.0067, 0.0077, 0.0067],
         [0.0079, 0.0073, 0.0068,  ..., 0.0067, 0.0077, 0.0067],
         [0.0081, 0.0073, 0.0068,  ..., 0.0067, 0.0077, 0.0067],
         [0.9760, 0.9780, 0.9795,  ..., 0.9798, 0.9769, 0.9799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 247:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:27:35,671 [Process: 0] Synchronize training processes
2024-08-16 14:27:35,671 [Process: 0] Evaluating...
2024-08-16 14:27:35,673 [Process: 0] EPOCH 247:
2024-08-16 14:27:35,675 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0150, 0.0158, 0.0146,  ..., 0.0154, 0.0144, 0.0159],
         [0.0150, 0.0158, 0.0146,  ..., 0.0154, 0.0144, 0.0159],
         [0.0150, 0.0158, 0.0146,  ..., 0.0154, 0.0144, 0.0159],
         [0.9549, 0.9525, 0.9561,  ..., 0.9538, 0.9569, 0.9522]],
        [[0.0158, 0.0156, 0.0158,  ..., 0.0159, 0.0153, 0.0148],
         [0.0158, 0.0156, 0.0158,  ..., 0.0159, 0.0153, 0.0148],
         [0.0158, 0.0156, 0.0158,  ..., 0.0159, 0.0153, 0.0148],
         [0.9525, 0.9532, 0.9526,  ..., 0.9524, 0.9540, 0.9555]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0154, 0.0127,  ..., 0.2500, 0.0080, 0.2500],
         [0.0075, 0.0086, 0.0088,  ..., 0.2500, 0.0066, 0.2500],
         [0.0075, 0.0086, 0.0088,  ..., 0.2500, 0.0066, 0.2500],
         [0.9759, 0.9674, 0.9696,  ..., 0.2500, 0.9788, 0.2500]],
        [[0.0090, 0.0078, 0.0107,  ..., 0.0101, 0.0089, 0.0098],
         [0.0090, 0.0078, 0.0107,  ..., 0.0101, 0.0089, 0.0098],
         [0.0103, 0.0078, 0.0133,  ..., 0.0123, 0.0104, 0.0119],
         [0.9717, 0.9767, 0.9653,  ..., 0.9676, 0.9718, 0.9686]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 248:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:27:37,769 [Process: 0] Synchronize training processes
2024-08-16 14:27:37,769 [Process: 0] Evaluating...
2024-08-16 14:27:37,771 [Process: 0] EPOCH 248:
2024-08-16 14:27:37,773 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0146, 0.0151, 0.0149,  ..., 0.0146, 0.0139, 0.0152],
         [0.0146, 0.0151, 0.0149,  ..., 0.0146, 0.0139, 0.0152],
         [0.0146, 0.0151, 0.0149,  ..., 0.0146, 0.0139, 0.0152],
         [0.9562, 0.9548, 0.9554,  ..., 0.9561, 0.9583, 0.9545]],
        [[0.0144, 0.0151, 0.0149,  ..., 0.0156, 0.0152, 0.0156],
         [0.0144, 0.0151, 0.0149,  ..., 0.0156, 0.0152, 0.0156],
         [0.0144, 0.0151, 0.0149,  ..., 0.0156, 0.0152, 0.0156],
         [0.9568, 0.9546, 0.9553,  ..., 0.9531, 0.9545, 0.9531]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0183, 0.2500, 0.0157,  ..., 0.0176, 0.2500, 0.2500],
         [0.0119, 0.2500, 0.0105,  ..., 0.0121, 0.2500, 0.2500],
         [0.0119, 0.2500, 0.0105,  ..., 0.0121, 0.2500, 0.2500],
         [0.9580, 0.2500, 0.9632,  ..., 0.9583, 0.2500, 0.2500]],
        [[0.0083, 0.0093, 0.0076,  ..., 0.0098, 0.0070, 0.0084],
         [0.0083, 0.0093, 0.0076,  ..., 0.0098, 0.0070, 0.0084],
         [0.0088, 0.0107, 0.0076,  ..., 0.0121, 0.0070, 0.0094],
         [0.9745, 0.9706, 0.9773,  ..., 0.9684, 0.9790, 0.9737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 249:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:27:39,874 [Process: 0] Synchronize training processes
2024-08-16 14:27:39,875 [Process: 0] Evaluating...
2024-08-16 14:27:39,877 [Process: 0] EPOCH 249:
2024-08-16 14:27:39,879 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0152, 0.0147, 0.0140,  ..., 0.0144, 0.0145, 0.0154],
         [0.0152, 0.0147, 0.0140,  ..., 0.0144, 0.0145, 0.0154],
         [0.0152, 0.0147, 0.0140,  ..., 0.0144, 0.0145, 0.0154],
         [0.9544, 0.9560, 0.9581,  ..., 0.9568, 0.9565, 0.9539]],
        [[0.0152, 0.0141, 0.0144,  ..., 0.0149, 0.0150, 0.0146],
         [0.0152, 0.0141, 0.0144,  ..., 0.0149, 0.0150, 0.0146],
         [0.0152, 0.0141, 0.0144,  ..., 0.0149, 0.0150, 0.0146],
         [0.9545, 0.9577, 0.9567,  ..., 0.9552, 0.9549, 0.9562]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2534, 0.2481,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2489, 0.2481,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2489, 0.2557,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2489, 0.2481,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0123, 0.0081, 0.0093,  ..., 0.0077, 0.0086, 0.0090],
         [0.0123, 0.0081, 0.0093,  ..., 0.0077, 0.0086, 0.0090],
         [0.0183, 0.0081, 0.0093,  ..., 0.0081, 0.0102, 0.0106],
         [0.9570, 0.9758, 0.9722,  ..., 0.9765, 0.9726, 0.9714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:41,941 [Process: 0] Synchronize training processes
2024-08-16 14:27:41,941 [Process: 0] Evaluating...
2024-08-16 14:27:41,943 [Process: 0] EPOCH 250:
2024-08-16 14:27:41,945 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 250:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0141, 0.0140, 0.0147,  ..., 0.0140, 0.0144, 0.0150],
         [0.0141, 0.0140, 0.0147,  ..., 0.0140, 0.0144, 0.0150],
         [0.0141, 0.0140, 0.0147,  ..., 0.0140, 0.0144, 0.0150],
         [0.9577, 0.9581, 0.9558,  ..., 0.9580, 0.9567, 0.9550]],
        [[0.0152, 0.0144, 0.0145,  ..., 0.0141, 0.0151, 0.0145],
         [0.0152, 0.0144, 0.0145,  ..., 0.0141, 0.0151, 0.0145],
         [0.0152, 0.0144, 0.0145,  ..., 0.0141, 0.0151, 0.0145],
         [0.9543, 0.9567, 0.9565,  ..., 0.9576, 0.9548, 0.9565]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0126, 0.0131, 0.0105,  ..., 0.2500, 0.0153, 0.0125],
         [0.0082, 0.0082, 0.0073,  ..., 0.2500, 0.0080, 0.0085],
         [0.0082, 0.0082, 0.0073,  ..., 0.2500, 0.0080, 0.0085],
         [0.9711, 0.9704, 0.9748,  ..., 0.2500, 0.9687, 0.9704]],
        [[0.0069, 0.0064, 0.0096,  ..., 0.0088, 0.0094, 0.0088],
         [0.0069, 0.0064, 0.0096,  ..., 0.0088, 0.0094, 0.0088],
         [0.0069, 0.0064, 0.0116,  ..., 0.0099, 0.0114, 0.0105],
         [0.9793, 0.9808, 0.9692,  ..., 0.9726, 0.9699, 0.9719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:44,029 [Process: 0] Synchronize training processes
2024-08-16 14:27:44,029 [Process: 0] Evaluating...
2024-08-16 14:27:44,031 [Process: 0] EPOCH 251:
2024-08-16 14:27:44,033 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 251:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0146, 0.0141, 0.0144,  ..., 0.0141, 0.0148, 0.0140],
         [0.0146, 0.0141, 0.0144,  ..., 0.0141, 0.0148, 0.0140],
         [0.0146, 0.0141, 0.0144,  ..., 0.0141, 0.0148, 0.0140],
         [0.9561, 0.9576, 0.9568,  ..., 0.9577, 0.9557, 0.9580]],
        [[0.0156, 0.0157, 0.0148,  ..., 0.0155, 0.0139, 0.0148],
         [0.0156, 0.0157, 0.0148,  ..., 0.0155, 0.0139, 0.0148],
         [0.0156, 0.0157, 0.0148,  ..., 0.0155, 0.0139, 0.0148],
         [0.9531, 0.9530, 0.9556,  ..., 0.9536, 0.9583, 0.9557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:27:46,121 [Process: 0] Synchronize training processes
2024-08-16 14:27:46,121 [Process: 0] Evaluating...
2024-08-16 14:27:46,130 [Process: 0] EPOCH 252:
2024-08-16 14:27:46,132 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0173, 0.0107,  ..., 0.2500, 0.2500, 0.0100],
         [0.2500, 0.0101, 0.0067,  ..., 0.2500, 0.2500, 0.0060],
         [0.2500, 0.0101, 0.0067,  ..., 0.2500, 0.2500, 0.0060],
         [0.2500, 0.9626, 0.9759,  ..., 0.2500, 0.2500, 0.9781]],
        [[0.0064, 0.0075, 0.0094,  ..., 0.0073, 0.0120, 0.0084],
         [0.0064, 0.0075, 0.0094,  ..., 0.0073, 0.0120, 0.0084],
         [0.0064, 0.0075, 0.0114,  ..., 0.0073, 0.0184, 0.0102],
         [0.9807, 0.9776, 0.9699,  ..., 0.9781, 0.9577, 0.9729]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 252:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0150, 0.0139, 0.0137,  ..., 0.0159, 0.0144, 0.0146],
         [0.0150, 0.0139, 0.0137,  ..., 0.0159, 0.0144, 0.0146],
         [0.0150, 0.0139, 0.0137,  ..., 0.0159, 0.0144, 0.0146],
         [0.9550, 0.9582, 0.9590,  ..., 0.9523, 0.9567, 0.9562]],
        [[0.0154, 0.0147, 0.0141,  ..., 0.0146, 0.0139, 0.0145],
         [0.0154, 0.0147, 0.0141,  ..., 0.0146, 0.0139, 0.0145],
         [0.0154, 0.0147, 0.0141,  ..., 0.0146, 0.0139, 0.0145],
         [0.9537, 0.9560, 0.9577,  ..., 0.9562, 0.9583, 0.9565]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:48,225 [Process: 0] Synchronize training processes
2024-08-16 14:27:48,226 [Process: 0] Evaluating...
2024-08-16 14:27:48,228 [Process: 0] EPOCH 253:
2024-08-16 14:27:48,230 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0290, 0.0137, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0135, 0.0075, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0135, 0.0075, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.9440, 0.9713, 0.2500,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0092, 0.0080, 0.0060,  ..., 0.0086, 0.0088, 0.0114],
         [0.0092, 0.0080, 0.0060,  ..., 0.0086, 0.0088, 0.0114],
         [0.0099, 0.0086, 0.0060,  ..., 0.0092, 0.0106, 0.0159],
         [0.9716, 0.9753, 0.9821,  ..., 0.9735, 0.9718, 0.9613]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 253:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0139, 0.0140, 0.0146,  ..., 0.0132, 0.0148, 0.0144],
         [0.0139, 0.0140, 0.0146,  ..., 0.0132, 0.0148, 0.0144],
         [0.0139, 0.0140, 0.0146,  ..., 0.0132, 0.0148, 0.0144],
         [0.9584, 0.9581, 0.9562,  ..., 0.9605, 0.9556, 0.9567]],
        [[0.0134, 0.0145, 0.0147,  ..., 0.0147, 0.0145, 0.0139],
         [0.0134, 0.0145, 0.0147,  ..., 0.0147, 0.0145, 0.0139],
         [0.0134, 0.0145, 0.0147,  ..., 0.0147, 0.0145, 0.0139],
         [0.9597, 0.9565, 0.9558,  ..., 0.9560, 0.9565, 0.9582]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:50,325 [Process: 0] Synchronize training processes
2024-08-16 14:27:50,326 [Process: 0] Evaluating...
2024-08-16 14:27:50,327 [Process: 0] EPOCH 254:
2024-08-16 14:27:50,330 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0285, 0.2398, 0.0222,  ..., 0.2500, 0.2260, 0.0133],
         [0.0157, 0.2398, 0.0111,  ..., 0.2500, 0.2260, 0.0080],
         [0.0157, 0.2806, 0.0111,  ..., 0.2500, 0.3221, 0.0080],
         [0.9401, 0.2398, 0.9557,  ..., 0.2500, 0.2260, 0.9708]],
        [[0.0081, 0.0085, 0.0106,  ..., 0.0086, 0.0088, 0.0075],
         [0.0081, 0.0085, 0.0106,  ..., 0.0086, 0.0088, 0.0075],
         [0.0084, 0.0087, 0.0152,  ..., 0.0097, 0.0102, 0.0078],
         [0.9754, 0.9744, 0.9637,  ..., 0.9731, 0.9722, 0.9772]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 254:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0139, 0.0138, 0.0136,  ..., 0.0140, 0.0139, 0.0134],
         [0.0139, 0.0138, 0.0136,  ..., 0.0140, 0.0139, 0.0134],
         [0.0139, 0.0138, 0.0136,  ..., 0.0140, 0.0139, 0.0134],
         [0.9584, 0.9586, 0.9593,  ..., 0.9580, 0.9583, 0.9598]],
        [[0.0143, 0.0140, 0.0149,  ..., 0.0154, 0.0147, 0.0150],
         [0.0143, 0.0140, 0.0149,  ..., 0.0154, 0.0147, 0.0150],
         [0.0143, 0.0140, 0.0149,  ..., 0.0154, 0.0147, 0.0150],
         [0.9571, 0.9579, 0.9553,  ..., 0.9537, 0.9559, 0.9551]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:52,427 [Process: 0] Synchronize training processes
2024-08-16 14:27:52,427 [Process: 0] Evaluating...
2024-08-16 14:27:52,429 [Process: 0] EPOCH 255:
2024-08-16 14:27:52,431 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0076, 0.0078,  ..., 0.2500, 0.0172, 0.2500],
         [0.0069, 0.0056, 0.0047,  ..., 0.2500, 0.0091, 0.2500],
         [0.0069, 0.0056, 0.0047,  ..., 0.2500, 0.0091, 0.2500],
         [0.9756, 0.9812, 0.9828,  ..., 0.2500, 0.9647, 0.2500]],
        [[0.0088, 0.0106, 0.0073,  ..., 0.0062, 0.0080, 0.0077],
         [0.0088, 0.0106, 0.0073,  ..., 0.0062, 0.0080, 0.0077],
         [0.0112, 0.0142, 0.0077,  ..., 0.0062, 0.0086, 0.0086],
         [0.9712, 0.9646, 0.9777,  ..., 0.9813, 0.9753, 0.9760]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 255:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0140, 0.0134, 0.0141,  ..., 0.0141, 0.0137, 0.0138],
         [0.0140, 0.0134, 0.0141,  ..., 0.0141, 0.0137, 0.0138],
         [0.0140, 0.0134, 0.0141,  ..., 0.0141, 0.0137, 0.0138],
         [0.9579, 0.9597, 0.9577,  ..., 0.9577, 0.9590, 0.9585]],
        [[0.0152, 0.0136, 0.0136,  ..., 0.0139, 0.0140, 0.0144],
         [0.0152, 0.0136, 0.0136,  ..., 0.0139, 0.0140, 0.0144],
         [0.0152, 0.0136, 0.0136,  ..., 0.0139, 0.0140, 0.0144],
         [0.9544, 0.9591, 0.9592,  ..., 0.9582, 0.9579, 0.9569]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:54,497 [Process: 0] Synchronize training processes
2024-08-16 14:27:54,497 [Process: 0] Evaluating...
2024-08-16 14:27:54,499 [Process: 0] EPOCH 256:
2024-08-16 14:27:54,501 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0173, 0.0157, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0105, 0.0094, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0105, 0.0094, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.9616, 0.9656, 0.2500,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0092, 0.0099, 0.0091,  ..., 0.0082, 0.0094, 0.0088],
         [0.0092, 0.0099, 0.0091,  ..., 0.0082, 0.0094, 0.0088],
         [0.0106, 0.0134, 0.0105,  ..., 0.0082, 0.0122, 0.0105],
         [0.9710, 0.9668, 0.9713,  ..., 0.9753, 0.9690, 0.9719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 256:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0139, 0.0136, 0.0138,  ..., 0.0139, 0.0143, 0.0149],
         [0.0139, 0.0136, 0.0138,  ..., 0.0139, 0.0143, 0.0149],
         [0.0139, 0.0136, 0.0138,  ..., 0.0139, 0.0143, 0.0149],
         [0.9583, 0.9593, 0.9585,  ..., 0.9584, 0.9571, 0.9554]],
        [[0.0135, 0.0136, 0.0141,  ..., 0.0148, 0.0137, 0.0141],
         [0.0135, 0.0136, 0.0141,  ..., 0.0148, 0.0137, 0.0141],
         [0.0135, 0.0136, 0.0141,  ..., 0.0148, 0.0137, 0.0141],
         [0.9596, 0.9591, 0.9576,  ..., 0.9557, 0.9589, 0.9577]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:56,562 [Process: 0] Synchronize training processes
2024-08-16 14:27:56,563 [Process: 0] Evaluating...
2024-08-16 14:27:56,565 [Process: 0] EPOCH 257:
2024-08-16 14:27:56,567 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.2500, 0.0181,  ..., 0.2500, 0.2500, 0.0142],
         [0.0052, 0.2500, 0.0109,  ..., 0.2500, 0.2500, 0.0084],
         [0.0052, 0.2500, 0.0109,  ..., 0.2500, 0.2500, 0.0084],
         [0.9831, 0.2500, 0.9600,  ..., 0.2500, 0.2500, 0.9691]],
        [[0.0067, 0.0080, 0.0074,  ..., 0.0077, 0.0083, 0.0091],
         [0.0067, 0.0080, 0.0074,  ..., 0.0077, 0.0083, 0.0091],
         [0.0067, 0.0083, 0.0074,  ..., 0.0084, 0.0087, 0.0117],
         [0.9798, 0.9758, 0.9778,  ..., 0.9762, 0.9746, 0.9701]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 257:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0131, 0.0143, 0.0136,  ..., 0.0139, 0.0144, 0.0147],
         [0.0131, 0.0143, 0.0136,  ..., 0.0139, 0.0144, 0.0147],
         [0.0131, 0.0143, 0.0136,  ..., 0.0139, 0.0144, 0.0147],
         [0.9606, 0.9571, 0.9591,  ..., 0.9584, 0.9569, 0.9560]],
        [[0.0137, 0.0137, 0.0144,  ..., 0.0145, 0.0145, 0.0138],
         [0.0137, 0.0137, 0.0144,  ..., 0.0145, 0.0145, 0.0138],
         [0.0137, 0.0137, 0.0144,  ..., 0.0145, 0.0145, 0.0138],
         [0.9588, 0.9590, 0.9569,  ..., 0.9565, 0.9564, 0.9585]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:27:58,611 [Process: 0] Synchronize training processes
2024-08-16 14:27:58,612 [Process: 0] Evaluating...
2024-08-16 14:27:58,613 [Process: 0] EPOCH 258:
2024-08-16 14:27:58,615 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2291, 0.0079, 0.2500,  ..., 0.2500, 0.2500, 0.0097],
         [0.2291, 0.0063, 0.2500,  ..., 0.2500, 0.2500, 0.0062],
         [0.3127, 0.0063, 0.2500,  ..., 0.2500, 0.2500, 0.0062],
         [0.2291, 0.9795, 0.2500,  ..., 0.2500, 0.2500, 0.9779]],
        [[0.0074, 0.0073, 0.0078,  ..., 0.0101, 0.0075, 0.0094],
         [0.0074, 0.0073, 0.0078,  ..., 0.0101, 0.0075, 0.0094],
         [0.0075, 0.0075, 0.0097,  ..., 0.0131, 0.0076, 0.0128],
         [0.9778, 0.9778, 0.9746,  ..., 0.9667, 0.9774, 0.9685]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 258:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0135, 0.0135, 0.0146,  ..., 0.0144, 0.0140, 0.0147],
         [0.0135, 0.0135, 0.0146,  ..., 0.0144, 0.0140, 0.0147],
         [0.0135, 0.0135, 0.0146,  ..., 0.0144, 0.0140, 0.0147],
         [0.9596, 0.9594, 0.9561,  ..., 0.9569, 0.9580, 0.9560]],
        [[0.0136, 0.0139, 0.0143,  ..., 0.0140, 0.0136, 0.0133],
         [0.0136, 0.0139, 0.0143,  ..., 0.0140, 0.0136, 0.0133],
         [0.0136, 0.0139, 0.0143,  ..., 0.0140, 0.0136, 0.0133],
         [0.9593, 0.9584, 0.9570,  ..., 0.9579, 0.9593, 0.9601]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:28:00,688 [Process: 0] Synchronize training processes
2024-08-16 14:28:00,688 [Process: 0] Evaluating...
2024-08-16 14:28:00,690 [Process: 0] EPOCH 259:
2024-08-16 14:28:00,692 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0113, 0.2564,  ..., 0.0152, 0.0167, 0.2500],
         [0.0045, 0.0070, 0.2374,  ..., 0.0100, 0.0088, 0.2500],
         [0.0045, 0.0070, 0.2688,  ..., 0.0100, 0.0088, 0.2500],
         [0.9856, 0.9747, 0.2374,  ..., 0.9649, 0.9657, 0.2500]],
        [[0.0085, 0.0067, 0.0084,  ..., 0.0085, 0.0059, 0.0070],
         [0.0085, 0.0067, 0.0084,  ..., 0.0085, 0.0059, 0.0070],
         [0.0096, 0.0072, 0.0090,  ..., 0.0094, 0.0059, 0.0072],
         [0.9733, 0.9793, 0.9743,  ..., 0.9736, 0.9823, 0.9787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 259:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0139, 0.0138, 0.0133,  ..., 0.0132, 0.0135, 0.0140],
         [0.0139, 0.0138, 0.0133,  ..., 0.0132, 0.0135, 0.0140],
         [0.0139, 0.0138, 0.0133,  ..., 0.0132, 0.0135, 0.0140],
         [0.9583, 0.9586, 0.9600,  ..., 0.9605, 0.9596, 0.9581]],
        [[0.0139, 0.0139, 0.0142,  ..., 0.0138, 0.0144, 0.0147],
         [0.0139, 0.0139, 0.0142,  ..., 0.0138, 0.0144, 0.0147],
         [0.0139, 0.0139, 0.0142,  ..., 0.0138, 0.0144, 0.0147],
         [0.9582, 0.9583, 0.9573,  ..., 0.9587, 0.9568, 0.9560]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:28:02,774 [Process: 0] Synchronize training processes
2024-08-16 14:28:02,774 [Process: 0] Evaluating...
2024-08-16 14:28:02,776 [Process: 0] EPOCH 260:
2024-08-16 14:28:02,778 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0133, 0.0131,  ..., 0.2500, 0.0177, 0.0129],
         [0.2500, 0.0077, 0.0077,  ..., 0.2500, 0.0097, 0.0076],
         [0.2500, 0.0077, 0.0077,  ..., 0.2500, 0.0097, 0.0076],
         [0.2500, 0.9714, 0.9715,  ..., 0.2500, 0.9629, 0.9719]],
        [[0.0090, 0.0068, 0.0080,  ..., 0.0095, 0.0080, 0.0068],
         [0.0090, 0.0068, 0.0080,  ..., 0.0095, 0.0080, 0.0068],
         [0.0109, 0.0068, 0.0089,  ..., 0.0129, 0.0080, 0.0068],
         [0.9711, 0.9797, 0.9751,  ..., 0.9682, 0.9759, 0.9797]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 260:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0141, 0.0139, 0.0140,  ..., 0.0136, 0.0139, 0.0136],
         [0.0141, 0.0139, 0.0140,  ..., 0.0136, 0.0139, 0.0136],
         [0.0141, 0.0139, 0.0140,  ..., 0.0136, 0.0139, 0.0136],
         [0.9578, 0.9582, 0.9580,  ..., 0.9591, 0.9582, 0.9593]],
        [[0.0143, 0.0134, 0.0141,  ..., 0.0136, 0.0137, 0.0132],
         [0.0143, 0.0134, 0.0141,  ..., 0.0136, 0.0137, 0.0132],
         [0.0143, 0.0134, 0.0141,  ..., 0.0136, 0.0137, 0.0132],
         [0.9572, 0.9598, 0.9578,  ..., 0.9593, 0.9588, 0.9604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:28:04,862 [Process: 0] Synchronize training processes
2024-08-16 14:28:04,863 [Process: 0] Evaluating...
2024-08-16 14:28:04,865 [Process: 0] EPOCH 261:
2024-08-16 14:28:04,867 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0091, 0.0158,  ..., 0.2500, 0.2500, 0.2500],
         [0.0060, 0.0060, 0.0097,  ..., 0.2500, 0.2500, 0.2500],
         [0.0060, 0.0060, 0.0097,  ..., 0.2500, 0.2500, 0.2500],
         [0.9793, 0.9790, 0.9648,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0073, 0.0078, 0.0085,  ..., 0.0071, 0.0078, 0.0099],
         [0.0073, 0.0078, 0.0085,  ..., 0.0071, 0.0078, 0.0099],
         [0.0075, 0.0080, 0.0096,  ..., 0.0071, 0.0085, 0.0134],
         [0.9779, 0.9764, 0.9734,  ..., 0.9787, 0.9759, 0.9669]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 261:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0138, 0.0143, 0.0136,  ..., 0.0131, 0.0140, 0.0137],
         [0.0138, 0.0143, 0.0136,  ..., 0.0131, 0.0140, 0.0137],
         [0.0138, 0.0143, 0.0136,  ..., 0.0131, 0.0140, 0.0137],
         [0.9586, 0.9570, 0.9591,  ..., 0.9608, 0.9581, 0.9589]],
        [[0.0130, 0.0137, 0.0139,  ..., 0.0139, 0.0132, 0.0135],
         [0.0130, 0.0137, 0.0139,  ..., 0.0139, 0.0132, 0.0135],
         [0.0130, 0.0137, 0.0139,  ..., 0.0139, 0.0132, 0.0135],
         [0.9610, 0.9590, 0.9583,  ..., 0.9584, 0.9604, 0.9596]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:28:06,929 [Process: 0] Synchronize training processes
2024-08-16 14:28:06,930 [Process: 0] Evaluating...
2024-08-16 14:28:06,937 [Process: 0] EPOCH 262:
2024-08-16 14:28:06,939 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.2426, 0.0154,  ..., 0.0128, 0.0080, 0.2500],
         [0.0063, 0.2426, 0.0086,  ..., 0.0072, 0.0056, 0.2500],
         [0.0063, 0.2721, 0.0086,  ..., 0.0072, 0.0056, 0.2500],
         [0.9772, 0.2426, 0.9675,  ..., 0.9728, 0.9809, 0.2500]],
        [[0.0080, 0.0060, 0.0070,  ..., 0.0075, 0.0099, 0.0080],
         [0.0080, 0.0060, 0.0070,  ..., 0.0075, 0.0099, 0.0080],
         [0.0083, 0.0060, 0.0070,  ..., 0.0075, 0.0130, 0.0080],
         [0.9758, 0.9819, 0.9789,  ..., 0.9774, 0.9673, 0.9759]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 262:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0146, 0.0134, 0.0138,  ..., 0.0132, 0.0131, 0.0130],
         [0.0146, 0.0134, 0.0138,  ..., 0.0132, 0.0131, 0.0130],
         [0.0146, 0.0134, 0.0138,  ..., 0.0132, 0.0131, 0.0130],
         [0.9563, 0.9597, 0.9586,  ..., 0.9605, 0.9606, 0.9611]],
        [[0.0135, 0.0142, 0.0141,  ..., 0.0137, 0.0137, 0.0155],
         [0.0135, 0.0142, 0.0141,  ..., 0.0137, 0.0137, 0.0155],
         [0.0135, 0.0142, 0.0141,  ..., 0.0137, 0.0137, 0.0155],
         [0.9596, 0.9574, 0.9577,  ..., 0.9588, 0.9588, 0.9534]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:28:09,031 [Process: 0] Synchronize training processes
2024-08-16 14:28:09,032 [Process: 0] Evaluating...
2024-08-16 14:28:09,034 [Process: 0] EPOCH 263:
2024-08-16 14:28:09,036 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0073, 0.2500,  ..., 0.0145, 0.0097, 0.2500],
         [0.2500, 0.0057, 0.2500,  ..., 0.0087, 0.0064, 0.2500],
         [0.2500, 0.0057, 0.2500,  ..., 0.0087, 0.0064, 0.2500],
         [0.2500, 0.9814, 0.2500,  ..., 0.9682, 0.9776, 0.2500]],
        [[0.0061, 0.0071, 0.0064,  ..., 0.0100, 0.0092, 0.0067],
         [0.0061, 0.0071, 0.0064,  ..., 0.0100, 0.0092, 0.0067],
         [0.0061, 0.0071, 0.0064,  ..., 0.0127, 0.0099, 0.0067],
         [0.9817, 0.9786, 0.9809,  ..., 0.9673, 0.9717, 0.9798]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 263:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0138, 0.0135, 0.0137,  ..., 0.0136, 0.0135, 0.0135],
         [0.0138, 0.0135, 0.0137,  ..., 0.0136, 0.0135, 0.0135],
         [0.0138, 0.0135, 0.0137,  ..., 0.0136, 0.0135, 0.0135],
         [0.9585, 0.9596, 0.9589,  ..., 0.9591, 0.9595, 0.9595]],
        [[0.0133, 0.0143, 0.0138,  ..., 0.0139, 0.0140, 0.0133],
         [0.0133, 0.0143, 0.0138,  ..., 0.0139, 0.0140, 0.0133],
         [0.0133, 0.0143, 0.0138,  ..., 0.0139, 0.0140, 0.0133],
         [0.9601, 0.9570, 0.9587,  ..., 0.9583, 0.9581, 0.9601]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:28:11,113 [Process: 0] Synchronize training processes
2024-08-16 14:28:11,113 [Process: 0] Evaluating...
2024-08-16 14:28:11,115 [Process: 0] EPOCH 264:
2024-08-16 14:28:11,117 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0074, 0.0085,  ..., 0.0177, 0.0056, 0.2500],
         [0.2500, 0.0052, 0.0058,  ..., 0.0098, 0.0040, 0.2500],
         [0.2500, 0.0052, 0.0058,  ..., 0.0098, 0.0040, 0.2500],
         [0.2500, 0.9822, 0.9800,  ..., 0.9626, 0.9864, 0.2500]],
        [[0.0078, 0.0068, 0.0082,  ..., 0.0100, 0.0079, 0.0075],
         [0.0078, 0.0068, 0.0082,  ..., 0.0100, 0.0079, 0.0075],
         [0.0079, 0.0068, 0.0082,  ..., 0.0133, 0.0084, 0.0078],
         [0.9766, 0.9797, 0.9755,  ..., 0.9668, 0.9757, 0.9772]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 264:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0137, 0.0126,  ..., 0.0136, 0.0142, 0.0128],
         [0.0129, 0.0137, 0.0126,  ..., 0.0136, 0.0142, 0.0128],
         [0.0129, 0.0137, 0.0126,  ..., 0.0136, 0.0142, 0.0128],
         [0.9613, 0.9590, 0.9623,  ..., 0.9592, 0.9574, 0.9616]],
        [[0.0128, 0.0133, 0.0133,  ..., 0.0139, 0.0140, 0.0142],
         [0.0128, 0.0133, 0.0133,  ..., 0.0139, 0.0140, 0.0142],
         [0.0128, 0.0133, 0.0133,  ..., 0.0139, 0.0140, 0.0142],
         [0.9615, 0.9601, 0.9600,  ..., 0.9584, 0.9580, 0.9574]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:28:13,208 [Process: 0] Synchronize training processes
2024-08-16 14:28:13,208 [Process: 0] Evaluating...
2024-08-16 14:28:13,210 [Process: 0] EPOCH 265:
2024-08-16 14:28:13,212 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0098, 0.0091,  ..., 0.2500, 0.2541, 0.0132],
         [0.2500, 0.0060, 0.0058,  ..., 0.2500, 0.2486, 0.0079],
         [0.2500, 0.0060, 0.0058,  ..., 0.2500, 0.2486, 0.0079],
         [0.2500, 0.9782, 0.9793,  ..., 0.2500, 0.2486, 0.9710]],
        [[0.0068, 0.0086, 0.0079,  ..., 0.0088, 0.0080, 0.0067],
         [0.0068, 0.0086, 0.0079,  ..., 0.0088, 0.0080, 0.0067],
         [0.0068, 0.0122, 0.0091,  ..., 0.0114, 0.0095, 0.0067],
         [0.9797, 0.9705, 0.9751,  ..., 0.9710, 0.9746, 0.9798]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 265:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 14:28:15,319 [Process: 0] Synchronize training processes
2024-08-16 14:28:15,320 [Process: 0] Evaluating...
2024-08-16 14:28:15,322 [Process: 0] EPOCH 266:
2024-08-16 14:28:15,324 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0132, 0.0139, 0.0134,  ..., 0.0134, 0.0133, 0.0139],
         [0.0132, 0.0139, 0.0134,  ..., 0.0134, 0.0133, 0.0139],
         [0.0132, 0.0139, 0.0134,  ..., 0.0134, 0.0133, 0.0139],
         [0.9605, 0.9584, 0.9599,  ..., 0.9597, 0.9602, 0.9583]],
        [[0.0138, 0.0137, 0.0134,  ..., 0.0130, 0.0132, 0.0136],
         [0.0138, 0.0137, 0.0134,  ..., 0.0130, 0.0132, 0.0136],
         [0.0138, 0.0137, 0.0134,  ..., 0.0130, 0.0132, 0.0136],
         [0.9585, 0.9590, 0.9597,  ..., 0.9610, 0.9604, 0.9592]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2575, 0.2500, 0.0209,  ..., 0.2500, 0.0067, 0.0137],
         [0.2475, 0.2500, 0.0110,  ..., 0.2500, 0.0046, 0.0092],
         [0.2475, 0.2500, 0.0110,  ..., 0.2500, 0.0046, 0.0092],
         [0.2475, 0.2500, 0.9570,  ..., 0.2500, 0.9840, 0.9678]],
        [[0.0094, 0.0064, 0.0079,  ..., 0.0065, 0.0087, 0.0073],
         [0.0094, 0.0064, 0.0079,  ..., 0.0065, 0.0087, 0.0073],
         [0.0132, 0.0064, 0.0081,  ..., 0.0065, 0.0119, 0.0077],
         [0.9680, 0.9809, 0.9762,  ..., 0.9806, 0.9707, 0.9777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 266:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:17,443 [Process: 0] Synchronize training processes
2024-08-16 14:28:17,443 [Process: 0] Evaluating...
2024-08-16 14:28:17,445 [Process: 0] EPOCH 267:
2024-08-16 14:28:17,447 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0133, 0.0136, 0.0133,  ..., 0.0137, 0.0137, 0.0131],
         [0.0133, 0.0136, 0.0133,  ..., 0.0137, 0.0137, 0.0131],
         [0.0133, 0.0136, 0.0133,  ..., 0.0137, 0.0137, 0.0131],
         [0.9601, 0.9591, 0.9600,  ..., 0.9590, 0.9588, 0.9607]],
        [[0.0134, 0.0135, 0.0131,  ..., 0.0128, 0.0133, 0.0136],
         [0.0134, 0.0135, 0.0131,  ..., 0.0128, 0.0133, 0.0136],
         [0.0134, 0.0135, 0.0131,  ..., 0.0128, 0.0133, 0.0136],
         [0.9598, 0.9594, 0.9608,  ..., 0.9616, 0.9601, 0.9592]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0121, 0.2500, 0.0140,  ..., 0.2500, 0.2500, 0.0181],
         [0.0073, 0.2500, 0.0076,  ..., 0.2500, 0.2500, 0.0103],
         [0.0073, 0.2500, 0.0076,  ..., 0.2500, 0.2500, 0.0103],
         [0.9732, 0.2500, 0.9707,  ..., 0.2500, 0.2500, 0.9613]],
        [[0.0070, 0.0071, 0.0074,  ..., 0.0071, 0.0087, 0.0076],
         [0.0070, 0.0071, 0.0074,  ..., 0.0071, 0.0087, 0.0076],
         [0.0070, 0.0071, 0.0076,  ..., 0.0071, 0.0134, 0.0083],
         [0.9790, 0.9787, 0.9775,  ..., 0.9786, 0.9692, 0.9764]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 267:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0134, 0.0138, 0.0138,  ..., 0.0139, 0.0133, 0.0129],
         [0.0134, 0.0138, 0.0138,  ..., 0.0139, 0.0133, 0.0129],
         [0.0134, 0.0138, 0.0138,  ..., 0.0139, 0.0133, 0.0129],
         [0.9598, 0.9587, 0.9586,  ..., 0.9583, 0.9602, 0.9614]],
        [[0.0141, 0.0135, 0.0129,  ..., 0.0132, 0.0136, 0.0136],
         [0.0141, 0.0135, 0.0129,  ..., 0.0132, 0.0136, 0.0136],
         [0.0141, 0.0135, 0.0129,  ..., 0.0132, 0.0136, 0.0136],
         [0.9578, 0.9596, 0.9613,  ..., 0.9603, 0.9591, 0.9593]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0089, 0.2500,  ..., 0.0115, 0.2567, 0.2500],
         [0.2500, 0.0057, 0.2500,  ..., 0.0070, 0.2478, 0.2500],
         [0.2500, 0.0057, 0.2500,  ..., 0.0070, 0.2478, 0.2500],
         [0.2500, 0.9797, 0.2500,  ..., 0.9744, 0.2478, 0.2500]],
        [[0.0086, 0.0076, 0.0078,  ..., 0.0074, 0.0065, 0.0066],
         [0.0086, 0.0076, 0.0078,  ..., 0.0074, 0.0065, 0.0066],
         [0.0098, 0.0083, 0.0100,  ..., 0.0081, 0.0065, 0.0066],
         [0.9729, 0.9766, 0.9744,  ..., 0.9770, 0.9806, 0.9802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 268:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:19,561 [Process: 0] Synchronize training processes
2024-08-16 14:28:19,561 [Process: 0] Evaluating...
2024-08-16 14:28:19,563 [Process: 0] EPOCH 268:
2024-08-16 14:28:19,565 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0132, 0.0127, 0.0132,  ..., 0.0128, 0.0129, 0.0135],
         [0.0132, 0.0127, 0.0132,  ..., 0.0128, 0.0129, 0.0135],
         [0.0132, 0.0127, 0.0132,  ..., 0.0128, 0.0129, 0.0135],
         [0.9603, 0.9618, 0.9605,  ..., 0.9615, 0.9612, 0.9596]],
        [[0.0132, 0.0127, 0.0137,  ..., 0.0133, 0.0141, 0.0129],
         [0.0132, 0.0127, 0.0137,  ..., 0.0133, 0.0141, 0.0129],
         [0.0132, 0.0127, 0.0137,  ..., 0.0133, 0.0141, 0.0129],
         [0.9605, 0.9618, 0.9588,  ..., 0.9602, 0.9576, 0.9614]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0156, 0.2500,  ..., 0.0139, 0.0103, 0.0101],
         [0.2500, 0.0086, 0.2500,  ..., 0.0077, 0.0061, 0.0061],
         [0.2500, 0.0086, 0.2500,  ..., 0.0077, 0.0061, 0.0061],
         [0.2500, 0.9672, 0.2500,  ..., 0.9707, 0.9774, 0.9777]],
        [[0.0070, 0.0070, 0.0066,  ..., 0.0068, 0.0076, 0.0078],
         [0.0070, 0.0070, 0.0066,  ..., 0.0068, 0.0076, 0.0078],
         [0.0071, 0.0070, 0.0066,  ..., 0.0068, 0.0088, 0.0092],
         [0.9790, 0.9789, 0.9801,  ..., 0.9796, 0.9759, 0.9753]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 269:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:21,657 [Process: 0] Synchronize training processes
2024-08-16 14:28:21,658 [Process: 0] Evaluating...
2024-08-16 14:28:21,660 [Process: 0] EPOCH 269:
2024-08-16 14:28:21,662 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0130, 0.0126, 0.0130,  ..., 0.0135, 0.0128, 0.0133],
         [0.0130, 0.0126, 0.0130,  ..., 0.0135, 0.0128, 0.0133],
         [0.0130, 0.0126, 0.0130,  ..., 0.0135, 0.0128, 0.0133],
         [0.9611, 0.9621, 0.9609,  ..., 0.9596, 0.9615, 0.9602]],
        [[0.0137, 0.0130, 0.0132,  ..., 0.0130, 0.0131, 0.0132],
         [0.0137, 0.0130, 0.0132,  ..., 0.0130, 0.0131, 0.0132],
         [0.0137, 0.0130, 0.0132,  ..., 0.0130, 0.0131, 0.0132],
         [0.9588, 0.9609, 0.9603,  ..., 0.9609, 0.9608, 0.9604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2581, 0.2415, 0.2500,  ..., 0.0064, 0.0119, 0.0104],
         [0.2473, 0.2415, 0.2500,  ..., 0.0047, 0.0072, 0.0069],
         [0.2473, 0.2756, 0.2500,  ..., 0.0047, 0.0072, 0.0069],
         [0.2473, 0.2415, 0.2500,  ..., 0.9841, 0.9736, 0.9759]],
        [[0.0065, 0.0063, 0.0075,  ..., 0.0065, 0.0065, 0.0052],
         [0.0065, 0.0063, 0.0075,  ..., 0.0065, 0.0065, 0.0052],
         [0.0065, 0.0063, 0.0112,  ..., 0.0065, 0.0065, 0.0052],
         [0.9805, 0.9812, 0.9738,  ..., 0.9804, 0.9804, 0.9843]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 270:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:23,772 [Process: 0] Synchronize training processes
2024-08-16 14:28:23,772 [Process: 0] Evaluating...
2024-08-16 14:28:23,775 [Process: 0] EPOCH 270:
2024-08-16 14:28:23,777 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0123, 0.0132, 0.0129,  ..., 0.0131, 0.0129, 0.0134],
         [0.0123, 0.0132, 0.0129,  ..., 0.0131, 0.0129, 0.0134],
         [0.0123, 0.0132, 0.0129,  ..., 0.0131, 0.0129, 0.0134],
         [0.9631, 0.9604, 0.9612,  ..., 0.9608, 0.9614, 0.9597]],
        [[0.0133, 0.0129, 0.0128,  ..., 0.0130, 0.0127, 0.0139],
         [0.0133, 0.0129, 0.0128,  ..., 0.0130, 0.0127, 0.0139],
         [0.0133, 0.0129, 0.0128,  ..., 0.0130, 0.0127, 0.0139],
         [0.9602, 0.9613, 0.9616,  ..., 0.9609, 0.9618, 0.9584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0125, 0.0111, 0.0117,  ..., 0.0171, 0.2500, 0.0133],
         [0.0080, 0.0072, 0.0068,  ..., 0.0094, 0.2500, 0.0074],
         [0.0080, 0.0072, 0.0068,  ..., 0.0094, 0.2500, 0.0074],
         [0.9715, 0.9746, 0.9747,  ..., 0.9641, 0.2500, 0.9718]],
        [[0.0072, 0.0076, 0.0079,  ..., 0.0090, 0.0077, 0.0063],
         [0.0072, 0.0076, 0.0079,  ..., 0.0090, 0.0077, 0.0063],
         [0.0072, 0.0081, 0.0098,  ..., 0.0143, 0.0091, 0.0063],
         [0.9783, 0.9767, 0.9743,  ..., 0.9676, 0.9756, 0.9812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 271:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:25,825 [Process: 0] Synchronize training processes
2024-08-16 14:28:25,826 [Process: 0] Evaluating...
2024-08-16 14:28:25,827 [Process: 0] EPOCH 271:
2024-08-16 14:28:25,829 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0125, 0.0129, 0.0125,  ..., 0.0134, 0.0132, 0.0126],
         [0.0125, 0.0129, 0.0125,  ..., 0.0134, 0.0132, 0.0126],
         [0.0125, 0.0129, 0.0125,  ..., 0.0134, 0.0132, 0.0126],
         [0.9626, 0.9614, 0.9625,  ..., 0.9597, 0.9605, 0.9621]],
        [[0.0128, 0.0124, 0.0131,  ..., 0.0127, 0.0125, 0.0130],
         [0.0128, 0.0124, 0.0131,  ..., 0.0127, 0.0125, 0.0130],
         [0.0128, 0.0124, 0.0131,  ..., 0.0127, 0.0125, 0.0130],
         [0.9615, 0.9627, 0.9607,  ..., 0.9618, 0.9626, 0.9610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0179, 0.2500, 0.0100,  ..., 0.2500, 0.2500, 0.0072],
         [0.0096, 0.2500, 0.0060,  ..., 0.2500, 0.2500, 0.0049],
         [0.0096, 0.2500, 0.0060,  ..., 0.2500, 0.2500, 0.0049],
         [0.9630, 0.2500, 0.9781,  ..., 0.2500, 0.2500, 0.9829]],
        [[0.0074, 0.0071, 0.0068,  ..., 0.0070, 0.0093, 0.0062],
         [0.0074, 0.0071, 0.0068,  ..., 0.0070, 0.0093, 0.0062],
         [0.0080, 0.0073, 0.0070,  ..., 0.0072, 0.0136, 0.0062],
         [0.9771, 0.9786, 0.9794,  ..., 0.9788, 0.9678, 0.9813]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 272:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:27,822 [Process: 0] Synchronize training processes
2024-08-16 14:28:27,823 [Process: 0] Evaluating...
2024-08-16 14:28:27,831 [Process: 0] EPOCH 272:
2024-08-16 14:28:27,833 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0130, 0.0130, 0.0134,  ..., 0.0129, 0.0136, 0.0134],
         [0.0130, 0.0130, 0.0134,  ..., 0.0129, 0.0136, 0.0134],
         [0.0130, 0.0130, 0.0134,  ..., 0.0129, 0.0136, 0.0134],
         [0.9609, 0.9611, 0.9597,  ..., 0.9612, 0.9593, 0.9598]],
        [[0.0142, 0.0134, 0.0132,  ..., 0.0123, 0.0128, 0.0135],
         [0.0142, 0.0134, 0.0132,  ..., 0.0123, 0.0128, 0.0135],
         [0.0142, 0.0134, 0.0132,  ..., 0.0123, 0.0128, 0.0135],
         [0.9575, 0.9597, 0.9603,  ..., 0.9631, 0.9616, 0.9594]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0173, 0.2569, 0.0103,  ..., 0.2373, 0.0090, 0.0062],
         [0.0095, 0.2477, 0.0064,  ..., 0.2373, 0.0062, 0.0044],
         [0.0095, 0.2477, 0.0064,  ..., 0.2880, 0.0062, 0.0044],
         [0.9637, 0.2477, 0.9770,  ..., 0.2373, 0.9786, 0.9850]],
        [[0.0083, 0.0059, 0.0079,  ..., 0.0088, 0.0074, 0.0074],
         [0.0083, 0.0059, 0.0079,  ..., 0.0088, 0.0074, 0.0074],
         [0.0104, 0.0059, 0.0095,  ..., 0.0118, 0.0089, 0.0102],
         [0.9730, 0.9822, 0.9747,  ..., 0.9706, 0.9764, 0.9750]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 273:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:29,782 [Process: 0] Synchronize training processes
2024-08-16 14:28:29,782 [Process: 0] Evaluating...
2024-08-16 14:28:29,784 [Process: 0] EPOCH 273:
2024-08-16 14:28:29,786 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0131, 0.0130, 0.0127,  ..., 0.0125, 0.0136, 0.0128],
         [0.0131, 0.0130, 0.0127,  ..., 0.0125, 0.0136, 0.0128],
         [0.0131, 0.0130, 0.0127,  ..., 0.0125, 0.0136, 0.0128],
         [0.9606, 0.9611, 0.9619,  ..., 0.9626, 0.9593, 0.9615]],
        [[0.0127, 0.0131, 0.0133,  ..., 0.0123, 0.0123, 0.0128],
         [0.0127, 0.0131, 0.0133,  ..., 0.0123, 0.0123, 0.0128],
         [0.0127, 0.0131, 0.0133,  ..., 0.0123, 0.0123, 0.0128],
         [0.9618, 0.9606, 0.9600,  ..., 0.9631, 0.9630, 0.9615]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0111, 0.0079, 0.2500,  ..., 0.0094, 0.2500, 0.2500],
         [0.0065, 0.0053, 0.2500,  ..., 0.0058, 0.2500, 0.2500],
         [0.0065, 0.0053, 0.2500,  ..., 0.0058, 0.2500, 0.2500],
         [0.9759, 0.9815, 0.2500,  ..., 0.9789, 0.2500, 0.2500]],
        [[0.0054, 0.0081, 0.0066,  ..., 0.0074, 0.0057, 0.0077],
         [0.0054, 0.0081, 0.0066,  ..., 0.0074, 0.0057, 0.0077],
         [0.0054, 0.0104, 0.0066,  ..., 0.0076, 0.0057, 0.0093],
         [0.9837, 0.9734, 0.9801,  ..., 0.9776, 0.9830, 0.9753]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 274:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:31,850 [Process: 0] Synchronize training processes
2024-08-16 14:28:31,851 [Process: 0] Evaluating...
2024-08-16 14:28:31,853 [Process: 0] EPOCH 274:
2024-08-16 14:28:31,855 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0130, 0.0130,  ..., 0.0121, 0.0134, 0.0131],
         [0.0129, 0.0130, 0.0130,  ..., 0.0121, 0.0134, 0.0131],
         [0.0129, 0.0130, 0.0130,  ..., 0.0121, 0.0134, 0.0131],
         [0.9614, 0.9609, 0.9609,  ..., 0.9637, 0.9598, 0.9608]],
        [[0.0122, 0.0127, 0.0123,  ..., 0.0126, 0.0127, 0.0123],
         [0.0122, 0.0127, 0.0123,  ..., 0.0126, 0.0127, 0.0123],
         [0.0122, 0.0127, 0.0123,  ..., 0.0126, 0.0127, 0.0123],
         [0.9635, 0.9618, 0.9632,  ..., 0.9623, 0.9619, 0.9631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0112, 0.2517,  ..., 0.0111, 0.2500, 0.2500],
         [0.2500, 0.0070, 0.2494,  ..., 0.0072, 0.2500, 0.2500],
         [0.2500, 0.0070, 0.2494,  ..., 0.0072, 0.2500, 0.2500],
         [0.2500, 0.9748, 0.2494,  ..., 0.9745, 0.2500, 0.2500]],
        [[0.0083, 0.0080, 0.0067,  ..., 0.0070, 0.0071, 0.0067],
         [0.0083, 0.0080, 0.0067,  ..., 0.0070, 0.0071, 0.0067],
         [0.0104, 0.0093, 0.0067,  ..., 0.0070, 0.0071, 0.0067],
         [0.9731, 0.9746, 0.9800,  ..., 0.9789, 0.9787, 0.9798]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 275:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:33,915 [Process: 0] Synchronize training processes
2024-08-16 14:28:33,916 [Process: 0] Evaluating...
2024-08-16 14:28:33,917 [Process: 0] EPOCH 275:
2024-08-16 14:28:33,919 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0126, 0.0137, 0.0130,  ..., 0.0127, 0.0134, 0.0131],
         [0.0126, 0.0137, 0.0130,  ..., 0.0127, 0.0134, 0.0131],
         [0.0126, 0.0137, 0.0130,  ..., 0.0127, 0.0134, 0.0131],
         [0.9621, 0.9588, 0.9610,  ..., 0.9619, 0.9599, 0.9608]],
        [[0.0136, 0.0126, 0.0126,  ..., 0.0131, 0.0123, 0.0133],
         [0.0136, 0.0126, 0.0126,  ..., 0.0131, 0.0123, 0.0133],
         [0.0136, 0.0126, 0.0126,  ..., 0.0131, 0.0123, 0.0133],
         [0.9593, 0.9622, 0.9622,  ..., 0.9607, 0.9631, 0.9601]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0175, 0.2500,  ..., 0.2500, 0.2500, 0.0146],
         [0.0056, 0.0100, 0.2500,  ..., 0.2500, 0.2500, 0.0082],
         [0.0056, 0.0100, 0.2500,  ..., 0.2500, 0.2500, 0.0082],
         [0.9809, 0.9625, 0.2500,  ..., 0.2500, 0.2500, 0.9691]],
        [[0.0058, 0.0087, 0.0075,  ..., 0.0077, 0.0069, 0.0068],
         [0.0058, 0.0087, 0.0075,  ..., 0.0077, 0.0069, 0.0068],
         [0.0058, 0.0145, 0.0096,  ..., 0.0088, 0.0078, 0.0068],
         [0.9827, 0.9680, 0.9755,  ..., 0.9757, 0.9784, 0.9797]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 276:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:36,003 [Process: 0] Synchronize training processes
2024-08-16 14:28:36,003 [Process: 0] Evaluating...
2024-08-16 14:28:36,005 [Process: 0] EPOCH 276:
2024-08-16 14:28:36,007 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0122, 0.0124,  ..., 0.0131, 0.0124, 0.0129],
         [0.0129, 0.0122, 0.0124,  ..., 0.0131, 0.0124, 0.0129],
         [0.0129, 0.0122, 0.0124,  ..., 0.0131, 0.0124, 0.0129],
         [0.9612, 0.9634, 0.9629,  ..., 0.9607, 0.9628, 0.9614]],
        [[0.0126, 0.0128, 0.0127,  ..., 0.0123, 0.0128, 0.0129],
         [0.0126, 0.0128, 0.0127,  ..., 0.0123, 0.0128, 0.0129],
         [0.0126, 0.0128, 0.0127,  ..., 0.0123, 0.0128, 0.0129],
         [0.9621, 0.9615, 0.9618,  ..., 0.9630, 0.9615, 0.9612]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2512, 0.2500, 0.2150,  ..., 0.0098, 0.2500, 0.0128],
         [0.2496, 0.2500, 0.2150,  ..., 0.0065, 0.2500, 0.0083],
         [0.2496, 0.2500, 0.3551,  ..., 0.0065, 0.2500, 0.0083],
         [0.2496, 0.2500, 0.2150,  ..., 0.9773, 0.2500, 0.9706]],
        [[0.0059, 0.0075, 0.0077,  ..., 0.0068, 0.0068, 0.0077],
         [0.0059, 0.0075, 0.0077,  ..., 0.0068, 0.0068, 0.0077],
         [0.0059, 0.0101, 0.0102,  ..., 0.0068, 0.0074, 0.0092],
         [0.9823, 0.9749, 0.9744,  ..., 0.9795, 0.9790, 0.9753]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 277:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:38,074 [Process: 0] Synchronize training processes
2024-08-16 14:28:38,074 [Process: 0] Evaluating...
2024-08-16 14:28:38,076 [Process: 0] EPOCH 277:
2024-08-16 14:28:38,078 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0123, 0.0123, 0.0129,  ..., 0.0125, 0.0125, 0.0127],
         [0.0123, 0.0123, 0.0129,  ..., 0.0125, 0.0125, 0.0127],
         [0.0123, 0.0123, 0.0129,  ..., 0.0125, 0.0125, 0.0127],
         [0.9631, 0.9631, 0.9612,  ..., 0.9626, 0.9626, 0.9618]],
        [[0.0128, 0.0127, 0.0121,  ..., 0.0125, 0.0128, 0.0126],
         [0.0128, 0.0127, 0.0121,  ..., 0.0125, 0.0128, 0.0126],
         [0.0128, 0.0127, 0.0121,  ..., 0.0125, 0.0128, 0.0126],
         [0.9615, 0.9619, 0.9636,  ..., 0.9624, 0.9617, 0.9622]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3544, 0.0227, 0.2500,  ..., 0.0086, 0.0055, 0.0164],
         [0.2152, 0.0062, 0.2500,  ..., 0.0086, 0.0055, 0.0052],
         [0.2152, 0.0060, 0.2500,  ..., 0.0086, 0.0055, 0.0052],
         [0.2152, 0.9650, 0.2500,  ..., 0.9743, 0.9834, 0.9732]],
        [[0.0064, 0.0061, 0.0076,  ..., 0.0069, 0.0062, 0.0080],
         [0.0064, 0.0061, 0.0076,  ..., 0.0069, 0.0062, 0.0080],
         [0.0064, 0.0061, 0.0115,  ..., 0.0070, 0.0062, 0.0104],
         [0.9809, 0.9817, 0.9733,  ..., 0.9792, 0.9814, 0.9737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:28:40,132 [Process: 0] Synchronize training processes
2024-08-16 14:28:40,132 [Process: 0] Evaluating...
2024-08-16 14:28:40,134 [Process: 0] EPOCH 278:
2024-08-16 14:28:40,136 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 278:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0127, 0.0131, 0.0123,  ..., 0.0124, 0.0129, 0.0127],
         [0.0127, 0.0131, 0.0123,  ..., 0.0124, 0.0129, 0.0127],
         [0.0127, 0.0131, 0.0123,  ..., 0.0124, 0.0129, 0.0127],
         [0.9618, 0.9608, 0.9632,  ..., 0.9629, 0.9614, 0.9619]],
        [[0.0122, 0.0129, 0.0122,  ..., 0.0128, 0.0129, 0.0126],
         [0.0122, 0.0129, 0.0122,  ..., 0.0128, 0.0129, 0.0126],
         [0.0122, 0.0129, 0.0122,  ..., 0.0128, 0.0129, 0.0126],
         [0.9634, 0.9614, 0.9634,  ..., 0.9615, 0.9613, 0.9622]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0128, 0.2500,  ..., 0.0079, 0.0083, 0.0122],
         [0.2500, 0.0071, 0.2500,  ..., 0.0050, 0.0057, 0.0067],
         [0.2500, 0.0071, 0.2500,  ..., 0.0050, 0.0057, 0.0067],
         [0.2500, 0.9729, 0.2500,  ..., 0.9821, 0.9804, 0.9745]],
        [[0.0074, 0.0070, 0.0072,  ..., 0.0076, 0.0067, 0.0062],
         [0.0074, 0.0070, 0.0072,  ..., 0.0076, 0.0067, 0.0062],
         [0.0089, 0.0075, 0.0089,  ..., 0.0087, 0.0067, 0.0062],
         [0.9762, 0.9786, 0.9766,  ..., 0.9762, 0.9798, 0.9814]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 279:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:42,052 [Process: 0] Synchronize training processes
2024-08-16 14:28:42,052 [Process: 0] Evaluating...
2024-08-16 14:28:42,054 [Process: 0] EPOCH 279:
2024-08-16 14:28:42,056 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0119, 0.0127, 0.0124,  ..., 0.0121, 0.0123, 0.0129],
         [0.0119, 0.0127, 0.0124,  ..., 0.0121, 0.0123, 0.0129],
         [0.0119, 0.0127, 0.0124,  ..., 0.0121, 0.0123, 0.0129],
         [0.9643, 0.9620, 0.9629,  ..., 0.9638, 0.9630, 0.9612]],
        [[0.0123, 0.0125, 0.0124,  ..., 0.0124, 0.0123, 0.0125],
         [0.0123, 0.0125, 0.0124,  ..., 0.0124, 0.0123, 0.0125],
         [0.0123, 0.0125, 0.0124,  ..., 0.0124, 0.0123, 0.0125],
         [0.9632, 0.9626, 0.9627,  ..., 0.9629, 0.9630, 0.9624]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0147,  ..., 0.2500, 0.2500, 0.0102],
         [0.2500, 0.2500, 0.0097,  ..., 0.2500, 0.2500, 0.0075],
         [0.2500, 0.2500, 0.0097,  ..., 0.2500, 0.2500, 0.0075],
         [0.2500, 0.2500, 0.9658,  ..., 0.2500, 0.2500, 0.9748]],
        [[0.0074, 0.0059, 0.0077,  ..., 0.0071, 0.0068, 0.0073],
         [0.0074, 0.0059, 0.0077,  ..., 0.0071, 0.0068, 0.0073],
         [0.0080, 0.0059, 0.0093,  ..., 0.0071, 0.0068, 0.0077],
         [0.9772, 0.9822, 0.9754,  ..., 0.9788, 0.9797, 0.9777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 280:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:44,004 [Process: 0] Synchronize training processes
2024-08-16 14:28:44,004 [Process: 0] Evaluating...
2024-08-16 14:28:44,006 [Process: 0] EPOCH 280:
2024-08-16 14:28:44,008 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0124, 0.0123, 0.0120,  ..., 0.0127, 0.0136, 0.0127],
         [0.0124, 0.0123, 0.0120,  ..., 0.0127, 0.0136, 0.0127],
         [0.0124, 0.0123, 0.0120,  ..., 0.0127, 0.0136, 0.0127],
         [0.9629, 0.9631, 0.9639,  ..., 0.9618, 0.9593, 0.9618]],
        [[0.0121, 0.0125, 0.0123,  ..., 0.0121, 0.0130, 0.0118],
         [0.0121, 0.0125, 0.0123,  ..., 0.0121, 0.0130, 0.0118],
         [0.0121, 0.0125, 0.0123,  ..., 0.0121, 0.0130, 0.0118],
         [0.9638, 0.9626, 0.9630,  ..., 0.9637, 0.9611, 0.9645]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0104, 0.0174, 0.0076,  ..., 0.0284, 0.2500, 0.0139],
         [0.0066, 0.0052, 0.0054,  ..., 0.0086, 0.2500, 0.0051],
         [0.0066, 0.0052, 0.0054,  ..., 0.0086, 0.2500, 0.0051],
         [0.9764, 0.9723, 0.9815,  ..., 0.9544, 0.2500, 0.9758]],
        [[0.0063, 0.0059, 0.0075,  ..., 0.0069, 0.0064, 0.0066],
         [0.0063, 0.0059, 0.0075,  ..., 0.0069, 0.0064, 0.0066],
         [0.0063, 0.0059, 0.0084,  ..., 0.0069, 0.0064, 0.0066],
         [0.9812, 0.9824, 0.9766,  ..., 0.9794, 0.9809, 0.9802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 281:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:45,920 [Process: 0] Synchronize training processes
2024-08-16 14:28:45,920 [Process: 0] Evaluating...
2024-08-16 14:28:45,922 [Process: 0] EPOCH 281:
2024-08-16 14:28:45,924 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0123, 0.0118, 0.0126,  ..., 0.0127, 0.0124, 0.0123],
         [0.0123, 0.0118, 0.0126,  ..., 0.0127, 0.0124, 0.0123],
         [0.0123, 0.0118, 0.0126,  ..., 0.0127, 0.0124, 0.0123],
         [0.9632, 0.9645, 0.9623,  ..., 0.9620, 0.9627, 0.9630]],
        [[0.0128, 0.0125, 0.0131,  ..., 0.0132, 0.0134, 0.0123],
         [0.0128, 0.0125, 0.0131,  ..., 0.0132, 0.0134, 0.0123],
         [0.0128, 0.0125, 0.0131,  ..., 0.0132, 0.0134, 0.0123],
         [0.9617, 0.9625, 0.9607,  ..., 0.9603, 0.9597, 0.9630]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0072, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0067, 0.0057, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0067, 0.0057, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.9759, 0.9814, 0.2500,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0070, 0.0065, 0.0052,  ..., 0.0068, 0.0070, 0.0071],
         [0.0070, 0.0065, 0.0052,  ..., 0.0068, 0.0070, 0.0071],
         [0.0070, 0.0065, 0.0052,  ..., 0.0068, 0.0070, 0.0071],
         [0.9791, 0.9806, 0.9843,  ..., 0.9796, 0.9789, 0.9787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 282:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:47,814 [Process: 0] Synchronize training processes
2024-08-16 14:28:47,815 [Process: 0] Evaluating...
2024-08-16 14:28:47,823 [Process: 0] EPOCH 282:
2024-08-16 14:28:47,825 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0127, 0.0125, 0.0127,  ..., 0.0126, 0.0117, 0.0120],
         [0.0127, 0.0125, 0.0127,  ..., 0.0126, 0.0117, 0.0120],
         [0.0127, 0.0125, 0.0127,  ..., 0.0126, 0.0117, 0.0120],
         [0.9618, 0.9624, 0.9619,  ..., 0.9623, 0.9649, 0.9640]],
        [[0.0125, 0.0120, 0.0127,  ..., 0.0121, 0.0123, 0.0135],
         [0.0125, 0.0120, 0.0127,  ..., 0.0121, 0.0123, 0.0135],
         [0.0125, 0.0120, 0.0127,  ..., 0.0121, 0.0123, 0.0135],
         [0.9626, 0.9640, 0.9620,  ..., 0.9637, 0.9630, 0.9595]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0132, 0.0068, 0.2500,  ..., 0.0091, 0.2500, 0.0051],
         [0.0049, 0.0054, 0.2500,  ..., 0.0059, 0.2500, 0.0044],
         [0.0049, 0.0054, 0.2500,  ..., 0.0059, 0.2500, 0.0044],
         [0.9770, 0.9824, 0.2500,  ..., 0.9790, 0.2500, 0.9860]],
        [[0.0079, 0.0088, 0.0072,  ..., 0.0069, 0.0075, 0.0070],
         [0.0079, 0.0088, 0.0072,  ..., 0.0069, 0.0075, 0.0070],
         [0.0090, 0.0124, 0.0076,  ..., 0.0069, 0.0084, 0.0070],
         [0.9752, 0.9699, 0.9779,  ..., 0.9793, 0.9766, 0.9790]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 283:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:49,716 [Process: 0] Synchronize training processes
2024-08-16 14:28:49,716 [Process: 0] Evaluating...
2024-08-16 14:28:49,718 [Process: 0] EPOCH 283:
2024-08-16 14:28:49,720 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0123, 0.0124, 0.0117,  ..., 0.0127, 0.0120, 0.0125],
         [0.0123, 0.0124, 0.0117,  ..., 0.0127, 0.0120, 0.0125],
         [0.0123, 0.0124, 0.0117,  ..., 0.0127, 0.0120, 0.0125],
         [0.9631, 0.9629, 0.9648,  ..., 0.9620, 0.9639, 0.9625]],
        [[0.0127, 0.0129, 0.0128,  ..., 0.0126, 0.0121, 0.0123],
         [0.0127, 0.0129, 0.0128,  ..., 0.0126, 0.0121, 0.0123],
         [0.0127, 0.0129, 0.0128,  ..., 0.0126, 0.0121, 0.0123],
         [0.9618, 0.9613, 0.9616,  ..., 0.9623, 0.9638, 0.9631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0087, 0.2500,  ..., 0.2500, 0.0183, 0.0168],
         [0.2500, 0.0067, 0.2500,  ..., 0.2500, 0.0063, 0.0056],
         [0.2500, 0.0067, 0.2500,  ..., 0.2500, 0.0063, 0.0056],
         [0.2500, 0.9778, 0.2500,  ..., 0.2500, 0.9690, 0.9719]],
        [[0.0073, 0.0082, 0.0075,  ..., 0.0075, 0.0062, 0.0063],
         [0.0073, 0.0082, 0.0075,  ..., 0.0075, 0.0062, 0.0063],
         [0.0073, 0.0103, 0.0083,  ..., 0.0083, 0.0062, 0.0063],
         [0.9780, 0.9732, 0.9767,  ..., 0.9766, 0.9814, 0.9811]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 284:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:51,612 [Process: 0] Synchronize training processes
2024-08-16 14:28:51,612 [Process: 0] Evaluating...
2024-08-16 14:28:51,614 [Process: 0] EPOCH 284:
2024-08-16 14:28:51,616 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:53,513 [Process: 0] Synchronize training processes
2024-08-16 14:28:53,513 [Process: 0] Evaluating...
2024-08-16 14:28:53,515 [Process: 0] EPOCH 285:
2024-08-16 14:28:53,517 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0120, 0.0116, 0.0119,  ..., 0.0124, 0.0119, 0.0120],
         [0.0120, 0.0116, 0.0119,  ..., 0.0124, 0.0119, 0.0120],
         [0.0120, 0.0116, 0.0119,  ..., 0.0124, 0.0119, 0.0120],
         [0.9639, 0.9652, 0.9642,  ..., 0.9629, 0.9643, 0.9639]],
        [[0.0124, 0.0120, 0.0119,  ..., 0.0121, 0.0128, 0.0126],
         [0.0124, 0.0120, 0.0119,  ..., 0.0121, 0.0128, 0.0126],
         [0.0124, 0.0120, 0.0119,  ..., 0.0121, 0.0128, 0.0126],
         [0.9629, 0.9640, 0.9642,  ..., 0.9637, 0.9615, 0.9623]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0184, 0.2500,  ..., 0.0109, 0.0058, 0.2500],
         [0.2500, 0.0067, 0.2500,  ..., 0.0049, 0.0047, 0.2500],
         [0.2500, 0.0067, 0.2500,  ..., 0.0049, 0.0047, 0.2500],
         [0.2500, 0.9681, 0.2500,  ..., 0.9793, 0.9849, 0.2500]],
        [[0.0083, 0.0069, 0.0063,  ..., 0.0083, 0.0085, 0.0091],
         [0.0083, 0.0069, 0.0063,  ..., 0.0083, 0.0085, 0.0091],
         [0.0114, 0.0077, 0.0063,  ..., 0.0124, 0.0141, 0.0158],
         [0.9719, 0.9785, 0.9810,  ..., 0.9709, 0.9688, 0.9659]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 285:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:55,414 [Process: 0] Synchronize training processes
2024-08-16 14:28:55,414 [Process: 0] Evaluating...
2024-08-16 14:28:55,416 [Process: 0] EPOCH 286:
2024-08-16 14:28:55,418 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0121, 0.0121, 0.0113,  ..., 0.0120, 0.0117, 0.0121],
         [0.0121, 0.0121, 0.0113,  ..., 0.0120, 0.0117, 0.0121],
         [0.0121, 0.0121, 0.0113,  ..., 0.0120, 0.0117, 0.0121],
         [0.9637, 0.9637, 0.9662,  ..., 0.9641, 0.9649, 0.9638]],
        [[0.0125, 0.0118, 0.0123,  ..., 0.0126, 0.0121, 0.0124],
         [0.0125, 0.0118, 0.0123,  ..., 0.0126, 0.0121, 0.0124],
         [0.0125, 0.0118, 0.0123,  ..., 0.0126, 0.0121, 0.0124],
         [0.9626, 0.9646, 0.9632,  ..., 0.9623, 0.9638, 0.9627]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0063, 0.0083, 0.0075,  ..., 0.0288, 0.2650, 0.0209],
         [0.0063, 0.0051, 0.0049,  ..., 0.0073, 0.2450, 0.0070],
         [0.0063, 0.0051, 0.0049,  ..., 0.0073, 0.2450, 0.0070],
         [0.9810, 0.9816, 0.9827,  ..., 0.9565, 0.2450, 0.9651]],
        [[0.0064, 0.0056, 0.0059,  ..., 0.0061, 0.0070, 0.0064],
         [0.0064, 0.0056, 0.0059,  ..., 0.0061, 0.0070, 0.0064],
         [0.0064, 0.0056, 0.0059,  ..., 0.0061, 0.0079, 0.0068],
         [0.9809, 0.9831, 0.9822,  ..., 0.9816, 0.9781, 0.9804]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 286:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:28:57,371 [Process: 0] Synchronize training processes
2024-08-16 14:28:57,371 [Process: 0] Evaluating...
2024-08-16 14:28:57,373 [Process: 0] EPOCH 287:
2024-08-16 14:28:57,375 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0122, 0.0127, 0.0119,  ..., 0.0121, 0.0121, 0.0124],
         [0.0122, 0.0127, 0.0119,  ..., 0.0121, 0.0121, 0.0124],
         [0.0122, 0.0127, 0.0119,  ..., 0.0121, 0.0121, 0.0124],
         [0.9633, 0.9618, 0.9642,  ..., 0.9638, 0.9638, 0.9628]],
        [[0.0121, 0.0119, 0.0121,  ..., 0.0118, 0.0124, 0.0121],
         [0.0121, 0.0119, 0.0121,  ..., 0.0118, 0.0124, 0.0121],
         [0.0121, 0.0119, 0.0121,  ..., 0.0118, 0.0124, 0.0121],
         [0.9636, 0.9642, 0.9638,  ..., 0.9645, 0.9629, 0.9638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.0254],
         [0.0069, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.0073],
         [0.0069, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.0072],
         [0.9793, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.9602]],
        [[0.0073, 0.0062, 0.0062,  ..., 0.0067, 0.0064, 0.0061],
         [0.0073, 0.0062, 0.0062,  ..., 0.0067, 0.0064, 0.0061],
         [0.0084, 0.0062, 0.0062,  ..., 0.0070, 0.0068, 0.0061],
         [0.9771, 0.9813, 0.9815,  ..., 0.9796, 0.9803, 0.9815]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 287:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:28:59,290 [Process: 0] Synchronize training processes
2024-08-16 14:28:59,290 [Process: 0] Evaluating...
2024-08-16 14:28:59,292 [Process: 0] EPOCH 288:
2024-08-16 14:28:59,294 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0115, 0.0117, 0.0122,  ..., 0.0115, 0.0120, 0.0125],
         [0.0115, 0.0117, 0.0122,  ..., 0.0115, 0.0120, 0.0125],
         [0.0115, 0.0117, 0.0122,  ..., 0.0115, 0.0120, 0.0125],
         [0.9655, 0.9649, 0.9633,  ..., 0.9654, 0.9640, 0.9624]],
        [[0.0118, 0.0126, 0.0124,  ..., 0.0123, 0.0123, 0.0122],
         [0.0118, 0.0126, 0.0124,  ..., 0.0123, 0.0123, 0.0122],
         [0.0118, 0.0126, 0.0124,  ..., 0.0123, 0.0123, 0.0122],
         [0.9647, 0.9622, 0.9629,  ..., 0.9631, 0.9630, 0.9635]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0108, 0.0101, 0.0106,  ..., 0.0402, 0.0069, 0.0079],
         [0.0069, 0.0061, 0.0062,  ..., 0.0101, 0.0069, 0.0072],
         [0.0069, 0.0061, 0.0062,  ..., 0.0101, 0.0069, 0.0072],
         [0.9754, 0.9776, 0.9770,  ..., 0.9395, 0.9792, 0.9778]],
        [[0.0065, 0.0070, 0.0068,  ..., 0.0064, 0.0069, 0.0063],
         [0.0065, 0.0070, 0.0068,  ..., 0.0064, 0.0069, 0.0063],
         [0.0066, 0.0088, 0.0074,  ..., 0.0071, 0.0079, 0.0063],
         [0.9804, 0.9772, 0.9790,  ..., 0.9801, 0.9784, 0.9812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 288:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0116, 0.0120, 0.0118,  ..., 0.0115, 0.0123, 0.0125],
         [0.0116, 0.0120, 0.0118,  ..., 0.0115, 0.0123, 0.0125],
         [0.0116, 0.0120, 0.0118,  ..., 0.0115, 0.0123, 0.0125],
         [0.9651, 0.9641, 0.9646,  ..., 0.9654, 0.9631, 0.9626]],
        [[0.0123, 0.0120, 0.0115,  ..., 0.0122, 0.0119, 0.0119],
         [0.0123, 0.0120, 0.0115,  ..., 0.0122, 0.0119, 0.0119],
         [0.0123, 0.0120, 0.0115,  ..., 0.0122, 0.0119, 0.0119],
         [0.9631, 0.9640, 0.9654,  ..., 0.9634, 0.9642, 0.9644]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:01,210 [Process: 0] Synchronize training processes
2024-08-16 14:29:01,210 [Process: 0] Evaluating...
2024-08-16 14:29:01,212 [Process: 0] EPOCH 289:
2024-08-16 14:29:01,214 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0139, 0.0215, 0.0189,  ..., 0.2500, 0.2500, 0.2500],
         [0.0068, 0.0062, 0.0054,  ..., 0.2500, 0.2500, 0.2500],
         [0.0068, 0.0062, 0.0054,  ..., 0.2500, 0.2500, 0.2500],
         [0.9726, 0.9661, 0.9704,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0068, 0.0063, 0.0067,  ..., 0.0052, 0.0061, 0.0072],
         [0.0068, 0.0063, 0.0067,  ..., 0.0052, 0.0061, 0.0072],
         [0.0078, 0.0071, 0.0072,  ..., 0.0052, 0.0061, 0.0101],
         [0.9785, 0.9803, 0.9793,  ..., 0.9843, 0.9816, 0.9755]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 289:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0121, 0.0119, 0.0117,  ..., 0.0125, 0.0117, 0.0117],
         [0.0121, 0.0119, 0.0117,  ..., 0.0125, 0.0117, 0.0117],
         [0.0121, 0.0119, 0.0117,  ..., 0.0125, 0.0117, 0.0117],
         [0.9638, 0.9644, 0.9649,  ..., 0.9625, 0.9648, 0.9649]],
        [[0.0119, 0.0124, 0.0117,  ..., 0.0114, 0.0116, 0.0119],
         [0.0119, 0.0124, 0.0117,  ..., 0.0114, 0.0116, 0.0119],
         [0.0119, 0.0124, 0.0117,  ..., 0.0114, 0.0116, 0.0119],
         [0.9644, 0.9629, 0.9648,  ..., 0.9657, 0.9651, 0.9642]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:03,141 [Process: 0] Synchronize training processes
2024-08-16 14:29:03,142 [Process: 0] Evaluating...
2024-08-16 14:29:03,144 [Process: 0] EPOCH 290:
2024-08-16 14:29:03,145 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0077, 0.2500, 0.0087,  ..., 0.2500, 0.0145, 0.0152],
         [0.0062, 0.2500, 0.0063,  ..., 0.2500, 0.0067, 0.0073],
         [0.0062, 0.2500, 0.0063,  ..., 0.2500, 0.0067, 0.0073],
         [0.9800, 0.2500, 0.9787,  ..., 0.2500, 0.9721, 0.9702]],
        [[0.0066, 0.0060, 0.0070,  ..., 0.0071, 0.0106, 0.0065],
         [0.0066, 0.0060, 0.0070,  ..., 0.0071, 0.0060, 0.0065],
         [0.0074, 0.0060, 0.0084,  ..., 0.0086, 0.0060, 0.0077],
         [0.9794, 0.9820, 0.9775,  ..., 0.9771, 0.9773, 0.9793]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 290:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0118, 0.0115, 0.0127,  ..., 0.0121, 0.0122, 0.0119],
         [0.0118, 0.0115, 0.0127,  ..., 0.0121, 0.0122, 0.0119],
         [0.0118, 0.0115, 0.0127,  ..., 0.0121, 0.0122, 0.0119],
         [0.9645, 0.9655, 0.9618,  ..., 0.9638, 0.9634, 0.9643]],
        [[0.0122, 0.0124, 0.0113,  ..., 0.0118, 0.0118, 0.0117],
         [0.0122, 0.0124, 0.0113,  ..., 0.0118, 0.0118, 0.0117],
         [0.0122, 0.0124, 0.0113,  ..., 0.0118, 0.0118, 0.0117],
         [0.9635, 0.9628, 0.9662,  ..., 0.9647, 0.9646, 0.9650]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:05,034 [Process: 0] Synchronize training processes
2024-08-16 14:29:05,035 [Process: 0] Evaluating...
2024-08-16 14:29:05,037 [Process: 0] EPOCH 291:
2024-08-16 14:29:05,039 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0119, 0.2500, 0.0061,  ..., 0.0067, 0.0086, 0.2500],
         [0.0054, 0.2500, 0.0058,  ..., 0.0044, 0.0063, 0.2500],
         [0.0054, 0.2500, 0.0058,  ..., 0.0044, 0.0063, 0.2500],
         [0.9772, 0.2500, 0.9823,  ..., 0.9846, 0.9787, 0.2500]],
        [[0.0073, 0.0065, 0.0067,  ..., 0.0074, 0.0064, 0.0076],
         [0.0073, 0.0065, 0.0067,  ..., 0.0074, 0.0064, 0.0076],
         [0.0094, 0.0067, 0.0082,  ..., 0.0095, 0.0066, 0.0104],
         [0.9760, 0.9804, 0.9784,  ..., 0.9758, 0.9805, 0.9744]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 291:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0122, 0.0121, 0.0122,  ..., 0.0119, 0.0118, 0.0121],
         [0.0122, 0.0121, 0.0122,  ..., 0.0119, 0.0118, 0.0121],
         [0.0122, 0.0121, 0.0122,  ..., 0.0119, 0.0118, 0.0121],
         [0.9634, 0.9637, 0.9634,  ..., 0.9643, 0.9645, 0.9636]],
        [[0.0123, 0.0123, 0.0119,  ..., 0.0119, 0.0121, 0.0114],
         [0.0123, 0.0123, 0.0119,  ..., 0.0119, 0.0121, 0.0114],
         [0.0123, 0.0123, 0.0119,  ..., 0.0119, 0.0121, 0.0114],
         [0.9632, 0.9632, 0.9643,  ..., 0.9642, 0.9638, 0.9657]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:06,925 [Process: 0] Synchronize training processes
2024-08-16 14:29:06,925 [Process: 0] Evaluating...
2024-08-16 14:29:06,933 [Process: 0] EPOCH 292:
2024-08-16 14:29:06,935 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0072,  ..., 0.0094, 0.0150, 0.2500],
         [0.2500, 0.2500, 0.0057,  ..., 0.0048, 0.0056, 0.2500],
         [0.2500, 0.2500, 0.0057,  ..., 0.0048, 0.0056, 0.2500],
         [0.2500, 0.2500, 0.9815,  ..., 0.9809, 0.9737, 0.2500]],
        [[0.0073, 0.0066, 0.0065,  ..., 0.0061, 0.0074, 0.0078],
         [0.0073, 0.0066, 0.0065,  ..., 0.0061, 0.0074, 0.0078],
         [0.0092, 0.0066, 0.0071,  ..., 0.0066, 0.0084, 0.0111],
         [0.9762, 0.9801, 0.9799,  ..., 0.9811, 0.9768, 0.9734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 292:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0112, 0.0119, 0.0118,  ..., 0.0114, 0.0117, 0.0112],
         [0.0112, 0.0119, 0.0118,  ..., 0.0114, 0.0117, 0.0112],
         [0.0112, 0.0119, 0.0118,  ..., 0.0114, 0.0117, 0.0112],
         [0.9663, 0.9643, 0.9647,  ..., 0.9659, 0.9649, 0.9665]],
        [[0.0114, 0.0118, 0.0122,  ..., 0.0115, 0.0116, 0.0121],
         [0.0114, 0.0118, 0.0122,  ..., 0.0115, 0.0116, 0.0121],
         [0.0114, 0.0118, 0.0122,  ..., 0.0115, 0.0116, 0.0121],
         [0.9657, 0.9645, 0.9633,  ..., 0.9654, 0.9653, 0.9638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:08,837 [Process: 0] Synchronize training processes
2024-08-16 14:29:08,837 [Process: 0] Evaluating...
2024-08-16 14:29:08,839 [Process: 0] EPOCH 293:
2024-08-16 14:29:08,841 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0109, 0.2500, 0.0133,  ..., 0.0121, 0.2500, 0.2500],
         [0.0049, 0.2500, 0.0080,  ..., 0.0050, 0.2500, 0.2500],
         [0.0049, 0.2500, 0.0080,  ..., 0.0050, 0.2500, 0.2500],
         [0.9794, 0.2500, 0.9707,  ..., 0.9779, 0.2500, 0.2500]],
        [[0.0055, 0.0065, 0.0068,  ..., 0.0065, 0.0064, 0.0057],
         [0.0055, 0.0065, 0.0068,  ..., 0.0065, 0.0064, 0.0057],
         [0.0055, 0.0076, 0.0079,  ..., 0.0065, 0.0064, 0.0057],
         [0.9835, 0.9794, 0.9785,  ..., 0.9805, 0.9808, 0.9830]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 293:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0117, 0.0124, 0.0119,  ..., 0.0119, 0.0115, 0.0126],
         [0.0117, 0.0124, 0.0119,  ..., 0.0119, 0.0115, 0.0126],
         [0.0117, 0.0124, 0.0119,  ..., 0.0119, 0.0115, 0.0126],
         [0.9648, 0.9628, 0.9642,  ..., 0.9644, 0.9655, 0.9623]],
        [[0.0116, 0.0115, 0.0122,  ..., 0.0111, 0.0118, 0.0118],
         [0.0116, 0.0115, 0.0122,  ..., 0.0111, 0.0118, 0.0118],
         [0.0116, 0.0115, 0.0122,  ..., 0.0111, 0.0118, 0.0118],
         [0.9651, 0.9654, 0.9633,  ..., 0.9666, 0.9645, 0.9647]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:10,728 [Process: 0] Synchronize training processes
2024-08-16 14:29:10,728 [Process: 0] Evaluating...
2024-08-16 14:29:10,730 [Process: 0] EPOCH 294:
2024-08-16 14:29:10,732 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0165, 0.0253,  ..., 0.2500, 0.2500, 0.0152],
         [0.2500, 0.0067, 0.0073,  ..., 0.2500, 0.2500, 0.0082],
         [0.2500, 0.0067, 0.0073,  ..., 0.2500, 0.2500, 0.0082],
         [0.2500, 0.9700, 0.9601,  ..., 0.2500, 0.2500, 0.9685]],
        [[0.0070, 0.0072, 0.0078,  ..., 0.0071, 0.0069, 0.0061],
         [0.0070, 0.0072, 0.0078,  ..., 0.0071, 0.0069, 0.0061],
         [0.0081, 0.0092, 0.0119,  ..., 0.0083, 0.0078, 0.0061],
         [0.9779, 0.9765, 0.9725,  ..., 0.9776, 0.9784, 0.9817]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 294:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0122, 0.0116, 0.0114,  ..., 0.0117, 0.0119, 0.0118],
         [0.0122, 0.0116, 0.0114,  ..., 0.0117, 0.0119, 0.0118],
         [0.0122, 0.0116, 0.0114,  ..., 0.0117, 0.0119, 0.0118],
         [0.9635, 0.9651, 0.9658,  ..., 0.9648, 0.9642, 0.9645]],
        [[0.0121, 0.0114, 0.0115,  ..., 0.0117, 0.0119, 0.0115],
         [0.0121, 0.0114, 0.0115,  ..., 0.0117, 0.0119, 0.0115],
         [0.0121, 0.0114, 0.0115,  ..., 0.0117, 0.0119, 0.0115],
         [0.9637, 0.9658, 0.9654,  ..., 0.9649, 0.9643, 0.9656]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:12,642 [Process: 0] Synchronize training processes
2024-08-16 14:29:12,642 [Process: 0] Evaluating...
2024-08-16 14:29:12,644 [Process: 0] EPOCH 295:
2024-08-16 14:29:12,646 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.2500, 0.0161,  ..., 0.2500, 0.2335, 0.0061],
         [0.0043, 0.2500, 0.0061,  ..., 0.2500, 0.2335, 0.0048],
         [0.0043, 0.2500, 0.0061,  ..., 0.2500, 0.2996, 0.0048],
         [0.9833, 0.2500, 0.9716,  ..., 0.2500, 0.2335, 0.9844]],
        [[0.0056, 0.0063, 0.0067,  ..., 0.0060, 0.0055, 0.0067],
         [0.0056, 0.0063, 0.0067,  ..., 0.0060, 0.0055, 0.0067],
         [0.0056, 0.0063, 0.0077,  ..., 0.0060, 0.0055, 0.0079],
         [0.9831, 0.9810, 0.9789,  ..., 0.9821, 0.9835, 0.9787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 295:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0112, 0.0112, 0.0117,  ..., 0.0117, 0.0116, 0.0113],
         [0.0112, 0.0112, 0.0117,  ..., 0.0117, 0.0116, 0.0113],
         [0.0112, 0.0112, 0.0117,  ..., 0.0117, 0.0116, 0.0113],
         [0.9664, 0.9665, 0.9649,  ..., 0.9648, 0.9651, 0.9662]],
        [[0.0119, 0.0119, 0.0111,  ..., 0.0117, 0.0109, 0.0119],
         [0.0119, 0.0119, 0.0111,  ..., 0.0117, 0.0109, 0.0119],
         [0.0119, 0.0119, 0.0111,  ..., 0.0117, 0.0109, 0.0119],
         [0.9644, 0.9643, 0.9668,  ..., 0.9650, 0.9672, 0.9644]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:14,543 [Process: 0] Synchronize training processes
2024-08-16 14:29:14,543 [Process: 0] Evaluating...
2024-08-16 14:29:14,545 [Process: 0] EPOCH 296:
2024-08-16 14:29:14,547 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0127, 0.2674, 0.0081,  ..., 0.0104, 0.2383, 0.0090],
         [0.0050, 0.2442, 0.0053,  ..., 0.0046, 0.2383, 0.0054],
         [0.0050, 0.2442, 0.0053,  ..., 0.0046, 0.2850, 0.0054],
         [0.9772, 0.2442, 0.9814,  ..., 0.9804, 0.2383, 0.9803]],
        [[0.0061, 0.0059, 0.0054,  ..., 0.0061, 0.0063, 0.0056],
         [0.0061, 0.0059, 0.0054,  ..., 0.0061, 0.0063, 0.0056],
         [0.0061, 0.0062, 0.0054,  ..., 0.0061, 0.0064, 0.0056],
         [0.9817, 0.9821, 0.9839,  ..., 0.9818, 0.9811, 0.9832]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 296:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0111, 0.0115, 0.0114,  ..., 0.0111, 0.0118, 0.0120],
         [0.0111, 0.0115, 0.0114,  ..., 0.0111, 0.0118, 0.0120],
         [0.0111, 0.0115, 0.0114,  ..., 0.0111, 0.0118, 0.0120],
         [0.9667, 0.9656, 0.9659,  ..., 0.9666, 0.9647, 0.9640]],
        [[0.0120, 0.0117, 0.0113,  ..., 0.0114, 0.0114, 0.0111],
         [0.0120, 0.0117, 0.0113,  ..., 0.0114, 0.0114, 0.0111],
         [0.0120, 0.0117, 0.0113,  ..., 0.0114, 0.0114, 0.0111],
         [0.9639, 0.9649, 0.9661,  ..., 0.9657, 0.9659, 0.9667]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 14:29:16,439 [Process: 0] Synchronize training processes
2024-08-16 14:29:16,439 [Process: 0] Evaluating...
2024-08-16 14:29:16,441 [Process: 0] EPOCH 297:
2024-08-16 14:29:16,443 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0051, 0.0122, 0.2500,  ..., 0.0162, 0.2500, 0.2500],
         [0.0048, 0.0066, 0.2500,  ..., 0.0063, 0.2500, 0.2500],
         [0.0048, 0.0066, 0.2500,  ..., 0.0063, 0.2500, 0.2500],
         [0.9853, 0.9745, 0.2500,  ..., 0.9712, 0.2500, 0.2500]],
        [[0.0071, 0.0063, 0.0071,  ..., 0.0063, 0.0072, 0.0071],
         [0.0071, 0.0063, 0.0071,  ..., 0.0063, 0.0072, 0.0071],
         [0.0092, 0.0069, 0.0089,  ..., 0.0065, 0.0094, 0.0079],
         [0.9767, 0.9805, 0.9768,  ..., 0.9808, 0.9762, 0.9779]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 297:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0117, 0.0121, 0.0116,  ..., 0.0112, 0.0115, 0.0113],
         [0.0117, 0.0121, 0.0116,  ..., 0.0112, 0.0115, 0.0113],
         [0.0117, 0.0121, 0.0116,  ..., 0.0112, 0.0115, 0.0113],
         [0.9648, 0.9636, 0.9653,  ..., 0.9663, 0.9654, 0.9660]],
        [[0.0119, 0.0114, 0.0108,  ..., 0.0118, 0.0118, 0.0115],
         [0.0119, 0.0114, 0.0108,  ..., 0.0118, 0.0118, 0.0115],
         [0.0119, 0.0114, 0.0108,  ..., 0.0118, 0.0118, 0.0115],
         [0.9643, 0.9658, 0.9675,  ..., 0.9646, 0.9647, 0.9655]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:29:18,378 [Process: 0] Synchronize training processes
2024-08-16 14:29:18,378 [Process: 0] Evaluating...
2024-08-16 14:29:18,380 [Process: 0] EPOCH 298:
2024-08-16 14:29:18,382 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0054, 0.2506,  ..., 0.0071, 0.2500, 0.0045],
         [0.2500, 0.0041, 0.2498,  ..., 0.0041, 0.2500, 0.0045],
         [0.2500, 0.0041, 0.2498,  ..., 0.0041, 0.2500, 0.0045],
         [0.2500, 0.9865, 0.2498,  ..., 0.9848, 0.2500, 0.9866]],
        [[0.0066, 0.0060, 0.0068,  ..., 0.0059, 0.0061, 0.0061],
         [0.0066, 0.0060, 0.0068,  ..., 0.0059, 0.0061, 0.0061],
         [0.0077, 0.0064, 0.0090,  ..., 0.0059, 0.0070, 0.0065],
         [0.9792, 0.9816, 0.9773,  ..., 0.9823, 0.9809, 0.9812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 298:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0117, 0.0112, 0.0113,  ..., 0.0119, 0.0114, 0.0113],
         [0.0117, 0.0112, 0.0113,  ..., 0.0119, 0.0114, 0.0113],
         [0.0117, 0.0112, 0.0113,  ..., 0.0119, 0.0114, 0.0113],
         [0.9648, 0.9665, 0.9660,  ..., 0.9644, 0.9657, 0.9661]],
        [[0.0109, 0.0110, 0.0122,  ..., 0.0114, 0.0117, 0.0110],
         [0.0109, 0.0110, 0.0122,  ..., 0.0114, 0.0117, 0.0110],
         [0.0109, 0.0110, 0.0122,  ..., 0.0114, 0.0117, 0.0110],
         [0.9674, 0.9670, 0.9633,  ..., 0.9657, 0.9650, 0.9671]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0130, 0.2500, 0.2500,  ..., 0.0159, 0.0074, 0.0086],
         [0.0062, 0.2500, 0.2500,  ..., 0.0066, 0.0061, 0.0055],
         [0.0062, 0.2500, 0.2500,  ..., 0.0066, 0.0061, 0.0055],
         [0.9746, 0.2500, 0.2500,  ..., 0.9709, 0.9804, 0.9805]],
        [[0.0059, 0.0068, 0.0061,  ..., 0.0062, 0.0061, 0.0071],
         [0.0059, 0.0068, 0.0061,  ..., 0.0062, 0.0061, 0.0071],
         [0.0059, 0.0085, 0.0069,  ..., 0.0067, 0.0063, 0.0084],
         [0.9824, 0.9779, 0.9809,  ..., 0.9808, 0.9815, 0.9773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:20,281 [Process: 0] Synchronize training processes
2024-08-16 14:29:20,282 [Process: 0] Evaluating...
2024-08-16 14:29:20,283 [Process: 0] EPOCH 299:
2024-08-16 14:29:20,285 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 299:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0117, 0.0106, 0.0111,  ..., 0.0112, 0.0113, 0.0112],
         [0.0117, 0.0106, 0.0111,  ..., 0.0112, 0.0113, 0.0112],
         [0.0117, 0.0106, 0.0111,  ..., 0.0112, 0.0113, 0.0112],
         [0.9649, 0.9683, 0.9666,  ..., 0.9664, 0.9661, 0.9664]],
        [[0.0119, 0.0112, 0.0115,  ..., 0.0115, 0.0111, 0.0117],
         [0.0119, 0.0112, 0.0115,  ..., 0.0115, 0.0111, 0.0117],
         [0.0119, 0.0112, 0.0115,  ..., 0.0115, 0.0111, 0.0117],
         [0.9642, 0.9664, 0.9654,  ..., 0.9656, 0.9668, 0.9648]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0098, 0.2500, 0.2500,  ..., 0.0085, 0.2500, 0.0105],
         [0.0066, 0.2500, 0.2500,  ..., 0.0055, 0.2500, 0.0058],
         [0.0066, 0.2500, 0.2500,  ..., 0.0055, 0.2500, 0.0058],
         [0.9770, 0.2500, 0.2500,  ..., 0.9806, 0.2500, 0.9780]],
        [[0.0063, 0.0052, 0.0054,  ..., 0.0054, 0.0073, 0.0052],
         [0.0063, 0.0052, 0.0054,  ..., 0.0054, 0.0073, 0.0052],
         [0.0081, 0.0052, 0.0054,  ..., 0.0054, 0.0136, 0.0052],
         [0.9793, 0.9843, 0.9839,  ..., 0.9838, 0.9717, 0.9844]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 300:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:29:22,176 [Process: 0] Synchronize training processes
2024-08-16 14:29:22,176 [Process: 0] Evaluating...
2024-08-16 14:29:22,178 [Process: 0] EPOCH 300:
2024-08-16 14:29:22,180 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0108, 0.0117, 0.0112,  ..., 0.0114, 0.0118, 0.0120],
         [0.0108, 0.0117, 0.0112,  ..., 0.0114, 0.0118, 0.0120],
         [0.0108, 0.0117, 0.0112,  ..., 0.0114, 0.0118, 0.0120],
         [0.9677, 0.9649, 0.9665,  ..., 0.9657, 0.9645, 0.9639]],
        [[0.0113, 0.0117, 0.0111,  ..., 0.0115, 0.0118, 0.0112],
         [0.0113, 0.0117, 0.0111,  ..., 0.0115, 0.0118, 0.0112],
         [0.0113, 0.0117, 0.0111,  ..., 0.0115, 0.0118, 0.0112],
         [0.9660, 0.9648, 0.9666,  ..., 0.9654, 0.9647, 0.9664]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2552, 0.2500, 0.2307,  ..., 0.0068, 0.0099, 0.0104],
         [0.2483, 0.2500, 0.2307,  ..., 0.0056, 0.0068, 0.0060],
         [0.2483, 0.2500, 0.3078,  ..., 0.0056, 0.0068, 0.0060],
         [0.2483, 0.2500, 0.2307,  ..., 0.9821, 0.9766, 0.9777]],
        [[0.0054, 0.0055, 0.0066,  ..., 0.0060, 0.0066, 0.0058],
         [0.0054, 0.0055, 0.0066,  ..., 0.0060, 0.0066, 0.0058],
         [0.0054, 0.0055, 0.0076,  ..., 0.0063, 0.0076, 0.0058],
         [0.9838, 0.9836, 0.9793,  ..., 0.9817, 0.9792, 0.9827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 301:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:29:24,075 [Process: 0] Synchronize training processes
2024-08-16 14:29:24,076 [Process: 0] Evaluating...
2024-08-16 14:29:24,078 [Process: 0] EPOCH 301:
2024-08-16 14:29:24,080 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0120, 0.0115, 0.0113,  ..., 0.0113, 0.0111, 0.0111],
         [0.0120, 0.0115, 0.0113,  ..., 0.0113, 0.0111, 0.0111],
         [0.0120, 0.0115, 0.0113,  ..., 0.0113, 0.0111, 0.0111],
         [0.9640, 0.9656, 0.9660,  ..., 0.9661, 0.9666, 0.9667]],
        [[0.0112, 0.0112, 0.0118,  ..., 0.0112, 0.0109, 0.0112],
         [0.0112, 0.0112, 0.0118,  ..., 0.0112, 0.0109, 0.0112],
         [0.0112, 0.0112, 0.0118,  ..., 0.0112, 0.0109, 0.0112],
         [0.9664, 0.9664, 0.9645,  ..., 0.9665, 0.9673, 0.9663]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0141, 0.0122,  ..., 0.0076, 0.2500, 0.0109],
         [0.2500, 0.0076, 0.0069,  ..., 0.0054, 0.2500, 0.0056],
         [0.2500, 0.0076, 0.0069,  ..., 0.0054, 0.2500, 0.0056],
         [0.2500, 0.9707, 0.9739,  ..., 0.9816, 0.2500, 0.9779]],
        [[0.0051, 0.0070, 0.0058,  ..., 0.0056, 0.0061, 0.0069],
         [0.0051, 0.0070, 0.0058,  ..., 0.0056, 0.0061, 0.0069],
         [0.0051, 0.0090, 0.0058,  ..., 0.0056, 0.0066, 0.0104],
         [0.9847, 0.9771, 0.9826,  ..., 0.9831, 0.9812, 0.9757]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 302:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:29:25,972 [Process: 0] Synchronize training processes
2024-08-16 14:29:25,972 [Process: 0] Evaluating...
2024-08-16 14:29:25,981 [Process: 0] EPOCH 302:
2024-08-16 14:29:25,982 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0116, 0.0109, 0.0110,  ..., 0.0115, 0.0118, 0.0111],
         [0.0116, 0.0109, 0.0110,  ..., 0.0115, 0.0118, 0.0111],
         [0.0116, 0.0109, 0.0110,  ..., 0.0115, 0.0118, 0.0111],
         [0.9652, 0.9672, 0.9670,  ..., 0.9656, 0.9645, 0.9666]],
        [[0.0116, 0.0114, 0.0117,  ..., 0.0114, 0.0114, 0.0104],
         [0.0116, 0.0114, 0.0117,  ..., 0.0114, 0.0114, 0.0104],
         [0.0116, 0.0114, 0.0117,  ..., 0.0114, 0.0114, 0.0104],
         [0.9653, 0.9658, 0.9649,  ..., 0.9658, 0.9658, 0.9688]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0126, 0.2500, 0.0090,  ..., 0.2500, 0.0101, 0.0069],
         [0.0078, 0.2500, 0.0062,  ..., 0.2500, 0.0056, 0.0053],
         [0.0078, 0.2500, 0.0062,  ..., 0.2500, 0.0056, 0.0053],
         [0.9719, 0.2500, 0.9786,  ..., 0.2500, 0.9786, 0.9825]],
        [[0.0061, 0.0058, 0.0063,  ..., 0.0064, 0.0059, 0.0061],
         [0.0061, 0.0058, 0.0063,  ..., 0.0064, 0.0059, 0.0061],
         [0.0069, 0.0064, 0.0067,  ..., 0.0080, 0.0061, 0.0070],
         [0.9809, 0.9819, 0.9808,  ..., 0.9792, 0.9821, 0.9807]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 303:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:29:27,876 [Process: 0] Synchronize training processes
2024-08-16 14:29:27,876 [Process: 0] Evaluating...
2024-08-16 14:29:27,878 [Process: 0] EPOCH 303:
2024-08-16 14:29:27,880 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0111, 0.0112, 0.0116,  ..., 0.0113, 0.0112, 0.0114],
         [0.0111, 0.0112, 0.0116,  ..., 0.0113, 0.0112, 0.0114],
         [0.0111, 0.0112, 0.0116,  ..., 0.0113, 0.0112, 0.0114],
         [0.9666, 0.9663, 0.9652,  ..., 0.9662, 0.9665, 0.9659]],
        [[0.0110, 0.0113, 0.0110,  ..., 0.0112, 0.0110, 0.0113],
         [0.0110, 0.0113, 0.0110,  ..., 0.0112, 0.0110, 0.0113],
         [0.0110, 0.0113, 0.0110,  ..., 0.0112, 0.0110, 0.0113],
         [0.9670, 0.9662, 0.9670,  ..., 0.9665, 0.9669, 0.9660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.2747, 0.0067,  ..., 0.2500, 0.2547, 0.2500],
         [0.0056, 0.2418, 0.0045,  ..., 0.2500, 0.2484, 0.2500],
         [0.0056, 0.2418, 0.0045,  ..., 0.2500, 0.2484, 0.2500],
         [0.9787, 0.2418, 0.9844,  ..., 0.2500, 0.2484, 0.2500]],
        [[0.0064, 0.0061, 0.0064,  ..., 0.0057, 0.0068, 0.0065],
         [0.0064, 0.0061, 0.0064,  ..., 0.0057, 0.0068, 0.0065],
         [0.0075, 0.0071, 0.0071,  ..., 0.0058, 0.0097, 0.0080],
         [0.9796, 0.9808, 0.9801,  ..., 0.9829, 0.9768, 0.9790]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 304:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:29:29,787 [Process: 0] Synchronize training processes
2024-08-16 14:29:29,787 [Process: 0] Evaluating...
2024-08-16 14:29:29,789 [Process: 0] EPOCH 304:
2024-08-16 14:29:29,791 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0109, 0.0110, 0.0115,  ..., 0.0110, 0.0113, 0.0116],
         [0.0109, 0.0110, 0.0115,  ..., 0.0110, 0.0113, 0.0116],
         [0.0109, 0.0110, 0.0115,  ..., 0.0110, 0.0113, 0.0116],
         [0.9672, 0.9669, 0.9654,  ..., 0.9671, 0.9660, 0.9651]],
        [[0.0112, 0.0113, 0.0110,  ..., 0.0109, 0.0115, 0.0110],
         [0.0112, 0.0113, 0.0110,  ..., 0.0109, 0.0115, 0.0110],
         [0.0112, 0.0113, 0.0110,  ..., 0.0109, 0.0115, 0.0110],
         [0.9664, 0.9660, 0.9671,  ..., 0.9674, 0.9654, 0.9669]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.2500, 0.2500,  ..., 0.2500, 0.0129, 0.0113],
         [0.0049, 0.2500, 0.2500,  ..., 0.2500, 0.0063, 0.0067],
         [0.0049, 0.2500, 0.2500,  ..., 0.2500, 0.0063, 0.0067],
         [0.9836, 0.2500, 0.2500,  ..., 0.2500, 0.9745, 0.9753]],
        [[0.0056, 0.0062, 0.0062,  ..., 0.0056, 0.0066, 0.0059],
         [0.0056, 0.0062, 0.0062,  ..., 0.0056, 0.0066, 0.0059],
         [0.0058, 0.0068, 0.0071,  ..., 0.0061, 0.0096, 0.0059],
         [0.9830, 0.9809, 0.9805,  ..., 0.9826, 0.9772, 0.9823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 305:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:29:31,665 [Process: 0] Synchronize training processes
2024-08-16 14:29:31,665 [Process: 0] Evaluating...
2024-08-16 14:29:31,667 [Process: 0] EPOCH 305:
2024-08-16 14:29:31,669 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0109, 0.0113, 0.0108,  ..., 0.0113, 0.0106, 0.0110],
         [0.0109, 0.0113, 0.0108,  ..., 0.0113, 0.0106, 0.0110],
         [0.0109, 0.0113, 0.0108,  ..., 0.0113, 0.0106, 0.0110],
         [0.9673, 0.9662, 0.9677,  ..., 0.9660, 0.9681, 0.9671]],
        [[0.0113, 0.0113, 0.0111,  ..., 0.0106, 0.0111, 0.0113],
         [0.0113, 0.0113, 0.0111,  ..., 0.0106, 0.0111, 0.0113],
         [0.0113, 0.0113, 0.0111,  ..., 0.0106, 0.0111, 0.0113],
         [0.9660, 0.9662, 0.9668,  ..., 0.9683, 0.9667, 0.9660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 14:29:33,561 [Process: 0] Synchronize training processes
2024-08-16 14:29:33,562 [Process: 0] Evaluating...
2024-08-16 14:29:33,564 [Process: 0] EPOCH 306:
2024-08-16 14:29:33,565 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:29:35,469 [Process: 0] Synchronize training processes
2024-08-16 14:29:35,469 [Process: 0] Evaluating...
2024-08-16 14:29:35,471 [Process: 0] EPOCH 307:
2024-08-16 14:29:35,473 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.0122, 0.2500, 0.2500,  ..., 0.0076, 0.2652, 0.2500],
         [0.0073, 0.2500, 0.2500,  ..., 0.0056, 0.2449, 0.2500],
         [0.0073, 0.2500, 0.2500,  ..., 0.0056, 0.2449, 0.2500],
         [0.9732, 0.2500, 0.2500,  ..., 0.9811, 0.2449, 0.2500]],
        [[0.0058, 0.0057, 0.0054,  ..., 0.0062, 0.0062, 0.0065],
         [0.0058, 0.0057, 0.0054,  ..., 0.0062, 0.0062, 0.0065],
         [0.0058, 0.0057, 0.0054,  ..., 0.0072, 0.0074, 0.0090],
         [0.9827, 0.9829, 0.9838,  ..., 0.9804, 0.9801, 0.9779]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 306:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0114, 0.0113, 0.0111,  ..., 0.0108, 0.0114, 0.0112],
         [0.0114, 0.0113, 0.0111,  ..., 0.0108, 0.0114, 0.0112],
         [0.0114, 0.0113, 0.0111,  ..., 0.0108, 0.0114, 0.0112],
         [0.9659, 0.9661, 0.9667,  ..., 0.9676, 0.9659, 0.9665]],
        [[0.0115, 0.0114, 0.0113,  ..., 0.0109, 0.0109, 0.0109],
         [0.0115, 0.0114, 0.0113,  ..., 0.0109, 0.0109, 0.0109],
         [0.0115, 0.0114, 0.0113,  ..., 0.0109, 0.0109, 0.0109],
         [0.9656, 0.9657, 0.9660,  ..., 0.9673, 0.9673, 0.9674]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2500,  ..., 0.2585, 0.0118, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2472, 0.0060, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2472, 0.0060, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2472, 0.9762, 0.2500]],
        [[0.0061, 0.0061, 0.0063,  ..., 0.0059, 0.0055, 0.0064],
         [0.0061, 0.0061, 0.0063,  ..., 0.0059, 0.0055, 0.0064],
         [0.0064, 0.0063, 0.0075,  ..., 0.0071, 0.0055, 0.0078],
         [0.9814, 0.9815, 0.9799,  ..., 0.9811, 0.9834, 0.9793]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 307:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0108, 0.0113, 0.0107,  ..., 0.0112, 0.0106, 0.0111],
         [0.0108, 0.0113, 0.0107,  ..., 0.0112, 0.0106, 0.0111],
         [0.0108, 0.0113, 0.0107,  ..., 0.0112, 0.0106, 0.0111],
         [0.9675, 0.9661, 0.9679,  ..., 0.9665, 0.9683, 0.9666]],
        [[0.0107, 0.0109, 0.0109,  ..., 0.0114, 0.0108, 0.0106],
         [0.0107, 0.0109, 0.0109,  ..., 0.0114, 0.0108, 0.0106],
         [0.0107, 0.0109, 0.0109,  ..., 0.0114, 0.0108, 0.0106],
         [0.9678, 0.9672, 0.9672,  ..., 0.9659, 0.9676, 0.9683]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:37,363 [Process: 0] Synchronize training processes
2024-08-16 14:29:37,363 [Process: 0] Evaluating...
2024-08-16 14:29:37,365 [Process: 0] EPOCH 308:
2024-08-16 14:29:37,367 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0074, 0.0076,  ..., 0.0106, 0.2500, 0.0059],
         [0.2500, 0.0052, 0.0051,  ..., 0.0052, 0.2500, 0.0052],
         [0.2500, 0.0052, 0.0051,  ..., 0.0052, 0.2500, 0.0052],
         [0.2500, 0.9821, 0.9823,  ..., 0.9790, 0.2500, 0.9837]],
        [[0.0063, 0.0060, 0.0059,  ..., 0.0059, 0.0059, 0.0062],
         [0.0063, 0.0060, 0.0059,  ..., 0.0059, 0.0059, 0.0062],
         [0.0075, 0.0066, 0.0065,  ..., 0.0068, 0.0082, 0.0075],
         [0.9798, 0.9814, 0.9818,  ..., 0.9814, 0.9800, 0.9800]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 308:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0109, 0.0111, 0.0113,  ..., 0.0112, 0.0108, 0.0112],
         [0.0109, 0.0111, 0.0113,  ..., 0.0112, 0.0108, 0.0112],
         [0.0109, 0.0111, 0.0113,  ..., 0.0112, 0.0108, 0.0112],
         [0.9673, 0.9668, 0.9662,  ..., 0.9664, 0.9676, 0.9664]],
        [[0.0111, 0.0111, 0.0113,  ..., 0.0106, 0.0106, 0.0109],
         [0.0111, 0.0111, 0.0113,  ..., 0.0106, 0.0106, 0.0109],
         [0.0111, 0.0111, 0.0113,  ..., 0.0106, 0.0106, 0.0109],
         [0.9666, 0.9668, 0.9661,  ..., 0.9683, 0.9683, 0.9674]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:39,254 [Process: 0] Synchronize training processes
2024-08-16 14:29:39,254 [Process: 0] Evaluating...
2024-08-16 14:29:39,256 [Process: 0] EPOCH 309:
2024-08-16 14:29:39,258 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0100, 0.2500, 0.2616,  ..., 0.0056, 0.1812, 0.0115],
         [0.0057, 0.2500, 0.2461,  ..., 0.0041, 0.1812, 0.0056],
         [0.0057, 0.2500, 0.2461,  ..., 0.0041, 0.4563, 0.0056],
         [0.9786, 0.2500, 0.2461,  ..., 0.9861, 0.1812, 0.9773]],
        [[0.0060, 0.0062, 0.0058,  ..., 0.0064, 0.0070, 0.0061],
         [0.0060, 0.0062, 0.0058,  ..., 0.0064, 0.0057, 0.0061],
         [0.0070, 0.0076, 0.0058,  ..., 0.0078, 0.0057, 0.0069],
         [0.9809, 0.9801, 0.9826,  ..., 0.9795, 0.9817, 0.9808]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 309:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0110, 0.0106, 0.0110,  ..., 0.0108, 0.0104, 0.0109],
         [0.0110, 0.0106, 0.0110,  ..., 0.0108, 0.0104, 0.0109],
         [0.0110, 0.0106, 0.0110,  ..., 0.0108, 0.0104, 0.0109],
         [0.9671, 0.9683, 0.9670,  ..., 0.9675, 0.9689, 0.9674]],
        [[0.0112, 0.0109, 0.0108,  ..., 0.0110, 0.0106, 0.0111],
         [0.0112, 0.0109, 0.0108,  ..., 0.0110, 0.0106, 0.0111],
         [0.0112, 0.0109, 0.0108,  ..., 0.0110, 0.0106, 0.0111],
         [0.9663, 0.9672, 0.9677,  ..., 0.9671, 0.9682, 0.9667]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:41,151 [Process: 0] Synchronize training processes
2024-08-16 14:29:41,152 [Process: 0] Evaluating...
2024-08-16 14:29:41,154 [Process: 0] EPOCH 310:
2024-08-16 14:29:41,156 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.2500, 0.0119,  ..., 0.0060, 0.2500, 0.0134],
         [0.0054, 0.2500, 0.0062,  ..., 0.0041, 0.2500, 0.0066],
         [0.0054, 0.2500, 0.0062,  ..., 0.0041, 0.2500, 0.0066],
         [0.9819, 0.2500, 0.9756,  ..., 0.9858, 0.2500, 0.9735]],
        [[0.0068, 0.0055, 0.0066,  ..., 0.0050, 0.0061, 0.0062],
         [0.0068, 0.0055, 0.0066,  ..., 0.0050, 0.0061, 0.0062],
         [0.0108, 0.0056, 0.0086,  ..., 0.0050, 0.0073, 0.0077],
         [0.9757, 0.9834, 0.9782,  ..., 0.9851, 0.9804, 0.9798]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 310:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0106, 0.0107, 0.0115,  ..., 0.0107, 0.0107, 0.0111],
         [0.0106, 0.0107, 0.0115,  ..., 0.0107, 0.0107, 0.0111],
         [0.0106, 0.0107, 0.0115,  ..., 0.0107, 0.0107, 0.0111],
         [0.9683, 0.9678, 0.9654,  ..., 0.9679, 0.9678, 0.9668]],
        [[0.0106, 0.0103, 0.0112,  ..., 0.0114, 0.0105, 0.0107],
         [0.0106, 0.0103, 0.0112,  ..., 0.0114, 0.0105, 0.0107],
         [0.0106, 0.0103, 0.0112,  ..., 0.0114, 0.0105, 0.0107],
         [0.9682, 0.9691, 0.9665,  ..., 0.9659, 0.9685, 0.9679]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:43,052 [Process: 0] Synchronize training processes
2024-08-16 14:29:43,052 [Process: 0] Evaluating...
2024-08-16 14:29:43,054 [Process: 0] EPOCH 311:
2024-08-16 14:29:43,056 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0154,  ..., 0.2500, 0.0080, 0.2500],
         [0.2500, 0.2500, 0.0072,  ..., 0.2500, 0.0053, 0.2500],
         [0.2500, 0.2500, 0.0072,  ..., 0.2500, 0.0053, 0.2500],
         [0.2500, 0.2500, 0.9702,  ..., 0.2500, 0.9815, 0.2500]],
        [[0.0056, 0.0055, 0.0065,  ..., 0.0052, 0.0056, 0.0048],
         [0.0056, 0.0055, 0.0065,  ..., 0.0052, 0.0056, 0.0048],
         [0.0056, 0.0059, 0.0099,  ..., 0.0052, 0.0060, 0.0048],
         [0.9831, 0.9831, 0.9770,  ..., 0.9843, 0.9827, 0.9855]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 311:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0106, 0.0109, 0.0106,  ..., 0.0104, 0.0103, 0.0107],
         [0.0106, 0.0109, 0.0106,  ..., 0.0104, 0.0103, 0.0107],
         [0.0106, 0.0109, 0.0106,  ..., 0.0104, 0.0103, 0.0107],
         [0.9682, 0.9673, 0.9682,  ..., 0.9689, 0.9690, 0.9678]],
        [[0.0107, 0.0111, 0.0110,  ..., 0.0109, 0.0116, 0.0108],
         [0.0107, 0.0111, 0.0110,  ..., 0.0109, 0.0116, 0.0108],
         [0.0107, 0.0111, 0.0110,  ..., 0.0109, 0.0116, 0.0108],
         [0.9678, 0.9668, 0.9670,  ..., 0.9673, 0.9651, 0.9676]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:44,945 [Process: 0] Synchronize training processes
2024-08-16 14:29:44,946 [Process: 0] Evaluating...
2024-08-16 14:29:44,954 [Process: 0] EPOCH 312:
2024-08-16 14:29:44,956 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0106, 0.2500, 0.0069,  ..., 0.0059, 0.2500, 0.0083],
         [0.0065, 0.2500, 0.0048,  ..., 0.0047, 0.2500, 0.0052],
         [0.0065, 0.2500, 0.0048,  ..., 0.0047, 0.2500, 0.0052],
         [0.9764, 0.2500, 0.9835,  ..., 0.9847, 0.2500, 0.9812]],
        [[0.0055, 0.0056, 0.0051,  ..., 0.0047, 0.0053, 0.0056],
         [0.0055, 0.0056, 0.0051,  ..., 0.0047, 0.0053, 0.0056],
         [0.0066, 0.0061, 0.0051,  ..., 0.0047, 0.0055, 0.0064],
         [0.9824, 0.9827, 0.9846,  ..., 0.9860, 0.9839, 0.9824]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 312:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.0105, 0.0110,  ..., 0.0109, 0.0108, 0.0108],
         [0.0102, 0.0105, 0.0110,  ..., 0.0109, 0.0108, 0.0108],
         [0.0102, 0.0105, 0.0110,  ..., 0.0109, 0.0108, 0.0108],
         [0.9693, 0.9684, 0.9670,  ..., 0.9672, 0.9675, 0.9675]],
        [[0.0105, 0.0106, 0.0108,  ..., 0.0113, 0.0111, 0.0108],
         [0.0105, 0.0106, 0.0108,  ..., 0.0113, 0.0111, 0.0108],
         [0.0105, 0.0106, 0.0108,  ..., 0.0113, 0.0111, 0.0108],
         [0.9684, 0.9683, 0.9677,  ..., 0.9662, 0.9666, 0.9677]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:46,846 [Process: 0] Synchronize training processes
2024-08-16 14:29:46,846 [Process: 0] Evaluating...
2024-08-16 14:29:46,848 [Process: 0] EPOCH 313:
2024-08-16 14:29:46,850 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0110, 0.0050, 0.2500,  ..., 0.2500, 0.2680, 0.2500],
         [0.0068, 0.0044, 0.2500,  ..., 0.2500, 0.2440, 0.2500],
         [0.0068, 0.0044, 0.2500,  ..., 0.2500, 0.2440, 0.2500],
         [0.9755, 0.9861, 0.2500,  ..., 0.2500, 0.2440, 0.2500]],
        [[0.0058, 0.0051, 0.0058,  ..., 0.0054, 0.0050, 0.0056],
         [0.0058, 0.0051, 0.0058,  ..., 0.0054, 0.0050, 0.0056],
         [0.0060, 0.0051, 0.0067,  ..., 0.0063, 0.0050, 0.0065],
         [0.9824, 0.9847, 0.9818,  ..., 0.9829, 0.9851, 0.9822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 313:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0105, 0.0105, 0.0106,  ..., 0.0110, 0.0107, 0.0104],
         [0.0105, 0.0105, 0.0106,  ..., 0.0110, 0.0107, 0.0104],
         [0.0105, 0.0105, 0.0106,  ..., 0.0110, 0.0107, 0.0104],
         [0.9685, 0.9685, 0.9681,  ..., 0.9670, 0.9680, 0.9687]],
        [[0.0109, 0.0105, 0.0107,  ..., 0.0113, 0.0108, 0.0105],
         [0.0109, 0.0105, 0.0107,  ..., 0.0113, 0.0108, 0.0105],
         [0.0109, 0.0105, 0.0107,  ..., 0.0113, 0.0108, 0.0105],
         [0.9673, 0.9686, 0.9678,  ..., 0.9662, 0.9677, 0.9684]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:48,728 [Process: 0] Synchronize training processes
2024-08-16 14:29:48,728 [Process: 0] Evaluating...
2024-08-16 14:29:48,730 [Process: 0] EPOCH 314:
2024-08-16 14:29:48,732 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0105, 0.2500, 0.0074,  ..., 0.2500, 0.0071, 0.0093],
         [0.0060, 0.2500, 0.0056,  ..., 0.2500, 0.0056, 0.0070],
         [0.0060, 0.2500, 0.0056,  ..., 0.2500, 0.0056, 0.0070],
         [0.9775, 0.2500, 0.9813,  ..., 0.2500, 0.9817, 0.9768]],
        [[0.0054, 0.0060, 0.0061,  ..., 0.0062, 0.0061, 0.0058],
         [0.0054, 0.0060, 0.0061,  ..., 0.0062, 0.0061, 0.0058],
         [0.0054, 0.0063, 0.0079,  ..., 0.0071, 0.0093, 0.0067],
         [0.9837, 0.9817, 0.9798,  ..., 0.9805, 0.9784, 0.9817]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 314:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0110, 0.0105,  ..., 0.0102, 0.0109, 0.0104],
         [0.0101, 0.0110, 0.0105,  ..., 0.0102, 0.0109, 0.0104],
         [0.0101, 0.0110, 0.0105,  ..., 0.0102, 0.0109, 0.0104],
         [0.9697, 0.9671, 0.9684,  ..., 0.9694, 0.9673, 0.9688]],
        [[0.0104, 0.0108, 0.0107,  ..., 0.0109, 0.0107, 0.0105],
         [0.0104, 0.0108, 0.0107,  ..., 0.0109, 0.0107, 0.0105],
         [0.0104, 0.0108, 0.0107,  ..., 0.0109, 0.0107, 0.0105],
         [0.9687, 0.9677, 0.9679,  ..., 0.9674, 0.9678, 0.9686]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:50,616 [Process: 0] Synchronize training processes
2024-08-16 14:29:50,616 [Process: 0] Evaluating...
2024-08-16 14:29:50,618 [Process: 0] EPOCH 315:
2024-08-16 14:29:50,620 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0074, 0.2500, 0.0070,  ..., 0.2500, 0.0098, 0.0093],
         [0.0054, 0.2500, 0.0052,  ..., 0.2500, 0.0064, 0.0066],
         [0.0054, 0.2500, 0.0052,  ..., 0.2500, 0.0064, 0.0066],
         [0.9818, 0.2500, 0.9827,  ..., 0.2500, 0.9773, 0.9774]],
        [[0.0058, 0.0057, 0.0058,  ..., 0.0068, 0.0054, 0.0057],
         [0.0058, 0.0057, 0.0058,  ..., 0.0053, 0.0054, 0.0057],
         [0.0070, 0.0067, 0.0071,  ..., 0.0053, 0.0054, 0.0072],
         [0.9813, 0.9818, 0.9814,  ..., 0.9825, 0.9838, 0.9815]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 315:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0108, 0.0106, 0.0103,  ..., 0.0104, 0.0107, 0.0102],
         [0.0108, 0.0106, 0.0103,  ..., 0.0104, 0.0107, 0.0102],
         [0.0108, 0.0106, 0.0103,  ..., 0.0104, 0.0107, 0.0102],
         [0.9675, 0.9682, 0.9691,  ..., 0.9687, 0.9680, 0.9694]],
        [[0.0104, 0.0108, 0.0106,  ..., 0.0106, 0.0103, 0.0105],
         [0.0104, 0.0108, 0.0106,  ..., 0.0106, 0.0103, 0.0105],
         [0.0104, 0.0108, 0.0106,  ..., 0.0106, 0.0103, 0.0105],
         [0.9689, 0.9676, 0.9682,  ..., 0.9682, 0.9691, 0.9684]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:29:52,515 [Process: 0] Synchronize training processes
2024-08-16 14:29:52,515 [Process: 0] Evaluating...
2024-08-16 14:29:52,517 [Process: 0] EPOCH 316:
2024-08-16 14:29:52,519 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0080, 0.0090,  ..., 0.2500, 0.0110, 0.2500],
         [0.2500, 0.0061, 0.0054,  ..., 0.2500, 0.0061, 0.2500],
         [0.2500, 0.0061, 0.0054,  ..., 0.2500, 0.0061, 0.2500],
         [0.2500, 0.9799, 0.9802,  ..., 0.2500, 0.9769, 0.2500]],
        [[0.0056, 0.0054, 0.0056,  ..., 0.0053, 0.0052, 0.0054],
         [0.0056, 0.0054, 0.0056,  ..., 0.0053, 0.0052, 0.0054],
         [0.0067, 0.0054, 0.0065,  ..., 0.0061, 0.0056, 0.0056],
         [0.9821, 0.9839, 0.9824,  ..., 0.9833, 0.9840, 0.9837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 316:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0103, 0.0106, 0.0109,  ..., 0.0105, 0.0103, 0.0104],
         [0.0103, 0.0106, 0.0109,  ..., 0.0105, 0.0103, 0.0104],
         [0.0103, 0.0106, 0.0109,  ..., 0.0105, 0.0103, 0.0104],
         [0.9690, 0.9681, 0.9673,  ..., 0.9684, 0.9692, 0.9688]],
        [[0.0103, 0.0102, 0.0109,  ..., 0.0104, 0.0101, 0.0106],
         [0.0103, 0.0102, 0.0109,  ..., 0.0104, 0.0101, 0.0106],
         [0.0103, 0.0102, 0.0109,  ..., 0.0104, 0.0101, 0.0106],
         [0.9692, 0.9695, 0.9672,  ..., 0.9687, 0.9698, 0.9681]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0069,  ..., 0.0057, 0.2474, 0.0065],
         [0.2500, 0.2500, 0.0042,  ..., 0.0047, 0.2474, 0.0042],
         [0.2500, 0.2500, 0.0042,  ..., 0.0047, 0.2577, 0.0042],
         [0.2500, 0.2500, 0.9847,  ..., 0.9849, 0.2474, 0.9851]],
        [[0.0053, 0.0055, 0.0056,  ..., 0.0052, 0.0055, 0.0061],
         [0.0053, 0.0055, 0.0056,  ..., 0.0052, 0.0055, 0.0061],
         [0.0055, 0.0065, 0.0061,  ..., 0.0052, 0.0068, 0.0080],
         [0.9839, 0.9824, 0.9827,  ..., 0.9844, 0.9822, 0.9799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:29:54,420 [Process: 0] Synchronize training processes
2024-08-16 14:29:54,420 [Process: 0] Evaluating...
2024-08-16 14:29:54,422 [Process: 0] EPOCH 317:
2024-08-16 14:29:54,424 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 317:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0105, 0.0102, 0.0104,  ..., 0.0108, 0.0107, 0.0105],
         [0.0105, 0.0102, 0.0104,  ..., 0.0108, 0.0107, 0.0105],
         [0.0105, 0.0102, 0.0104,  ..., 0.0108, 0.0107, 0.0105],
         [0.9686, 0.9693, 0.9689,  ..., 0.9676, 0.9678, 0.9686]],
        [[0.0102, 0.0105, 0.0111,  ..., 0.0105, 0.0109, 0.0108],
         [0.0102, 0.0105, 0.0111,  ..., 0.0105, 0.0109, 0.0108],
         [0.0102, 0.0105, 0.0111,  ..., 0.0105, 0.0109, 0.0108],
         [0.9693, 0.9685, 0.9667,  ..., 0.9686, 0.9674, 0.9675]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0063, 0.2500,  ..., 0.0102, 0.0060, 0.0087],
         [0.0047, 0.0051, 0.2500,  ..., 0.0065, 0.0051, 0.0058],
         [0.0047, 0.0051, 0.2500,  ..., 0.0065, 0.0051, 0.0058],
         [0.9858, 0.9835, 0.2500,  ..., 0.9768, 0.9837, 0.9797]],
        [[0.0059, 0.0055, 0.0060,  ..., 0.0051, 0.0056, 0.0059],
         [0.0059, 0.0055, 0.0060,  ..., 0.0051, 0.0056, 0.0059],
         [0.0066, 0.0055, 0.0079,  ..., 0.0051, 0.0056, 0.0065],
         [0.9817, 0.9836, 0.9800,  ..., 0.9847, 0.9831, 0.9818]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 318:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:29:56,320 [Process: 0] Synchronize training processes
2024-08-16 14:29:56,320 [Process: 0] Evaluating...
2024-08-16 14:29:56,322 [Process: 0] EPOCH 318:
2024-08-16 14:29:56,324 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0105, 0.0105, 0.0108,  ..., 0.0107, 0.0104, 0.0105],
         [0.0105, 0.0105, 0.0108,  ..., 0.0107, 0.0104, 0.0105],
         [0.0105, 0.0105, 0.0108,  ..., 0.0107, 0.0104, 0.0105],
         [0.9685, 0.9685, 0.9677,  ..., 0.9678, 0.9689, 0.9686]],
        [[0.0101, 0.0108, 0.0104,  ..., 0.0102, 0.0106, 0.0104],
         [0.0101, 0.0108, 0.0104,  ..., 0.0102, 0.0106, 0.0104],
         [0.0101, 0.0108, 0.0104,  ..., 0.0102, 0.0106, 0.0104],
         [0.9696, 0.9676, 0.9688,  ..., 0.9693, 0.9683, 0.9689]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0123, 0.2500, 0.2500,  ..., 0.0073, 0.2500, 0.2500],
         [0.0063, 0.2500, 0.2500,  ..., 0.0054, 0.2500, 0.2500],
         [0.0063, 0.2500, 0.2500,  ..., 0.0054, 0.2500, 0.2500],
         [0.9750, 0.2500, 0.2500,  ..., 0.9819, 0.2500, 0.2500]],
        [[0.0057, 0.0051, 0.0060,  ..., 0.0056, 0.0061, 0.0063],
         [0.0057, 0.0051, 0.0060,  ..., 0.0056, 0.0061, 0.0063],
         [0.0072, 0.0051, 0.0080,  ..., 0.0057, 0.0078, 0.0095],
         [0.9815, 0.9847, 0.9799,  ..., 0.9832, 0.9801, 0.9778]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 319:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:29:58,213 [Process: 0] Synchronize training processes
2024-08-16 14:29:58,213 [Process: 0] Evaluating...
2024-08-16 14:29:58,215 [Process: 0] EPOCH 319:
2024-08-16 14:29:58,217 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0103, 0.0101, 0.0106,  ..., 0.0100, 0.0105, 0.0105],
         [0.0103, 0.0101, 0.0106,  ..., 0.0100, 0.0105, 0.0105],
         [0.0103, 0.0101, 0.0106,  ..., 0.0100, 0.0105, 0.0105],
         [0.9690, 0.9696, 0.9683,  ..., 0.9699, 0.9686, 0.9686]],
        [[0.0103, 0.0101, 0.0107,  ..., 0.0106, 0.0102, 0.0107],
         [0.0103, 0.0101, 0.0107,  ..., 0.0106, 0.0102, 0.0107],
         [0.0103, 0.0101, 0.0107,  ..., 0.0106, 0.0102, 0.0107],
         [0.9692, 0.9697, 0.9679,  ..., 0.9682, 0.9693, 0.9679]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.0061, 0.0083,  ..., 0.0083, 0.2500, 0.0049],
         [0.0042, 0.0048, 0.0056,  ..., 0.0057, 0.2500, 0.0044],
         [0.0042, 0.0048, 0.0056,  ..., 0.0057, 0.2500, 0.0044],
         [0.9850, 0.9842, 0.9805,  ..., 0.9804, 0.2500, 0.9863]],
        [[0.0065, 0.0056, 0.0054,  ..., 0.0055, 0.0052, 0.0059],
         [0.0056, 0.0056, 0.0054,  ..., 0.0055, 0.0052, 0.0059],
         [0.0064, 0.0057, 0.0054,  ..., 0.0059, 0.0052, 0.0077],
         [0.9815, 0.9830, 0.9839,  ..., 0.9831, 0.9845, 0.9804]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 320:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:00,111 [Process: 0] Synchronize training processes
2024-08-16 14:30:00,112 [Process: 0] Evaluating...
2024-08-16 14:30:00,114 [Process: 0] EPOCH 320:
2024-08-16 14:30:00,116 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0104, 0.0098, 0.0103,  ..., 0.0101, 0.0101, 0.0107],
         [0.0104, 0.0098, 0.0103,  ..., 0.0101, 0.0101, 0.0107],
         [0.0104, 0.0098, 0.0103,  ..., 0.0101, 0.0101, 0.0107],
         [0.9688, 0.9706, 0.9691,  ..., 0.9696, 0.9696, 0.9678]],
        [[0.0102, 0.0104, 0.0106,  ..., 0.0107, 0.0109, 0.0098],
         [0.0102, 0.0104, 0.0106,  ..., 0.0107, 0.0109, 0.0098],
         [0.0102, 0.0104, 0.0106,  ..., 0.0107, 0.0109, 0.0098],
         [0.9695, 0.9687, 0.9682,  ..., 0.9680, 0.9672, 0.9705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0092, 0.2500,  ..., 0.2500, 0.2500, 0.0090],
         [0.2500, 0.0058, 0.2500,  ..., 0.2500, 0.2500, 0.0054],
         [0.2500, 0.0058, 0.2500,  ..., 0.2500, 0.2500, 0.0054],
         [0.2500, 0.9793, 0.2500,  ..., 0.2500, 0.2500, 0.9802]],
        [[0.0051, 0.0059, 0.0057,  ..., 0.0054, 0.0054, 0.0056],
         [0.0051, 0.0059, 0.0057,  ..., 0.0054, 0.0054, 0.0056],
         [0.0051, 0.0083, 0.0064,  ..., 0.0055, 0.0061, 0.0063],
         [0.9848, 0.9799, 0.9823,  ..., 0.9836, 0.9831, 0.9826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 321:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:02,006 [Process: 0] Synchronize training processes
2024-08-16 14:30:02,006 [Process: 0] Evaluating...
2024-08-16 14:30:02,008 [Process: 0] EPOCH 321:
2024-08-16 14:30:02,010 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0106, 0.0105,  ..., 0.0103, 0.0107, 0.0104],
         [0.0099, 0.0106, 0.0105,  ..., 0.0103, 0.0107, 0.0104],
         [0.0099, 0.0106, 0.0105,  ..., 0.0103, 0.0107, 0.0104],
         [0.9703, 0.9681, 0.9685,  ..., 0.9692, 0.9679, 0.9687]],
        [[0.0102, 0.0103, 0.0100,  ..., 0.0103, 0.0100, 0.0105],
         [0.0102, 0.0103, 0.0100,  ..., 0.0103, 0.0100, 0.0105],
         [0.0102, 0.0103, 0.0100,  ..., 0.0103, 0.0100, 0.0105],
         [0.9695, 0.9690, 0.9700,  ..., 0.9691, 0.9701, 0.9685]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0100, 0.0098, 0.0098,  ..., 0.0111, 0.2500, 0.2500],
         [0.0063, 0.0059, 0.0056,  ..., 0.0064, 0.2500, 0.2500],
         [0.0063, 0.0059, 0.0056,  ..., 0.0064, 0.2500, 0.2500],
         [0.9774, 0.9784, 0.9791,  ..., 0.9761, 0.2500, 0.2500]],
        [[0.0049, 0.0051, 0.0054,  ..., 0.0051, 0.0051, 0.0059],
         [0.0049, 0.0051, 0.0054,  ..., 0.0051, 0.0051, 0.0059],
         [0.0049, 0.0051, 0.0062,  ..., 0.0052, 0.0051, 0.0070],
         [0.9852, 0.9848, 0.9829,  ..., 0.9847, 0.9847, 0.9813]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 322:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:03,888 [Process: 0] Synchronize training processes
2024-08-16 14:30:03,889 [Process: 0] Evaluating...
2024-08-16 14:30:03,897 [Process: 0] EPOCH 322:
2024-08-16 14:30:03,899 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.0100, 0.0100,  ..., 0.0107, 0.0106, 0.0100],
         [0.0102, 0.0100, 0.0100,  ..., 0.0107, 0.0106, 0.0100],
         [0.0102, 0.0100, 0.0100,  ..., 0.0107, 0.0106, 0.0100],
         [0.9693, 0.9701, 0.9700,  ..., 0.9679, 0.9682, 0.9701]],
        [[0.0104, 0.0105, 0.0101,  ..., 0.0097, 0.0101, 0.0103],
         [0.0104, 0.0105, 0.0101,  ..., 0.0097, 0.0101, 0.0103],
         [0.0104, 0.0105, 0.0101,  ..., 0.0097, 0.0101, 0.0103],
         [0.9689, 0.9686, 0.9697,  ..., 0.9709, 0.9698, 0.9692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.2500, 0.0079,  ..., 0.0062, 0.2500, 0.0086],
         [0.0048, 0.2500, 0.0057,  ..., 0.0050, 0.2500, 0.0055],
         [0.0048, 0.2500, 0.0057,  ..., 0.0050, 0.2500, 0.0055],
         [0.9835, 0.2500, 0.9807,  ..., 0.9839, 0.2500, 0.9804]],
        [[0.0052, 0.0059, 0.0051,  ..., 0.0055, 0.0053, 0.0057],
         [0.0052, 0.0059, 0.0051,  ..., 0.0055, 0.0053, 0.0057],
         [0.0052, 0.0077, 0.0053,  ..., 0.0066, 0.0064, 0.0079],
         [0.9845, 0.9805, 0.9844,  ..., 0.9825, 0.9829, 0.9808]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 323:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:05,792 [Process: 0] Synchronize training processes
2024-08-16 14:30:05,792 [Process: 0] Evaluating...
2024-08-16 14:30:05,794 [Process: 0] EPOCH 323:
2024-08-16 14:30:05,796 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0104, 0.0104, 0.0107,  ..., 0.0106, 0.0106, 0.0100],
         [0.0104, 0.0104, 0.0107,  ..., 0.0106, 0.0106, 0.0100],
         [0.0104, 0.0104, 0.0107,  ..., 0.0106, 0.0106, 0.0100],
         [0.9689, 0.9689, 0.9679,  ..., 0.9683, 0.9682, 0.9699]],
        [[0.0101, 0.0101, 0.0104,  ..., 0.0102, 0.0103, 0.0105],
         [0.0101, 0.0101, 0.0104,  ..., 0.0102, 0.0103, 0.0105],
         [0.0101, 0.0101, 0.0104,  ..., 0.0102, 0.0103, 0.0105],
         [0.9697, 0.9697, 0.9687,  ..., 0.9693, 0.9691, 0.9686]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0093, 0.0095,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.0058, 0.0057,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.0058, 0.0057,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.9791, 0.9792,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0057, 0.0054, 0.0051,  ..., 0.0059, 0.0059, 0.0051],
         [0.0057, 0.0054, 0.0051,  ..., 0.0059, 0.0059, 0.0051],
         [0.0065, 0.0055, 0.0051,  ..., 0.0099, 0.0071, 0.0051],
         [0.9820, 0.9837, 0.9848,  ..., 0.9782, 0.9811, 0.9848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 324:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:07,700 [Process: 0] Synchronize training processes
2024-08-16 14:30:07,701 [Process: 0] Evaluating...
2024-08-16 14:30:07,703 [Process: 0] EPOCH 324:
2024-08-16 14:30:07,705 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:09,608 [Process: 0] Synchronize training processes
2024-08-16 14:30:09,609 [Process: 0] Evaluating...
2024-08-16 14:30:09,610 [Process: 0] EPOCH 325:
2024-08-16 14:30:09,612 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0104, 0.0102, 0.0106,  ..., 0.0105, 0.0104, 0.0103],
         [0.0104, 0.0102, 0.0106,  ..., 0.0105, 0.0104, 0.0103],
         [0.0104, 0.0102, 0.0106,  ..., 0.0105, 0.0104, 0.0103],
         [0.9689, 0.9693, 0.9681,  ..., 0.9685, 0.9687, 0.9690]],
        [[0.0105, 0.0102, 0.0102,  ..., 0.0103, 0.0102, 0.0103],
         [0.0105, 0.0102, 0.0102,  ..., 0.0103, 0.0102, 0.0103],
         [0.0105, 0.0102, 0.0102,  ..., 0.0103, 0.0102, 0.0103],
         [0.9686, 0.9695, 0.9695,  ..., 0.9691, 0.9695, 0.9692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0087, 0.0083,  ..., 0.2500, 0.0069, 0.0074],
         [0.0055, 0.0055, 0.0054,  ..., 0.2500, 0.0055, 0.0052],
         [0.0055, 0.0055, 0.0054,  ..., 0.2500, 0.0055, 0.0052],
         [0.9809, 0.9804, 0.9809,  ..., 0.2500, 0.9821, 0.9823]],
        [[0.0049, 0.0057, 0.0049,  ..., 0.0049, 0.0055, 0.0053],
         [0.0049, 0.0054, 0.0049,  ..., 0.0049, 0.0055, 0.0053],
         [0.0049, 0.0063, 0.0049,  ..., 0.0049, 0.0067, 0.0053],
         [0.9852, 0.9826, 0.9853,  ..., 0.9854, 0.9823, 0.9841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 325:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 14:30:11,497 [Process: 0] Synchronize training processes
2024-08-16 14:30:11,498 [Process: 0] Evaluating...
2024-08-16 14:30:11,500 [Process: 0] EPOCH 326:
2024-08-16 14:30:11,502 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.0102, 0.0098, 0.0099,  ..., 0.0099, 0.0106, 0.0102],
         [0.0102, 0.0098, 0.0099,  ..., 0.0099, 0.0106, 0.0102],
         [0.0102, 0.0098, 0.0099,  ..., 0.0099, 0.0106, 0.0102],
         [0.9694, 0.9705, 0.9702,  ..., 0.9702, 0.9683, 0.9693]],
        [[0.0107, 0.0099, 0.0101,  ..., 0.0105, 0.0100, 0.0102],
         [0.0107, 0.0099, 0.0101,  ..., 0.0105, 0.0100, 0.0102],
         [0.0107, 0.0099, 0.0101,  ..., 0.0105, 0.0100, 0.0102],
         [0.9680, 0.9704, 0.9697,  ..., 0.9685, 0.9700, 0.9695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0089, 0.2500,  ..., 0.0074, 0.2500, 0.2500],
         [0.0052, 0.0055, 0.2500,  ..., 0.0057, 0.2500, 0.2500],
         [0.0052, 0.0055, 0.2500,  ..., 0.0057, 0.2500, 0.2500],
         [0.9839, 0.9801, 0.2500,  ..., 0.9812, 0.2500, 0.2500]],
        [[0.0130, 0.0054, 0.0048,  ..., 0.0049, 0.0047, 0.0051],
         [0.0055, 0.0054, 0.0048,  ..., 0.0049, 0.0047, 0.0051],
         [0.0060, 0.0058, 0.0048,  ..., 0.0049, 0.0047, 0.0055],
         [0.9755, 0.9835, 0.9855,  ..., 0.9854, 0.9858, 0.9842]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 326:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.0104, 0.0099,  ..., 0.0099, 0.0107, 0.0101],
         [0.0102, 0.0104, 0.0099,  ..., 0.0099, 0.0107, 0.0101],
         [0.0102, 0.0104, 0.0099,  ..., 0.0099, 0.0107, 0.0101],
         [0.9695, 0.9689, 0.9702,  ..., 0.9704, 0.9680, 0.9697]],
        [[0.0102, 0.0101, 0.0103,  ..., 0.0100, 0.0105, 0.0102],
         [0.0102, 0.0101, 0.0103,  ..., 0.0100, 0.0105, 0.0102],
         [0.0102, 0.0101, 0.0103,  ..., 0.0100, 0.0105, 0.0102],
         [0.9694, 0.9697, 0.9691,  ..., 0.9701, 0.9685, 0.9695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:13,395 [Process: 0] Synchronize training processes
2024-08-16 14:30:13,395 [Process: 0] Evaluating...
2024-08-16 14:30:13,397 [Process: 0] EPOCH 327:
2024-08-16 14:30:13,399 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0064, 0.2500, 0.0067,  ..., 0.0056, 0.0050, 0.0064],
         [0.0048, 0.2500, 0.0052,  ..., 0.0044, 0.0048, 0.0046],
         [0.0048, 0.2500, 0.0052,  ..., 0.0044, 0.0048, 0.0046],
         [0.9839, 0.2500, 0.9830,  ..., 0.9856, 0.9854, 0.9843]],
        [[0.0049, 0.0051, 0.0048,  ..., 0.0050, 0.0052, 0.0050],
         [0.0049, 0.0051, 0.0048,  ..., 0.0050, 0.0052, 0.0050],
         [0.0049, 0.0054, 0.0048,  ..., 0.0050, 0.0055, 0.0052],
         [0.9853, 0.9843, 0.9856,  ..., 0.9851, 0.9840, 0.9848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 327:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0105, 0.0103, 0.0102,  ..., 0.0102, 0.0102, 0.0099],
         [0.0105, 0.0103, 0.0102,  ..., 0.0102, 0.0102, 0.0099],
         [0.0105, 0.0103, 0.0102,  ..., 0.0102, 0.0102, 0.0099],
         [0.9686, 0.9692, 0.9695,  ..., 0.9693, 0.9693, 0.9702]],
        [[0.0101, 0.0100, 0.0097,  ..., 0.0102, 0.0101, 0.0100],
         [0.0101, 0.0100, 0.0097,  ..., 0.0102, 0.0101, 0.0100],
         [0.0101, 0.0100, 0.0097,  ..., 0.0102, 0.0101, 0.0100],
         [0.9696, 0.9699, 0.9709,  ..., 0.9693, 0.9697, 0.9700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:15,277 [Process: 0] Synchronize training processes
2024-08-16 14:30:15,277 [Process: 0] Evaluating...
2024-08-16 14:30:15,279 [Process: 0] EPOCH 328:
2024-08-16 14:30:15,281 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2288, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.0070],
         [0.2288, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.0047],
         [0.3137, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.0047],
         [0.2288, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.9835]],
        [[0.0056, 0.0053, 0.0049,  ..., 0.0051, 0.0051, 0.0051],
         [0.0056, 0.0053, 0.0049,  ..., 0.0051, 0.0051, 0.0051],
         [0.0071, 0.0068, 0.0051,  ..., 0.0060, 0.0061, 0.0062],
         [0.9818, 0.9825, 0.9851,  ..., 0.9838, 0.9837, 0.9837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 328:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0103, 0.0099, 0.0100,  ..., 0.0102, 0.0101, 0.0106],
         [0.0103, 0.0099, 0.0100,  ..., 0.0102, 0.0101, 0.0106],
         [0.0103, 0.0099, 0.0100,  ..., 0.0102, 0.0101, 0.0106],
         [0.9692, 0.9703, 0.9700,  ..., 0.9693, 0.9697, 0.9682]],
        [[0.0103, 0.0102, 0.0101,  ..., 0.0101, 0.0100, 0.0102],
         [0.0103, 0.0102, 0.0101,  ..., 0.0101, 0.0100, 0.0102],
         [0.0103, 0.0102, 0.0101,  ..., 0.0101, 0.0100, 0.0102],
         [0.9692, 0.9694, 0.9696,  ..., 0.9698, 0.9700, 0.9695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:17,200 [Process: 0] Synchronize training processes
2024-08-16 14:30:17,200 [Process: 0] Evaluating...
2024-08-16 14:30:17,202 [Process: 0] EPOCH 329:
2024-08-16 14:30:17,204 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0062, 0.0071,  ..., 0.0077, 0.0085, 0.2500],
         [0.0059, 0.0045, 0.0056,  ..., 0.0045, 0.0059, 0.2500],
         [0.0059, 0.0045, 0.0056,  ..., 0.0045, 0.0059, 0.2500],
         [0.9800, 0.9849, 0.9816,  ..., 0.9833, 0.9798, 0.2500]],
        [[0.0045, 0.0054, 0.0053,  ..., 0.0062, 0.0046, 0.0045],
         [0.0045, 0.0054, 0.0053,  ..., 0.0050, 0.0046, 0.0045],
         [0.0045, 0.0077, 0.0069,  ..., 0.0055, 0.0046, 0.0047],
         [0.9865, 0.9815, 0.9826,  ..., 0.9833, 0.9862, 0.9862]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 329:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0098, 0.0100,  ..., 0.0105, 0.0098, 0.0103],
         [0.0099, 0.0098, 0.0100,  ..., 0.0105, 0.0098, 0.0103],
         [0.0099, 0.0098, 0.0100,  ..., 0.0105, 0.0098, 0.0103],
         [0.9702, 0.9706, 0.9699,  ..., 0.9685, 0.9706, 0.9692]],
        [[0.0099, 0.0097, 0.0102,  ..., 0.0105, 0.0104, 0.0101],
         [0.0099, 0.0097, 0.0102,  ..., 0.0105, 0.0104, 0.0101],
         [0.0099, 0.0097, 0.0102,  ..., 0.0105, 0.0104, 0.0101],
         [0.9702, 0.9709, 0.9694,  ..., 0.9685, 0.9689, 0.9696]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:19,118 [Process: 0] Synchronize training processes
2024-08-16 14:30:19,118 [Process: 0] Evaluating...
2024-08-16 14:30:19,120 [Process: 0] EPOCH 330:
2024-08-16 14:30:19,122 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2664, 0.2500,  ..., 0.0066, 0.0056, 0.2500],
         [0.2500, 0.2445, 0.2500,  ..., 0.0050, 0.0047, 0.2500],
         [0.2500, 0.2445, 0.2500,  ..., 0.0050, 0.0047, 0.2500],
         [0.2500, 0.2445, 0.2500,  ..., 0.9834, 0.9850, 0.2500]],
        [[0.0056, 0.0053, 0.0064,  ..., 0.0055, 0.0055, 0.0051],
         [0.0056, 0.0053, 0.0064,  ..., 0.0055, 0.0055, 0.0051],
         [0.0071, 0.0063, 0.0115,  ..., 0.0070, 0.0082, 0.0056],
         [0.9817, 0.9830, 0.9757,  ..., 0.9821, 0.9807, 0.9842]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 330:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0105, 0.0095,  ..., 0.0093, 0.0102, 0.0100],
         [0.0092, 0.0105, 0.0095,  ..., 0.0093, 0.0102, 0.0100],
         [0.0092, 0.0105, 0.0095,  ..., 0.0093, 0.0102, 0.0100],
         [0.9725, 0.9686, 0.9714,  ..., 0.9721, 0.9695, 0.9701]],
        [[0.0101, 0.0098, 0.0101,  ..., 0.0100, 0.0099, 0.0102],
         [0.0101, 0.0098, 0.0101,  ..., 0.0100, 0.0099, 0.0102],
         [0.0101, 0.0098, 0.0101,  ..., 0.0100, 0.0099, 0.0102],
         [0.9698, 0.9707, 0.9696,  ..., 0.9700, 0.9703, 0.9695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:21,006 [Process: 0] Synchronize training processes
2024-08-16 14:30:21,006 [Process: 0] Evaluating...
2024-08-16 14:30:21,008 [Process: 0] EPOCH 331:
2024-08-16 14:30:21,010 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.2500, 0.0055,  ..., 0.0067, 0.0091, 0.0087],
         [0.0049, 0.2500, 0.0043,  ..., 0.0048, 0.0054, 0.0049],
         [0.0049, 0.2500, 0.0043,  ..., 0.0048, 0.0054, 0.0049],
         [0.9834, 0.2500, 0.9859,  ..., 0.9837, 0.9800, 0.9815]],
        [[0.0078, 0.0058, 0.0052,  ..., 0.0056, 0.0052, 0.0052],
         [0.0049, 0.0058, 0.0052,  ..., 0.0056, 0.0052, 0.0052],
         [0.0050, 0.0096, 0.0063,  ..., 0.0079, 0.0061, 0.0061],
         [0.9823, 0.9788, 0.9834,  ..., 0.9808, 0.9835, 0.9834]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 331:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0097, 0.0095,  ..., 0.0099, 0.0102, 0.0099],
         [0.0101, 0.0097, 0.0095,  ..., 0.0099, 0.0102, 0.0099],
         [0.0101, 0.0097, 0.0095,  ..., 0.0099, 0.0102, 0.0099],
         [0.9697, 0.9709, 0.9714,  ..., 0.9702, 0.9693, 0.9703]],
        [[0.0103, 0.0103, 0.0100,  ..., 0.0100, 0.0097, 0.0102],
         [0.0103, 0.0103, 0.0100,  ..., 0.0100, 0.0097, 0.0102],
         [0.0103, 0.0103, 0.0100,  ..., 0.0100, 0.0097, 0.0102],
         [0.9691, 0.9691, 0.9701,  ..., 0.9701, 0.9710, 0.9693]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:22,891 [Process: 0] Synchronize training processes
2024-08-16 14:30:22,891 [Process: 0] Evaluating...
2024-08-16 14:30:22,899 [Process: 0] EPOCH 332:
2024-08-16 14:30:22,901 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0061, 0.0069,  ..., 0.2500, 0.2500, 0.0077],
         [0.0061, 0.0046, 0.0048,  ..., 0.2500, 0.2500, 0.0052],
         [0.0061, 0.0046, 0.0048,  ..., 0.2500, 0.2500, 0.0052],
         [0.9798, 0.9847, 0.9836,  ..., 0.2500, 0.2500, 0.9820]],
        [[0.0047, 0.0048, 0.0057,  ..., 0.0049, 0.0047, 0.0053],
         [0.0047, 0.0048, 0.0057,  ..., 0.0049, 0.0047, 0.0053],
         [0.0047, 0.0051, 0.0090,  ..., 0.0056, 0.0047, 0.0073],
         [0.9859, 0.9853, 0.9796,  ..., 0.9846, 0.9858, 0.9820]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 332:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0100, 0.0103, 0.0095,  ..., 0.0101, 0.0099, 0.0092],
         [0.0100, 0.0103, 0.0095,  ..., 0.0101, 0.0099, 0.0092],
         [0.0100, 0.0103, 0.0095,  ..., 0.0101, 0.0099, 0.0092],
         [0.9701, 0.9692, 0.9715,  ..., 0.9698, 0.9702, 0.9724]],
        [[0.0100, 0.0097, 0.0096,  ..., 0.0097, 0.0097, 0.0095],
         [0.0100, 0.0097, 0.0096,  ..., 0.0097, 0.0097, 0.0095],
         [0.0100, 0.0097, 0.0096,  ..., 0.0097, 0.0097, 0.0095],
         [0.9699, 0.9710, 0.9713,  ..., 0.9709, 0.9709, 0.9715]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:24,798 [Process: 0] Synchronize training processes
2024-08-16 14:30:24,798 [Process: 0] Evaluating...
2024-08-16 14:30:24,800 [Process: 0] EPOCH 333:
2024-08-16 14:30:24,802 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0055, 0.2500,  ..., 0.0091, 0.0052, 0.0090],
         [0.2500, 0.0045, 0.2500,  ..., 0.0055, 0.0045, 0.0060],
         [0.2500, 0.0045, 0.2500,  ..., 0.0055, 0.0045, 0.0060],
         [0.2500, 0.9855, 0.2500,  ..., 0.9798, 0.9858, 0.9790]],
        [[0.0054, 0.0053, 0.0054,  ..., 0.0051, 0.0045, 0.0049],
         [0.0054, 0.0053, 0.0054,  ..., 0.0051, 0.0045, 0.0049],
         [0.0062, 0.0065, 0.0074,  ..., 0.0063, 0.0045, 0.0049],
         [0.9831, 0.9829, 0.9819,  ..., 0.9835, 0.9865, 0.9854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 333:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0099, 0.0096,  ..., 0.0100, 0.0099, 0.0101],
         [0.0101, 0.0099, 0.0096,  ..., 0.0100, 0.0099, 0.0101],
         [0.0101, 0.0099, 0.0096,  ..., 0.0100, 0.0099, 0.0101],
         [0.9698, 0.9703, 0.9712,  ..., 0.9701, 0.9703, 0.9696]],
        [[0.0098, 0.0098, 0.0097,  ..., 0.0102, 0.0102, 0.0099],
         [0.0098, 0.0098, 0.0097,  ..., 0.0102, 0.0102, 0.0099],
         [0.0098, 0.0098, 0.0097,  ..., 0.0102, 0.0102, 0.0099],
         [0.9705, 0.9706, 0.9709,  ..., 0.9695, 0.9693, 0.9702]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:26,693 [Process: 0] Synchronize training processes
2024-08-16 14:30:26,694 [Process: 0] Evaluating...
2024-08-16 14:30:26,695 [Process: 0] EPOCH 334:
2024-08-16 14:30:26,697 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0054, 0.0074,  ..., 0.2500, 0.0069, 0.0055],
         [0.2500, 0.0047, 0.0049,  ..., 0.2500, 0.0049, 0.0047],
         [0.2500, 0.0047, 0.0049,  ..., 0.2500, 0.0049, 0.0047],
         [0.2500, 0.9852, 0.9829,  ..., 0.2500, 0.9833, 0.9852]],
        [[0.0056, 0.0048, 0.0048,  ..., 0.0054, 0.0054, 0.0050],
         [0.0056, 0.0048, 0.0048,  ..., 0.0054, 0.0054, 0.0050],
         [0.0087, 0.0048, 0.0051,  ..., 0.0079, 0.0074, 0.0050],
         [0.9801, 0.9856, 0.9853,  ..., 0.9813, 0.9818, 0.9851]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 334:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0095, 0.0096,  ..., 0.0092, 0.0100, 0.0094],
         [0.0101, 0.0095, 0.0096,  ..., 0.0092, 0.0100, 0.0094],
         [0.0101, 0.0095, 0.0096,  ..., 0.0092, 0.0100, 0.0094],
         [0.9697, 0.9714, 0.9713,  ..., 0.9724, 0.9700, 0.9718]],
        [[0.0096, 0.0093, 0.0099,  ..., 0.0103, 0.0103, 0.0096],
         [0.0096, 0.0093, 0.0099,  ..., 0.0103, 0.0103, 0.0096],
         [0.0096, 0.0093, 0.0099,  ..., 0.0103, 0.0103, 0.0096],
         [0.9711, 0.9722, 0.9704,  ..., 0.9691, 0.9690, 0.9713]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 14:30:28,600 [Process: 0] Synchronize training processes
2024-08-16 14:30:28,600 [Process: 0] Evaluating...
2024-08-16 14:30:28,602 [Process: 0] EPOCH 335:
2024-08-16 14:30:28,604 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.2500, 0.2500, 0.0071,  ..., 0.0087, 0.0061, 0.2500],
         [0.2500, 0.2500, 0.0047,  ..., 0.0054, 0.0046, 0.2500],
         [0.2500, 0.2500, 0.0047,  ..., 0.0054, 0.0046, 0.2500],
         [0.2500, 0.2500, 0.9834,  ..., 0.9805, 0.9846, 0.2500]],
        [[0.0047, 0.0051, 0.0052,  ..., 0.0050, 0.0053, 0.0054],
         [0.0047, 0.0051, 0.0052,  ..., 0.0050, 0.0053, 0.0054],
         [0.0047, 0.0065, 0.0070,  ..., 0.0055, 0.0061, 0.0075],
         [0.9858, 0.9834, 0.9826,  ..., 0.9845, 0.9834, 0.9817]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 335:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0098, 0.0094, 0.0095,  ..., 0.0096, 0.0096, 0.0095],
         [0.0098, 0.0094, 0.0095,  ..., 0.0096, 0.0096, 0.0095],
         [0.0098, 0.0094, 0.0095,  ..., 0.0096, 0.0096, 0.0095],
         [0.9707, 0.9717, 0.9716,  ..., 0.9712, 0.9712, 0.9715]],
        [[0.0095, 0.0098, 0.0096,  ..., 0.0096, 0.0101, 0.0098],
         [0.0095, 0.0098, 0.0096,  ..., 0.0096, 0.0101, 0.0098],
         [0.0095, 0.0098, 0.0096,  ..., 0.0096, 0.0101, 0.0098],
         [0.9716, 0.9707, 0.9711,  ..., 0.9712, 0.9697, 0.9705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0070,  ..., 0.0062, 0.2500, 0.0055],
         [0.2500, 0.2500, 0.0051,  ..., 0.0044, 0.2500, 0.0045],
         [0.2500, 0.2500, 0.0051,  ..., 0.0044, 0.2500, 0.0045],
         [0.2500, 0.2500, 0.9828,  ..., 0.9849, 0.2500, 0.9856]],
        [[0.0053, 0.0053, 0.0093,  ..., 0.0050, 0.0050, 0.0049],
         [0.0053, 0.0053, 0.0053,  ..., 0.0050, 0.0050, 0.0049],
         [0.0053, 0.0058, 0.0054,  ..., 0.0050, 0.0057, 0.0049],
         [0.9842, 0.9836, 0.9800,  ..., 0.9851, 0.9843, 0.9854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:30,504 [Process: 0] Synchronize training processes
2024-08-16 14:30:30,504 [Process: 0] Evaluating...
2024-08-16 14:30:30,506 [Process: 0] EPOCH 336:
2024-08-16 14:30:30,508 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 336:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0096, 0.0093,  ..., 0.0095, 0.0097, 0.0094],
         [0.0097, 0.0096, 0.0093,  ..., 0.0095, 0.0097, 0.0094],
         [0.0097, 0.0096, 0.0093,  ..., 0.0095, 0.0097, 0.0094],
         [0.9708, 0.9713, 0.9722,  ..., 0.9714, 0.9710, 0.9718]],
        [[0.0095, 0.0100, 0.0098,  ..., 0.0100, 0.0095, 0.0096],
         [0.0095, 0.0100, 0.0098,  ..., 0.0100, 0.0095, 0.0096],
         [0.0095, 0.0100, 0.0098,  ..., 0.0100, 0.0095, 0.0096],
         [0.9714, 0.9701, 0.9707,  ..., 0.9701, 0.9715, 0.9712]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0074, 0.0063, 0.0115,  ..., 0.2500, 0.2500, 0.2500],
         [0.0052, 0.0048, 0.0062,  ..., 0.2500, 0.2500, 0.2500],
         [0.0052, 0.0048, 0.0062,  ..., 0.2500, 0.2500, 0.2500],
         [0.9821, 0.9841, 0.9760,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0049, 0.0053, 0.0054,  ..., 0.0053, 0.0051, 0.0049],
         [0.0049, 0.0053, 0.0054,  ..., 0.0053, 0.0051, 0.0049],
         [0.0049, 0.0069, 0.0072,  ..., 0.0068, 0.0055, 0.0049],
         [0.9854, 0.9824, 0.9820,  ..., 0.9826, 0.9844, 0.9854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 337:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:32,403 [Process: 0] Synchronize training processes
2024-08-16 14:30:32,403 [Process: 0] Evaluating...
2024-08-16 14:30:32,405 [Process: 0] EPOCH 337:
2024-08-16 14:30:32,407 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0093, 0.0095, 0.0098,  ..., 0.0095, 0.0095, 0.0096],
         [0.0093, 0.0095, 0.0098,  ..., 0.0095, 0.0095, 0.0096],
         [0.0093, 0.0095, 0.0098,  ..., 0.0095, 0.0095, 0.0096],
         [0.9720, 0.9715, 0.9707,  ..., 0.9715, 0.9716, 0.9713]],
        [[0.0098, 0.0099, 0.0095,  ..., 0.0100, 0.0096, 0.0095],
         [0.0098, 0.0099, 0.0095,  ..., 0.0100, 0.0096, 0.0095],
         [0.0098, 0.0099, 0.0095,  ..., 0.0100, 0.0096, 0.0095],
         [0.9706, 0.9704, 0.9714,  ..., 0.9701, 0.9711, 0.9714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.0077],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.0050],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.0050],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.9823]],
        [[0.0046, 0.0046, 0.0044,  ..., 0.0046, 0.0048, 0.0049],
         [0.0046, 0.0046, 0.0044,  ..., 0.0046, 0.0048, 0.0049],
         [0.0047, 0.0047, 0.0044,  ..., 0.0046, 0.0063, 0.0053],
         [0.9862, 0.9862, 0.9867,  ..., 0.9862, 0.9841, 0.9850]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 338:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:34,329 [Process: 0] Synchronize training processes
2024-08-16 14:30:34,329 [Process: 0] Evaluating...
2024-08-16 14:30:34,331 [Process: 0] EPOCH 338:
2024-08-16 14:30:34,333 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0098, 0.0093,  ..., 0.0096, 0.0096, 0.0097],
         [0.0094, 0.0098, 0.0093,  ..., 0.0096, 0.0096, 0.0097],
         [0.0094, 0.0098, 0.0093,  ..., 0.0096, 0.0096, 0.0097],
         [0.9717, 0.9706, 0.9720,  ..., 0.9712, 0.9712, 0.9708]],
        [[0.0095, 0.0094, 0.0098,  ..., 0.0095, 0.0095, 0.0095],
         [0.0095, 0.0094, 0.0098,  ..., 0.0095, 0.0095, 0.0095],
         [0.0095, 0.0094, 0.0098,  ..., 0.0095, 0.0095, 0.0095],
         [0.9715, 0.9717, 0.9707,  ..., 0.9715, 0.9715, 0.9715]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0039, 0.0065, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0039, 0.0053, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0039, 0.0053, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.9884, 0.9828, 0.2500,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0051, 0.0045, 0.0054,  ..., 0.0098, 0.0047, 0.0048],
         [0.0051, 0.0045, 0.0054,  ..., 0.0051, 0.0047, 0.0048],
         [0.0056, 0.0045, 0.0079,  ..., 0.0051, 0.0047, 0.0048],
         [0.9843, 0.9864, 0.9814,  ..., 0.9800, 0.9860, 0.9856]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 339:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:36,229 [Process: 0] Synchronize training processes
2024-08-16 14:30:36,230 [Process: 0] Evaluating...
2024-08-16 14:30:36,232 [Process: 0] EPOCH 339:
2024-08-16 14:30:36,233 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0095, 0.0095,  ..., 0.0091, 0.0098, 0.0092],
         [0.0096, 0.0095, 0.0095,  ..., 0.0091, 0.0098, 0.0092],
         [0.0096, 0.0095, 0.0095,  ..., 0.0091, 0.0098, 0.0092],
         [0.9711, 0.9714, 0.9714,  ..., 0.9727, 0.9706, 0.9724]],
        [[0.0095, 0.0095, 0.0094,  ..., 0.0096, 0.0094, 0.0096],
         [0.0095, 0.0095, 0.0094,  ..., 0.0096, 0.0094, 0.0096],
         [0.0095, 0.0095, 0.0094,  ..., 0.0096, 0.0094, 0.0096],
         [0.9716, 0.9714, 0.9718,  ..., 0.9712, 0.9718, 0.9713]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0052, 0.0060, 0.2500,  ..., 0.0046, 0.0039, 0.0061],
         [0.0045, 0.0048, 0.2500,  ..., 0.0038, 0.0039, 0.0056],
         [0.0045, 0.0048, 0.2500,  ..., 0.0038, 0.0039, 0.0056],
         [0.9858, 0.9843, 0.2500,  ..., 0.9877, 0.9882, 0.9827]],
        [[0.0052, 0.0051, 0.0048,  ..., 0.0043, 0.0060, 0.0052],
         [0.0052, 0.0051, 0.0048,  ..., 0.0043, 0.0048, 0.0052],
         [0.0070, 0.0072, 0.0051,  ..., 0.0043, 0.0057, 0.0067],
         [0.9826, 0.9826, 0.9854,  ..., 0.9871, 0.9836, 0.9829]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 340:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:38,125 [Process: 0] Synchronize training processes
2024-08-16 14:30:38,125 [Process: 0] Evaluating...
2024-08-16 14:30:38,127 [Process: 0] EPOCH 340:
2024-08-16 14:30:38,129 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0096, 0.0099,  ..., 0.0096, 0.0096, 0.0093],
         [0.0094, 0.0096, 0.0099,  ..., 0.0096, 0.0096, 0.0093],
         [0.0094, 0.0096, 0.0099,  ..., 0.0096, 0.0096, 0.0093],
         [0.9717, 0.9712, 0.9703,  ..., 0.9711, 0.9711, 0.9720]],
        [[0.0098, 0.0095, 0.0096,  ..., 0.0101, 0.0095, 0.0099],
         [0.0098, 0.0095, 0.0096,  ..., 0.0101, 0.0095, 0.0099],
         [0.0098, 0.0095, 0.0096,  ..., 0.0101, 0.0095, 0.0099],
         [0.9707, 0.9714, 0.9712,  ..., 0.9698, 0.9714, 0.9702]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0067, 0.0072,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.0050, 0.0049,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.0050, 0.0049,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.9833, 0.9830,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0046, 0.0050, 0.0050,  ..., 0.0057, 0.0045, 0.0062],
         [0.0046, 0.0050, 0.0050,  ..., 0.0057, 0.0045, 0.0047],
         [0.0046, 0.0054, 0.0063,  ..., 0.0079, 0.0045, 0.0048],
         [0.9861, 0.9846, 0.9836,  ..., 0.9807, 0.9864, 0.9844]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 341:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:40,025 [Process: 0] Synchronize training processes
2024-08-16 14:30:40,025 [Process: 0] Evaluating...
2024-08-16 14:30:40,027 [Process: 0] EPOCH 341:
2024-08-16 14:30:40,029 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0099, 0.0093,  ..., 0.0095, 0.0091, 0.0096],
         [0.0096, 0.0099, 0.0093,  ..., 0.0095, 0.0091, 0.0096],
         [0.0096, 0.0099, 0.0093,  ..., 0.0095, 0.0091, 0.0096],
         [0.9711, 0.9703, 0.9722,  ..., 0.9714, 0.9726, 0.9713]],
        [[0.0096, 0.0095, 0.0097,  ..., 0.0101, 0.0099, 0.0098],
         [0.0096, 0.0095, 0.0097,  ..., 0.0101, 0.0099, 0.0098],
         [0.0096, 0.0095, 0.0097,  ..., 0.0101, 0.0099, 0.0098],
         [0.9712, 0.9715, 0.9709,  ..., 0.9698, 0.9703, 0.9706]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0067, 0.0057,  ..., 0.2500, 0.0039, 0.2500],
         [0.0059, 0.0055, 0.0045,  ..., 0.2500, 0.0039, 0.2500],
         [0.0059, 0.0055, 0.0045,  ..., 0.2500, 0.0039, 0.2500],
         [0.9796, 0.9824, 0.9854,  ..., 0.2500, 0.9882, 0.2500]],
        [[0.0047, 0.0054, 0.0055,  ..., 0.0051, 0.0048, 0.0050],
         [0.0047, 0.0048, 0.0055,  ..., 0.0046, 0.0048, 0.0050],
         [0.0047, 0.0052, 0.0074,  ..., 0.0046, 0.0049, 0.0053],
         [0.9858, 0.9846, 0.9816,  ..., 0.9856, 0.9856, 0.9847]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 342:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:41,922 [Process: 0] Synchronize training processes
2024-08-16 14:30:41,923 [Process: 0] Evaluating...
2024-08-16 14:30:41,931 [Process: 0] EPOCH 342:
2024-08-16 14:30:41,933 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0093, 0.0093,  ..., 0.0094, 0.0098, 0.0097],
         [0.0094, 0.0093, 0.0093,  ..., 0.0094, 0.0098, 0.0097],
         [0.0094, 0.0093, 0.0093,  ..., 0.0094, 0.0098, 0.0097],
         [0.9719, 0.9720, 0.9722,  ..., 0.9718, 0.9706, 0.9709]],
        [[0.0096, 0.0092, 0.0093,  ..., 0.0091, 0.0093, 0.0091],
         [0.0096, 0.0092, 0.0093,  ..., 0.0091, 0.0093, 0.0091],
         [0.0096, 0.0092, 0.0093,  ..., 0.0091, 0.0093, 0.0091],
         [0.9713, 0.9725, 0.9722,  ..., 0.9727, 0.9722, 0.9727]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0094, 0.2500,  ..., 0.2500, 0.2500, 0.0059],
         [0.0052, 0.0056, 0.2500,  ..., 0.2500, 0.2500, 0.0044],
         [0.0052, 0.0056, 0.2500,  ..., 0.2500, 0.2500, 0.0044],
         [0.9805, 0.9794, 0.2500,  ..., 0.2500, 0.2500, 0.9854]],
        [[0.0049, 0.0047, 0.0048,  ..., 0.0046, 0.0049, 0.0047],
         [0.0049, 0.0041, 0.0048,  ..., 0.0046, 0.0049, 0.0047],
         [0.0059, 0.0041, 0.0051,  ..., 0.0056, 0.0050, 0.0047],
         [0.9842, 0.9871, 0.9853,  ..., 0.9853, 0.9852, 0.9859]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 343:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:43,815 [Process: 0] Synchronize training processes
2024-08-16 14:30:43,816 [Process: 0] Evaluating...
2024-08-16 14:30:43,818 [Process: 0] EPOCH 343:
2024-08-16 14:30:43,819 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:30:45,710 [Process: 0] Synchronize training processes
2024-08-16 14:30:45,711 [Process: 0] Evaluating...
2024-08-16 14:30:45,713 [Process: 0] EPOCH 344:
2024-08-16 14:30:45,715 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0091, 0.0095,  ..., 0.0091, 0.0097, 0.0094],
         [0.0096, 0.0091, 0.0095,  ..., 0.0091, 0.0097, 0.0094],
         [0.0096, 0.0091, 0.0095,  ..., 0.0091, 0.0097, 0.0094],
         [0.9711, 0.9726, 0.9716,  ..., 0.9728, 0.9708, 0.9717]],
        [[0.0101, 0.0098, 0.0096,  ..., 0.0095, 0.0094, 0.0097],
         [0.0101, 0.0098, 0.0096,  ..., 0.0095, 0.0094, 0.0097],
         [0.0101, 0.0098, 0.0096,  ..., 0.0095, 0.0094, 0.0097],
         [0.9698, 0.9706, 0.9711,  ..., 0.9714, 0.9718, 0.9708]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.2500, 0.0122,  ..., 0.2500, 0.0136, 0.0097],
         [0.0059, 0.2500, 0.0068,  ..., 0.2500, 0.0069, 0.0060],
         [0.0059, 0.2500, 0.0068,  ..., 0.2500, 0.0069, 0.0060],
         [0.9812, 0.2500, 0.9743,  ..., 0.2500, 0.9726, 0.9783]],
        [[0.0050, 0.0046, 0.0048,  ..., 0.0050, 0.0051, 0.0100],
         [0.0050, 0.0046, 0.0048,  ..., 0.0050, 0.0051, 0.0050],
         [0.0058, 0.0047, 0.0053,  ..., 0.0059, 0.0070, 0.0061],
         [0.9842, 0.9861, 0.9851,  ..., 0.9840, 0.9828, 0.9789]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 344:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0097, 0.0095,  ..., 0.0099, 0.0092, 0.0091],
         [0.0092, 0.0097, 0.0095,  ..., 0.0099, 0.0092, 0.0091],
         [0.0092, 0.0097, 0.0095,  ..., 0.0099, 0.0092, 0.0091],
         [0.9723, 0.9709, 0.9715,  ..., 0.9704, 0.9724, 0.9726]],
        [[0.0094, 0.0092, 0.0090,  ..., 0.0095, 0.0093, 0.0092],
         [0.0094, 0.0092, 0.0090,  ..., 0.0095, 0.0093, 0.0092],
         [0.0094, 0.0092, 0.0090,  ..., 0.0095, 0.0093, 0.0092],
         [0.9718, 0.9723, 0.9729,  ..., 0.9714, 0.9721, 0.9724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:47,594 [Process: 0] Synchronize training processes
2024-08-16 14:30:47,595 [Process: 0] Evaluating...
2024-08-16 14:30:47,597 [Process: 0] EPOCH 345:
2024-08-16 14:30:47,599 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0050, 0.2500,  ..., 0.2500, 0.0094, 0.0077],
         [0.2500, 0.0043, 0.2500,  ..., 0.2500, 0.0065, 0.0052],
         [0.2500, 0.0043, 0.2500,  ..., 0.2500, 0.0065, 0.0052],
         [0.2500, 0.9865, 0.2500,  ..., 0.2500, 0.9776, 0.9819]],
        [[0.0050, 0.0047, 0.0052,  ..., 0.0053, 0.0047, 0.0046],
         [0.0048, 0.0047, 0.0052,  ..., 0.0053, 0.0047, 0.0046],
         [0.0048, 0.0047, 0.0062,  ..., 0.0059, 0.0047, 0.0046],
         [0.9855, 0.9860, 0.9835,  ..., 0.9836, 0.9859, 0.9863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 345:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0091, 0.0090,  ..., 0.0096, 0.0092, 0.0095],
         [0.0092, 0.0091, 0.0090,  ..., 0.0096, 0.0092, 0.0095],
         [0.0092, 0.0091, 0.0090,  ..., 0.0096, 0.0092, 0.0095],
         [0.9724, 0.9728, 0.9731,  ..., 0.9713, 0.9723, 0.9715]],
        [[0.0098, 0.0097, 0.0095,  ..., 0.0095, 0.0096, 0.0097],
         [0.0098, 0.0097, 0.0095,  ..., 0.0095, 0.0096, 0.0097],
         [0.0098, 0.0097, 0.0095,  ..., 0.0095, 0.0096, 0.0097],
         [0.9706, 0.9708, 0.9715,  ..., 0.9716, 0.9713, 0.9710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:49,482 [Process: 0] Synchronize training processes
2024-08-16 14:30:49,482 [Process: 0] Evaluating...
2024-08-16 14:30:49,484 [Process: 0] EPOCH 346:
2024-08-16 14:30:49,486 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0077, 0.0075, 0.2485,  ..., 0.2674, 0.2500, 0.2500],
         [0.0053, 0.0045, 0.2485,  ..., 0.2442, 0.2500, 0.2500],
         [0.0053, 0.0045, 0.2546,  ..., 0.2442, 0.2500, 0.2500],
         [0.9818, 0.9836, 0.2485,  ..., 0.2442, 0.2500, 0.2500]],
        [[0.0047, 0.0044, 0.0047,  ..., 0.0043, 0.0041, 0.0052],
         [0.0047, 0.0044, 0.0047,  ..., 0.0043, 0.0041, 0.0052],
         [0.0056, 0.0044, 0.0052,  ..., 0.0043, 0.0041, 0.0080],
         [0.9850, 0.9869, 0.9855,  ..., 0.9870, 0.9878, 0.9815]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 346:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0092, 0.0093,  ..., 0.0092, 0.0089, 0.0094],
         [0.0092, 0.0092, 0.0093,  ..., 0.0092, 0.0089, 0.0094],
         [0.0092, 0.0092, 0.0093,  ..., 0.0092, 0.0089, 0.0094],
         [0.9723, 0.9724, 0.9721,  ..., 0.9725, 0.9733, 0.9719]],
        [[0.0092, 0.0089, 0.0100,  ..., 0.0091, 0.0090, 0.0091],
         [0.0092, 0.0089, 0.0100,  ..., 0.0091, 0.0090, 0.0091],
         [0.0092, 0.0089, 0.0100,  ..., 0.0091, 0.0090, 0.0091],
         [0.9723, 0.9734, 0.9699,  ..., 0.9728, 0.9729, 0.9726]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:51,380 [Process: 0] Synchronize training processes
2024-08-16 14:30:51,381 [Process: 0] Evaluating...
2024-08-16 14:30:51,383 [Process: 0] EPOCH 347:
2024-08-16 14:30:51,385 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.2500, 0.0040,  ..., 0.0069, 0.0098, 0.0069],
         [0.0046, 0.2500, 0.0040,  ..., 0.0056, 0.0064, 0.0051],
         [0.0046, 0.2500, 0.0040,  ..., 0.0056, 0.0064, 0.0051],
         [0.9862, 0.2500, 0.9879,  ..., 0.9819, 0.9774, 0.9829]],
        [[0.0057, 0.0052, 0.0051,  ..., 0.0087, 0.0056, 0.0077],
         [0.0057, 0.0052, 0.0051,  ..., 0.0051, 0.0056, 0.0049],
         [0.0089, 0.0062, 0.0061,  ..., 0.0056, 0.0082, 0.0049],
         [0.9797, 0.9834, 0.9837,  ..., 0.9805, 0.9806, 0.9826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 347:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0091, 0.0089,  ..., 0.0095, 0.0090, 0.0090],
         [0.0090, 0.0091, 0.0089,  ..., 0.0095, 0.0090, 0.0090],
         [0.0090, 0.0091, 0.0089,  ..., 0.0095, 0.0090, 0.0090],
         [0.9729, 0.9726, 0.9732,  ..., 0.9714, 0.9730, 0.9729]],
        [[0.0091, 0.0096, 0.0094,  ..., 0.0092, 0.0090, 0.0091],
         [0.0091, 0.0096, 0.0094,  ..., 0.0092, 0.0090, 0.0091],
         [0.0091, 0.0096, 0.0094,  ..., 0.0092, 0.0090, 0.0091],
         [0.9726, 0.9711, 0.9718,  ..., 0.9723, 0.9729, 0.9728]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:53,280 [Process: 0] Synchronize training processes
2024-08-16 14:30:53,281 [Process: 0] Evaluating...
2024-08-16 14:30:53,283 [Process: 0] EPOCH 348:
2024-08-16 14:30:53,285 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0108, 0.0075,  ..., 0.0039, 0.0066, 0.0069],
         [0.2500, 0.0060, 0.0056,  ..., 0.0039, 0.0051, 0.0051],
         [0.2500, 0.0060, 0.0056,  ..., 0.0039, 0.0051, 0.0051],
         [0.2500, 0.9772, 0.9814,  ..., 0.9883, 0.9831, 0.9829]],
        [[0.0046, 0.0049, 0.0048,  ..., 0.0049, 0.0053, 0.0048],
         [0.0046, 0.0049, 0.0048,  ..., 0.0049, 0.0053, 0.0048],
         [0.0046, 0.0051, 0.0049,  ..., 0.0049, 0.0071, 0.0049],
         [0.9861, 0.9852, 0.9855,  ..., 0.9852, 0.9822, 0.9856]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 348:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0094, 0.0096,  ..., 0.0093, 0.0094, 0.0088],
         [0.0091, 0.0094, 0.0096,  ..., 0.0093, 0.0094, 0.0088],
         [0.0091, 0.0094, 0.0096,  ..., 0.0093, 0.0094, 0.0088],
         [0.9727, 0.9718, 0.9711,  ..., 0.9720, 0.9717, 0.9735]],
        [[0.0089, 0.0085, 0.0096,  ..., 0.0094, 0.0095, 0.0098],
         [0.0089, 0.0085, 0.0096,  ..., 0.0094, 0.0095, 0.0098],
         [0.0089, 0.0085, 0.0096,  ..., 0.0094, 0.0095, 0.0098],
         [0.9734, 0.9746, 0.9712,  ..., 0.9719, 0.9715, 0.9706]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:55,173 [Process: 0] Synchronize training processes
2024-08-16 14:30:55,173 [Process: 0] Evaluating...
2024-08-16 14:30:55,175 [Process: 0] EPOCH 349:
2024-08-16 14:30:55,177 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.0083, 0.0066,  ..., 0.2500, 0.0047, 0.0087],
         [0.0051, 0.0065, 0.0050,  ..., 0.2500, 0.0046, 0.0056],
         [0.0051, 0.0065, 0.0050,  ..., 0.2500, 0.0046, 0.0056],
         [0.9834, 0.9786, 0.9834,  ..., 0.2500, 0.9862, 0.9801]],
        [[0.0046, 0.0044, 0.0099,  ..., 0.0044, 0.0048, 0.0050],
         [0.0046, 0.0044, 0.0046,  ..., 0.0044, 0.0048, 0.0050],
         [0.0046, 0.0044, 0.0050,  ..., 0.0044, 0.0055, 0.0060],
         [0.9863, 0.9868, 0.9806,  ..., 0.9868, 0.9848, 0.9839]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 349:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0089, 0.0097,  ..., 0.0091, 0.0094, 0.0090],
         [0.0086, 0.0089, 0.0097,  ..., 0.0091, 0.0094, 0.0090],
         [0.0086, 0.0089, 0.0097,  ..., 0.0091, 0.0094, 0.0090],
         [0.9741, 0.9732, 0.9710,  ..., 0.9727, 0.9719, 0.9730]],
        [[0.0092, 0.0095, 0.0092,  ..., 0.0093, 0.0091, 0.0098],
         [0.0092, 0.0095, 0.0092,  ..., 0.0093, 0.0091, 0.0098],
         [0.0092, 0.0095, 0.0092,  ..., 0.0093, 0.0091, 0.0098],
         [0.9723, 0.9716, 0.9723,  ..., 0.9720, 0.9727, 0.9705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:57,073 [Process: 0] Synchronize training processes
2024-08-16 14:30:57,074 [Process: 0] Evaluating...
2024-08-16 14:30:57,076 [Process: 0] EPOCH 350:
2024-08-16 14:30:57,078 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0058, 0.0055,  ..., 0.0072, 0.2500, 0.2594],
         [0.0058, 0.0048, 0.0048,  ..., 0.0052, 0.2500, 0.2469],
         [0.0058, 0.0048, 0.0048,  ..., 0.0052, 0.2500, 0.2469],
         [0.9796, 0.9846, 0.9850,  ..., 0.9823, 0.2500, 0.2469]],
        [[0.0046, 0.0049, 0.0045,  ..., 0.0050, 0.0044, 0.0048],
         [0.0046, 0.0049, 0.0045,  ..., 0.0050, 0.0044, 0.0048],
         [0.0066, 0.0064, 0.0050,  ..., 0.0076, 0.0044, 0.0060],
         [0.9843, 0.9839, 0.9860,  ..., 0.9825, 0.9867, 0.9844]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 350:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0090, 0.0093,  ..., 0.0093, 0.0084, 0.0091],
         [0.0092, 0.0090, 0.0093,  ..., 0.0093, 0.0084, 0.0091],
         [0.0092, 0.0090, 0.0093,  ..., 0.0093, 0.0084, 0.0091],
         [0.9723, 0.9731, 0.9722,  ..., 0.9722, 0.9747, 0.9727]],
        [[0.0093, 0.0091, 0.0098,  ..., 0.0087, 0.0094, 0.0091],
         [0.0093, 0.0091, 0.0098,  ..., 0.0087, 0.0094, 0.0091],
         [0.0093, 0.0091, 0.0098,  ..., 0.0087, 0.0094, 0.0091],
         [0.9721, 0.9726, 0.9707,  ..., 0.9740, 0.9719, 0.9728]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:30:58,969 [Process: 0] Synchronize training processes
2024-08-16 14:30:58,969 [Process: 0] Evaluating...
2024-08-16 14:30:58,971 [Process: 0] EPOCH 351:
2024-08-16 14:30:58,973 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.2500, 0.0076,  ..., 0.2500, 0.2500, 0.0081],
         [0.0055, 0.2500, 0.0052,  ..., 0.2500, 0.2500, 0.0058],
         [0.0055, 0.2500, 0.0052,  ..., 0.2500, 0.2500, 0.0058],
         [0.9808, 0.2500, 0.9819,  ..., 0.2500, 0.2500, 0.9803]],
        [[0.0045, 0.0046, 0.0044,  ..., 0.0044, 0.0042, 0.0077],
         [0.0045, 0.0046, 0.0044,  ..., 0.0044, 0.0042, 0.0045],
         [0.0055, 0.0056, 0.0044,  ..., 0.0046, 0.0042, 0.0053],
         [0.9855, 0.9851, 0.9868,  ..., 0.9867, 0.9875, 0.9826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 351:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0088, 0.0103,  ..., 0.0086, 0.0099, 0.0091],
         [0.0099, 0.0088, 0.0103,  ..., 0.0086, 0.0099, 0.0091],
         [0.0099, 0.0088, 0.0103,  ..., 0.0086, 0.0099, 0.0091],
         [0.9702, 0.9735, 0.9691,  ..., 0.9743, 0.9703, 0.9726]],
        [[0.0085, 0.0091, 0.0087,  ..., 0.0088, 0.0089, 0.0089],
         [0.0085, 0.0091, 0.0087,  ..., 0.0088, 0.0089, 0.0089],
         [0.0085, 0.0091, 0.0087,  ..., 0.0088, 0.0089, 0.0089],
         [0.9746, 0.9727, 0.9740,  ..., 0.9736, 0.9732, 0.9734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:00,872 [Process: 0] Synchronize training processes
2024-08-16 14:31:00,872 [Process: 0] Evaluating...
2024-08-16 14:31:00,880 [Process: 0] EPOCH 352:
2024-08-16 14:31:00,882 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0065, 0.2500,  ..., 0.0039, 0.2500, 0.2500],
         [0.0057, 0.0045, 0.2500,  ..., 0.0039, 0.2500, 0.2500],
         [0.0057, 0.0045, 0.2500,  ..., 0.0039, 0.2500, 0.2500],
         [0.9811, 0.9844, 0.2500,  ..., 0.9882, 0.2500, 0.2500]],
        [[0.0038, 0.0057, 0.0063,  ..., 0.0067, 0.0042, 0.0048],
         [0.0038, 0.0046, 0.0042,  ..., 0.0042, 0.0042, 0.0048],
         [0.0038, 0.0058, 0.0042,  ..., 0.0042, 0.0042, 0.0053],
         [0.9885, 0.9840, 0.9853,  ..., 0.9849, 0.9873, 0.9852]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 352:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0088, 0.0092,  ..., 0.0095, 0.0089, 0.0093],
         [0.0092, 0.0088, 0.0092,  ..., 0.0095, 0.0089, 0.0093],
         [0.0092, 0.0088, 0.0092,  ..., 0.0095, 0.0089, 0.0093],
         [0.9724, 0.9736, 0.9724,  ..., 0.9715, 0.9733, 0.9720]],
        [[0.0087, 0.0089, 0.0086,  ..., 0.0091, 0.0089, 0.0090],
         [0.0087, 0.0089, 0.0086,  ..., 0.0091, 0.0089, 0.0090],
         [0.0087, 0.0089, 0.0086,  ..., 0.0091, 0.0089, 0.0090],
         [0.9740, 0.9734, 0.9742,  ..., 0.9726, 0.9732, 0.9731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:02,854 [Process: 0] Synchronize training processes
2024-08-16 14:31:02,855 [Process: 0] Evaluating...
2024-08-16 14:31:02,857 [Process: 0] EPOCH 353:
2024-08-16 14:31:02,859 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0082,  ..., 0.0053, 0.2500, 0.2350],
         [0.2500, 0.2500, 0.0056,  ..., 0.0046, 0.2500, 0.2350],
         [0.2500, 0.2500, 0.0056,  ..., 0.0046, 0.2500, 0.2951],
         [0.2500, 0.2500, 0.9807,  ..., 0.9855, 0.2500, 0.2350]],
        [[0.0046, 0.0045, 0.0042,  ..., 0.0043, 0.0043, 0.0050],
         [0.0046, 0.0045, 0.0042,  ..., 0.0043, 0.0043, 0.0050],
         [0.0050, 0.0052, 0.0042,  ..., 0.0047, 0.0044, 0.0059],
         [0.9859, 0.9858, 0.9873,  ..., 0.9867, 0.9870, 0.9841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 353:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0077, 0.0086, 0.0084,  ..., 0.0082, 0.0081, 0.0081],
         [0.0077, 0.0086, 0.0084,  ..., 0.0082, 0.0081, 0.0081],
         [0.0077, 0.0086, 0.0084,  ..., 0.0082, 0.0081, 0.0081],
         [0.9769, 0.9742, 0.9748,  ..., 0.9753, 0.9757, 0.9756]],
        [[0.0080, 0.0077, 0.0116,  ..., 0.0085, 0.0080, 0.0123],
         [0.0080, 0.0077, 0.0116,  ..., 0.0085, 0.0080, 0.0123],
         [0.0080, 0.0077, 0.0116,  ..., 0.0085, 0.0080, 0.0123],
         [0.9759, 0.9768, 0.9651,  ..., 0.9745, 0.9760, 0.9631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:04,859 [Process: 0] Synchronize training processes
2024-08-16 14:31:04,859 [Process: 0] Evaluating...
2024-08-16 14:31:04,861 [Process: 0] EPOCH 354:
2024-08-16 14:31:04,863 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0058, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0039, 0.0050, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0039, 0.0050, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.9876, 0.9843, 0.2500,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0039, 0.0045, 0.0044,  ..., 0.0046, 0.0042, 0.0040],
         [0.0039, 0.0045, 0.0044,  ..., 0.0046, 0.0042, 0.0040],
         [0.0039, 0.0049, 0.0044,  ..., 0.0054, 0.0043, 0.0040],
         [0.9882, 0.9860, 0.9868,  ..., 0.9854, 0.9873, 0.9880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 354:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0090, 0.0086,  ..., 0.0090, 0.0089, 0.0087],
         [0.0086, 0.0090, 0.0086,  ..., 0.0090, 0.0089, 0.0087],
         [0.0086, 0.0090, 0.0086,  ..., 0.0090, 0.0089, 0.0087],
         [0.9743, 0.9729, 0.9742,  ..., 0.9729, 0.9733, 0.9738]],
        [[0.0087, 0.0091, 0.0088,  ..., 0.0088, 0.0090, 0.0093],
         [0.0087, 0.0091, 0.0088,  ..., 0.0088, 0.0090, 0.0093],
         [0.0087, 0.0091, 0.0088,  ..., 0.0088, 0.0090, 0.0093],
         [0.9738, 0.9726, 0.9737,  ..., 0.9736, 0.9730, 0.9721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:06,859 [Process: 0] Synchronize training processes
2024-08-16 14:31:06,859 [Process: 0] Evaluating...
2024-08-16 14:31:06,861 [Process: 0] EPOCH 355:
2024-08-16 14:31:06,863 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0061,  ..., 0.0074, 0.0073, 0.2500],
         [0.2500, 0.2500, 0.0042,  ..., 0.0052, 0.0051, 0.2500],
         [0.2500, 0.2500, 0.0042,  ..., 0.0052, 0.0051, 0.2500],
         [0.2500, 0.2500, 0.9854,  ..., 0.9821, 0.9826, 0.2500]],
        [[0.0046, 0.0048, 0.0058,  ..., 0.0040, 0.0047, 0.0041],
         [0.0046, 0.0048, 0.0041,  ..., 0.0040, 0.0047, 0.0041],
         [0.0052, 0.0064, 0.0043,  ..., 0.0040, 0.0068, 0.0041],
         [0.9856, 0.9840, 0.9857,  ..., 0.9879, 0.9838, 0.9877]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 355:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0098, 0.0101, 0.0101,  ..., 0.0101, 0.0088, 0.0102],
         [0.0098, 0.0101, 0.0101,  ..., 0.0101, 0.0088, 0.0102],
         [0.0098, 0.0101, 0.0101,  ..., 0.0101, 0.0088, 0.0102],
         [0.9705, 0.9698, 0.9696,  ..., 0.9696, 0.9736, 0.9695]],
        [[0.0081, 0.0080, 0.0077,  ..., 0.0082, 0.0084, 0.0086],
         [0.0081, 0.0080, 0.0077,  ..., 0.0082, 0.0084, 0.0086],
         [0.0081, 0.0080, 0.0077,  ..., 0.0082, 0.0084, 0.0086],
         [0.9756, 0.9760, 0.9768,  ..., 0.9753, 0.9748, 0.9743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:08,932 [Process: 0] Synchronize training processes
2024-08-16 14:31:08,932 [Process: 0] Evaluating...
2024-08-16 14:31:08,934 [Process: 0] EPOCH 356:
2024-08-16 14:31:08,936 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0051, 0.0031, 0.0068,  ..., 0.2500, 0.2500, 0.0037],
         [0.0043, 0.0031, 0.0048,  ..., 0.2500, 0.2500, 0.0037],
         [0.0043, 0.0031, 0.0048,  ..., 0.2500, 0.2500, 0.0037],
         [0.9863, 0.9906, 0.9835,  ..., 0.2500, 0.2500, 0.9889]],
        [[0.0043, 0.0046, 0.0052,  ..., 0.0046, 0.0047, 0.0044],
         [0.0042, 0.0046, 0.0038,  ..., 0.0046, 0.0047, 0.0042],
         [0.0045, 0.0064, 0.0038,  ..., 0.0061, 0.0079, 0.0055],
         [0.9870, 0.9844, 0.9873,  ..., 0.9847, 0.9826, 0.9860]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 356:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0085, 0.0087,  ..., 0.0091, 0.0090, 0.0089],
         [0.0089, 0.0085, 0.0087,  ..., 0.0091, 0.0090, 0.0089],
         [0.0089, 0.0085, 0.0087,  ..., 0.0091, 0.0090, 0.0089],
         [0.9732, 0.9746, 0.9740,  ..., 0.9728, 0.9731, 0.9732]],
        [[0.0092, 0.0089, 0.0089,  ..., 0.0092, 0.0092, 0.0092],
         [0.0092, 0.0089, 0.0089,  ..., 0.0092, 0.0092, 0.0092],
         [0.0092, 0.0089, 0.0089,  ..., 0.0092, 0.0092, 0.0092],
         [0.9723, 0.9732, 0.9733,  ..., 0.9725, 0.9724, 0.9724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:11,034 [Process: 0] Synchronize training processes
2024-08-16 14:31:11,034 [Process: 0] Evaluating...
2024-08-16 14:31:11,036 [Process: 0] EPOCH 357:
2024-08-16 14:31:11,038 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0047, 0.0053,  ..., 0.0060, 0.0071, 0.2500],
         [0.2500, 0.0043, 0.0045,  ..., 0.0046, 0.0053, 0.2500],
         [0.2500, 0.0043, 0.0045,  ..., 0.0046, 0.0053, 0.2500],
         [0.2500, 0.9867, 0.9857,  ..., 0.9847, 0.9823, 0.2500]],
        [[0.0044, 0.0049, 0.0041,  ..., 0.0040, 0.0050, 0.0044],
         [0.0044, 0.0049, 0.0041,  ..., 0.0040, 0.0043, 0.0044],
         [0.0052, 0.0069, 0.0041,  ..., 0.0040, 0.0056, 0.0049],
         [0.9860, 0.9833, 0.9878,  ..., 0.9879, 0.9850, 0.9862]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 357:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0093, 0.0091,  ..., 0.0093, 0.0092, 0.0091],
         [0.0092, 0.0093, 0.0091,  ..., 0.0093, 0.0092, 0.0091],
         [0.0092, 0.0093, 0.0091,  ..., 0.0093, 0.0092, 0.0091],
         [0.9724, 0.9720, 0.9728,  ..., 0.9721, 0.9723, 0.9728]],
        [[0.0091, 0.0090, 0.0092,  ..., 0.0091, 0.0093, 0.0088],
         [0.0091, 0.0090, 0.0092,  ..., 0.0091, 0.0093, 0.0088],
         [0.0091, 0.0090, 0.0092,  ..., 0.0091, 0.0093, 0.0088],
         [0.9727, 0.9730, 0.9723,  ..., 0.9726, 0.9721, 0.9735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:13,136 [Process: 0] Synchronize training processes
2024-08-16 14:31:13,136 [Process: 0] Evaluating...
2024-08-16 14:31:13,138 [Process: 0] EPOCH 358:
2024-08-16 14:31:13,140 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2190,  ..., 0.0108, 0.2228, 0.0053],
         [0.2500, 0.2500, 0.2190,  ..., 0.0067, 0.2082, 0.0042],
         [0.2500, 0.2500, 0.3430,  ..., 0.0067, 0.3609, 0.0042],
         [0.2500, 0.2500, 0.2190,  ..., 0.9759, 0.2082, 0.9862]],
        [[0.0045, 0.0048, 0.0043,  ..., 0.0044, 0.0046, 0.0045],
         [0.0045, 0.0048, 0.0043,  ..., 0.0044, 0.0046, 0.0045],
         [0.0055, 0.0068, 0.0043,  ..., 0.0049, 0.0049, 0.0056],
         [0.9855, 0.9836, 0.9870,  ..., 0.9863, 0.9859, 0.9854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 358:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0091, 0.0090,  ..., 0.0088, 0.0086, 0.0088],
         [0.0087, 0.0091, 0.0090,  ..., 0.0088, 0.0086, 0.0088],
         [0.0087, 0.0091, 0.0090,  ..., 0.0088, 0.0086, 0.0088],
         [0.9740, 0.9726, 0.9729,  ..., 0.9736, 0.9742, 0.9737]],
        [[0.0093, 0.0094, 0.0092,  ..., 0.0094, 0.0090, 0.0094],
         [0.0093, 0.0094, 0.0092,  ..., 0.0094, 0.0090, 0.0094],
         [0.0093, 0.0094, 0.0092,  ..., 0.0094, 0.0090, 0.0094],
         [0.9722, 0.9718, 0.9724,  ..., 0.9718, 0.9730, 0.9718]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:15,212 [Process: 0] Synchronize training processes
2024-08-16 14:31:15,212 [Process: 0] Evaluating...
2024-08-16 14:31:15,214 [Process: 0] EPOCH 359:
2024-08-16 14:31:15,216 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0094, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0062, 0.0058, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0062, 0.0058, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.9775, 0.9791, 0.2500,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0046, 0.0046, 0.0040,  ..., 0.0048, 0.0049, 0.0046],
         [0.0046, 0.0046, 0.0040,  ..., 0.0048, 0.0049, 0.0046],
         [0.0048, 0.0057, 0.0040,  ..., 0.0059, 0.0072, 0.0056],
         [0.9860, 0.9850, 0.9881,  ..., 0.9846, 0.9830, 0.9852]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 359:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0089, 0.0094,  ..., 0.0087, 0.0089, 0.0087],
         [0.0087, 0.0089, 0.0094,  ..., 0.0087, 0.0089, 0.0087],
         [0.0087, 0.0089, 0.0094,  ..., 0.0087, 0.0089, 0.0087],
         [0.9738, 0.9733, 0.9719,  ..., 0.9740, 0.9732, 0.9738]],
        [[0.0087, 0.0095, 0.0090,  ..., 0.0090, 0.0087, 0.0090],
         [0.0087, 0.0095, 0.0090,  ..., 0.0090, 0.0087, 0.0090],
         [0.0087, 0.0095, 0.0090,  ..., 0.0090, 0.0087, 0.0090],
         [0.9738, 0.9716, 0.9731,  ..., 0.9730, 0.9739, 0.9730]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:17,321 [Process: 0] Synchronize training processes
2024-08-16 14:31:17,321 [Process: 0] Evaluating...
2024-08-16 14:31:17,323 [Process: 0] EPOCH 360:
2024-08-16 14:31:17,325 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0112, 0.0066, 0.2500,  ..., 0.0079, 0.0076, 0.0059],
         [0.0058, 0.0046, 0.2500,  ..., 0.0046, 0.0047, 0.0053],
         [0.0058, 0.0046, 0.2500,  ..., 0.0046, 0.0047, 0.0053],
         [0.9771, 0.9842, 0.2500,  ..., 0.9829, 0.9829, 0.9836]],
        [[0.0039, 0.0046, 0.0046,  ..., 0.0055, 0.0048, 0.0047],
         [0.0039, 0.0046, 0.0046,  ..., 0.0043, 0.0048, 0.0047],
         [0.0039, 0.0052, 0.0066,  ..., 0.0062, 0.0069, 0.0053],
         [0.9883, 0.9856, 0.9842,  ..., 0.9840, 0.9836, 0.9853]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 360:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0090, 0.0089,  ..., 0.0089, 0.0089, 0.0087],
         [0.0087, 0.0090, 0.0089,  ..., 0.0089, 0.0089, 0.0087],
         [0.0087, 0.0090, 0.0089,  ..., 0.0089, 0.0089, 0.0087],
         [0.9739, 0.9731, 0.9733,  ..., 0.9733, 0.9732, 0.9739]],
        [[0.0094, 0.0090, 0.0092,  ..., 0.0089, 0.0090, 0.0090],
         [0.0094, 0.0090, 0.0092,  ..., 0.0089, 0.0090, 0.0090],
         [0.0094, 0.0090, 0.0092,  ..., 0.0089, 0.0090, 0.0090],
         [0.9719, 0.9731, 0.9723,  ..., 0.9733, 0.9731, 0.9731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:19,324 [Process: 0] Synchronize training processes
2024-08-16 14:31:19,325 [Process: 0] Evaluating...
2024-08-16 14:31:19,327 [Process: 0] EPOCH 361:
2024-08-16 14:31:19,329 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0049, 0.2500,  ..., 0.0043, 0.2500, 0.0038],
         [0.2500, 0.0040, 0.2500,  ..., 0.0040, 0.2500, 0.0036],
         [0.2500, 0.0040, 0.2500,  ..., 0.0040, 0.2500, 0.0036],
         [0.2500, 0.9872, 0.2500,  ..., 0.9877, 0.2500, 0.9889]],
        [[0.0039, 0.0044, 0.0048,  ..., 0.0050, 0.0047, 0.0042],
         [0.0039, 0.0044, 0.0048,  ..., 0.0050, 0.0047, 0.0042],
         [0.0039, 0.0048, 0.0069,  ..., 0.0069, 0.0059, 0.0045],
         [0.9884, 0.9864, 0.9836,  ..., 0.9831, 0.9846, 0.9871]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 361:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0089, 0.0089,  ..., 0.0083, 0.0092, 0.0093],
         [0.0084, 0.0089, 0.0089,  ..., 0.0083, 0.0092, 0.0093],
         [0.0084, 0.0089, 0.0089,  ..., 0.0083, 0.0092, 0.0093],
         [0.9749, 0.9733, 0.9733,  ..., 0.9750, 0.9723, 0.9720]],
        [[0.0089, 0.0090, 0.0088,  ..., 0.0091, 0.0085, 0.0092],
         [0.0089, 0.0090, 0.0088,  ..., 0.0091, 0.0085, 0.0092],
         [0.0089, 0.0090, 0.0088,  ..., 0.0091, 0.0085, 0.0092],
         [0.9733, 0.9731, 0.9735,  ..., 0.9727, 0.9746, 0.9724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:21,253 [Process: 0] Synchronize training processes
2024-08-16 14:31:21,254 [Process: 0] Evaluating...
2024-08-16 14:31:21,266 [Process: 0] EPOCH 362:
2024-08-16 14:31:21,268 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.2405, 0.2500,  ..., 0.2500, 0.2500, 0.0067],
         [0.0050, 0.2405, 0.2500,  ..., 0.2500, 0.2500, 0.0049],
         [0.0050, 0.2784, 0.2500,  ..., 0.2500, 0.2500, 0.0049],
         [0.9830, 0.2405, 0.2500,  ..., 0.2500, 0.2500, 0.9834]],
        [[0.0044, 0.0042, 0.0050,  ..., 0.0071, 0.0040, 0.0046],
         [0.0044, 0.0042, 0.0050,  ..., 0.0043, 0.0040, 0.0046],
         [0.0044, 0.0042, 0.0057,  ..., 0.0050, 0.0040, 0.0055],
         [0.9867, 0.9873, 0.9842,  ..., 0.9836, 0.9881, 0.9854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 362:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0092, 0.0087,  ..., 0.0087, 0.0085, 0.0090],
         [0.0084, 0.0092, 0.0087,  ..., 0.0087, 0.0085, 0.0090],
         [0.0084, 0.0092, 0.0087,  ..., 0.0087, 0.0085, 0.0090],
         [0.9748, 0.9725, 0.9740,  ..., 0.9739, 0.9744, 0.9731]],
        [[0.0082, 0.0089, 0.0086,  ..., 0.0087, 0.0086, 0.0088],
         [0.0082, 0.0089, 0.0086,  ..., 0.0087, 0.0086, 0.0088],
         [0.0082, 0.0089, 0.0086,  ..., 0.0087, 0.0086, 0.0088],
         [0.9755, 0.9734, 0.9741,  ..., 0.9738, 0.9741, 0.9735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:23,171 [Process: 0] Synchronize training processes
2024-08-16 14:31:23,172 [Process: 0] Evaluating...
2024-08-16 14:31:23,174 [Process: 0] EPOCH 363:
2024-08-16 14:31:23,176 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0050, 0.2500,  ..., 0.0076, 0.2500, 0.2500],
         [0.0044, 0.0041, 0.2500,  ..., 0.0049, 0.2500, 0.2500],
         [0.0044, 0.0041, 0.2500,  ..., 0.0049, 0.2500, 0.2500],
         [0.9836, 0.9869, 0.2500,  ..., 0.9826, 0.2500, 0.2500]],
        [[0.0046, 0.0047, 0.0048,  ..., 0.0043, 0.0046, 0.0047],
         [0.0046, 0.0047, 0.0048,  ..., 0.0043, 0.0046, 0.0039],
         [0.0046, 0.0075, 0.0062,  ..., 0.0043, 0.0058, 0.0039],
         [0.9861, 0.9830, 0.9841,  ..., 0.9872, 0.9850, 0.9875]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 363:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0093, 0.0094, 0.0094,  ..., 0.0087, 0.0092, 0.0085],
         [0.0093, 0.0094, 0.0094,  ..., 0.0087, 0.0092, 0.0085],
         [0.0093, 0.0094, 0.0094,  ..., 0.0087, 0.0092, 0.0085],
         [0.9721, 0.9718, 0.9718,  ..., 0.9740, 0.9725, 0.9746]],
        [[0.0094, 0.0088, 0.0087,  ..., 0.0082, 0.0085, 0.0084],
         [0.0094, 0.0088, 0.0087,  ..., 0.0082, 0.0085, 0.0084],
         [0.0094, 0.0088, 0.0087,  ..., 0.0082, 0.0085, 0.0084],
         [0.9718, 0.9736, 0.9738,  ..., 0.9755, 0.9745, 0.9747]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:25,087 [Process: 0] Synchronize training processes
2024-08-16 14:31:25,087 [Process: 0] Evaluating...
2024-08-16 14:31:25,089 [Process: 0] EPOCH 364:
2024-08-16 14:31:25,091 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2321, 0.0055,  ..., 0.2500, 0.0107, 0.2500],
         [0.2500, 0.2321, 0.0039,  ..., 0.2500, 0.0060, 0.2500],
         [0.2500, 0.3036, 0.0039,  ..., 0.2500, 0.0060, 0.2500],
         [0.2500, 0.2321, 0.9867,  ..., 0.2500, 0.9774, 0.2500]],
        [[0.0052, 0.0057, 0.0039,  ..., 0.0045, 0.0055, 0.0050],
         [0.0052, 0.0057, 0.0039,  ..., 0.0045, 0.0055, 0.0050],
         [0.0073, 0.0091, 0.0039,  ..., 0.0045, 0.0077, 0.0064],
         [0.9822, 0.9794, 0.9882,  ..., 0.9866, 0.9813, 0.9836]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 364:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0088, 0.0085,  ..., 0.0082, 0.0086, 0.0088],
         [0.0095, 0.0088, 0.0085,  ..., 0.0082, 0.0086, 0.0088],
         [0.0095, 0.0088, 0.0085,  ..., 0.0082, 0.0086, 0.0088],
         [0.9716, 0.9735, 0.9746,  ..., 0.9755, 0.9742, 0.9736]],
        [[0.0088, 0.0087, 0.0090,  ..., 0.0091, 0.0088, 0.0088],
         [0.0088, 0.0087, 0.0090,  ..., 0.0091, 0.0088, 0.0088],
         [0.0088, 0.0087, 0.0090,  ..., 0.0091, 0.0088, 0.0088],
         [0.9737, 0.9740, 0.9729,  ..., 0.9727, 0.9735, 0.9737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:29,323 [Process: 0] Synchronize training processes
2024-08-16 14:31:29,324 [Process: 0] Evaluating...
2024-08-16 14:31:29,326 [Process: 0] EPOCH 365:
2024-08-16 14:31:29,327 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0039, 0.2500,  ..., 0.0066, 0.0038, 0.0059],
         [0.0042, 0.0034, 0.2500,  ..., 0.0047, 0.0035, 0.0046],
         [0.0042, 0.0034, 0.2500,  ..., 0.0047, 0.0035, 0.0046],
         [0.9856, 0.9893, 0.2500,  ..., 0.9840, 0.9892, 0.9849]],
        [[0.0045, 0.0043, 0.0056,  ..., 0.0045, 0.0048, 0.0047],
         [0.0045, 0.0043, 0.0056,  ..., 0.0045, 0.0048, 0.0047],
         [0.0045, 0.0043, 0.0086,  ..., 0.0052, 0.0058, 0.0055],
         [0.9864, 0.9870, 0.9802,  ..., 0.9858, 0.9846, 0.9850]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 365:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0088, 0.0087,  ..., 0.0087, 0.0085, 0.0082],
         [0.0091, 0.0088, 0.0087,  ..., 0.0087, 0.0085, 0.0082],
         [0.0091, 0.0088, 0.0087,  ..., 0.0087, 0.0085, 0.0082],
         [0.9727, 0.9737, 0.9738,  ..., 0.9738, 0.9745, 0.9755]],
        [[0.0090, 0.0091, 0.0083,  ..., 0.0087, 0.0085, 0.0082],
         [0.0090, 0.0091, 0.0083,  ..., 0.0087, 0.0085, 0.0082],
         [0.0090, 0.0091, 0.0083,  ..., 0.0087, 0.0085, 0.0082],
         [0.9730, 0.9728, 0.9751,  ..., 0.9738, 0.9744, 0.9753]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:31,265 [Process: 0] Synchronize training processes
2024-08-16 14:31:31,265 [Process: 0] Evaluating...
2024-08-16 14:31:31,267 [Process: 0] EPOCH 366:
2024-08-16 14:31:31,269 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0062, 0.0038, 0.2620,  ..., 0.2500, 0.2500, 0.0044],
         [0.0046, 0.0032, 0.2460,  ..., 0.2500, 0.2500, 0.0036],
         [0.0046, 0.0032, 0.2460,  ..., 0.2500, 0.2500, 0.0036],
         [0.9847, 0.9898, 0.2460,  ..., 0.2500, 0.2500, 0.9883]],
        [[0.0051, 0.0071, 0.0042,  ..., 0.0040, 0.0044, 0.0040],
         [0.0045, 0.0047, 0.0042,  ..., 0.0040, 0.0044, 0.0040],
         [0.0065, 0.0059, 0.0042,  ..., 0.0040, 0.0044, 0.0040],
         [0.9839, 0.9823, 0.9874,  ..., 0.9881, 0.9867, 0.9880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 366:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0084, 0.0090,  ..., 0.0088, 0.0087, 0.0088],
         [0.0085, 0.0084, 0.0090,  ..., 0.0088, 0.0087, 0.0088],
         [0.0085, 0.0084, 0.0090,  ..., 0.0088, 0.0087, 0.0088],
         [0.9746, 0.9747, 0.9731,  ..., 0.9737, 0.9740, 0.9737]],
        [[0.0086, 0.0083, 0.0087,  ..., 0.0088, 0.0084, 0.0084],
         [0.0086, 0.0083, 0.0087,  ..., 0.0088, 0.0084, 0.0084],
         [0.0086, 0.0083, 0.0087,  ..., 0.0088, 0.0084, 0.0084],
         [0.9741, 0.9752, 0.9740,  ..., 0.9736, 0.9749, 0.9748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:33,220 [Process: 0] Synchronize training processes
2024-08-16 14:31:33,220 [Process: 0] Evaluating...
2024-08-16 14:31:33,222 [Process: 0] EPOCH 367:
2024-08-16 14:31:33,224 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0057, 0.0039,  ..., 0.0079, 0.0053, 0.0102],
         [0.0050, 0.0041, 0.0035,  ..., 0.0052, 0.0043, 0.0061],
         [0.0050, 0.0041, 0.0035,  ..., 0.0052, 0.0043, 0.0061],
         [0.9830, 0.9861, 0.9891,  ..., 0.9817, 0.9860, 0.9776]],
        [[0.0040, 0.0046, 0.0051,  ..., 0.0053, 0.0046, 0.0044],
         [0.0040, 0.0046, 0.0051,  ..., 0.0053, 0.0046, 0.0042],
         [0.0040, 0.0054, 0.0072,  ..., 0.0068, 0.0046, 0.0050],
         [0.9881, 0.9853, 0.9826,  ..., 0.9826, 0.9863, 0.9863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 367:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0086, 0.0089,  ..., 0.0086, 0.0093, 0.0081],
         [0.0087, 0.0086, 0.0089,  ..., 0.0086, 0.0093, 0.0081],
         [0.0087, 0.0086, 0.0089,  ..., 0.0086, 0.0093, 0.0081],
         [0.9738, 0.9743, 0.9733,  ..., 0.9743, 0.9722, 0.9758]],
        [[0.0087, 0.0089, 0.0090,  ..., 0.0087, 0.0083, 0.0082],
         [0.0087, 0.0089, 0.0090,  ..., 0.0087, 0.0083, 0.0082],
         [0.0087, 0.0089, 0.0090,  ..., 0.0087, 0.0083, 0.0082],
         [0.9740, 0.9732, 0.9731,  ..., 0.9739, 0.9750, 0.9755]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:35,161 [Process: 0] Synchronize training processes
2024-08-16 14:31:35,161 [Process: 0] Evaluating...
2024-08-16 14:31:35,163 [Process: 0] EPOCH 368:
2024-08-16 14:31:35,165 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.2500, 0.2500,  ..., 0.0057, 0.0039, 0.0094],
         [0.0042, 0.2500, 0.2500,  ..., 0.0042, 0.0035, 0.0056],
         [0.0042, 0.2500, 0.2500,  ..., 0.0042, 0.0035, 0.0056],
         [0.9867, 0.2500, 0.2500,  ..., 0.9859, 0.9890, 0.9794]],
        [[0.0049, 0.0036, 0.0050,  ..., 0.0043, 0.0058, 0.0043],
         [0.0049, 0.0036, 0.0050,  ..., 0.0043, 0.0042, 0.0043],
         [0.0060, 0.0036, 0.0071,  ..., 0.0043, 0.0047, 0.0045],
         [0.9843, 0.9892, 0.9829,  ..., 0.9870, 0.9853, 0.9869]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 368:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0092, 0.0086,  ..., 0.0081, 0.0084, 0.0089],
         [0.0092, 0.0092, 0.0086,  ..., 0.0081, 0.0084, 0.0089],
         [0.0092, 0.0092, 0.0086,  ..., 0.0081, 0.0084, 0.0089],
         [0.9723, 0.9723, 0.9743,  ..., 0.9758, 0.9749, 0.9732]],
        [[0.0086, 0.0083, 0.0086,  ..., 0.0086, 0.0085, 0.0085],
         [0.0086, 0.0083, 0.0086,  ..., 0.0086, 0.0085, 0.0085],
         [0.0086, 0.0083, 0.0086,  ..., 0.0086, 0.0085, 0.0085],
         [0.9743, 0.9752, 0.9742,  ..., 0.9743, 0.9744, 0.9744]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:37,095 [Process: 0] Synchronize training processes
2024-08-16 14:31:37,095 [Process: 0] Evaluating...
2024-08-16 14:31:37,097 [Process: 0] EPOCH 369:
2024-08-16 14:31:37,099 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0041, 0.2500, 0.0050,  ..., 0.0055, 0.0063, 0.2500],
         [0.0033, 0.2500, 0.0049,  ..., 0.0043, 0.0047, 0.2500],
         [0.0033, 0.2500, 0.0049,  ..., 0.0043, 0.0047, 0.2500],
         [0.9893, 0.2500, 0.9852,  ..., 0.9859, 0.9842, 0.2500]],
        [[0.0043, 0.0043, 0.0043,  ..., 0.0047, 0.0048, 0.0040],
         [0.0043, 0.0043, 0.0043,  ..., 0.0047, 0.0048, 0.0040],
         [0.0053, 0.0044, 0.0045,  ..., 0.0061, 0.0069, 0.0040],
         [0.9860, 0.9870, 0.9869,  ..., 0.9845, 0.9835, 0.9881]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 369:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0090, 0.0084,  ..., 0.0086, 0.0091, 0.0084],
         [0.0088, 0.0090, 0.0084,  ..., 0.0086, 0.0091, 0.0084],
         [0.0088, 0.0090, 0.0084,  ..., 0.0086, 0.0091, 0.0084],
         [0.9737, 0.9730, 0.9749,  ..., 0.9741, 0.9727, 0.9747]],
        [[0.0085, 0.0084, 0.0084,  ..., 0.0079, 0.0087, 0.0089],
         [0.0085, 0.0084, 0.0084,  ..., 0.0079, 0.0087, 0.0089],
         [0.0085, 0.0084, 0.0084,  ..., 0.0079, 0.0087, 0.0089],
         [0.9746, 0.9748, 0.9748,  ..., 0.9762, 0.9740, 0.9734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:39,175 [Process: 0] Synchronize training processes
2024-08-16 14:31:39,175 [Process: 0] Evaluating...
2024-08-16 14:31:39,177 [Process: 0] EPOCH 370:
2024-08-16 14:31:39,179 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0051,  ..., 0.2500, 0.0064, 0.2500],
         [0.2500, 0.2500, 0.0042,  ..., 0.2500, 0.0048, 0.2500],
         [0.2500, 0.2500, 0.0042,  ..., 0.2500, 0.0048, 0.2500],
         [0.2500, 0.2500, 0.9866,  ..., 0.2500, 0.9839, 0.2500]],
        [[0.0051, 0.0049, 0.0039,  ..., 0.0047, 0.0039, 0.0047],
         [0.0051, 0.0049, 0.0039,  ..., 0.0047, 0.0039, 0.0047],
         [0.0088, 0.0076, 0.0039,  ..., 0.0065, 0.0039, 0.0069],
         [0.9809, 0.9826, 0.9882,  ..., 0.9841, 0.9882, 0.9838]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 370:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0084, 0.0084,  ..., 0.0085, 0.0082, 0.0091],
         [0.0082, 0.0084, 0.0084,  ..., 0.0085, 0.0082, 0.0091],
         [0.0082, 0.0084, 0.0084,  ..., 0.0085, 0.0082, 0.0091],
         [0.9753, 0.9749, 0.9747,  ..., 0.9744, 0.9754, 0.9728]],
        [[0.0085, 0.0086, 0.0080,  ..., 0.0083, 0.0080, 0.0086],
         [0.0085, 0.0086, 0.0080,  ..., 0.0083, 0.0080, 0.0086],
         [0.0085, 0.0086, 0.0080,  ..., 0.0083, 0.0080, 0.0086],
         [0.9745, 0.9742, 0.9759,  ..., 0.9751, 0.9760, 0.9742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:41,222 [Process: 0] Synchronize training processes
2024-08-16 14:31:41,222 [Process: 0] Evaluating...
2024-08-16 14:31:41,224 [Process: 0] EPOCH 371:
2024-08-16 14:31:41,226 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0067, 0.2500, 0.0067,  ..., 0.0057, 0.0074, 0.2500],
         [0.0057, 0.2500, 0.0047,  ..., 0.0050, 0.0053, 0.2500],
         [0.0057, 0.2500, 0.0047,  ..., 0.0050, 0.0053, 0.2500],
         [0.9819, 0.2500, 0.9839,  ..., 0.9843, 0.9820, 0.2500]],
        [[0.0040, 0.0041, 0.0044,  ..., 0.0041, 0.0037, 0.0051],
         [0.0040, 0.0041, 0.0044,  ..., 0.0041, 0.0037, 0.0041],
         [0.0044, 0.0054, 0.0064,  ..., 0.0051, 0.0037, 0.0054],
         [0.9875, 0.9863, 0.9848,  ..., 0.9867, 0.9889, 0.9855]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 371:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0085, 0.0084,  ..., 0.0082, 0.0086, 0.0089],
         [0.0085, 0.0085, 0.0084,  ..., 0.0082, 0.0086, 0.0089],
         [0.0085, 0.0085, 0.0084,  ..., 0.0082, 0.0086, 0.0089],
         [0.9744, 0.9746, 0.9748,  ..., 0.9754, 0.9742, 0.9732]],
        [[0.0080, 0.0084, 0.0086,  ..., 0.0087, 0.0086, 0.0082],
         [0.0080, 0.0084, 0.0086,  ..., 0.0087, 0.0086, 0.0082],
         [0.0080, 0.0084, 0.0086,  ..., 0.0087, 0.0086, 0.0082],
         [0.9760, 0.9748, 0.9742,  ..., 0.9739, 0.9743, 0.9754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:43,181 [Process: 0] Synchronize training processes
2024-08-16 14:31:43,181 [Process: 0] Evaluating...
2024-08-16 14:31:43,189 [Process: 0] EPOCH 372:
2024-08-16 14:31:43,191 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0054, 0.0041,  ..., 0.2500, 0.2500, 0.0049],
         [0.0041, 0.0044, 0.0036,  ..., 0.2500, 0.2500, 0.0043],
         [0.0041, 0.0044, 0.0036,  ..., 0.2500, 0.2500, 0.0043],
         [0.9873, 0.9859, 0.9887,  ..., 0.2500, 0.2500, 0.9864]],
        [[0.0038, 0.0040, 0.0042,  ..., 0.0039, 0.0036, 0.0041],
         [0.0036, 0.0040, 0.0042,  ..., 0.0039, 0.0036, 0.0041],
         [0.0040, 0.0047, 0.0050,  ..., 0.0048, 0.0036, 0.0057],
         [0.9886, 0.9874, 0.9866,  ..., 0.9873, 0.9891, 0.9860]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 372:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0087, 0.0085,  ..., 0.0087, 0.0084, 0.0088],
         [0.0084, 0.0087, 0.0085,  ..., 0.0087, 0.0084, 0.0088],
         [0.0084, 0.0087, 0.0085,  ..., 0.0087, 0.0084, 0.0088],
         [0.9748, 0.9739, 0.9745,  ..., 0.9740, 0.9747, 0.9736]],
        [[0.0085, 0.0083, 0.0084,  ..., 0.0085, 0.0087, 0.0093],
         [0.0085, 0.0083, 0.0084,  ..., 0.0085, 0.0087, 0.0093],
         [0.0085, 0.0083, 0.0084,  ..., 0.0085, 0.0087, 0.0093],
         [0.9744, 0.9750, 0.9747,  ..., 0.9746, 0.9739, 0.9721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:45,114 [Process: 0] Synchronize training processes
2024-08-16 14:31:45,115 [Process: 0] Evaluating...
2024-08-16 14:31:45,117 [Process: 0] EPOCH 373:
2024-08-16 14:31:45,118 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0097, 0.0038,  ..., 0.2500, 0.2500, 0.2483],
         [0.2500, 0.0061, 0.0035,  ..., 0.2500, 0.2500, 0.2483],
         [0.2500, 0.0061, 0.0035,  ..., 0.2500, 0.2500, 0.2550],
         [0.2500, 0.9780, 0.9891,  ..., 0.2500, 0.2500, 0.2483]],
        [[0.0069, 0.0039, 0.0045,  ..., 0.0040, 0.0045, 0.0043],
         [0.0043, 0.0039, 0.0045,  ..., 0.0040, 0.0044, 0.0043],
         [0.0072, 0.0040, 0.0071,  ..., 0.0048, 0.0058, 0.0064],
         [0.9816, 0.9882, 0.9840,  ..., 0.9872, 0.9853, 0.9849]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 373:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0083, 0.0087,  ..., 0.0086, 0.0085, 0.0085],
         [0.0086, 0.0083, 0.0087,  ..., 0.0086, 0.0085, 0.0085],
         [0.0086, 0.0083, 0.0087,  ..., 0.0086, 0.0085, 0.0085],
         [0.9743, 0.9751, 0.9740,  ..., 0.9742, 0.9745, 0.9745]],
        [[0.0089, 0.0087, 0.0086,  ..., 0.0085, 0.0084, 0.0084],
         [0.0089, 0.0087, 0.0086,  ..., 0.0085, 0.0084, 0.0084],
         [0.0089, 0.0087, 0.0086,  ..., 0.0085, 0.0084, 0.0084],
         [0.9733, 0.9739, 0.9743,  ..., 0.9745, 0.9748, 0.9749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:47,029 [Process: 0] Synchronize training processes
2024-08-16 14:31:47,030 [Process: 0] Evaluating...
2024-08-16 14:31:47,032 [Process: 0] EPOCH 374:
2024-08-16 14:31:47,034 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0076, 0.2500,  ..., 0.0060, 0.0080, 0.2500],
         [0.0046, 0.0047, 0.2500,  ..., 0.0047, 0.0050, 0.2500],
         [0.0046, 0.0047, 0.2500,  ..., 0.0047, 0.0050, 0.2500],
         [0.9863, 0.9829, 0.2500,  ..., 0.9845, 0.9821, 0.2500]],
        [[0.0043, 0.0053, 0.0063,  ..., 0.0039, 0.0045, 0.0052],
         [0.0043, 0.0040, 0.0040,  ..., 0.0038, 0.0045, 0.0040],
         [0.0061, 0.0047, 0.0044,  ..., 0.0042, 0.0069, 0.0049],
         [0.9854, 0.9860, 0.9853,  ..., 0.9881, 0.9841, 0.9860]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 374:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0086, 0.0081,  ..., 0.0086, 0.0084, 0.0085],
         [0.0084, 0.0086, 0.0081,  ..., 0.0086, 0.0084, 0.0085],
         [0.0084, 0.0086, 0.0081,  ..., 0.0086, 0.0084, 0.0085],
         [0.9749, 0.9743, 0.9756,  ..., 0.9743, 0.9747, 0.9745]],
        [[0.0082, 0.0088, 0.0079,  ..., 0.0087, 0.0084, 0.0086],
         [0.0082, 0.0088, 0.0079,  ..., 0.0087, 0.0084, 0.0086],
         [0.0082, 0.0088, 0.0079,  ..., 0.0087, 0.0084, 0.0086],
         [0.9755, 0.9736, 0.9762,  ..., 0.9740, 0.9749, 0.9743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:49,125 [Process: 0] Synchronize training processes
2024-08-16 14:31:49,125 [Process: 0] Evaluating...
2024-08-16 14:31:49,127 [Process: 0] EPOCH 375:
2024-08-16 14:31:49,129 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2500,  ..., 0.0059, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.0045, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.0045, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.9851, 0.2500, 0.2500]],
        [[0.0043, 0.0037, 0.0055,  ..., 0.0046, 0.0042, 0.0076],
         [0.0043, 0.0037, 0.0041,  ..., 0.0046, 0.0042, 0.0040],
         [0.0046, 0.0037, 0.0045,  ..., 0.0071, 0.0044, 0.0045],
         [0.9868, 0.9890, 0.9859,  ..., 0.9837, 0.9871, 0.9839]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 375:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0078, 0.0082,  ..., 0.0082, 0.0087, 0.0083],
         [0.0083, 0.0078, 0.0082,  ..., 0.0082, 0.0087, 0.0083],
         [0.0083, 0.0078, 0.0082,  ..., 0.0082, 0.0087, 0.0083],
         [0.9751, 0.9767, 0.9754,  ..., 0.9755, 0.9740, 0.9750]],
        [[0.0082, 0.0082, 0.0081,  ..., 0.0085, 0.0083, 0.0090],
         [0.0082, 0.0082, 0.0081,  ..., 0.0085, 0.0083, 0.0090],
         [0.0082, 0.0082, 0.0081,  ..., 0.0085, 0.0083, 0.0090],
         [0.9755, 0.9753, 0.9757,  ..., 0.9746, 0.9751, 0.9729]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:51,192 [Process: 0] Synchronize training processes
2024-08-16 14:31:51,193 [Process: 0] Evaluating...
2024-08-16 14:31:51,195 [Process: 0] EPOCH 376:
2024-08-16 14:31:51,197 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0033, 0.0065,  ..., 0.2500, 0.2649, 0.2500],
         [0.0045, 0.0033, 0.0051,  ..., 0.2500, 0.2450, 0.2500],
         [0.0045, 0.0033, 0.0051,  ..., 0.2500, 0.2450, 0.2500],
         [0.9850, 0.9901, 0.9833,  ..., 0.2500, 0.2450, 0.2500]],
        [[0.0048, 0.0042, 0.0044,  ..., 0.0043, 0.0039, 0.0040],
         [0.0048, 0.0042, 0.0044,  ..., 0.0043, 0.0039, 0.0040],
         [0.0072, 0.0052, 0.0060,  ..., 0.0043, 0.0039, 0.0040],
         [0.9832, 0.9864, 0.9852,  ..., 0.9871, 0.9882, 0.9881]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 376:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0079, 0.0081,  ..., 0.0082, 0.0086, 0.0082],
         [0.0082, 0.0079, 0.0081,  ..., 0.0082, 0.0086, 0.0082],
         [0.0082, 0.0079, 0.0081,  ..., 0.0082, 0.0086, 0.0082],
         [0.9754, 0.9762, 0.9758,  ..., 0.9755, 0.9742, 0.9754]],
        [[0.0083, 0.0086, 0.0082,  ..., 0.0088, 0.0079, 0.0090],
         [0.0083, 0.0086, 0.0082,  ..., 0.0088, 0.0079, 0.0090],
         [0.0083, 0.0086, 0.0082,  ..., 0.0088, 0.0079, 0.0090],
         [0.9750, 0.9743, 0.9755,  ..., 0.9736, 0.9762, 0.9730]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:53,156 [Process: 0] Synchronize training processes
2024-08-16 14:31:53,156 [Process: 0] Evaluating...
2024-08-16 14:31:53,158 [Process: 0] EPOCH 377:
2024-08-16 14:31:53,160 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0067, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.0042, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.0042, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.9849, 0.2500,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0037, 0.0043, 0.0045,  ..., 0.0040, 0.0036, 0.0040],
         [0.0037, 0.0043, 0.0045,  ..., 0.0040, 0.0036, 0.0040],
         [0.0037, 0.0047, 0.0072,  ..., 0.0041, 0.0036, 0.0045],
         [0.9888, 0.9868, 0.9839,  ..., 0.9879, 0.9891, 0.9875]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 377:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0080, 0.0084,  ..., 0.0083, 0.0083, 0.0082],
         [0.0081, 0.0080, 0.0084,  ..., 0.0083, 0.0083, 0.0082],
         [0.0081, 0.0080, 0.0084,  ..., 0.0083, 0.0083, 0.0082],
         [0.9756, 0.9759, 0.9749,  ..., 0.9750, 0.9750, 0.9755]],
        [[0.0084, 0.0079, 0.0078,  ..., 0.0081, 0.0087, 0.0085],
         [0.0084, 0.0079, 0.0078,  ..., 0.0081, 0.0087, 0.0085],
         [0.0084, 0.0079, 0.0078,  ..., 0.0081, 0.0087, 0.0085],
         [0.9747, 0.9762, 0.9767,  ..., 0.9757, 0.9740, 0.9744]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:55,202 [Process: 0] Synchronize training processes
2024-08-16 14:31:55,203 [Process: 0] Evaluating...
2024-08-16 14:31:55,204 [Process: 0] EPOCH 378:
2024-08-16 14:31:55,206 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.0048],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.0043],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.0043],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.9866]],
        [[0.0042, 0.0043, 0.0043,  ..., 0.0038, 0.0041, 0.0054],
         [0.0042, 0.0043, 0.0043,  ..., 0.0038, 0.0041, 0.0040],
         [0.0055, 0.0054, 0.0056,  ..., 0.0038, 0.0043, 0.0043],
         [0.9862, 0.9860, 0.9858,  ..., 0.9887, 0.9875, 0.9863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 378:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0086, 0.0085,  ..., 0.0084, 0.0081, 0.0082],
         [0.0082, 0.0086, 0.0085,  ..., 0.0084, 0.0081, 0.0082],
         [0.0082, 0.0086, 0.0085,  ..., 0.0084, 0.0081, 0.0082],
         [0.9755, 0.9743, 0.9744,  ..., 0.9748, 0.9757, 0.9753]],
        [[0.0083, 0.0082, 0.0082,  ..., 0.0083, 0.0086, 0.0082],
         [0.0083, 0.0082, 0.0082,  ..., 0.0083, 0.0086, 0.0082],
         [0.0083, 0.0082, 0.0082,  ..., 0.0083, 0.0086, 0.0082],
         [0.9750, 0.9754, 0.9753,  ..., 0.9751, 0.9743, 0.9754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:57,256 [Process: 0] Synchronize training processes
2024-08-16 14:31:57,257 [Process: 0] Evaluating...
2024-08-16 14:31:57,258 [Process: 0] EPOCH 379:
2024-08-16 14:31:57,260 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0067, 0.0054, 0.2500,  ..., 0.0056, 0.2500, 0.0055],
         [0.0051, 0.0050, 0.2500,  ..., 0.0046, 0.2500, 0.0042],
         [0.0051, 0.0050, 0.2500,  ..., 0.0046, 0.2500, 0.0042],
         [0.9831, 0.9847, 0.2500,  ..., 0.9851, 0.2500, 0.9862]],
        [[0.0037, 0.0056, 0.0044,  ..., 0.0040, 0.0041, 0.0046],
         [0.0037, 0.0037, 0.0044,  ..., 0.0035, 0.0041, 0.0046],
         [0.0037, 0.0037, 0.0063,  ..., 0.0035, 0.0045, 0.0076],
         [0.9890, 0.9869, 0.9850,  ..., 0.9890, 0.9873, 0.9831]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 379:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0076, 0.0080,  ..., 0.0078, 0.0086, 0.0082],
         [0.0080, 0.0076, 0.0080,  ..., 0.0078, 0.0086, 0.0082],
         [0.0080, 0.0076, 0.0080,  ..., 0.0078, 0.0086, 0.0082],
         [0.9761, 0.9771, 0.9759,  ..., 0.9765, 0.9741, 0.9755]],
        [[0.0078, 0.0088, 0.0082,  ..., 0.0085, 0.0079, 0.0082],
         [0.0078, 0.0088, 0.0082,  ..., 0.0085, 0.0079, 0.0082],
         [0.0078, 0.0088, 0.0082,  ..., 0.0085, 0.0079, 0.0082],
         [0.9766, 0.9735, 0.9755,  ..., 0.9744, 0.9762, 0.9753]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:31:59,222 [Process: 0] Synchronize training processes
2024-08-16 14:31:59,222 [Process: 0] Evaluating...
2024-08-16 14:31:59,224 [Process: 0] EPOCH 380:
2024-08-16 14:31:59,226 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.2500, 0.0072,  ..., 0.0075, 0.2500, 0.2500],
         [0.0046, 0.2500, 0.0053,  ..., 0.0055, 0.2500, 0.2500],
         [0.0046, 0.2500, 0.0053,  ..., 0.0055, 0.2500, 0.2500],
         [0.9859, 0.2500, 0.9822,  ..., 0.9815, 0.2500, 0.2500]],
        [[0.0039, 0.0040, 0.0043,  ..., 0.0041, 0.0037, 0.0096],
         [0.0039, 0.0040, 0.0043,  ..., 0.0041, 0.0037, 0.0044],
         [0.0040, 0.0040, 0.0055,  ..., 0.0045, 0.0037, 0.0075],
         [0.9881, 0.9881, 0.9859,  ..., 0.9872, 0.9889, 0.9785]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 380:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0085, 0.0080,  ..., 0.0085, 0.0082, 0.0082],
         [0.0075, 0.0085, 0.0080,  ..., 0.0085, 0.0082, 0.0082],
         [0.0075, 0.0085, 0.0080,  ..., 0.0085, 0.0082, 0.0082],
         [0.9774, 0.9745, 0.9761,  ..., 0.9745, 0.9753, 0.9755]],
        [[0.0083, 0.0083, 0.0080,  ..., 0.0080, 0.0084, 0.0081],
         [0.0083, 0.0083, 0.0080,  ..., 0.0080, 0.0084, 0.0081],
         [0.0083, 0.0083, 0.0080,  ..., 0.0080, 0.0084, 0.0081],
         [0.9752, 0.9750, 0.9761,  ..., 0.9760, 0.9749, 0.9756]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:32:01,195 [Process: 0] Synchronize training processes
2024-08-16 14:32:01,196 [Process: 0] Evaluating...
2024-08-16 14:32:01,198 [Process: 0] EPOCH 381:
2024-08-16 14:32:01,200 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0042, 0.2500, 0.2500,  ..., 0.0039, 0.0049, 0.2500],
         [0.0042, 0.2500, 0.2500,  ..., 0.0037, 0.0041, 0.2500],
         [0.0042, 0.2500, 0.2500,  ..., 0.0037, 0.0041, 0.2500],
         [0.9875, 0.2500, 0.2500,  ..., 0.9887, 0.9868, 0.2500]],
        [[0.0042, 0.0042, 0.0040,  ..., 0.0039, 0.0039, 0.0040],
         [0.0042, 0.0042, 0.0040,  ..., 0.0039, 0.0039, 0.0040],
         [0.0059, 0.0050, 0.0040,  ..., 0.0040, 0.0044, 0.0040],
         [0.9857, 0.9865, 0.9881,  ..., 0.9881, 0.9879, 0.9879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 381:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0084, 0.0083,  ..., 0.0081, 0.0082, 0.0083],
         [0.0084, 0.0084, 0.0083,  ..., 0.0081, 0.0082, 0.0083],
         [0.0084, 0.0084, 0.0083,  ..., 0.0081, 0.0082, 0.0083],
         [0.9747, 0.9748, 0.9752,  ..., 0.9757, 0.9755, 0.9751]],
        [[0.0083, 0.0080, 0.0079,  ..., 0.0079, 0.0081, 0.0083],
         [0.0083, 0.0080, 0.0079,  ..., 0.0079, 0.0081, 0.0083],
         [0.0083, 0.0080, 0.0079,  ..., 0.0079, 0.0081, 0.0083],
         [0.9750, 0.9760, 0.9764,  ..., 0.9763, 0.9756, 0.9752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:32:03,139 [Process: 0] Synchronize training processes
2024-08-16 14:32:03,140 [Process: 0] Evaluating...
2024-08-16 14:32:03,147 [Process: 0] EPOCH 382:
2024-08-16 14:32:03,149 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0081, 0.2500,  ..., 0.2357, 0.2500, 0.0059],
         [0.0042, 0.0060, 0.2500,  ..., 0.2357, 0.2500, 0.0041],
         [0.0042, 0.0060, 0.2500,  ..., 0.2930, 0.2500, 0.0041],
         [0.9860, 0.9799, 0.2500,  ..., 0.2357, 0.2500, 0.9859]],
        [[0.0077, 0.0049, 0.0046,  ..., 0.0042, 0.0045, 0.0046],
         [0.0045, 0.0049, 0.0046,  ..., 0.0042, 0.0045, 0.0046],
         [0.0070, 0.0079, 0.0079,  ..., 0.0053, 0.0066, 0.0061],
         [0.9809, 0.9823, 0.9830,  ..., 0.9864, 0.9845, 0.9848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 382:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0078, 0.0082,  ..., 0.0081, 0.0079, 0.0077],
         [0.0080, 0.0078, 0.0082,  ..., 0.0081, 0.0079, 0.0077],
         [0.0080, 0.0078, 0.0082,  ..., 0.0081, 0.0079, 0.0077],
         [0.9761, 0.9765, 0.9755,  ..., 0.9756, 0.9763, 0.9768]],
        [[0.0076, 0.0085, 0.0077,  ..., 0.0079, 0.0080, 0.0080],
         [0.0076, 0.0085, 0.0077,  ..., 0.0079, 0.0080, 0.0080],
         [0.0076, 0.0085, 0.0077,  ..., 0.0079, 0.0080, 0.0080],
         [0.9773, 0.9745, 0.9768,  ..., 0.9762, 0.9761, 0.9760]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 207, in train_one_epoch
    if torch.isnan(loss):
KeyboardInterrupt
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.0041,  ..., 0.2500, 0.0051, 0.2500],
         [0.2500, 0.2500, 0.0034,  ..., 0.2500, 0.0039, 0.2500],
         [0.2500, 0.2500, 0.0034,  ..., 0.2500, 0.0039, 0.2500],
         [0.2500, 0.2500, 0.9891,  ..., 0.2500, 0.9871, 0.2500]],
        [[0.0040, 0.0044, 0.0044,  ..., 0.0043, 0.0042, 0.0035],
         [0.0040, 0.0044, 0.0039,  ..., 0.0043, 0.0042, 0.0035],
         [0.0046, 0.0051, 0.0047,  ..., 0.0059, 0.0061, 0.0035],
         [0.9874, 0.9862, 0.9871,  ..., 0.9855, 0.9855, 0.9896]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])