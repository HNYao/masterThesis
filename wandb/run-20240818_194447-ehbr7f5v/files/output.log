2024-08-18 19:44:51,572 [Worker 0] Is distributed: False
2024-08-18 19:44:51,572 [Process: 0] Starting training
2024-08-18 19:44:51,573 [Process: 0] EPOCH 1:
2024-08-18 19:44:51,575 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:44:53,310 [Process: 0] Synchronize training processes
2024-08-18 19:44:53,310 [Process: 0] Evaluating...
2024-08-18 19:44:53,317 [Process: 0] EPOCH 2:
2024-08-18 19:44:53,319 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3007, 0.2525, 0.2403,  ..., 0.2800, 0.3037, 0.2776],
         [0.2248, 0.2751, 0.2866,  ..., 0.2852, 0.2502, 0.2423],
         [0.1898, 0.2329, 0.2366,  ..., 0.1869, 0.2199, 0.2131],
         [0.2848, 0.2394, 0.2366,  ..., 0.2479, 0.2261, 0.2670]],
        [[0.2512, 0.2606, 0.2811,  ..., 0.1141, 0.0297, 0.3061],
         [0.2356, 0.2322, 0.2436,  ..., 0.1141, 0.1315, 0.2655],
         [0.1668, 0.2047, 0.2263,  ..., 0.5989, 0.8091, 0.1977],
         [0.3464, 0.3025, 0.2490,  ..., 0.1729, 0.0297, 0.2307]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-18 19:44:54,394 [Process: 0] Synchronize training processes
2024-08-18 19:44:54,394 [Process: 0] Evaluating...
2024-08-18 19:44:54,396 [Process: 0] EPOCH 3:
2024-08-18 19:44:54,398 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:44:55,477 [Process: 0] Synchronize training processes
2024-08-18 19:44:55,477 [Process: 0] Evaluating...
2024-08-18 19:44:55,479 [Process: 0] EPOCH 4:
2024-08-18 19:44:55,481 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2830, 0.2532, 0.2554,  ..., 0.2034, 0.2805, 0.2720],
         [0.2527, 0.2410, 0.2586,  ..., 0.2034, 0.2533, 0.2616],
         [0.1804, 0.2359, 0.1906,  ..., 0.3898, 0.1741, 0.1983],
         [0.2839, 0.2699, 0.2954,  ..., 0.2034, 0.2921, 0.2681]],
        [[0.1123, 0.2767, 0.2705,  ..., 0.2724, 0.2085, 0.2579],
         [0.1123, 0.2537, 0.2524,  ..., 0.2538, 0.2085, 0.2467],
         [0.6631, 0.1925, 0.1780,  ..., 0.2041, 0.3744, 0.2051],
         [0.1123, 0.2771, 0.2991,  ..., 0.2697, 0.2085, 0.2904]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2763, 0.2633, 0.2709,  ..., 0.1417, 0.2544, 0.2696],
         [0.2528, 0.2569, 0.2637,  ..., 0.1417, 0.2406, 0.2617],
         [0.2117, 0.1963, 0.1915,  ..., 0.5749, 0.2406, 0.1933],
         [0.2591, 0.2836, 0.2738,  ..., 0.1417, 0.2645, 0.2755]],
        [[0.2623, 0.0866, 0.2570,  ..., 0.2688, 0.0124, 0.2588],
         [0.2611, 0.0866, 0.2625,  ..., 0.2596, 0.0124, 0.2656],
         [0.2076, 0.7401, 0.2110,  ..., 0.2024, 0.9628, 0.2054],
         [0.2689, 0.0866, 0.2696,  ..., 0.2692, 0.0124, 0.2702]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2486, 0.2580, 0.2676,  ..., 0.2611, 0.2673, 0.2638],
         [0.2543, 0.2525, 0.2535,  ..., 0.2577, 0.2477, 0.2568],
         [0.2486, 0.2218, 0.2099,  ..., 0.2193, 0.2135, 0.2125],
         [0.2486, 0.2677, 0.2690,  ..., 0.2619, 0.2715, 0.2669]],
        [[0.2613, 0.2628, 0.2696,  ..., 0.2642, 0.2644, 0.2650],
         [0.2420, 0.2482, 0.2440,  ..., 0.2457, 0.2534, 0.2471],
         [0.2420, 0.2095, 0.2114,  ..., 0.2014, 0.2162, 0.2058],
         [0.2547, 0.2795, 0.2751,  ..., 0.2887, 0.2660, 0.2821]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:44:56,559 [Process: 0] Synchronize training processes
2024-08-18 19:44:56,559 [Process: 0] Evaluating...
2024-08-18 19:44:56,561 [Process: 0] EPOCH 5:
2024-08-18 19:44:56,563 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:44:57,641 [Process: 0] Synchronize training processes
2024-08-18 19:44:57,641 [Process: 0] Evaluating...
2024-08-18 19:44:57,643 [Process: 0] EPOCH 6:
2024-08-18 19:44:57,645 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5519e-01, 2.6886e-01, 2.7081e-01,  ..., 2.2553e-01,
          2.7035e-01, 2.5679e-01],
         [2.5075e-01, 2.4936e-01, 2.4307e-01,  ..., 2.3011e-01,
          2.4989e-01, 2.4335e-01],
         [2.2672e-01, 2.0291e-01, 2.1278e-01,  ..., 3.1882e-01,
          2.1040e-01, 2.3768e-01],
         [2.6734e-01, 2.7887e-01, 2.7333e-01,  ..., 2.2553e-01,
          2.6936e-01, 2.6218e-01]],
        [[2.5894e-01, 7.0668e-08, 2.6060e-01,  ..., 2.5959e-01,
          2.6635e-01, 2.7330e-01],
         [2.5252e-01, 7.0668e-08, 2.4676e-01,  ..., 2.4885e-01,
          2.4559e-01, 2.5045e-01],
         [2.1723e-01, 1.0000e+00, 2.1901e-01,  ..., 2.1076e-01,
          2.1406e-01, 2.1444e-01],
         [2.7131e-01, 7.0668e-08, 2.7363e-01,  ..., 2.8080e-01,
          2.7400e-01, 2.6181e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2645, 0.2688, 0.2598,  ..., 0.1115, 0.2685, 0.2554],
         [0.2526, 0.2489, 0.2545,  ..., 0.1115, 0.2488, 0.2439],
         [0.2157, 0.2083, 0.2212,  ..., 0.6655, 0.2110, 0.2236],
         [0.2672, 0.2740, 0.2645,  ..., 0.1115, 0.2717, 0.2772]],
        [[0.2659, 0.2587, 0.2701,  ..., 0.2689, 0.2665, 0.2628],
         [0.2481, 0.2519, 0.2449,  ..., 0.2408, 0.2474, 0.2491],
         [0.2166, 0.2205, 0.2209,  ..., 0.2158, 0.2117, 0.2161],
         [0.2693, 0.2689, 0.2642,  ..., 0.2745, 0.2744, 0.2720]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2379, 0.2680, 0.2561,  ..., 0.1158, 0.2628, 0.2588],
         [0.2379, 0.2444, 0.2459,  ..., 0.1158, 0.2487, 0.2488],
         [0.2862, 0.2137, 0.2219,  ..., 0.6525, 0.2223, 0.2237],
         [0.2379, 0.2739, 0.2762,  ..., 0.1158, 0.2663, 0.2687]],
        [[0.2563, 0.2586, 0.2637,  ..., 0.2612, 0.2631, 0.2641],
         [0.2340, 0.2389, 0.2412,  ..., 0.2446, 0.2453, 0.2381],
         [0.2340, 0.2359, 0.2205,  ..., 0.2203, 0.2149, 0.2220],
         [0.2757, 0.2666, 0.2746,  ..., 0.2739, 0.2767, 0.2757]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2460, 0.2668, 0.2599,  ..., 0.2608, 0.2614, 0.2632],
         [0.2624, 0.2373, 0.2407,  ..., 0.2406, 0.2393, 0.2413],
         [0.2379, 0.2228, 0.2273,  ..., 0.2273, 0.2331, 0.2271],
         [0.2538, 0.2730, 0.2721,  ..., 0.2713, 0.2662, 0.2683]],
        [[0.2658, 0.2647, 0.2636,  ..., 0.2682, 0.2659, 0.2654],
         [0.2381, 0.2398, 0.2409,  ..., 0.2430, 0.2367, 0.2397],
         [0.2185, 0.2188, 0.2200,  ..., 0.2107, 0.2222, 0.2254],
         [0.2776, 0.2767, 0.2755,  ..., 0.2781, 0.2753, 0.2694]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:44:58,723 [Process: 0] Synchronize training processes
2024-08-18 19:44:58,723 [Process: 0] Evaluating...
2024-08-18 19:44:58,725 [Process: 0] EPOCH 7:
2024-08-18 19:44:58,726 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2530, 0.2630, 0.2668,  ..., 0.2492, 0.2540, 0.2687],
         [0.2427, 0.2373, 0.2422,  ..., 0.2501, 0.2519, 0.2391],
         [0.2347, 0.2256, 0.2190,  ..., 0.2357, 0.2327, 0.2157],
         [0.2696, 0.2740, 0.2719,  ..., 0.2650, 0.2613, 0.2766]],
        [[0.2598, 0.2648, 0.2594,  ..., 0.2665, 0.2661, 0.2657],
         [0.2504, 0.2380, 0.2405,  ..., 0.2386, 0.2356, 0.2341],
         [0.2247, 0.2263, 0.2216,  ..., 0.2202, 0.2222, 0.2236],
         [0.2650, 0.2709, 0.2785,  ..., 0.2748, 0.2761, 0.2766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2356, 0.2660, 0.2727,  ..., 0.2653, 0.2646, 0.2633],
         [0.2356, 0.2342, 0.2399,  ..., 0.2329, 0.2324, 0.2361],
         [0.2933, 0.2261, 0.2174,  ..., 0.2230, 0.2307, 0.2273],
         [0.2356, 0.2736, 0.2701,  ..., 0.2788, 0.2723, 0.2733]],
        [[0.2717, 0.2681, 0.2642,  ..., 0.2706, 0.2671, 0.2661],
         [0.2352, 0.2359, 0.2385,  ..., 0.2378, 0.2340, 0.2349],
         [0.2218, 0.2200, 0.2229,  ..., 0.2225, 0.2263, 0.2217],
         [0.2714, 0.2760, 0.2744,  ..., 0.2691, 0.2726, 0.2773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2477, 0.2759, 0.2767,  ..., 0.1634, 0.2504, 0.2726],
         [0.2532, 0.2355, 0.2422,  ..., 0.1634, 0.2421, 0.2393],
         [0.2384, 0.2102, 0.2081,  ..., 0.5099, 0.2367, 0.2160],
         [0.2607, 0.2785, 0.2730,  ..., 0.1634, 0.2708, 0.2721]],
        [[0.2615, 0.2728, 0.2656,  ..., 0.2640, 0.2710, 0.2709],
         [0.2358, 0.2407, 0.2268,  ..., 0.2373, 0.2309, 0.2380],
         [0.2282, 0.2056, 0.2209,  ..., 0.2170, 0.2150, 0.2176],
         [0.2746, 0.2810, 0.2867,  ..., 0.2816, 0.2831, 0.2736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2160, 0.2687, 0.2682,  ..., 0.2674, 0.2665, 0.2651],
         [0.2160, 0.2298, 0.2330,  ..., 0.2316, 0.2349, 0.2287],
         [0.3521, 0.2242, 0.2221,  ..., 0.2226, 0.2264, 0.2275],
         [0.2160, 0.2773, 0.2768,  ..., 0.2783, 0.2722, 0.2787]],
        [[0.2656, 0.2718, 0.2684,  ..., 0.2711, 0.2664, 0.2689],
         [0.2338, 0.2302, 0.2313,  ..., 0.2311, 0.2286, 0.2277],
         [0.2260, 0.2245, 0.2258,  ..., 0.2271, 0.2286, 0.2233],
         [0.2746, 0.2735, 0.2744,  ..., 0.2707, 0.2763, 0.2801]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:44:59,831 [Process: 0] Synchronize training processes
2024-08-18 19:44:59,831 [Process: 0] Evaluating...
2024-08-18 19:44:59,833 [Process: 0] EPOCH 8:
2024-08-18 19:44:59,835 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:00,913 [Process: 0] Synchronize training processes
2024-08-18 19:45:00,914 [Process: 0] Evaluating...
2024-08-18 19:45:00,916 [Process: 0] EPOCH 9:
2024-08-18 19:45:00,918 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2373, 0.2681, 0.2830,  ..., 0.2221, 0.2317, 0.2645],
         [0.2373, 0.2311, 0.2260,  ..., 0.2221, 0.2495, 0.2465],
         [0.2882, 0.2247, 0.2023,  ..., 0.3337, 0.2838, 0.2218],
         [0.2373, 0.2761, 0.2886,  ..., 0.2221, 0.2349, 0.2672]],
        [[0.2685, 0.0309, 0.2724,  ..., 0.2767, 0.2767, 0.2660],
         [0.2258, 0.0309, 0.2238,  ..., 0.2315, 0.2303, 0.2296],
         [0.2245, 0.9073, 0.2133,  ..., 0.2104, 0.2155, 0.2182],
         [0.2812, 0.0309, 0.2904,  ..., 0.2814, 0.2776, 0.2862]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2276, 0.2648, 0.2645,  ..., 0.2665, 0.2673, 0.2723],
         [0.2276, 0.2307, 0.2306,  ..., 0.2315, 0.2268, 0.2265],
         [0.3173, 0.2307, 0.2306,  ..., 0.2232, 0.2268, 0.2255],
         [0.2276, 0.2738, 0.2743,  ..., 0.2788, 0.2792, 0.2757]],
        [[0.2696, 0.2676, 0.2667,  ..., 0.2721, 0.2690, 0.2712],
         [0.2293, 0.2257, 0.2292,  ..., 0.2281, 0.2255, 0.2244],
         [0.2254, 0.2257, 0.2292,  ..., 0.2281, 0.2242, 0.2225],
         [0.2756, 0.2811, 0.2750,  ..., 0.2718, 0.2813, 0.2818]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2336, 0.2698, 0.2721,  ..., 0.2114, 0.1161, 0.2507],
         [0.2336, 0.2269, 0.2219,  ..., 0.2114, 0.1161, 0.2391],
         [0.2991, 0.2219, 0.2219,  ..., 0.3659, 0.6516, 0.2553],
         [0.2336, 0.2814, 0.2841,  ..., 0.2114, 0.1161, 0.2548]],
        [[0.2730, 0.2660, 0.2691,  ..., 0.2706, 0.2773, 0.2679],
         [0.2238, 0.2274, 0.2275,  ..., 0.2250, 0.2239, 0.2276],
         [0.2184, 0.2274, 0.2210,  ..., 0.2204, 0.2134, 0.2213],
         [0.2848, 0.2791, 0.2824,  ..., 0.2840, 0.2854, 0.2831]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2462, 0.2770, 0.2713,  ..., 0.2666, 0.2658, 0.2710],
         [0.2462, 0.2213, 0.2226,  ..., 0.2283, 0.2278, 0.2215],
         [0.2615, 0.2182, 0.2216,  ..., 0.2283, 0.2278, 0.2215],
         [0.2462, 0.2836, 0.2845,  ..., 0.2769, 0.2787, 0.2859]],
        [[0.2731, 0.2749, 0.2717,  ..., 0.2671, 0.2719, 0.2761],
         [0.2226, 0.2228, 0.2254,  ..., 0.2244, 0.2274, 0.2206],
         [0.2226, 0.2228, 0.2254,  ..., 0.2244, 0.2249, 0.2203],
         [0.2818, 0.2795, 0.2775,  ..., 0.2841, 0.2757, 0.2830]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:01,998 [Process: 0] Synchronize training processes
2024-08-18 19:45:01,998 [Process: 0] Evaluating...
2024-08-18 19:45:02,000 [Process: 0] EPOCH 10:
2024-08-18 19:45:02,002 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:03,079 [Process: 0] Synchronize training processes
2024-08-18 19:45:03,080 [Process: 0] Evaluating...
2024-08-18 19:45:03,082 [Process: 0] EPOCH 11:
2024-08-18 19:45:03,083 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1874, 0.2839, 0.2880,  ..., 0.1765, 0.2184, 0.0465],
         [0.1874, 0.2223, 0.2214,  ..., 0.1765, 0.2184, 0.0465],
         [0.4379, 0.2081, 0.1987,  ..., 0.4705, 0.3447, 0.8606],
         [0.1874, 0.2858, 0.2919,  ..., 0.1765, 0.2184, 0.0465]],
        [[0.2757, 0.2754, 0.2777,  ..., 0.2750, 0.2785, 0.2814],
         [0.2212, 0.2215, 0.2247,  ..., 0.2173, 0.2201, 0.2189],
         [0.2105, 0.2119, 0.2082,  ..., 0.2172, 0.2118, 0.2101],
         [0.2925, 0.2912, 0.2894,  ..., 0.2905, 0.2897, 0.2897]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2327, 0.2710, 0.2650,  ..., 0.2717, 0.2579, 0.2676],
         [0.2327, 0.2239, 0.2275,  ..., 0.2201, 0.2330, 0.2236],
         [0.3018, 0.2239, 0.2275,  ..., 0.2201, 0.2330, 0.2236],
         [0.2327, 0.2812, 0.2800,  ..., 0.2882, 0.2761, 0.2852]],
        [[0.2691, 0.2712, 0.2658,  ..., 0.2660, 0.2689, 0.2728],
         [0.2244, 0.2212, 0.2254,  ..., 0.2245, 0.2230, 0.2214],
         [0.2244, 0.2212, 0.2254,  ..., 0.2245, 0.2230, 0.2214],
         [0.2821, 0.2864, 0.2833,  ..., 0.2851, 0.2850, 0.2843]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2216, 0.2697, 0.2734,  ..., 0.1197, 0.2631, 0.0149],
         [0.2216, 0.2213, 0.2193,  ..., 0.1197, 0.2317, 0.0149],
         [0.3351, 0.2213, 0.2175,  ..., 0.6410, 0.2317, 0.9554],
         [0.2216, 0.2877, 0.2898,  ..., 0.1197, 0.2735, 0.0149]],
        [[0.2794, 0.2641, 0.2811,  ..., 0.2724, 0.2671, 0.2698],
         [0.2112, 0.2272, 0.2130,  ..., 0.2183, 0.2229, 0.2163],
         [0.2112, 0.2252, 0.2075,  ..., 0.2183, 0.2229, 0.2163],
         [0.2982, 0.2836, 0.2984,  ..., 0.2909, 0.2871, 0.2975]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:04,162 [Process: 0] Synchronize training processes
2024-08-18 19:45:04,162 [Process: 0] Evaluating...
2024-08-18 19:45:04,168 [Process: 0] EPOCH 12:
2024-08-18 19:45:04,170 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:05,249 [Process: 0] Synchronize training processes
2024-08-18 19:45:05,250 [Process: 0] Evaluating...
2024-08-18 19:45:05,251 [Process: 0] EPOCH 13:
2024-08-18 19:45:05,253 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2258, 0.2664, 0.2745,  ..., 0.2683, 0.2627, 0.2776],
         [0.2258, 0.2241, 0.2185,  ..., 0.2209, 0.2296, 0.2154],
         [0.3226, 0.2241, 0.2185,  ..., 0.2209, 0.2296, 0.2154],
         [0.2258, 0.2855, 0.2886,  ..., 0.2899, 0.2781, 0.2915]],
        [[0.2776, 0.2779, 0.2741,  ..., 0.2779, 0.2755, 0.2686],
         [0.2181, 0.2195, 0.2215,  ..., 0.2194, 0.2187, 0.2234],
         [0.2181, 0.2195, 0.2215,  ..., 0.2194, 0.2187, 0.2234],
         [0.2862, 0.2832, 0.2829,  ..., 0.2833, 0.2871, 0.2846]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2390, 0.2725, 0.2889,  ..., 0.0355, 0.2581, 0.0105],
         [0.2390, 0.2232, 0.2090,  ..., 0.0355, 0.2283, 0.0105],
         [0.2830, 0.2118, 0.2047,  ..., 0.8934, 0.2279, 0.9685],
         [0.2390, 0.2924, 0.2975,  ..., 0.0355, 0.2857, 0.0105]],
        [[0.2794, 0.2552, 0.2885,  ..., 0.2791, 0.2769, 0.2713],
         [0.2095, 0.2298, 0.2159,  ..., 0.2166, 0.2113, 0.2193],
         [0.2034, 0.2298, 0.2115,  ..., 0.2136, 0.2113, 0.2144],
         [0.3077, 0.2851, 0.2842,  ..., 0.2906, 0.3004, 0.2950]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2452, 0.2658, 0.2745,  ..., 0.2694, 0.2755, 0.2719],
         [0.2452, 0.2205, 0.2127,  ..., 0.2175, 0.2195, 0.2186],
         [0.2645, 0.2205, 0.2127,  ..., 0.2175, 0.2195, 0.2186],
         [0.2452, 0.2932, 0.3002,  ..., 0.2956, 0.2854, 0.2910]],
        [[0.2779, 0.2700, 0.2708,  ..., 0.2724, 0.2784, 0.2726],
         [0.2177, 0.2239, 0.2252,  ..., 0.2181, 0.2167, 0.2154],
         [0.2177, 0.2239, 0.2252,  ..., 0.2181, 0.2167, 0.2154],
         [0.2867, 0.2821, 0.2789,  ..., 0.2914, 0.2883, 0.2966]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2150, 0.2850, 0.2867,  ..., 0.0485, 0.2474, 0.0544],
         [0.2150, 0.2098, 0.2119,  ..., 0.0485, 0.2265, 0.0544],
         [0.3549, 0.2089, 0.2081,  ..., 0.8545, 0.2468, 0.8368],
         [0.2150, 0.2963, 0.2932,  ..., 0.0485, 0.2793, 0.0544]],
        [[0.2701, 0.2394, 0.2776,  ..., 0.2729, 0.2855, 0.2712],
         [0.2140, 0.2198, 0.2130,  ..., 0.2160, 0.2049, 0.2237],
         [0.2140, 0.2827, 0.2125,  ..., 0.2098, 0.2031, 0.2170],
         [0.3019, 0.2580, 0.2970,  ..., 0.3013, 0.3065, 0.2881]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:06,331 [Process: 0] Synchronize training processes
2024-08-18 19:45:06,331 [Process: 0] Evaluating...
2024-08-18 19:45:06,333 [Process: 0] EPOCH 14:
2024-08-18 19:45:06,335 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2742, 0.2739, 0.2733,  ..., 0.2615, 0.2724, 0.2626],
         [0.2200, 0.2177, 0.2164,  ..., 0.2260, 0.2191, 0.2197],
         [0.2200, 0.2177, 0.2164,  ..., 0.2260, 0.2191, 0.2197],
         [0.2858, 0.2906, 0.2939,  ..., 0.2864, 0.2893, 0.2979]],
        [[0.2828, 0.2728, 0.2647,  ..., 0.2782, 0.2691, 0.2734],
         [0.2128, 0.2191, 0.2258,  ..., 0.2186, 0.2195, 0.2190],
         [0.2128, 0.2191, 0.2258,  ..., 0.2186, 0.2195, 0.2190],
         [0.2915, 0.2890, 0.2836,  ..., 0.2846, 0.2918, 0.2885]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2096, 0.2884, 0.2742,  ..., 0.0413, 0.2350, 0.1750],
         [0.2096, 0.2101, 0.2148,  ..., 0.0413, 0.2216, 0.1750],
         [0.3713, 0.1990, 0.2148,  ..., 0.8761, 0.2823, 0.4751],
         [0.2096, 0.3025, 0.2962,  ..., 0.0413, 0.2611, 0.1750]],
        [[0.2764, 0.2226, 0.2909,  ..., 0.2809, 0.2708, 0.2771],
         [0.2108, 0.2224, 0.2086,  ..., 0.2064, 0.2130, 0.2141],
         [0.2071, 0.3213, 0.2023,  ..., 0.2064, 0.2127, 0.2117],
         [0.3057, 0.2336, 0.2981,  ..., 0.3062, 0.3035, 0.2971]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2810, 0.2759, 0.2755,  ..., 0.2737, 0.2634, 0.2806],
         [0.2164, 0.2157, 0.2118,  ..., 0.2161, 0.2175, 0.2134],
         [0.2094, 0.2157, 0.2118,  ..., 0.2161, 0.2175, 0.2134],
         [0.2932, 0.2928, 0.3010,  ..., 0.2940, 0.3017, 0.2926]],
        [[0.2682, 0.2778, 0.2764,  ..., 0.2720, 0.2832, 0.2795],
         [0.2220, 0.2188, 0.2145,  ..., 0.2146, 0.2139, 0.2106],
         [0.2220, 0.2188, 0.2145,  ..., 0.2146, 0.2139, 0.2106],
         [0.2878, 0.2846, 0.2946,  ..., 0.2988, 0.2890, 0.2993]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2040, 0.2844, 0.2892,  ..., 0.0274, 0.2439, 0.0888],
         [0.2040, 0.2104, 0.2014,  ..., 0.0274, 0.2243, 0.0888],
         [0.3880, 0.2104, 0.2014,  ..., 0.9177, 0.2580, 0.7336],
         [0.2040, 0.2948, 0.3079,  ..., 0.0274, 0.2738, 0.0888]],
        [[0.2690, 0.2377, 0.2657,  ..., 0.2816, 0.2728, 0.2846],
         [0.2143, 0.2249, 0.2177,  ..., 0.2058, 0.2130, 0.2086],
         [0.2143, 0.2764, 0.2177,  ..., 0.2058, 0.2130, 0.2086],
         [0.3025, 0.2610, 0.2990,  ..., 0.3068, 0.3011, 0.2981]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:07,410 [Process: 0] Synchronize training processes
2024-08-18 19:45:07,410 [Process: 0] Evaluating...
2024-08-18 19:45:07,412 [Process: 0] EPOCH 15:
2024-08-18 19:45:07,414 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:08,493 [Process: 0] Synchronize training processes
2024-08-18 19:45:08,494 [Process: 0] Evaluating...
2024-08-18 19:45:08,495 [Process: 0] EPOCH 16:
2024-08-18 19:45:08,497 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2733, 0.2808, 0.2699,  ..., 0.2762, 0.2690, 0.2690],
         [0.2118, 0.2148, 0.2198,  ..., 0.2168, 0.2212, 0.2212],
         [0.2118, 0.2148, 0.2198,  ..., 0.2168, 0.2212, 0.2212],
         [0.3031, 0.2896, 0.2904,  ..., 0.2902, 0.2886, 0.2886]],
        [[0.2650, 0.2676, 0.2694,  ..., 0.2729, 0.2680, 0.2768],
         [0.2225, 0.2252, 0.2202,  ..., 0.2187, 0.2203, 0.2166],
         [0.2225, 0.2252, 0.2202,  ..., 0.2187, 0.2203, 0.2166],
         [0.2900, 0.2820, 0.2903,  ..., 0.2897, 0.2914, 0.2901]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2462, 0.2883, 0.2953,  ..., 0.1207, 0.2585, 0.0711],
         [0.2232, 0.2108, 0.2019,  ..., 0.1207, 0.2233, 0.0711],
         [0.2832, 0.2098, 0.2019,  ..., 0.6380, 0.2233, 0.7866],
         [0.2474, 0.2911, 0.3009,  ..., 0.1207, 0.2949, 0.0711]],
        [[0.2710, 0.2242, 0.2941,  ..., 0.2748, 0.2710, 0.2698],
         [0.2134, 0.2080, 0.2067,  ..., 0.2161, 0.2173, 0.2164],
         [0.2134, 0.3220, 0.2067,  ..., 0.2161, 0.2173, 0.2164],
         [0.3023, 0.2458, 0.2924,  ..., 0.2930, 0.2943, 0.2975]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2857, 0.2664, 0.2626,  ..., 0.2786, 0.2662, 0.2747],
         [0.2096, 0.2230, 0.2233,  ..., 0.2173, 0.2237, 0.2141],
         [0.2096, 0.2230, 0.2233,  ..., 0.2173, 0.2237, 0.2141],
         [0.2952, 0.2875, 0.2908,  ..., 0.2869, 0.2865, 0.2970]],
        [[0.2768, 0.2830, 0.2728,  ..., 0.2771, 0.2757, 0.2686],
         [0.2140, 0.2095, 0.2203,  ..., 0.2144, 0.2175, 0.2196],
         [0.2140, 0.2095, 0.2203,  ..., 0.2144, 0.2175, 0.2196],
         [0.2952, 0.2980, 0.2867,  ..., 0.2941, 0.2893, 0.2922]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:45:09,575 [Process: 0] Synchronize training processes
2024-08-18 19:45:09,575 [Process: 0] Evaluating...
2024-08-18 19:45:09,577 [Process: 0] EPOCH 17:
2024-08-18 19:45:09,579 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:10,651 [Process: 0] Synchronize training processes
2024-08-18 19:45:10,651 [Process: 0] Evaluating...
2024-08-18 19:45:10,653 [Process: 0] EPOCH 18:
2024-08-18 19:45:10,656 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2609, 0.2920, 0.3156,  ..., 0.0889, 0.2823, 0.0546],
         [0.2203, 0.2111, 0.1997,  ..., 0.0889, 0.2106, 0.0546],
         [0.2529, 0.2111, 0.1891,  ..., 0.7333, 0.2094, 0.8362],
         [0.2659, 0.2857, 0.2957,  ..., 0.0889, 0.2977, 0.0546]],
        [[0.2680, 0.2503, 0.2772,  ..., 0.2703, 0.2839, 0.2795],
         [0.2131, 0.2192, 0.2113,  ..., 0.2096, 0.2069, 0.2125],
         [0.2131, 0.2505, 0.2101,  ..., 0.2096, 0.2060, 0.2125],
         [0.3058, 0.2800, 0.3013,  ..., 0.3104, 0.3032, 0.2955]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2758, 0.2724, 0.2608,  ..., 0.2607, 0.2788, 0.2774],
         [0.2127, 0.2133, 0.2217,  ..., 0.2239, 0.2156, 0.2129],
         [0.2127, 0.2133, 0.2217,  ..., 0.2239, 0.2156, 0.2129],
         [0.2987, 0.3010, 0.2959,  ..., 0.2914, 0.2901, 0.2968]],
        [[0.2742, 0.2831, 0.2950,  ..., 0.2672, 0.2679, 0.2676],
         [0.2168, 0.2120, 0.2041,  ..., 0.2223, 0.2235, 0.2246],
         [0.2168, 0.2120, 0.2041,  ..., 0.2223, 0.2235, 0.2246],
         [0.2922, 0.2929, 0.2968,  ..., 0.2881, 0.2851, 0.2833]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2649, 0.3050, 0.3196,  ..., 0.0946, 0.2945, 0.0489],
         [0.2222, 0.2000, 0.1964,  ..., 0.0946, 0.2035, 0.0489],
         [0.2361, 0.2000, 0.1951,  ..., 0.7161, 0.2006, 0.8534],
         [0.2767, 0.2951, 0.2889,  ..., 0.0946, 0.3015, 0.0489]],
        [[0.2572, 0.2597, 0.2598,  ..., 0.2657, 0.2844, 0.2633],
         [0.2177, 0.2186, 0.2157,  ..., 0.2087, 0.2087, 0.2168],
         [0.2177, 0.2277, 0.2157,  ..., 0.2087, 0.2087, 0.2168],
         [0.3074, 0.2941, 0.3089,  ..., 0.3168, 0.2982, 0.3031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2737, 0.2602, 0.2787,  ..., 0.2734, 0.2661, 0.2725],
         [0.2150, 0.2145, 0.2138,  ..., 0.2156, 0.2218, 0.2220],
         [0.2150, 0.2145, 0.2138,  ..., 0.2156, 0.2218, 0.2220],
         [0.2964, 0.3107, 0.2937,  ..., 0.2954, 0.2903, 0.2835]],
        [[0.2835, 0.2735, 0.2806,  ..., 0.2752, 0.2608, 0.2765],
         [0.2149, 0.2187, 0.2131,  ..., 0.2219, 0.2221, 0.2130],
         [0.2149, 0.2187, 0.2131,  ..., 0.2219, 0.2263, 0.2130],
         [0.2867, 0.2892, 0.2932,  ..., 0.2811, 0.2908, 0.2976]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:11,758 [Process: 0] Synchronize training processes
2024-08-18 19:45:11,759 [Process: 0] Evaluating...
2024-08-18 19:45:11,761 [Process: 0] EPOCH 19:
2024-08-18 19:45:11,763 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:12,844 [Process: 0] Synchronize training processes
2024-08-18 19:45:12,844 [Process: 0] Evaluating...
2024-08-18 19:45:12,846 [Process: 0] EPOCH 20:
2024-08-18 19:45:12,848 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2427, 0.2979, 0.3419,  ..., 0.0517, 0.2901, 0.2052],
         [0.2232, 0.2027, 0.1818,  ..., 0.0563, 0.2101, 0.2125],
         [0.2810, 0.2015, 0.1725,  ..., 0.8404, 0.2064, 0.3493],
         [0.2531, 0.2979, 0.3038,  ..., 0.0517, 0.2935, 0.2330]],
        [[0.2747, 0.2435, 0.2813,  ..., 0.2841, 0.2826, 0.2704],
         [0.2147, 0.2182, 0.2034,  ..., 0.2123, 0.2107, 0.2101],
         [0.2147, 0.2615, 0.2034,  ..., 0.2123, 0.2107, 0.2101],
         [0.2958, 0.2768, 0.3119,  ..., 0.2913, 0.2961, 0.3094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2839, 0.2583, 0.2894,  ..., 0.2926, 0.2880, 0.2885],
         [0.2087, 0.2192, 0.2078,  ..., 0.2020, 0.2116, 0.2101],
         [0.2087, 0.2192, 0.2078,  ..., 0.2020, 0.2116, 0.2101],
         [0.2988, 0.3034, 0.2949,  ..., 0.3033, 0.2887, 0.2913]],
        [[0.2693, 0.2893, 0.2921,  ..., 0.2589, 0.1592, 0.2742],
         [0.2198, 0.2157, 0.2055,  ..., 0.2256, 0.1592, 0.2174],
         [0.2198, 0.2157, 0.2055,  ..., 0.2256, 0.5223, 0.2211],
         [0.2912, 0.2792, 0.2969,  ..., 0.2899, 0.1592, 0.2872]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2318, 0.3942, 0.3465,  ..., 0.0943, 0.2892, 0.0832],
         [0.2249, 0.1698, 0.1877,  ..., 0.0943, 0.2087, 0.0832],
         [0.2754, 0.1650, 0.1752,  ..., 0.7170, 0.2087, 0.7504],
         [0.2679, 0.2709, 0.2906,  ..., 0.0943, 0.2934, 0.0832]],
        [[0.2316, 0.2196, 0.2711,  ..., 0.2672, 0.2588, 0.2515],
         [0.2240, 0.2196, 0.2135,  ..., 0.2149, 0.2221, 0.2239],
         [0.2667, 0.3079, 0.2135,  ..., 0.2149, 0.2221, 0.2239],
         [0.2777, 0.2529, 0.3020,  ..., 0.3030, 0.2971, 0.3007]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2705, 0.2604, 0.3088,  ..., 0.3192, 0.2631, 0.2748],
         [0.2182, 0.2162, 0.1956,  ..., 0.1908, 0.2203, 0.2125],
         [0.2182, 0.2162, 0.1956,  ..., 0.1908, 0.2203, 0.2125],
         [0.2932, 0.3072, 0.3001,  ..., 0.2992, 0.2962, 0.3002]],
        [[0.2495, 0.2757, 0.2705,  ..., 0.2617, 0.1208, 0.2780],
         [0.2199, 0.2123, 0.2169,  ..., 0.2231, 0.1208, 0.2154],
         [0.2500, 0.2123, 0.2169,  ..., 0.2231, 0.6375, 0.2154],
         [0.2805, 0.2997, 0.2957,  ..., 0.2920, 0.1208, 0.2911]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:13,928 [Process: 0] Synchronize training processes
2024-08-18 19:45:13,929 [Process: 0] Evaluating...
2024-08-18 19:45:13,931 [Process: 0] EPOCH 21:
2024-08-18 19:45:13,932 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:15,015 [Process: 0] Synchronize training processes
2024-08-18 19:45:15,015 [Process: 0] Evaluating...
2024-08-18 19:45:15,022 [Process: 0] EPOCH 22:
2024-08-18 19:45:15,023 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2001, 0.3413, 0.4751,  ..., 0.0678, 0.2989, 0.0408],
         [0.1927, 0.1820, 0.1516,  ..., 0.0678, 0.2023, 0.0408],
         [0.3875, 0.1820, 0.1516,  ..., 0.7965, 0.2023, 0.8776],
         [0.2196, 0.2946, 0.2217,  ..., 0.0678, 0.2966, 0.0408]],
        [[0.1884, 0.2461, 0.2889,  ..., 0.2462, 0.2442, 0.2249],
         [0.1884, 0.2173, 0.2023,  ..., 0.2288, 0.2200, 0.2249],
         [0.4078, 0.2564, 0.2023,  ..., 0.2288, 0.2200, 0.2764],
         [0.2154, 0.2802, 0.3065,  ..., 0.2961, 0.3159, 0.2739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3017, 0.2132, 0.3018,  ..., 0.3095, 0.3248, 0.3298],
         [0.2072, 0.2132, 0.1988,  ..., 0.1993, 0.1913, 0.1870],
         [0.2072, 0.3223, 0.1988,  ..., 0.1993, 0.1913, 0.1870],
         [0.2840, 0.2514, 0.3005,  ..., 0.2920, 0.2926, 0.2962]],
        [[0.1756, 0.2409, 0.3750,  ..., 0.2337, 0.2614, 0.2736],
         [0.1756, 0.2276, 0.1766,  ..., 0.2337, 0.2225, 0.2118],
         [0.4731, 0.2474, 0.1766,  ..., 0.2586, 0.2225, 0.2118],
         [0.1756, 0.2841, 0.2717,  ..., 0.2740, 0.2935, 0.3028]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1845, 0.4741, 0.4247,  ..., 0.1184, 0.3354, 0.1179],
         [0.1845, 0.1457, 0.1566,  ..., 0.1184, 0.1879, 0.1179],
         [0.4466, 0.1271, 0.1566,  ..., 0.6447, 0.1836, 0.6462],
         [0.1845, 0.2531, 0.2620,  ..., 0.1184, 0.2931, 0.1179]],
        [[0.2004, 0.1890, 0.2591,  ..., 0.2202, 0.2736, 0.2144],
         [0.2004, 0.1890, 0.2047,  ..., 0.2202, 0.2122, 0.2144],
         [0.3585, 0.4159, 0.2047,  ..., 0.2647, 0.2122, 0.2994],
         [0.2406, 0.2061, 0.3316,  ..., 0.2948, 0.3020, 0.2719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-18 19:45:16,100 [Process: 0] Synchronize training processes
2024-08-18 19:45:16,101 [Process: 0] Evaluating...
2024-08-18 19:45:16,102 [Process: 0] EPOCH 23:
2024-08-18 19:45:16,104 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:17,179 [Process: 0] Synchronize training processes
2024-08-18 19:45:17,179 [Process: 0] Evaluating...
2024-08-18 19:45:17,181 [Process: 0] EPOCH 24:
2024-08-18 19:45:17,183 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.2157, 0.2198, 0.2460,  ..., 0.2929, 0.2585, 0.2627],
         [0.2157, 0.2198, 0.2249,  ..., 0.2026, 0.2207, 0.2098],
         [0.3197, 0.2758, 0.2249,  ..., 0.2026, 0.2406, 0.2098],
         [0.2488, 0.2846, 0.3042,  ..., 0.3020, 0.2801, 0.3178]],
        [[0.0938, 0.2136, 0.4709,  ..., 0.4088, 0.2169, 0.3131],
         [0.0938, 0.2136, 0.1498,  ..., 0.1731, 0.2169, 0.2006],
         [0.7186, 0.3148, 0.1498,  ..., 0.1731, 0.3160, 0.2006],
         [0.0938, 0.2580, 0.2296,  ..., 0.2451, 0.2502, 0.2856]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2080, 0.5485, 0.4070,  ..., 0.0531, 0.4785, 0.1587],
         [0.2080, 0.1233, 0.1653,  ..., 0.0531, 0.1365, 0.1587],
         [0.3759, 0.1173, 0.1653,  ..., 0.8408, 0.1277, 0.5239],
         [0.2080, 0.2109, 0.2624,  ..., 0.0531, 0.2574, 0.1587]],
        [[0.0750, 0.1748, 0.2714,  ..., 0.2168, 0.2296, 0.2225],
         [0.0750, 0.1748, 0.1977,  ..., 0.2168, 0.2296, 0.2225],
         [0.7751, 0.4319, 0.1977,  ..., 0.2845, 0.2296, 0.2612],
         [0.0750, 0.2185, 0.3332,  ..., 0.2819, 0.3113, 0.2937]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3867, 0.2696, 0.2376,  ..., 0.3243, 0.2803, 0.2659],
         [0.1696, 0.2112, 0.2237,  ..., 0.1863, 0.2158, 0.2068],
         [0.1633, 0.2112, 0.2237,  ..., 0.1863, 0.2158, 0.2068],
         [0.2804, 0.3079, 0.3149,  ..., 0.3031, 0.2880, 0.3204]],
        [[0.1621, 0.2161, 0.3095,  ..., 0.3275, 0.1021, 0.3581],
         [0.1621, 0.2161, 0.1945,  ..., 0.1889, 0.1021, 0.1803],
         [0.5100, 0.2983, 0.1945,  ..., 0.1889, 0.6938, 0.1794],
         [0.1657, 0.2695, 0.3014,  ..., 0.2946, 0.1021, 0.2821]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4549, 0.5650, 0.2263,  ..., 0.1029, 0.3086, 0.1291],
         [0.1788, 0.1119, 0.2263,  ..., 0.1029, 0.1962, 0.1291],
         [0.1788, 0.1119, 0.2320,  ..., 0.6914, 0.1962, 0.6126],
         [0.1876, 0.2112, 0.3155,  ..., 0.1029, 0.2991, 0.1291]],
        [[0.1323, 0.1657, 0.3676,  ..., 0.1770, 0.2229, 0.3868],
         [0.1323, 0.1657, 0.1816,  ..., 0.1770, 0.2229, 0.1654],
         [0.6032, 0.4923, 0.1590,  ..., 0.4343, 0.2621, 0.1641],
         [0.1323, 0.1763, 0.2918,  ..., 0.2116, 0.2921, 0.2836]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:18,264 [Process: 0] Synchronize training processes
2024-08-18 19:45:18,264 [Process: 0] Evaluating...
2024-08-18 19:45:18,266 [Process: 0] EPOCH 25:
2024-08-18 19:45:18,268 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:19,346 [Process: 0] Synchronize training processes
2024-08-18 19:45:19,346 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3751, 0.2892, 0.2710,  ..., 0.3656, 0.4927, 0.3817],
         [0.1634, 0.1978, 0.1969,  ..., 0.1699, 0.1462, 0.1687],
         [0.1607, 0.1978, 0.1969,  ..., 0.1699, 0.1462, 0.1687],
         [0.3008, 0.3153, 0.3351,  ..., 0.2946, 0.2148, 0.2809]],
        [[0.1550, 0.2055, 0.1832,  ..., 0.2090, 0.1352, 0.1735],
         [0.1550, 0.2055, 0.1832,  ..., 0.2090, 0.1352, 0.1735],
         [0.5351, 0.3513, 0.4359,  ..., 0.3253, 0.5944, 0.4602],
         [0.1550, 0.2377, 0.1977,  ..., 0.2567, 0.1352, 0.1929]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2547, 0.4836, 0.3305,  ..., 0.1078, 0.5682, 0.1378],
         [0.2147, 0.1511, 0.1815,  ..., 0.1078, 0.1181, 0.1378],
         [0.3160, 0.1346, 0.1815,  ..., 0.6766, 0.1181, 0.5867],
         [0.2147, 0.2307, 0.3064,  ..., 0.1078, 0.1957, 0.1378]],
        [[0.1454, 0.1885, 0.4252,  ..., 0.1665, 0.1214, 0.3100],
         [0.1454, 0.1887, 0.1516,  ..., 0.1665, 0.1214, 0.1768],
         [0.5638, 0.4071, 0.1291,  ..., 0.5006, 0.6357, 0.1768],
         [0.1454, 0.2158, 0.2940,  ..., 0.1665, 0.1214, 0.3364]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9807, 0.2204, 0.2357,  ..., 0.2225, 0.4069, 0.2263],
         [0.0064, 0.2204, 0.2119,  ..., 0.2161, 0.1689, 0.2122],
         [0.0064, 0.2204, 0.2119,  ..., 0.2161, 0.1680, 0.2085],
         [0.0064, 0.3389, 0.3405,  ..., 0.3453, 0.2562, 0.3529]],
        [[0.2171, 0.2256, 0.2515,  ..., 0.2706, 0.1563, 0.2534],
         [0.2175, 0.2138, 0.2138,  ..., 0.2047, 0.1563, 0.2132],
         [0.2803, 0.2590, 0.2128,  ..., 0.2047, 0.5312, 0.2113],
         [0.2851, 0.3016, 0.3219,  ..., 0.3201, 0.1563, 0.3220]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9603, 0.6278, 0.5110,  ..., 0.0697, 0.1796, 0.1101],
         [0.0132, 0.1020, 0.1533,  ..., 0.0697, 0.1796, 0.1101],
         [0.0132, 0.0959, 0.1344,  ..., 0.7910, 0.4331, 0.6697],
         [0.0132, 0.1743, 0.2012,  ..., 0.0697, 0.2077, 0.1101]],
        [[0.2706, 0.1368, 0.3048,  ..., 0.1804, 0.1908, 0.4010],
         [0.1749, 0.1368, 0.1808,  ..., 0.1804, 0.1908, 0.1588],
         [0.1749, 0.5896, 0.1605,  ..., 0.4589, 0.4277, 0.1503],
         [0.3796, 0.1368, 0.3540,  ..., 0.1804, 0.1908, 0.2900]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:19,348 [Process: 0] EPOCH 26:
2024-08-18 19:45:19,350 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:20,426 [Process: 0] Synchronize training processes
2024-08-18 19:45:20,426 [Process: 0] Evaluating...
2024-08-18 19:45:20,428 [Process: 0] EPOCH 27:
2024-08-18 19:45:20,430 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8728, 0.2664, 0.3091,  ..., 0.3016, 0.1990, 0.3396],
         [0.0462, 0.1920, 0.1789,  ..., 0.1788, 0.1990, 0.1686],
         [0.0364, 0.1920, 0.1769,  ..., 0.1788, 0.3645, 0.1630],
         [0.0445, 0.3496, 0.3350,  ..., 0.3408, 0.2375, 0.3288]],
        [[0.2161, 0.2149, 0.2230,  ..., 0.1947, 0.0471, 0.1778],
         [0.2161, 0.2149, 0.2230,  ..., 0.1947, 0.0471, 0.1778],
         [0.2724, 0.2737, 0.2427,  ..., 0.3882, 0.8588, 0.4656],
         [0.2955, 0.2964, 0.3112,  ..., 0.2224, 0.0471, 0.1788]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1218, 0.2940, 0.4499,  ..., 0.0509, 0.2838, 0.0952],
         [0.1218, 0.1839, 0.1308,  ..., 0.0509, 0.1932, 0.0952],
         [0.6346, 0.1834, 0.1308,  ..., 0.8472, 0.1932, 0.7143],
         [0.1218, 0.3387, 0.2886,  ..., 0.0509, 0.3299, 0.0952]],
        [[0.1859, 0.1778, 0.2967,  ..., 0.1397, 0.1643, 0.2990],
         [0.1859, 0.1779, 0.1842,  ..., 0.1397, 0.1643, 0.1890],
         [0.4286, 0.4391, 0.1842,  ..., 0.5808, 0.5070, 0.1645],
         [0.1996, 0.2052, 0.3349,  ..., 0.1397, 0.1643, 0.3475]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9962, 0.2168, 0.2208,  ..., 0.2270, 0.2703, 0.2387],
         [0.0013, 0.2168, 0.2065,  ..., 0.2270, 0.2041, 0.2049],
         [0.0013, 0.2168, 0.2065,  ..., 0.2270, 0.2345, 0.2308],
         [0.0013, 0.3495, 0.3661,  ..., 0.3189, 0.2911, 0.3255]],
        [[0.5311, 0.2538, 0.3285,  ..., 0.4135, 0.1662, 0.3328],
         [0.1384, 0.2115, 0.1918,  ..., 0.1749, 0.1662, 0.1881],
         [0.1252, 0.2115, 0.1918,  ..., 0.1749, 0.5013, 0.1881],
         [0.2052, 0.3232, 0.2879,  ..., 0.2367, 0.1662, 0.2909]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1471, 0.2015, 0.2706,  ..., 0.0407, 0.2089, 0.1772],
         [0.1471, 0.2028, 0.1841,  ..., 0.0407, 0.2089, 0.1772],
         [0.5587, 0.2015, 0.1676,  ..., 0.8778, 0.2089, 0.4136],
         [0.1471, 0.3943, 0.3777,  ..., 0.0407, 0.3734, 0.2321]],
        [[0.0973, 0.1667, 0.3881,  ..., 0.1197, 0.0715, 0.5620],
         [0.0973, 0.1712, 0.1773,  ..., 0.1197, 0.0715, 0.1223],
         [0.7081, 0.4844, 0.1561,  ..., 0.6408, 0.7856, 0.1055],
         [0.0973, 0.1777, 0.2785,  ..., 0.1197, 0.0715, 0.2103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:21,506 [Process: 0] Synchronize training processes
2024-08-18 19:45:21,506 [Process: 0] Evaluating...
2024-08-18 19:45:21,508 [Process: 0] EPOCH 28:
2024-08-18 19:45:21,510 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:22,589 [Process: 0] Synchronize training processes
2024-08-18 19:45:22,590 [Process: 0] Evaluating...
2024-08-18 19:45:22,592 [Process: 0] EPOCH 29:
2024-08-18 19:45:22,594 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7287, 0.2578, 0.3165,  ..., 0.3473, 0.5564, 0.2842],
         [0.0889, 0.1868, 0.1812,  ..., 0.1589, 0.1309, 0.1789],
         [0.0787, 0.1754, 0.1812,  ..., 0.1589, 0.1170, 0.1789],
         [0.1037, 0.3801, 0.3210,  ..., 0.3349, 0.1957, 0.3580]],
        [[0.1559, 0.1970, 0.2262,  ..., 0.2171, 0.1152, 0.1845],
         [0.1559, 0.1970, 0.2239,  ..., 0.2171, 0.1152, 0.1845],
         [0.5322, 0.3646, 0.2239,  ..., 0.2171, 0.6545, 0.4229],
         [0.1559, 0.2415, 0.3261,  ..., 0.3488, 0.1152, 0.2081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2341, 0.2898, 0.5706,  ..., 0.0419, 0.1936, 0.4398],
         [0.1821, 0.1837, 0.1162,  ..., 0.0419, 0.1782, 0.1564],
         [0.4016, 0.1819, 0.0978,  ..., 0.8744, 0.1782, 0.1563],
         [0.1821, 0.3445, 0.2154,  ..., 0.0419, 0.4499, 0.2475]],
        [[0.1785, 0.1250, 0.3783,  ..., 0.0908, 0.1354, 0.2113],
         [0.1989, 0.1250, 0.1582,  ..., 0.0908, 0.1354, 0.2043],
         [0.3860, 0.6250, 0.1582,  ..., 0.7277, 0.5938, 0.2043],
         [0.2367, 0.1250, 0.3054,  ..., 0.0908, 0.1354, 0.3800]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0815, 0.2118, 0.2072,  ..., 0.2905, 0.1891, 0.2102],
         [0.0815, 0.2118, 0.2072,  ..., 0.1875, 0.1891, 0.1987],
         [0.7555, 0.2531, 0.2072,  ..., 0.1852, 0.3885, 0.1987],
         [0.0815, 0.3232, 0.3785,  ..., 0.3368, 0.2332, 0.3924]],
        [[0.1519, 0.2093, 0.4173,  ..., 0.2991, 0.1193, 0.1405],
         [0.1519, 0.2093, 0.1508,  ..., 0.1881, 0.1193, 0.1405],
         [0.5442, 0.2093, 0.1508,  ..., 0.1881, 0.6421, 0.5786],
         [0.1519, 0.3721, 0.2812,  ..., 0.3247, 0.1193, 0.1405]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 19:45:23,671 [Process: 0] Synchronize training processes
2024-08-18 19:45:23,671 [Process: 0] Evaluating...
2024-08-18 19:45:23,673 [Process: 0] EPOCH 30:
2024-08-18 19:45:23,675 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:24,752 [Process: 0] Synchronize training processes
2024-08-18 19:45:24,752 [Process: 0] Evaluating...
2024-08-18 19:45:24,754 [Process: 0] EPOCH 31:
2024-08-18 19:45:24,756 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2114, 0.3143, 0.5815,  ..., 0.0838, 0.2541, 0.0963],
         [0.2114, 0.1659, 0.1114,  ..., 0.0838, 0.2017, 0.0963],
         [0.3658, 0.1659, 0.1114,  ..., 0.7487, 0.1885, 0.7112],
         [0.2114, 0.3539, 0.1957,  ..., 0.0838, 0.3558, 0.0963]],
        [[0.1166, 0.0922, 0.6205,  ..., 0.1197, 0.1027, 0.3278],
         [0.1166, 0.0922, 0.1202,  ..., 0.1197, 0.1027, 0.1589],
         [0.6502, 0.7233, 0.1020,  ..., 0.6409, 0.6920, 0.1565],
         [0.1166, 0.0922, 0.1574,  ..., 0.1197, 0.1027, 0.3569]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1545, 0.2368, 0.4992,  ..., 0.5099, 0.2757, 0.4792],
         [0.1545, 0.2065, 0.1374,  ..., 0.1465, 0.1699, 0.1524],
         [0.5364, 0.2149, 0.1322,  ..., 0.1377, 0.1687, 0.1524],
         [0.1545, 0.3418, 0.2312,  ..., 0.2059, 0.3857, 0.2161]],
        [[0.1037, 0.2021, 0.2222,  ..., 0.1918, 0.0407, 0.0879],
         [0.1037, 0.2021, 0.2074,  ..., 0.1918, 0.0407, 0.0879],
         [0.6890, 0.2900, 0.2034,  ..., 0.1918, 0.8778, 0.7364],
         [0.1037, 0.3058, 0.3670,  ..., 0.4245, 0.0407, 0.0879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0627, 0.4094, 0.4977,  ..., 0.0658, 0.1932, 0.1228],
         [0.0627, 0.1647, 0.1526,  ..., 0.0658, 0.1932, 0.1228],
         [0.8120, 0.1450, 0.1526,  ..., 0.8025, 0.2464, 0.6317],
         [0.0627, 0.2809, 0.1971,  ..., 0.0658, 0.3673, 0.1228]],
        [[0.2529, 0.2018, 0.1884,  ..., 0.0965, 0.1201, 0.2634],
         [0.2025, 0.2018, 0.1884,  ..., 0.0965, 0.1201, 0.1671],
         [0.3422, 0.3945, 0.2295,  ..., 0.7104, 0.6398, 0.1620],
         [0.2025, 0.2018, 0.3938,  ..., 0.0965, 0.1201, 0.4076]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0584, 0.2634, 0.2109,  ..., 0.3862, 0.2698, 0.3557],
         [0.0584, 0.1711, 0.2109,  ..., 0.1748, 0.1930, 0.1542],
         [0.8247, 0.1711, 0.2109,  ..., 0.1748, 0.1930, 0.1542],
         [0.0584, 0.3944, 0.3674,  ..., 0.2643, 0.3443, 0.3360]],
        [[0.2247, 0.2066, 0.3163,  ..., 0.2568, 0.0752, 0.1301],
         [0.1863, 0.2066, 0.1803,  ..., 0.2010, 0.0752, 0.1301],
         [0.1863, 0.2066, 0.1803,  ..., 0.2010, 0.7743, 0.6096],
         [0.4028, 0.3802, 0.3232,  ..., 0.3412, 0.0752, 0.1301]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:25,831 [Process: 0] Synchronize training processes
2024-08-18 19:45:25,831 [Process: 0] Evaluating...
2024-08-18 19:45:25,838 [Process: 0] EPOCH 32:
2024-08-18 19:45:25,839 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:26,916 [Process: 0] Synchronize training processes
2024-08-18 19:45:26,916 [Process: 0] Evaluating...
2024-08-18 19:45:26,918 [Process: 0] EPOCH 33:
2024-08-18 19:45:26,920 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3788e-01, 2.1536e-01, 5.1016e-01,  ..., 7.5393e-02,
          1.4460e-01, 1.8496e-01],
         [1.3788e-01, 1.9484e-01, 1.5422e-01,  ..., 7.5393e-02,
          1.4460e-01, 1.8496e-01],
         [5.8636e-01, 1.9484e-01, 1.1878e-01,  ..., 7.7382e-01,
          5.6620e-01, 3.9719e-01],
         [1.3788e-01, 3.9495e-01, 2.1684e-01,  ..., 7.5393e-02,
          1.4460e-01, 2.3288e-01]],
        [[1.8993e-01, 9.9916e-01, 3.0021e-01,  ..., 1.6314e-01,
          1.5940e-01, 3.0090e-01],
         [1.8727e-01, 2.8081e-04, 1.6167e-01,  ..., 1.6314e-01,
          1.5940e-01, 1.5900e-01],
         [4.3554e-01, 2.8081e-04, 1.3793e-01,  ..., 4.9411e-01,
          5.1136e-01, 1.2062e-01],
         [1.8727e-01, 2.8081e-04, 4.0020e-01,  ..., 1.7961e-01,
          1.6984e-01, 4.1948e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0788, 0.1545, 0.2919,  ..., 0.2684, 0.2033, 0.2364],
         [0.0788, 0.1545, 0.1836,  ..., 0.1792, 0.2033, 0.1903],
         [0.7636, 0.5364, 0.1836,  ..., 0.1792, 0.2684, 0.1903],
         [0.0788, 0.1545, 0.3409,  ..., 0.3733, 0.3250, 0.3831]],
        [[0.2481, 0.2088, 0.2154,  ..., 0.2722, 0.2209, 0.2106],
         [0.1958, 0.2088, 0.2023,  ..., 0.1937, 0.2088, 0.2106],
         [0.1958, 0.2753, 0.2023,  ..., 0.1937, 0.2882, 0.3041],
         [0.3602, 0.3071, 0.3799,  ..., 0.3405, 0.2821, 0.2747]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1130, 0.4246, 0.6378,  ..., 0.1027, 0.1012, 0.3498],
         [0.1130, 0.1397, 0.1134,  ..., 0.1027, 0.1012, 0.1714],
         [0.6611, 0.1323, 0.0869,  ..., 0.6919, 0.6965, 0.1517],
         [0.1130, 0.3034, 0.1619,  ..., 0.1027, 0.1012, 0.3271]],
        [[0.1482, 0.2058, 0.3966,  ..., 0.1037, 0.1566, 0.3847],
         [0.1482, 0.2033, 0.1489,  ..., 0.1037, 0.1566, 0.1534],
         [0.5555, 0.2224, 0.1258,  ..., 0.6888, 0.5301, 0.1382],
         [0.1482, 0.3685, 0.3288,  ..., 0.1037, 0.1566, 0.3237]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0918, 0.1906, 0.2879,  ..., 0.2830, 0.2372, 0.2052],
         [0.0918, 0.1906, 0.1880,  ..., 0.1670, 0.1876, 0.2052],
         [0.7247, 0.3726, 0.1718,  ..., 0.1603, 0.1876, 0.2052],
         [0.0918, 0.2462, 0.3523,  ..., 0.3897, 0.3876, 0.3844]],
        [[0.2485, 0.3867, 0.2913,  ..., 0.2285, 0.1014, 0.1607],
         [0.2011, 0.1488, 0.1776,  ..., 0.2111, 0.1014, 0.1607],
         [0.2011, 0.1384, 0.1776,  ..., 0.2335, 0.6958, 0.5178],
         [0.3493, 0.3261, 0.3536,  ..., 0.3268, 0.1014, 0.1607]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:27,995 [Process: 0] Synchronize training processes
2024-08-18 19:45:27,995 [Process: 0] Evaluating...
2024-08-18 19:45:27,997 [Process: 0] EPOCH 34:
2024-08-18 19:45:27,999 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:29,075 [Process: 0] Synchronize training processes
2024-08-18 19:45:29,075 [Process: 0] Evaluating...
2024-08-18 19:45:29,077 [Process: 0] EPOCH 35:
2024-08-18 19:45:29,079 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1226, 0.4742, 0.5407,  ..., 0.0796, 0.1422, 0.1076],
         [0.1226, 0.1355, 0.1531,  ..., 0.0796, 0.1422, 0.1076],
         [0.6321, 0.1120, 0.1069,  ..., 0.7613, 0.5734, 0.6772],
         [0.1226, 0.2783, 0.1992,  ..., 0.0796, 0.1422, 0.1076]],
        [[0.1280, 0.2414, 0.4080,  ..., 0.1292, 0.1935, 0.5406],
         [0.1280, 0.1576, 0.1391,  ..., 0.1292, 0.1935, 0.1362],
         [0.6159, 0.1356, 0.1169,  ..., 0.6124, 0.3342, 0.0970],
         [0.1280, 0.4654, 0.3360,  ..., 0.1292, 0.2787, 0.2262]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1065, 0.2438, 0.2619,  ..., 0.3200, 0.2621, 0.2910],
         [0.1065, 0.1953, 0.1539,  ..., 0.1564, 0.1735, 0.1613],
         [0.6806, 0.2256, 0.1539,  ..., 0.1458, 0.1656, 0.1354],
         [0.1065, 0.3353, 0.4303,  ..., 0.3778, 0.3988, 0.4123]],
        [[0.1537, 0.5377, 0.1993,  ..., 0.3392, 0.0313, 0.1187],
         [0.1537, 0.1289, 0.1993,  ..., 0.1954, 0.0313, 0.1187],
         [0.5389, 0.1031, 0.2519,  ..., 0.1748, 0.9060, 0.6439],
         [0.1537, 0.2304, 0.3496,  ..., 0.2905, 0.0313, 0.1187]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1134, 0.4471, 0.5358,  ..., 0.0988, 0.2565, 0.1352],
         [0.1134, 0.1572, 0.1397,  ..., 0.0988, 0.1541, 0.1352],
         [0.6598, 0.1153, 0.0945,  ..., 0.7037, 0.1541, 0.5945],
         [0.1134, 0.2805, 0.2300,  ..., 0.0988, 0.4352, 0.1352]],
        [[0.1767, 0.5369, 0.2881,  ..., 0.0818, 0.1375, 0.4723],
         [0.1767, 0.1402, 0.1510,  ..., 0.0818, 0.1375, 0.1342],
         [0.4698, 0.1065, 0.1370,  ..., 0.7546, 0.5874, 0.0946],
         [0.1767, 0.2165, 0.4238,  ..., 0.0818, 0.1375, 0.2989]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0717, 0.1868, 0.2706,  ..., 0.2589, 0.2034, 0.1974],
         [0.0717, 0.1899, 0.1784,  ..., 0.1405, 0.1936, 0.1974],
         [0.7849, 0.2484, 0.1784,  ..., 0.1405, 0.1936, 0.1974],
         [0.0717, 0.3749, 0.3727,  ..., 0.4601, 0.4095, 0.4079]],
        [[0.1176, 0.2342, 0.3054,  ..., 0.2183, 0.0556, 0.1142],
         [0.1176, 0.1841, 0.1690,  ..., 0.1720, 0.0556, 0.1142],
         [0.6473, 0.1841, 0.1581,  ..., 0.1720, 0.8332, 0.6573],
         [0.1176, 0.3975, 0.3674,  ..., 0.4378, 0.0556, 0.1142]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:30,155 [Process: 0] Synchronize training processes
2024-08-18 19:45:30,156 [Process: 0] Evaluating...
2024-08-18 19:45:30,157 [Process: 0] EPOCH 36:
2024-08-18 19:45:30,159 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:31,236 [Process: 0] Synchronize training processes
2024-08-18 19:45:31,236 [Process: 0] Evaluating...
2024-08-18 19:45:31,238 [Process: 0] EPOCH 37:
2024-08-18 19:45:31,240 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1033, 0.2012, 0.4514,  ..., 0.0889, 0.2652, 0.1318],
         [0.1033, 0.1567, 0.1484,  ..., 0.0889, 0.1679, 0.1318],
         [0.6900, 0.1567, 0.1299,  ..., 0.7332, 0.1621, 0.6045],
         [0.1033, 0.4855, 0.2703,  ..., 0.0889, 0.4048, 0.1318]],
        [[0.1347, 0.5948, 0.3571,  ..., 0.1369, 0.1567, 0.5253],
         [0.1347, 0.1257, 0.1651,  ..., 0.1369, 0.1567, 0.1345],
         [0.5960, 0.0866, 0.1340,  ..., 0.5892, 0.5298, 0.0854],
         [0.1347, 0.1929, 0.3438,  ..., 0.1369, 0.1567, 0.2547]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1364, 0.1852, 0.2149,  ..., 0.2685, 0.1902, 0.2064],
         [0.1364, 0.1701, 0.1900,  ..., 0.1532, 0.1902, 0.2064],
         [0.5908, 0.1697, 0.1900,  ..., 0.1478, 0.2202, 0.2333],
         [0.1364, 0.4750, 0.4051,  ..., 0.4304, 0.3995, 0.3539]],
        [[0.2000, 0.1945, 0.1993,  ..., 0.2001, 0.0671, 0.0979],
         [0.1981, 0.1945, 0.1993,  ..., 0.2001, 0.0671, 0.0979],
         [0.3232, 0.3119, 0.2926,  ..., 0.2966, 0.7986, 0.7064],
         [0.2787, 0.2991, 0.3088,  ..., 0.3032, 0.0671, 0.0979]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0908, 0.3294, 0.5532,  ..., 0.0926, 0.5461, 0.1401],
         [0.0944, 0.1529, 0.1308,  ..., 0.0926, 0.1306, 0.1401],
         [0.7240, 0.1529, 0.1308,  ..., 0.7222, 0.1261, 0.5797],
         [0.0908, 0.3648, 0.1851,  ..., 0.0926, 0.1972, 0.1401]],
        [[0.1534, 0.4584, 0.1334,  ..., 0.1169, 0.1066, 0.4303],
         [0.1534, 0.1585, 0.1223,  ..., 0.1169, 0.1066, 0.1291],
         [0.5398, 0.1238, 0.1223,  ..., 0.6492, 0.6802, 0.1157],
         [0.1534, 0.2593, 0.6221,  ..., 0.1169, 0.1066, 0.3249]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:32,316 [Process: 0] Synchronize training processes
2024-08-18 19:45:32,316 [Process: 0] Evaluating...
2024-08-18 19:45:32,318 [Process: 0] EPOCH 38:
2024-08-18 19:45:32,320 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1648, 0.1598, 0.2349,  ..., 0.2819, 0.1884, 0.1878],
         [0.1648, 0.1598, 0.1462,  ..., 0.1539, 0.1884, 0.1878],
         [0.3854, 0.1598, 0.1459,  ..., 0.1539, 0.2519, 0.2206],
         [0.2849, 0.5205, 0.4731,  ..., 0.4103, 0.3713, 0.4039]],
        [[0.1888, 0.1833, 0.1840,  ..., 0.1954, 0.0747, 0.1027],
         [0.1888, 0.1833, 0.1840,  ..., 0.1954, 0.0747, 0.1027],
         [0.3414, 0.3920, 0.2384,  ..., 0.2078, 0.7759, 0.6920],
         [0.2810, 0.2415, 0.3935,  ..., 0.4014, 0.0747, 0.1027]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0941, 0.2664, 0.3297,  ..., 0.0826, 0.1417, 0.1401],
         [0.1136, 0.1581, 0.1855,  ..., 0.0826, 0.1417, 0.1682],
         [0.6981, 0.1526, 0.1855,  ..., 0.7522, 0.1417, 0.4957],
         [0.0941, 0.4229, 0.2993,  ..., 0.0826, 0.5748, 0.1959]],
        [[0.0753, 0.5123, 0.0904,  ..., 0.1478, 0.1271, 0.6214],
         [0.0753, 0.1285, 0.0904,  ..., 0.1478, 0.1271, 0.1148],
         [0.7742, 0.1285, 0.0904,  ..., 0.5319, 0.6153, 0.1148],
         [0.0753, 0.2306, 0.7287,  ..., 0.1726, 0.1305, 0.1489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1408, 0.2011, 0.1716,  ..., 0.7271, 0.1751, 0.1632],
         [0.1408, 0.1638, 0.1705,  ..., 0.0977, 0.1751, 0.1632],
         [0.5729, 0.1638, 0.1705,  ..., 0.0876, 0.1849, 0.1632],
         [0.1455, 0.4713, 0.4875,  ..., 0.0876, 0.4648, 0.5104]],
        [[0.1866, 0.1735, 0.1898,  ..., 0.1817, 0.0985, 0.1310],
         [0.1866, 0.1735, 0.1898,  ..., 0.1817, 0.0985, 0.1310],
         [0.2279, 0.3753, 0.1967,  ..., 0.2194, 0.7046, 0.6070],
         [0.3989, 0.2777, 0.4237,  ..., 0.4172, 0.0985, 0.1310]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1767, 0.4823, 0.3344,  ..., 0.1458, 0.1471, 0.1554],
         [0.1767, 0.1778, 0.1520,  ..., 0.1458, 0.1471, 0.1554],
         [0.2812, 0.1392, 0.1516,  ..., 0.5626, 0.2431, 0.5154],
         [0.3653, 0.2008, 0.3620,  ..., 0.1458, 0.4627, 0.1737]],
        [[0.0435, 0.1397, 0.1723,  ..., 0.0888, 0.1106, 0.7042],
         [0.0435, 0.1397, 0.1410,  ..., 0.0888, 0.1106, 0.1109],
         [0.8696, 0.1397, 0.1410,  ..., 0.7337, 0.6267, 0.0925],
         [0.0435, 0.5809, 0.5456,  ..., 0.0888, 0.1520, 0.0925]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:33,397 [Process: 0] Synchronize training processes
2024-08-18 19:45:33,398 [Process: 0] Evaluating...
2024-08-18 19:45:33,399 [Process: 0] EPOCH 39:
2024-08-18 19:45:33,401 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:34,484 [Process: 0] Synchronize training processes
2024-08-18 19:45:34,485 [Process: 0] Evaluating...
2024-08-18 19:45:34,486 [Process: 0] EPOCH 40:
2024-08-18 19:45:34,488 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1616, 0.1687, 0.1700,  ..., 0.1573, 0.1835, 0.1820],
         [0.1616, 0.1711, 0.1700,  ..., 0.1482, 0.1835, 0.1820],
         [0.4533, 0.1687, 0.1700,  ..., 0.1482, 0.1835, 0.1855],
         [0.2234, 0.4914, 0.4899,  ..., 0.5462, 0.4496, 0.4506]],
        [[0.1948, 0.1737, 0.2070,  ..., 0.1900, 0.1903, 0.1139],
         [0.1948, 0.1737, 0.1897,  ..., 0.1900, 0.1903, 0.1139],
         [0.2991, 0.1737, 0.1760,  ..., 0.1900, 0.2742, 0.6582],
         [0.3113, 0.4788, 0.4273,  ..., 0.4300, 0.3453, 0.1139]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1046, 0.7846, 0.1543,  ..., 0.0750, 0.1331, 0.1560],
         [0.1046, 0.0718, 0.1601,  ..., 0.0750, 0.1331, 0.1560],
         [0.6862, 0.0718, 0.1487,  ..., 0.7750, 0.1331, 0.4508],
         [0.1046, 0.0718, 0.5369,  ..., 0.0750, 0.6008, 0.2373]],
        [[0.1507, 0.1291, 0.1014,  ..., 0.1026, 0.0802, 0.6441],
         [0.0966, 0.1351, 0.1165,  ..., 0.1026, 0.0802, 0.1309],
         [0.6560, 0.1291, 0.1014,  ..., 0.6923, 0.7593, 0.1052],
         [0.0966, 0.6067, 0.6806,  ..., 0.1026, 0.0802, 0.1199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1710, 0.1645, 0.1768,  ..., 0.2146, 0.1831, 0.1614],
         [0.1710, 0.1791, 0.1768,  ..., 0.1894, 0.1831, 0.1614],
         [0.4145, 0.1645, 0.1768,  ..., 0.1698, 0.1831, 0.1614],
         [0.2434, 0.4919, 0.4695,  ..., 0.4262, 0.4506, 0.5158]],
        [[0.1820, 0.1791, 0.1823,  ..., 0.1044, 0.0453, 0.0648],
         [0.1820, 0.1791, 0.1935,  ..., 0.1044, 0.0445, 0.0648],
         [0.3601, 0.4315, 0.1823,  ..., 0.6867, 0.8658, 0.8057],
         [0.2759, 0.2103, 0.4419,  ..., 0.1044, 0.0445, 0.0648]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0857, 0.5236, 0.1420,  ..., 0.0872, 0.1568, 0.0821],
         [0.0857, 0.1419, 0.1420,  ..., 0.0872, 0.1640, 0.0821],
         [0.7429, 0.1296, 0.1420,  ..., 0.7383, 0.2324, 0.7536],
         [0.0857, 0.2049, 0.5739,  ..., 0.0872, 0.4468, 0.0821]],
        [[0.1538, 0.2975, 0.0675,  ..., 0.1061, 0.1093, 0.8013],
         [0.1118, 0.1662, 0.0675,  ..., 0.1061, 0.1093, 0.0819],
         [0.6226, 0.1452, 0.0675,  ..., 0.6816, 0.6721, 0.0584],
         [0.1118, 0.3911, 0.7974,  ..., 0.1061, 0.1093, 0.0584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:35,566 [Process: 0] Synchronize training processes
2024-08-18 19:45:35,566 [Process: 0] Evaluating...
2024-08-18 19:45:35,568 [Process: 0] EPOCH 41:
2024-08-18 19:45:35,570 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:36,677 [Process: 0] Synchronize training processes
2024-08-18 19:45:36,677 [Process: 0] Evaluating...
2024-08-18 19:45:36,684 [Process: 0] EPOCH 42:
2024-08-18 19:45:36,685 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1472, 0.1753, 0.1686,  ..., 0.1686, 0.1707, 0.1597],
         [0.1472, 0.1753, 0.1719,  ..., 0.1742, 0.1707, 0.1597],
         [0.5268, 0.1753, 0.1686,  ..., 0.1686, 0.1707, 0.1597],
         [0.1787, 0.4740, 0.4909,  ..., 0.4887, 0.4880, 0.5210]],
        [[0.1885, 0.1754, 0.1671,  ..., 0.1030, 0.0470, 0.0401],
         [0.1970, 0.1754, 0.1671,  ..., 0.1021, 0.0470, 0.0374],
         [0.2556, 0.1754, 0.1671,  ..., 0.6928, 0.8590, 0.8850],
         [0.3588, 0.4737, 0.4988,  ..., 0.1021, 0.0470, 0.0374]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0698, 0.1904, 0.1607,  ..., 0.0867, 0.1344, 0.1096],
         [0.0698, 0.2014, 0.1775,  ..., 0.0867, 0.1344, 0.1096],
         [0.7906, 0.2223, 0.1607,  ..., 0.7399, 0.5969, 0.6713],
         [0.0698, 0.3859, 0.5011,  ..., 0.0867, 0.1344, 0.1096]],
        [[0.0755, 0.1709, 0.0507,  ..., 0.0934, 0.0919, 0.7610],
         [0.0755, 0.1437, 0.0914,  ..., 0.0934, 0.0919, 0.1044],
         [0.7734, 0.1298, 0.0507,  ..., 0.7198, 0.7243, 0.0629],
         [0.0755, 0.5556, 0.8072,  ..., 0.0934, 0.0919, 0.0717]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1485, 0.1728, 0.1789,  ..., 0.1508, 0.1499, 0.1585],
         [0.1485, 0.1761, 0.1850,  ..., 0.1508, 0.1499, 0.1698],
         [0.5544, 0.1728, 0.1789,  ..., 0.1508, 0.1499, 0.1585],
         [0.1485, 0.4783, 0.4572,  ..., 0.5475, 0.5504, 0.5131]],
        [[0.1845, 0.1656, 0.1847,  ..., 0.1528, 0.0473, 0.0783],
         [0.1845, 0.1731, 0.1871,  ..., 0.1608, 0.0473, 0.0783],
         [0.1845, 0.1656, 0.2053,  ..., 0.1528, 0.8581, 0.7652],
         [0.4466, 0.4957, 0.4228,  ..., 0.5337, 0.0473, 0.0783]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:37,763 [Process: 0] Synchronize training processes
2024-08-18 19:45:37,763 [Process: 0] Evaluating...
2024-08-18 19:45:37,765 [Process: 0] EPOCH 43:
2024-08-18 19:45:37,767 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:38,844 [Process: 0] Synchronize training processes
2024-08-18 19:45:38,844 [Process: 0] Evaluating...
2024-08-18 19:45:38,846 [Process: 0] EPOCH 44:
2024-08-18 19:45:38,847 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0757, 0.1438, 0.1609,  ..., 0.1328, 0.1734, 0.1170],
         [0.0757, 0.1502, 0.1609,  ..., 0.1328, 0.1734, 0.1170],
         [0.7729, 0.1235, 0.1609,  ..., 0.6017, 0.3911, 0.6490],
         [0.0757, 0.5824, 0.5173,  ..., 0.1328, 0.2621, 0.1170]],
        [[0.0775, 0.0604, 0.1033,  ..., 0.1027, 0.1064, 0.2659],
         [0.0775, 0.0842, 0.1033,  ..., 0.1027, 0.1064, 0.1369],
         [0.7674, 0.0604, 0.6900,  ..., 0.6918, 0.6807, 0.0982],
         [0.0775, 0.7950, 0.1033,  ..., 0.1027, 0.1064, 0.4990]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1564, 0.1687, 0.1838,  ..., 0.3116, 0.1409, 0.3273],
         [0.1564, 0.1717, 0.1708,  ..., 0.1662, 0.1409, 0.1847],
         [0.5164, 0.1616, 0.1528,  ..., 0.1542, 0.1409, 0.1931],
         [0.1709, 0.4979, 0.4926,  ..., 0.3681, 0.5774, 0.2950]],
        [[0.1757, 0.1821, 0.1571,  ..., 0.3019, 0.0394, 0.0971],
         [0.1757, 0.1821, 0.1571,  ..., 0.1851, 0.0394, 0.0971],
         [0.4012, 0.2422, 0.1571,  ..., 0.1803, 0.8817, 0.7086],
         [0.2474, 0.3935, 0.5286,  ..., 0.3327, 0.0394, 0.0971]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1268, 0.1638, 0.1718,  ..., 0.0809, 0.1788, 0.0953],
         [0.1268, 0.1638, 0.1721,  ..., 0.0809, 0.1788, 0.0953],
         [0.6196, 0.2426, 0.1720,  ..., 0.7573, 0.4040, 0.7140],
         [0.1268, 0.4298, 0.4841,  ..., 0.0809, 0.2384, 0.0953]],
        [[0.0903, 0.1886, 0.0530,  ..., 0.0959, 0.0636, 0.7783],
         [0.0903, 0.1251, 0.0761,  ..., 0.0959, 0.0636, 0.0880],
         [0.7290, 0.1037, 0.0530,  ..., 0.7123, 0.8092, 0.0583],
         [0.0903, 0.5827, 0.8179,  ..., 0.0959, 0.0636, 0.0753]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1594, 0.2353, 0.1747,  ..., 0.6819, 0.1505, 0.3439],
         [0.1594, 0.1750, 0.1562,  ..., 0.1174, 0.1505, 0.1705],
         [0.4845, 0.1583, 0.1490,  ..., 0.1004, 0.1505, 0.1641],
         [0.1967, 0.4314, 0.5201,  ..., 0.1004, 0.5485, 0.3216]],
        [[0.1860, 0.1581, 0.1649,  ..., 0.5527, 0.0462, 0.0838],
         [0.1816, 0.1592, 0.1649,  ..., 0.1300, 0.0462, 0.0838],
         [0.3968, 0.1581, 0.1649,  ..., 0.1232, 0.8615, 0.7485],
         [0.2356, 0.5245, 0.5053,  ..., 0.1940, 0.0462, 0.0838]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:39,925 [Process: 0] Synchronize training processes
2024-08-18 19:45:39,925 [Process: 0] Evaluating...
2024-08-18 19:45:39,927 [Process: 0] EPOCH 45:
2024-08-18 19:45:39,928 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:41,010 [Process: 0] Synchronize training processes
2024-08-18 19:45:41,010 [Process: 0] Evaluating...
2024-08-18 19:45:41,012 [Process: 0] EPOCH 46:
2024-08-18 19:45:41,014 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1090, 0.1476, 0.1769,  ..., 0.0917, 0.1632, 0.0827],
         [0.1090, 0.1476, 0.1649,  ..., 0.0917, 0.1632, 0.0827],
         [0.6731, 0.5135, 0.1525,  ..., 0.7250, 0.5009, 0.7519],
         [0.1090, 0.1912, 0.5057,  ..., 0.0917, 0.1727, 0.0827]],
        [[0.1381, 0.0717, 0.8315,  ..., 0.1569, 0.0826, 0.7769],
         [0.1344, 0.0803, 0.0669,  ..., 0.1569, 0.0826, 0.0876],
         [0.5931, 0.0717, 0.0507,  ..., 0.5136, 0.7521, 0.0677],
         [0.1344, 0.7762, 0.0509,  ..., 0.1726, 0.0826, 0.0677]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1345, 0.1383, 0.1766,  ..., 0.6137, 0.1719, 0.2756],
         [0.1345, 0.1479, 0.1687,  ..., 0.1353, 0.1769, 0.1761],
         [0.5964, 0.1355, 0.1474,  ..., 0.1040, 0.1775, 0.1601],
         [0.1345, 0.5782, 0.5073,  ..., 0.1469, 0.4737, 0.3882]],
        [[0.1022, 0.1474, 0.1589,  ..., 0.1560, 0.0221, 0.0854],
         [0.1022, 0.1523, 0.1698,  ..., 0.1560, 0.0221, 0.0854],
         [0.6933, 0.1454, 0.1587,  ..., 0.1560, 0.9338, 0.7439],
         [0.1022, 0.5549, 0.5126,  ..., 0.5321, 0.0221, 0.0854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0848, 0.1979, 0.1909,  ..., 0.0842, 0.2088, 0.1026],
         [0.0848, 0.1811, 0.1517,  ..., 0.0842, 0.1938, 0.1026],
         [0.7455, 0.1540, 0.1403,  ..., 0.7473, 0.2980, 0.6922],
         [0.0848, 0.4669, 0.5171,  ..., 0.0842, 0.2994, 0.1026]],
        [[0.0670, 0.1621, 0.6252,  ..., 0.1166, 0.1127, 0.9047],
         [0.0506, 0.1419, 0.1204,  ..., 0.1166, 0.1127, 0.0376],
         [0.8318, 0.1149, 0.0916,  ..., 0.6503, 0.6618, 0.0288],
         [0.0506, 0.5810, 0.1629,  ..., 0.1166, 0.1127, 0.0288]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1173, 0.1634, 0.1589,  ..., 0.7144, 0.1979, 0.1439],
         [0.1173, 0.1652, 0.1607,  ..., 0.1035, 0.1892, 0.1439],
         [0.6480, 0.1737, 0.1589,  ..., 0.0911, 0.2389, 0.1439],
         [0.1173, 0.4976, 0.5215,  ..., 0.0911, 0.3740, 0.5684]],
        [[0.1718, 0.1622, 0.1703,  ..., 0.1329, 0.0848, 0.0669],
         [0.1788, 0.1715, 0.1703,  ..., 0.1365, 0.0848, 0.0669],
         [0.1718, 0.1622, 0.1728,  ..., 0.1329, 0.7456, 0.7994],
         [0.4777, 0.5040, 0.4867,  ..., 0.5976, 0.0848, 0.0669]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:42,092 [Process: 0] Synchronize training processes
2024-08-18 19:45:42,092 [Process: 0] Evaluating...
2024-08-18 19:45:42,094 [Process: 0] EPOCH 47:
2024-08-18 19:45:42,096 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:43,173 [Process: 0] Synchronize training processes
2024-08-18 19:45:43,173 [Process: 0] Evaluating...
2024-08-18 19:45:43,175 [Process: 0] EPOCH 48:
2024-08-18 19:45:43,177 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0641, 0.3071, 0.2301,  ..., 0.0833, 0.1798, 0.0568],
         [0.0641, 0.1891, 0.1662,  ..., 0.0833, 0.1798, 0.0568],
         [0.8077, 0.1477, 0.1434,  ..., 0.7500, 0.3895, 0.8296],
         [0.0641, 0.3561, 0.4603,  ..., 0.0833, 0.2509, 0.0568]],
        [[0.0336, 0.0702, 0.0830,  ..., 0.0796, 0.1019, 0.8769],
         [0.0336, 0.0997, 0.0940,  ..., 0.0796, 0.1019, 0.0411],
         [0.8991, 0.0526, 0.0797,  ..., 0.7613, 0.6942, 0.0410],
         [0.0336, 0.7775, 0.7433,  ..., 0.0796, 0.1019, 0.0410]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1283, 0.1243, 0.1215,  ..., 0.5820, 0.1599, 0.0993],
         [0.1283, 0.1344, 0.1348,  ..., 0.1410, 0.1599, 0.1040],
         [0.6151, 0.1243, 0.1212,  ..., 0.1385, 0.2763, 0.0993],
         [0.1283, 0.6170, 0.6225,  ..., 0.1385, 0.4039, 0.6975]],
        [[0.1763, 0.1520, 0.1817,  ..., 0.0907, 0.0978, 0.1583],
         [0.1763, 0.1552, 0.1804,  ..., 0.0974, 0.0978, 0.1583],
         [0.3745, 0.1606, 0.1658,  ..., 0.0907, 0.7066, 0.4136],
         [0.2729, 0.5322, 0.4721,  ..., 0.7213, 0.0978, 0.2698]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0939, 0.2556, 0.3094,  ..., 0.0425, 0.1755, 0.1103],
         [0.0939, 0.1971, 0.1879,  ..., 0.0425, 0.1755, 0.1103],
         [0.7183, 0.1526, 0.1530,  ..., 0.8725, 0.3764, 0.6690],
         [0.0939, 0.3947, 0.3496,  ..., 0.0425, 0.2726, 0.1103]],
        [[0.2239, 0.0624, 0.1651,  ..., 0.0960, 0.1043, 0.9048],
         [0.1904, 0.0846, 0.1709,  ..., 0.0960, 0.1043, 0.0401],
         [0.1904, 0.0624, 0.1208,  ..., 0.7120, 0.6687, 0.0275],
         [0.3952, 0.7907, 0.5432,  ..., 0.0960, 0.1226, 0.0275]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1510, 0.5136, 0.3067,  ..., 0.9458, 0.1260, 0.0913],
         [0.1510, 0.1561, 0.1911,  ..., 0.0181, 0.1268, 0.0918],
         [0.5300, 0.1348, 0.1629,  ..., 0.0181, 0.1260, 0.0913],
         [0.1680, 0.1955, 0.3393,  ..., 0.0181, 0.6211, 0.7256]],
        [[0.1596, 0.1544, 0.1728,  ..., 0.1034, 0.0805, 0.1499],
         [0.1596, 0.1632, 0.1728,  ..., 0.1074, 0.0805, 0.1499],
         [0.1596, 0.1544, 0.3386,  ..., 0.1034, 0.7586, 0.4924],
         [0.5212, 0.5281, 0.3158,  ..., 0.6857, 0.0805, 0.2078]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:44,256 [Process: 0] Synchronize training processes
2024-08-18 19:45:44,256 [Process: 0] Evaluating...
2024-08-18 19:45:44,258 [Process: 0] EPOCH 49:
2024-08-18 19:45:44,260 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:45,336 [Process: 0] Synchronize training processes
2024-08-18 19:45:45,337 [Process: 0] Evaluating...
2024-08-18 19:45:45,338 [Process: 0] EPOCH 50:
2024-08-18 19:45:45,340 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0896, 0.2756, 0.4103,  ..., 0.0678, 0.1878, 0.0559],
         [0.0896, 0.2079, 0.1844,  ..., 0.0678, 0.1856, 0.0559],
         [0.7312, 0.1486, 0.1442,  ..., 0.7967, 0.3147, 0.8322],
         [0.0896, 0.3679, 0.2611,  ..., 0.0678, 0.3119, 0.0559]],
        [[0.1182, 0.0449, 0.5910,  ..., 0.0949, 0.1526, 0.9023],
         [0.1182, 0.0499, 0.1397,  ..., 0.0949, 0.1526, 0.0326],
         [0.6455, 0.0449, 0.1059,  ..., 0.7153, 0.3555, 0.0326],
         [0.1182, 0.8603, 0.1635,  ..., 0.0949, 0.3393, 0.0326]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1433, 0.1537, 0.1686,  ..., 0.1387, 0.1671, 0.1731],
         [0.1426, 0.1537, 0.1686,  ..., 0.1387, 0.1671, 0.1731],
         [0.5714, 0.1537, 0.1686,  ..., 0.1387, 0.2729, 0.1937],
         [0.1426, 0.5389, 0.4943,  ..., 0.5840, 0.3930, 0.4601]],
        [[0.1796, 0.1391, 0.1408,  ..., 0.7440, 0.1023, 0.1608],
         [0.1796, 0.1406, 0.1408,  ..., 0.0853, 0.1023, 0.1711],
         [0.2725, 0.1391, 0.1408,  ..., 0.0853, 0.6931, 0.1608],
         [0.3683, 0.5812, 0.5775,  ..., 0.0853, 0.1023, 0.5073]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1089, 0.2597, 0.2918,  ..., 0.0328, 0.1798, 0.0521],
         [0.1089, 0.1793, 0.2000,  ..., 0.0328, 0.1798, 0.0521],
         [0.6733, 0.1603, 0.1519,  ..., 0.9016, 0.3704, 0.8437],
         [0.1089, 0.4006, 0.3563,  ..., 0.0328, 0.2700, 0.0521]],
        [[0.7587, 0.0535, 0.5917,  ..., 0.0492, 0.1227, 0.9076],
         [0.0726, 0.0535, 0.1482,  ..., 0.0492, 0.1227, 0.0387],
         [0.0961, 0.0535, 0.0995,  ..., 0.8523, 0.6269, 0.0269],
         [0.0726, 0.8395, 0.1606,  ..., 0.0492, 0.1278, 0.0269]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:46,419 [Process: 0] Synchronize training processes
2024-08-18 19:45:46,420 [Process: 0] Evaluating...
2024-08-18 19:45:46,422 [Process: 0] EPOCH 51:
2024-08-18 19:45:46,423 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1936, 0.1509, 0.1704,  ..., 0.1494, 0.1908, 0.1772],
         [0.1749, 0.1509, 0.1704,  ..., 0.1494, 0.1908, 0.1772],
         [0.4261, 0.1509, 0.1704,  ..., 0.1494, 0.2108, 0.1772],
         [0.2055, 0.5474, 0.4888,  ..., 0.5517, 0.4075, 0.4685]],
        [[0.1709, 0.1687, 0.1863,  ..., 0.1772, 0.0542, 0.0365],
         [0.1685, 0.1687, 0.1863,  ..., 0.1772, 0.0542, 0.0365],
         [0.1580, 0.1687, 0.1863,  ..., 0.3657, 0.8374, 0.8904],
         [0.5027, 0.4940, 0.4412,  ..., 0.2799, 0.0542, 0.0365]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1198, 0.3125, 0.1644,  ..., 0.0535, 0.1884, 0.0558],
         [0.1198, 0.1855, 0.1936,  ..., 0.0535, 0.1884, 0.0558],
         [0.6407, 0.1490, 0.1481,  ..., 0.8395, 0.2300, 0.8325],
         [0.1198, 0.3531, 0.4939,  ..., 0.0535, 0.3933, 0.0558]],
        [[0.6969, 0.1385, 0.1242,  ..., 0.0940, 0.0953, 0.9834],
         [0.0918, 0.1507, 0.1466,  ..., 0.0940, 0.0953, 0.0055],
         [0.1194, 0.1385, 0.1239,  ..., 0.7179, 0.7141, 0.0055],
         [0.0918, 0.5723, 0.6053,  ..., 0.0940, 0.0953, 0.0055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1842, 0.1609, 0.1532,  ..., 0.1710, 0.1870, 0.1703],
         [0.1792, 0.1609, 0.1532,  ..., 0.1737, 0.1806, 0.1703],
         [0.4008, 0.1609, 0.1532,  ..., 0.1701, 0.1803, 0.1719],
         [0.2358, 0.5173, 0.5403,  ..., 0.4852, 0.4521, 0.4874]],
        [[0.1807, 0.1675, 0.1677,  ..., 0.0962, 0.0342, 0.0280],
         [0.1732, 0.1675, 0.1677,  ..., 0.0962, 0.0342, 0.0280],
         [0.1732, 0.1675, 0.1950,  ..., 0.7113, 0.8974, 0.9159],
         [0.4729, 0.4974, 0.4696,  ..., 0.0962, 0.0342, 0.0280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0662, 0.1605, 0.1312,  ..., 0.0690, 0.1785, 0.0518],
         [0.0662, 0.1697, 0.1497,  ..., 0.0690, 0.1813, 0.0518],
         [0.8015, 0.1411, 0.1312,  ..., 0.7931, 0.1785, 0.8447],
         [0.0662, 0.5287, 0.5879,  ..., 0.0690, 0.4617, 0.0518]],
        [[0.0876, 0.1081, 0.2607,  ..., 0.0756, 0.1204, 0.9522],
         [0.0876, 0.1350, 0.1755,  ..., 0.0756, 0.1204, 0.0159],
         [0.7372, 0.1081, 0.1207,  ..., 0.7733, 0.6262, 0.0159],
         [0.0876, 0.6488, 0.4432,  ..., 0.0756, 0.1331, 0.0159]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:47,501 [Process: 0] Synchronize training processes
2024-08-18 19:45:47,501 [Process: 0] Evaluating...
2024-08-18 19:45:47,507 [Process: 0] EPOCH 52:
2024-08-18 19:45:47,509 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:48,587 [Process: 0] Synchronize training processes
2024-08-18 19:45:48,587 [Process: 0] Evaluating...
2024-08-18 19:45:48,589 [Process: 0] EPOCH 53:
2024-08-18 19:45:48,591 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1971, 0.2351, 0.1379,  ..., 0.1604, 0.2289, 0.1552],
         [0.1801, 0.1813, 0.1379,  ..., 0.1604, 0.1836, 0.1552],
         [0.2944, 0.1813, 0.1379,  ..., 0.1604, 0.2490, 0.1552],
         [0.3284, 0.4023, 0.5863,  ..., 0.5187, 0.3385, 0.5345]],
        [[0.1653, 0.2586, 0.1618,  ..., 0.1811, 0.0622, 0.0507],
         [0.1662, 0.1835, 0.1626,  ..., 0.1811, 0.0622, 0.0507],
         [0.1653, 0.1835, 0.1605,  ..., 0.1811, 0.8133, 0.8478],
         [0.5032, 0.3744, 0.5151,  ..., 0.4568, 0.0622, 0.0507]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0847, 0.1704, 0.2367,  ..., 0.0282, 0.2027, 0.0731],
         [0.0847, 0.2112, 0.1848,  ..., 0.0282, 0.2019, 0.0731],
         [0.7460, 0.1615, 0.1696,  ..., 0.9153, 0.2697, 0.7807],
         [0.0847, 0.4568, 0.4090,  ..., 0.0282, 0.3258, 0.0731]],
        [[0.4260, 0.0413, 0.3825,  ..., 0.1076, 0.1138, 0.9562],
         [0.1248, 0.0524, 0.1911,  ..., 0.1076, 0.1138, 0.0146],
         [0.3244, 0.0413, 0.1157,  ..., 0.6772, 0.6485, 0.0146],
         [0.1248, 0.8650, 0.3106,  ..., 0.1076, 0.1239, 0.0146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1811, 0.2031, 0.1828,  ..., 0.1362, 0.1884, 0.1101],
         [0.1811, 0.1795, 0.1602,  ..., 0.1578, 0.1884, 0.1171],
         [0.2347, 0.1814, 0.1583,  ..., 0.1317, 0.2405, 0.1101],
         [0.4030, 0.4359, 0.4986,  ..., 0.5743, 0.3827, 0.6627]],
        [[0.2076, 0.1502, 0.1414,  ..., 0.3510, 0.0724, 0.0759],
         [0.1793, 0.1518, 0.1551,  ..., 0.1570, 0.0724, 0.0759],
         [0.1793, 0.1502, 0.1414,  ..., 0.1273, 0.7827, 0.7723],
         [0.4337, 0.5478, 0.5621,  ..., 0.3646, 0.0724, 0.0759]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1509, 0.1468, 0.3163,  ..., 0.0626, 0.2079, 0.0677],
         [0.1509, 0.2426, 0.2003,  ..., 0.0626, 0.1769, 0.0677],
         [0.5278, 0.1066, 0.1396,  ..., 0.8123, 0.3995, 0.7969],
         [0.1704, 0.5040, 0.3437,  ..., 0.0626, 0.2157, 0.0677]],
        [[0.1126, 0.0788, 0.0957,  ..., 0.0755, 0.0791, 0.9048],
         [0.1126, 0.0996, 0.1495,  ..., 0.0755, 0.0791, 0.0317],
         [0.6560, 0.0788, 0.0957,  ..., 0.7734, 0.7628, 0.0317],
         [0.1189, 0.7427, 0.6591,  ..., 0.0755, 0.0791, 0.0317]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:49,667 [Process: 0] Synchronize training processes
2024-08-18 19:45:49,667 [Process: 0] Evaluating...
2024-08-18 19:45:49,669 [Process: 0] EPOCH 54:
2024-08-18 19:45:49,671 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:50,748 [Process: 0] Synchronize training processes
2024-08-18 19:45:50,748 [Process: 0] Evaluating...
2024-08-18 19:45:50,750 [Process: 0] EPOCH 55:
2024-08-18 19:45:50,752 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2034, 0.1693, 0.1467,  ..., 0.1464, 0.1904, 0.1884],
         [0.1828, 0.1639, 0.1530,  ..., 0.1507, 0.1765, 0.1816],
         [0.2567, 0.1639, 0.1467,  ..., 0.1464, 0.2544, 0.2413],
         [0.3572, 0.5029, 0.5535,  ..., 0.5566, 0.3787, 0.3887]],
        [[0.2177, 0.1554, 0.1846,  ..., 0.2478, 0.0294, 0.0782],
         [0.1648, 0.1554, 0.1659,  ..., 0.1514, 0.0294, 0.0782],
         [0.1648, 0.1554, 0.1659,  ..., 0.1411, 0.9118, 0.7653],
         [0.4528, 0.5338, 0.4837,  ..., 0.4597, 0.0294, 0.0782]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1140, 0.1452, 0.2208,  ..., 0.0380, 0.1817, 0.0563],
         [0.1140, 0.1959, 0.2224,  ..., 0.0380, 0.1447, 0.0563],
         [0.6581, 0.1197, 0.1317,  ..., 0.8859, 0.5290, 0.8311],
         [0.1140, 0.5392, 0.4251,  ..., 0.0380, 0.1447, 0.0563]],
        [[0.0603, 0.1958, 0.0709,  ..., 0.1063, 0.1091, 0.8480],
         [0.0603, 0.1748, 0.1045,  ..., 0.1063, 0.1091, 0.0507],
         [0.8192, 0.0928, 0.0547,  ..., 0.6386, 0.6728, 0.0507],
         [0.0603, 0.5366, 0.7698,  ..., 0.1488, 0.1091, 0.0507]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2117, 0.1853, 0.2059,  ..., 0.1569, 0.1496, 0.1994],
         [0.1773, 0.1621, 0.1504,  ..., 0.1544, 0.1496, 0.1609],
         [0.2223, 0.1621, 0.1456,  ..., 0.1544, 0.1496, 0.1419],
         [0.3887, 0.4905, 0.4981,  ..., 0.5343, 0.5513, 0.4978]],
        [[0.1466, 0.1730, 0.2120,  ..., 0.1761, 0.0465, 0.0869],
         [0.1426, 0.1566, 0.1584,  ..., 0.1579, 0.0465, 0.0869],
         [0.1426, 0.1432, 0.1518,  ..., 0.1456, 0.8604, 0.7394],
         [0.5682, 0.5272, 0.4778,  ..., 0.5203, 0.0465, 0.0869]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:51,831 [Process: 0] Synchronize training processes
2024-08-18 19:45:51,831 [Process: 0] Evaluating...
2024-08-18 19:45:51,833 [Process: 0] EPOCH 56:
2024-08-18 19:45:51,835 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:52,917 [Process: 0] Synchronize training processes
2024-08-18 19:45:52,917 [Process: 0] Evaluating...
2024-08-18 19:45:52,919 [Process: 0] EPOCH 57:
2024-08-18 19:45:52,921 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0750, 0.2122, 0.2094,  ..., 0.0683, 0.1552, 0.0669],
         [0.0750, 0.2178, 0.1777,  ..., 0.0683, 0.1552, 0.0669],
         [0.7750, 0.1269, 0.2834,  ..., 0.7952, 0.5029, 0.7992],
         [0.0750, 0.4430, 0.3295,  ..., 0.0683, 0.1866, 0.0669]],
        [[0.1146, 0.0743, 0.0475,  ..., 0.1074, 0.0682, 0.9168],
         [0.1146, 0.1169, 0.0475,  ..., 0.1074, 0.0682, 0.0277],
         [0.5439, 0.0743, 0.0475,  ..., 0.6540, 0.7954, 0.0277],
         [0.2269, 0.7345, 0.8576,  ..., 0.1312, 0.0682, 0.0277]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1991, 0.1969, 0.1516,  ..., 0.3033, 0.1710, 0.1409],
         [0.1730, 0.1327, 0.1516,  ..., 0.1652, 0.1710, 0.1409],
         [0.2586, 0.1327, 0.1516,  ..., 0.1741, 0.1930, 0.1409],
         [0.3693, 0.5378, 0.5451,  ..., 0.3574, 0.4649, 0.5772]],
        [[0.1868, 0.1585, 0.1360,  ..., 0.1197, 0.0273, 0.0962],
         [0.1665, 0.1585, 0.1360,  ..., 0.1197, 0.0273, 0.0962],
         [0.1822, 0.1637, 0.1360,  ..., 0.1197, 0.9182, 0.7113],
         [0.4645, 0.5192, 0.5919,  ..., 0.6408, 0.0273, 0.0962]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1049, 0.2179, 0.1932,  ..., 0.0840, 0.0995, 0.0771],
         [0.1049, 0.2320, 0.2032,  ..., 0.0840, 0.0995, 0.0771],
         [0.6835, 0.1219, 0.1550,  ..., 0.7479, 0.7014, 0.7686],
         [0.1067, 0.4283, 0.4486,  ..., 0.0840, 0.0995, 0.0771]],
        [[0.1448, 0.1005, 0.0541,  ..., 0.0609, 0.0697, 0.8532],
         [0.1448, 0.1258, 0.0547,  ..., 0.0609, 0.0697, 0.0734],
         [0.5176, 0.1005, 0.0541,  ..., 0.8173, 0.7910, 0.0367],
         [0.1928, 0.6732, 0.8370,  ..., 0.0609, 0.0697, 0.0367]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2139, 0.1189, 0.2043,  ..., 0.5907, 0.2523, 0.1137],
         [0.1718, 0.1189, 0.1385,  ..., 0.1294, 0.1733, 0.1137],
         [0.2436, 0.1189, 0.1286,  ..., 0.1138, 0.1696, 0.1137],
         [0.3707, 0.6434, 0.5286,  ..., 0.1661, 0.4049, 0.6590]],
        [[0.1997, 0.1429, 0.1184,  ..., 0.1172, 0.0210, 0.0734],
         [0.1745, 0.1429, 0.1184,  ..., 0.1098, 0.0210, 0.0734],
         [0.3852, 0.1429, 0.1184,  ..., 0.1041, 0.9371, 0.7798],
         [0.2406, 0.5714, 0.6447,  ..., 0.6689, 0.0210, 0.0734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:54,002 [Process: 0] Synchronize training processes
2024-08-18 19:45:54,003 [Process: 0] Evaluating...
2024-08-18 19:45:54,004 [Process: 0] EPOCH 58:
2024-08-18 19:45:54,006 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:55,083 [Process: 0] Synchronize training processes
2024-08-18 19:45:55,083 [Process: 0] Evaluating...
2024-08-18 19:45:55,085 [Process: 0] EPOCH 59:
2024-08-18 19:45:55,087 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0675, 0.1768, 0.1958,  ..., 0.0528, 0.1107, 0.0526],
         [0.0675, 0.2471, 0.1991,  ..., 0.0528, 0.1107, 0.0526],
         [0.7975, 0.1517, 0.1243,  ..., 0.8416, 0.6678, 0.8423],
         [0.0675, 0.4244, 0.4808,  ..., 0.0528, 0.1107, 0.0526]],
        [[0.1930, 0.1417, 0.0369,  ..., 0.0986, 0.0616, 0.8811],
         [0.1350, 0.1969, 0.0369,  ..., 0.0986, 0.0616, 0.0396],
         [0.5370, 0.1139, 0.0369,  ..., 0.6572, 0.8151, 0.0396],
         [0.1350, 0.5474, 0.8893,  ..., 0.1457, 0.0616, 0.0396]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1894, 0.1170, 0.1065,  ..., 0.9226, 0.1667, 0.0833],
         [0.1731, 0.1170, 0.1065,  ..., 0.0272, 0.1667, 0.0833],
         [0.2276, 0.1170, 0.1065,  ..., 0.0251, 0.2783, 0.0833],
         [0.4099, 0.6491, 0.6804,  ..., 0.0251, 0.3883, 0.7500]],
        [[0.1462, 0.1863, 0.0876,  ..., 0.0742, 0.0448, 0.0750],
         [0.1462, 0.1510, 0.0876,  ..., 0.0742, 0.0448, 0.0750],
         [0.5416, 0.1365, 0.0876,  ..., 0.0742, 0.8657, 0.7750],
         [0.1659, 0.5262, 0.7373,  ..., 0.7773, 0.0448, 0.0750]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1090, 0.0890, 0.1248,  ..., 0.0515, 0.3852, 0.0528],
         [0.1090, 0.1724, 0.1173,  ..., 0.0515, 0.2714, 0.0528],
         [0.6731, 0.0890, 0.1173,  ..., 0.8456, 0.1335, 0.8417],
         [0.1090, 0.6496, 0.6407,  ..., 0.0515, 0.2099, 0.0528]],
        [[0.1948, 0.0477, 0.0612,  ..., 0.0563, 0.0719, 0.8732],
         [0.1566, 0.0828, 0.1034,  ..., 0.0563, 0.0719, 0.0423],
         [0.4372, 0.0477, 0.0612,  ..., 0.8310, 0.7843, 0.0423],
         [0.2114, 0.8217, 0.7741,  ..., 0.0563, 0.0719, 0.0423]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1540, 0.1119, 0.1084,  ..., 0.8831, 0.1496, 0.1335],
         [0.1540, 0.1119, 0.1084,  ..., 0.0390, 0.1496, 0.1335],
         [0.2072, 0.1119, 0.1084,  ..., 0.0390, 0.1632, 0.1335],
         [0.4848, 0.6643, 0.6747,  ..., 0.0390, 0.5375, 0.5994]],
        [[0.1952, 0.1329, 0.0910,  ..., 0.0422, 0.0541, 0.0826],
         [0.1613, 0.1392, 0.0910,  ..., 0.0422, 0.0541, 0.0826],
         [0.4595, 0.1251, 0.0910,  ..., 0.0422, 0.8377, 0.7521],
         [0.1840, 0.6028, 0.7271,  ..., 0.8733, 0.0541, 0.0826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:56,169 [Process: 0] Synchronize training processes
2024-08-18 19:45:56,169 [Process: 0] Evaluating...
2024-08-18 19:45:56,171 [Process: 0] EPOCH 60:
2024-08-18 19:45:56,173 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:57,252 [Process: 0] Synchronize training processes
2024-08-18 19:45:57,252 [Process: 0] Evaluating...
2024-08-18 19:45:57,254 [Process: 0] EPOCH 61:
2024-08-18 19:45:57,256 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1739, 0.2459, 0.1222,  ..., 0.0468, 0.1223, 0.0737],
         [0.1578, 0.2939, 0.1222,  ..., 0.0468, 0.1223, 0.0737],
         [0.4472, 0.1356, 0.1222,  ..., 0.8595, 0.1855, 0.7788],
         [0.2211, 0.3246, 0.6334,  ..., 0.0468, 0.5699, 0.0737]],
        [[0.2289, 0.0952, 0.0468,  ..., 0.0544, 0.0744, 0.9206],
         [0.1654, 0.1661, 0.0500,  ..., 0.0544, 0.0744, 0.0265],
         [0.4101, 0.0952, 0.0468,  ..., 0.8368, 0.7769, 0.0265],
         [0.1956, 0.6435, 0.8564,  ..., 0.0544, 0.0744, 0.0265]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1731, 0.1487, 0.1225,  ..., 0.9277, 0.1567, 0.1594],
         [0.1731, 0.1831, 0.1225,  ..., 0.0241, 0.1567, 0.1594],
         [0.3367, 0.1487, 0.1225,  ..., 0.0241, 0.2045, 0.1811],
         [0.3171, 0.5196, 0.6324,  ..., 0.0241, 0.4822, 0.5002]],
        [[0.1753, 0.1278, 0.1823,  ..., 0.0498, 0.0836, 0.0802],
         [0.1629, 0.1493, 0.1781,  ..., 0.0498, 0.0836, 0.0802],
         [0.4734, 0.1189, 0.1442,  ..., 0.0498, 0.7493, 0.7595],
         [0.1885, 0.6040, 0.4954,  ..., 0.8507, 0.0836, 0.0802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1360, 0.3251, 0.1144,  ..., 0.0471, 0.1668, 0.0669],
         [0.0976, 0.3289, 0.1925,  ..., 0.0471, 0.1668, 0.0669],
         [0.6687, 0.1148, 0.1144,  ..., 0.8586, 0.1885, 0.7992],
         [0.0976, 0.2312, 0.5787,  ..., 0.0471, 0.4780, 0.0669]],
        [[0.1532, 0.0280, 0.0476,  ..., 0.0643, 0.0599, 0.9426],
         [0.1154, 0.0280, 0.0476,  ..., 0.0643, 0.0599, 0.0191],
         [0.6058, 0.0280, 0.0476,  ..., 0.8070, 0.8203, 0.0191],
         [0.1257, 0.9159, 0.8573,  ..., 0.0643, 0.0599, 0.0191]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2627, 0.0952, 0.1275,  ..., 0.8016, 0.2098, 0.1279],
         [0.1826, 0.0952, 0.1275,  ..., 0.0701, 0.1792, 0.1279],
         [0.3648, 0.0952, 0.1454,  ..., 0.0641, 0.2818, 0.1279],
         [0.1899, 0.7143, 0.5995,  ..., 0.0641, 0.3292, 0.6163]],
        [[0.1826, 0.1298, 0.1121,  ..., 0.1208, 0.1083, 0.1143],
         [0.1728, 0.1298, 0.1121,  ..., 0.1208, 0.1083, 0.1033],
         [0.3107, 0.1298, 0.1121,  ..., 0.1208, 0.6715, 0.6791],
         [0.3339, 0.6105, 0.6636,  ..., 0.6375, 0.1118, 0.1033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:45:58,333 [Process: 0] Synchronize training processes
2024-08-18 19:45:58,334 [Process: 0] Evaluating...
2024-08-18 19:45:58,340 [Process: 0] EPOCH 62:
2024-08-18 19:45:58,342 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1062, 0.3341, 0.1271,  ..., 0.0730, 0.1742, 0.0457],
         [0.0895, 0.3020, 0.1271,  ..., 0.0749, 0.1742, 0.0444],
         [0.7148, 0.1311, 0.1271,  ..., 0.7791, 0.1742, 0.8654],
         [0.0895, 0.2329, 0.6187,  ..., 0.0730, 0.4773, 0.0444]],
        [[0.1082, 0.1134, 0.0193,  ..., 0.0541, 0.0436, 0.9265],
         [0.0921, 0.1134, 0.0193,  ..., 0.0541, 0.0401, 0.0245],
         [0.7076, 0.1134, 0.0193,  ..., 0.8377, 0.8761, 0.0245],
         [0.0921, 0.6598, 0.9421,  ..., 0.0541, 0.0401, 0.0245]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2918, 0.1218, 0.0922,  ..., 0.8288, 0.1610, 0.1042],
         [0.1832, 0.1218, 0.1007,  ..., 0.0656, 0.1610, 0.1042],
         [0.3508, 0.1218, 0.0922,  ..., 0.0528, 0.2968, 0.1042],
         [0.1742, 0.6346, 0.7149,  ..., 0.0528, 0.3812, 0.6874]],
        [[0.2092, 0.1537, 0.1192,  ..., 0.0634, 0.0412, 0.0363],
         [0.1854, 0.1537, 0.1192,  ..., 0.0634, 0.0532, 0.0313],
         [0.2865, 0.1537, 0.1192,  ..., 0.0634, 0.8645, 0.9011],
         [0.3189, 0.5389, 0.6424,  ..., 0.8099, 0.0412, 0.0313]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1008, 0.3351, 0.0911,  ..., 0.0239, 0.1669, 0.0670],
         [0.0959, 0.3737, 0.1134,  ..., 0.0239, 0.1669, 0.0602],
         [0.7075, 0.1015, 0.0911,  ..., 0.9282, 0.1669, 0.8127],
         [0.0959, 0.1898, 0.7045,  ..., 0.0239, 0.4993, 0.0602]],
        [[0.0802, 0.0187, 0.0207,  ..., 0.0584, 0.0956, 0.9455],
         [0.0802, 0.0187, 0.0207,  ..., 0.0690, 0.0985, 0.0182],
         [0.7518, 0.0187, 0.0207,  ..., 0.8235, 0.7123, 0.0182],
         [0.0878, 0.9439, 0.9380,  ..., 0.0491, 0.0936, 0.0182]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:45:59,421 [Process: 0] Synchronize training processes
2024-08-18 19:45:59,421 [Process: 0] Evaluating...
2024-08-18 19:45:59,423 [Process: 0] EPOCH 63:
2024-08-18 19:45:59,425 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:00,504 [Process: 0] Synchronize training processes
2024-08-18 19:46:00,504 [Process: 0] Evaluating...
2024-08-18 19:46:00,506 [Process: 0] EPOCH 64:
2024-08-18 19:46:00,507 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3006, 0.1131, 0.0994,  ..., 0.9200, 0.2362, 0.0931],
         [0.1674, 0.1449, 0.0994,  ..., 0.0275, 0.1524, 0.0931],
         [0.3650, 0.1131, 0.0994,  ..., 0.0263, 0.4219, 0.0931],
         [0.1670, 0.6289, 0.7017,  ..., 0.0263, 0.1895, 0.7208]],
        [[0.0678, 0.2475, 0.0871,  ..., 0.0597, 0.1867, 0.0340],
         [0.0678, 0.2033, 0.0871,  ..., 0.0761, 0.1412, 0.0340],
         [0.7966, 0.1634, 0.0871,  ..., 0.0597, 0.5372, 0.8979],
         [0.0678, 0.3858, 0.7387,  ..., 0.8045, 0.1349, 0.0340]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0346, 0.2819, 0.0708,  ..., 0.0796, 0.1913, 0.0302],
         [0.0346, 0.3831, 0.0994,  ..., 0.0721, 0.1799, 0.0302],
         [0.8962, 0.1003, 0.0708,  ..., 0.7762, 0.1960, 0.9093],
         [0.0346, 0.2346, 0.7591,  ..., 0.0721, 0.4328, 0.0302]],
        [[0.0481, 0.0434, 0.0169,  ..., 0.0442, 0.1137, 0.9568],
         [0.0481, 0.1183, 0.0203,  ..., 0.0442, 0.1137, 0.0150],
         [0.8346, 0.0434, 0.0169,  ..., 0.8673, 0.6493, 0.0141],
         [0.0692, 0.7949, 0.9458,  ..., 0.0442, 0.1233, 0.0141]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3149, 0.0509, 0.0895,  ..., 0.9019, 0.1916, 0.0920],
         [0.1606, 0.0509, 0.1077,  ..., 0.0327, 0.1881, 0.0920],
         [0.3610, 0.0509, 0.0895,  ..., 0.0327, 0.1628, 0.0920],
         [0.1635, 0.8473, 0.7133,  ..., 0.0327, 0.4575, 0.7239]],
        [[0.3171, 0.3079, 0.2018,  ..., 0.1559, 0.0374, 0.0248],
         [0.1938, 0.1680, 0.1588,  ..., 0.1559, 0.0374, 0.0248],
         [0.2742, 0.3063, 0.1588,  ..., 0.3686, 0.8877, 0.9257],
         [0.2149, 0.2178, 0.4806,  ..., 0.3197, 0.0374, 0.0248]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0889, 0.6070, 0.0427,  ..., 0.0284, 0.3027, 0.0383],
         [0.0732, 0.2150, 0.0427,  ..., 0.0284, 0.2147, 0.0383],
         [0.7647, 0.0814, 0.0427,  ..., 0.9149, 0.2408, 0.8851],
         [0.0732, 0.0965, 0.8720,  ..., 0.0284, 0.2418, 0.0383]],
        [[0.0581, 0.0236, 0.0210,  ..., 0.0600, 0.0591, 0.9645],
         [0.0581, 0.0275, 0.0210,  ..., 0.0600, 0.0591, 0.0118],
         [0.8051, 0.0236, 0.0210,  ..., 0.8199, 0.8227, 0.0118],
         [0.0786, 0.9253, 0.9371,  ..., 0.0600, 0.0591, 0.0118]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:01,585 [Process: 0] Synchronize training processes
2024-08-18 19:46:01,585 [Process: 0] Evaluating...
2024-08-18 19:46:01,587 [Process: 0] EPOCH 65:
2024-08-18 19:46:01,588 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:02,658 [Process: 0] Synchronize training processes
2024-08-18 19:46:02,658 [Process: 0] Evaluating...
2024-08-18 19:46:02,660 [Process: 0] EPOCH 66:
2024-08-18 19:46:02,661 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3546, 0.1165, 0.1271,  ..., 0.8563, 0.2417, 0.0974],
         [0.1728, 0.1165, 0.1271,  ..., 0.0564, 0.1797, 0.1014],
         [0.3188, 0.1165, 0.1293,  ..., 0.0437, 0.2151, 0.0974],
         [0.1538, 0.6505, 0.6164,  ..., 0.0437, 0.3636, 0.7039]],
        [[0.3106, 0.3767, 0.2546,  ..., 0.1711, 0.0212, 0.0221],
         [0.1761, 0.1723, 0.1818,  ..., 0.1711, 0.0212, 0.0221],
         [0.2714, 0.2920, 0.1894,  ..., 0.2433, 0.9363, 0.9338],
         [0.2420, 0.1589, 0.3742,  ..., 0.4145, 0.0212, 0.0221]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1807, 0.1162, 0.0955,  ..., 0.0316, 0.3273, 0.0447],
         [0.1275, 0.2222, 0.0955,  ..., 0.0316, 0.2151, 0.0447],
         [0.5643, 0.0832, 0.0955,  ..., 0.9053, 0.3017, 0.8658],
         [0.1275, 0.5785, 0.7134,  ..., 0.0316, 0.1559, 0.0447]],
        [[0.0563, 0.0491, 0.0186,  ..., 0.0647, 0.0606, 0.9462],
         [0.0563, 0.2642, 0.0186,  ..., 0.0647, 0.0606, 0.0179],
         [0.8311, 0.0491, 0.0186,  ..., 0.8059, 0.8181, 0.0179],
         [0.0563, 0.6375, 0.9443,  ..., 0.0647, 0.0606, 0.0179]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3495, 0.0556, 0.0659,  ..., 0.8303, 0.2892, 0.0784],
         [0.1745, 0.0556, 0.0687,  ..., 0.0647, 0.1868, 0.0784],
         [0.2728, 0.0556, 0.0659,  ..., 0.0525, 0.2018, 0.0784],
         [0.2031, 0.8333, 0.7995,  ..., 0.0525, 0.3222, 0.7648]],
        [[0.2132, 0.0811, 0.1000,  ..., 0.1467, 0.0182, 0.0739],
         [0.1652, 0.0811, 0.1000,  ..., 0.1464, 0.0182, 0.0739],
         [0.2418, 0.0811, 0.1000,  ..., 0.1186, 0.9453, 0.7783],
         [0.3798, 0.7567, 0.6999,  ..., 0.5882, 0.0182, 0.0739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1008, 0.1021, 0.0915,  ..., 0.0337, 0.3120, 0.0377],
         [0.0905, 0.2339, 0.0915,  ..., 0.0340, 0.1763, 0.0377],
         [0.7181, 0.1021, 0.0915,  ..., 0.8986, 0.2960, 0.8870],
         [0.0905, 0.5620, 0.7254,  ..., 0.0337, 0.2157, 0.0377]],
        [[0.0732, 0.3399, 0.0371,  ..., 0.1075, 0.0793, 0.9481],
         [0.0732, 0.4083, 0.0376,  ..., 0.1075, 0.0749, 0.0223],
         [0.7511, 0.0841, 0.0371,  ..., 0.6661, 0.7710, 0.0148],
         [0.1025, 0.1678, 0.8883,  ..., 0.1189, 0.0749, 0.0148]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:03,740 [Process: 0] Synchronize training processes
2024-08-18 19:46:03,740 [Process: 0] Evaluating...
2024-08-18 19:46:03,742 [Process: 0] EPOCH 67:
2024-08-18 19:46:03,744 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:04,825 [Process: 0] Synchronize training processes
2024-08-18 19:46:04,825 [Process: 0] Evaluating...
2024-08-18 19:46:04,827 [Process: 0] EPOCH 68:
2024-08-18 19:46:04,829 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3564, 0.0479, 0.0578,  ..., 0.9163, 0.2667, 0.0706],
         [0.1598, 0.0479, 0.0578,  ..., 0.0340, 0.1855, 0.0706],
         [0.2704, 0.0479, 0.0578,  ..., 0.0248, 0.2499, 0.0706],
         [0.2134, 0.8564, 0.8265,  ..., 0.0248, 0.2979, 0.7883]],
        [[0.2181, 0.1003, 0.0590,  ..., 0.0508, 0.0375, 0.0461],
         [0.1573, 0.1003, 0.0590,  ..., 0.0508, 0.0375, 0.0461],
         [0.2443, 0.1003, 0.0590,  ..., 0.0508, 0.8876, 0.8616],
         [0.3804, 0.6992, 0.8230,  ..., 0.8477, 0.0375, 0.0461]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1139, 0.1648, 0.0744,  ..., 0.0300, 0.3277, 0.0441],
         [0.0965, 0.2887, 0.0744,  ..., 0.0300, 0.1688, 0.0441],
         [0.6931, 0.1106, 0.0744,  ..., 0.9099, 0.3348, 0.8678],
         [0.0965, 0.4359, 0.7769,  ..., 0.0300, 0.1688, 0.0441]],
        [[0.0283, 0.0513, 0.0095,  ..., 0.0502, 0.1242, 0.8828],
         [0.0283, 0.2179, 0.0255,  ..., 0.0502, 0.1242, 0.0391],
         [0.9151, 0.0455, 0.0095,  ..., 0.8495, 0.3385, 0.0391],
         [0.0283, 0.6853, 0.9555,  ..., 0.0502, 0.4131, 0.0391]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2104, 0.1748, 0.1591,  ..., 0.8864, 0.3016, 0.1319],
         [0.1384, 0.1534, 0.1162,  ..., 0.0379, 0.1612, 0.1319],
         [0.5225, 0.1282, 0.1162,  ..., 0.0379, 0.3673, 0.1319],
         [0.1287, 0.5435, 0.6084,  ..., 0.0379, 0.1699, 0.6042]],
        [[0.1781, 0.0594, 0.1331,  ..., 0.0842, 0.0816, 0.1833],
         [0.1244, 0.0594, 0.1384,  ..., 0.0842, 0.0839, 0.1560],
         [0.5732, 0.0594, 0.1331,  ..., 0.0842, 0.7530, 0.4481],
         [0.1244, 0.8217, 0.5954,  ..., 0.7473, 0.0816, 0.2126]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:46:05,908 [Process: 0] Synchronize training processes
2024-08-18 19:46:05,908 [Process: 0] Evaluating...
2024-08-18 19:46:05,910 [Process: 0] EPOCH 69:
2024-08-18 19:46:05,911 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:06,987 [Process: 0] Synchronize training processes
2024-08-18 19:46:06,988 [Process: 0] Evaluating...
2024-08-18 19:46:06,990 [Process: 0] EPOCH 70:
2024-08-18 19:46:06,992 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1097, 0.1452, 0.0415,  ..., 0.0570, 0.4074, 0.0291],
         [0.1059, 0.3445, 0.0415,  ..., 0.0570, 0.1839, 0.0291],
         [0.6786, 0.0732, 0.0415,  ..., 0.8289, 0.2213, 0.9127],
         [0.1059, 0.4370, 0.8756,  ..., 0.0570, 0.1874, 0.0291]],
        [[0.0527, 0.0281, 0.0259,  ..., 0.0614, 0.0756, 0.9530],
         [0.0527, 0.0396, 0.0259,  ..., 0.0614, 0.0756, 0.0157],
         [0.8364, 0.0281, 0.0259,  ..., 0.8157, 0.7732, 0.0157],
         [0.0583, 0.9043, 0.9224,  ..., 0.0614, 0.0756, 0.0157]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3472, 0.0791, 0.1681,  ..., 0.7086, 0.3500, 0.0770],
         [0.1633, 0.0797, 0.1357,  ..., 0.1236, 0.1677, 0.0770],
         [0.3429, 0.0791, 0.1405,  ..., 0.0839, 0.3294, 0.0770],
         [0.1466, 0.7621, 0.5557,  ..., 0.0839, 0.1529, 0.7690]],
        [[0.3711, 0.0896, 0.0872,  ..., 0.0731, 0.0359, 0.0275],
         [0.1875, 0.0896, 0.0872,  ..., 0.0731, 0.0398, 0.0275],
         [0.2390, 0.0896, 0.0872,  ..., 0.0731, 0.8885, 0.9175],
         [0.2024, 0.7312, 0.7385,  ..., 0.7807, 0.0359, 0.0275]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0961, 0.0818, 0.0224,  ..., 0.0251, 0.3134, 0.0482],
         [0.0925, 0.1612, 0.0224,  ..., 0.0251, 0.1782, 0.0482],
         [0.7189, 0.0699, 0.0224,  ..., 0.9246, 0.3229, 0.8554],
         [0.0925, 0.6872, 0.9327,  ..., 0.0251, 0.1854, 0.0482]],
        [[0.0806, 0.0443, 0.0152,  ..., 0.0472, 0.0612, 0.9713],
         [0.0701, 0.0451, 0.0275,  ..., 0.0472, 0.0612, 0.0096],
         [0.7793, 0.0443, 0.0152,  ..., 0.8583, 0.8164, 0.0096],
         [0.0701, 0.8662, 0.9422,  ..., 0.0472, 0.0612, 0.0096]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3532, 0.1265, 0.0859,  ..., 0.8145, 0.4085, 0.0627],
         [0.1558, 0.1265, 0.0859,  ..., 0.0697, 0.1566, 0.0627],
         [0.3556, 0.1265, 0.0859,  ..., 0.0582, 0.2783, 0.0627],
         [0.1353, 0.6205, 0.7423,  ..., 0.0576, 0.1566, 0.8120]],
        [[0.3738, 0.0686, 0.0938,  ..., 0.0913, 0.0577, 0.1259],
         [0.1735, 0.0686, 0.0938,  ..., 0.0913, 0.0632, 0.1000],
         [0.2540, 0.0686, 0.0938,  ..., 0.0913, 0.8214, 0.6741],
         [0.1987, 0.7942, 0.7187,  ..., 0.7261, 0.0577, 0.1000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:08,071 [Process: 0] Synchronize training processes
2024-08-18 19:46:08,071 [Process: 0] Evaluating...
2024-08-18 19:46:08,073 [Process: 0] EPOCH 71:
2024-08-18 19:46:08,075 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:09,156 [Process: 0] Synchronize training processes
2024-08-18 19:46:09,156 [Process: 0] Evaluating...
2024-08-18 19:46:09,163 [Process: 0] EPOCH 72:
2024-08-18 19:46:09,165 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0753, 0.0600, 0.0617,  ..., 0.0452, 0.3165, 0.0688],
         [0.0645, 0.0911, 0.0744,  ..., 0.0452, 0.1729, 0.0688],
         [0.7956, 0.0600, 0.0617,  ..., 0.8573, 0.2872, 0.7603],
         [0.0645, 0.7889, 0.8022,  ..., 0.0523, 0.2233, 0.1021]],
        [[0.1244, 0.0082, 0.0528,  ..., 0.0621, 0.0473, 0.9588],
         [0.0746, 0.0082, 0.0528,  ..., 0.0621, 0.0473, 0.0141],
         [0.7264, 0.0082, 0.0528,  ..., 0.8137, 0.8582, 0.0136],
         [0.0746, 0.9754, 0.8416,  ..., 0.0621, 0.0473, 0.0136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3375, 0.0296, 0.0554,  ..., 0.9179, 0.3482, 0.0753],
         [0.1321, 0.0296, 0.0554,  ..., 0.0316, 0.1613, 0.0753],
         [0.4066, 0.0296, 0.0554,  ..., 0.0253, 0.3457, 0.0753],
         [0.1238, 0.9112, 0.8337,  ..., 0.0253, 0.1448, 0.7740]],
        [[0.2865, 0.1553, 0.1355,  ..., 0.0657, 0.0077, 0.1625],
         [0.1419, 0.1260, 0.1239,  ..., 0.0657, 0.0080, 0.1197],
         [0.4297, 0.1260, 0.1239,  ..., 0.0657, 0.9765, 0.5982],
         [0.1419, 0.5927, 0.6166,  ..., 0.8030, 0.0077, 0.1197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0508, 0.0664, 0.0458,  ..., 0.0211, 0.2072, 0.0599],
         [0.0508, 0.0732, 0.0458,  ..., 0.0211, 0.1340, 0.0599],
         [0.8477, 0.0664, 0.0458,  ..., 0.9367, 0.5248, 0.8020],
         [0.0508, 0.7940, 0.8627,  ..., 0.0211, 0.1340, 0.0781]],
        [[0.1716, 0.0682, 0.1133,  ..., 0.0489, 0.0406, 0.9716],
         [0.0800, 0.1012, 0.1133,  ..., 0.0489, 0.0406, 0.0095],
         [0.6684, 0.0682, 0.1140,  ..., 0.8532, 0.8781, 0.0095],
         [0.0800, 0.7624, 0.6594,  ..., 0.0489, 0.0406, 0.0095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2570, 0.1020, 0.1006,  ..., 0.9196, 0.3749, 0.1155],
         [0.1613, 0.1020, 0.1006,  ..., 0.0329, 0.1670, 0.1155],
         [0.4499, 0.1020, 0.1204,  ..., 0.0237, 0.3070, 0.1155],
         [0.1319, 0.6940, 0.6784,  ..., 0.0237, 0.1511, 0.6535]],
        [[0.2087, 0.0877, 0.1272,  ..., 0.0823, 0.0076, 0.1424],
         [0.1463, 0.0877, 0.1272,  ..., 0.0823, 0.0076, 0.1358],
         [0.5286, 0.0877, 0.1272,  ..., 0.0823, 0.9772, 0.5728],
         [0.1164, 0.7370, 0.6185,  ..., 0.7532, 0.0076, 0.1489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:10,243 [Process: 0] Synchronize training processes
2024-08-18 19:46:10,243 [Process: 0] Evaluating...
2024-08-18 19:46:10,245 [Process: 0] EPOCH 73:
2024-08-18 19:46:10,247 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:11,279 [Process: 0] Synchronize training processes
2024-08-18 19:46:11,279 [Process: 0] Evaluating...
2024-08-18 19:46:11,281 [Process: 0] EPOCH 74:
2024-08-18 19:46:11,283 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1117, 0.1023, 0.1033,  ..., 0.0420, 0.3136, 0.0593],
         [0.0813, 0.1023, 0.1071,  ..., 0.0497, 0.1293, 0.0593],
         [0.7256, 0.1023, 0.1033,  ..., 0.8664, 0.4297, 0.8172],
         [0.0813, 0.6931, 0.6863,  ..., 0.0420, 0.1274, 0.0641]],
        [[0.1239, 0.0234, 0.0138,  ..., 0.0490, 0.0514, 0.9626],
         [0.0715, 0.0234, 0.0154,  ..., 0.0490, 0.0514, 0.0183],
         [0.7332, 0.0234, 0.0138,  ..., 0.8436, 0.8458, 0.0095],
         [0.0715, 0.9298, 0.9571,  ..., 0.0583, 0.0514, 0.0095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3629, 0.0619, 0.0928,  ..., 0.9133, 0.3747, 0.0714],
         [0.1604, 0.0619, 0.0928,  ..., 0.0301, 0.1845, 0.0950],
         [0.3441, 0.0619, 0.0928,  ..., 0.0283, 0.2972, 0.0714],
         [0.1327, 0.8143, 0.7217,  ..., 0.0283, 0.1436, 0.7621]],
        [[0.1962, 0.1344, 0.1373,  ..., 0.0548, 0.0175, 0.0988],
         [0.1359, 0.1344, 0.1373,  ..., 0.0548, 0.0175, 0.0988],
         [0.5586, 0.1683, 0.1418,  ..., 0.0548, 0.9475, 0.7035],
         [0.1093, 0.5629, 0.5836,  ..., 0.8356, 0.0175, 0.0988]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1228, 0.0382, 0.0301,  ..., 0.0523, 0.2152, 0.0449],
         [0.0860, 0.0382, 0.0301,  ..., 0.0523, 0.1400, 0.0449],
         [0.7052, 0.0382, 0.0301,  ..., 0.8430, 0.4826, 0.8653],
         [0.0860, 0.8855, 0.9098,  ..., 0.0523, 0.1622, 0.0449]],
        [[0.0714, 0.0436, 0.0225,  ..., 0.0311, 0.0404, 0.9703],
         [0.0568, 0.1865, 0.0367,  ..., 0.0311, 0.0404, 0.0099],
         [0.8150, 0.0436, 0.0225,  ..., 0.9068, 0.8787, 0.0099],
         [0.0568, 0.7264, 0.9183,  ..., 0.0311, 0.0404, 0.0099]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4204, 0.0314, 0.0471,  ..., 0.9234, 0.3312, 0.0591],
         [0.1724, 0.0314, 0.0471,  ..., 0.0255, 0.2017, 0.0591],
         [0.2639, 0.0314, 0.0471,  ..., 0.0255, 0.3202, 0.0591],
         [0.1433, 0.9057, 0.8587,  ..., 0.0255, 0.1469, 0.8228]],
        [[0.1251, 0.0811, 0.0659,  ..., 0.0906, 0.0207, 0.0477],
         [0.0891, 0.0811, 0.0659,  ..., 0.0906, 0.0207, 0.0477],
         [0.6967, 0.0811, 0.0659,  ..., 0.0906, 0.9380, 0.8570],
         [0.0891, 0.7567, 0.8022,  ..., 0.7282, 0.0207, 0.0477]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:12,362 [Process: 0] Synchronize training processes
2024-08-18 19:46:12,362 [Process: 0] Evaluating...
2024-08-18 19:46:12,364 [Process: 0] EPOCH 75:
2024-08-18 19:46:12,366 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1628, 0.0742, 0.0773,  ..., 0.0375, 0.3199, 0.0278],
         [0.1103, 0.0742, 0.0773,  ..., 0.0375, 0.1629, 0.0278],
         [0.6167, 0.0742, 0.0773,  ..., 0.8876, 0.3504, 0.9165],
         [0.1103, 0.7775, 0.7681,  ..., 0.0375, 0.1668, 0.0278]],
        [[0.1003, 0.0109, 0.0125,  ..., 0.0559, 0.0432, 0.9660],
         [0.0789, 0.0123, 0.0125,  ..., 0.0559, 0.0432, 0.0113],
         [0.7418, 0.0109, 0.0125,  ..., 0.8324, 0.8703, 0.0113],
         [0.0789, 0.9660, 0.9626,  ..., 0.0559, 0.0432, 0.0113]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4734, 0.0376, 0.0306,  ..., 0.8885, 0.4129, 0.0759],
         [0.2510, 0.0376, 0.0306,  ..., 0.0399, 0.2254, 0.0782],
         [0.1385, 0.0376, 0.0306,  ..., 0.0358, 0.2010, 0.0759],
         [0.1371, 0.8873, 0.9082,  ..., 0.0358, 0.1606, 0.7700]],
        [[0.2591, 0.0476, 0.0474,  ..., 0.0401, 0.0175, 0.0309],
         [0.1690, 0.0476, 0.0474,  ..., 0.0401, 0.0175, 0.0309],
         [0.4456, 0.0476, 0.0474,  ..., 0.0401, 0.9474, 0.9072],
         [0.1263, 0.8571, 0.8578,  ..., 0.8796, 0.0175, 0.0309]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1567, 0.0606, 0.0548,  ..., 0.0495, 0.1976, 0.0412],
         [0.1076, 0.0606, 0.1299,  ..., 0.0495, 0.1498, 0.0412],
         [0.6281, 0.0606, 0.0548,  ..., 0.8516, 0.4934, 0.8765],
         [0.1076, 0.8182, 0.7605,  ..., 0.0495, 0.1591, 0.0412]],
        [[0.0916, 0.0266, 0.0397,  ..., 0.0541, 0.0350, 0.8866],
         [0.0685, 0.0672, 0.0397,  ..., 0.0541, 0.0350, 0.0462],
         [0.7713, 0.0266, 0.0397,  ..., 0.8377, 0.8949, 0.0336],
         [0.0685, 0.8797, 0.8809,  ..., 0.0541, 0.0350, 0.0336]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:13,459 [Process: 0] Synchronize training processes
2024-08-18 19:46:13,459 [Process: 0] Evaluating...
2024-08-18 19:46:13,461 [Process: 0] EPOCH 76:
2024-08-18 19:46:13,462 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:14,542 [Process: 0] Synchronize training processes
2024-08-18 19:46:14,542 [Process: 0] Evaluating...
2024-08-18 19:46:14,544 [Process: 0] EPOCH 77:
2024-08-18 19:46:14,546 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3853, 0.0568, 0.0279,  ..., 0.9451, 0.4079, 0.0428],
         [0.2109, 0.0568, 0.0279,  ..., 0.0208, 0.2490, 0.0428],
         [0.2737, 0.0568, 0.0279,  ..., 0.0170, 0.1994, 0.0428],
         [0.1300, 0.8295, 0.9162,  ..., 0.0170, 0.1437, 0.8716]],
        [[0.2255, 0.0654, 0.0633,  ..., 0.0432, 0.0150, 0.0471],
         [0.1980, 0.0654, 0.0633,  ..., 0.0432, 0.0150, 0.0471],
         [0.4577, 0.0654, 0.0633,  ..., 0.0432, 0.9549, 0.8586],
         [0.1188, 0.8039, 0.8102,  ..., 0.8705, 0.0150, 0.0471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0723, 0.0285, 0.0766,  ..., 0.0303, 0.3591, 0.0375],
         [0.0713, 0.0348, 0.0766,  ..., 0.0303, 0.1638, 0.0375],
         [0.7851, 0.0285, 0.0766,  ..., 0.9092, 0.3012, 0.8875],
         [0.0713, 0.9082, 0.7701,  ..., 0.0303, 0.1759, 0.0375]],
        [[0.0835, 0.0894, 0.0075,  ..., 0.0426, 0.0475, 0.9625],
         [0.0780, 0.2770, 0.0075,  ..., 0.0426, 0.0475, 0.0125],
         [0.7431, 0.0747, 0.0075,  ..., 0.8722, 0.8575, 0.0125],
         [0.0954, 0.5589, 0.9775,  ..., 0.0426, 0.0475, 0.0125]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6046, 0.1005, 0.0549,  ..., 0.9141, 0.4875, 0.0672],
         [0.1427, 0.0818, 0.0549,  ..., 0.0328, 0.1887, 0.0672],
         [0.1455, 0.0818, 0.0549,  ..., 0.0265, 0.1916, 0.0677],
         [0.1072, 0.7358, 0.8352,  ..., 0.0265, 0.1322, 0.7978]],
        [[0.3607, 0.0434, 0.0583,  ..., 0.1123, 0.0135, 0.0276],
         [0.1967, 0.0434, 0.0583,  ..., 0.1399, 0.0135, 0.0276],
         [0.3110, 0.0434, 0.0583,  ..., 0.1123, 0.9595, 0.9171],
         [0.1316, 0.8699, 0.8251,  ..., 0.6355, 0.0135, 0.0276]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1088, 0.0196, 0.0199,  ..., 0.0221, 0.3657, 0.0664],
         [0.0803, 0.0196, 0.0199,  ..., 0.0221, 0.1547, 0.0664],
         [0.7307, 0.0196, 0.0199,  ..., 0.9338, 0.3249, 0.8007],
         [0.0803, 0.9411, 0.9403,  ..., 0.0221, 0.1547, 0.0664]],
        [[0.1552, 0.0129, 0.0044,  ..., 0.0355, 0.0456, 0.9138],
         [0.1125, 0.0129, 0.0044,  ..., 0.0355, 0.0456, 0.0322],
         [0.5478, 0.0129, 0.0044,  ..., 0.8934, 0.8631, 0.0270],
         [0.1845, 0.9612, 0.9867,  ..., 0.0355, 0.0456, 0.0270]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:15,626 [Process: 0] Synchronize training processes
2024-08-18 19:46:15,626 [Process: 0] Evaluating...
2024-08-18 19:46:15,628 [Process: 0] EPOCH 78:
2024-08-18 19:46:15,630 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:16,709 [Process: 0] Synchronize training processes
2024-08-18 19:46:16,710 [Process: 0] Evaluating...
2024-08-18 19:46:16,712 [Process: 0] EPOCH 79:
2024-08-18 19:46:16,713 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5558, 0.0349, 0.0492,  ..., 0.9800, 0.4217, 0.0870],
         [0.1867, 0.0349, 0.0492,  ..., 0.0067, 0.2733, 0.0870],
         [0.1489, 0.0390, 0.0492,  ..., 0.0067, 0.1734, 0.0870],
         [0.1086, 0.8913, 0.8525,  ..., 0.0067, 0.1316, 0.7390]],
        [[0.0216, 0.0508, 0.0329,  ..., 0.0526, 0.1179, 0.0339],
         [0.0216, 0.0508, 0.0329,  ..., 0.0526, 0.1179, 0.0339],
         [0.9353, 0.0508, 0.0329,  ..., 0.0526, 0.6040, 0.8983],
         [0.0216, 0.8477, 0.9012,  ..., 0.8423, 0.1602, 0.0339]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1095, 0.1547, 0.0300,  ..., 0.0311, 0.2503, 0.0329],
         [0.0750, 0.1604, 0.0300,  ..., 0.0311, 0.1646, 0.0329],
         [0.7405, 0.1179, 0.0300,  ..., 0.9068, 0.3413, 0.9013],
         [0.0750, 0.5670, 0.9100,  ..., 0.0311, 0.2438, 0.0329]],
        [[0.0300, 0.0174, 0.0622,  ..., 0.0457, 0.0827, 0.9300],
         [0.0300, 0.0174, 0.0622,  ..., 0.0457, 0.0698, 0.0233],
         [0.9099, 0.0174, 0.0622,  ..., 0.8626, 0.7777, 0.0233],
         [0.0300, 0.9477, 0.8133,  ..., 0.0459, 0.0698, 0.0233]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6349, 0.0901, 0.0175,  ..., 0.8779, 0.4337, 0.0295],
         [0.1242, 0.0901, 0.0175,  ..., 0.0378, 0.2581, 0.0295],
         [0.1441, 0.0901, 0.0175,  ..., 0.0464, 0.1866, 0.0295],
         [0.0968, 0.7298, 0.9475,  ..., 0.0378, 0.1217, 0.9116]],
        [[0.3581, 0.0429, 0.0398,  ..., 0.0313, 0.0493, 0.0551],
         [0.1935, 0.0429, 0.0398,  ..., 0.0313, 0.0518, 0.0551],
         [0.3335, 0.0429, 0.0398,  ..., 0.0313, 0.8495, 0.8347],
         [0.1149, 0.8712, 0.8806,  ..., 0.9060, 0.0493, 0.0551]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1903, 0.0135, 0.0038,  ..., 0.0370, 0.2794, 0.0924],
         [0.0964, 0.0135, 0.0038,  ..., 0.0370, 0.1605, 0.0831],
         [0.6169, 0.0135, 0.0038,  ..., 0.8890, 0.3802, 0.7414],
         [0.0964, 0.9595, 0.9887,  ..., 0.0370, 0.1798, 0.0831]],
        [[0.0915, 0.0333, 0.1468,  ..., 0.0549, 0.0417, 0.9521],
         [0.0786, 0.0333, 0.1393,  ..., 0.0549, 0.0417, 0.0160],
         [0.7374, 0.0333, 0.1393,  ..., 0.8330, 0.8750, 0.0160],
         [0.0924, 0.9001, 0.5745,  ..., 0.0572, 0.0417, 0.0160]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:17,791 [Process: 0] Synchronize training processes
2024-08-18 19:46:17,792 [Process: 0] Evaluating...
2024-08-18 19:46:17,794 [Process: 0] EPOCH 80:
2024-08-18 19:46:17,796 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:18,875 [Process: 0] Synchronize training processes
2024-08-18 19:46:18,875 [Process: 0] Evaluating...
2024-08-18 19:46:18,877 [Process: 0] EPOCH 81:
2024-08-18 19:46:18,879 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5656, 0.0692, 0.0236,  ..., 0.9142, 0.5289, 0.0396],
         [0.1737, 0.0692, 0.0236,  ..., 0.0368, 0.2425, 0.0396],
         [0.1382, 0.0783, 0.0236,  ..., 0.0245, 0.1227, 0.0396],
         [0.1226, 0.7834, 0.9292,  ..., 0.0245, 0.1059, 0.8813]],
        [[0.4595, 0.0341, 0.0546,  ..., 0.1338, 0.0095, 0.0271],
         [0.2490, 0.0341, 0.0546,  ..., 0.1338, 0.0095, 0.0271],
         [0.1748, 0.0341, 0.0546,  ..., 0.2609, 0.9714, 0.9186],
         [0.1167, 0.8978, 0.8361,  ..., 0.4714, 0.0095, 0.0271]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1126, 0.1196, 0.0212,  ..., 0.0341, 0.3005, 0.0483],
         [0.0848, 0.1196, 0.0212,  ..., 0.0341, 0.1570, 0.0483],
         [0.7178, 0.2859, 0.0212,  ..., 0.8977, 0.3815, 0.8550],
         [0.0848, 0.4749, 0.9365,  ..., 0.0341, 0.1610, 0.0483]],
        [[0.0985, 0.0077, 0.0044,  ..., 0.0429, 0.0368, 0.9527],
         [0.0804, 0.0077, 0.0044,  ..., 0.0429, 0.0407, 0.0158],
         [0.7248, 0.0077, 0.0044,  ..., 0.8712, 0.8860, 0.0158],
         [0.0962, 0.9769, 0.9869,  ..., 0.0429, 0.0365, 0.0158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4761, 0.0620, 0.0504,  ..., 0.9736, 0.5394, 0.0518],
         [0.2019, 0.0620, 0.0504,  ..., 0.0088, 0.2183, 0.0518],
         [0.2065, 0.0620, 0.0504,  ..., 0.0088, 0.1344, 0.0518],
         [0.1155, 0.8141, 0.8489,  ..., 0.0088, 0.1079, 0.8446]],
        [[0.3579, 0.3123, 0.0561,  ..., 0.0663, 0.0140, 0.0316],
         [0.3000, 0.2264, 0.0561,  ..., 0.0663, 0.0140, 0.0316],
         [0.1946, 0.1323, 0.0561,  ..., 0.0695, 0.9579, 0.9053],
         [0.1475, 0.3290, 0.8316,  ..., 0.7979, 0.0140, 0.0316]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-18 19:46:19,958 [Process: 0] Synchronize training processes
2024-08-18 19:46:19,958 [Process: 0] Evaluating...
2024-08-18 19:46:19,964 [Process: 0] EPOCH 82:
2024-08-18 19:46:19,966 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:21,044 [Process: 0] Synchronize training processes
2024-08-18 19:46:21,045 [Process: 0] Evaluating...
2024-08-18 19:46:21,046 [Process: 0] EPOCH 83:
2024-08-18 19:46:21,048 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.0446, 0.1691, 0.0161,  ..., 0.0462, 0.2743, 0.0289],
         [0.0446, 0.2316, 0.0241,  ..., 0.0462, 0.1602, 0.0289],
         [0.8663, 0.1481, 0.0161,  ..., 0.8614, 0.3086, 0.9134],
         [0.0446, 0.4511, 0.9438,  ..., 0.0462, 0.2569, 0.0289]],
        [[0.1196, 0.0245, 0.0973,  ..., 0.0267, 0.0912, 0.9565],
         [0.1097, 0.0283, 0.0973,  ..., 0.0267, 0.0851, 0.0145],
         [0.6799, 0.0245, 0.0973,  ..., 0.9198, 0.7440, 0.0145],
         [0.0908, 0.9226, 0.7081,  ..., 0.0267, 0.0797, 0.0145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6475, 0.0503, 0.0630,  ..., 0.9817, 0.5343, 0.0869],
         [0.1236, 0.0503, 0.0630,  ..., 0.0061, 0.2449, 0.0938],
         [0.1328, 0.0503, 0.0630,  ..., 0.0061, 0.1104, 0.0869],
         [0.0961, 0.8490, 0.8110,  ..., 0.0061, 0.1104, 0.7325]],
        [[0.4497, 0.0874, 0.0778,  ..., 0.1400, 0.0142, 0.0103],
         [0.3120, 0.0874, 0.0778,  ..., 0.1400, 0.0142, 0.0103],
         [0.1211, 0.0874, 0.0778,  ..., 0.3999, 0.9575, 0.9691],
         [0.1172, 0.7377, 0.7665,  ..., 0.3200, 0.0142, 0.0103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1314, 0.0234, 0.0240,  ..., 0.0306, 0.1550, 0.0316],
         [0.0982, 0.0234, 0.0240,  ..., 0.0306, 0.1234, 0.0316],
         [0.6721, 0.9298, 0.0240,  ..., 0.9083, 0.5788, 0.9052],
         [0.0982, 0.0234, 0.9281,  ..., 0.0306, 0.1429, 0.0316]],
        [[0.1128, 0.0016, 0.1101,  ..., 0.0534, 0.1048, 0.9905],
         [0.0670, 0.0016, 0.1766,  ..., 0.0534, 0.1048, 0.0032],
         [0.7532, 0.0016, 0.1101,  ..., 0.8265, 0.2089, 0.0032],
         [0.0670, 0.9952, 0.6033,  ..., 0.0668, 0.5816, 0.0032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4997, 0.0159, 0.0539,  ..., 0.9789, 0.4118, 0.0859],
         [0.1752, 0.0159, 0.0539,  ..., 0.0070, 0.3199, 0.0859],
         [0.2119, 0.0159, 0.0539,  ..., 0.0070, 0.1503, 0.0859],
         [0.1132, 0.9523, 0.8384,  ..., 0.0070, 0.1180, 0.7424]],
        [[0.3641, 0.2668, 0.0362,  ..., 0.0834, 0.0126, 0.0276],
         [0.3163, 0.2788, 0.0475,  ..., 0.0834, 0.0126, 0.0276],
         [0.1855, 0.1314, 0.0362,  ..., 0.0834, 0.9622, 0.9173],
         [0.1341, 0.3230, 0.8801,  ..., 0.7499, 0.0126, 0.0276]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:22,127 [Process: 0] Synchronize training processes
2024-08-18 19:46:22,127 [Process: 0] Evaluating...
2024-08-18 19:46:22,129 [Process: 0] EPOCH 84:
2024-08-18 19:46:22,131 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:23,208 [Process: 0] Synchronize training processes
2024-08-18 19:46:23,209 [Process: 0] Evaluating...
2024-08-18 19:46:23,210 [Process: 0] EPOCH 85:
2024-08-18 19:46:23,212 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1129, 0.0372, 0.0108,  ..., 0.0436, 0.0508, 0.0275],
         [0.0924, 0.0372, 0.0108,  ..., 0.0436, 0.0508, 0.0275],
         [0.7023, 0.8884, 0.0108,  ..., 0.8691, 0.0508, 0.9176],
         [0.0924, 0.0372, 0.9677,  ..., 0.0436, 0.8476, 0.0275]],
        [[0.1096, 0.0089, 0.1426,  ..., 0.0623, 0.0622, 0.9640],
         [0.0734, 0.0089, 0.1858,  ..., 0.0623, 0.0622, 0.0120],
         [0.7437, 0.0089, 0.1204,  ..., 0.8131, 0.7758, 0.0120],
         [0.0734, 0.9733, 0.5513,  ..., 0.0623, 0.0998, 0.0120]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4837, 0.0436, 0.0169,  ..., 0.9723, 0.6746, 0.0515],
         [0.1081, 0.0436, 0.0169,  ..., 0.0092, 0.1204, 0.0515],
         [0.3015, 0.0436, 0.0169,  ..., 0.0092, 0.1203, 0.0580],
         [0.1066, 0.8692, 0.9494,  ..., 0.0092, 0.0846, 0.8389]],
        [[0.3244, 0.1775, 0.0580,  ..., 0.1255, 0.0057, 0.0096],
         [0.3679, 0.3297, 0.0837,  ..., 0.1255, 0.0057, 0.0096],
         [0.1625, 0.1253, 0.0580,  ..., 0.4976, 0.9828, 0.9712],
         [0.1453, 0.3675, 0.8002,  ..., 0.2514, 0.0057, 0.0096]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0924, 0.0582, 0.0135,  ..., 0.0340, 0.1205, 0.0938],
         [0.0870, 0.0582, 0.0197,  ..., 0.0340, 0.1205, 0.0872],
         [0.7337, 0.8255, 0.0135,  ..., 0.8980, 0.1636, 0.7114],
         [0.0870, 0.0582, 0.9533,  ..., 0.0340, 0.5954, 0.1076]],
        [[0.1098, 0.0662, 0.0119,  ..., 0.0487, 0.0577, 0.9879],
         [0.0616, 0.1712, 0.0119,  ..., 0.0487, 0.0577, 0.0040],
         [0.7671, 0.0662, 0.0119,  ..., 0.8540, 0.8270, 0.0040],
         [0.0616, 0.6963, 0.9642,  ..., 0.0487, 0.0577, 0.0040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5830, 0.0820, 0.0670,  ..., 0.9318, 0.4935, 0.1056],
         [0.1140, 0.0820, 0.0670,  ..., 0.0263, 0.2554, 0.1056],
         [0.2203, 0.0833, 0.0840,  ..., 0.0210, 0.1298, 0.1090],
         [0.0827, 0.7526, 0.7820,  ..., 0.0210, 0.1214, 0.6798]],
        [[0.0759, 0.0615, 0.0291,  ..., 0.0424, 0.1395, 0.0111],
         [0.0759, 0.0769, 0.0291,  ..., 0.0424, 0.1905, 0.0111],
         [0.1007, 0.0615, 0.0291,  ..., 0.0424, 0.2746, 0.9666],
         [0.7476, 0.8001, 0.9126,  ..., 0.8729, 0.3955, 0.0111]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:24,294 [Process: 0] Synchronize training processes
2024-08-18 19:46:24,294 [Process: 0] Evaluating...
2024-08-18 19:46:24,296 [Process: 0] EPOCH 86:
2024-08-18 19:46:24,298 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:25,376 [Process: 0] Synchronize training processes
2024-08-18 19:46:25,376 [Process: 0] Evaluating...
2024-08-18 19:46:25,378 [Process: 0] EPOCH 87:
2024-08-18 19:46:25,380 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1340, 0.0370, 0.0370,  ..., 0.0312, 0.1133, 0.0219],
         [0.1034, 0.0370, 0.0495,  ..., 0.0312, 0.1069, 0.0219],
         [0.6593, 0.8891, 0.0370,  ..., 0.9063, 0.6010, 0.9343],
         [0.1034, 0.0370, 0.8764,  ..., 0.0312, 0.1788, 0.0219]],
        [[0.2346, 0.1518, 0.0269,  ..., 0.0257, 0.0576, 0.9473],
         [0.0701, 0.5669, 0.0269,  ..., 0.0257, 0.0576, 0.0190],
         [0.6253, 0.0651, 0.0269,  ..., 0.9229, 0.8186, 0.0169],
         [0.0701, 0.2163, 0.9193,  ..., 0.0257, 0.0662, 0.0169]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5731, 0.0244, 0.0489,  ..., 0.9891, 0.3396, 0.0585],
         [0.1640, 0.0244, 0.0489,  ..., 0.0036, 0.3165, 0.0585],
         [0.1739, 0.0244, 0.0489,  ..., 0.0036, 0.1915, 0.0585],
         [0.0890, 0.9267, 0.8533,  ..., 0.0036, 0.1524, 0.8244]],
        [[0.0594, 0.1409, 0.0140,  ..., 0.0999, 0.1970, 0.0223],
         [0.0594, 0.1983, 0.0140,  ..., 0.0999, 0.2107, 0.0223],
         [0.0594, 0.1288, 0.0140,  ..., 0.1117, 0.4530, 0.9330],
         [0.8217, 0.5320, 0.9580,  ..., 0.6885, 0.1393, 0.0223]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1793, 0.0690, 0.0165,  ..., 0.0293, 0.0675, 0.0337],
         [0.1283, 0.0690, 0.0165,  ..., 0.0293, 0.0675, 0.0337],
         [0.5641, 0.7752, 0.0165,  ..., 0.9120, 0.7729, 0.8990],
         [0.1283, 0.0867, 0.9506,  ..., 0.0293, 0.0921, 0.0337]],
        [[0.1682, 0.2299, 0.0080,  ..., 0.0610, 0.0563, 0.9716],
         [0.0681, 0.5911, 0.0080,  ..., 0.0727, 0.0563, 0.0095],
         [0.6955, 0.0738, 0.0080,  ..., 0.8053, 0.8263, 0.0095],
         [0.0681, 0.1053, 0.9759,  ..., 0.0610, 0.0610, 0.0095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9218, 0.0229, 0.0821,  ..., 0.9894, 0.5218, 0.0725],
         [0.0292, 0.0229, 0.0676,  ..., 0.0035, 0.1916, 0.0725],
         [0.0245, 0.0229, 0.0676,  ..., 0.0035, 0.1636, 0.0725],
         [0.0245, 0.9314, 0.7828,  ..., 0.0035, 0.1231, 0.7824]],
        [[0.0816, 0.1199, 0.0125,  ..., 0.1283, 0.0119, 0.0048],
         [0.0816, 0.2047, 0.0125,  ..., 0.1283, 0.0119, 0.0048],
         [0.0816, 0.1192, 0.0125,  ..., 0.4081, 0.9643, 0.9857],
         [0.7551, 0.5562, 0.9625,  ..., 0.3353, 0.0119, 0.0048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:26,458 [Process: 0] Synchronize training processes
2024-08-18 19:46:26,458 [Process: 0] Evaluating...
2024-08-18 19:46:26,460 [Process: 0] EPOCH 88:
2024-08-18 19:46:26,462 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1034, 0.0221, 0.0695,  ..., 0.0309, 0.0890, 0.0561],
         [0.0941, 0.0238, 0.0863,  ..., 0.0402, 0.0890, 0.0561],
         [0.7083, 0.9320, 0.0754,  ..., 0.8980, 0.1362, 0.8316],
         [0.0941, 0.0221, 0.7689,  ..., 0.0309, 0.6858, 0.0561]],
        [[0.0911, 0.0407, 0.0036,  ..., 0.0649, 0.0745, 0.9501],
         [0.0505, 0.2946, 0.0036,  ..., 0.0649, 0.0745, 0.0166],
         [0.8080, 0.0407, 0.0036,  ..., 0.7867, 0.7258, 0.0166],
         [0.0505, 0.6241, 0.9892,  ..., 0.0835, 0.1252, 0.0166]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9235, 0.0375, 0.0707,  ..., 0.9424, 0.5768, 0.0723],
         [0.0288, 0.0375, 0.0801,  ..., 0.0192, 0.2211, 0.0723],
         [0.0239, 0.0375, 0.0707,  ..., 0.0193, 0.1010, 0.1249],
         [0.0239, 0.8876, 0.7785,  ..., 0.0192, 0.1010, 0.7306]],
        [[0.3009, 0.0558, 0.0216,  ..., 0.0927, 0.0346, 0.0121],
         [0.3099, 0.0558, 0.0216,  ..., 0.0927, 0.0346, 0.0121],
         [0.1421, 0.0558, 0.0216,  ..., 0.6671, 0.8962, 0.9636],
         [0.2471, 0.8327, 0.9352,  ..., 0.1475, 0.0346, 0.0121]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0888, 0.0424, 0.5213,  ..., 0.0392, 0.0997, 0.0300],
         [0.0848, 0.0424, 0.3808,  ..., 0.0422, 0.0997, 0.0300],
         [0.7415, 0.8727, 0.0490,  ..., 0.8793, 0.1178, 0.9099],
         [0.0848, 0.0424, 0.0490,  ..., 0.0392, 0.6827, 0.0300]],
        [[0.1537, 0.0386, 0.0108,  ..., 0.0531, 0.0421, 0.9678],
         [0.0779, 0.0428, 0.0108,  ..., 0.0531, 0.0421, 0.0107],
         [0.6905, 0.0386, 0.0108,  ..., 0.8231, 0.8620, 0.0107],
         [0.0779, 0.8800, 0.9675,  ..., 0.0706, 0.0538, 0.0107]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:27,572 [Process: 0] Synchronize training processes
2024-08-18 19:46:27,573 [Process: 0] Evaluating...
2024-08-18 19:46:27,574 [Process: 0] EPOCH 89:
2024-08-18 19:46:27,576 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:28,654 [Process: 0] Synchronize training processes
2024-08-18 19:46:28,654 [Process: 0] Evaluating...
2024-08-18 19:46:28,656 [Process: 0] EPOCH 90:
2024-08-18 19:46:28,658 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9177, 0.0061, 0.0759,  ..., 0.9402, 0.6111, 0.1409],
         [0.0226, 0.0061, 0.0759,  ..., 0.0199, 0.1723, 0.1462],
         [0.0372, 0.0061, 0.0894,  ..., 0.0199, 0.1112, 0.0970],
         [0.0226, 0.9818, 0.7588,  ..., 0.0199, 0.1054, 0.6158]],
        [[0.2551, 0.0583, 0.0284,  ..., 0.0629, 0.0238, 0.0444],
         [0.2655, 0.0701, 0.0284,  ..., 0.0629, 0.0238, 0.0444],
         [0.2459, 0.0583, 0.0284,  ..., 0.0650, 0.9286, 0.8669],
         [0.2335, 0.8133, 0.9147,  ..., 0.8092, 0.0238, 0.0444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0518, 0.0816, 0.9799,  ..., 0.0325, 0.0375, 0.0451],
         [0.0518, 0.0816, 0.0067,  ..., 0.0325, 0.0375, 0.0451],
         [0.8446, 0.0921, 0.0067,  ..., 0.9025, 0.0375, 0.8646],
         [0.0518, 0.7447, 0.0067,  ..., 0.0325, 0.8875, 0.0451]],
        [[0.0565, 0.0466, 0.0242,  ..., 0.0428, 0.0429, 0.9722],
         [0.0565, 0.0779, 0.0242,  ..., 0.0428, 0.0429, 0.0093],
         [0.7853, 0.0466, 0.0242,  ..., 0.8716, 0.8712, 0.0093],
         [0.1018, 0.8289, 0.9275,  ..., 0.0428, 0.0429, 0.0093]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8116, 0.0390, 0.0377,  ..., 0.9687, 0.5137, 0.0484],
         [0.0415, 0.0390, 0.0377,  ..., 0.0104, 0.2661, 0.0512],
         [0.1055, 0.0390, 0.0377,  ..., 0.0104, 0.1101, 0.0484],
         [0.0415, 0.8831, 0.8869,  ..., 0.0104, 0.1101, 0.8521]],
        [[0.2189, 0.0653, 0.0777,  ..., 0.0339, 0.0207, 0.0564],
         [0.3374, 0.0791, 0.0777,  ..., 0.0339, 0.0207, 0.0564],
         [0.2208, 0.0653, 0.0896,  ..., 0.0339, 0.9379, 0.8307],
         [0.2229, 0.7903, 0.7550,  ..., 0.8982, 0.0207, 0.0564]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0555, 0.1335, 0.9661,  ..., 0.0279, 0.0420, 0.0644],
         [0.0555, 0.1335, 0.0152,  ..., 0.0279, 0.0420, 0.0644],
         [0.8334, 0.3067, 0.0093,  ..., 0.9163, 0.0420, 0.7874],
         [0.0555, 0.4262, 0.0093,  ..., 0.0279, 0.8739, 0.0838]],
        [[0.0697, 0.0043, 0.0066,  ..., 0.0467, 0.0411, 0.9949],
         [0.0610, 0.0043, 0.0066,  ..., 0.0467, 0.0411, 0.0017],
         [0.7744, 0.0043, 0.0066,  ..., 0.8600, 0.8766, 0.0017],
         [0.0948, 0.9872, 0.9801,  ..., 0.0467, 0.0411, 0.0017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:29,737 [Process: 0] Synchronize training processes
2024-08-18 19:46:29,738 [Process: 0] Evaluating...
2024-08-18 19:46:29,739 [Process: 0] EPOCH 91:
2024-08-18 19:46:29,741 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:30,822 [Process: 0] Synchronize training processes
2024-08-18 19:46:30,822 [Process: 0] Evaluating...
2024-08-18 19:46:30,828 [Process: 0] EPOCH 92:
2024-08-18 19:46:30,830 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8275, 0.0619, 0.0279,  ..., 0.9856, 0.4558, 0.0285],
         [0.0475, 0.0619, 0.0297,  ..., 0.0054, 0.2833, 0.0285],
         [0.0776, 0.0649, 0.0279,  ..., 0.0045, 0.1380, 0.0285],
         [0.0475, 0.8114, 0.9145,  ..., 0.0045, 0.1230, 0.9144]],
        [[0.2193, 0.1037, 0.0916,  ..., 0.0488, 0.0117, 0.0126],
         [0.3419, 0.1779, 0.1122,  ..., 0.0488, 0.0117, 0.0126],
         [0.2610, 0.1037, 0.0916,  ..., 0.0488, 0.9650, 0.9623],
         [0.1778, 0.6147, 0.7046,  ..., 0.8536, 0.0117, 0.0126]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0406, 0.1337, 0.9714,  ..., 0.0307, 0.0768, 0.0361],
         [0.0406, 0.1337, 0.0159,  ..., 0.0307, 0.0768, 0.0361],
         [0.8782, 0.2551, 0.0064,  ..., 0.9079, 0.0768, 0.8918],
         [0.0406, 0.4775, 0.0064,  ..., 0.0307, 0.7695, 0.0361]],
        [[0.0664, 0.0132, 0.0089,  ..., 0.0345, 0.0624, 0.9863],
         [0.0570, 0.0132, 0.0089,  ..., 0.0345, 0.0624, 0.0046],
         [0.8196, 0.0132, 0.0089,  ..., 0.8939, 0.7833, 0.0046],
         [0.0570, 0.9603, 0.9733,  ..., 0.0371, 0.0919, 0.0046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6026, 0.0259, 0.0294,  ..., 0.9539, 0.5448, 0.0810],
         [0.1170, 0.0259, 0.0294,  ..., 0.0136, 0.2777, 0.1151],
         [0.2041, 0.0259, 0.0294,  ..., 0.0189, 0.0904, 0.0810],
         [0.0762, 0.9224, 0.9117,  ..., 0.0136, 0.0870, 0.7230]],
        [[0.2181, 0.0623, 0.0889,  ..., 0.0506, 0.0116, 0.0222],
         [0.2982, 0.0623, 0.1153,  ..., 0.0506, 0.0116, 0.0222],
         [0.3523, 0.0623, 0.0889,  ..., 0.0617, 0.9652, 0.9333],
         [0.1314, 0.8132, 0.7069,  ..., 0.8371, 0.0116, 0.0222]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0275, 0.0711, 0.9250,  ..., 0.0287, 0.1393, 0.0389],
         [0.0275, 0.1332, 0.0407,  ..., 0.0287, 0.1393, 0.0389],
         [0.9174, 0.0711, 0.0171,  ..., 0.9140, 0.3818, 0.8832],
         [0.0275, 0.7247, 0.0171,  ..., 0.0287, 0.3396, 0.0389]],
        [[0.0625, 0.0665, 0.0236,  ..., 0.0408, 0.0701, 0.9933],
         [0.0625, 0.1184, 0.0236,  ..., 0.0408, 0.0701, 0.0022],
         [0.7773, 0.0665, 0.0236,  ..., 0.8728, 0.7268, 0.0022],
         [0.0977, 0.7485, 0.9291,  ..., 0.0457, 0.1331, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:31,909 [Process: 0] Synchronize training processes
2024-08-18 19:46:31,909 [Process: 0] Evaluating...
2024-08-18 19:46:31,912 [Process: 0] EPOCH 93:
2024-08-18 19:46:31,914 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:32,991 [Process: 0] Synchronize training processes
2024-08-18 19:46:32,991 [Process: 0] Evaluating...
2024-08-18 19:46:32,993 [Process: 0] EPOCH 94:
2024-08-18 19:46:32,995 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9094, 0.0415, 0.0615,  ..., 0.9476, 0.6030, 0.0910],
         [0.0481, 0.0415, 0.0694,  ..., 0.0175, 0.2587, 0.0910],
         [0.0212, 0.0458, 0.0615,  ..., 0.0175, 0.0691, 0.1156],
         [0.0212, 0.8713, 0.8076,  ..., 0.0175, 0.0691, 0.7023]],
        [[0.1680, 0.0619, 0.0549,  ..., 0.0689, 0.0032, 0.0102],
         [0.3995, 0.0837, 0.0549,  ..., 0.0689, 0.0032, 0.0102],
         [0.2777, 0.0619, 0.0549,  ..., 0.0902, 0.9903, 0.9693],
         [0.1547, 0.7926, 0.8352,  ..., 0.7721, 0.0032, 0.0102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0397, 0.0418, 0.9366,  ..., 0.0297, 0.1090, 0.0322],
         [0.0397, 0.0834, 0.0287,  ..., 0.0297, 0.1090, 0.0322],
         [0.8808, 0.0418, 0.0174,  ..., 0.9110, 0.6310, 0.9033],
         [0.0397, 0.8330, 0.0174,  ..., 0.0297, 0.1511, 0.0322]],
        [[0.0390, 0.0049, 0.0876,  ..., 0.0439, 0.0537, 0.9790],
         [0.0390, 0.0049, 0.2223,  ..., 0.0439, 0.0537, 0.0077],
         [0.8768, 0.0049, 0.0876,  ..., 0.8674, 0.8278, 0.0066],
         [0.0452, 0.9852, 0.6025,  ..., 0.0448, 0.0648, 0.0066]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9134, 0.0252, 0.0362,  ..., 0.9738, 0.5773, 0.0586],
         [0.0381, 0.0252, 0.0362,  ..., 0.0087, 0.2737, 0.0586],
         [0.0242, 0.0252, 0.0362,  ..., 0.0087, 0.0745, 0.0695],
         [0.0242, 0.9245, 0.8915,  ..., 0.0087, 0.0745, 0.8133]],
        [[0.2925, 0.0756, 0.0558,  ..., 0.0805, 0.0183, 0.0133],
         [0.4921, 0.1169, 0.0558,  ..., 0.0805, 0.0183, 0.0133],
         [0.1073, 0.0756, 0.0821,  ..., 0.0805, 0.9451, 0.9601],
         [0.1082, 0.7319, 0.8063,  ..., 0.7584, 0.0183, 0.0133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:46:34,072 [Process: 0] Synchronize training processes
2024-08-18 19:46:34,073 [Process: 0] Evaluating...
2024-08-18 19:46:34,074 [Process: 0] EPOCH 95:
2024-08-18 19:46:34,076 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:35,150 [Process: 0] Synchronize training processes
2024-08-18 19:46:35,150 [Process: 0] Evaluating...
2024-08-18 19:46:35,152 [Process: 0] EPOCH 96:
2024-08-18 19:46:35,154 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0279, 0.0274, 0.9914,  ..., 0.0158, 0.1288, 0.0215],
         [0.0279, 0.0296, 0.0029,  ..., 0.0158, 0.1288, 0.0215],
         [0.9163, 0.0274, 0.0029,  ..., 0.9526, 0.4984, 0.9356],
         [0.0279, 0.9156, 0.0029,  ..., 0.0158, 0.2440, 0.0215]],
        [[0.0462, 0.0804, 0.0643,  ..., 0.0602, 0.0426, 0.9872],
         [0.0462, 0.2318, 0.0812,  ..., 0.0602, 0.0426, 0.0043],
         [0.8354, 0.0804, 0.0643,  ..., 0.8138, 0.8723, 0.0043],
         [0.0722, 0.6075, 0.7901,  ..., 0.0657, 0.0426, 0.0043]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8352, 0.0341, 0.0522,  ..., 0.9396, 0.8038, 0.0332],
         [0.1060, 0.0341, 0.0714,  ..., 0.0201, 0.1154, 0.0332],
         [0.0294, 0.0341, 0.0522,  ..., 0.0201, 0.0404, 0.0332],
         [0.0294, 0.8976, 0.8242,  ..., 0.0201, 0.0404, 0.9005]],
        [[0.2930, 0.0172, 0.0249,  ..., 0.0991, 0.0574, 0.0063],
         [0.4660, 0.0172, 0.0249,  ..., 0.1507, 0.0761, 0.0063],
         [0.1242, 0.0172, 0.0249,  ..., 0.1178, 0.8090, 0.9812],
         [0.1168, 0.9484, 0.9252,  ..., 0.6324, 0.0574, 0.0063]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2220, 0.0239, 0.9761,  ..., 0.0098, 0.1163, 0.0181],
         [0.1922, 0.0324, 0.0078,  ..., 0.0098, 0.1163, 0.0181],
         [0.4289, 0.0239, 0.0078,  ..., 0.9705, 0.2588, 0.9456],
         [0.1569, 0.9198, 0.0083,  ..., 0.0098, 0.5087, 0.0181]],
        [[0.1148, 0.0082, 0.0025,  ..., 0.0140, 0.0595, 0.9719],
         [0.0904, 0.0082, 0.0025,  ..., 0.0140, 0.0595, 0.0094],
         [0.6308, 0.0082, 0.0025,  ..., 0.9581, 0.8076, 0.0094],
         [0.1640, 0.9753, 0.9924,  ..., 0.0140, 0.0733, 0.0094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9476, 0.0491, 0.0267,  ..., 0.9554, 0.7267, 0.0533],
         [0.0280, 0.0491, 0.0267,  ..., 0.0157, 0.1622, 0.0533],
         [0.0122, 0.0491, 0.0267,  ..., 0.0155, 0.0555, 0.0727],
         [0.0122, 0.8528, 0.9198,  ..., 0.0134, 0.0555, 0.8207]],
        [[0.2851, 0.0320, 0.0238,  ..., 0.0448, 0.0358, 0.0042],
         [0.3867, 0.0320, 0.0238,  ..., 0.0448, 0.0457, 0.0042],
         [0.1945, 0.0400, 0.0238,  ..., 0.0543, 0.8826, 0.9873],
         [0.1337, 0.8960, 0.9285,  ..., 0.8560, 0.0358, 0.0042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:36,268 [Process: 0] Synchronize training processes
2024-08-18 19:46:36,268 [Process: 0] Evaluating...
2024-08-18 19:46:36,270 [Process: 0] EPOCH 97:
2024-08-18 19:46:36,272 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:37,416 [Process: 0] Synchronize training processes
2024-08-18 19:46:37,417 [Process: 0] Evaluating...
2024-08-18 19:46:37,418 [Process: 0] EPOCH 98:
2024-08-18 19:46:37,420 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0606, 0.0077, 0.9738,  ..., 0.0251, 0.1364, 0.0234],
         [0.0606, 0.0077, 0.0087,  ..., 0.0251, 0.1364, 0.0234],
         [0.8182, 0.0077, 0.0087,  ..., 0.9247, 0.2854, 0.9297],
         [0.0606, 0.9770, 0.0087,  ..., 0.0251, 0.4418, 0.0234]],
        [[0.0570, 0.0133, 0.0034,  ..., 0.0299, 0.0735, 0.9930],
         [0.0570, 0.0133, 0.0034,  ..., 0.0299, 0.0735, 0.0023],
         [0.7604, 0.0133, 0.0034,  ..., 0.9101, 0.6909, 0.0023],
         [0.1256, 0.9602, 0.9898,  ..., 0.0301, 0.1621, 0.0023]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9236, 0.0492, 0.0442,  ..., 0.9552, 0.8866, 0.0343],
         [0.0190, 0.0492, 0.0750,  ..., 0.0149, 0.0443, 0.0343],
         [0.0384, 0.0492, 0.0442,  ..., 0.0149, 0.0345, 0.0393],
         [0.0190, 0.8523, 0.8366,  ..., 0.0149, 0.0345, 0.8920]],
        [[0.1788, 0.0075, 0.0162,  ..., 0.0745, 0.0302, 0.0080],
         [0.3108, 0.0075, 0.0162,  ..., 0.0745, 0.0302, 0.0080],
         [0.3925, 0.0075, 0.0162,  ..., 0.0916, 0.9095, 0.9759],
         [0.1179, 0.9774, 0.9515,  ..., 0.7595, 0.0302, 0.0080]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0502, 0.0113, 0.7826,  ..., 0.0295, 0.0575, 0.0197],
         [0.0502, 0.0113, 0.1235,  ..., 0.0295, 0.1134, 0.0197],
         [0.8494, 0.0113, 0.0469,  ..., 0.9115, 0.0575, 0.9409],
         [0.0502, 0.9661, 0.0469,  ..., 0.0295, 0.7716, 0.0197]],
        [[0.0366, 0.0039, 0.1347,  ..., 0.0268, 0.0253, 0.9165],
         [0.0366, 0.0039, 0.1131,  ..., 0.0268, 0.0253, 0.0549],
         [0.8499, 0.0039, 0.2167,  ..., 0.9108, 0.9242, 0.0143],
         [0.0768, 0.9884, 0.5354,  ..., 0.0356, 0.0253, 0.0143]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9704, 0.0135, 0.0234,  ..., 0.9332, 0.7165, 0.0610],
         [0.0109, 0.0135, 0.0234,  ..., 0.0219, 0.1368, 0.0610],
         [0.0094, 0.0135, 0.0234,  ..., 0.0230, 0.0753, 0.1020],
         [0.0094, 0.9594, 0.9297,  ..., 0.0219, 0.0713, 0.7761]],
        [[0.0264, 0.0126, 0.0543,  ..., 0.0226, 0.0087, 0.0198],
         [0.0264, 0.0126, 0.0572,  ..., 0.0226, 0.0087, 0.0207],
         [0.9208, 0.0126, 0.0543,  ..., 0.0226, 0.9740, 0.9397],
         [0.0264, 0.9622, 0.8342,  ..., 0.9321, 0.0087, 0.0198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:38,575 [Process: 0] Synchronize training processes
2024-08-18 19:46:38,575 [Process: 0] Evaluating...
2024-08-18 19:46:38,577 [Process: 0] EPOCH 99:
2024-08-18 19:46:38,579 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0242, 0.0533, 0.7639,  ..., 0.0108, 0.0314, 0.0424],
         [0.0242, 0.0533, 0.0935,  ..., 0.0108, 0.0314, 0.0424],
         [0.9275, 0.0533, 0.0713,  ..., 0.9677, 0.0314, 0.8727],
         [0.0242, 0.8402, 0.0713,  ..., 0.0108, 0.9059, 0.0424]],
        [[0.0399, 0.0016, 0.0281,  ..., 0.0398, 0.0602, 0.9874],
         [0.0399, 0.0028, 0.0289,  ..., 0.0398, 0.0602, 0.0042],
         [0.8772, 0.0016, 0.0281,  ..., 0.8743, 0.8195, 0.0042],
         [0.0431, 0.9941, 0.9149,  ..., 0.0462, 0.0602, 0.0042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8272, 0.0292, 0.0127,  ..., 0.9005, 0.7887, 0.0438],
         [0.0342, 0.0292, 0.0127,  ..., 0.0300, 0.1074, 0.0438],
         [0.1043, 0.0292, 0.0127,  ..., 0.0395, 0.0519, 0.0438],
         [0.0342, 0.9125, 0.9619,  ..., 0.0300, 0.0519, 0.8687]],
        [[0.2358, 0.0569, 0.0327,  ..., 0.0726, 0.0967, 0.0015],
         [0.4350, 0.0604, 0.0327,  ..., 0.0726, 0.1666, 0.0015],
         [0.1989, 0.0569, 0.0327,  ..., 0.0726, 0.6399, 0.9954],
         [0.1303, 0.8258, 0.9019,  ..., 0.7821, 0.0967, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0417, 0.0511, 0.3012,  ..., 0.0148, 0.1428, 0.0464],
         [0.0438, 0.1939, 0.5534,  ..., 0.0148, 0.1198, 0.0464],
         [0.8728, 0.0511, 0.0727,  ..., 0.9555, 0.1198, 0.8607],
         [0.0417, 0.7038, 0.0727,  ..., 0.0148, 0.6177, 0.0464]],
        [[0.0313, 0.0254, 0.0029,  ..., 0.0177, 0.0293, 0.8702],
         [0.0304, 0.0706, 0.0029,  ..., 0.0177, 0.0293, 0.0685],
         [0.9080, 0.0254, 0.0029,  ..., 0.9470, 0.9120, 0.0307],
         [0.0304, 0.8787, 0.9912,  ..., 0.0177, 0.0293, 0.0307]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:39,731 [Process: 0] Synchronize training processes
2024-08-18 19:46:39,731 [Process: 0] Evaluating...
2024-08-18 19:46:39,733 [Process: 0] EPOCH 100:
2024-08-18 19:46:39,735 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:40,887 [Process: 0] Synchronize training processes
2024-08-18 19:46:40,887 [Process: 0] Evaluating...
2024-08-18 19:46:40,889 [Process: 0] EPOCH 101:
2024-08-18 19:46:40,891 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9255, 0.0426, 0.0378,  ..., 0.9739, 0.3989, 0.0293],
         [0.0262, 0.0426, 0.0378,  ..., 0.0086, 0.1600, 0.0293],
         [0.0242, 0.0426, 0.0378,  ..., 0.0089, 0.3248, 0.0293],
         [0.0242, 0.8723, 0.8867,  ..., 0.0086, 0.1163, 0.9122]],
        [[0.2126, 0.0935, 0.1124,  ..., 0.0202, 0.1772, 0.0165],
         [0.3449, 0.1126, 0.1596,  ..., 0.0202, 0.3364, 0.0165],
         [0.2769, 0.1141, 0.1124,  ..., 0.0202, 0.3475, 0.9504],
         [0.1656, 0.6798, 0.6156,  ..., 0.9393, 0.1389, 0.0165]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0286, 0.1050, 0.3456,  ..., 0.0322, 0.1406, 0.1157],
         [0.0322, 0.1050, 0.5162,  ..., 0.0342, 0.1329, 0.1114],
         [0.9106, 0.5330, 0.0691,  ..., 0.9015, 0.1632, 0.6037],
         [0.0286, 0.2571, 0.0691,  ..., 0.0322, 0.5633, 0.1692]],
        [[0.0472, 0.0470, 0.0046,  ..., 0.0230, 0.0265, 0.9829],
         [0.0357, 0.0696, 0.0046,  ..., 0.0230, 0.0265, 0.0057],
         [0.8815, 0.0470, 0.0046,  ..., 0.9310, 0.9204, 0.0057],
         [0.0357, 0.8364, 0.9862,  ..., 0.0230, 0.0265, 0.0057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3966, 0.0271, 0.0271,  ..., 0.9679, 0.5483, 0.0292],
         [0.1915, 0.0271, 0.0271,  ..., 0.0107, 0.2165, 0.0292],
         [0.3102, 0.0271, 0.0296,  ..., 0.0107, 0.1361, 0.0315],
         [0.1017, 0.9188, 0.9162,  ..., 0.0107, 0.0991, 0.9100]],
        [[0.2089, 0.0374, 0.0276,  ..., 0.0473, 0.1512, 0.0058],
         [0.5021, 0.0374, 0.0276,  ..., 0.0473, 0.3885, 0.0058],
         [0.1388, 0.0374, 0.0276,  ..., 0.0473, 0.3242, 0.9827],
         [0.1502, 0.8877, 0.9172,  ..., 0.8580, 0.1360, 0.0058]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0228, 0.0146, 0.8838,  ..., 0.0360, 0.1089, 0.0838],
         [0.0228, 0.0146, 0.0373,  ..., 0.0360, 0.1089, 0.0838],
         [0.9316, 0.0146, 0.0373,  ..., 0.8920, 0.1475, 0.7270],
         [0.0228, 0.9562, 0.0415,  ..., 0.0360, 0.6348, 0.1053]],
        [[0.0180, 0.0060, 0.0026,  ..., 0.0258, 0.0360, 0.9130],
         [0.0179, 0.0190, 0.0026,  ..., 0.0258, 0.0360, 0.0359],
         [0.9462, 0.0060, 0.0026,  ..., 0.9227, 0.8920, 0.0255],
         [0.0179, 0.9690, 0.9921,  ..., 0.0258, 0.0360, 0.0255]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:42,041 [Process: 0] Synchronize training processes
2024-08-18 19:46:42,042 [Process: 0] Evaluating...
2024-08-18 19:46:42,048 [Process: 0] EPOCH 102:
2024-08-18 19:46:42,050 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:43,202 [Process: 0] Synchronize training processes
2024-08-18 19:46:43,202 [Process: 0] Evaluating...
2024-08-18 19:46:43,204 [Process: 0] EPOCH 103:
2024-08-18 19:46:43,205 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6336, 0.0113, 0.0151,  ..., 0.9804, 0.7180, 0.0390],
         [0.0681, 0.0113, 0.0151,  ..., 0.0066, 0.0612, 0.0390],
         [0.2339, 0.0113, 0.0151,  ..., 0.0065, 0.1595, 0.0390],
         [0.0645, 0.9660, 0.9546,  ..., 0.0065, 0.0612, 0.8831]],
        [[0.1885, 0.0256, 0.0307,  ..., 0.0533, 0.0641, 0.0087],
         [0.4439, 0.0256, 0.0307,  ..., 0.0533, 0.0805, 0.0087],
         [0.2192, 0.0256, 0.0307,  ..., 0.0769, 0.7912, 0.9739],
         [0.1485, 0.9231, 0.9080,  ..., 0.8165, 0.0641, 0.0087]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6382e-02, 2.4608e-02, 6.6264e-01,  ..., 2.8675e-02,
          1.2950e-01, 3.6090e-02],
         [1.6382e-02, 3.9768e-02, 1.8695e-01,  ..., 2.8675e-02,
          1.1700e-01, 3.6090e-02],
         [9.5085e-01, 2.4608e-02, 7.5204e-02,  ..., 9.1397e-01,
          5.0556e-01, 8.9173e-01],
         [1.6382e-02, 9.1102e-01, 7.5204e-02,  ..., 2.8675e-02,
          2.4794e-01, 3.6090e-02]],
        [[2.6364e-02, 1.3734e-02, 6.0446e-04,  ..., 3.7072e-02,
          1.5237e-02, 9.5838e-01],
         [2.6364e-02, 1.3734e-02, 6.0446e-04,  ..., 3.7072e-02,
          1.5237e-02, 1.2310e-02],
         [9.2091e-01, 1.3734e-02, 6.0446e-04,  ..., 8.8878e-01,
          9.5429e-01, 1.3004e-02],
         [2.6364e-02, 9.5880e-01, 9.9819e-01,  ..., 3.7072e-02,
          1.5237e-02, 1.6307e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9583, 0.0391, 0.0621,  ..., 0.9896, 0.2036, 0.0251],
         [0.0138, 0.0417, 0.0689,  ..., 0.0035, 0.2916, 0.0251],
         [0.0141, 0.0391, 0.0621,  ..., 0.0035, 0.3668, 0.0251],
         [0.0138, 0.8802, 0.8070,  ..., 0.0035, 0.1380, 0.9247]],
        [[0.1792, 0.0491, 0.0336,  ..., 0.0239, 0.0566, 0.0228],
         [0.4342, 0.0489, 0.0336,  ..., 0.0244, 0.0727, 0.0228],
         [0.2182, 0.0489, 0.0336,  ..., 0.9279, 0.8141, 0.9317],
         [0.1684, 0.8531, 0.8992,  ..., 0.0239, 0.0566, 0.0228]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:44,355 [Process: 0] Synchronize training processes
2024-08-18 19:46:44,355 [Process: 0] Evaluating...
2024-08-18 19:46:44,357 [Process: 0] EPOCH 104:
2024-08-18 19:46:44,359 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0942, 0.0480, 0.5086,  ..., 0.0336, 0.0718, 0.0233],
         [0.0863, 0.0473, 0.3333,  ..., 0.0336, 0.0700, 0.0233],
         [0.7333, 0.0473, 0.0790,  ..., 0.8993, 0.7080, 0.9300],
         [0.0863, 0.8573, 0.0790,  ..., 0.0336, 0.1503, 0.0233]],
        [[0.1057, 0.0125, 0.0033,  ..., 0.0254, 0.0384, 0.9883],
         [0.0507, 0.0154, 0.0061,  ..., 0.0254, 0.0384, 0.0034],
         [0.7929, 0.0125, 0.0033,  ..., 0.9239, 0.8849, 0.0034],
         [0.0507, 0.9596, 0.9873,  ..., 0.0254, 0.0384, 0.0049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9608, 0.0281, 0.0294,  ..., 0.9502, 0.0312, 0.0168],
         [0.0142, 0.0281, 0.0315,  ..., 0.0155, 0.0362, 0.0168],
         [0.0125, 0.0281, 0.0294,  ..., 0.0155, 0.9014, 0.0168],
         [0.0125, 0.9156, 0.9097,  ..., 0.0188, 0.0312, 0.9495]],
        [[0.2162, 0.0283, 0.0316,  ..., 0.0261, 0.1473, 0.0064],
         [0.4397, 0.0283, 0.0316,  ..., 0.0261, 0.1648, 0.0064],
         [0.2041, 0.0289, 0.0316,  ..., 0.0261, 0.5847, 0.9809],
         [0.1400, 0.9146, 0.9052,  ..., 0.9218, 0.1033, 0.0064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1561, 0.0078, 0.5790,  ..., 0.0179, 0.1208, 0.0169],
         [0.1531, 0.0078, 0.2353,  ..., 0.0179, 0.1005, 0.0169],
         [0.4095, 0.0078, 0.0845,  ..., 0.9464, 0.6782, 0.9492],
         [0.2813, 0.9767, 0.1012,  ..., 0.0179, 0.1005, 0.0169]],
        [[0.1598, 0.0329, 0.0071,  ..., 0.0403, 0.0273, 0.9910],
         [0.0722, 0.2395, 0.0131,  ..., 0.0447, 0.0273, 0.0030],
         [0.6959, 0.0324, 0.0071,  ..., 0.8747, 0.9182, 0.0030],
         [0.0722, 0.6952, 0.9727,  ..., 0.0403, 0.0273, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7967, 0.0327, 0.0086,  ..., 0.9902, 0.0274, 0.0101],
         [0.0578, 0.0327, 0.0086,  ..., 0.0033, 0.0339, 0.0101],
         [0.0877, 0.0327, 0.0086,  ..., 0.0033, 0.9113, 0.0101],
         [0.0578, 0.9018, 0.9742,  ..., 0.0033, 0.0274, 0.9696]],
        [[0.1920, 0.0458, 0.0182,  ..., 0.0631, 0.0199, 0.0272],
         [0.3421, 0.0438, 0.0182,  ..., 0.0762, 0.0235, 0.0272],
         [0.3248, 0.0438, 0.0182,  ..., 0.0631, 0.9367, 0.9184],
         [0.1410, 0.8666, 0.9455,  ..., 0.7976, 0.0199, 0.0272]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:45,513 [Process: 0] Synchronize training processes
2024-08-18 19:46:45,514 [Process: 0] Evaluating...
2024-08-18 19:46:45,515 [Process: 0] EPOCH 105:
2024-08-18 19:46:45,517 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:46,667 [Process: 0] Synchronize training processes
2024-08-18 19:46:46,667 [Process: 0] Evaluating...
2024-08-18 19:46:46,669 [Process: 0] EPOCH 106:
2024-08-18 19:46:46,671 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1448, 0.0181, 0.7355,  ..., 0.0237, 0.1663, 0.0248],
         [0.2280, 0.0184, 0.1478,  ..., 0.0237, 0.1344, 0.0248],
         [0.2391, 0.0181, 0.0583,  ..., 0.9288, 0.2813, 0.9257],
         [0.3881, 0.9454, 0.0583,  ..., 0.0237, 0.4180, 0.0248]],
        [[0.0420, 0.0137, 0.0083,  ..., 0.0477, 0.0424, 0.9769],
         [0.0420, 0.0085, 0.0083,  ..., 0.0477, 0.0668, 0.0077],
         [0.8739, 0.0085, 0.0083,  ..., 0.8568, 0.8484, 0.0077],
         [0.0420, 0.9694, 0.9750,  ..., 0.0477, 0.0424, 0.0077]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9579, 0.0126, 0.0293,  ..., 0.9960, 0.0500, 0.0249],
         [0.0176, 0.0127, 0.0293,  ..., 0.0013, 0.0500, 0.0249],
         [0.0123, 0.0126, 0.0293,  ..., 0.0013, 0.8499, 0.0249],
         [0.0123, 0.9622, 0.9120,  ..., 0.0013, 0.0500, 0.9252]],
        [[0.2069, 0.2260, 0.0148,  ..., 0.1233, 0.0159, 0.0162],
         [0.2932, 0.2060, 0.0148,  ..., 0.1165, 0.0159, 0.0162],
         [0.3763, 0.1488, 0.0148,  ..., 0.6465, 0.9523, 0.9513],
         [0.1236, 0.4192, 0.9556,  ..., 0.1136, 0.0159, 0.0162]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1544, 0.0539, 0.9134,  ..., 0.0139, 0.0538, 0.0163],
         [0.2538, 0.0519, 0.0317,  ..., 0.0139, 0.0536, 0.0163],
         [0.1914, 0.8423, 0.0275,  ..., 0.9582, 0.8389, 0.9510],
         [0.4004, 0.0519, 0.0275,  ..., 0.0139, 0.0536, 0.0163]],
        [[0.0609, 0.0034, 0.0018,  ..., 0.0414, 0.0464, 0.9901],
         [0.0497, 0.0049, 0.0018,  ..., 0.0414, 0.0464, 0.0033],
         [0.8396, 0.0034, 0.0018,  ..., 0.8486, 0.7953, 0.0033],
         [0.0497, 0.9882, 0.9946,  ..., 0.0685, 0.1119, 0.0033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:47,819 [Process: 0] Synchronize training processes
2024-08-18 19:46:47,820 [Process: 0] Evaluating...
2024-08-18 19:46:47,821 [Process: 0] EPOCH 107:
2024-08-18 19:46:47,823 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:48,975 [Process: 0] Synchronize training processes
2024-08-18 19:46:48,975 [Process: 0] Evaluating...
2024-08-18 19:46:48,977 [Process: 0] EPOCH 108:
2024-08-18 19:46:48,979 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7252, 0.0695, 0.0225,  ..., 0.9867, 0.1547, 0.0243],
         [0.0769, 0.0848, 0.0225,  ..., 0.0044, 0.1795, 0.0243],
         [0.1209, 0.0717, 0.0225,  ..., 0.0044, 0.4220, 0.0264],
         [0.0769, 0.7740, 0.9326,  ..., 0.0044, 0.2438, 0.9250]],
        [[0.2204, 0.0868, 0.0162,  ..., 0.1530, 0.0088, 0.0122],
         [0.2521, 0.0868, 0.0162,  ..., 0.2420, 0.0088, 0.0122],
         [0.3746, 0.0981, 0.0162,  ..., 0.3829, 0.9735, 0.9635],
         [0.1529, 0.7283, 0.9514,  ..., 0.2221, 0.0088, 0.0122]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1929, 0.0726, 0.2373,  ..., 0.0213, 0.0039, 0.0286],
         [0.2477, 0.0620, 0.5951,  ..., 0.0213, 0.0039, 0.0286],
         [0.3599, 0.0783, 0.0792,  ..., 0.9360, 0.0039, 0.9141],
         [0.1996, 0.7871, 0.0884,  ..., 0.0213, 0.9882, 0.0286]],
        [[0.0649, 0.0036, 0.0516,  ..., 0.0136, 0.0153, 0.9833],
         [0.0527, 0.0084, 0.0683,  ..., 0.0136, 0.0153, 0.0077],
         [0.8297, 0.0036, 0.0575,  ..., 0.9593, 0.9542, 0.0045],
         [0.0527, 0.9843, 0.8226,  ..., 0.0136, 0.0153, 0.0045]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8229, 0.1695, 0.0760,  ..., 0.9363, 0.0634, 0.0872],
         [0.0696, 0.3123, 0.0640,  ..., 0.0251, 0.0634, 0.0872],
         [0.0538, 0.2216, 0.0640,  ..., 0.0193, 0.8099, 0.1049],
         [0.0538, 0.2966, 0.7960,  ..., 0.0193, 0.0634, 0.7208]],
        [[0.1911, 0.0961, 0.0153,  ..., 0.1579, 0.0075, 0.0124],
         [0.3243, 0.0900, 0.0153,  ..., 0.2450, 0.0075, 0.0124],
         [0.3054, 0.1318, 0.0153,  ..., 0.3685, 0.9776, 0.9627],
         [0.1792, 0.6821, 0.9542,  ..., 0.2286, 0.0075, 0.0124]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0773, 0.0066, 0.0820,  ..., 0.0192, 0.1478, 0.0273],
         [0.0790, 0.0066, 0.2657,  ..., 0.0192, 0.2757, 0.0273],
         [0.0841, 0.9801, 0.0820,  ..., 0.9425, 0.1106, 0.9181],
         [0.7596, 0.0066, 0.5703,  ..., 0.0192, 0.4659, 0.0273]],
        [[0.0340, 0.0561, 0.0011,  ..., 0.0416, 0.0309, 0.9635],
         [0.0340, 0.6953, 0.0011,  ..., 0.0416, 0.0309, 0.0118],
         [0.7880, 0.0529, 0.0011,  ..., 0.8751, 0.9056, 0.0118],
         [0.1440, 0.1957, 0.9968,  ..., 0.0416, 0.0326, 0.0129]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:50,130 [Process: 0] Synchronize training processes
2024-08-18 19:46:50,131 [Process: 0] Evaluating...
2024-08-18 19:46:50,132 [Process: 0] EPOCH 109:
2024-08-18 19:46:50,134 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:51,287 [Process: 0] Synchronize training processes
2024-08-18 19:46:51,287 [Process: 0] Evaluating...
2024-08-18 19:46:51,289 [Process: 0] EPOCH 110:
2024-08-18 19:46:51,291 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8250, 0.2945, 0.0629,  ..., 0.9908, 0.0931, 0.0945],
         [0.0561, 0.2543, 0.0774,  ..., 0.0033, 0.0844, 0.1237],
         [0.0652, 0.2636, 0.0896,  ..., 0.0030, 0.7394, 0.1337],
         [0.0537, 0.1877, 0.7700,  ..., 0.0030, 0.0831, 0.6480]],
        [[0.1490, 0.2627, 0.1575,  ..., 0.2012, 0.0266, 0.0180],
         [0.1184, 0.2488, 0.1649,  ..., 0.1929, 0.0266, 0.0180],
         [0.6296, 0.2639, 0.2482,  ..., 0.4390, 0.9203, 0.9460],
         [0.1029, 0.2247, 0.4294,  ..., 0.1668, 0.0266, 0.0180]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1108e-02, 8.9776e-01, 1.7057e-01,  ..., 1.0145e-02,
          2.3478e-01, 1.7568e-02],
         [2.1108e-02, 4.8377e-02, 5.5843e-01,  ..., 1.0145e-02,
          1.6647e-01, 1.7568e-02],
         [9.3668e-01, 2.6934e-02, 8.3491e-02,  ..., 9.6957e-01,
          3.4400e-01, 9.4730e-01],
         [2.1108e-02, 2.6934e-02, 1.8751e-01,  ..., 1.0145e-02,
          2.5475e-01, 1.7568e-02]],
        [[6.7483e-03, 4.1458e-02, 2.1713e-02,  ..., 8.2299e-02,
          4.0177e-02, 9.9709e-01],
         [6.7483e-03, 5.1429e-02, 2.1713e-02,  ..., 7.9977e-02,
          4.0177e-02, 9.8461e-04],
         [9.7352e-01, 3.8792e-02, 9.3486e-01,  ..., 7.5568e-01,
          8.7947e-01, 9.6323e-04],
         [1.2982e-02, 8.6832e-01, 2.1713e-02,  ..., 8.2047e-02,
          4.0177e-02, 9.6323e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4934, 0.1411, 0.0306,  ..., 0.9780, 0.3029, 0.0141],
         [0.1799, 0.1424, 0.0306,  ..., 0.0073, 0.1234, 0.0141],
         [0.1959, 0.1994, 0.0604,  ..., 0.0073, 0.4788, 0.0321],
         [0.1307, 0.5171, 0.8785,  ..., 0.0073, 0.0949, 0.9397]],
        [[0.0131, 0.2472, 0.2690,  ..., 0.0421, 0.1278, 0.0218],
         [0.0131, 0.2248, 0.2305,  ..., 0.0421, 0.1278, 0.0218],
         [0.9606, 0.3689, 0.3130,  ..., 0.8737, 0.3006, 0.9347],
         [0.0131, 0.1592, 0.1875,  ..., 0.0421, 0.4438, 0.0218]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:46:52,445 [Process: 0] Synchronize training processes
2024-08-18 19:46:52,445 [Process: 0] Evaluating...
2024-08-18 19:46:52,447 [Process: 0] EPOCH 111:
2024-08-18 19:46:52,449 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2511e-02, 9.5572e-01, 9.2649e-01,  ..., 2.2812e-02,
          9.8126e-01, 6.9422e-02],
         [7.2511e-02, 1.7982e-02, 3.5625e-02,  ..., 2.2812e-02,
          5.4216e-03, 6.9422e-02],
         [7.8247e-01, 1.1185e-02, 1.7562e-02,  ..., 9.3156e-01,
          5.4216e-03, 7.9173e-01],
         [7.2511e-02, 1.5117e-02, 2.0322e-02,  ..., 2.2812e-02,
          7.9013e-03, 6.9422e-02]],
        [[6.7315e-04, 5.6980e-02, 1.5088e-03,  ..., 2.8763e-02,
          2.6603e-02, 9.7715e-01],
         [6.7315e-04, 3.9072e-01, 1.5088e-03,  ..., 2.8763e-02,
          2.6603e-02, 1.5622e-02],
         [9.8687e-01, 3.9861e-02, 1.9774e-03,  ..., 9.1371e-01,
          9.2019e-01, 2.7420e-03],
         [1.1779e-02, 5.1244e-01, 9.9500e-01,  ..., 2.8763e-02,
          2.6603e-02, 4.4816e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2625, 0.0051, 0.0395,  ..., 0.7879, 0.2282, 0.0294],
         [0.1537, 0.0051, 0.0481,  ..., 0.0705, 0.0964, 0.0294],
         [0.3479, 0.0075, 0.0403,  ..., 0.0465, 0.5790, 0.0502],
         [0.2359, 0.9822, 0.8721,  ..., 0.0950, 0.0964, 0.8910]],
        [[0.1131, 0.0087, 0.0633,  ..., 0.1587, 0.0947, 0.0042],
         [0.1131, 0.0070, 0.0633,  ..., 0.1064, 0.0751, 0.0042],
         [0.3548, 0.0080, 0.1194,  ..., 0.6286, 0.7552, 0.9875],
         [0.4190, 0.9763, 0.7541,  ..., 0.1064, 0.0751, 0.0042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7855e-01, 1.4934e-01, 9.6095e-01,  ..., 7.1212e-02,
          1.1371e-01, 1.2730e-01],
         [1.2828e-01, 1.9600e-01, 1.3144e-02,  ..., 7.1212e-02,
          1.1341e-01, 1.0964e-01],
         [5.6490e-01, 3.3190e-01, 1.2952e-02,  ..., 7.8636e-01,
          3.6633e-01, 6.5341e-01],
         [1.2828e-01, 3.2276e-01, 1.2952e-02,  ..., 7.1212e-02,
          4.0655e-01, 1.0964e-01]],
        [[9.8316e-05, 1.1641e-02, 2.7174e-04,  ..., 1.1913e-02,
          2.4380e-02, 9.6894e-01],
         [9.8316e-05, 1.7757e-02, 2.7174e-04,  ..., 1.1913e-02,
          2.4380e-02, 1.7037e-02],
         [9.9908e-01, 1.7056e-02, 3.1205e-04,  ..., 9.6426e-01,
          9.2686e-01, 7.0127e-03],
         [7.1912e-04, 9.5355e-01, 9.9914e-01,  ..., 1.1913e-02,
          2.4380e-02, 7.0127e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:46:53,607 [Process: 0] Synchronize training processes
2024-08-18 19:46:53,608 [Process: 0] Evaluating...
2024-08-18 19:46:53,614 [Process: 0] EPOCH 112:
2024-08-18 19:46:53,616 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:54,775 [Process: 0] Synchronize training processes
2024-08-18 19:46:54,775 [Process: 0] Evaluating...
2024-08-18 19:46:54,777 [Process: 0] EPOCH 113:
2024-08-18 19:46:54,779 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1241, 0.0758, 0.0256,  ..., 0.9805, 0.2545, 0.0131],
         [0.1154, 0.0758, 0.0285,  ..., 0.0067, 0.1630, 0.0131],
         [0.3294, 0.1663, 0.0256,  ..., 0.0064, 0.3620, 0.0301],
         [0.4311, 0.6821, 0.9204,  ..., 0.0064, 0.2204, 0.9437]],
        [[0.1549, 0.0574, 0.0130,  ..., 0.0976, 0.0386, 0.0168],
         [0.1361, 0.0574, 0.0130,  ..., 0.0976, 0.0386, 0.0168],
         [0.4261, 0.1369, 0.0364,  ..., 0.2875, 0.8842, 0.9497],
         [0.2829, 0.7483, 0.9376,  ..., 0.5172, 0.0386, 0.0168]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6632e-01, 1.5863e-01, 9.7677e-01,  ..., 1.3991e-01,
          1.9268e-01, 1.5074e-01],
         [1.2770e-01, 1.3335e-01, 1.1198e-02,  ..., 1.1842e-01,
          1.3920e-01, 1.1835e-01],
         [5.7829e-01, 4.2609e-01, 6.0184e-03,  ..., 6.2325e-01,
          4.5397e-01, 6.1255e-01],
         [1.2770e-01, 2.8192e-01, 6.0184e-03,  ..., 1.1842e-01,
          2.1415e-01, 1.1835e-01]],
        [[9.6439e-05, 4.3403e-03, 2.7580e-03,  ..., 3.8293e-02,
          3.7047e-02, 9.2432e-01],
         [9.6439e-05, 5.3563e-03, 2.7580e-03,  ..., 3.8293e-02,
          3.7047e-02, 3.8362e-02],
         [9.9971e-01, 4.3403e-03, 6.7204e-03,  ..., 8.8512e-01,
          8.8886e-01, 8.8198e-03],
         [9.6439e-05, 9.8596e-01, 9.8776e-01,  ..., 3.8293e-02,
          3.7047e-02, 2.8495e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2059, 0.0136, 0.0215,  ..., 0.6254, 0.2298, 0.0078],
         [0.1445, 0.0136, 0.0215,  ..., 0.0878, 0.1506, 0.0078],
         [0.4364, 0.0283, 0.0383,  ..., 0.0581, 0.4162, 0.0185],
         [0.2131, 0.9445, 0.9188,  ..., 0.2287, 0.2034, 0.9660]],
        [[0.1611, 0.0123, 0.0175,  ..., 0.1142, 0.0294, 0.0084],
         [0.1342, 0.0123, 0.0175,  ..., 0.1086, 0.0294, 0.0084],
         [0.4326, 0.0311, 0.0462,  ..., 0.4083, 0.9119, 0.9749],
         [0.2720, 0.9444, 0.9188,  ..., 0.3690, 0.0294, 0.0084]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6743e-01, 6.7056e-02, 8.4597e-01,  ..., 1.4849e-01,
          4.4394e-02, 6.5287e-02],
         [1.3753e-01, 5.5550e-02, 5.0864e-02,  ..., 1.2878e-01,
          4.4394e-02, 6.5287e-02],
         [5.4887e-01, 1.6873e-01, 4.2316e-02,  ..., 5.8891e-01,
          1.3458e-01, 8.0414e-01],
         [1.4617e-01, 7.0866e-01, 6.0851e-02,  ..., 1.3382e-01,
          7.7663e-01, 6.5287e-02]],
        [[3.5486e-01, 2.8259e-03, 4.2046e-04,  ..., 7.9481e-02,
          1.4260e-01, 9.0296e-01],
         [4.9585e-02, 2.8259e-03, 4.2046e-04,  ..., 7.9249e-02,
          1.2179e-01, 5.2873e-02],
         [5.4597e-01, 7.5101e-03, 9.1169e-04,  ..., 7.6202e-01,
          6.1082e-01, 1.8958e-02],
         [4.9585e-02, 9.8684e-01, 9.9825e-01,  ..., 7.9249e-02,
          1.2478e-01, 2.5210e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:55,933 [Process: 0] Synchronize training processes
2024-08-18 19:46:55,934 [Process: 0] Evaluating...
2024-08-18 19:46:55,935 [Process: 0] EPOCH 114:
2024-08-18 19:46:55,937 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:57,087 [Process: 0] Synchronize training processes
2024-08-18 19:46:57,087 [Process: 0] Evaluating...
2024-08-18 19:46:57,089 [Process: 0] EPOCH 115:
2024-08-18 19:46:57,091 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2062, 0.0138, 0.0375,  ..., 0.9722, 0.1963, 0.0510],
         [0.1385, 0.0138, 0.0349,  ..., 0.0121, 0.1512, 0.0421],
         [0.3693, 0.0222, 0.0706,  ..., 0.0078, 0.4362, 0.1014],
         [0.2860, 0.9502, 0.8570,  ..., 0.0078, 0.2164, 0.8054]],
        [[0.1727, 0.0291, 0.0075,  ..., 0.0887, 0.0939, 0.1591],
         [0.1390, 0.0291, 0.0075,  ..., 0.0758, 0.0897, 0.1254],
         [0.4074, 0.0699, 0.0218,  ..., 0.2110, 0.7267, 0.5900],
         [0.2809, 0.8720, 0.9633,  ..., 0.6245, 0.0897, 0.1254]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5366e-01, 1.0711e-01, 2.9230e-01,  ..., 1.0412e-01,
          7.3887e-02, 1.6388e-01],
         [1.2191e-01, 9.7860e-02, 1.8278e-01,  ..., 9.8262e-02,
          7.3887e-02, 1.2958e-01],
         [6.0252e-01, 6.9717e-01, 2.8685e-01,  ..., 6.9935e-01,
          7.7834e-01, 5.7697e-01],
         [1.2191e-01, 9.7860e-02, 2.3807e-01,  ..., 9.8262e-02,
          7.3887e-02, 1.2958e-01]],
        [[2.9498e-07, 1.3237e-02, 1.0906e-03,  ..., 2.9741e-02,
          4.5684e-02, 9.9791e-01],
         [2.9498e-07, 4.5418e-02, 1.0906e-03,  ..., 2.9741e-02,
          4.5684e-02, 4.8291e-04],
         [9.9992e-01, 1.2427e-02, 3.9552e-03,  ..., 9.1078e-01,
          7.2622e-01, 4.8291e-04],
         [7.4472e-05, 9.2892e-01, 9.9386e-01,  ..., 2.9741e-02,
          1.8242e-01, 1.1242e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2073, 0.0470, 0.0762,  ..., 0.9912, 0.2096, 0.1108],
         [0.1320, 0.0266, 0.0637,  ..., 0.0044, 0.1381, 0.0733],
         [0.3546, 0.0395, 0.0738,  ..., 0.0022, 0.3873, 0.1682],
         [0.3060, 0.8869, 0.7863,  ..., 0.0022, 0.2650, 0.6477]],
        [[0.2180, 0.0086, 0.0397,  ..., 0.0909, 0.1279, 0.1885],
         [0.1248, 0.0081, 0.0327,  ..., 0.0687, 0.1104, 0.1338],
         [0.3734, 0.0217, 0.0965,  ..., 0.1478, 0.6514, 0.4571],
         [0.2837, 0.9616, 0.8312,  ..., 0.6926, 0.1104, 0.2206]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:46:58,243 [Process: 0] Synchronize training processes
2024-08-18 19:46:58,243 [Process: 0] Evaluating...
2024-08-18 19:46:58,245 [Process: 0] EPOCH 116:
2024-08-18 19:46:58,246 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:46:59,400 [Process: 0] Synchronize training processes
2024-08-18 19:46:59,401 [Process: 0] Evaluating...
2024-08-18 19:46:59,402 [Process: 0] EPOCH 117:
2024-08-18 19:46:59,404 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8856e-01, 7.2120e-02, 2.2951e-01,  ..., 1.8598e-01,
          6.9366e-02, 2.0254e-01],
         [1.3170e-01, 7.2120e-02, 1.3335e-01,  ..., 1.3364e-01,
          6.9366e-02, 1.4069e-01],
         [5.1085e-01, 7.8364e-01, 3.7154e-01,  ..., 5.2003e-01,
          7.9190e-01, 4.8648e-01],
         [1.6889e-01, 7.2120e-02, 2.6561e-01,  ..., 1.6035e-01,
          6.9366e-02, 1.7029e-01]],
        [[6.4630e-07, 3.8414e-03, 1.1821e-03,  ..., 1.8967e-02,
          3.1849e-02, 9.7946e-01],
         [6.4630e-07, 5.7323e-03, 6.1753e-04,  ..., 1.8967e-02,
          3.1849e-02, 2.1970e-03],
         [1.0000e+00, 3.0320e-03, 9.6191e-04,  ..., 9.4310e-01,
          9.0445e-01, 2.1970e-03],
         [6.4630e-07, 9.8739e-01, 9.9724e-01,  ..., 1.8967e-02,
          3.1849e-02, 1.6147e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1477, 0.0544, 0.0048,  ..., 0.3823, 0.2379, 0.0644],
         [0.1204, 0.0372, 0.0044,  ..., 0.1577, 0.1346, 0.0589],
         [0.5980, 0.0666, 0.0093,  ..., 0.0875, 0.4075, 0.1397],
         [0.1339, 0.8418, 0.9815,  ..., 0.3725, 0.2200, 0.7369]],
        [[0.2139, 0.0457, 0.0371,  ..., 0.1510, 0.0718, 0.1722],
         [0.1346, 0.0276, 0.0195,  ..., 0.1044, 0.0718, 0.1251],
         [0.4584, 0.0726, 0.0415,  ..., 0.2594, 0.7845, 0.5278],
         [0.1931, 0.8541, 0.9019,  ..., 0.4851, 0.0718, 0.1749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1907e-01, 1.5650e-01, 2.0436e-01,  ..., 1.9840e-01,
          8.5612e-02, 1.9380e-01],
         [1.3643e-01, 1.2475e-01, 1.4251e-01,  ..., 1.3456e-01,
          8.5612e-02, 1.3517e-01],
         [4.1246e-01, 5.9400e-01, 1.8009e-01,  ..., 4.8836e-01,
          7.4316e-01, 4.9497e-01],
         [2.3204e-01, 1.2475e-01, 4.7304e-01,  ..., 1.7868e-01,
          8.5612e-02, 1.7606e-01]],
        [[5.4826e-08, 5.3061e-03, 4.5503e-03,  ..., 1.0019e-02,
          4.9625e-02, 9.8837e-01],
         [5.4826e-08, 9.8054e-03, 1.0327e-02,  ..., 1.0019e-02,
          4.9625e-02, 1.2610e-03],
         [1.0000e+00, 6.0624e-03, 4.3016e-03,  ..., 9.6994e-01,
          8.5112e-01, 1.2610e-03],
         [5.4826e-08, 9.7883e-01, 9.8082e-01,  ..., 1.0019e-02,
          4.9625e-02, 9.1109e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1779, 0.1467, 0.1300,  ..., 0.9343, 0.2039, 0.0895],
         [0.1250, 0.0759, 0.0629,  ..., 0.0351, 0.1289, 0.0513],
         [0.5123, 0.1565, 0.1135,  ..., 0.0111, 0.4260, 0.0749],
         [0.1848, 0.6208, 0.6936,  ..., 0.0195, 0.2412, 0.7844]],
        [[0.2199, 0.0241, 0.0256,  ..., 0.1346, 0.0226, 0.1990],
         [0.1304, 0.0121, 0.0192,  ..., 0.0626, 0.0226, 0.1222],
         [0.3738, 0.0138, 0.0165,  ..., 0.1340, 0.9321, 0.3253],
         [0.2760, 0.9499, 0.9387,  ..., 0.6688, 0.0226, 0.3535]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:00,555 [Process: 0] Synchronize training processes
2024-08-18 19:47:00,556 [Process: 0] Evaluating...
2024-08-18 19:47:00,557 [Process: 0] EPOCH 118:
2024-08-18 19:47:00,559 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6116e-01, 1.1767e-01, 2.7090e-01,  ..., 1.1826e-01,
          9.5236e-02, 1.9336e-01],
         [1.2808e-01, 1.1059e-01, 1.3550e-01,  ..., 1.0928e-01,
          9.5236e-02, 1.5195e-01],
         [5.4204e-01, 6.6012e-01, 9.1410e-02,  ..., 6.5981e-01,
          7.1429e-01, 4.4707e-01],
         [1.6872e-01, 1.1162e-01, 5.0220e-01,  ..., 1.1266e-01,
          9.5236e-02, 2.0763e-01]],
        [[1.9843e-07, 7.3058e-03, 6.1521e-03,  ..., 1.7424e-02,
          6.9093e-02, 9.9390e-01],
         [1.9843e-07, 4.2122e-03, 1.2462e-02,  ..., 1.7424e-02,
          6.9093e-02, 3.7572e-03],
         [1.0000e+00, 3.1012e-03, 4.8871e-03,  ..., 9.4773e-01,
          7.9272e-01, 8.9893e-04],
         [1.9843e-07, 9.8538e-01, 9.7650e-01,  ..., 1.7424e-02,
          6.9093e-02, 1.4405e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1323, 0.0582, 0.0266,  ..., 0.9890, 0.1896, 0.0119],
         [0.1170, 0.0181, 0.0129,  ..., 0.0026, 0.1129, 0.0246],
         [0.6241, 0.0206, 0.0160,  ..., 0.0026, 0.2193, 0.0103],
         [0.1267, 0.9031, 0.9445,  ..., 0.0057, 0.4782, 0.9532]],
        [[0.0836, 0.2246, 0.1984,  ..., 0.1702, 0.0064, 0.2161],
         [0.0836, 0.1221, 0.1106,  ..., 0.0867, 0.0064, 0.1190],
         [0.7493, 0.2690, 0.2190,  ..., 0.1745, 0.9807, 0.3112],
         [0.0836, 0.3843, 0.4720,  ..., 0.5686, 0.0064, 0.3537]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1421e-01, 1.2733e-01, 1.7748e-01,  ..., 8.1269e-02,
          1.1650e-01, 1.2059e-01],
         [1.1421e-01, 1.1758e-01, 1.2878e-01,  ..., 8.1269e-02,
          1.1187e-01, 1.1600e-01],
         [6.5737e-01, 6.1056e-01, 7.6172e-02,  ..., 7.5619e-01,
          6.1973e-01, 6.3077e-01],
         [1.1421e-01, 1.4454e-01, 6.1757e-01,  ..., 8.1269e-02,
          1.5190e-01, 1.3265e-01]],
        [[8.5393e-08, 3.9944e-03, 3.8630e-03,  ..., 5.1708e-03,
          1.2769e-01, 9.9841e-01],
         [8.5393e-08, 2.0259e-03, 4.7475e-03,  ..., 5.1708e-03,
          1.2273e-01, 3.3155e-04],
         [1.0000e+00, 5.7552e-03, 7.8155e-03,  ..., 9.8449e-01,
          5.9634e-01, 3.3155e-04],
         [8.5393e-08, 9.8822e-01, 9.8357e-01,  ..., 5.1708e-03,
          1.5324e-01, 9.2666e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 19:47:01,712 [Process: 0] Synchronize training processes
2024-08-18 19:47:01,712 [Process: 0] Evaluating...
2024-08-18 19:47:01,714 [Process: 0] EPOCH 119:
2024-08-18 19:47:01,716 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:02,868 [Process: 0] Synchronize training processes
2024-08-18 19:47:02,869 [Process: 0] Evaluating...
2024-08-18 19:47:02,870 [Process: 0] EPOCH 120:
2024-08-18 19:47:02,872 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1147, 0.0997, 0.0405,  ..., 0.9832, 0.2357, 0.0947],
         [0.1110, 0.0522, 0.0298,  ..., 0.0056, 0.1035, 0.0541],
         [0.6521, 0.0493, 0.0539,  ..., 0.0056, 0.0955, 0.0797],
         [0.1222, 0.7987, 0.8757,  ..., 0.0056, 0.5654, 0.7715]],
        [[0.0563, 0.2073, 0.1565,  ..., 0.1522, 0.0031, 0.2213],
         [0.0563, 0.0955, 0.0963,  ..., 0.0692, 0.0031, 0.0893],
         [0.8312, 0.1485, 0.1366,  ..., 0.1149, 0.9908, 0.1393],
         [0.0563, 0.5487, 0.6106,  ..., 0.6638, 0.0031, 0.5502]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4091e-01, 9.9177e-02, 2.6200e-01,  ..., 5.2545e-02,
          1.2929e-01, 1.2378e-01],
         [1.3868e-01, 9.9177e-02, 1.8201e-01,  ..., 5.2545e-02,
          1.2277e-01, 1.1993e-01],
         [5.5447e-01, 6.8210e-01, 6.7213e-02,  ..., 8.4237e-01,
          5.8441e-01, 5.8323e-01],
         [1.6595e-01, 1.1955e-01, 4.8878e-01,  ..., 5.2545e-02,
          1.6352e-01, 1.7306e-01]],
        [[8.1998e-07, 1.9883e-03, 4.2820e-03,  ..., 1.2603e-02,
          1.3069e-01, 9.9377e-01],
         [8.1998e-07, 8.4350e-04, 3.5538e-03,  ..., 1.2603e-02,
          1.2021e-01, 1.1724e-03],
         [1.0000e+00, 2.7924e-03, 1.4157e-03,  ..., 9.6219e-01,
          5.8954e-01, 1.1724e-03],
         [1.3227e-06, 9.9438e-01, 9.9075e-01,  ..., 1.2603e-02,
          1.5956e-01, 3.8861e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0958, 0.1006, 0.0709,  ..., 0.9898, 0.1832, 0.0549],
         [0.0958, 0.0466, 0.0545,  ..., 0.0034, 0.0955, 0.0373],
         [0.6959, 0.0715, 0.0621,  ..., 0.0034, 0.1436, 0.0705],
         [0.1126, 0.7813, 0.8126,  ..., 0.0034, 0.5778, 0.8373]],
        [[0.0831, 0.1834, 0.0880,  ..., 0.0602, 0.0144, 0.0978],
         [0.0831, 0.0952, 0.0719,  ..., 0.0458, 0.0144, 0.0598],
         [0.7479, 0.1172, 0.1235,  ..., 0.0466, 0.9567, 0.0705],
         [0.0860, 0.6042, 0.7166,  ..., 0.8474, 0.0144, 0.7719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.7703e-02, 1.7616e-01, 1.5659e-01,  ..., 4.7021e-02,
          1.8205e-01, 1.1189e-01],
         [7.7703e-02, 1.3457e-01, 1.0619e-01,  ..., 4.7021e-02,
          1.3032e-01, 1.1070e-01],
         [7.6689e-01, 4.7256e-01, 2.4205e-01,  ..., 8.5894e-01,
          3.8736e-01, 6.4335e-01],
         [7.7703e-02, 2.1671e-01, 4.9517e-01,  ..., 4.7021e-02,
          3.0026e-01, 1.3406e-01]],
        [[2.9850e-06, 1.4588e-02, 1.9627e-02,  ..., 1.1536e-02,
          1.2223e-01, 9.7216e-01],
         [2.9850e-06, 1.9286e-02, 4.7046e-03,  ..., 1.1536e-02,
          1.2077e-01, 8.1413e-03],
         [9.9999e-01, 1.0288e-02, 4.7046e-03,  ..., 9.6539e-01,
          6.2554e-01, 8.1413e-03],
         [2.9850e-06, 9.5584e-01, 9.7096e-01,  ..., 1.1536e-02,
          1.3146e-01, 1.1558e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:04,026 [Process: 0] Synchronize training processes
2024-08-18 19:47:04,027 [Process: 0] Evaluating...
2024-08-18 19:47:04,029 [Process: 0] EPOCH 121:
2024-08-18 19:47:04,031 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:05,184 [Process: 0] Synchronize training processes
2024-08-18 19:47:05,185 [Process: 0] Evaluating...
2024-08-18 19:47:05,191 [Process: 0] EPOCH 122:
2024-08-18 19:47:05,193 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0705, 0.0698, 0.0295,  ..., 0.9658, 0.1807, 0.0369],
         [0.0705, 0.0617, 0.0434,  ..., 0.0114, 0.1364, 0.0416],
         [0.7884, 0.0400, 0.0384,  ..., 0.0114, 0.0967, 0.0271],
         [0.0705, 0.8285, 0.8888,  ..., 0.0114, 0.5862, 0.8944]],
        [[0.1259, 0.1774, 0.0449,  ..., 0.0475, 0.0035, 0.1708],
         [0.1154, 0.1072, 0.0432,  ..., 0.0315, 0.0035, 0.1118],
         [0.5738, 0.1629, 0.0323,  ..., 0.0444, 0.9894, 0.1645],
         [0.1849, 0.5525, 0.8796,  ..., 0.8766, 0.0035, 0.5530]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1678e-02, 1.1737e-01, 1.5736e-01,  ..., 3.5202e-02,
          1.4422e-01, 7.9404e-02],
         [4.1678e-02, 1.1237e-01, 2.6310e-01,  ..., 3.5202e-02,
          1.2234e-01, 7.9404e-02],
         [8.7497e-01, 6.0951e-01, 1.1465e-01,  ..., 8.9439e-01,
          5.4835e-01, 7.5704e-01],
         [4.1678e-02, 1.6075e-01, 4.6488e-01,  ..., 3.5202e-02,
          1.8509e-01, 8.4155e-02]],
        [[6.9455e-06, 1.2359e-03, 9.0401e-04,  ..., 1.5882e-02,
          1.4070e-01, 9.9752e-01],
         [6.9455e-06, 1.7327e-03, 1.0854e-03,  ..., 1.5882e-02,
          1.1956e-01, 7.2787e-04],
         [9.9876e-01, 1.2359e-03, 9.0401e-04,  ..., 9.5235e-01,
          6.0381e-01, 7.2787e-04],
         [1.2292e-03, 9.9580e-01, 9.9711e-01,  ..., 1.5882e-02,
          1.3593e-01, 1.0258e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1385, 0.0325, 0.0177,  ..., 0.8420, 0.2018, 0.0132],
         [0.1189, 0.0379, 0.0225,  ..., 0.0527, 0.1490, 0.0269],
         [0.5806, 0.0208, 0.0171,  ..., 0.0527, 0.1328, 0.0134],
         [0.1621, 0.9088, 0.9427,  ..., 0.0527, 0.5163, 0.9465]],
        [[0.1815, 0.0410, 0.0233,  ..., 0.0606, 0.0068, 0.2005],
         [0.1378, 0.0643, 0.0188,  ..., 0.0503, 0.0068, 0.1484],
         [0.3882, 0.0477, 0.0194,  ..., 0.0592, 0.9797, 0.2668],
         [0.2925, 0.8471, 0.9384,  ..., 0.8298, 0.0068, 0.3843]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:06,346 [Process: 0] Synchronize training processes
2024-08-18 19:47:06,346 [Process: 0] Evaluating...
2024-08-18 19:47:06,348 [Process: 0] EPOCH 123:
2024-08-18 19:47:06,350 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:07,503 [Process: 0] Synchronize training processes
2024-08-18 19:47:07,503 [Process: 0] Evaluating...
2024-08-18 19:47:07,505 [Process: 0] EPOCH 124:
2024-08-18 19:47:07,507 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.6732e-02, 1.5031e-01, 1.3840e-01,  ..., 1.1875e-02,
          1.1116e-01, 5.7818e-02],
         [7.6732e-02, 1.2992e-01, 1.8936e-01,  ..., 1.1875e-02,
          1.0943e-01, 5.7818e-02],
         [7.5879e-01, 4.8049e-01, 1.9032e-01,  ..., 9.6438e-01,
          6.0032e-01, 8.2258e-01],
         [8.7747e-02, 2.3929e-01, 4.8192e-01,  ..., 1.1875e-02,
          1.7909e-01, 6.1785e-02]],
        [[1.2103e-04, 3.9090e-03, 7.2438e-03,  ..., 3.3260e-02,
          1.1879e-01, 9.9945e-01],
         [1.2103e-04, 2.7433e-02, 8.6602e-02,  ..., 3.3260e-02,
          1.1592e-01, 1.8277e-04],
         [8.9533e-01, 3.9090e-03, 7.2438e-03,  ..., 9.0022e-01,
          6.3480e-01, 1.8277e-04],
         [1.0442e-01, 9.6475e-01, 8.9891e-01,  ..., 3.3260e-02,
          1.3048e-01, 1.8277e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0990, 0.0220, 0.0193,  ..., 0.9828, 0.2270, 0.0172],
         [0.0986, 0.0164, 0.0246,  ..., 0.0057, 0.1615, 0.0243],
         [0.7025, 0.0188, 0.0193,  ..., 0.0057, 0.2320, 0.0172],
         [0.0998, 0.9427, 0.9367,  ..., 0.0057, 0.3795, 0.9414]],
        [[0.1943, 0.0210, 0.0079,  ..., 0.0156, 0.0018, 0.2135],
         [0.1384, 0.0336, 0.0145,  ..., 0.0257, 0.0018, 0.1590],
         [0.1354, 0.0210, 0.0079,  ..., 0.0156, 0.9946, 0.2648],
         [0.5318, 0.9244, 0.9697,  ..., 0.9431, 0.0018, 0.3627]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.5798e-02, 1.8467e-01, 2.3175e-01,  ..., 3.5192e-02,
          1.6049e-01, 5.7268e-02],
         [8.5798e-02, 1.4512e-01, 1.9627e-01,  ..., 3.5192e-02,
          1.3478e-01, 5.7268e-02],
         [7.1918e-01, 3.6806e-01, 1.1642e-01,  ..., 8.9442e-01,
          4.5211e-01, 8.2056e-01],
         [1.0923e-01, 3.0216e-01, 4.5557e-01,  ..., 3.5192e-02,
          2.5261e-01, 6.4900e-02]],
        [[7.4065e-05, 2.7738e-04, 3.0660e-04,  ..., 7.0443e-03,
          9.6089e-02, 9.7774e-01],
         [7.4065e-05, 1.7341e-03, 3.0660e-04,  ..., 7.0443e-03,
          9.5653e-02, 7.4198e-03],
         [7.6021e-01, 2.7738e-04, 3.0660e-04,  ..., 9.7887e-01,
          6.8011e-01, 7.4198e-03],
         [2.3964e-01, 9.9771e-01, 9.9908e-01,  ..., 7.0443e-03,
          1.2814e-01, 7.4198e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9333e-01, 3.6389e-02, 1.2610e-02,  ..., 9.1601e-01,
          2.4557e-01, 3.3416e-02],
         [1.4406e-01, 7.3452e-02, 1.5880e-02,  ..., 2.7997e-02,
          1.4213e-01, 6.3715e-02],
         [3.9370e-01, 3.5592e-02, 1.2610e-02,  ..., 2.7997e-02,
          1.9402e-01, 3.3416e-02],
         [2.6892e-01, 8.5457e-01, 9.5890e-01,  ..., 2.7997e-02,
          4.1827e-01, 8.6945e-01]],
        [[2.4270e-01, 2.7584e-02, 1.7290e-02,  ..., 1.9500e-02,
          6.4318e-04, 9.5755e-02],
         [1.7002e-01, 3.0697e-02, 4.5501e-02,  ..., 2.5012e-02,
          6.4318e-04, 1.5841e-01],
         [2.3378e-01, 2.5093e-02, 1.7290e-02,  ..., 1.9500e-02,
          9.9807e-01, 1.0155e-01],
         [3.5349e-01, 9.1663e-01, 9.1992e-01,  ..., 9.3599e-01,
          6.4318e-04, 6.4429e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:08,657 [Process: 0] Synchronize training processes
2024-08-18 19:47:08,657 [Process: 0] Evaluating...
2024-08-18 19:47:08,659 [Process: 0] EPOCH 125:
2024-08-18 19:47:08,661 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1629e-02, 2.0117e-01, 2.3076e-01,  ..., 9.9803e-03,
          1.6532e-01, 5.5142e-02],
         [2.1629e-02, 1.4702e-01, 2.3056e-01,  ..., 9.9803e-03,
          1.3704e-01, 5.5142e-02],
         [9.3511e-01, 3.7986e-01, 1.3904e-01,  ..., 9.7006e-01,
          4.8661e-01, 8.2950e-01],
         [2.1629e-02, 2.7195e-01, 3.9965e-01,  ..., 9.9803e-03,
          2.1103e-01, 6.0214e-02]],
        [[4.2557e-05, 7.1301e-03, 4.4998e-03,  ..., 1.0911e-02,
          1.2524e-01, 9.8960e-01],
         [4.2557e-05, 3.9397e-02, 1.0988e-02,  ..., 1.0911e-02,
          1.1053e-01, 3.4651e-03],
         [9.9974e-01, 7.1301e-03, 4.4998e-03,  ..., 9.6727e-01,
          6.2961e-01, 3.4651e-03],
         [1.7737e-04, 9.4634e-01, 9.8001e-01,  ..., 1.0911e-02,
          1.3463e-01, 3.4651e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1619, 0.0369, 0.0147,  ..., 0.9547, 0.2205, 0.0144],
         [0.1296, 0.0454, 0.0178,  ..., 0.0151, 0.1690, 0.0162],
         [0.5248, 0.0361, 0.0147,  ..., 0.0151, 0.2395, 0.0150],
         [0.1838, 0.8816, 0.9528,  ..., 0.0151, 0.3710, 0.9544]],
        [[0.2393, 0.0640, 0.0137,  ..., 0.0118, 0.0044, 0.0544],
         [0.1930, 0.0537, 0.0137,  ..., 0.0220, 0.0044, 0.0975],
         [0.2056, 0.0498, 0.0137,  ..., 0.0118, 0.9868, 0.0544],
         [0.3621, 0.8325, 0.9588,  ..., 0.9544, 0.0044, 0.7936]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6177e-02, 2.4166e-01, 2.9498e-01,  ..., 2.9233e-02,
          2.0242e-01, 2.5033e-02],
         [1.6177e-02, 1.6414e-01, 1.7915e-01,  ..., 2.9233e-02,
          1.5957e-01, 2.5033e-02],
         [9.5147e-01, 2.7530e-01, 1.5030e-01,  ..., 9.1230e-01,
          3.7240e-01, 9.2490e-01],
         [1.6177e-02, 3.1889e-01, 3.7557e-01,  ..., 2.9233e-02,
          2.6560e-01, 2.5033e-02]],
        [[5.2637e-06, 2.3241e-04, 2.8595e-03,  ..., 1.9473e-02,
          8.1487e-02, 7.2339e-01],
         [5.2637e-06, 5.6856e-04, 4.6215e-03,  ..., 1.9473e-02,
          8.1487e-02, 1.3218e-01],
         [9.9998e-01, 2.3241e-04, 2.8595e-03,  ..., 9.4158e-01,
          7.5554e-01, 4.2956e-02],
         [5.2637e-06, 9.9897e-01, 9.8966e-01,  ..., 1.9473e-02,
          8.1487e-02, 1.0148e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:09,812 [Process: 0] Synchronize training processes
2024-08-18 19:47:09,812 [Process: 0] Evaluating...
2024-08-18 19:47:09,814 [Process: 0] EPOCH 126:
2024-08-18 19:47:09,816 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:10,966 [Process: 0] Synchronize training processes
2024-08-18 19:47:10,967 [Process: 0] Evaluating...
2024-08-18 19:47:10,968 [Process: 0] EPOCH 127:
2024-08-18 19:47:10,970 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0465, 0.0393, 0.0261,  ..., 0.9099, 0.2415, 0.0520],
         [0.0465, 0.0489, 0.0547,  ..., 0.0320, 0.2004, 0.0651],
         [0.8605, 0.0393, 0.0261,  ..., 0.0291, 0.2068, 0.0520],
         [0.0465, 0.8724, 0.8931,  ..., 0.0291, 0.3512, 0.8308]],
        [[0.2519, 0.0173, 0.0116,  ..., 0.0207, 0.0085, 0.1359],
         [0.1967, 0.0191, 0.0229,  ..., 0.0308, 0.0085, 0.1209],
         [0.1993, 0.0173, 0.0116,  ..., 0.0207, 0.9746, 0.6082],
         [0.3521, 0.9463, 0.9539,  ..., 0.9278, 0.0085, 0.1350]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3581e-02, 2.4527e-01, 2.2256e-01,  ..., 1.5717e-02,
          2.0651e-01, 2.2040e-02],
         [2.3581e-02, 1.7344e-01, 2.1995e-01,  ..., 1.5717e-02,
          1.6757e-01, 2.2040e-02],
         [9.2926e-01, 2.9015e-01, 2.1259e-01,  ..., 9.5285e-01,
          3.1496e-01, 9.3388e-01],
         [2.3581e-02, 2.9114e-01, 3.4490e-01,  ..., 1.5717e-02,
          3.1096e-01, 2.2040e-02]],
        [[1.3742e-04, 9.0204e-04, 4.5741e-02,  ..., 5.5965e-02,
          7.9073e-02, 9.8528e-01],
         [1.3742e-04, 1.9828e-03, 4.1175e-02,  ..., 5.5965e-02,
          7.9073e-02, 5.1109e-03],
         [9.9959e-01, 9.0204e-04, 4.1175e-02,  ..., 8.1677e-01,
          7.6278e-01, 4.8062e-03],
         [1.3742e-04, 9.9621e-01, 8.7191e-01,  ..., 7.1304e-02,
          7.9073e-02, 4.8062e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1770, 0.0273, 0.0433,  ..., 0.8874, 0.2308, 0.0172],
         [0.1373, 0.0400, 0.0666,  ..., 0.0354, 0.1770, 0.0242],
         [0.4838, 0.0273, 0.0433,  ..., 0.0417, 0.2283, 0.0172],
         [0.2019, 0.9054, 0.8469,  ..., 0.0354, 0.3640, 0.9415]],
        [[0.1092, 0.0189, 0.0408,  ..., 0.0218, 0.0120, 0.0495],
         [0.1788, 0.0189, 0.0459,  ..., 0.0332, 0.0120, 0.0495],
         [0.1084, 0.0189, 0.0408,  ..., 0.0218, 0.9639, 0.8516],
         [0.6035, 0.9433, 0.8726,  ..., 0.9232, 0.0120, 0.0495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4890e-02, 2.3978e-01, 1.8204e-01,  ..., 1.0118e-02,
          2.1479e-01, 1.0116e-02],
         [1.4890e-02, 2.2416e-01, 2.5483e-01,  ..., 1.0118e-02,
          2.6121e-01, 1.0116e-02],
         [9.5533e-01, 1.9727e-01, 1.3173e-01,  ..., 9.6965e-01,
          1.5998e-01, 9.6965e-01],
         [1.4890e-02, 3.3878e-01, 4.3140e-01,  ..., 1.0118e-02,
          3.6402e-01, 1.0116e-02]],
        [[4.6239e-04, 1.3422e-04, 4.9407e-03,  ..., 4.0646e-02,
          1.0843e-01, 9.6580e-01],
         [4.6239e-04, 1.3422e-04, 9.2758e-03,  ..., 4.0646e-02,
          9.9747e-02, 1.7821e-02],
         [9.9861e-01, 1.3422e-04, 4.9407e-03,  ..., 8.7806e-01,
          6.8408e-01, 8.1875e-03],
         [4.6239e-04, 9.9960e-01, 9.8084e-01,  ..., 4.0646e-02,
          1.0774e-01, 8.1875e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:12,122 [Process: 0] Synchronize training processes
2024-08-18 19:47:12,123 [Process: 0] Evaluating...
2024-08-18 19:47:12,125 [Process: 0] EPOCH 128:
2024-08-18 19:47:12,127 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:13,281 [Process: 0] Synchronize training processes
2024-08-18 19:47:13,282 [Process: 0] Evaluating...
2024-08-18 19:47:13,284 [Process: 0] EPOCH 129:
2024-08-18 19:47:13,285 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1583, 0.0378, 0.0203,  ..., 0.7780, 0.2079, 0.0103],
         [0.1365, 0.0378, 0.0216,  ..., 0.0616, 0.2176, 0.0248],
         [0.5341, 0.0448, 0.0203,  ..., 0.0988, 0.1676, 0.0103],
         [0.1712, 0.8797, 0.9378,  ..., 0.0616, 0.4070, 0.9547]],
        [[0.2300, 0.0189, 0.0278,  ..., 0.0223, 0.0052, 0.0586],
         [0.2200, 0.0305, 0.0278,  ..., 0.0445, 0.0052, 0.0586],
         [0.1607, 0.0189, 0.0278,  ..., 0.0223, 0.9845, 0.8243],
         [0.3892, 0.9318, 0.9167,  ..., 0.9108, 0.0052, 0.0586]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2761e-02, 2.3461e-01, 1.4745e-01,  ..., 3.0194e-02,
          1.9597e-01, 5.8045e-02],
         [3.2761e-02, 2.1744e-01, 2.6001e-01,  ..., 2.7016e-02,
          1.7045e-01, 5.8045e-02],
         [9.0126e-01, 2.0479e-01, 1.3810e-01,  ..., 9.1577e-01,
          3.2206e-01, 8.0573e-01],
         [3.3221e-02, 3.4315e-01, 4.5444e-01,  ..., 2.7016e-02,
          3.1152e-01, 7.8179e-02]],
        [[2.4487e-04, 6.9603e-04, 4.2728e-03,  ..., 1.0476e-01,
          6.7910e-02, 9.9859e-01],
         [2.4487e-04, 1.7076e-03, 7.3278e-03,  ..., 9.1830e-02,
          6.3632e-02, 4.6884e-04],
         [9.9901e-01, 6.9603e-04, 4.2728e-03,  ..., 6.8950e-01,
          8.0069e-01, 4.6884e-04],
         [5.0136e-04, 9.9690e-01, 9.8413e-01,  ..., 1.1391e-01,
          6.7772e-02, 4.6884e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2454, 0.0120, 0.0456,  ..., 0.8830, 0.2439, 0.0185],
         [0.2017, 0.0147, 0.0547,  ..., 0.0389, 0.2261, 0.0193],
         [0.2698, 0.0120, 0.0456,  ..., 0.0392, 0.1532, 0.0185],
         [0.2831, 0.9614, 0.8541,  ..., 0.0389, 0.3768, 0.9437]],
        [[0.7093, 0.0319, 0.0046,  ..., 0.0204, 0.0090, 0.1115],
         [0.1116, 0.0588, 0.0098,  ..., 0.0302, 0.0090, 0.0988],
         [0.0795, 0.0319, 0.0046,  ..., 0.0204, 0.9731, 0.6849],
         [0.0995, 0.8774, 0.9810,  ..., 0.9290, 0.0090, 0.1048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:14,441 [Process: 0] Synchronize training processes
2024-08-18 19:47:14,442 [Process: 0] Evaluating...
2024-08-18 19:47:14,443 [Process: 0] EPOCH 130:
2024-08-18 19:47:14,445 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7115e-02, 2.5530e-01, 1.7344e-01,  ..., 2.3451e-02,
          2.3972e-01, 1.7943e-02],
         [5.7115e-02, 2.2721e-01, 2.5632e-01,  ..., 2.3451e-02,
          2.0181e-01, 1.7261e-02],
         [8.2866e-01, 1.5717e-01, 1.2187e-01,  ..., 9.2965e-01,
          1.7605e-01, 9.4754e-01],
         [5.7115e-02, 3.6031e-01, 4.4838e-01,  ..., 2.3451e-02,
          3.8243e-01, 1.7261e-02]],
        [[9.2607e-05, 1.4848e-03, 7.1189e-03,  ..., 3.7969e-02,
          5.9177e-02, 9.9640e-01],
         [9.2607e-05, 1.4848e-03, 1.2207e-02,  ..., 3.7969e-02,
          5.9093e-02, 1.1996e-03],
         [9.9972e-01, 1.4848e-03, 7.1189e-03,  ..., 8.8429e-01,
          8.2217e-01, 1.1996e-03],
         [9.2607e-05, 9.9555e-01, 9.7355e-01,  ..., 3.9774e-02,
          5.9562e-02, 1.1996e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2721, 0.0326, 0.0243,  ..., 0.9183, 0.2227, 0.0098],
         [0.2268, 0.0454, 0.0271,  ..., 0.0328, 0.2369, 0.0098],
         [0.2036, 0.0326, 0.0243,  ..., 0.0247, 0.1463, 0.0098],
         [0.2975, 0.8894, 0.9243,  ..., 0.0242, 0.3940, 0.9705]],
        [[0.9293, 0.0206, 0.0126,  ..., 0.0413, 0.0050, 0.1255],
         [0.0232, 0.0298, 0.0172,  ..., 0.0413, 0.0050, 0.1075],
         [0.0244, 0.0206, 0.0126,  ..., 0.0413, 0.9849, 0.6441],
         [0.0232, 0.9289, 0.9577,  ..., 0.8762, 0.0050, 0.1229]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5380e-02, 2.2478e-01, 1.3130e-01,  ..., 9.2235e-03,
          2.2677e-01, 1.6314e-02],
         [2.5380e-02, 3.5439e-01, 3.7575e-01,  ..., 9.2235e-03,
          1.6855e-01, 1.6314e-02],
         [9.2386e-01, 1.3881e-01, 9.8820e-02,  ..., 9.7233e-01,
          2.5126e-01, 9.5106e-01],
         [2.5380e-02, 2.8202e-01, 3.9413e-01,  ..., 9.2235e-03,
          3.5342e-01, 1.6314e-02]],
        [[1.9395e-05, 1.1552e-04, 4.4708e-04,  ..., 1.6899e-02,
          6.7243e-02, 9.9797e-01],
         [1.9395e-05, 1.2002e-04, 4.4708e-04,  ..., 1.6899e-02,
          6.4132e-02, 6.7727e-04],
         [9.9994e-01, 1.1552e-04, 4.4708e-04,  ..., 9.4930e-01,
          8.0449e-01, 6.7727e-04],
         [1.9395e-05, 9.9965e-01, 9.9866e-01,  ..., 1.6899e-02,
          6.4132e-02, 6.7727e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2639, 0.0782, 0.0627,  ..., 0.9526, 0.2349, 0.0240],
         [0.2096, 0.1092, 0.1155,  ..., 0.0158, 0.2798, 0.0240],
         [0.1718, 0.0782, 0.0627,  ..., 0.0158, 0.1452, 0.0240],
         [0.3547, 0.7343, 0.7590,  ..., 0.0158, 0.3402, 0.9280]],
        [[0.9859, 0.0327, 0.0632,  ..., 0.0652, 0.0019, 0.0446],
         [0.0047, 0.0327, 0.0887,  ..., 0.0646, 0.0019, 0.0411],
         [0.0047, 0.0327, 0.0632,  ..., 0.0671, 0.9943, 0.8733],
         [0.0047, 0.9020, 0.7848,  ..., 0.8031, 0.0019, 0.0411]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:15,601 [Process: 0] Synchronize training processes
2024-08-18 19:47:15,602 [Process: 0] Evaluating...
2024-08-18 19:47:15,604 [Process: 0] EPOCH 131:
2024-08-18 19:47:15,605 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:16,758 [Process: 0] Synchronize training processes
2024-08-18 19:47:16,759 [Process: 0] Evaluating...
2024-08-18 19:47:16,765 [Process: 0] EPOCH 132:
2024-08-18 19:47:16,767 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.5723e-02, 2.8999e-01, 1.4069e-01,  ..., 2.4808e-02,
          2.4087e-01, 2.0274e-02],
         [6.3935e-02, 1.8399e-01, 2.3955e-01,  ..., 2.2860e-02,
          1.5802e-01, 2.0274e-02],
         [7.9795e-01, 1.5137e-01, 1.0661e-01,  ..., 9.2947e-01,
          2.5999e-01, 9.3918e-01],
         [7.2396e-02, 3.7465e-01, 5.1316e-01,  ..., 2.2860e-02,
          3.4111e-01, 2.0274e-02]],
        [[9.0821e-05, 4.8269e-03, 3.7333e-03,  ..., 1.3015e-02,
          6.3431e-02, 9.9277e-01],
         [9.0821e-05, 5.9113e-03, 3.7333e-03,  ..., 1.3015e-02,
          6.3431e-02, 2.4095e-03],
         [9.9973e-01, 4.8269e-03, 3.7333e-03,  ..., 9.6096e-01,
          8.0971e-01, 2.4095e-03],
         [9.0821e-05, 9.8443e-01, 9.8880e-01,  ..., 1.3015e-02,
          6.3431e-02, 2.4095e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3154, 0.0121, 0.0426,  ..., 0.8613, 0.2458, 0.0224],
         [0.2094, 0.0127, 0.0426,  ..., 0.0595, 0.1581, 0.0289],
         [0.1862, 0.0121, 0.0426,  ..., 0.0396, 0.2231, 0.0224],
         [0.2890, 0.9631, 0.8721,  ..., 0.0396, 0.3730, 0.9263]],
        [[0.9933, 0.0403, 0.0175,  ..., 0.0339, 0.0024, 0.0361],
         [0.0022, 0.0671, 0.0199,  ..., 0.0339, 0.0024, 0.0361],
         [0.0023, 0.0403, 0.0175,  ..., 0.0339, 0.9929, 0.8917],
         [0.0022, 0.8522, 0.9452,  ..., 0.8983, 0.0024, 0.0361]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9994e-02, 3.0938e-01, 1.6752e-01,  ..., 2.4973e-02,
          1.8986e-01, 1.4571e-02],
         [3.9994e-02, 2.0016e-01, 2.8210e-01,  ..., 2.4973e-02,
          1.3890e-01, 1.4571e-02],
         [8.8002e-01, 1.5625e-01, 1.1274e-01,  ..., 9.2508e-01,
          3.5477e-01, 9.5629e-01],
         [3.9994e-02, 3.3421e-01, 4.3765e-01,  ..., 2.4973e-02,
          3.1646e-01, 1.4571e-02]],
        [[3.0808e-03, 2.3314e-03, 2.5110e-04,  ..., 2.7600e-02,
          4.0805e-02, 9.8086e-01],
         [3.0808e-03, 2.3314e-03, 2.5110e-04,  ..., 2.7600e-02,
          4.0805e-02, 1.0192e-02],
         [9.9076e-01, 2.3314e-03, 2.5110e-04,  ..., 9.1720e-01,
          8.7759e-01, 4.4765e-03],
         [3.0808e-03, 9.9301e-01, 9.9925e-01,  ..., 2.7600e-02,
          4.0805e-02, 4.4765e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:17,919 [Process: 0] Synchronize training processes
2024-08-18 19:47:17,919 [Process: 0] Evaluating...
2024-08-18 19:47:17,921 [Process: 0] EPOCH 133:
2024-08-18 19:47:17,923 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:19,077 [Process: 0] Synchronize training processes
2024-08-18 19:47:19,078 [Process: 0] Evaluating...
2024-08-18 19:47:19,080 [Process: 0] EPOCH 134:
2024-08-18 19:47:19,082 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3469, 0.0382, 0.0322,  ..., 0.9380, 0.2587, 0.0302],
         [0.2201, 0.0545, 0.0322,  ..., 0.0362, 0.1755, 0.0302],
         [0.1481, 0.0382, 0.0322,  ..., 0.0129, 0.1497, 0.0302],
         [0.2849, 0.8690, 0.9033,  ..., 0.0129, 0.4162, 0.9095]],
        [[0.9860, 0.0384, 0.0250,  ..., 0.0201, 0.0017, 0.0085],
         [0.0069, 0.0384, 0.0250,  ..., 0.0201, 0.0017, 0.0085],
         [0.0040, 0.0384, 0.0250,  ..., 0.0201, 0.9949, 0.9744],
         [0.0032, 0.8848, 0.9249,  ..., 0.9399, 0.0017, 0.0085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7323e-02, 3.0321e-01, 2.2442e-01,  ..., 5.4305e-03,
          2.9383e-01, 1.1501e-02],
         [1.7323e-02, 2.2979e-01, 1.3859e-01,  ..., 5.4305e-03,
          1.8108e-01, 1.1501e-02],
         [9.4803e-01, 1.4347e-01, 1.3859e-01,  ..., 9.8371e-01,
          2.2547e-01, 9.6550e-01],
         [1.7323e-02, 3.2352e-01, 4.9840e-01,  ..., 5.4305e-03,
          2.9962e-01, 1.1501e-02]],
        [[1.1363e-03, 2.1111e-03, 3.1602e-04,  ..., 1.2990e-02,
          2.5603e-02, 9.9350e-01],
         [1.1363e-03, 2.6020e-03, 3.1602e-04,  ..., 1.2990e-02,
          2.5603e-02, 4.0490e-03],
         [9.9659e-01, 2.1111e-03, 3.1602e-04,  ..., 9.6103e-01,
          9.2319e-01, 1.2276e-03],
         [1.1363e-03, 9.9318e-01, 9.9905e-01,  ..., 1.2990e-02,
          2.5603e-02, 1.2276e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8836e-01, 6.8193e-02, 5.8160e-02,  ..., 9.6730e-01,
          2.4883e-01, 3.2398e-02],
         [1.8541e-01, 8.1164e-02, 5.8160e-02,  ..., 2.0430e-02,
          1.7626e-01, 3.2398e-02],
         [1.4414e-01, 5.9494e-02, 6.6174e-02,  ..., 6.1338e-03,
          1.8446e-01, 3.2398e-02],
         [2.8209e-01, 7.9115e-01, 8.1751e-01,  ..., 6.1338e-03,
          3.9044e-01, 9.0280e-01]],
        [[9.0762e-01, 3.7847e-02, 1.8447e-02,  ..., 1.3989e-02,
          9.2842e-04, 6.0868e-02],
         [3.0363e-02, 3.7847e-02, 1.8447e-02,  ..., 1.3989e-02,
          9.2842e-04, 5.9419e-02],
         [3.1657e-02, 3.7847e-02, 2.1620e-02,  ..., 1.3989e-02,
          9.9721e-01, 8.2029e-01],
         [3.0363e-02, 8.8646e-01, 9.4149e-01,  ..., 9.5803e-01,
          9.2842e-04, 5.9419e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1896e-02, 2.8486e-01, 3.1064e-01,  ..., 1.5630e-02,
          2.2849e-01, 2.5932e-02],
         [2.1896e-02, 2.2985e-01, 1.6051e-01,  ..., 1.5630e-02,
          1.3539e-01, 2.6167e-02],
         [9.3431e-01, 1.3956e-01, 1.6051e-01,  ..., 9.5311e-01,
          1.6687e-01, 9.2197e-01],
         [2.1896e-02, 3.4573e-01, 3.6835e-01,  ..., 1.5630e-02,
          4.6925e-01, 2.5932e-02]],
        [[8.5188e-03, 3.3928e-03, 2.1487e-04,  ..., 2.7686e-02,
          3.6319e-02, 9.7174e-01],
         [8.5188e-03, 3.3928e-03, 2.1487e-04,  ..., 3.0737e-02,
          3.6319e-02, 2.2677e-02],
         [9.7335e-01, 3.3928e-03, 2.1487e-04,  ..., 9.1389e-01,
          8.9104e-01, 2.7922e-03],
         [9.6164e-03, 9.8982e-01, 9.9936e-01,  ..., 2.7686e-02,
          3.6319e-02, 2.7922e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:20,237 [Process: 0] Synchronize training processes
2024-08-18 19:47:20,237 [Process: 0] Evaluating...
2024-08-18 19:47:20,239 [Process: 0] EPOCH 135:
2024-08-18 19:47:20,240 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:21,398 [Process: 0] Synchronize training processes
2024-08-18 19:47:21,398 [Process: 0] Evaluating...
2024-08-18 19:47:21,400 [Process: 0] EPOCH 136:
2024-08-18 19:47:21,401 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3842, 0.0608, 0.0560,  ..., 0.9103, 0.2153, 0.0588],
         [0.2076, 0.0527, 0.0560,  ..., 0.0321, 0.1455, 0.0588],
         [0.1486, 0.0541, 0.0560,  ..., 0.0331, 0.2021, 0.0653],
         [0.2596, 0.8323, 0.8321,  ..., 0.0246, 0.4371, 0.8170]],
        [[0.9362, 0.0243, 0.0234,  ..., 0.0487, 0.0023, 0.0843],
         [0.0289, 0.0333, 0.0313,  ..., 0.0487, 0.0023, 0.0823],
         [0.0174, 0.0243, 0.0234,  ..., 0.0556, 0.9931, 0.7323],
         [0.0174, 0.9181, 0.9219,  ..., 0.8470, 0.0023, 0.1011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2558e-02, 2.9039e-01, 2.6352e-01,  ..., 1.5411e-02,
          3.2998e-01, 2.2649e-02],
         [1.2558e-02, 1.9901e-01, 2.0296e-01,  ..., 1.5411e-02,
          1.7512e-01, 2.2649e-02],
         [9.6233e-01, 1.9308e-01, 1.3482e-01,  ..., 9.5377e-01,
          1.5456e-01, 9.3205e-01],
         [1.2558e-02, 3.1751e-01, 3.9870e-01,  ..., 1.5411e-02,
          3.4033e-01, 2.2649e-02]],
        [[1.4998e-02, 7.3627e-04, 5.1404e-03,  ..., 1.1105e-02,
          4.5972e-02, 9.9018e-01],
         [2.0176e-02, 7.3627e-04, 5.1404e-03,  ..., 1.1105e-02,
          4.5972e-02, 4.3661e-03],
         [9.4637e-01, 7.3627e-04, 5.1404e-03,  ..., 9.6669e-01,
          8.6208e-01, 2.7273e-03],
         [1.8460e-02, 9.9779e-01, 9.8458e-01,  ..., 1.1105e-02,
          4.5972e-02, 2.7273e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4056, 0.0595, 0.0209,  ..., 0.9135, 0.2346, 0.0144],
         [0.1966, 0.0595, 0.0209,  ..., 0.0303, 0.1834, 0.0144],
         [0.1887, 0.0595, 0.0226,  ..., 0.0283, 0.1225, 0.0144],
         [0.2090, 0.8214, 0.9355,  ..., 0.0280, 0.4595, 0.9569]],
        [[0.9697, 0.0237, 0.0353,  ..., 0.0359, 0.0019, 0.0080],
         [0.0105, 0.0237, 0.0353,  ..., 0.0359, 0.0019, 0.0080],
         [0.0099, 0.0237, 0.0353,  ..., 0.0359, 0.9942, 0.9761],
         [0.0099, 0.9288, 0.8942,  ..., 0.8923, 0.0019, 0.0080]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:22,553 [Process: 0] Synchronize training processes
2024-08-18 19:47:22,553 [Process: 0] Evaluating...
2024-08-18 19:47:22,555 [Process: 0] EPOCH 137:
2024-08-18 19:47:22,557 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0353, 0.1947, 0.2139,  ..., 0.0134, 0.2469, 0.0247],
         [0.0353, 0.1874, 0.2013,  ..., 0.0134, 0.1423, 0.0339],
         [0.8942, 0.1701, 0.1124,  ..., 0.9599, 0.1891, 0.9168],
         [0.0353, 0.4479, 0.4724,  ..., 0.0134, 0.4216, 0.0247]],
        [[0.0474, 0.0029, 0.0017,  ..., 0.0244, 0.0234, 0.9883],
         [0.0485, 0.0112, 0.0017,  ..., 0.0244, 0.0234, 0.0058],
         [0.8568, 0.0029, 0.0017,  ..., 0.9269, 0.9299, 0.0030],
         [0.0474, 0.9830, 0.9950,  ..., 0.0244, 0.0234, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4449e-01, 1.2679e-02, 2.7885e-02,  ..., 8.4230e-01,
          1.4415e-01, 6.9954e-03],
         [2.0749e-01, 1.2679e-02, 2.7885e-02,  ..., 8.2797e-02,
          1.0890e-01, 6.9954e-03],
         [2.1926e-01, 1.2679e-02, 2.7885e-02,  ..., 3.7450e-02,
          1.2379e-01, 6.9954e-03],
         [2.2876e-01, 9.6196e-01, 9.1635e-01,  ..., 3.7450e-02,
          6.2316e-01, 9.7901e-01]],
        [[9.2779e-01, 2.1231e-02, 9.8251e-03,  ..., 5.8544e-02,
          6.3849e-04, 8.9995e-03],
         [2.6868e-02, 2.1231e-02, 9.8251e-03,  ..., 5.8544e-02,
          6.3849e-04, 8.9995e-03],
         [2.2669e-02, 2.1524e-02, 9.8251e-03,  ..., 6.0172e-02,
          9.9808e-01, 9.7300e-01],
         [2.2669e-02, 9.3601e-01, 9.7052e-01,  ..., 8.2274e-01,
          6.3849e-04, 8.9995e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6873e-02, 1.3132e-01, 1.3578e-01,  ..., 1.1997e-02,
          1.6837e-01, 1.0228e-02],
         [1.6873e-02, 1.8757e-01, 1.4552e-01,  ..., 1.1997e-02,
          1.2760e-01, 1.0228e-02],
         [9.4938e-01, 1.1446e-01, 9.9750e-02,  ..., 9.6401e-01,
          3.9980e-01, 9.6932e-01],
         [1.6873e-02, 5.6664e-01, 6.1895e-01,  ..., 1.1997e-02,
          3.0423e-01, 1.0228e-02]],
        [[1.1538e-02, 5.7725e-04, 2.2860e-04,  ..., 1.6714e-02,
          2.9609e-02, 9.7888e-01],
         [1.1538e-02, 5.7725e-04, 2.2860e-04,  ..., 1.6714e-02,
          2.9609e-02, 7.0404e-03],
         [9.6330e-01, 5.7725e-04, 2.2860e-04,  ..., 9.4986e-01,
          9.1117e-01, 7.0404e-03],
         [1.3620e-02, 9.9827e-01, 9.9931e-01,  ..., 1.6714e-02,
          2.9609e-02, 7.0404e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3439, 0.0155, 0.0242,  ..., 0.9695, 0.2068, 0.0671],
         [0.2242, 0.0155, 0.0242,  ..., 0.0126, 0.1635, 0.0627],
         [0.1856, 0.0155, 0.0242,  ..., 0.0090, 0.1270, 0.0600],
         [0.2463, 0.9535, 0.9274,  ..., 0.0090, 0.5028, 0.8103]],
        [[0.8753, 0.0572, 0.0303,  ..., 0.0374, 0.0028, 0.0158],
         [0.0509, 0.0572, 0.0303,  ..., 0.0374, 0.0028, 0.0158],
         [0.0369, 0.0624, 0.0303,  ..., 0.0374, 0.9916, 0.9525],
         [0.0369, 0.8233, 0.9090,  ..., 0.8877, 0.0028, 0.0158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:23,707 [Process: 0] Synchronize training processes
2024-08-18 19:47:23,707 [Process: 0] Evaluating...
2024-08-18 19:47:23,709 [Process: 0] EPOCH 138:
2024-08-18 19:47:23,710 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:24,862 [Process: 0] Synchronize training processes
2024-08-18 19:47:24,862 [Process: 0] Evaluating...
2024-08-18 19:47:24,864 [Process: 0] EPOCH 139:
2024-08-18 19:47:24,865 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5235e-02, 1.6352e-01, 2.4147e-01,  ..., 9.5565e-03,
          2.7762e-01, 1.7963e-02],
         [1.5235e-02, 3.9030e-01, 3.2704e-01,  ..., 9.5565e-03,
          2.1898e-01, 1.7963e-02],
         [9.5430e-01, 8.7269e-02, 1.1427e-01,  ..., 9.7133e-01,
          2.1088e-01, 9.4611e-01],
         [1.5235e-02, 3.5891e-01, 3.1722e-01,  ..., 9.5565e-03,
          2.9252e-01, 1.7963e-02]],
        [[5.2829e-02, 7.9359e-04, 6.7528e-03,  ..., 5.3535e-02,
          1.4473e-02, 9.9976e-01],
         [4.3317e-02, 7.9359e-04, 1.0364e-02,  ..., 4.4696e-02,
          1.4473e-02, 7.9781e-05],
         [8.5248e-01, 7.9359e-04, 6.7528e-03,  ..., 8.5707e-01,
          9.5658e-01, 7.9781e-05],
         [5.1371e-02, 9.9762e-01, 9.7613e-01,  ..., 4.4696e-02,
          1.4473e-02, 7.9781e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3277, 0.0118, 0.0089,  ..., 0.9753, 0.2285, 0.0680],
         [0.2247, 0.0118, 0.0129,  ..., 0.0082, 0.2089, 0.0711],
         [0.1586, 0.0118, 0.0089,  ..., 0.0082, 0.1269, 0.0680],
         [0.2889, 0.9646, 0.9694,  ..., 0.0082, 0.4357, 0.7929]],
        [[0.8672, 0.0364, 0.0157,  ..., 0.0668, 0.0016, 0.1678],
         [0.0626, 0.0409, 0.0324,  ..., 0.0659, 0.0016, 0.1333],
         [0.0351, 0.0364, 0.0157,  ..., 0.0690, 0.9952, 0.3932],
         [0.0351, 0.8864, 0.9363,  ..., 0.7982, 0.0016, 0.3057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0376, 0.0698, 0.0668,  ..., 0.0046, 0.2203, 0.0055],
         [0.0476, 0.0698, 0.1879,  ..., 0.0046, 0.1486, 0.0055],
         [0.8772, 0.0698, 0.0625,  ..., 0.9861, 0.2710, 0.9836],
         [0.0376, 0.7905, 0.6827,  ..., 0.0046, 0.3600, 0.0055]],
        [[0.0032, 0.0012, 0.0197,  ..., 0.0084, 0.0194, 0.9846],
         [0.0032, 0.0012, 0.0267,  ..., 0.0084, 0.0194, 0.0051],
         [0.9903, 0.0012, 0.0197,  ..., 0.9749, 0.9418, 0.0051],
         [0.0032, 0.9963, 0.9338,  ..., 0.0084, 0.0194, 0.0051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:26,044 [Process: 0] Synchronize training processes
2024-08-18 19:47:26,045 [Process: 0] Evaluating...
2024-08-18 19:47:26,047 [Process: 0] EPOCH 140:
2024-08-18 19:47:26,048 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:27,197 [Process: 0] Synchronize training processes
2024-08-18 19:47:27,197 [Process: 0] Evaluating...
2024-08-18 19:47:27,199 [Process: 0] EPOCH 141:
2024-08-18 19:47:27,201 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3200, 0.0381, 0.0513,  ..., 0.9757, 0.2622, 0.0922],
         [0.2696, 0.0381, 0.0966,  ..., 0.0131, 0.2542, 0.0885],
         [0.1685, 0.0381, 0.0580,  ..., 0.0056, 0.1848, 0.7093],
         [0.2419, 0.8857, 0.7942,  ..., 0.0056, 0.2989, 0.1100]],
        [[0.7678, 0.0060, 0.0202,  ..., 0.0715, 0.0027, 0.2590],
         [0.1139, 0.0060, 0.0202,  ..., 0.0705, 0.0027, 0.1873],
         [0.0592, 0.0064, 0.0208,  ..., 0.0936, 0.9918, 0.2454],
         [0.0592, 0.9816, 0.9388,  ..., 0.7643, 0.0027, 0.3084]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5155e-02, 1.4289e-01, 1.6797e-01,  ..., 2.1256e-02,
          2.0098e-01, 8.7002e-03],
         [3.5155e-02, 2.3696e-01, 3.7685e-01,  ..., 2.1256e-02,
          1.3828e-01, 8.7002e-03],
         [8.9453e-01, 9.6515e-02, 9.4845e-02,  ..., 9.3623e-01,
          3.6253e-01, 9.7390e-01],
         [3.5155e-02, 5.2363e-01, 3.6033e-01,  ..., 2.1256e-02,
          2.9821e-01, 8.7002e-03]],
        [[2.1358e-03, 6.7474e-04, 7.0157e-05,  ..., 1.7042e-02,
          3.2406e-02, 9.9767e-01],
         [2.1358e-03, 6.7474e-04, 7.0157e-05,  ..., 1.7042e-02,
          3.2406e-02, 7.7536e-04],
         [9.9359e-01, 6.7474e-04, 7.0157e-05,  ..., 9.4887e-01,
          9.0278e-01, 7.7536e-04],
         [2.1358e-03, 9.9798e-01, 9.9979e-01,  ..., 1.7042e-02,
          3.2406e-02, 7.7536e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2128e-01, 1.8867e-02, 1.5484e-02,  ..., 9.8142e-01,
          3.0529e-01, 5.0068e-03],
         [2.1743e-01, 1.8867e-02, 1.5484e-02,  ..., 6.1926e-03,
          2.3496e-01, 5.0068e-03],
         [2.2355e-01, 1.8867e-02, 1.5484e-02,  ..., 6.1926e-03,
          1.8629e-01, 5.0068e-03],
         [2.3774e-01, 9.4340e-01, 9.5355e-01,  ..., 6.1926e-03,
          2.7346e-01, 9.8498e-01]],
        [[9.9503e-01, 2.4423e-02, 9.9456e-03,  ..., 3.5840e-02,
          8.9888e-04, 2.0418e-01],
         [1.6577e-03, 2.7109e-02, 9.9456e-03,  ..., 3.5840e-02,
          8.9888e-04, 1.3940e-01],
         [1.6577e-03, 2.4423e-02, 9.9456e-03,  ..., 4.1598e-02,
          9.9730e-01, 4.2962e-01],
         [1.6577e-03, 9.2404e-01, 9.7016e-01,  ..., 8.8672e-01,
          8.9888e-04, 2.2680e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7987e-03, 1.4213e-01, 6.9114e-02,  ..., 1.0310e-02,
          2.5783e-01, 1.5095e-02],
         [4.7987e-03, 2.9447e-01, 1.4181e-01,  ..., 1.0310e-02,
          1.6737e-01, 1.5095e-02],
         [9.8560e-01, 1.0279e-01, 6.9114e-02,  ..., 9.6907e-01,
          2.0253e-01, 9.5472e-01],
         [4.7987e-03, 4.6061e-01, 7.1997e-01,  ..., 1.0310e-02,
          3.7227e-01, 1.5095e-02]],
        [[2.4869e-02, 1.3873e-03, 7.0999e-04,  ..., 2.6055e-02,
          3.3491e-02, 9.9530e-01],
         [2.1712e-02, 1.3873e-03, 2.5332e-03,  ..., 2.6055e-02,
          3.3491e-02, 1.5659e-03],
         [9.3171e-01, 1.3873e-03, 7.0999e-04,  ..., 9.2184e-01,
          8.9931e-01, 1.5659e-03],
         [2.1712e-02, 9.9584e-01, 9.9605e-01,  ..., 2.6055e-02,
          3.3703e-02, 1.5659e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:28,346 [Process: 0] Synchronize training processes
2024-08-18 19:47:28,346 [Process: 0] Evaluating...
2024-08-18 19:47:28,352 [Process: 0] EPOCH 142:
2024-08-18 19:47:28,354 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:29,504 [Process: 0] Synchronize training processes
2024-08-18 19:47:29,504 [Process: 0] Evaluating...
2024-08-18 19:47:29,506 [Process: 0] EPOCH 143:
2024-08-18 19:47:29,508 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2694, 0.0107, 0.0406,  ..., 0.8246, 0.1749, 0.0068],
         [0.1934, 0.0107, 0.0406,  ..., 0.0764, 0.1510, 0.0068],
         [0.3067, 0.0112, 0.0406,  ..., 0.0495, 0.1727, 0.0069],
         [0.2306, 0.9674, 0.8783,  ..., 0.0495, 0.5015, 0.9794]],
        [[0.9921, 0.0265, 0.0879,  ..., 0.0149, 0.0018, 0.0951],
         [0.0026, 0.0259, 0.0532,  ..., 0.0149, 0.0018, 0.0908],
         [0.0026, 0.0259, 0.0532,  ..., 0.0149, 0.9946, 0.1027],
         [0.0026, 0.9217, 0.8056,  ..., 0.9554, 0.0018, 0.7115]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5638e-02, 4.3481e-02, 1.5340e-01,  ..., 6.2993e-03,
          1.4728e-01, 1.1334e-02],
         [2.5638e-02, 4.5643e-02, 1.3427e-01,  ..., 6.2993e-03,
          1.2615e-01, 1.1334e-02],
         [9.2308e-01, 4.3481e-02, 1.0035e-01,  ..., 9.8110e-01,
          4.3563e-01, 9.6600e-01],
         [2.5638e-02, 8.6739e-01, 6.1198e-01,  ..., 6.2993e-03,
          2.9094e-01, 1.1334e-02]],
        [[3.8374e-02, 9.3739e-03, 7.7504e-04,  ..., 2.8382e-02,
          3.4856e-02, 9.6512e-01],
         [3.8374e-02, 9.3739e-03, 1.4592e-03,  ..., 2.8805e-02,
          3.4856e-02, 1.0973e-02],
         [8.8488e-01, 9.3739e-03, 7.7504e-04,  ..., 9.1443e-01,
          8.9543e-01, 1.0973e-02],
         [3.8374e-02, 9.7188e-01, 9.9699e-01,  ..., 2.8382e-02,
          3.4856e-02, 1.2930e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3420, 0.0064, 0.0140,  ..., 0.9309, 0.2020, 0.0338],
         [0.2057, 0.0064, 0.0140,  ..., 0.0293, 0.1638, 0.0338],
         [0.2175, 0.0064, 0.0140,  ..., 0.0199, 0.1591, 0.0338],
         [0.2349, 0.9808, 0.9580,  ..., 0.0199, 0.4751, 0.8985]],
        [[0.9920, 0.0369, 0.0159,  ..., 0.0296, 0.0072, 0.1923],
         [0.0028, 0.0369, 0.0159,  ..., 0.0296, 0.0072, 0.1516],
         [0.0026, 0.0385, 0.0159,  ..., 0.0307, 0.9785, 0.2223],
         [0.0026, 0.8877, 0.9524,  ..., 0.9101, 0.0072, 0.4338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:30,657 [Process: 0] Synchronize training processes
2024-08-18 19:47:30,657 [Process: 0] Evaluating...
2024-08-18 19:47:30,659 [Process: 0] EPOCH 144:
2024-08-18 19:47:30,661 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2762e-01, 7.1623e-02, 2.7436e-02,  ..., 1.9972e-02,
          1.6396e-01, 2.7064e-02],
         [1.2445e-01, 1.2596e-01, 4.9684e-02,  ..., 1.9972e-02,
          1.4626e-01, 2.7064e-02],
         [5.8204e-01, 7.1623e-02, 2.7436e-02,  ..., 9.4008e-01,
          5.0056e-01, 9.1881e-01],
         [1.6588e-01, 7.3080e-01, 8.9544e-01,  ..., 1.9972e-02,
          1.8921e-01, 2.7064e-02]],
        [[1.4870e-02, 2.8582e-03, 5.4276e-05,  ..., 1.1608e-02,
          8.3674e-03, 9.9815e-01],
         [1.4870e-02, 7.5671e-03, 5.4276e-05,  ..., 1.1608e-02,
          8.3674e-03, 6.1532e-04],
         [9.5539e-01, 2.8582e-03, 5.4276e-05,  ..., 9.6518e-01,
          9.7490e-01, 6.1532e-04],
         [1.4870e-02, 9.8672e-01, 9.9984e-01,  ..., 1.1608e-02,
          8.3674e-03, 6.1532e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2953, 0.0200, 0.0261,  ..., 0.9724, 0.3162, 0.0254],
         [0.2252, 0.0200, 0.0261,  ..., 0.0119, 0.1873, 0.0254],
         [0.2498, 0.0200, 0.0261,  ..., 0.0078, 0.1726, 0.0335],
         [0.2297, 0.9399, 0.9218,  ..., 0.0078, 0.3239, 0.9157]],
        [[0.9895, 0.0214, 0.0550,  ..., 0.0306, 0.0021, 0.0724],
         [0.0034, 0.0214, 0.0550,  ..., 0.0306, 0.0021, 0.0756],
         [0.0037, 0.0214, 0.0550,  ..., 0.0306, 0.9937, 0.7797],
         [0.0034, 0.9358, 0.8350,  ..., 0.9082, 0.0021, 0.0724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1642e-02, 1.2551e-01, 2.0491e-01,  ..., 4.6138e-03,
          2.1694e-01, 2.3564e-02],
         [1.1642e-02, 1.6317e-01, 2.3462e-01,  ..., 4.6138e-03,
          1.6521e-01, 2.3564e-02],
         [9.6507e-01, 1.1686e-01, 1.1547e-01,  ..., 9.8616e-01,
          2.8803e-01, 9.2931e-01],
         [1.1642e-02, 5.9446e-01, 4.4500e-01,  ..., 4.6138e-03,
          3.2982e-01, 2.3564e-02]],
        [[1.6744e-03, 3.3931e-03, 3.5918e-03,  ..., 2.7766e-02,
          4.9823e-02, 9.9724e-01],
         [1.6744e-03, 3.3931e-03, 3.5918e-03,  ..., 2.7766e-02,
          4.9823e-02, 9.2029e-04],
         [9.9498e-01, 3.3931e-03, 3.5918e-03,  ..., 9.1670e-01,
          8.4910e-01, 9.2029e-04],
         [1.6744e-03, 9.8982e-01, 9.8922e-01,  ..., 2.7766e-02,
          5.1251e-02, 9.2029e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3081e-01, 4.3509e-02, 5.1592e-02,  ..., 9.8744e-01,
          1.5430e-01, 1.8728e-02],
         [2.1700e-01, 4.3509e-02, 5.1592e-02,  ..., 6.6300e-03,
          1.4393e-01, 1.8728e-02],
         [2.1865e-01, 4.3509e-02, 5.5761e-02,  ..., 2.9672e-03,
          1.4265e-01, 2.0067e-02],
         [2.3354e-01, 8.6947e-01, 8.4105e-01,  ..., 2.9672e-03,
          5.5911e-01, 9.4248e-01]],
        [[9.9732e-01, 3.7769e-02, 1.1352e-01,  ..., 8.2503e-02,
          2.5063e-03, 3.9729e-03],
         [1.0582e-03, 3.7769e-02, 1.0009e-01,  ..., 8.2503e-02,
          2.5063e-03, 3.9729e-03],
         [8.1318e-04, 3.7769e-02, 1.0009e-01,  ..., 9.7031e-02,
          9.9248e-01, 9.8808e-01],
         [8.1318e-04, 8.8669e-01, 6.8629e-01,  ..., 7.3796e-01,
          2.5063e-03, 3.9729e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:31,810 [Process: 0] Synchronize training processes
2024-08-18 19:47:31,810 [Process: 0] Evaluating...
2024-08-18 19:47:31,812 [Process: 0] EPOCH 145:
2024-08-18 19:47:31,814 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:32,964 [Process: 0] Synchronize training processes
2024-08-18 19:47:32,964 [Process: 0] Evaluating...
2024-08-18 19:47:32,966 [Process: 0] EPOCH 146:
2024-08-18 19:47:32,968 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5421e-02, 5.1150e-02, 8.5776e-02,  ..., 7.3186e-03,
          2.0104e-01, 1.4347e-02],
         [1.5421e-02, 5.1150e-02, 8.3514e-02,  ..., 7.3186e-03,
          1.8397e-01, 1.4347e-02],
         [9.5374e-01, 5.1150e-02, 8.3514e-02,  ..., 9.7804e-01,
          3.0677e-01, 9.5696e-01],
         [1.5421e-02, 8.4655e-01, 7.4720e-01,  ..., 7.3186e-03,
          3.0822e-01, 1.4347e-02]],
        [[6.8213e-03, 8.3160e-04, 2.9062e-04,  ..., 1.7377e-02,
          6.8355e-02, 9.9283e-01],
         [6.8213e-03, 8.3160e-04, 2.9062e-04,  ..., 1.7377e-02,
          7.2560e-02, 2.3914e-03],
         [9.7954e-01, 8.3160e-04, 2.9062e-04,  ..., 9.4787e-01,
          7.8957e-01, 2.3914e-03],
         [6.8213e-03, 9.9751e-01, 9.9913e-01,  ..., 1.7377e-02,
          6.9512e-02, 2.3914e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2831, 0.0540, 0.0168,  ..., 0.9471, 0.3197, 0.0112],
         [0.2971, 0.0540, 0.0168,  ..., 0.0317, 0.1894, 0.0112],
         [0.1960, 0.0540, 0.0168,  ..., 0.0106, 0.1752, 0.0134],
         [0.2238, 0.8380, 0.9496,  ..., 0.0106, 0.3157, 0.9642]],
        [[0.9779, 0.0447, 0.0918,  ..., 0.1445, 0.2791, 0.0030],
         [0.0085, 0.0447, 0.0918,  ..., 0.1355, 0.2494, 0.0030],
         [0.0068, 0.0447, 0.1101,  ..., 0.2081, 0.2097, 0.9910],
         [0.0068, 0.8658, 0.7064,  ..., 0.5118, 0.2618, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0135e-02, 7.6739e-02, 8.1832e-02,  ..., 2.3975e-02,
          2.0860e-01, 1.6558e-02],
         [2.0135e-02, 7.6739e-02, 1.5557e-01,  ..., 2.3975e-02,
          1.4914e-01, 1.6558e-02],
         [9.3960e-01, 7.6739e-02, 7.2991e-02,  ..., 9.2808e-01,
          3.0544e-01, 9.5006e-01],
         [2.0135e-02, 7.6978e-01, 6.8960e-01,  ..., 2.3975e-02,
          3.3682e-01, 1.6822e-02]],
        [[5.3787e-02, 6.9961e-04, 2.1635e-03,  ..., 1.9332e-02,
          7.5166e-02, 9.9376e-01],
         [4.6929e-02, 6.9961e-04, 2.1635e-03,  ..., 1.9332e-02,
          7.1764e-02, 2.2490e-03],
         [8.5235e-01, 6.9961e-04, 2.1635e-03,  ..., 9.4200e-01,
          7.6247e-01, 1.9959e-03],
         [4.6929e-02, 9.9790e-01, 9.9351e-01,  ..., 1.9332e-02,
          9.0595e-02, 1.9959e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:34,117 [Process: 0] Synchronize training processes
2024-08-18 19:47:34,118 [Process: 0] Evaluating...
2024-08-18 19:47:34,120 [Process: 0] EPOCH 147:
2024-08-18 19:47:34,121 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:35,274 [Process: 0] Synchronize training processes
2024-08-18 19:47:35,274 [Process: 0] Evaluating...
2024-08-18 19:47:35,276 [Process: 0] EPOCH 148:
2024-08-18 19:47:35,278 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3060, 0.0535, 0.0161,  ..., 0.9571, 0.2830, 0.0305],
         [0.2403, 0.0536, 0.0209,  ..., 0.0137, 0.2027, 0.0305],
         [0.2468, 0.0526, 0.0164,  ..., 0.0154, 0.1721, 0.0305],
         [0.2069, 0.8403, 0.9465,  ..., 0.0137, 0.3422, 0.9085]],
        [[0.9801, 0.2635, 0.1514,  ..., 0.1322, 0.0051, 0.0162],
         [0.0085, 0.1697, 0.1347,  ..., 0.1234, 0.0051, 0.0162],
         [0.0057, 0.2304, 0.2235,  ..., 0.1776, 0.9846, 0.9515],
         [0.0057, 0.3364, 0.4905,  ..., 0.5668, 0.0051, 0.0162]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4622e-02, 1.6982e-01, 4.3693e-02,  ..., 1.8655e-02,
          2.4811e-01, 1.5920e-02],
         [2.4622e-02, 1.2477e-01, 1.1005e-01,  ..., 1.8655e-02,
          2.2072e-01, 1.5920e-02],
         [9.2613e-01, 1.3472e-01, 4.3693e-02,  ..., 9.4403e-01,
          2.1256e-01, 9.5224e-01],
         [2.4622e-02, 5.7070e-01, 8.0256e-01,  ..., 1.8655e-02,
          3.1861e-01, 1.5920e-02]],
        [[3.5124e-02, 9.4496e-03, 2.1280e-04,  ..., 8.6957e-03,
          3.1773e-02, 9.9510e-01],
         [3.3745e-02, 9.4496e-03, 2.1280e-04,  ..., 8.6957e-03,
          3.1773e-02, 1.6329e-03],
         [8.9739e-01, 9.4496e-03, 2.1280e-04,  ..., 9.7391e-01,
          9.0468e-01, 1.6329e-03],
         [3.3745e-02, 9.7165e-01, 9.9936e-01,  ..., 8.6957e-03,
          3.1773e-02, 1.6329e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2400, 0.0230, 0.0285,  ..., 0.9333, 0.2771, 0.0241],
         [0.1791, 0.0230, 0.0285,  ..., 0.0259, 0.1550, 0.0241],
         [0.3935, 0.0230, 0.0285,  ..., 0.0211, 0.2410, 0.0241],
         [0.1874, 0.9310, 0.9144,  ..., 0.0196, 0.3269, 0.9276]],
        [[0.9618, 0.2563, 0.1439,  ..., 0.0644, 0.0054, 0.0149],
         [0.0144, 0.2478, 0.1211,  ..., 0.0644, 0.0054, 0.0149],
         [0.0119, 0.1932, 0.1588,  ..., 0.0653, 0.9839, 0.9552],
         [0.0119, 0.3027, 0.5762,  ..., 0.8059, 0.0054, 0.0149]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:36,430 [Process: 0] Synchronize training processes
2024-08-18 19:47:36,430 [Process: 0] Evaluating...
2024-08-18 19:47:36,432 [Process: 0] EPOCH 149:
2024-08-18 19:47:36,434 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:37,585 [Process: 0] Synchronize training processes
2024-08-18 19:47:37,585 [Process: 0] Evaluating...
2024-08-18 19:47:37,587 [Process: 0] EPOCH 150:
2024-08-18 19:47:37,589 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.9543e-03, 3.1069e-02, 2.3001e-02,  ..., 2.2877e-02,
          1.3690e-01, 2.0257e-02],
         [7.9543e-03, 3.1069e-02, 2.3001e-02,  ..., 2.2877e-02,
          1.1768e-01, 2.0257e-02],
         [9.7614e-01, 3.1069e-02, 2.3001e-02,  ..., 9.3097e-01,
          4.6151e-01, 9.3923e-01],
         [7.9543e-03, 9.0679e-01, 9.3100e-01,  ..., 2.3281e-02,
          2.8390e-01, 2.0257e-02]],
        [[2.4000e-02, 1.0475e-04, 5.3197e-04,  ..., 1.9609e-02,
          3.4399e-02, 9.9863e-01],
         [2.4000e-02, 1.0475e-04, 5.3197e-04,  ..., 1.9609e-02,
          3.4399e-02, 7.3237e-04],
         [9.2800e-01, 1.0475e-04, 5.3197e-04,  ..., 9.4117e-01,
          8.9680e-01, 3.1917e-04],
         [2.4000e-02, 9.9969e-01, 9.9840e-01,  ..., 1.9609e-02,
          3.4399e-02, 3.1917e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2239, 0.0460, 0.0222,  ..., 0.9795, 0.3680, 0.0561],
         [0.1759, 0.0561, 0.0492,  ..., 0.0068, 0.1965, 0.1135],
         [0.3932, 0.0460, 0.0222,  ..., 0.0068, 0.1513, 0.0565],
         [0.2069, 0.8518, 0.9064,  ..., 0.0068, 0.2842, 0.7739]],
        [[0.9826, 0.0606, 0.0416,  ..., 0.0422, 0.0088, 0.0051],
         [0.0058, 0.0606, 0.0416,  ..., 0.0422, 0.0088, 0.0051],
         [0.0058, 0.0606, 0.0416,  ..., 0.0422, 0.9737, 0.9848],
         [0.0058, 0.8183, 0.8753,  ..., 0.8734, 0.0088, 0.0051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0182, 0.0772, 0.0723,  ..., 0.0077, 0.1708, 0.0219],
         [0.0182, 0.0621, 0.0655,  ..., 0.0077, 0.1295, 0.0219],
         [0.9454, 0.0621, 0.0655,  ..., 0.9770, 0.3571, 0.9343],
         [0.0182, 0.7987, 0.7966,  ..., 0.0077, 0.3426, 0.0219]],
        [[0.0336, 0.0029, 0.0017,  ..., 0.0186, 0.0398, 0.9964],
         [0.0336, 0.0109, 0.0017,  ..., 0.0186, 0.0398, 0.0012],
         [0.8992, 0.0029, 0.0017,  ..., 0.9441, 0.8730, 0.0012],
         [0.0336, 0.9833, 0.9950,  ..., 0.0186, 0.0474, 0.0012]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:38,743 [Process: 0] Synchronize training processes
2024-08-18 19:47:38,743 [Process: 0] Evaluating...
2024-08-18 19:47:38,745 [Process: 0] EPOCH 151:
2024-08-18 19:47:38,747 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2956, 0.0659, 0.0252,  ..., 0.9425, 0.2532, 0.0050],
         [0.2128, 0.0659, 0.0252,  ..., 0.0188, 0.1727, 0.0050],
         [0.2262, 0.0659, 0.0297,  ..., 0.0199, 0.1824, 0.0050],
         [0.2654, 0.8024, 0.9198,  ..., 0.0188, 0.3917, 0.9850]],
        [[0.9068, 0.0232, 0.0169,  ..., 0.0475, 0.0561, 0.0236],
         [0.0329, 0.0282, 0.0169,  ..., 0.0391, 0.0561, 0.0236],
         [0.0307, 0.0232, 0.0169,  ..., 0.0384, 0.8317, 0.9293],
         [0.0297, 0.9253, 0.9492,  ..., 0.8749, 0.0561, 0.0236]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0071, 0.2921, 0.0324,  ..., 0.0112, 0.2304, 0.0278],
         [0.0071, 0.2335, 0.0324,  ..., 0.0112, 0.1963, 0.0278],
         [0.9786, 0.1406, 0.0324,  ..., 0.9664, 0.2297, 0.9167],
         [0.0071, 0.3338, 0.9028,  ..., 0.0112, 0.3436, 0.0278]],
        [[0.0269, 0.0072, 0.0033,  ..., 0.0296, 0.0195, 0.9942],
         [0.0269, 0.0072, 0.0029,  ..., 0.0296, 0.0195, 0.0019],
         [0.9194, 0.0072, 0.0029,  ..., 0.9112, 0.9415, 0.0019],
         [0.0269, 0.9784, 0.9909,  ..., 0.0296, 0.0195, 0.0019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3440, 0.0476, 0.0403,  ..., 0.9226, 0.2751, 0.0153],
         [0.2116, 0.0476, 0.0403,  ..., 0.0236, 0.1336, 0.0180],
         [0.2141, 0.0608, 0.0469,  ..., 0.0303, 0.1382, 0.0153],
         [0.2303, 0.8440, 0.8725,  ..., 0.0235, 0.4531, 0.9513]],
        [[0.9862, 0.0349, 0.0231,  ..., 0.0473, 0.0110, 0.0161],
         [0.0046, 0.0349, 0.0230,  ..., 0.0816, 0.0110, 0.0161],
         [0.0046, 0.0499, 0.0230,  ..., 0.0473, 0.9671, 0.9516],
         [0.0046, 0.8803, 0.9309,  ..., 0.8237, 0.0110, 0.0161]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1634e-02, 2.7506e-01, 9.7442e-03,  ..., 1.2826e-02,
          1.8886e-01, 4.1301e-02],
         [1.1634e-02, 2.4087e-01, 9.7442e-03,  ..., 1.2826e-02,
          1.3203e-01, 4.1301e-02],
         [9.6510e-01, 1.4464e-01, 9.7442e-03,  ..., 9.6152e-01,
          2.7317e-01, 8.7610e-01],
         [1.1634e-02, 3.3943e-01, 9.7077e-01,  ..., 1.2826e-02,
          4.0594e-01, 4.1301e-02]],
        [[3.9916e-02, 7.3917e-03, 3.5169e-03,  ..., 8.9883e-03,
          2.5952e-02, 9.9841e-01],
         [3.9916e-02, 6.4617e-03, 3.5169e-03,  ..., 8.9883e-03,
          2.9417e-02, 5.2839e-04],
         [8.8025e-01, 6.4617e-03, 3.5169e-03,  ..., 9.7304e-01,
          9.1868e-01, 5.2839e-04],
         [3.9916e-02, 9.7968e-01, 9.8945e-01,  ..., 8.9883e-03,
          2.5952e-02, 5.2839e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:39,914 [Process: 0] Synchronize training processes
2024-08-18 19:47:39,915 [Process: 0] Evaluating...
2024-08-18 19:47:39,921 [Process: 0] EPOCH 152:
2024-08-18 19:47:39,923 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:41,076 [Process: 0] Synchronize training processes
2024-08-18 19:47:41,077 [Process: 0] Evaluating...
2024-08-18 19:47:41,078 [Process: 0] EPOCH 153:
2024-08-18 19:47:41,080 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3997, 0.0470, 0.0283,  ..., 0.9669, 0.3229, 0.0172],
         [0.2325, 0.0470, 0.0344,  ..., 0.0111, 0.1897, 0.0172],
         [0.1640, 0.0470, 0.0283,  ..., 0.0123, 0.1829, 0.0172],
         [0.2039, 0.8589, 0.9090,  ..., 0.0097, 0.3044, 0.9484]],
        [[0.9253, 0.0154, 0.0144,  ..., 0.0644, 0.0042, 0.0139],
         [0.0234, 0.0154, 0.0226,  ..., 0.0807, 0.0042, 0.0139],
         [0.0302, 0.0154, 0.0144,  ..., 0.0644, 0.9875, 0.9582],
         [0.0211, 0.9537, 0.9486,  ..., 0.7905, 0.0042, 0.0139]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1089e-02, 3.2172e-01, 1.3610e-02,  ..., 1.0641e-02,
          1.5332e-01, 2.3869e-02],
         [1.1089e-02, 3.4369e-01, 1.3610e-02,  ..., 1.0641e-02,
          1.2703e-01, 2.3869e-02],
         [9.6673e-01, 1.4058e-01, 1.3610e-02,  ..., 9.6808e-01,
          3.9226e-01, 9.2839e-01],
         [1.1089e-02, 1.9402e-01, 9.5917e-01,  ..., 1.0641e-02,
          3.2739e-01, 2.3869e-02]],
        [[8.5209e-03, 6.8089e-04, 7.4570e-04,  ..., 7.3008e-03,
          3.5878e-02, 9.9956e-01],
         [8.5209e-03, 1.6081e-02, 7.4570e-04,  ..., 7.3008e-03,
          3.5878e-02, 1.4560e-04],
         [9.7444e-01, 6.8089e-04, 7.4570e-04,  ..., 9.7810e-01,
          8.8568e-01, 1.4560e-04],
         [8.5209e-03, 9.8256e-01, 9.9776e-01,  ..., 7.3008e-03,
          4.2564e-02, 1.4560e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3398, 0.0175, 0.0079,  ..., 0.9846, 0.3564, 0.0104],
         [0.2272, 0.0175, 0.0079,  ..., 0.0055, 0.1718, 0.0104],
         [0.2077, 0.0175, 0.0079,  ..., 0.0049, 0.1941, 0.0104],
         [0.2253, 0.9474, 0.9764,  ..., 0.0049, 0.2777, 0.9687]],
        [[0.9759, 0.0581, 0.0181,  ..., 0.0481, 0.0053, 0.0093],
         [0.0092, 0.0517, 0.0181,  ..., 0.0481, 0.0053, 0.0093],
         [0.0075, 0.0517, 0.0181,  ..., 0.0481, 0.9841, 0.9720],
         [0.0075, 0.8384, 0.9458,  ..., 0.8556, 0.0053, 0.0093]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:42,233 [Process: 0] Synchronize training processes
2024-08-18 19:47:42,234 [Process: 0] Evaluating...
2024-08-18 19:47:42,235 [Process: 0] EPOCH 154:
2024-08-18 19:47:42,237 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:43,390 [Process: 0] Synchronize training processes
2024-08-18 19:47:43,390 [Process: 0] Evaluating...
2024-08-18 19:47:43,392 [Process: 0] EPOCH 155:
2024-08-18 19:47:43,393 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5577e-02, 2.6521e-01, 3.7151e-02,  ..., 1.5391e-02,
          1.8463e-01, 5.0327e-02],
         [1.5577e-02, 3.8247e-01, 3.7151e-02,  ..., 1.5391e-02,
          1.4110e-01, 5.0327e-02],
         [9.5327e-01, 1.2685e-01, 3.7151e-02,  ..., 9.5383e-01,
          3.7213e-01, 8.2240e-01],
         [1.5577e-02, 2.2546e-01, 8.8855e-01,  ..., 1.5391e-02,
          3.0213e-01, 7.6944e-02]],
        [[1.4134e-02, 1.7852e-03, 4.1066e-04,  ..., 7.3629e-03,
          1.5140e-02, 9.9804e-01],
         [1.4134e-02, 1.0273e-02, 4.1066e-04,  ..., 7.3629e-03,
          1.5140e-02, 6.5413e-04],
         [9.5760e-01, 1.7852e-03, 4.1066e-04,  ..., 9.7791e-01,
          9.5458e-01, 6.5413e-04],
         [1.4134e-02, 9.8616e-01, 9.9877e-01,  ..., 7.3629e-03,
          1.5140e-02, 6.5413e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3135, 0.0095, 0.0363,  ..., 0.9844, 0.2632, 0.0146],
         [0.2813, 0.0095, 0.0363,  ..., 0.0052, 0.2581, 0.0146],
         [0.1595, 0.0095, 0.0363,  ..., 0.0052, 0.1854, 0.0146],
         [0.2458, 0.9715, 0.8912,  ..., 0.0052, 0.2933, 0.9563]],
        [[0.9783, 0.0598, 0.0593,  ..., 0.0372, 0.0070, 0.0061],
         [0.0101, 0.1082, 0.1145,  ..., 0.0352, 0.0070, 0.0061],
         [0.0058, 0.0598, 0.0593,  ..., 0.0352, 0.9789, 0.9817],
         [0.0058, 0.7722, 0.7670,  ..., 0.8923, 0.0070, 0.0061]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4291e-02, 2.0631e-01, 2.7222e-02,  ..., 2.2116e-02,
          1.8491e-01, 9.8432e-03],
         [4.3899e-02, 1.4702e-01, 2.0554e-02,  ..., 2.2116e-02,
          1.4288e-01, 9.8432e-03],
         [8.6204e-01, 2.9051e-01, 2.0554e-02,  ..., 9.3365e-01,
          3.2873e-01, 9.7047e-01],
         [4.9767e-02, 3.5616e-01, 9.3167e-01,  ..., 2.2116e-02,
          3.4349e-01, 9.8432e-03]],
        [[7.2657e-03, 9.6242e-05, 3.7496e-04,  ..., 1.3897e-02,
          4.4178e-02, 9.9111e-01],
         [7.2657e-03, 9.6242e-05, 3.7496e-04,  ..., 1.3897e-02,
          4.4178e-02, 2.9635e-03],
         [9.7820e-01, 9.6242e-05, 3.7496e-04,  ..., 9.5831e-01,
          8.6454e-01, 2.9635e-03],
         [7.2657e-03, 9.9971e-01, 9.9888e-01,  ..., 1.3897e-02,
          4.7103e-02, 2.9635e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3708, 0.0157, 0.0288,  ..., 0.9638, 0.2945, 0.0067],
         [0.2715, 0.0157, 0.0358,  ..., 0.0210, 0.2082, 0.0067],
         [0.1430, 0.0170, 0.0288,  ..., 0.0078, 0.1723, 0.0067],
         [0.2147, 0.9517, 0.9066,  ..., 0.0074, 0.3251, 0.9800]],
        [[0.9731, 0.0650, 0.0177,  ..., 0.0442, 0.0105, 0.0072],
         [0.0151, 0.0650, 0.0177,  ..., 0.0442, 0.0105, 0.0072],
         [0.0059, 0.0650, 0.0177,  ..., 0.0442, 0.9684, 0.9784],
         [0.0059, 0.8051, 0.9468,  ..., 0.8675, 0.0105, 0.0072]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:44,549 [Process: 0] Synchronize training processes
2024-08-18 19:47:44,549 [Process: 0] Evaluating...
2024-08-18 19:47:44,551 [Process: 0] EPOCH 156:
2024-08-18 19:47:44,553 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.6247e-02, 2.5649e-01, 1.9563e-02,  ..., 1.6499e-02,
          2.0386e-01, 2.7026e-02],
         [5.2209e-02, 2.4101e-01, 1.9563e-02,  ..., 1.6499e-02,
          1.4270e-01, 2.7026e-02],
         [8.1933e-01, 1.7482e-01, 1.9563e-02,  ..., 9.5050e-01,
          1.9996e-01, 9.1892e-01],
         [5.2209e-02, 3.2768e-01, 9.4131e-01,  ..., 1.6499e-02,
          4.5348e-01, 2.7026e-02]],
        [[1.7717e-02, 7.4813e-04, 2.2248e-03,  ..., 4.9846e-02,
          1.0265e-02, 9.9706e-01],
         [1.7717e-02, 7.4813e-04, 2.2248e-03,  ..., 4.9846e-02,
          1.0265e-02, 9.8081e-04],
         [9.4685e-01, 7.4813e-04, 2.2248e-03,  ..., 8.3844e-01,
          9.6921e-01, 9.8081e-04],
         [1.7717e-02, 9.9776e-01, 9.9333e-01,  ..., 6.1864e-02,
          1.0265e-02, 9.8081e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3459, 0.0118, 0.0372,  ..., 0.9947, 0.2632, 0.0222],
         [0.2055, 0.0118, 0.1121,  ..., 0.0018, 0.1519, 0.0222],
         [0.2041, 0.0118, 0.0372,  ..., 0.0018, 0.1965, 0.0225],
         [0.2445, 0.9645, 0.8135,  ..., 0.0018, 0.3883, 0.9330]],
        [[0.9913, 0.0331, 0.0327,  ..., 0.0603, 0.0044, 0.0012],
         [0.0029, 0.0331, 0.0327,  ..., 0.0603, 0.0044, 0.0012],
         [0.0029, 0.0331, 0.0327,  ..., 0.0857, 0.9869, 0.9965],
         [0.0029, 0.9008, 0.9018,  ..., 0.7937, 0.0044, 0.0012]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2216e-02, 2.1390e-01, 3.5247e-03,  ..., 3.2047e-02,
          2.1396e-01, 2.3736e-02],
         [2.2216e-02, 1.4746e-01, 3.5247e-03,  ..., 3.2047e-02,
          1.4267e-01, 2.5430e-02],
         [9.3335e-01, 1.4746e-01, 3.5247e-03,  ..., 9.0361e-01,
          1.8515e-01, 9.2710e-01],
         [2.2216e-02, 4.9118e-01, 9.8943e-01,  ..., 3.2291e-02,
          4.5822e-01, 2.3736e-02]],
        [[1.0380e-02, 5.0581e-04, 3.0417e-04,  ..., 2.8201e-02,
          4.0853e-02, 9.9761e-01],
         [1.0380e-02, 5.0581e-04, 3.0417e-04,  ..., 2.8201e-02,
          4.0853e-02, 7.9579e-04],
         [9.6886e-01, 5.0581e-04, 3.0417e-04,  ..., 9.1540e-01,
          8.7331e-01, 7.9579e-04],
         [1.0380e-02, 9.9848e-01, 9.9909e-01,  ..., 2.8201e-02,
          4.4980e-02, 7.9579e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:45,703 [Process: 0] Synchronize training processes
2024-08-18 19:47:45,703 [Process: 0] Evaluating...
2024-08-18 19:47:45,705 [Process: 0] EPOCH 157:
2024-08-18 19:47:45,707 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:46,860 [Process: 0] Synchronize training processes
2024-08-18 19:47:46,860 [Process: 0] Evaluating...
2024-08-18 19:47:46,862 [Process: 0] EPOCH 158:
2024-08-18 19:47:46,864 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3893, 0.0142, 0.0143,  ..., 0.9961, 0.2186, 0.0078],
         [0.2441, 0.0142, 0.0143,  ..., 0.0013, 0.1763, 0.0078],
         [0.1500, 0.0142, 0.0143,  ..., 0.0013, 0.1296, 0.0078],
         [0.2167, 0.9575, 0.9572,  ..., 0.0013, 0.4755, 0.9765]],
        [[0.9828, 0.0171, 0.0206,  ..., 0.1434, 0.0053, 0.0028],
         [0.0057, 0.0171, 0.0212,  ..., 0.0937, 0.0053, 0.0031],
         [0.0057, 0.0171, 0.0206,  ..., 0.0937, 0.9840, 0.9912],
         [0.0057, 0.9486, 0.9375,  ..., 0.6693, 0.0053, 0.0028]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3565e-02, 2.5171e-01, 1.4240e-02,  ..., 1.7542e-02,
          2.7054e-01, 2.1427e-02],
         [1.3565e-02, 1.4485e-01, 1.4240e-02,  ..., 1.7542e-02,
          1.6680e-01, 2.1427e-02],
         [9.5930e-01, 1.5032e-01, 1.4240e-02,  ..., 9.4738e-01,
          2.0329e-01, 9.3572e-01],
         [1.3565e-02, 4.5313e-01, 9.5728e-01,  ..., 1.7542e-02,
          3.5937e-01, 2.1427e-02]],
        [[1.3195e-02, 3.5476e-04, 4.7537e-05,  ..., 1.4350e-02,
          2.5157e-02, 9.9880e-01],
         [1.3195e-02, 1.9010e-03, 4.7537e-05,  ..., 1.4350e-02,
          2.5157e-02, 4.0101e-04],
         [9.6041e-01, 3.5476e-04, 4.7537e-05,  ..., 9.5695e-01,
          9.2270e-01, 4.0101e-04],
         [1.3195e-02, 9.9739e-01, 9.9986e-01,  ..., 1.4350e-02,
          2.6982e-02, 4.0101e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3409, 0.0193, 0.0250,  ..., 0.9969, 0.2147, 0.0369],
         [0.3602, 0.0193, 0.0250,  ..., 0.0010, 0.1261, 0.0608],
         [0.1286, 0.0193, 0.0285,  ..., 0.0010, 0.1315, 0.0369],
         [0.1703, 0.9420, 0.9215,  ..., 0.0010, 0.5278, 0.8655]],
        [[0.9160, 0.0355, 0.0169,  ..., 0.0997, 0.0066, 0.0021],
         [0.0410, 0.0355, 0.0196,  ..., 0.0997, 0.0066, 0.0021],
         [0.0215, 0.0355, 0.0169,  ..., 0.1346, 0.9801, 0.9937],
         [0.0215, 0.8935, 0.9465,  ..., 0.6660, 0.0066, 0.0021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1168e-02, 3.0795e-01, 7.5764e-03,  ..., 5.0860e-03,
          2.5559e-01, 2.6963e-02],
         [2.8205e-02, 2.4340e-01, 7.5764e-03,  ..., 5.0860e-03,
          1.4633e-01, 2.6946e-02],
         [9.1242e-01, 1.3129e-01, 7.5764e-03,  ..., 9.8474e-01,
          2.5063e-01, 9.1915e-01],
         [2.8205e-02, 3.1737e-01, 9.7727e-01,  ..., 5.0860e-03,
          3.4745e-01, 2.6946e-02]],
        [[7.2275e-02, 7.3286e-04, 6.7362e-04,  ..., 3.1445e-02,
          2.5313e-02, 9.9560e-01],
         [6.5187e-02, 1.8722e-03, 6.7362e-04,  ..., 3.1445e-02,
          2.5313e-02, 1.8464e-03],
         [7.9176e-01, 7.3286e-04, 6.7362e-04,  ..., 9.0567e-01,
          9.2406e-01, 1.2779e-03],
         [7.0781e-02, 9.9666e-01, 9.9798e-01,  ..., 3.1445e-02,
          2.5313e-02, 1.2779e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:48,015 [Process: 0] Synchronize training processes
2024-08-18 19:47:48,016 [Process: 0] Evaluating...
2024-08-18 19:47:48,017 [Process: 0] EPOCH 159:
2024-08-18 19:47:48,019 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:49,174 [Process: 0] Synchronize training processes
2024-08-18 19:47:49,174 [Process: 0] Evaluating...
2024-08-18 19:47:49,176 [Process: 0] EPOCH 160:
2024-08-18 19:47:49,178 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9932e-01, 1.8577e-02, 1.3023e-02,  ..., 9.8848e-01,
          3.2681e-01, 2.4165e-02],
         [3.1652e-01, 2.6294e-02, 1.3023e-02,  ..., 5.5915e-03,
          3.2091e-01, 2.4165e-02],
         [2.2617e-01, 1.8577e-02, 1.3023e-02,  ..., 2.9641e-03,
          1.3088e-01, 2.4165e-02],
         [1.5798e-01, 9.3655e-01, 9.6093e-01,  ..., 2.9641e-03,
          2.2139e-01, 9.2751e-01]],
        [[9.7134e-01, 7.0290e-02, 3.6492e-02,  ..., 4.6053e-02,
          5.4877e-03, 3.5538e-04],
         [9.5538e-03, 1.0691e-01, 3.6492e-02,  ..., 4.0570e-02,
          5.4877e-03, 3.5538e-04],
         [9.5538e-03, 7.0290e-02, 3.6492e-02,  ..., 4.0570e-02,
          9.8354e-01, 9.9893e-01],
         [9.5538e-03, 7.5251e-01, 8.9052e-01,  ..., 8.7281e-01,
          5.4877e-03, 3.5538e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.1312e-03, 2.7086e-01, 1.0074e-02,  ..., 1.7432e-02,
          2.0512e-01, 5.0102e-02],
         [6.1312e-03, 3.1397e-01, 1.0074e-02,  ..., 1.7432e-02,
          1.3882e-01, 5.0102e-02],
         [9.8161e-01, 1.3918e-01, 1.0074e-02,  ..., 9.4770e-01,
          3.0001e-01, 8.4968e-01],
         [6.1312e-03, 2.7599e-01, 9.6978e-01,  ..., 1.7432e-02,
          3.5606e-01, 5.0111e-02]],
        [[5.8979e-03, 1.8700e-03, 1.1555e-04,  ..., 2.5253e-02,
          8.8360e-03, 9.9791e-01],
         [5.8979e-03, 1.8700e-03, 1.1555e-04,  ..., 2.5253e-02,
          8.8360e-03, 6.9724e-04],
         [9.8231e-01, 1.8700e-03, 1.1555e-04,  ..., 9.2424e-01,
          9.7349e-01, 6.9724e-04],
         [5.8979e-03, 9.9439e-01, 9.9965e-01,  ..., 2.5253e-02,
          8.8360e-03, 6.9724e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3320, 0.0157, 0.0191,  ..., 0.9963, 0.1883, 0.0108],
         [0.2902, 0.0157, 0.0191,  ..., 0.0012, 0.1215, 0.0108],
         [0.2115, 0.0164, 0.0191,  ..., 0.0012, 0.1859, 0.0108],
         [0.1663, 0.9523, 0.9426,  ..., 0.0012, 0.5043, 0.9676]],
        [[0.9867, 0.0464, 0.0985,  ..., 0.0293, 0.0039, 0.0082],
         [0.0044, 0.0464, 0.0955,  ..., 0.0254, 0.0039, 0.0082],
         [0.0044, 0.0464, 0.0811,  ..., 0.0254, 0.9884, 0.9754],
         [0.0044, 0.8607, 0.7248,  ..., 0.9198, 0.0039, 0.0082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:50,332 [Process: 0] Synchronize training processes
2024-08-18 19:47:50,333 [Process: 0] Evaluating...
2024-08-18 19:47:50,334 [Process: 0] EPOCH 161:
2024-08-18 19:47:50,336 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:51,490 [Process: 0] Synchronize training processes
2024-08-18 19:47:51,490 [Process: 0] Evaluating...
2024-08-18 19:47:51,497 [Process: 0] EPOCH 162:
2024-08-18 19:47:51,499 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6438e-02, 2.6282e-01, 5.1796e-03,  ..., 1.7919e-02,
          2.1032e-01, 1.5742e-02],
         [2.6438e-02, 2.6603e-01, 5.1796e-03,  ..., 1.7919e-02,
          1.3846e-01, 1.5742e-02],
         [9.2069e-01, 1.3530e-01, 5.1796e-03,  ..., 9.4624e-01,
          3.1625e-01, 9.5277e-01],
         [2.6438e-02, 3.3585e-01, 9.8446e-01,  ..., 1.7919e-02,
          3.3497e-01, 1.5742e-02]],
        [[1.8928e-02, 2.5741e-04, 1.0360e-03,  ..., 2.7210e-02,
          1.9670e-02, 9.8046e-01],
         [1.8928e-02, 3.9137e-04, 1.0360e-03,  ..., 2.7210e-02,
          1.9670e-02, 7.9945e-03],
         [9.4321e-01, 2.5741e-04, 1.0360e-03,  ..., 9.1677e-01,
          9.3930e-01, 5.7709e-03],
         [1.8928e-02, 9.9909e-01, 9.9689e-01,  ..., 2.8810e-02,
          2.1363e-02, 5.7709e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3801, 0.0072, 0.0065,  ..., 0.9862, 0.3476, 0.0213],
         [0.2668, 0.0077, 0.0065,  ..., 0.0068, 0.1647, 0.0213],
         [0.2032, 0.0072, 0.0065,  ..., 0.0035, 0.1498, 0.0213],
         [0.1499, 0.9780, 0.9804,  ..., 0.0035, 0.3379, 0.9360]],
        [[0.9940, 0.0112, 0.0490,  ..., 0.0571, 0.0028, 0.0042],
         [0.0020, 0.0112, 0.0490,  ..., 0.0521, 0.0028, 0.0042],
         [0.0020, 0.0112, 0.0494,  ..., 0.0545, 0.9915, 0.9875],
         [0.0020, 0.9664, 0.8527,  ..., 0.8363, 0.0028, 0.0042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0627e-02, 2.6289e-01, 5.5877e-03,  ..., 1.1556e-02,
          2.1529e-01, 8.6064e-03],
         [1.0627e-02, 3.5470e-01, 5.5877e-03,  ..., 1.1556e-02,
          1.3449e-01, 8.6064e-03],
         [9.6812e-01, 1.2824e-01, 5.5877e-03,  ..., 9.6533e-01,
          2.3796e-01, 9.7418e-01],
         [1.0627e-02, 2.5417e-01, 9.8324e-01,  ..., 1.1556e-02,
          4.1226e-01, 8.6064e-03]],
        [[1.9904e-02, 4.8347e-04, 9.3182e-04,  ..., 7.4380e-02,
          2.5304e-02, 9.8458e-01],
         [1.9904e-02, 4.8347e-04, 9.3182e-04,  ..., 5.9567e-02,
          2.5304e-02, 1.1904e-02],
         [9.4029e-01, 4.8347e-04, 9.3182e-04,  ..., 8.0362e-01,
          9.1786e-01, 1.7581e-03],
         [1.9904e-02, 9.9855e-01, 9.9720e-01,  ..., 6.2431e-02,
          3.1533e-02, 1.7581e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
2024-08-18 19:47:52,652 [Process: 0] Synchronize training processes
2024-08-18 19:47:52,653 [Process: 0] Evaluating...
2024-08-18 19:47:52,654 [Process: 0] EPOCH 163:
2024-08-18 19:47:52,656 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3802, 0.0495, 0.0217,  ..., 0.9930, 0.3302, 0.0359],
         [0.3246, 0.0976, 0.0217,  ..., 0.0028, 0.3104, 0.0427],
         [0.1762, 0.0495, 0.0217,  ..., 0.0021, 0.1382, 0.0359],
         [0.1189, 0.8034, 0.9349,  ..., 0.0021, 0.2211, 0.8855]],
        [[0.9766, 0.0472, 0.0281,  ..., 0.0188, 0.0044, 0.0097],
         [0.0108, 0.0749, 0.0281,  ..., 0.0188, 0.0044, 0.0097],
         [0.0063, 0.0574, 0.0298,  ..., 0.0188, 0.9868, 0.9708],
         [0.0063, 0.8205, 0.9141,  ..., 0.9435, 0.0044, 0.0097]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9893e-02, 2.3689e-01, 3.1701e-02,  ..., 2.5345e-02,
          1.7806e-01, 1.9771e-02],
         [1.9893e-02, 1.6220e-01, 3.1701e-02,  ..., 2.5345e-02,
          1.2484e-01, 1.9771e-02],
         [9.4032e-01, 1.5895e-01, 3.1701e-02,  ..., 9.2396e-01,
          1.9556e-01, 9.4069e-01],
         [1.9893e-02, 4.4197e-01, 9.0490e-01,  ..., 2.5345e-02,
          5.0153e-01, 1.9771e-02]],
        [[4.4517e-03, 7.5891e-03, 6.9931e-04,  ..., 2.5410e-02,
          1.3761e-02, 9.8490e-01],
         [4.4517e-03, 8.3651e-02, 6.9931e-04,  ..., 2.8189e-02,
          1.3761e-02, 5.0347e-03],
         [9.8665e-01, 7.5891e-03, 6.9931e-04,  ..., 9.2099e-01,
          9.5872e-01, 5.0347e-03],
         [4.4517e-03, 9.0117e-01, 9.9790e-01,  ..., 2.5410e-02,
          1.3761e-02, 5.0347e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2486, 0.0060, 0.0180,  ..., 0.9943, 0.3214, 0.0131],
         [0.1811, 0.0065, 0.0180,  ..., 0.0019, 0.3132, 0.0131],
         [0.2813, 0.0060, 0.0259,  ..., 0.0019, 0.1758, 0.0131],
         [0.2890, 0.9816, 0.9381,  ..., 0.0019, 0.1897, 0.9607]],
        [[0.9864, 0.0221, 0.0276,  ..., 0.0446, 0.0093, 0.0055],
         [0.0045, 0.0297, 0.0276,  ..., 0.0370, 0.0093, 0.0055],
         [0.0045, 0.0221, 0.0343,  ..., 0.0437, 0.9720, 0.9836],
         [0.0045, 0.9260, 0.9104,  ..., 0.8747, 0.0093, 0.0055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3631e-02, 2.4179e-01, 2.9161e-02,  ..., 2.4382e-02,
          1.8390e-01, 1.1964e-02],
         [2.3334e-02, 1.2892e-01, 2.0477e-02,  ..., 2.4382e-02,
          1.1672e-01, 1.1964e-02],
         [9.2970e-01, 1.2892e-01, 2.0477e-02,  ..., 9.2685e-01,
          1.1672e-01, 9.6411e-01],
         [2.3334e-02, 5.0036e-01, 9.2988e-01,  ..., 2.4382e-02,
          5.8267e-01, 1.1964e-02]],
        [[2.3455e-02, 1.6443e-03, 1.5503e-04,  ..., 4.2115e-02,
          2.6214e-02, 9.9839e-01],
         [2.3455e-02, 2.0751e-03, 1.5503e-04,  ..., 3.4479e-02,
          2.6214e-02, 8.8974e-04],
         [9.2964e-01, 1.6443e-03, 1.5503e-04,  ..., 8.8893e-01,
          9.1884e-01, 3.6192e-04],
         [2.3455e-02, 9.9464e-01, 9.9953e-01,  ..., 3.4479e-02,
          2.8728e-02, 3.6192e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:53,805 [Process: 0] Synchronize training processes
2024-08-18 19:47:53,805 [Process: 0] Evaluating...
2024-08-18 19:47:53,807 [Process: 0] EPOCH 164:
2024-08-18 19:47:53,809 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:54,961 [Process: 0] Synchronize training processes
2024-08-18 19:47:54,961 [Process: 0] Evaluating...
2024-08-18 19:47:54,963 [Process: 0] EPOCH 165:
2024-08-18 19:47:54,965 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5966, 0.0137, 0.0097,  ..., 0.9801, 0.4453, 0.0140],
         [0.2079, 0.0204, 0.0109,  ..., 0.0058, 0.1867, 0.0140],
         [0.0977, 0.0137, 0.0097,  ..., 0.0083, 0.1310, 0.0176],
         [0.0977, 0.9522, 0.9696,  ..., 0.0058, 0.2370, 0.9544]],
        [[0.9900, 0.0107, 0.0154,  ..., 0.0078, 0.0045, 0.0024],
         [0.0033, 0.0107, 0.0154,  ..., 0.0078, 0.0045, 0.0024],
         [0.0033, 0.0107, 0.0154,  ..., 0.0078, 0.9865, 0.9928],
         [0.0033, 0.9680, 0.9538,  ..., 0.9766, 0.0045, 0.0024]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5748e-02, 2.4530e-01, 2.9495e-02,  ..., 1.0310e-02,
          2.7348e-01, 1.7035e-02],
         [1.5748e-02, 1.0732e-01, 2.9495e-02,  ..., 1.0310e-02,
          2.3733e-01, 1.7035e-02],
         [9.5276e-01, 1.0732e-01, 2.9495e-02,  ..., 9.6907e-01,
          1.3450e-01, 9.4885e-01],
         [1.5748e-02, 5.4007e-01, 9.1151e-01,  ..., 1.0310e-02,
          3.5469e-01, 1.7078e-02]],
        [[1.5056e-02, 3.3132e-03, 1.7603e-05,  ..., 1.6049e-02,
          3.4050e-02, 9.9092e-01],
         [1.5056e-02, 2.0599e-03, 1.7603e-05,  ..., 1.6049e-02,
          3.3864e-02, 5.8361e-03],
         [9.5483e-01, 2.0599e-03, 1.7603e-05,  ..., 9.5185e-01,
          8.9822e-01, 1.6238e-03],
         [1.5056e-02, 9.9257e-01, 9.9995e-01,  ..., 1.6049e-02,
          3.3870e-02, 1.6238e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4640, 0.0214, 0.0231,  ..., 0.9819, 0.4468, 0.0116],
         [0.3037, 0.0214, 0.0231,  ..., 0.0060, 0.1824, 0.0116],
         [0.1161, 0.0214, 0.0231,  ..., 0.0060, 0.1685, 0.0120],
         [0.1161, 0.9359, 0.9308,  ..., 0.0060, 0.2022, 0.9648]],
        [[0.9150, 0.0275, 0.0109,  ..., 0.0198, 0.0069, 0.0118],
         [0.0376, 0.0275, 0.0109,  ..., 0.0198, 0.0069, 0.0118],
         [0.0249, 0.0275, 0.0115,  ..., 0.0198, 0.9793, 0.9645],
         [0.0225, 0.9174, 0.9667,  ..., 0.9407, 0.0069, 0.0118]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:47:56,114 [Process: 0] Synchronize training processes
2024-08-18 19:47:56,114 [Process: 0] Evaluating...
2024-08-18 19:47:56,116 [Process: 0] EPOCH 166:
2024-08-18 19:47:56,118 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:57,268 [Process: 0] Synchronize training processes
2024-08-18 19:47:57,268 [Process: 0] Evaluating...
2024-08-18 19:47:57,270 [Process: 0] EPOCH 167:
2024-08-18 19:47:57,272 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6965e-02, 1.2771e-02, 2.8623e-03,  ..., 9.9368e-03,
          2.8201e-01, 3.4862e-02],
         [2.6965e-02, 1.2771e-02, 2.8623e-03,  ..., 9.9368e-03,
          1.1773e-01, 3.8094e-02],
         [9.1910e-01, 1.2771e-02, 2.8623e-03,  ..., 9.7019e-01,
          1.1773e-01, 8.9218e-01],
         [2.6965e-02, 9.6169e-01, 9.9141e-01,  ..., 9.9368e-03,
          4.8253e-01, 3.4862e-02]],
        [[1.5082e-03, 3.7902e-03, 2.5094e-05,  ..., 2.6274e-02,
          5.3130e-02, 9.8308e-01],
         [1.5082e-03, 6.1519e-03, 2.5094e-05,  ..., 2.5775e-02,
          5.3130e-02, 9.9485e-03],
         [9.9548e-01, 3.7902e-03, 2.5094e-05,  ..., 9.2217e-01,
          8.2851e-01, 3.4857e-03],
         [1.5082e-03, 9.8627e-01, 9.9992e-01,  ..., 2.5775e-02,
          6.5232e-02, 3.4857e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5854, 0.0216, 0.0073,  ..., 0.9856, 0.2977, 0.0282],
         [0.1552, 0.0216, 0.0073,  ..., 0.0048, 0.1471, 0.0320],
         [0.1080, 0.0216, 0.0077,  ..., 0.0048, 0.1194, 0.0282],
         [0.1513, 0.9351, 0.9777,  ..., 0.0048, 0.4358, 0.9116]],
        [[0.9881, 0.0178, 0.0117,  ..., 0.0161, 0.0046, 0.0021],
         [0.0040, 0.0178, 0.0117,  ..., 0.0161, 0.0046, 0.0021],
         [0.0039, 0.0178, 0.0117,  ..., 0.0161, 0.9861, 0.9938],
         [0.0039, 0.9467, 0.9649,  ..., 0.9517, 0.0046, 0.0021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0055, 0.2119, 0.0037,  ..., 0.0121, 0.2863, 0.0121],
         [0.0055, 0.5660, 0.0037,  ..., 0.0121, 0.1698, 0.0121],
         [0.9836, 0.0839, 0.0037,  ..., 0.9636, 0.1410, 0.9638],
         [0.0055, 0.1382, 0.9890,  ..., 0.0121, 0.4030, 0.0121]],
        [[0.0148, 0.0021, 0.0033,  ..., 0.0270, 0.0177, 0.9960],
         [0.0148, 0.0021, 0.0033,  ..., 0.0270, 0.0177, 0.0015],
         [0.9557, 0.0021, 0.0033,  ..., 0.9190, 0.9469, 0.0013],
         [0.0148, 0.9937, 0.9900,  ..., 0.0270, 0.0177, 0.0013]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7642, 0.0093, 0.0123,  ..., 0.9955, 0.5802, 0.0196],
         [0.1315, 0.0093, 0.0123,  ..., 0.0019, 0.1106, 0.0196],
         [0.0522, 0.0093, 0.0146,  ..., 0.0013, 0.1106, 0.0220],
         [0.0522, 0.9720, 0.9607,  ..., 0.0013, 0.1987, 0.9389]],
        [[0.9616, 0.0287, 0.0358,  ..., 0.0200, 0.0068, 0.0069],
         [0.0162, 0.0287, 0.0395,  ..., 0.0200, 0.0068, 0.0069],
         [0.0111, 0.0351, 0.0358,  ..., 0.0200, 0.9797, 0.9793],
         [0.0111, 0.9075, 0.8889,  ..., 0.9399, 0.0068, 0.0069]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:47:58,418 [Process: 0] Synchronize training processes
2024-08-18 19:47:58,418 [Process: 0] Evaluating...
2024-08-18 19:47:58,420 [Process: 0] EPOCH 168:
2024-08-18 19:47:58,422 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:47:59,573 [Process: 0] Synchronize training processes
2024-08-18 19:47:59,573 [Process: 0] Evaluating...
2024-08-18 19:47:59,575 [Process: 0] EPOCH 169:
2024-08-18 19:47:59,577 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5119e-02, 3.0543e-01, 1.9779e-02,  ..., 3.9560e-02,
          2.9643e-01, 2.3344e-02],
         [1.5119e-02, 2.5198e-01, 1.5912e-02,  ..., 4.0774e-02,
          2.0650e-01, 2.3344e-02],
         [9.5464e-01, 1.3652e-01, 1.5912e-02,  ..., 8.8011e-01,
          1.7083e-01, 9.2997e-01],
         [1.5119e-02, 3.0607e-01, 9.4840e-01,  ..., 3.9560e-02,
          3.2624e-01, 2.3344e-02]],
        [[1.3450e-02, 1.0044e-03, 7.2283e-04,  ..., 2.1037e-02,
          1.3075e-02, 9.6229e-01],
         [1.3450e-02, 1.0044e-03, 7.2283e-04,  ..., 2.1037e-02,
          1.3075e-02, 2.5314e-02],
         [9.5965e-01, 1.0044e-03, 7.2283e-04,  ..., 9.3689e-01,
          9.6077e-01, 6.1990e-03],
         [1.3450e-02, 9.9699e-01, 9.9783e-01,  ..., 2.1037e-02,
          1.3075e-02, 6.1990e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6929, 0.0093, 0.0111,  ..., 0.9876, 0.6567, 0.0216],
         [0.0652, 0.0093, 0.0111,  ..., 0.0041, 0.0908, 0.0175],
         [0.1768, 0.0093, 0.0111,  ..., 0.0041, 0.0908, 0.0175],
         [0.0652, 0.9720, 0.9668,  ..., 0.0041, 0.1617, 0.9434]],
        [[0.9929, 0.0376, 0.0331,  ..., 0.0220, 0.0046, 0.0033],
         [0.0024, 0.0350, 0.0331,  ..., 0.0220, 0.0046, 0.0033],
         [0.0024, 0.0441, 0.0331,  ..., 0.0220, 0.9863, 0.9902],
         [0.0024, 0.8833, 0.9006,  ..., 0.9339, 0.0046, 0.0033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2668e-03, 3.2139e-01, 9.7987e-03,  ..., 1.8414e-02,
          2.3796e-01, 1.8402e-02],
         [9.2668e-03, 2.4804e-01, 9.7987e-03,  ..., 1.8414e-02,
          2.7919e-01, 1.9191e-02],
         [9.7220e-01, 1.2295e-01, 9.7987e-03,  ..., 9.4394e-01,
          2.7085e-01, 9.4400e-01],
         [9.2668e-03, 3.0762e-01, 9.7060e-01,  ..., 1.9227e-02,
          2.1200e-01, 1.8402e-02]],
        [[3.5049e-02, 4.3869e-05, 1.6584e-04,  ..., 3.9128e-02,
          3.4605e-02, 9.9602e-01],
         [3.5049e-02, 4.3869e-05, 1.6584e-04,  ..., 3.9128e-02,
          2.9072e-02, 1.3258e-03],
         [8.9485e-01, 4.3869e-05, 1.6584e-04,  ..., 8.7763e-01,
          9.0708e-01, 1.3258e-03],
         [3.5049e-02, 9.9987e-01, 9.9950e-01,  ..., 4.4110e-02,
          2.9241e-02, 1.3258e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:48:00,727 [Process: 0] Synchronize training processes
2024-08-18 19:48:00,727 [Process: 0] Evaluating...
2024-08-18 19:48:00,729 [Process: 0] EPOCH 170:
2024-08-18 19:48:00,731 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7777e-01, 1.3014e-02, 1.5497e-02,  ..., 9.9589e-01,
          5.8820e-01, 3.1939e-03],
         [1.5579e-01, 1.4722e-02, 1.5497e-02,  ..., 1.3704e-03,
          1.0167e-01, 3.1939e-03],
         [2.7388e-01, 1.3014e-02, 1.5497e-02,  ..., 1.3704e-03,
          1.3116e-01, 3.1939e-03],
         [9.2561e-02, 9.5925e-01, 9.5351e-01,  ..., 1.3704e-03,
          1.7897e-01, 9.9042e-01]],
        [[9.9737e-01, 3.3913e-02, 4.6547e-02,  ..., 9.6023e-02,
          9.2180e-04, 4.0966e-03],
         [8.7639e-04, 3.0093e-02, 8.2774e-02,  ..., 2.3483e-01,
          9.2180e-04, 4.0966e-03],
         [8.7639e-04, 3.0093e-02, 4.6547e-02,  ..., 9.4514e-02,
          9.9723e-01, 9.8771e-01],
         [8.7639e-04, 9.0590e-01, 8.2413e-01,  ..., 5.7463e-01,
          9.2180e-04, 4.0966e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0332, 0.1656, 0.0018,  ..., 0.0243, 0.3497, 0.0109],
         [0.0309, 0.0819, 0.0018,  ..., 0.0243, 0.1444, 0.0109],
         [0.9034, 0.0819, 0.0019,  ..., 0.9270, 0.1444, 0.9673],
         [0.0325, 0.6705, 0.9944,  ..., 0.0243, 0.3615, 0.0109]],
        [[0.0398, 0.0022, 0.0050,  ..., 0.0265, 0.0190, 0.9739],
         [0.0743, 0.0116, 0.0050,  ..., 0.0265, 0.0190, 0.0156],
         [0.8448, 0.0022, 0.0050,  ..., 0.9174, 0.9430, 0.0052],
         [0.0412, 0.9840, 0.9849,  ..., 0.0295, 0.0190, 0.0052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8694, 0.0344, 0.0362,  ..., 0.9857, 0.5303, 0.0117],
         [0.0461, 0.0793, 0.0239,  ..., 0.0048, 0.1857, 0.0117],
         [0.0519, 0.0344, 0.0239,  ..., 0.0048, 0.1260, 0.0117],
         [0.0326, 0.8519, 0.9159,  ..., 0.0048, 0.1580, 0.9649]],
        [[0.9566, 0.0176, 0.0348,  ..., 0.0102, 0.0018, 0.0041],
         [0.0181, 0.0199, 0.0530,  ..., 0.0102, 0.0018, 0.0041],
         [0.0126, 0.0176, 0.0347,  ..., 0.0102, 0.9946, 0.9878],
         [0.0126, 0.9449, 0.8775,  ..., 0.9694, 0.0018, 0.0041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1674e-02, 7.6615e-02, 1.5278e-02,  ..., 6.6472e-02,
          2.2673e-01, 2.1063e-02],
         [2.1674e-02, 3.9076e-02, 7.5602e-03,  ..., 5.0251e-02,
          1.0100e-01, 2.1063e-02],
         [9.3453e-01, 3.9076e-02, 7.5602e-03,  ..., 8.2858e-01,
          1.0100e-01, 9.2712e-01],
         [2.2118e-02, 8.4523e-01, 9.6960e-01,  ..., 5.4695e-02,
          5.7126e-01, 3.0750e-02]],
        [[4.6393e-03, 1.3518e-03, 3.9656e-04,  ..., 1.2579e-02,
          1.3462e-02, 9.9742e-01],
         [4.6393e-03, 7.5425e-03, 3.9656e-04,  ..., 1.2579e-02,
          1.3801e-02, 8.6034e-04],
         [9.8608e-01, 1.3518e-03, 3.9656e-04,  ..., 9.6226e-01,
          9.5927e-01, 8.6034e-04],
         [4.6393e-03, 9.8975e-01, 9.9881e-01,  ..., 1.2579e-02,
          1.3462e-02, 8.6034e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:01,881 [Process: 0] Synchronize training processes
2024-08-18 19:48:01,882 [Process: 0] Evaluating...
2024-08-18 19:48:01,883 [Process: 0] EPOCH 171:
2024-08-18 19:48:01,885 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:03,035 [Process: 0] Synchronize training processes
2024-08-18 19:48:03,035 [Process: 0] Evaluating...
2024-08-18 19:48:03,041 [Process: 0] EPOCH 172:
2024-08-18 19:48:03,043 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9150, 0.0091, 0.0150,  ..., 0.9790, 0.2538, 0.0195],
         [0.0324, 0.0091, 0.0150,  ..., 0.0070, 0.1644, 0.0176],
         [0.0275, 0.0091, 0.0150,  ..., 0.0070, 0.0988, 0.0193],
         [0.0251, 0.9727, 0.9550,  ..., 0.0070, 0.4830, 0.9436]],
        [[0.9772, 0.0882, 0.0883,  ..., 0.0183, 0.0129, 0.0041],
         [0.0076, 0.2395, 0.2866,  ..., 0.0183, 0.0129, 0.0041],
         [0.0076, 0.0882, 0.0883,  ..., 0.0215, 0.9612, 0.9878],
         [0.0076, 0.5840, 0.5368,  ..., 0.9420, 0.0129, 0.0041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5692e-03, 3.8744e-01, 7.6659e-02,  ..., 9.1700e-03,
          3.4386e-01, 2.0749e-02],
         [9.5692e-03, 1.4870e-01, 5.3436e-02,  ..., 9.1700e-03,
          1.3547e-01, 2.0749e-02],
         [9.7129e-01, 1.1816e-01, 5.3436e-02,  ..., 9.7249e-01,
          1.3547e-01, 9.3775e-01],
         [9.5692e-03, 3.4570e-01, 8.1647e-01,  ..., 9.1700e-03,
          3.8521e-01, 2.0749e-02]],
        [[4.4815e-03, 1.4769e-03, 1.5964e-04,  ..., 1.4736e-02,
          4.0300e-02, 9.9971e-01],
         [4.4815e-03, 2.3419e-03, 1.5964e-04,  ..., 1.4736e-02,
          4.0300e-02, 9.7301e-05],
         [9.8656e-01, 1.4769e-03, 1.5964e-04,  ..., 9.5579e-01,
          8.4857e-01, 9.7301e-05],
         [4.4815e-03, 9.9470e-01, 9.9952e-01,  ..., 1.4736e-02,
          7.0831e-02, 9.7301e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4532e-01, 8.4259e-03, 7.9236e-03,  ..., 9.9719e-01,
          6.4508e-01, 6.2960e-02],
         [1.8226e-02, 8.2326e-03, 7.9236e-03,  ..., 9.9621e-04,
          1.6411e-01, 5.9469e-02],
         [1.8226e-02, 8.2326e-03, 7.9236e-03,  ..., 9.0573e-04,
          7.8645e-02, 5.2801e-02],
         [1.8226e-02, 9.7511e-01, 9.7623e-01,  ..., 9.0573e-04,
          1.1217e-01, 8.2477e-01]],
        [[9.9224e-01, 6.1733e-02, 2.2646e-02,  ..., 6.1064e-02,
          3.5806e-02, 5.8756e-03],
         [2.5862e-03, 8.2269e-02, 3.2477e-02,  ..., 6.1064e-02,
          3.5806e-02, 5.8756e-03],
         [2.5862e-03, 7.7535e-02, 2.6150e-02,  ..., 6.1064e-02,
          8.9258e-01, 9.8237e-01],
         [2.5862e-03, 7.7846e-01, 9.1873e-01,  ..., 8.1681e-01,
          3.5806e-02, 5.8756e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:48:04,195 [Process: 0] Synchronize training processes
2024-08-18 19:48:04,195 [Process: 0] Evaluating...
2024-08-18 19:48:04,197 [Process: 0] EPOCH 173:
2024-08-18 19:48:04,198 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:05,348 [Process: 0] Synchronize training processes
2024-08-18 19:48:05,348 [Process: 0] Evaluating...
2024-08-18 19:48:05,350 [Process: 0] EPOCH 174:
2024-08-18 19:48:05,352 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9557e-03, 1.5389e-02, 3.3295e-02,  ..., 1.3958e-02,
          2.6461e-01, 1.8350e-01],
         [6.9557e-03, 1.5389e-02, 2.6622e-02,  ..., 1.3958e-02,
          1.3545e-01, 1.1932e-01],
         [9.7913e-01, 1.5389e-02, 2.6622e-02,  ..., 9.5813e-01,
          2.3228e-01, 4.3644e-01],
         [6.9557e-03, 9.5383e-01, 9.1346e-01,  ..., 1.3958e-02,
          3.6767e-01, 2.6073e-01]],
        [[5.1759e-03, 8.5187e-04, 3.2868e-03,  ..., 1.7666e-02,
          6.2672e-03, 9.9849e-01],
         [5.1759e-03, 1.4396e-03, 3.2868e-03,  ..., 1.7666e-02,
          6.2672e-03, 5.0398e-04],
         [9.8447e-01, 8.5187e-04, 3.2868e-03,  ..., 9.4700e-01,
          9.8120e-01, 5.0398e-04],
         [5.1759e-03, 9.9686e-01, 9.9014e-01,  ..., 1.7666e-02,
          6.2672e-03, 5.0398e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8648, 0.0225, 0.0076,  ..., 0.9906, 0.8050, 0.0209],
         [0.0496, 0.0206, 0.0076,  ..., 0.0044, 0.0584, 0.0209],
         [0.0447, 0.0221, 0.0076,  ..., 0.0025, 0.0584, 0.0239],
         [0.0409, 0.9348, 0.9772,  ..., 0.0025, 0.0782, 0.9344]],
        [[0.9960, 0.0159, 0.0234,  ..., 0.0199, 0.0085, 0.0024],
         [0.0013, 0.0159, 0.0294,  ..., 0.0199, 0.0085, 0.0024],
         [0.0013, 0.0215, 0.0234,  ..., 0.0199, 0.9745, 0.9928],
         [0.0013, 0.9467, 0.9237,  ..., 0.9404, 0.0085, 0.0024]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8322e-02, 2.9849e-02, 2.5523e-02,  ..., 1.8378e-02,
          2.4507e-01, 1.4282e-02],
         [3.7484e-02, 2.1381e-02, 2.5523e-02,  ..., 1.8378e-02,
          1.2840e-01, 1.4282e-02],
         [9.0587e-01, 2.1381e-02, 2.5523e-02,  ..., 9.4487e-01,
          2.4322e-01, 9.5715e-01],
         [2.8322e-02, 9.2739e-01, 9.2343e-01,  ..., 1.8378e-02,
          3.8332e-01, 1.4282e-02]],
        [[6.2592e-02, 9.1234e-05, 1.3516e-04,  ..., 2.2755e-02,
          1.9309e-02, 9.9756e-01],
         [8.3670e-02, 3.3089e-04, 1.3516e-04,  ..., 2.2755e-02,
          1.6757e-02, 8.6167e-04],
         [7.4169e-01, 9.1234e-05, 1.3516e-04,  ..., 9.2972e-01,
          9.4718e-01, 7.8965e-04],
         [1.1205e-01, 9.9949e-01, 9.9959e-01,  ..., 2.4773e-02,
          1.6757e-02, 7.8965e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8877, 0.0202, 0.0406,  ..., 0.9895, 0.6334, 0.0349],
         [0.0369, 0.0202, 0.0543,  ..., 0.0048, 0.1183, 0.0349],
         [0.0384, 0.0211, 0.0406,  ..., 0.0029, 0.1094, 0.0417],
         [0.0369, 0.9386, 0.8645,  ..., 0.0029, 0.1390, 0.8885]],
        [[0.8898, 0.0146, 0.0204,  ..., 0.0211, 0.0037, 0.0190],
         [0.0490, 0.0152, 0.0204,  ..., 0.0200, 0.0037, 0.0190],
         [0.0340, 0.0146, 0.0205,  ..., 0.0273, 0.9890, 0.9429],
         [0.0273, 0.9556, 0.9387,  ..., 0.9315, 0.0037, 0.0190]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:48:06,507 [Process: 0] Synchronize training processes
2024-08-18 19:48:06,507 [Process: 0] Evaluating...
2024-08-18 19:48:06,509 [Process: 0] EPOCH 175:
2024-08-18 19:48:06,511 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0244e-02, 2.0134e-01, 1.6488e-02,  ..., 2.0601e-02,
          1.0037e-01, 9.5973e-03],
         [2.0244e-02, 1.0250e-01, 1.3811e-02,  ..., 2.0601e-02,
          6.9836e-02, 9.5973e-03],
         [9.3927e-01, 2.5957e-01, 1.3811e-02,  ..., 9.3820e-01,
          7.1911e-01, 9.7121e-01],
         [2.0244e-02, 4.3658e-01, 9.5589e-01,  ..., 2.0601e-02,
          1.1068e-01, 9.5973e-03]],
        [[2.7323e-02, 1.0991e-04, 2.9741e-04,  ..., 3.1427e-02,
          1.5747e-02, 9.9738e-01],
         [4.2219e-02, 1.0991e-04, 2.9741e-04,  ..., 3.1427e-02,
          1.3228e-02, 8.7268e-04],
         [8.9643e-01, 1.0991e-04, 2.9741e-04,  ..., 9.0572e-01,
          9.5780e-01, 8.7268e-04],
         [3.4028e-02, 9.9967e-01, 9.9911e-01,  ..., 3.1427e-02,
          1.3228e-02, 8.7268e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9239, 0.0490, 0.0072,  ..., 0.9955, 0.7503, 0.0200],
         [0.0232, 0.0673, 0.0059,  ..., 0.0013, 0.0612, 0.0200],
         [0.0296, 0.0490, 0.0059,  ..., 0.0019, 0.0612, 0.0200],
         [0.0232, 0.8347, 0.9809,  ..., 0.0013, 0.1272, 0.9401]],
        [[0.9807, 0.0208, 0.0128,  ..., 0.0061, 0.0068, 0.0079],
         [0.0071, 0.0208, 0.0128,  ..., 0.0061, 0.0087, 0.0079],
         [0.0070, 0.0208, 0.0128,  ..., 0.0061, 0.9778, 0.9764],
         [0.0052, 0.9375, 0.9617,  ..., 0.9818, 0.0068, 0.0079]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6546e-02, 2.4935e-01, 2.0839e-02,  ..., 1.6139e-02,
          1.2939e-01, 1.4641e-02],
         [2.6546e-02, 1.3192e-01, 1.9309e-02,  ..., 1.8072e-02,
          1.0117e-01, 1.6325e-02],
         [9.2036e-01, 2.4022e-01, 1.9309e-02,  ..., 9.4965e-01,
          5.9699e-01, 9.5439e-01],
         [2.6546e-02, 3.7851e-01, 9.4054e-01,  ..., 1.6139e-02,
          1.7246e-01, 1.4641e-02]],
        [[7.0604e-03, 5.3571e-03, 1.0387e-04,  ..., 1.2901e-02,
          3.1085e-02, 9.9848e-01],
         [7.0604e-03, 1.4510e-02, 1.0387e-04,  ..., 1.2901e-02,
          3.1085e-02, 5.0652e-04],
         [9.7882e-01, 5.3571e-03, 1.0387e-04,  ..., 9.6130e-01,
          9.0091e-01, 5.0652e-04],
         [7.0604e-03, 9.7478e-01, 9.9969e-01,  ..., 1.2901e-02,
          3.6923e-02, 5.0652e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 19:48:07,663 [Process: 0] Synchronize training processes
2024-08-18 19:48:07,663 [Process: 0] Evaluating...
2024-08-18 19:48:07,665 [Process: 0] EPOCH 176:
2024-08-18 19:48:07,666 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:08,812 [Process: 0] Synchronize training processes
2024-08-18 19:48:08,812 [Process: 0] Evaluating...
2024-08-18 19:48:08,814 [Process: 0] EPOCH 177:
2024-08-18 19:48:08,815 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0070, 0.0225, 0.0103,  ..., 0.9847, 0.7611, 0.0144],
         [0.0070, 0.0159, 0.0103,  ..., 0.0060, 0.1197, 0.0122],
         [0.9789, 0.0173, 0.0103,  ..., 0.0053, 0.0596, 0.0122],
         [0.0070, 0.9442, 0.9690,  ..., 0.0040, 0.0596, 0.9612]],
        [[0.9963, 0.0077, 0.0071,  ..., 0.0421, 0.0122, 0.0073],
         [0.0012, 0.0077, 0.0071,  ..., 0.0534, 0.0122, 0.0073],
         [0.0012, 0.0077, 0.0071,  ..., 0.0421, 0.9633, 0.9782],
         [0.0012, 0.9769, 0.9788,  ..., 0.8624, 0.0122, 0.0073]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2233e-02, 1.7634e-01, 1.1768e-02,  ..., 8.4199e-03,
          2.8977e-01, 2.0710e-02],
         [1.3357e-02, 1.2272e-01, 1.0649e-02,  ..., 8.4199e-03,
          2.2660e-01, 2.0710e-02],
         [9.6218e-01, 1.1540e-01, 1.0649e-02,  ..., 9.7474e-01,
          1.8711e-01, 9.3787e-01],
         [1.2233e-02, 5.8555e-01, 9.6693e-01,  ..., 8.4199e-03,
          2.9652e-01, 2.0710e-02]],
        [[2.9460e-04, 7.7723e-04, 4.0020e-04,  ..., 1.0576e-02,
          1.2919e-02, 9.8964e-01],
         [2.9460e-04, 7.7723e-04, 4.0020e-04,  ..., 1.0576e-02,
          1.2919e-02, 3.9344e-03],
         [9.9912e-01, 7.7723e-04, 4.0020e-04,  ..., 9.6827e-01,
          9.6064e-01, 3.2124e-03],
         [2.9460e-04, 9.9767e-01, 9.9880e-01,  ..., 1.0576e-02,
          1.3521e-02, 3.2124e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3168, 0.0174, 0.0063,  ..., 0.9940, 0.3872, 0.0066],
         [0.0721, 0.0174, 0.0063,  ..., 0.0023, 0.3224, 0.0066],
         [0.5390, 0.0174, 0.0063,  ..., 0.0019, 0.0990, 0.0066],
         [0.0721, 0.9478, 0.9812,  ..., 0.0019, 0.1915, 0.9803]],
        [[0.9875, 0.0199, 0.0323,  ..., 0.0259, 0.0567, 0.0125],
         [0.0041, 0.0199, 0.0323,  ..., 0.0259, 0.0567, 0.0144],
         [0.0043, 0.0199, 0.0323,  ..., 0.0259, 0.8300, 0.9607],
         [0.0041, 0.9403, 0.9031,  ..., 0.9223, 0.0567, 0.0125]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6806e-02, 3.6665e-02, 1.9635e-02,  ..., 1.3827e-02,
          2.5764e-01, 4.2035e-02],
         [3.6806e-02, 3.6665e-02, 1.7456e-02,  ..., 1.3827e-02,
          1.3117e-01, 3.3266e-02],
         [8.8958e-01, 3.6665e-02, 1.7456e-02,  ..., 9.5852e-01,
          3.8758e-01, 8.9143e-01],
         [3.6806e-02, 8.9001e-01, 9.4545e-01,  ..., 1.3827e-02,
          2.2362e-01, 3.3266e-02]],
        [[2.3143e-03, 1.2564e-03, 4.5403e-04,  ..., 1.7658e-02,
          1.7742e-02, 9.9848e-01],
         [2.3143e-03, 1.2564e-03, 4.5403e-04,  ..., 1.7658e-02,
          1.7742e-02, 7.6401e-04],
         [9.9306e-01, 1.2564e-03, 4.5403e-04,  ..., 9.4703e-01,
          9.4677e-01, 3.7586e-04],
         [2.3143e-03, 9.9623e-01, 9.9864e-01,  ..., 1.7658e-02,
          1.7742e-02, 3.7586e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:09,966 [Process: 0] Synchronize training processes
2024-08-18 19:48:09,967 [Process: 0] Evaluating...
2024-08-18 19:48:09,968 [Process: 0] EPOCH 178:
2024-08-18 19:48:09,970 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:11,125 [Process: 0] Synchronize training processes
2024-08-18 19:48:11,125 [Process: 0] Evaluating...
2024-08-18 19:48:11,127 [Process: 0] EPOCH 179:
2024-08-18 19:48:11,129 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9368, 0.0210, 0.0042,  ..., 0.9933, 0.1889, 0.0135],
         [0.0260, 0.0218, 0.0042,  ..., 0.0022, 0.1078, 0.0135],
         [0.0186, 0.0210, 0.0042,  ..., 0.0022, 0.1410, 0.0135],
         [0.0186, 0.9361, 0.9875,  ..., 0.0022, 0.5623, 0.9596]],
        [[0.9446, 0.0097, 0.0825,  ..., 0.0194, 0.0084, 0.0078],
         [0.0201, 0.0097, 0.0792,  ..., 0.0194, 0.0084, 0.0078],
         [0.0199, 0.0098, 0.1084,  ..., 0.0194, 0.9749, 0.9765],
         [0.0154, 0.9708, 0.7299,  ..., 0.9418, 0.0084, 0.0078]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0819e-02, 1.3043e-01, 3.0490e-02,  ..., 7.7483e-03,
          2.4432e-01, 3.0153e-02],
         [1.0819e-02, 5.5266e-02, 3.0490e-02,  ..., 7.7483e-03,
          9.8078e-02, 2.7907e-02],
         [9.6754e-01, 5.5266e-02, 3.0490e-02,  ..., 9.7676e-01,
          9.8078e-02, 9.1403e-01],
         [1.0819e-02, 7.5904e-01, 9.0853e-01,  ..., 7.7483e-03,
          5.5953e-01, 2.7907e-02]],
        [[3.5938e-03, 8.3551e-05, 6.1311e-04,  ..., 7.2785e-03,
          2.3294e-02, 9.9222e-01],
         [3.5938e-03, 1.9953e-04, 1.7352e-03,  ..., 7.2785e-03,
          2.3294e-02, 2.8903e-03],
         [9.8922e-01, 8.3551e-05, 6.1311e-04,  ..., 9.7816e-01,
          9.2499e-01, 2.4445e-03],
         [3.5938e-03, 9.9963e-01, 9.9704e-01,  ..., 7.2785e-03,
          2.8426e-02, 2.4445e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9795, 0.0093, 0.0054,  ..., 0.9719, 0.1015, 0.0050],
         [0.0065, 0.0093, 0.0054,  ..., 0.0130, 0.0813, 0.0050],
         [0.0075, 0.0093, 0.0054,  ..., 0.0076, 0.0995, 0.0050],
         [0.0065, 0.9722, 0.9839,  ..., 0.0076, 0.7176, 0.9851]],
        [[0.8842, 0.0071, 0.0438,  ..., 0.0409, 0.0408, 0.0026],
         [0.0625, 0.0071, 0.0312,  ..., 0.0298, 0.0408, 0.0026],
         [0.0288, 0.0071, 0.0395,  ..., 0.0341, 0.8747, 0.9923],
         [0.0245, 0.9786, 0.8856,  ..., 0.8952, 0.0437, 0.0026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-18 19:48:12,281 [Process: 0] Synchronize training processes
2024-08-18 19:48:12,281 [Process: 0] Evaluating...
2024-08-18 19:48:12,283 [Process: 0] EPOCH 180:
2024-08-18 19:48:12,285 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:13,439 [Process: 0] Synchronize training processes
2024-08-18 19:48:13,439 [Process: 0] Evaluating...
2024-08-18 19:48:13,441 [Process: 0] EPOCH 181:
2024-08-18 19:48:13,443 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5278e-02, 1.5267e-01, 9.2029e-03,  ..., 5.8985e-03,
          1.9038e-01, 3.7667e-03],
         [1.5937e-02, 8.4471e-02, 9.2029e-03,  ..., 5.8985e-03,
          1.0552e-01, 3.7667e-03],
         [9.5351e-01, 8.4471e-02, 9.2029e-03,  ..., 9.8230e-01,
          1.0552e-01, 9.8870e-01],
         [1.5278e-02, 6.7839e-01, 9.7239e-01,  ..., 5.8985e-03,
          5.9857e-01, 3.7667e-03]],
        [[6.8972e-04, 1.0743e-04, 9.8605e-04,  ..., 1.1032e-02,
          6.1385e-02, 9.7537e-01],
         [6.8972e-04, 3.4127e-04, 9.8605e-04,  ..., 1.1356e-02,
          5.4024e-02, 8.2088e-03],
         [9.9793e-01, 1.0743e-04, 9.8605e-04,  ..., 9.6658e-01,
          8.1534e-01, 8.2088e-03],
         [6.8972e-04, 9.9944e-01, 9.9704e-01,  ..., 1.1032e-02,
          6.9250e-02, 8.2088e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8688, 0.0148, 0.0032,  ..., 0.9622, 0.7707, 0.0066],
         [0.0723, 0.0148, 0.0032,  ..., 0.0126, 0.0700, 0.0066],
         [0.0294, 0.0148, 0.0032,  ..., 0.0126, 0.0673, 0.0066],
         [0.0294, 0.9555, 0.9904,  ..., 0.0126, 0.0921, 0.9802]],
        [[0.9777, 0.0199, 0.0438,  ..., 0.0126, 0.0069, 0.0034],
         [0.0108, 0.0199, 0.0438,  ..., 0.0126, 0.0096, 0.0034],
         [0.0057, 0.0199, 0.0438,  ..., 0.0140, 0.9767, 0.9897],
         [0.0057, 0.9403, 0.8686,  ..., 0.9608, 0.0069, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1116e-02, 2.6524e-01, 2.4875e-02,  ..., 4.2809e-03,
          2.8610e-01, 9.8715e-03],
         [1.1116e-02, 1.1493e-01, 2.4875e-02,  ..., 4.2809e-03,
          1.2338e-01, 9.8715e-03],
         [9.6665e-01, 1.1493e-01, 2.4875e-02,  ..., 9.8716e-01,
          1.6816e-01, 9.7039e-01],
         [1.1116e-02, 5.0490e-01, 9.2537e-01,  ..., 4.2809e-03,
          4.2236e-01, 9.8715e-03]],
        [[5.0942e-04, 6.8366e-04, 1.6981e-04,  ..., 2.7874e-02,
          8.0370e-02, 9.9676e-01],
         [5.0942e-04, 7.5563e-04, 1.6981e-04,  ..., 2.7874e-02,
          6.9798e-02, 1.0800e-03],
         [9.9847e-01, 6.8366e-04, 1.6981e-04,  ..., 9.1638e-01,
          7.5111e-01, 1.0800e-03],
         [5.0942e-04, 9.9788e-01, 9.9949e-01,  ..., 2.7874e-02,
          9.8722e-02, 1.0800e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9085, 0.0181, 0.0088,  ..., 0.9547, 0.8591, 0.0078],
         [0.0289, 0.0181, 0.0088,  ..., 0.0171, 0.0545, 0.0130],
         [0.0337, 0.0181, 0.0088,  ..., 0.0157, 0.0435, 0.0078],
         [0.0289, 0.9457, 0.9735,  ..., 0.0126, 0.0429, 0.9715]],
        [[0.9576, 0.0095, 0.0190,  ..., 0.0571, 0.0053, 0.0025],
         [0.0157, 0.0178, 0.0187,  ..., 0.0554, 0.0070, 0.0025],
         [0.0135, 0.0095, 0.0187,  ..., 0.0701, 0.9824, 0.9924],
         [0.0132, 0.9632, 0.9437,  ..., 0.8174, 0.0053, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:48:14,595 [Process: 0] Synchronize training processes
2024-08-18 19:48:14,596 [Process: 0] Evaluating...
2024-08-18 19:48:14,603 [Process: 0] EPOCH 182:
2024-08-18 19:48:14,605 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8246e-03, 2.7023e-01, 3.7708e-03,  ..., 1.8169e-02,
          2.5828e-01, 5.6538e-03],
         [1.3799e-02, 1.1038e-01, 3.7708e-03,  ..., 1.8169e-02,
          1.1207e-01, 5.6538e-03],
         [9.6655e-01, 1.2351e-01, 3.7708e-03,  ..., 9.4549e-01,
          2.8635e-01, 9.8304e-01],
         [9.8246e-03, 4.9588e-01, 9.8869e-01,  ..., 1.8169e-02,
          3.4330e-01, 5.6538e-03]],
        [[1.0871e-03, 1.7061e-03, 9.5658e-04,  ..., 1.8591e-02,
          4.4803e-02, 9.9866e-01],
         [1.0871e-03, 1.7061e-03, 9.5658e-04,  ..., 1.8591e-02,
          4.4803e-02, 4.4799e-04],
         [9.9674e-01, 1.7061e-03, 9.5658e-04,  ..., 9.4423e-01,
          8.5942e-01, 4.4799e-04],
         [1.0871e-03, 9.9488e-01, 9.9713e-01,  ..., 1.8591e-02,
          5.0979e-02, 4.4799e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2902e-01, 1.5086e-02, 3.9232e-02,  ..., 9.8957e-01,
          5.3253e-01, 7.4190e-03],
         [2.3661e-02, 1.5086e-02, 9.9086e-02,  ..., 3.4774e-03,
          5.4514e-02, 7.4190e-03],
         [2.3661e-02, 1.5086e-02, 3.9232e-02,  ..., 3.4774e-03,
          3.5844e-01, 7.8839e-03],
         [2.3661e-02, 9.5474e-01, 8.2245e-01,  ..., 3.4774e-03,
          5.4514e-02, 9.7728e-01]],
        [[9.9910e-01, 4.3971e-03, 1.8326e-02,  ..., 1.6215e-02,
          1.6301e-02, 4.7934e-03],
         [3.0134e-04, 4.3971e-03, 1.8326e-02,  ..., 1.6215e-02,
          1.6301e-02, 6.2534e-03],
         [3.0134e-04, 4.3971e-03, 1.8326e-02,  ..., 1.6215e-02,
          9.5110e-01, 9.8416e-01],
         [3.0134e-04, 9.8681e-01, 9.4502e-01,  ..., 9.5135e-01,
          1.6301e-02, 4.7934e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.8561e-03, 7.8446e-02, 1.1517e-03,  ..., 1.9380e-02,
          2.3777e-01, 2.7198e-02],
         [5.8561e-03, 4.4608e-02, 1.1517e-03,  ..., 1.9380e-02,
          1.0788e-01, 2.9148e-02],
         [9.8243e-01, 4.4608e-02, 1.1517e-03,  ..., 9.4186e-01,
          2.9622e-01, 9.1646e-01],
         [5.8561e-03, 8.3234e-01, 9.9655e-01,  ..., 1.9380e-02,
          3.5812e-01, 2.7198e-02]],
        [[1.0397e-02, 4.7016e-04, 3.7965e-03,  ..., 1.5662e-02,
          3.4307e-02, 9.9764e-01],
         [1.3856e-02, 4.7016e-04, 3.7965e-03,  ..., 1.8173e-02,
          3.4307e-02, 7.8566e-04],
         [9.6535e-01, 4.7016e-04, 3.7965e-03,  ..., 9.5050e-01,
          8.8793e-01, 7.8566e-04],
         [1.0397e-02, 9.9859e-01, 9.8861e-01,  ..., 1.5662e-02,
          4.3460e-02, 7.8566e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:15,756 [Process: 0] Synchronize training processes
2024-08-18 19:48:15,756 [Process: 0] Evaluating...
2024-08-18 19:48:15,758 [Process: 0] EPOCH 183:
2024-08-18 19:48:15,760 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:16,913 [Process: 0] Synchronize training processes
2024-08-18 19:48:16,914 [Process: 0] Evaluating...
2024-08-18 19:48:16,915 [Process: 0] EPOCH 184:
2024-08-18 19:48:16,917 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6669, 0.0205, 0.0097,  ..., 0.9907, 0.8351, 0.0066],
         [0.0467, 0.0205, 0.0097,  ..., 0.0031, 0.0342, 0.0066],
         [0.2396, 0.0253, 0.0097,  ..., 0.0031, 0.0860, 0.0066],
         [0.0467, 0.9336, 0.9708,  ..., 0.0031, 0.0447, 0.9801]],
        [[0.9968, 0.0054, 0.0145,  ..., 0.0514, 0.0081, 0.0024],
         [0.0011, 0.0054, 0.0145,  ..., 0.0514, 0.0154, 0.0024],
         [0.0011, 0.0054, 0.0145,  ..., 0.0643, 0.9685, 0.9928],
         [0.0011, 0.9839, 0.9564,  ..., 0.8328, 0.0081, 0.0024]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0599e-02, 1.5929e-02, 5.8959e-03,  ..., 4.7202e-03,
          2.2627e-01, 4.2120e-03],
         [1.0599e-02, 9.7309e-03, 5.2963e-03,  ..., 4.7202e-03,
          1.0500e-01, 4.2120e-03],
         [9.6820e-01, 9.7309e-03, 5.2963e-03,  ..., 9.8584e-01,
          2.8153e-01, 9.8736e-01],
         [1.0599e-02, 9.6461e-01, 9.8351e-01,  ..., 4.7202e-03,
          3.8720e-01, 4.2120e-03]],
        [[3.4808e-03, 8.4258e-05, 4.2616e-04,  ..., 1.6524e-02,
          2.9270e-02, 9.9959e-01],
         [3.4808e-03, 8.4258e-05, 4.2616e-04,  ..., 1.6524e-02,
          2.9270e-02, 1.5229e-04],
         [9.8956e-01, 8.4258e-05, 4.2616e-04,  ..., 9.5043e-01,
          9.0393e-01, 1.2768e-04],
         [3.4808e-03, 9.9975e-01, 9.9872e-01,  ..., 1.6524e-02,
          3.7534e-02, 1.2768e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2014e-01, 2.1650e-02, 2.2103e-02,  ..., 9.5781e-01,
          7.8603e-01, 1.1318e-02],
         [2.1937e-02, 2.9121e-02, 2.2103e-02,  ..., 2.2810e-02,
          5.3715e-02, 1.1318e-02],
         [4.3599e-01, 2.1650e-02, 2.2103e-02,  ..., 9.6915e-03,
          9.6552e-02, 1.1420e-02],
         [2.1937e-02, 9.2758e-01, 9.3369e-01,  ..., 9.6915e-03,
          6.3700e-02, 9.6594e-01]],
        [[9.9783e-01, 4.7690e-02, 7.8557e-02,  ..., 1.3996e-02,
          3.3500e-03, 1.6556e-03],
         [7.2164e-04, 4.7690e-02, 7.2522e-02,  ..., 1.3996e-02,
          3.3500e-03, 1.6556e-03],
         [7.2164e-04, 7.0977e-02, 9.4670e-02,  ..., 1.3996e-02,
          9.8995e-01, 9.9503e-01],
         [7.2164e-04, 8.3364e-01, 7.5425e-01,  ..., 9.5801e-01,
          3.3500e-03, 1.6556e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7435e-02, 3.2181e-01, 7.6656e-03,  ..., 2.0575e-02,
          2.2625e-01, 4.4394e-02],
         [1.7435e-02, 2.0396e-01, 7.6656e-03,  ..., 2.0575e-02,
          1.0524e-01, 3.4799e-02],
         [9.4770e-01, 1.2389e-01, 7.6656e-03,  ..., 9.3828e-01,
          1.8285e-01, 8.8601e-01],
         [1.7435e-02, 3.5034e-01, 9.7700e-01,  ..., 2.0575e-02,
          4.8567e-01, 3.4799e-02]],
        [[5.1795e-03, 2.8002e-03, 8.0786e-04,  ..., 2.3710e-02,
          2.6834e-02, 9.9609e-01],
         [5.1795e-03, 2.8002e-03, 8.0786e-04,  ..., 2.3120e-02,
          2.6834e-02, 1.4800e-03],
         [9.8446e-01, 2.8002e-03, 8.0786e-04,  ..., 9.3005e-01,
          9.1950e-01, 1.2137e-03],
         [5.1795e-03, 9.9160e-01, 9.9758e-01,  ..., 2.3120e-02,
          2.6834e-02, 1.2137e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:18,068 [Process: 0] Synchronize training processes
2024-08-18 19:48:18,069 [Process: 0] Evaluating...
2024-08-18 19:48:18,070 [Process: 0] EPOCH 185:
2024-08-18 19:48:18,072 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:19,227 [Process: 0] Synchronize training processes
2024-08-18 19:48:19,227 [Process: 0] Evaluating...
2024-08-18 19:48:19,229 [Process: 0] EPOCH 186:
2024-08-18 19:48:19,230 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8379, 0.0196, 0.0132,  ..., 0.9835, 0.4699, 0.0120],
         [0.0827, 0.0196, 0.0191,  ..., 0.0078, 0.0864, 0.0120],
         [0.0397, 0.0223, 0.0138,  ..., 0.0044, 0.1284, 0.0120],
         [0.0397, 0.9386, 0.9538,  ..., 0.0044, 0.3153, 0.9639]],
        [[0.9700, 0.0104, 0.0230,  ..., 0.1765, 0.0039, 0.0036],
         [0.0098, 0.0104, 0.0230,  ..., 0.1865, 0.0039, 0.0036],
         [0.0104, 0.0104, 0.0239,  ..., 0.2285, 0.9882, 0.9891],
         [0.0098, 0.9687, 0.9300,  ..., 0.4085, 0.0039, 0.0036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3688e-02, 3.2383e-01, 1.8407e-02,  ..., 1.3294e-02,
          1.7759e-01, 6.3520e-03],
         [1.3688e-02, 1.2267e-01, 1.8407e-02,  ..., 1.3294e-02,
          9.0567e-02, 6.3520e-03],
         [9.5894e-01, 1.8775e-01, 1.8407e-02,  ..., 9.6012e-01,
          1.6328e-01, 9.8094e-01],
         [1.3688e-02, 3.6575e-01, 9.4478e-01,  ..., 1.3294e-02,
          5.6857e-01, 6.3520e-03]],
        [[1.4044e-02, 1.4034e-03, 1.3910e-04,  ..., 1.3751e-02,
          1.5532e-02, 9.9729e-01],
         [1.4044e-02, 1.4034e-03, 1.3910e-04,  ..., 1.3751e-02,
          1.5532e-02, 9.0408e-04],
         [9.5787e-01, 1.4034e-03, 1.3910e-04,  ..., 9.5875e-01,
          9.5340e-01, 9.0408e-04],
         [1.4044e-02, 9.9579e-01, 9.9958e-01,  ..., 1.3751e-02,
          1.5532e-02, 9.0408e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6958e-01, 1.1615e-02, 1.2948e-02,  ..., 9.9700e-01,
          3.3054e-01, 6.0473e-03],
         [1.0142e-02, 1.1615e-02, 1.2948e-02,  ..., 1.1903e-03,
          2.9425e-01, 6.0473e-03],
         [1.0142e-02, 1.3656e-02, 1.2948e-02,  ..., 9.0381e-04,
          1.1242e-01, 6.0473e-03],
         [1.0142e-02, 9.6311e-01, 9.6116e-01,  ..., 9.0381e-04,
          2.6279e-01, 9.8186e-01]],
        [[8.4245e-01, 1.0796e-02, 6.4032e-03,  ..., 5.2505e-02,
          1.4004e-02, 4.2661e-03],
         [1.1108e-01, 1.0796e-02, 6.4032e-03,  ..., 5.2505e-02,
          1.4004e-02, 4.2661e-03],
         [2.5808e-02, 1.0796e-02, 6.4032e-03,  ..., 5.9469e-02,
          9.5799e-01, 9.8720e-01],
         [2.0666e-02, 9.6761e-01, 9.8079e-01,  ..., 8.3552e-01,
          1.4004e-02, 4.2661e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:48:20,382 [Process: 0] Synchronize training processes
2024-08-18 19:48:20,383 [Process: 0] Evaluating...
2024-08-18 19:48:20,385 [Process: 0] EPOCH 187:
2024-08-18 19:48:20,386 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:21,539 [Process: 0] Synchronize training processes
2024-08-18 19:48:21,539 [Process: 0] Evaluating...
2024-08-18 19:48:21,541 [Process: 0] EPOCH 188:
2024-08-18 19:48:21,543 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0052, 0.2730, 0.0037,  ..., 0.0171, 0.2004, 0.0109],
         [0.0052, 0.1024, 0.0028,  ..., 0.0171, 0.0975, 0.0109],
         [0.9845, 0.2263, 0.0028,  ..., 0.9488, 0.1851, 0.9673],
         [0.0052, 0.3984, 0.9906,  ..., 0.0171, 0.5170, 0.0109]],
        [[0.0178, 0.0106, 0.0014,  ..., 0.0173, 0.0216, 0.9897],
         [0.0178, 0.0875, 0.0014,  ..., 0.0182, 0.0216, 0.0047],
         [0.9467, 0.0106, 0.0014,  ..., 0.9471, 0.9344, 0.0028],
         [0.0178, 0.8914, 0.9958,  ..., 0.0173, 0.0224, 0.0028]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8224, 0.0128, 0.0244,  ..., 0.9693, 0.9696, 0.0070],
         [0.1398, 0.0200, 0.0168,  ..., 0.0183, 0.0095, 0.0203],
         [0.0189, 0.0128, 0.0168,  ..., 0.0062, 0.0095, 0.0070],
         [0.0189, 0.9544, 0.9419,  ..., 0.0062, 0.0114, 0.9657]],
        [[0.9869, 0.0070, 0.0523,  ..., 0.0078, 0.0046, 0.0052],
         [0.0044, 0.0070, 0.0977,  ..., 0.0078, 0.0046, 0.0052],
         [0.0044, 0.0070, 0.0582,  ..., 0.0078, 0.9861, 0.9843],
         [0.0044, 0.9789, 0.7917,  ..., 0.9767, 0.0046, 0.0052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.5102e-03, 3.1331e-01, 1.3996e-03,  ..., 1.4093e-02,
          2.2082e-01, 1.4991e-02],
         [4.5102e-03, 1.0067e-01, 1.3996e-03,  ..., 1.4093e-02,
          1.0019e-01, 1.4991e-02],
         [9.8647e-01, 1.2706e-01, 1.3996e-03,  ..., 9.5772e-01,
          1.8503e-01, 9.5503e-01],
         [4.5102e-03, 4.5895e-01, 9.9580e-01,  ..., 1.4093e-02,
          4.9396e-01, 1.4991e-02]],
        [[1.0569e-02, 1.7614e-04, 1.9472e-04,  ..., 8.4598e-03,
          1.4518e-02, 9.2537e-01],
         [1.0569e-02, 1.1997e-03, 1.9472e-04,  ..., 8.4598e-03,
          1.4518e-02, 5.5685e-02],
         [9.6829e-01, 1.7614e-04, 1.9472e-04,  ..., 9.7462e-01,
          9.5645e-01, 9.4750e-03],
         [1.0569e-02, 9.9845e-01, 9.9942e-01,  ..., 8.4598e-03,
          1.4518e-02, 9.4750e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8690, 0.0171, 0.0665,  ..., 0.9796, 0.8767, 0.0246],
         [0.0713, 0.0122, 0.0513,  ..., 0.0083, 0.0375, 0.0387],
         [0.0314, 0.0122, 0.0424,  ..., 0.0060, 0.0375, 0.0246],
         [0.0283, 0.9584, 0.8399,  ..., 0.0060, 0.0482, 0.9120]],
        [[0.9705, 0.0070, 0.0117,  ..., 0.0537, 0.0033, 0.0029],
         [0.0133, 0.0070, 0.0138,  ..., 0.0345, 0.0033, 0.0029],
         [0.0081, 0.0070, 0.0117,  ..., 0.0390, 0.9902, 0.9912],
         [0.0081, 0.9789, 0.9629,  ..., 0.8729, 0.0033, 0.0029]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:48:22,699 [Process: 0] Synchronize training processes
2024-08-18 19:48:22,699 [Process: 0] Evaluating...
2024-08-18 19:48:22,701 [Process: 0] EPOCH 189:
2024-08-18 19:48:22,703 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3455e-03, 3.9231e-01, 2.8339e-01,  ..., 1.0183e-02,
          2.4114e-01, 7.4457e-03],
         [3.3455e-03, 1.1756e-01, 4.6779e-01,  ..., 1.0183e-02,
          1.0904e-01, 7.4457e-03],
         [9.8996e-01, 1.1756e-01, 8.3637e-02,  ..., 9.6945e-01,
          3.1297e-01, 9.7766e-01],
         [3.3455e-03, 3.7257e-01, 1.6518e-01,  ..., 1.0183e-02,
          3.3685e-01, 7.4457e-03]],
        [[1.3587e-02, 1.2504e-03, 2.8226e-05,  ..., 2.7864e-02,
          8.2079e-03, 9.9950e-01],
         [1.3587e-02, 1.4230e-02, 2.8226e-05,  ..., 2.7227e-02,
          8.2079e-03, 1.6669e-04],
         [9.5924e-01, 1.2504e-03, 2.8226e-05,  ..., 9.1768e-01,
          9.7538e-01, 1.6669e-04],
         [1.3587e-02, 9.8327e-01, 9.9992e-01,  ..., 2.7227e-02,
          8.2079e-03, 1.6669e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6630, 0.1096, 0.0060,  ..., 0.9886, 0.8387, 0.0110],
         [0.1851, 0.6493, 0.0060,  ..., 0.0049, 0.0779, 0.0110],
         [0.0712, 0.0776, 0.0063,  ..., 0.0033, 0.0417, 0.0110],
         [0.0806, 0.1635, 0.9817,  ..., 0.0033, 0.0417, 0.9671]],
        [[0.9873, 0.0191, 0.0184,  ..., 0.0200, 0.0035, 0.0018],
         [0.0042, 0.0168, 0.0184,  ..., 0.0200, 0.0035, 0.0018],
         [0.0042, 0.0177, 0.0215,  ..., 0.0212, 0.9894, 0.9946],
         [0.0042, 0.9463, 0.9417,  ..., 0.9389, 0.0035, 0.0018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9499e-03, 2.9016e-01, 8.3954e-02,  ..., 1.5250e-02,
          3.0968e-01, 9.4195e-03],
         [6.9499e-03, 9.4596e-02, 6.1425e-02,  ..., 1.5250e-02,
          1.1539e-01, 9.4195e-03],
         [9.7915e-01, 1.5572e-01, 7.4040e-01,  ..., 9.5425e-01,
          2.3418e-01, 9.7174e-01],
         [6.9499e-03, 4.5953e-01, 1.1422e-01,  ..., 1.5250e-02,
          3.4075e-01, 9.4195e-03]],
        [[1.1628e-02, 3.8098e-04, 7.6601e-04,  ..., 1.5079e-02,
          6.5151e-03, 9.9479e-01],
         [1.1628e-02, 3.8098e-04, 7.6601e-04,  ..., 1.5338e-02,
          6.5151e-03, 1.7366e-03],
         [9.6512e-01, 3.8098e-04, 7.6601e-04,  ..., 9.5450e-01,
          9.8045e-01, 1.7366e-03],
         [1.1628e-02, 9.9886e-01, 9.9770e-01,  ..., 1.5079e-02,
          6.5151e-03, 1.7366e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:23,853 [Process: 0] Synchronize training processes
2024-08-18 19:48:23,854 [Process: 0] Evaluating...
2024-08-18 19:48:23,855 [Process: 0] EPOCH 190:
2024-08-18 19:48:23,857 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:25,007 [Process: 0] Synchronize training processes
2024-08-18 19:48:25,007 [Process: 0] Evaluating...
2024-08-18 19:48:25,009 [Process: 0] EPOCH 191:
2024-08-18 19:48:25,011 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7750, 0.0029, 0.0021,  ..., 0.9879, 0.7084, 0.0051],
         [0.1786, 0.0029, 0.0021,  ..., 0.0040, 0.1994, 0.0051],
         [0.0232, 0.0029, 0.0021,  ..., 0.0040, 0.0461, 0.0051],
         [0.0232, 0.9913, 0.9936,  ..., 0.0040, 0.0461, 0.9848]],
        [[0.9918, 0.0120, 0.0374,  ..., 0.0263, 0.0077, 0.0029],
         [0.0027, 0.0081, 0.0358,  ..., 0.0240, 0.0077, 0.0029],
         [0.0029, 0.0081, 0.0385,  ..., 0.0255, 0.9769, 0.9912],
         [0.0027, 0.9719, 0.8882,  ..., 0.9242, 0.0077, 0.0029]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4585e-03, 2.3329e-01, 1.0400e-03,  ..., 1.2412e-02,
          2.7620e-01, 2.4098e-02],
         [9.4585e-03, 8.0010e-02, 1.0400e-03,  ..., 1.2412e-02,
          1.2168e-01, 2.9690e-02],
         [9.7162e-01, 1.3181e-01, 1.0400e-03,  ..., 9.6276e-01,
          2.2483e-01, 9.2211e-01],
         [9.4585e-03, 5.5489e-01, 9.9688e-01,  ..., 1.2412e-02,
          3.7729e-01, 2.4098e-02]],
        [[8.3711e-03, 2.6564e-04, 9.3075e-05,  ..., 6.6589e-03,
          5.1614e-02, 9.9348e-01],
         [8.3711e-03, 2.0880e-03, 9.3075e-05,  ..., 6.6589e-03,
          4.2296e-02, 2.1749e-03],
         [9.7489e-01, 2.6564e-04, 9.3075e-05,  ..., 9.8002e-01,
          8.4805e-01, 2.1749e-03],
         [8.3711e-03, 9.9738e-01, 9.9972e-01,  ..., 6.6589e-03,
          5.8037e-02, 2.1749e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7489, 0.0076, 0.0062,  ..., 0.9862, 0.8127, 0.0162],
         [0.1938, 0.0070, 0.0062,  ..., 0.0046, 0.0614, 0.0162],
         [0.0286, 0.0070, 0.0062,  ..., 0.0046, 0.0641, 0.0162],
         [0.0286, 0.9783, 0.9815,  ..., 0.0046, 0.0618, 0.9513]],
        [[0.9629, 0.0097, 0.0107,  ..., 0.1312, 0.0036, 0.0018],
         [0.0138, 0.0097, 0.0107,  ..., 0.1460, 0.0039, 0.0019],
         [0.0116, 0.0104, 0.0107,  ..., 0.1714, 0.9889, 0.9944],
         [0.0116, 0.9703, 0.9678,  ..., 0.5514, 0.0036, 0.0018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6266e-03, 1.6249e-01, 1.9835e-03,  ..., 1.4365e-02,
          3.0822e-01, 1.1600e-02],
         [8.6266e-03, 4.2264e-02, 1.9835e-03,  ..., 1.4365e-02,
          9.9157e-02, 1.1600e-02],
         [9.7412e-01, 4.2264e-02, 1.9835e-03,  ..., 9.5691e-01,
          1.5050e-01, 9.6520e-01],
         [8.6266e-03, 7.5298e-01, 9.9405e-01,  ..., 1.4365e-02,
          4.4212e-01, 1.1600e-02]],
        [[2.6490e-02, 1.9174e-03, 2.0219e-04,  ..., 6.1519e-03,
          1.1425e-02, 9.9959e-01],
         [2.6490e-02, 1.5969e-03, 2.0219e-04,  ..., 6.1519e-03,
          1.1425e-02, 1.3536e-04],
         [9.2053e-01, 1.5969e-03, 2.0219e-04,  ..., 9.8136e-01,
          9.6572e-01, 1.3536e-04],
         [2.6490e-02, 9.9489e-01, 9.9939e-01,  ..., 6.3384e-03,
          1.1425e-02, 1.3536e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:26,162 [Process: 0] Synchronize training processes
2024-08-18 19:48:26,162 [Process: 0] Evaluating...
2024-08-18 19:48:26,169 [Process: 0] EPOCH 192:
2024-08-18 19:48:26,171 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:27,323 [Process: 0] Synchronize training processes
2024-08-18 19:48:27,323 [Process: 0] Evaluating...
2024-08-18 19:48:27,325 [Process: 0] EPOCH 193:
2024-08-18 19:48:27,326 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6374, 0.0087, 0.0100,  ..., 0.9930, 0.8786, 0.0108],
         [0.2618, 0.0087, 0.0100,  ..., 0.0023, 0.0397, 0.0078],
         [0.0504, 0.0098, 0.0100,  ..., 0.0023, 0.0397, 0.0088],
         [0.0504, 0.9729, 0.9699,  ..., 0.0023, 0.0420, 0.9726]],
        [[0.9937, 0.0059, 0.0089,  ..., 0.1277, 0.0032, 0.0015],
         [0.0021, 0.0059, 0.0089,  ..., 0.1558, 0.0054, 0.0015],
         [0.0021, 0.0059, 0.0089,  ..., 0.1460, 0.9882, 0.9954],
         [0.0021, 0.9822, 0.9733,  ..., 0.5705, 0.0032, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8754e-02, 3.0337e-02, 1.6115e-03,  ..., 6.4561e-03,
          4.0616e-01, 1.9742e-02],
         [2.4213e-02, 3.0337e-02, 1.6115e-03,  ..., 6.4561e-03,
          7.9391e-02, 2.8749e-02],
         [9.3828e-01, 3.0337e-02, 1.6115e-03,  ..., 9.8063e-01,
          7.9391e-02, 9.3177e-01],
         [1.8754e-02, 9.0899e-01, 9.9517e-01,  ..., 6.4561e-03,
          4.3506e-01, 1.9742e-02]],
        [[3.3960e-03, 1.2913e-04, 4.9766e-05,  ..., 1.7521e-02,
          1.1495e-02, 9.9845e-01],
         [3.3960e-03, 1.2913e-04, 4.9766e-05,  ..., 1.9482e-02,
          1.1495e-02, 6.6114e-04],
         [9.8981e-01, 1.2913e-04, 4.9766e-05,  ..., 9.4548e-01,
          9.6414e-01, 4.4278e-04],
         [3.3960e-03, 9.9961e-01, 9.9985e-01,  ..., 1.7521e-02,
          1.2867e-02, 4.4278e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.5803e-01, 5.8842e-03, 2.0442e-02,  ..., 9.7736e-01,
          8.7485e-01, 1.6618e-02],
         [3.1540e-01, 5.8842e-03, 1.5428e-02,  ..., 7.9314e-03,
          5.5350e-02, 1.6231e-02],
         [1.3286e-02, 5.8842e-03, 1.5428e-02,  ..., 7.3553e-03,
          3.5391e-02, 1.8204e-02],
         [1.3286e-02, 9.8235e-01, 9.4870e-01,  ..., 7.3553e-03,
          3.4413e-02, 9.4895e-01]],
        [[9.7711e-01, 2.8375e-02, 7.4293e-03,  ..., 1.2181e-01,
          3.6334e-03, 9.5871e-04],
         [1.0168e-02, 3.9900e-02, 8.6369e-03,  ..., 7.6377e-02,
          4.2628e-03, 9.5871e-04],
         [6.3598e-03, 2.8375e-02, 7.4293e-03,  ..., 1.3812e-01,
          9.8847e-01, 9.9712e-01],
         [6.3598e-03, 9.0335e-01, 9.7650e-01,  ..., 6.6369e-01,
          3.6334e-03, 9.5871e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:48:28,479 [Process: 0] Synchronize training processes
2024-08-18 19:48:28,479 [Process: 0] Evaluating...
2024-08-18 19:48:28,481 [Process: 0] EPOCH 194:
2024-08-18 19:48:28,483 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:29,633 [Process: 0] Synchronize training processes
2024-08-18 19:48:29,634 [Process: 0] Evaluating...
2024-08-18 19:48:29,635 [Process: 0] EPOCH 195:
2024-08-18 19:48:29,637 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1588e-02, 6.9129e-03, 2.1722e-03,  ..., 1.4354e-02,
          3.3455e-01, 1.8750e-02],
         [1.1588e-02, 6.9129e-03, 2.1722e-03,  ..., 1.4354e-02,
          1.3553e-01, 1.8750e-02],
         [9.6524e-01, 6.9129e-03, 2.1722e-03,  ..., 9.5694e-01,
          2.2747e-01, 9.4375e-01],
         [1.1588e-02, 9.7926e-01, 9.9348e-01,  ..., 1.4354e-02,
          3.0245e-01, 1.8750e-02]],
        [[4.9357e-03, 9.2773e-04, 3.6535e-04,  ..., 1.9883e-02,
          1.9301e-02, 8.2194e-01],
         [4.9357e-03, 3.6921e-04, 3.6535e-04,  ..., 1.9883e-02,
          1.9301e-02, 1.2486e-01],
         [9.8519e-01, 3.6921e-04, 3.6535e-04,  ..., 9.3989e-01,
          9.3981e-01, 2.6600e-02],
         [4.9357e-03, 9.9833e-01, 9.9890e-01,  ..., 2.0344e-02,
          2.1592e-02, 2.6600e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9382, 0.0101, 0.0336,  ..., 0.9871, 0.9726, 0.0381],
         [0.0254, 0.0101, 0.0277,  ..., 0.0043, 0.0130, 0.0432],
         [0.0182, 0.0101, 0.0347,  ..., 0.0043, 0.0072, 0.0626],
         [0.0182, 0.9696, 0.9041,  ..., 0.0043, 0.0072, 0.8561]],
        [[0.8818, 0.0050, 0.0108,  ..., 0.0227, 0.0238, 0.0033],
         [0.0492, 0.0048, 0.0108,  ..., 0.0227, 0.0238, 0.0035],
         [0.0361, 0.0048, 0.0108,  ..., 0.0297, 0.9197, 0.9899],
         [0.0330, 0.9854, 0.9677,  ..., 0.9249, 0.0327, 0.0033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7938e-02, 2.8598e-03, 1.3005e-03,  ..., 2.6808e-02,
          2.4439e-01, 3.3971e-02],
         [1.7938e-02, 2.8598e-03, 1.3005e-03,  ..., 2.6808e-02,
          9.7443e-02, 3.3971e-02],
         [9.4565e-01, 2.8598e-03, 1.3005e-03,  ..., 9.1958e-01,
          3.1339e-01, 8.9699e-01],
         [1.8472e-02, 9.9142e-01, 9.9610e-01,  ..., 2.6808e-02,
          3.4478e-01, 3.5070e-02]],
        [[1.1939e-02, 1.1721e-04, 2.3013e-03,  ..., 1.3543e-02,
          2.1711e-02, 9.5833e-01],
         [1.1939e-02, 2.7248e-04, 2.3013e-03,  ..., 1.3543e-02,
          2.1308e-02, 1.2784e-02],
         [9.6418e-01, 1.1721e-04, 2.3013e-03,  ..., 9.5937e-01,
          9.3514e-01, 1.2784e-02],
         [1.1939e-02, 9.9949e-01, 9.9310e-01,  ..., 1.3543e-02,
          2.1840e-02, 1.6105e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9355, 0.0067, 0.0180,  ..., 0.9940, 0.9927, 0.0024],
         [0.0403, 0.0130, 0.0180,  ..., 0.0020, 0.0029, 0.0024],
         [0.0121, 0.0067, 0.0180,  ..., 0.0020, 0.0022, 0.0024],
         [0.0121, 0.9735, 0.9460,  ..., 0.0020, 0.0022, 0.9928]],
        [[0.7780, 0.0086, 0.0022,  ..., 0.0219, 0.0132, 0.0012],
         [0.0920, 0.0084, 0.0022,  ..., 0.0219, 0.0199, 0.0012],
         [0.0841, 0.0084, 0.0022,  ..., 0.0247, 0.9538, 0.9963],
         [0.0460, 0.9746, 0.9933,  ..., 0.9315, 0.0132, 0.0012]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:48:30,787 [Process: 0] Synchronize training processes
2024-08-18 19:48:30,787 [Process: 0] Evaluating...
2024-08-18 19:48:30,789 [Process: 0] EPOCH 196:
2024-08-18 19:48:30,791 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2180e-02, 5.9073e-03, 1.8623e-03,  ..., 2.1508e-02,
          3.9286e-01, 5.6022e-03],
         [2.2180e-02, 3.1644e-03, 1.8080e-03,  ..., 2.1508e-02,
          9.2119e-02, 5.6022e-03],
         [9.3346e-01, 3.1644e-03, 1.8080e-03,  ..., 9.3548e-01,
          2.1692e-01, 9.8319e-01],
         [2.2180e-02, 9.8776e-01, 9.9452e-01,  ..., 2.1508e-02,
          2.9810e-01, 5.6022e-03]],
        [[1.3257e-02, 3.0991e-04, 9.1371e-05,  ..., 1.4763e-02,
          1.8722e-02, 9.9778e-01],
         [1.3257e-02, 3.0991e-04, 9.1371e-05,  ..., 1.4957e-02,
          1.8722e-02, 8.1662e-04],
         [9.6023e-01, 3.0991e-04, 9.1371e-05,  ..., 9.5552e-01,
          9.3380e-01, 7.0200e-04],
         [1.3257e-02, 9.9907e-01, 9.9973e-01,  ..., 1.4763e-02,
          2.8759e-02, 7.0200e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9887, 0.0246, 0.0044,  ..., 0.9009, 0.9567, 0.0046],
         [0.0038, 0.0169, 0.0044,  ..., 0.0679, 0.0144, 0.0046],
         [0.0038, 0.0169, 0.0044,  ..., 0.0156, 0.0144, 0.0046],
         [0.0038, 0.9417, 0.9869,  ..., 0.0156, 0.0144, 0.9862]],
        [[0.9857, 0.0144, 0.0166,  ..., 0.0134, 0.0022, 0.0019],
         [0.0072, 0.0135, 0.0166,  ..., 0.0134, 0.0022, 0.0019],
         [0.0036, 0.0135, 0.0166,  ..., 0.0155, 0.9933, 0.9943],
         [0.0036, 0.9586, 0.9502,  ..., 0.9578, 0.0022, 0.0019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9136e-02, 1.4443e-03, 2.5296e-03,  ..., 1.3804e-02,
          2.9262e-01, 1.1999e-02],
         [1.9136e-02, 1.4443e-03, 1.8296e-03,  ..., 1.3804e-02,
          1.0444e-01, 1.1999e-02],
         [9.4259e-01, 1.4443e-03, 1.8296e-03,  ..., 9.5859e-01,
          3.2420e-01, 9.6400e-01],
         [1.9136e-02, 9.9567e-01, 9.9381e-01,  ..., 1.3804e-02,
          2.7874e-01, 1.1999e-02]],
        [[7.9034e-03, 2.2604e-03, 1.6080e-04,  ..., 1.6409e-02,
          1.2420e-02, 9.9049e-01],
         [7.9034e-03, 4.8635e-03, 1.6080e-04,  ..., 1.6409e-02,
          1.2420e-02, 3.1701e-03],
         [9.7629e-01, 2.2604e-03, 1.6080e-04,  ..., 9.5077e-01,
          9.6274e-01, 3.1701e-03],
         [7.9034e-03, 9.9062e-01, 9.9952e-01,  ..., 1.6409e-02,
          1.2420e-02, 3.1701e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:31,943 [Process: 0] Synchronize training processes
2024-08-18 19:48:31,944 [Process: 0] Evaluating...
2024-08-18 19:48:31,946 [Process: 0] EPOCH 197:
2024-08-18 19:48:31,948 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:33,122 [Process: 0] Synchronize training processes
2024-08-18 19:48:33,122 [Process: 0] Evaluating...
2024-08-18 19:48:33,124 [Process: 0] EPOCH 198:
2024-08-18 19:48:33,125 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8548e-01, 1.1246e-02, 1.9204e-02,  ..., 9.9291e-01,
          9.7659e-01, 8.0185e-03],
         [4.8383e-03, 1.1246e-02, 1.9204e-02,  ..., 2.3632e-03,
          7.0461e-03, 1.4214e-02],
         [4.8383e-03, 1.1246e-02, 2.3073e-02,  ..., 2.3632e-03,
          7.0461e-03, 8.0185e-03],
         [4.8383e-03, 9.6626e-01, 9.3852e-01,  ..., 2.3632e-03,
          9.3223e-03, 9.6975e-01]],
        [[9.9786e-01, 1.2104e-02, 7.6279e-03,  ..., 3.5578e-02,
          1.3976e-03, 2.6337e-03],
         [7.1343e-04, 1.2104e-02, 7.6279e-03,  ..., 1.6531e-02,
          1.4236e-03, 2.6337e-03],
         [7.1343e-04, 1.2104e-02, 7.6279e-03,  ..., 1.7954e-02,
          9.9578e-01, 9.9210e-01],
         [7.1343e-04, 9.6369e-01, 9.7712e-01,  ..., 9.2994e-01,
          1.3976e-03, 2.6337e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2471e-03, 2.2396e-03, 2.3223e-04,  ..., 2.5111e-02,
          3.1647e-01, 1.3792e-02],
         [7.2471e-03, 2.0002e-03, 2.3223e-04,  ..., 2.6951e-02,
          9.8123e-02, 1.3792e-02],
         [9.7826e-01, 2.0002e-03, 2.3223e-04,  ..., 9.2283e-01,
          1.5332e-01, 9.5862e-01],
         [7.2471e-03, 9.9376e-01, 9.9930e-01,  ..., 2.5111e-02,
          4.3209e-01, 1.3792e-02]],
        [[2.8159e-03, 3.2973e-04, 8.2204e-05,  ..., 9.2145e-03,
          1.4863e-02, 9.9821e-01],
         [2.8159e-03, 3.2973e-04, 8.2204e-05,  ..., 1.0525e-02,
          1.4863e-02, 5.9830e-04],
         [9.9155e-01, 3.2973e-04, 8.2204e-05,  ..., 9.7105e-01,
          9.5541e-01, 5.9830e-04],
         [2.8159e-03, 9.9901e-01, 9.9975e-01,  ..., 9.2145e-03,
          1.4863e-02, 5.9830e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9884, 0.0147, 0.0068,  ..., 0.9853, 0.7504, 0.0109],
         [0.0039, 0.0147, 0.0068,  ..., 0.0047, 0.1548, 0.0109],
         [0.0039, 0.0147, 0.0068,  ..., 0.0053, 0.0466, 0.0109],
         [0.0039, 0.9558, 0.9797,  ..., 0.0047, 0.0483, 0.9672]],
        [[0.9895, 0.0128, 0.0399,  ..., 0.0610, 0.0107, 0.0040],
         [0.0034, 0.0128, 0.0196,  ..., 0.0473, 0.0117, 0.0040],
         [0.0036, 0.0128, 0.0196,  ..., 0.0645, 0.9668, 0.9881],
         [0.0034, 0.9615, 0.9210,  ..., 0.8272, 0.0107, 0.0040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9255e-03, 5.8130e-03, 3.6974e-03,  ..., 7.5128e-03,
          3.6219e-01, 1.4117e-02],
         [9.9255e-03, 5.8130e-03, 3.6974e-03,  ..., 7.5128e-03,
          1.1205e-01, 1.4117e-02],
         [9.7022e-01, 5.8130e-03, 3.6974e-03,  ..., 9.7746e-01,
          2.1676e-01, 9.5765e-01],
         [9.9255e-03, 9.8256e-01, 9.8891e-01,  ..., 7.5128e-03,
          3.0900e-01, 1.4117e-02]],
        [[2.2632e-03, 2.8897e-04, 1.9466e-04,  ..., 2.6685e-02,
          8.7234e-03, 9.9801e-01],
         [2.2632e-03, 4.8352e-04, 1.9466e-04,  ..., 2.6685e-02,
          8.7234e-03, 6.6370e-04],
         [9.9321e-01, 2.8897e-04, 1.9466e-04,  ..., 9.1967e-01,
          9.7383e-01, 6.6370e-04],
         [2.2632e-03, 9.9894e-01, 9.9942e-01,  ..., 2.6964e-02,
          8.7234e-03, 6.6370e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:48:34,271 [Process: 0] Synchronize training processes
2024-08-18 19:48:34,271 [Process: 0] Evaluating...
2024-08-18 19:48:34,273 [Process: 0] EPOCH 199:
2024-08-18 19:48:34,274 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:35,423 [Process: 0] Synchronize training processes
2024-08-18 19:48:35,424 [Process: 0] Evaluating...
2024-08-18 19:48:35,426 [Process: 0] EPOCH 200:
2024-08-18 19:48:35,427 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9856, 0.0055, 0.0032,  ..., 0.9595, 0.9342, 0.0037],
         [0.0048, 0.0055, 0.0032,  ..., 0.0256, 0.0219, 0.0037],
         [0.0048, 0.0055, 0.0032,  ..., 0.0074, 0.0219, 0.0037],
         [0.0048, 0.9836, 0.9903,  ..., 0.0074, 0.0219, 0.9888]],
        [[0.9694, 0.0182, 0.0129,  ..., 0.1637, 0.0056, 0.0019],
         [0.0099, 0.0134, 0.0129,  ..., 0.1097, 0.0056, 0.0024],
         [0.0108, 0.0134, 0.0129,  ..., 0.3740, 0.9832, 0.9937],
         [0.0099, 0.9549, 0.9612,  ..., 0.3526, 0.0056, 0.0019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.0106e-03, 8.5720e-04, 7.3757e-03,  ..., 1.2853e-02,
          1.3653e-01, 8.5238e-03],
         [6.0106e-03, 8.5720e-04, 7.3757e-03,  ..., 1.2926e-02,
          7.8268e-02, 8.5238e-03],
         [9.8197e-01, 8.5720e-04, 7.3757e-03,  ..., 9.6137e-01,
          6.1187e-01, 9.7443e-01],
         [6.0106e-03, 9.9743e-01, 9.7787e-01,  ..., 1.2853e-02,
          1.7333e-01, 8.5238e-03]],
        [[1.8004e-03, 1.8148e-04, 1.8847e-03,  ..., 1.7468e-02,
          2.8027e-02, 9.9724e-01],
         [1.8004e-03, 1.8148e-04, 1.8847e-03,  ..., 1.7468e-02,
          2.8027e-02, 9.2163e-04],
         [9.9460e-01, 1.8148e-04, 1.8847e-03,  ..., 9.4760e-01,
          9.0742e-01, 9.2163e-04],
         [1.8004e-03, 9.9946e-01, 9.9435e-01,  ..., 1.7468e-02,
          3.6524e-02, 9.2163e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0021, 0.0067, 0.0169,  ..., 0.9870, 0.9229, 0.0082],
         [0.0021, 0.0067, 0.0332,  ..., 0.0042, 0.0257, 0.0082],
         [0.9937, 0.0067, 0.0169,  ..., 0.0046, 0.0257, 0.0082],
         [0.0021, 0.9800, 0.9329,  ..., 0.0042, 0.0257, 0.9753]],
        [[0.9792, 0.0307, 0.0164,  ..., 0.2189, 0.0064, 0.0016],
         [0.0068, 0.0280, 0.0164,  ..., 0.1122, 0.0089, 0.0018],
         [0.0072, 0.0280, 0.0164,  ..., 0.2419, 0.9782, 0.9950],
         [0.0068, 0.9134, 0.9507,  ..., 0.4269, 0.0064, 0.0016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:48:36,579 [Process: 0] Synchronize training processes
2024-08-18 19:48:36,580 [Process: 0] Evaluating...
2024-08-18 19:48:36,582 [Process: 0] EPOCH 201:
2024-08-18 19:48:36,583 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:37,738 [Process: 0] Synchronize training processes
2024-08-18 19:48:37,738 [Process: 0] Evaluating...
2024-08-18 19:48:37,744 [Process: 0] EPOCH 202:
2024-08-18 19:48:37,746 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1084e-02, 1.0274e-02, 4.0627e-03,  ..., 1.0165e-02,
          3.4279e-01, 9.4910e-03],
         [2.1084e-02, 1.0274e-02, 4.0627e-03,  ..., 1.0165e-02,
          1.0224e-01, 9.0551e-03],
         [9.3525e-01, 1.0274e-02, 4.0627e-03,  ..., 9.6950e-01,
          1.5505e-01, 9.7240e-01],
         [2.2579e-02, 9.6918e-01, 9.8781e-01,  ..., 1.0165e-02,
          3.9992e-01, 9.0551e-03]],
        [[1.3454e-02, 5.8858e-04, 2.0662e-03,  ..., 1.3882e-02,
          8.5507e-03, 9.6630e-01],
         [1.3454e-02, 5.8858e-04, 2.0662e-03,  ..., 1.3882e-02,
          8.5507e-03, 1.9875e-02],
         [9.5964e-01, 5.8858e-04, 2.0662e-03,  ..., 9.5835e-01,
          9.7435e-01, 6.9147e-03],
         [1.3454e-02, 9.9823e-01, 9.9380e-01,  ..., 1.3882e-02,
          8.5507e-03, 6.9147e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 201:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8199, 0.0105, 0.0069,  ..., 0.9911, 0.3170, 0.0293],
         [0.1184, 0.0105, 0.0069,  ..., 0.0030, 0.1042, 0.0235],
         [0.0309, 0.0105, 0.0069,  ..., 0.0030, 0.1776, 0.0284],
         [0.0309, 0.9685, 0.9793,  ..., 0.0030, 0.4011, 0.9188]],
        [[0.9851, 0.0185, 0.0293,  ..., 0.0434, 0.0067, 0.0030],
         [0.0045, 0.0119, 0.0246,  ..., 0.0434, 0.0067, 0.0030],
         [0.0059, 0.0119, 0.0246,  ..., 0.0618, 0.9799, 0.9911],
         [0.0045, 0.9577, 0.9215,  ..., 0.8515, 0.0067, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7408e-03, 7.3703e-03, 7.1371e-03,  ..., 6.1460e-03,
          3.5063e-01, 7.5926e-03],
         [5.7408e-03, 5.0229e-03, 7.1371e-03,  ..., 6.1460e-03,
          1.2664e-01, 7.5926e-03],
         [9.8278e-01, 5.0229e-03, 7.1371e-03,  ..., 9.8156e-01,
          2.1779e-01, 9.7713e-01],
         [5.7408e-03, 9.8258e-01, 9.7859e-01,  ..., 6.1460e-03,
          3.0494e-01, 7.6892e-03]],
        [[2.6209e-03, 6.2180e-03, 2.6273e-05,  ..., 1.5148e-02,
          1.6907e-02, 9.9659e-01],
         [2.6209e-03, 2.7495e-02, 2.6273e-05,  ..., 1.5148e-02,
          1.4476e-02, 1.1378e-03],
         [9.9214e-01, 6.2180e-03, 2.6273e-05,  ..., 9.5456e-01,
          9.5414e-01, 1.1378e-03],
         [2.6209e-03, 9.6007e-01, 9.9992e-01,  ..., 1.5148e-02,
          1.4476e-02, 1.1378e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 202:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9771, 0.0056, 0.0023,  ..., 0.9734, 0.4839, 0.0119],
         [0.0078, 0.0056, 0.0023,  ..., 0.0159, 0.0904, 0.0119],
         [0.0075, 0.0056, 0.0023,  ..., 0.0056, 0.1661, 0.0135],
         [0.0075, 0.9831, 0.9930,  ..., 0.0050, 0.2596, 0.9627]],
        [[0.9934, 0.0137, 0.0493,  ..., 0.0474, 0.0015, 0.0019],
         [0.0020, 0.0137, 0.0642,  ..., 0.0424, 0.0015, 0.0019],
         [0.0026, 0.0137, 0.0701,  ..., 0.0543, 0.9956, 0.9944],
         [0.0020, 0.9588, 0.8164,  ..., 0.8560, 0.0015, 0.0019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:48:38,922 [Process: 0] Synchronize training processes
2024-08-18 19:48:38,922 [Process: 0] Evaluating...
2024-08-18 19:48:38,924 [Process: 0] EPOCH 203:
2024-08-18 19:48:38,926 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3482e-02, 1.2692e-02, 7.9105e-03,  ..., 5.0311e-03,
          2.0118e-01, 1.2755e-02],
         [1.3482e-02, 1.2692e-02, 7.9105e-03,  ..., 5.0311e-03,
          1.2557e-01, 1.2755e-02],
         [9.5955e-01, 1.2692e-02, 7.9105e-03,  ..., 9.8491e-01,
          3.8444e-01, 9.6174e-01],
         [1.3482e-02, 9.6192e-01, 9.7627e-01,  ..., 5.0311e-03,
          2.8881e-01, 1.2755e-02]],
        [[4.9784e-03, 1.4762e-03, 2.1146e-04,  ..., 1.8385e-02,
          1.5274e-02, 9.9647e-01],
         [4.9784e-03, 9.5662e-04, 2.1146e-04,  ..., 1.8385e-02,
          1.5274e-02, 1.1775e-03],
         [9.8506e-01, 9.5662e-04, 2.1146e-04,  ..., 9.4137e-01,
          9.5115e-01, 1.1775e-03],
         [4.9784e-03, 9.9661e-01, 9.9937e-01,  ..., 2.1857e-02,
          1.8297e-02, 1.1775e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 203:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.8463e-01, 2.9377e-03, 3.0280e-03,  ..., 9.7184e-01,
          8.4022e-01, 1.1223e-02],
         [3.0553e-01, 2.9377e-03, 3.0280e-03,  ..., 8.3588e-03,
          3.8204e-02, 1.3838e-02],
         [4.7893e-02, 2.9377e-03, 3.0280e-03,  ..., 1.1445e-02,
          3.8204e-02, 1.1223e-02],
         [6.1946e-02, 9.9119e-01, 9.9092e-01,  ..., 8.3588e-03,
          8.3374e-02, 9.6372e-01]],
        [[9.9680e-01, 7.8216e-03, 5.8056e-03,  ..., 2.4281e-02,
          9.5536e-03, 1.5263e-03],
         [1.2951e-03, 7.9079e-03, 5.8056e-03,  ..., 2.4281e-02,
          9.5536e-03, 1.5263e-03],
         [9.5027e-04, 7.8216e-03, 5.8056e-03,  ..., 3.1412e-02,
          9.7134e-01, 9.9542e-01],
         [9.5027e-04, 9.7645e-01, 9.8258e-01,  ..., 9.2003e-01,
          9.5536e-03, 1.5263e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0763e-02, 3.4534e-03, 6.0178e-03,  ..., 1.0692e-02,
          1.5906e-01, 1.8264e-02],
         [1.0049e-02, 3.4534e-03, 6.0178e-03,  ..., 1.0692e-02,
          8.5389e-02, 1.8264e-02],
         [9.6914e-01, 3.4534e-03, 6.0178e-03,  ..., 9.6793e-01,
          5.5968e-01, 9.4521e-01],
         [1.0049e-02, 9.8964e-01, 9.8195e-01,  ..., 1.0692e-02,
          1.9587e-01, 1.8264e-02]],
        [[2.5377e-02, 6.1951e-04, 1.1768e-04,  ..., 2.5289e-02,
          1.3772e-02, 9.9310e-01],
         [2.5377e-02, 6.1951e-04, 1.1768e-04,  ..., 2.5289e-02,
          1.3772e-02, 2.9767e-03],
         [9.1930e-01, 6.1951e-04, 1.1768e-04,  ..., 9.1772e-01,
          9.5498e-01, 1.9612e-03],
         [2.9949e-02, 9.9814e-01, 9.9965e-01,  ..., 3.1698e-02,
          1.7473e-02, 1.9612e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 204:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:40,081 [Process: 0] Synchronize training processes
2024-08-18 19:48:40,081 [Process: 0] Evaluating...
2024-08-18 19:48:40,083 [Process: 0] EPOCH 204:
2024-08-18 19:48:40,085 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:41,236 [Process: 0] Synchronize training processes
2024-08-18 19:48:41,237 [Process: 0] Evaluating...
2024-08-18 19:48:41,238 [Process: 0] EPOCH 205:
2024-08-18 19:48:41,240 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8385, 0.0165, 0.0241,  ..., 0.9863, 0.8869, 0.0040],
         [0.1008, 0.0075, 0.0154,  ..., 0.0047, 0.0311, 0.0040],
         [0.0304, 0.0075, 0.0154,  ..., 0.0045, 0.0513, 0.0040],
         [0.0304, 0.9685, 0.9451,  ..., 0.0045, 0.0307, 0.9879]],
        [[0.9788, 0.0202, 0.0074,  ..., 0.0098, 0.0038, 0.0027],
         [0.0074, 0.0202, 0.0074,  ..., 0.0098, 0.0038, 0.0027],
         [0.0073, 0.0202, 0.0074,  ..., 0.0098, 0.9885, 0.9920],
         [0.0065, 0.9393, 0.9779,  ..., 0.9706, 0.0038, 0.0027]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0243e-02, 6.0776e-03, 4.5908e-04,  ..., 1.5059e-02,
          3.2034e-01, 3.7740e-03],
         [1.0243e-02, 6.0776e-03, 4.5908e-04,  ..., 1.5059e-02,
          1.1244e-01, 3.7740e-03],
         [9.6927e-01, 6.0776e-03, 4.5908e-04,  ..., 9.5482e-01,
          2.1631e-01, 9.8868e-01],
         [1.0243e-02, 9.8177e-01, 9.9862e-01,  ..., 1.5059e-02,
          3.5091e-01, 3.7740e-03]],
        [[1.7285e-02, 5.5139e-04, 3.4413e-03,  ..., 1.2645e-02,
          4.8013e-02, 9.9853e-01],
         [1.7285e-02, 1.0878e-03, 3.4413e-03,  ..., 1.2645e-02,
          4.3383e-02, 4.8960e-04],
         [9.4046e-01, 5.5139e-04, 3.4413e-03,  ..., 9.6031e-01,
          8.4740e-01, 4.8960e-04],
         [2.4968e-02, 9.9781e-01, 9.8968e-01,  ..., 1.4403e-02,
          6.1208e-02, 4.8960e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 205:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4287e-01, 1.3958e-02, 1.4524e-02,  ..., 9.9774e-01,
          8.7467e-01, 4.9516e-03],
         [4.3153e-01, 1.3958e-02, 1.4524e-02,  ..., 7.5388e-04,
          2.7810e-02, 4.9516e-03],
         [1.2800e-02, 1.3958e-02, 1.4524e-02,  ..., 7.5388e-04,
          6.9706e-02, 4.9516e-03],
         [1.2800e-02, 9.5813e-01, 9.5643e-01,  ..., 7.5388e-04,
          2.7810e-02, 9.8515e-01]],
        [[9.9631e-01, 1.4761e-02, 1.0230e-02,  ..., 4.2616e-02,
          3.5428e-02, 1.4172e-03],
         [1.2212e-03, 1.4761e-02, 1.0230e-02,  ..., 6.7704e-02,
          4.7301e-02, 1.4172e-03],
         [1.2458e-03, 1.6114e-02, 1.0230e-02,  ..., 5.3492e-02,
          8.7238e-01, 9.9575e-01],
         [1.2212e-03, 9.5436e-01, 9.6931e-01,  ..., 8.3619e-01,
          4.4895e-02, 1.4172e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.3821e-03, 6.2389e-04, 9.0259e-03,  ..., 5.7207e-03,
          1.3037e-01, 1.0352e-02],
         [8.3821e-03, 6.2389e-04, 3.0065e-03,  ..., 5.7207e-03,
          7.4139e-02, 1.0352e-02],
         [9.7485e-01, 6.2389e-04, 3.0065e-03,  ..., 9.8284e-01,
          6.6583e-01, 9.6894e-01],
         [8.3821e-03, 9.9813e-01, 9.8496e-01,  ..., 5.7207e-03,
          1.2966e-01, 1.0352e-02]],
        [[5.0395e-02, 3.6746e-05, 8.9998e-03,  ..., 8.3272e-03,
          1.9398e-02, 9.9925e-01],
         [3.4356e-02, 3.6746e-05, 4.1335e-02,  ..., 8.3272e-03,
          1.9398e-02, 2.4863e-04],
         [8.8089e-01, 3.6746e-05, 8.9998e-03,  ..., 9.7502e-01,
          9.3888e-01, 2.4863e-04],
         [3.4356e-02, 9.9989e-01, 9.4067e-01,  ..., 8.3272e-03,
          2.2323e-02, 2.4863e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:48:42,391 [Process: 0] Synchronize training processes
2024-08-18 19:48:42,391 [Process: 0] Evaluating...
2024-08-18 19:48:42,393 [Process: 0] EPOCH 206:
2024-08-18 19:48:42,394 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:43,545 [Process: 0] Synchronize training processes
2024-08-18 19:48:43,546 [Process: 0] Evaluating...
2024-08-18 19:48:43,547 [Process: 0] EPOCH 207:
2024-08-18 19:48:43,549 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 206:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9087, 0.0143, 0.0028,  ..., 0.9872, 0.6918, 0.0058],
         [0.0645, 0.0110, 0.0028,  ..., 0.0040, 0.0650, 0.0058],
         [0.0134, 0.0110, 0.0028,  ..., 0.0047, 0.1607, 0.0065],
         [0.0134, 0.9638, 0.9917,  ..., 0.0040, 0.0825, 0.9818]],
        [[0.9850, 0.0073, 0.0275,  ..., 0.0113, 0.0183, 0.0035],
         [0.0052, 0.0070, 0.0308,  ..., 0.0113, 0.0183, 0.0035],
         [0.0049, 0.0070, 0.0275,  ..., 0.0113, 0.9451, 0.9896],
         [0.0049, 0.9788, 0.9142,  ..., 0.9662, 0.0183, 0.0035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0375e-02, 1.5428e-03, 5.3233e-03,  ..., 7.5150e-03,
          7.8402e-02, 8.1969e-03],
         [1.0375e-02, 1.5428e-03, 5.3233e-03,  ..., 7.5150e-03,
          3.1305e-02, 8.1969e-03],
         [9.6888e-01, 1.5428e-03, 5.3233e-03,  ..., 9.7746e-01,
          3.1305e-02, 9.7541e-01],
         [1.0375e-02, 9.9537e-01, 9.8403e-01,  ..., 7.5150e-03,
          8.5899e-01, 8.1969e-03]],
        [[5.7915e-02, 3.4654e-03, 1.6730e-04,  ..., 1.6818e-02,
          6.1613e-03, 9.9911e-01],
         [4.2299e-02, 3.4654e-03, 1.6730e-04,  ..., 1.6818e-02,
          6.1613e-03, 2.9781e-04],
         [8.5724e-01, 3.4654e-03, 1.6730e-04,  ..., 9.4955e-01,
          9.8152e-01, 2.9781e-04],
         [4.2542e-02, 9.8960e-01, 9.9950e-01,  ..., 1.6818e-02,
          6.1613e-03, 2.9781e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 207:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9678, 0.0050, 0.0041,  ..., 0.9845, 0.6543, 0.0022],
         [0.0107, 0.0050, 0.0041,  ..., 0.0052, 0.0771, 0.0022],
         [0.0107, 0.0050, 0.0041,  ..., 0.0052, 0.1303, 0.0022],
         [0.0107, 0.9849, 0.9877,  ..., 0.0052, 0.1383, 0.9935]],
        [[0.9622, 0.0034, 0.0156,  ..., 0.0113, 0.0022, 0.0015],
         [0.0125, 0.0034, 0.0151,  ..., 0.0113, 0.0033, 0.0015],
         [0.0128, 0.0034, 0.0151,  ..., 0.0137, 0.9922, 0.9954],
         [0.0125, 0.9897, 0.9541,  ..., 0.9638, 0.0022, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:48:44,701 [Process: 0] Synchronize training processes
2024-08-18 19:48:44,702 [Process: 0] Evaluating...
2024-08-18 19:48:44,704 [Process: 0] EPOCH 208:
2024-08-18 19:48:44,705 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.0876e-03, 5.2787e-03, 2.2290e-03,  ..., 8.9195e-03,
          3.7893e-01, 6.1761e-03],
         [7.0876e-03, 5.2787e-03, 2.2290e-03,  ..., 8.9195e-03,
          8.8356e-02, 6.1761e-03],
         [9.7874e-01, 5.2787e-03, 2.2290e-03,  ..., 9.7324e-01,
          8.8356e-02, 9.8147e-01],
         [7.0876e-03, 9.8416e-01, 9.9331e-01,  ..., 8.9195e-03,
          4.4436e-01, 6.1761e-03]],
        [[7.4459e-03, 5.0790e-05, 9.9344e-04,  ..., 8.8636e-03,
          1.3329e-02, 9.9990e-01],
         [7.3476e-03, 5.0790e-05, 9.9344e-04,  ..., 8.8636e-03,
          1.3329e-02, 3.4520e-05],
         [9.7786e-01, 5.0790e-05, 9.9344e-04,  ..., 9.7341e-01,
          9.6001e-01, 3.4520e-05],
         [7.3476e-03, 9.9985e-01, 9.9702e-01,  ..., 8.8636e-03,
          1.3329e-02, 3.4520e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 208:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8325, 0.0101, 0.0106,  ..., 0.9909, 0.7519, 0.0061],
         [0.1069, 0.0206, 0.0106,  ..., 0.0030, 0.0686, 0.0061],
         [0.0303, 0.0101, 0.0126,  ..., 0.0030, 0.0758, 0.0065],
         [0.0303, 0.9593, 0.9661,  ..., 0.0030, 0.1037, 0.9814]],
        [[0.9741, 0.0097, 0.0144,  ..., 0.0044, 0.0030, 0.0014],
         [0.0126, 0.0097, 0.0157,  ..., 0.0044, 0.0033, 0.0016],
         [0.0066, 0.0102, 0.0185,  ..., 0.0048, 0.9907, 0.9956],
         [0.0066, 0.9705, 0.9514,  ..., 0.9865, 0.0030, 0.0014]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9711e-03, 1.7316e-03, 4.2932e-04,  ..., 1.6209e-02,
          2.8217e-01, 1.2808e-02],
         [9.9711e-03, 1.7316e-03, 4.2932e-04,  ..., 1.6097e-02,
          2.0562e-01, 1.4192e-02],
         [9.7009e-01, 1.7316e-03, 4.2932e-04,  ..., 9.5160e-01,
          1.6286e-01, 9.6019e-01],
         [9.9711e-03, 9.9481e-01, 9.9871e-01,  ..., 1.6097e-02,
          3.4936e-01, 1.2808e-02]],
        [[7.7436e-03, 1.3905e-04, 5.5853e-04,  ..., 1.0861e-02,
          1.5863e-02, 9.6945e-01],
         [7.7436e-03, 1.3905e-04, 6.8715e-04,  ..., 9.9569e-03,
          1.1571e-02, 9.7935e-03],
         [9.7677e-01, 1.3905e-04, 5.5853e-04,  ..., 9.6923e-01,
          9.6099e-01, 9.7935e-03],
         [7.7436e-03, 9.9958e-01, 9.9820e-01,  ..., 9.9569e-03,
          1.1571e-02, 1.0965e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 209:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8477, 0.0358, 0.0245,  ..., 0.9729, 0.8875, 0.0065],
         [0.1074, 0.0267, 0.0154,  ..., 0.0108, 0.0253, 0.0065],
         [0.0224, 0.0315, 0.0154,  ..., 0.0081, 0.0335, 0.0065],
         [0.0224, 0.9059, 0.9446,  ..., 0.0081, 0.0536, 0.9805]],
        [[0.9872, 0.0251, 0.0209,  ..., 0.0123, 0.0025, 0.0030],
         [0.0043, 0.0228, 0.0209,  ..., 0.0123, 0.0025, 0.0030],
         [0.0043, 0.0239, 0.0244,  ..., 0.0157, 0.9924, 0.9909],
         [0.0043, 0.9282, 0.9337,  ..., 0.9596, 0.0025, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:48:45,855 [Process: 0] Synchronize training processes
2024-08-18 19:48:45,855 [Process: 0] Evaluating...
2024-08-18 19:48:45,857 [Process: 0] EPOCH 209:
2024-08-18 19:48:45,859 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:47,031 [Process: 0] Synchronize training processes
2024-08-18 19:48:47,031 [Process: 0] Evaluating...
2024-08-18 19:48:47,033 [Process: 0] EPOCH 210:
2024-08-18 19:48:47,035 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6232e-03, 4.3276e-03, 8.7595e-03,  ..., 1.3941e-02,
          1.0441e-01, 1.6490e-02],
         [8.6232e-03, 4.3276e-03, 8.7595e-03,  ..., 1.3941e-02,
          7.0469e-02, 1.6490e-02],
         [9.7413e-01, 4.3276e-03, 8.7595e-03,  ..., 9.5818e-01,
          6.6482e-01, 9.5053e-01],
         [8.6232e-03, 9.8702e-01, 9.7372e-01,  ..., 1.3941e-02,
          1.6030e-01, 1.6490e-02]],
        [[8.5481e-03, 8.8449e-04, 3.8834e-04,  ..., 1.1151e-02,
          7.3305e-03, 9.9825e-01],
         [8.5481e-03, 1.5220e-03, 3.8834e-04,  ..., 1.1151e-02,
          6.6016e-03, 5.8405e-04],
         [9.7436e-01, 8.8449e-04, 3.8834e-04,  ..., 9.6655e-01,
          9.7947e-01, 5.8405e-04],
         [8.5481e-03, 9.9671e-01, 9.9884e-01,  ..., 1.1151e-02,
          6.6016e-03, 5.8405e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 210:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7936e-01, 2.2213e-02, 3.0220e-03,  ..., 9.9755e-01,
          9.6830e-01, 8.2081e-03],
         [3.5357e-01, 3.1075e-02, 3.0220e-03,  ..., 8.1601e-04,
          7.0033e-03, 8.2081e-03],
         [3.3535e-02, 2.2213e-02, 3.0220e-03,  ..., 8.1601e-04,
          1.4452e-02, 8.2609e-03],
         [3.3535e-02, 9.2450e-01, 9.9093e-01,  ..., 8.1601e-04,
          1.0241e-02, 9.7532e-01]],
        [[9.8938e-01, 2.2800e-02, 1.1706e-02,  ..., 5.8659e-03,
          4.6752e-04, 1.3218e-03],
         [3.5399e-03, 7.2950e-02, 1.6189e-02,  ..., 7.6324e-03,
          4.6752e-04, 1.3218e-03],
         [3.5399e-03, 2.6554e-02, 1.2165e-02,  ..., 5.8659e-03,
          9.9860e-01, 9.9603e-01],
         [3.5399e-03, 8.7770e-01, 9.5994e-01,  ..., 9.8064e-01,
          4.6752e-04, 1.3218e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.9989e-03, 1.2419e-03, 4.0623e-03,  ..., 1.1961e-02,
          2.5469e-01, 8.4410e-03],
         [7.9989e-03, 1.2419e-03, 4.5296e-03,  ..., 1.1961e-02,
          1.0278e-01, 8.4410e-03],
         [9.7600e-01, 1.2419e-03, 4.0623e-03,  ..., 9.6412e-01,
          1.5506e-01, 9.7468e-01],
         [7.9989e-03, 9.9627e-01, 9.8735e-01,  ..., 1.1961e-02,
          4.8748e-01, 8.4410e-03]],
        [[7.5809e-03, 4.7432e-04, 4.8368e-04,  ..., 7.2421e-03,
          3.8002e-03, 9.9910e-01],
         [7.5809e-03, 4.7432e-04, 4.8368e-04,  ..., 7.2421e-03,
          3.8002e-03, 2.9915e-04],
         [9.7726e-01, 4.7432e-04, 4.8368e-04,  ..., 9.7827e-01,
          9.8860e-01, 2.9915e-04],
         [7.5809e-03, 9.9858e-01, 9.9855e-01,  ..., 7.2421e-03,
          3.8002e-03, 2.9915e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 211:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:48,186 [Process: 0] Synchronize training processes
2024-08-18 19:48:48,186 [Process: 0] Evaluating...
2024-08-18 19:48:48,188 [Process: 0] EPOCH 211:
2024-08-18 19:48:48,190 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:49,342 [Process: 0] Synchronize training processes
2024-08-18 19:48:49,343 [Process: 0] Evaluating...
2024-08-18 19:48:49,349 [Process: 0] EPOCH 212:
2024-08-18 19:48:49,351 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7937e-01, 1.4355e-02, 2.7130e-03,  ..., 9.8122e-01,
          7.1916e-01, 2.2792e-02],
         [6.8765e-03, 1.4355e-02, 2.7130e-03,  ..., 6.2589e-03,
          3.5338e-02, 2.2792e-02],
         [6.8765e-03, 2.0296e-02, 2.7130e-03,  ..., 6.2589e-03,
          2.0262e-01, 2.3514e-02],
         [6.8765e-03, 9.5099e-01, 9.9186e-01,  ..., 6.2589e-03,
          4.2889e-02, 9.3090e-01]],
        [[9.6786e-01, 1.0740e-02, 2.4364e-02,  ..., 3.6618e-02,
          1.0944e-03, 9.8234e-04],
         [1.5865e-02, 1.0698e-02, 2.2655e-02,  ..., 3.6618e-02,
          1.1020e-03, 9.8234e-04],
         [8.1371e-03, 1.0698e-02, 2.2655e-02,  ..., 4.2198e-02,
          9.9671e-01, 9.9705e-01],
         [8.1371e-03, 9.6786e-01, 9.3033e-01,  ..., 8.8457e-01,
          1.0944e-03, 9.8234e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9268e-03, 2.5635e-03, 2.1124e-04,  ..., 1.2471e-02,
          2.2894e-01, 1.7989e-02],
         [6.9268e-03, 1.6360e-03, 2.1124e-04,  ..., 1.2471e-02,
          9.0113e-02, 1.7989e-02],
         [9.7922e-01, 1.6360e-03, 2.1124e-04,  ..., 9.6259e-01,
          1.0770e-01, 9.4603e-01],
         [6.9268e-03, 9.9416e-01, 9.9937e-01,  ..., 1.2471e-02,
          5.7325e-01, 1.7989e-02]],
        [[1.3934e-02, 2.8865e-04, 1.2303e-04,  ..., 1.5848e-02,
          1.4351e-02, 9.9933e-01],
         [1.3934e-02, 1.4997e-03, 1.2303e-04,  ..., 1.3642e-02,
          1.4351e-02, 2.2496e-04],
         [9.5820e-01, 2.8865e-04, 1.2303e-04,  ..., 9.5687e-01,
          9.5695e-01, 2.2496e-04],
         [1.3934e-02, 9.9792e-01, 9.9963e-01,  ..., 1.3642e-02,
          1.4351e-02, 2.2496e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 212:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8857, 0.0048, 0.0782,  ..., 0.9965, 0.9941, 0.0080],
         [0.0241, 0.0048, 0.0638,  ..., 0.0012, 0.0018, 0.0080],
         [0.0662, 0.0048, 0.0732,  ..., 0.0012, 0.0023, 0.0080],
         [0.0241, 0.9855, 0.7848,  ..., 0.0012, 0.0018, 0.9759]],
        [[0.8771, 0.0277, 0.0042,  ..., 0.0095, 0.0038, 0.0016],
         [0.0524, 0.0277, 0.0042,  ..., 0.0095, 0.0038, 0.0016],
         [0.0353, 0.0331, 0.0042,  ..., 0.0095, 0.9886, 0.9953],
         [0.0353, 0.9116, 0.9875,  ..., 0.9715, 0.0038, 0.0016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:48:50,501 [Process: 0] Synchronize training processes
2024-08-18 19:48:50,501 [Process: 0] Evaluating...
2024-08-18 19:48:50,503 [Process: 0] EPOCH 213:
2024-08-18 19:48:50,504 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6659e-02, 7.5246e-03, 7.6106e-03,  ..., 1.2625e-02,
          3.0246e-01, 4.3391e-02],
         [1.6659e-02, 7.5246e-03, 2.0030e-02,  ..., 1.2625e-02,
          1.3473e-01, 3.8409e-02],
         [9.5002e-01, 7.5246e-03, 7.6106e-03,  ..., 9.6212e-01,
          1.5726e-01, 8.6043e-01],
         [1.6659e-02, 9.7743e-01, 9.6475e-01,  ..., 1.2625e-02,
          4.0555e-01, 5.7770e-02]],
        [[7.3996e-03, 5.0125e-04, 1.7103e-04,  ..., 8.5021e-03,
          9.1973e-03, 9.9429e-01],
         [7.3996e-03, 5.0125e-04, 1.7103e-04,  ..., 8.5021e-03,
          9.1973e-03, 1.9034e-03],
         [9.7780e-01, 5.0125e-04, 1.7103e-04,  ..., 9.7449e-01,
          9.7241e-01, 1.9034e-03],
         [7.3996e-03, 9.9850e-01, 9.9949e-01,  ..., 8.5021e-03,
          9.1973e-03, 1.9034e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 213:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6046e-01, 5.2063e-03, 9.6357e-03,  ..., 9.9824e-01,
          9.5109e-01, 9.4253e-03],
         [1.0195e-02, 8.3861e-03, 1.0069e-02,  ..., 5.8819e-04,
          7.2899e-03, 1.1092e-02],
         [1.9149e-02, 5.2063e-03, 9.6357e-03,  ..., 5.8819e-04,
          3.4330e-02, 9.4253e-03],
         [1.0195e-02, 9.8120e-01, 9.7066e-01,  ..., 5.8819e-04,
          7.2899e-03, 9.7006e-01]],
        [[9.5087e-01, 1.1053e-02, 6.2651e-03,  ..., 9.6253e-03,
          1.2280e-02, 5.5301e-03],
         [2.0190e-02, 1.0129e-02, 6.2651e-03,  ..., 1.4046e-02,
          1.6045e-02, 5.5301e-03],
         [1.4777e-02, 1.0129e-02, 6.2651e-03,  ..., 9.6253e-03,
          9.5939e-01, 9.8341e-01],
         [1.4161e-02, 9.6869e-01, 9.8120e-01,  ..., 9.6670e-01,
          1.2280e-02, 5.5301e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0084, 0.0085, 0.0030,  ..., 0.0183, 0.3519, 0.0267],
         [0.0084, 0.0085, 0.0030,  ..., 0.0183, 0.0917, 0.0208],
         [0.9748, 0.0085, 0.0030,  ..., 0.9423, 0.0917, 0.9317],
         [0.0084, 0.9745, 0.9910,  ..., 0.0210, 0.4648, 0.0208]],
        [[0.0100, 0.0031, 0.0046,  ..., 0.0106, 0.0086, 0.9966],
         [0.0100, 0.0053, 0.0046,  ..., 0.0106, 0.0086, 0.0011],
         [0.9699, 0.0031, 0.0046,  ..., 0.9681, 0.9743, 0.0011],
         [0.0100, 0.9886, 0.9862,  ..., 0.0106, 0.0086, 0.0011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 214:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6730e-01, 2.0271e-02, 1.2247e-02,  ..., 9.9707e-01,
          8.5251e-01, 7.8074e-03],
         [8.9342e-02, 2.0271e-02, 1.2247e-02,  ..., 9.7414e-04,
          2.0440e-02, 7.8074e-03],
         [2.1680e-02, 3.0217e-02, 1.2247e-02,  ..., 9.8112e-04,
          1.0661e-01, 7.8074e-03],
         [2.1680e-02, 9.2924e-01, 9.6326e-01,  ..., 9.7414e-04,
          2.0440e-02, 9.7658e-01]],
        [[9.6903e-01, 8.4036e-03, 5.2358e-02,  ..., 4.6614e-03,
          1.2032e-02, 3.0326e-03],
         [1.0323e-02, 8.4036e-03, 5.9619e-02,  ..., 4.6614e-03,
          1.2032e-02, 3.0326e-03],
         [1.0323e-02, 8.4036e-03, 6.5493e-02,  ..., 4.8341e-03,
          9.6390e-01, 9.9090e-01],
         [1.0323e-02, 9.7479e-01, 8.2253e-01,  ..., 9.8584e-01,
          1.2032e-02, 3.0326e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:48:51,655 [Process: 0] Synchronize training processes
2024-08-18 19:48:51,656 [Process: 0] Evaluating...
2024-08-18 19:48:51,657 [Process: 0] EPOCH 214:
2024-08-18 19:48:51,659 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:52,811 [Process: 0] Synchronize training processes
2024-08-18 19:48:52,812 [Process: 0] Evaluating...
2024-08-18 19:48:52,813 [Process: 0] EPOCH 215:
2024-08-18 19:48:52,815 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6977e-02, 1.1949e-01, 3.8686e-04,  ..., 9.5014e-03,
          3.4060e-01, 1.9109e-02],
         [2.3037e-02, 3.5972e-02, 3.8686e-04,  ..., 9.5014e-03,
          1.7267e-01, 1.7778e-02],
         [9.2695e-01, 3.5972e-02, 3.8686e-04,  ..., 9.7150e-01,
          2.1563e-01, 9.4533e-01],
         [2.3037e-02, 8.0857e-01, 9.9884e-01,  ..., 9.5014e-03,
          2.7110e-01, 1.7778e-02]],
        [[7.4070e-03, 2.3260e-02, 8.6993e-05,  ..., 1.6732e-02,
          6.4285e-03, 9.9989e-01],
         [7.4070e-03, 1.3087e-01, 8.6993e-05,  ..., 1.6732e-02,
          6.4285e-03, 3.5501e-05],
         [9.7778e-01, 2.3260e-02, 8.6993e-05,  ..., 9.4980e-01,
          9.8071e-01, 3.5501e-05],
         [7.4070e-03, 8.2261e-01, 9.9974e-01,  ..., 1.6732e-02,
          6.4285e-03, 3.5501e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 215:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3078, 0.0052, 0.0142,  ..., 0.9950, 0.9300, 0.0064],
         [0.5800, 0.0052, 0.0142,  ..., 0.0017, 0.0156, 0.0064],
         [0.0561, 0.0052, 0.0142,  ..., 0.0017, 0.0307, 0.0064],
         [0.0561, 0.9843, 0.9573,  ..., 0.0017, 0.0237, 0.9809]],
        [[0.9937, 0.0083, 0.0456,  ..., 0.0138, 0.0020, 0.0050],
         [0.0021, 0.0083, 0.0660,  ..., 0.0138, 0.0020, 0.0050],
         [0.0021, 0.0083, 0.0493,  ..., 0.0138, 0.9940, 0.9850],
         [0.0021, 0.9751, 0.8391,  ..., 0.9586, 0.0020, 0.0050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5876e-02, 1.8200e-02, 1.4489e-02,  ..., 1.2220e-02,
          2.9791e-01, 8.5865e-03],
         [1.5876e-02, 1.4739e-02, 1.3682e-02,  ..., 1.2220e-02,
          1.2879e-01, 8.5865e-03],
         [9.5237e-01, 1.4739e-02, 1.3682e-02,  ..., 9.6268e-01,
          2.6393e-01, 9.7424e-01],
         [1.5876e-02, 9.5232e-01, 9.5815e-01,  ..., 1.2880e-02,
          3.0937e-01, 8.5865e-03]],
        [[9.0422e-03, 9.1805e-06, 1.0314e-04,  ..., 1.1440e-02,
          6.4747e-03, 9.9921e-01],
         [9.0422e-03, 1.0259e-05, 1.0314e-04,  ..., 1.1440e-02,
          6.4747e-03, 2.6412e-04],
         [9.7287e-01, 9.1805e-06, 1.0314e-04,  ..., 9.6568e-01,
          9.8058e-01, 2.6412e-04],
         [9.0422e-03, 9.9997e-01, 9.9969e-01,  ..., 1.1440e-02,
          6.4747e-03, 2.6412e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 216:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:48:53,966 [Process: 0] Synchronize training processes
2024-08-18 19:48:53,967 [Process: 0] Evaluating...
2024-08-18 19:48:53,969 [Process: 0] EPOCH 216:
2024-08-18 19:48:53,970 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:55,121 [Process: 0] Synchronize training processes
2024-08-18 19:48:55,121 [Process: 0] Evaluating...
2024-08-18 19:48:55,123 [Process: 0] EPOCH 217:
2024-08-18 19:48:55,124 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0034, 0.0182, 0.0067,  ..., 0.9916, 0.3847, 0.0204],
         [0.0034, 0.0115, 0.0067,  ..., 0.0028, 0.0624, 0.0206],
         [0.9897, 0.0115, 0.0067,  ..., 0.0028, 0.4850, 0.0172],
         [0.0034, 0.9587, 0.9799,  ..., 0.0028, 0.0679, 0.9418]],
        [[0.9902, 0.0207, 0.0495,  ..., 0.0114, 0.0038, 0.0032],
         [0.0033, 0.0155, 0.0968,  ..., 0.0100, 0.0038, 0.0032],
         [0.0033, 0.0155, 0.0566,  ..., 0.0100, 0.9887, 0.9905],
         [0.0033, 0.9483, 0.7970,  ..., 0.9686, 0.0038, 0.0032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1644e-02, 6.5533e-03, 3.6018e-03,  ..., 1.3767e-02,
          1.6436e-01, 6.4711e-03],
         [1.1644e-02, 6.5533e-03, 3.6018e-03,  ..., 1.3767e-02,
          9.4291e-02, 6.4711e-03],
         [9.6507e-01, 6.5533e-03, 3.6018e-03,  ..., 9.5870e-01,
          4.4305e-01, 9.8059e-01],
         [1.1644e-02, 9.8034e-01, 9.8919e-01,  ..., 1.3767e-02,
          2.9830e-01, 6.4711e-03]],
        [[1.9709e-02, 1.6181e-04, 2.0891e-04,  ..., 1.4809e-02,
          2.7069e-02, 9.9738e-01],
         [1.9709e-02, 1.6181e-04, 2.0891e-04,  ..., 1.4809e-02,
          2.3610e-02, 1.1938e-03],
         [9.4087e-01, 1.6181e-04, 2.0891e-04,  ..., 9.5557e-01,
          9.2294e-01, 7.1373e-04],
         [1.9709e-02, 9.9951e-01, 9.9937e-01,  ..., 1.4809e-02,
          2.6378e-02, 7.1373e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 217:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8704e-01, 4.4235e-03, 7.9704e-03,  ..., 9.8670e-01,
          4.5181e-01, 4.2606e-03],
         [4.3211e-03, 4.4235e-03, 1.3886e-02,  ..., 4.4318e-03,
          7.8235e-02, 4.2606e-03],
         [4.3211e-03, 4.4235e-03, 7.9704e-03,  ..., 4.4318e-03,
          1.3732e-01, 4.2606e-03],
         [4.3211e-03, 9.8673e-01, 9.7017e-01,  ..., 4.4318e-03,
          3.3263e-01, 9.8722e-01]],
        [[9.9881e-01, 2.7940e-02, 2.1286e-02,  ..., 1.5393e-02,
          3.0941e-03, 1.0233e-03],
         [3.9556e-04, 2.2176e-02, 1.6432e-02,  ..., 1.5393e-02,
          3.0941e-03, 1.0233e-03],
         [3.9556e-04, 2.2176e-02, 1.6432e-02,  ..., 1.8320e-02,
          9.9072e-01, 9.9693e-01],
         [3.9556e-04, 9.2771e-01, 9.4585e-01,  ..., 9.5089e-01,
          3.0941e-03, 1.0233e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4182e-02, 6.8388e-04, 5.1878e-03,  ..., 9.7509e-03,
          2.2036e-01, 8.3737e-03],
         [2.4021e-02, 6.8388e-04, 5.1878e-03,  ..., 9.7509e-03,
          8.5355e-02, 8.3737e-03],
         [9.2686e-01, 6.8388e-04, 5.1878e-03,  ..., 9.7075e-01,
          1.5698e-01, 9.7488e-01],
         [2.4933e-02, 9.9795e-01, 9.8444e-01,  ..., 9.7509e-03,
          5.3731e-01, 8.3737e-03]],
        [[4.9248e-03, 9.1270e-05, 4.2689e-04,  ..., 2.0888e-02,
          7.0130e-03, 9.8568e-01],
         [4.9248e-03, 9.1270e-05, 4.2689e-04,  ..., 2.0326e-02,
          7.0130e-03, 1.1093e-02],
         [9.8523e-01, 9.1270e-05, 4.2689e-04,  ..., 9.3846e-01,
          9.7896e-01, 1.6151e-03],
         [4.9248e-03, 9.9973e-01, 9.9872e-01,  ..., 2.0326e-02,
          7.0130e-03, 1.6151e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 218:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:56,275 [Process: 0] Synchronize training processes
2024-08-18 19:48:56,276 [Process: 0] Evaluating...
2024-08-18 19:48:56,277 [Process: 0] EPOCH 218:
2024-08-18 19:48:56,279 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:57,436 [Process: 0] Synchronize training processes
2024-08-18 19:48:57,436 [Process: 0] Evaluating...
2024-08-18 19:48:57,438 [Process: 0] EPOCH 219:
2024-08-18 19:48:57,440 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8571, 0.0082, 0.0262,  ..., 0.9935, 0.9949, 0.0093],
         [0.0496, 0.0075, 0.0182,  ..., 0.0022, 0.0017, 0.0093],
         [0.0413, 0.0075, 0.0209,  ..., 0.0022, 0.0017, 0.0115],
         [0.0520, 0.9768, 0.9346,  ..., 0.0022, 0.0017, 0.9700]],
        [[0.9963, 0.0120, 0.0264,  ..., 0.0203, 0.0088, 0.0014],
         [0.0012, 0.0120, 0.0264,  ..., 0.0203, 0.0088, 0.0014],
         [0.0012, 0.0132, 0.0264,  ..., 0.0261, 0.9736, 0.9958],
         [0.0012, 0.9628, 0.9209,  ..., 0.9334, 0.0088, 0.0014]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.7297e-03, 5.3254e-02, 3.2479e-02,  ..., 7.7926e-03,
          2.7685e-01, 1.3657e-02],
         [6.7297e-03, 3.5330e-02, 1.4771e-02,  ..., 7.7926e-03,
          1.0492e-01, 1.3657e-02],
         [9.7981e-01, 3.5330e-02, 1.4771e-02,  ..., 9.7662e-01,
          1.4208e-01, 9.5903e-01],
         [6.7297e-03, 8.7609e-01, 9.3798e-01,  ..., 7.7926e-03,
          4.7615e-01, 1.3657e-02]],
        [[1.3437e-02, 3.5353e-03, 1.6913e-05,  ..., 4.0951e-03,
          2.1524e-02, 9.9884e-01],
         [1.2264e-02, 3.5353e-03, 1.6913e-05,  ..., 4.0951e-03,
          2.1524e-02, 3.8819e-04],
         [9.6204e-01, 3.5353e-03, 1.6913e-05,  ..., 9.8771e-01,
          9.3511e-01, 3.8819e-04],
         [1.2264e-02, 9.8939e-01, 9.9995e-01,  ..., 4.0951e-03,
          2.1843e-02, 3.8819e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 219:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.8402e-01, 1.7949e-02, 8.9686e-03,  ..., 9.9889e-01,
          9.6431e-01, 3.1121e-02],
         [3.3366e-02, 1.2709e-02, 1.2585e-02,  ..., 3.6974e-04,
          1.1066e-02, 3.0196e-02],
         [3.4924e-01, 1.4256e-02, 8.9686e-03,  ..., 3.6974e-04,
          1.1066e-02, 3.0196e-02],
         [3.3366e-02, 9.5509e-01, 9.6948e-01,  ..., 3.6974e-04,
          1.3560e-02, 9.0849e-01]],
        [[9.9659e-01, 3.2032e-02, 5.6619e-02,  ..., 1.3330e-02,
          3.3516e-03, 7.6290e-03],
         [1.1361e-03, 2.3635e-02, 5.3883e-02,  ..., 1.3330e-02,
          3.3927e-03, 9.4028e-03],
         [1.1361e-03, 2.3635e-02, 4.2305e-02,  ..., 1.5298e-02,
          9.8990e-01, 9.7534e-01],
         [1.1361e-03, 9.2070e-01, 8.4719e-01,  ..., 9.5804e-01,
          3.3516e-03, 7.6290e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 19:48:58,589 [Process: 0] Synchronize training processes
2024-08-18 19:48:58,589 [Process: 0] Evaluating...
2024-08-18 19:48:58,591 [Process: 0] EPOCH 220:
2024-08-18 19:48:58,593 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:48:59,745 [Process: 0] Synchronize training processes
2024-08-18 19:48:59,745 [Process: 0] Evaluating...
2024-08-18 19:48:59,747 [Process: 0] EPOCH 221:
2024-08-18 19:48:59,749 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5790e-02, 2.0114e-03, 1.6024e-03,  ..., 1.6709e-02,
          1.9366e-01, 4.9788e-03],
         [1.5790e-02, 2.0114e-03, 1.6024e-03,  ..., 1.6747e-02,
          1.0104e-01, 4.9788e-03],
         [9.5263e-01, 2.0114e-03, 1.6024e-03,  ..., 9.4983e-01,
          1.6301e-01, 9.8506e-01],
         [1.5790e-02, 9.9397e-01, 9.9519e-01,  ..., 1.6709e-02,
          5.4229e-01, 4.9788e-03]],
        [[5.8512e-03, 4.9285e-04, 2.4849e-02,  ..., 1.2127e-02,
          2.4125e-02, 9.9887e-01],
         [5.8512e-03, 4.9285e-04, 2.1270e-02,  ..., 1.2127e-02,
          2.2501e-02, 3.7830e-04],
         [9.8245e-01, 4.9285e-04, 2.1270e-02,  ..., 9.6362e-01,
          9.2555e-01, 3.7830e-04],
         [5.8512e-03, 9.9852e-01, 9.3261e-01,  ..., 1.2127e-02,
          2.7824e-02, 3.7830e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 220:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3190, 0.0240, 0.0174,  ..., 0.9960, 0.9461, 0.0034],
         [0.6348, 0.0193, 0.0130,  ..., 0.0013, 0.0120, 0.0034],
         [0.0231, 0.0193, 0.0130,  ..., 0.0013, 0.0146, 0.0034],
         [0.0231, 0.9373, 0.9566,  ..., 0.0013, 0.0274, 0.9898]],
        [[0.9883, 0.0213, 0.0140,  ..., 0.0621, 0.0053, 0.0028],
         [0.0039, 0.0213, 0.0262,  ..., 0.0621, 0.0072, 0.0029],
         [0.0039, 0.0267, 0.0140,  ..., 0.1417, 0.9822, 0.9915],
         [0.0039, 0.9308, 0.9457,  ..., 0.7342, 0.0053, 0.0028]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1112e-02, 2.7147e-04, 2.3183e-04,  ..., 1.4769e-02,
          2.2118e-01, 5.3459e-03],
         [2.1054e-02, 2.7147e-04, 2.3183e-04,  ..., 1.4769e-02,
          9.6292e-02, 5.3459e-03],
         [9.3678e-01, 2.7147e-04, 2.3183e-04,  ..., 9.5569e-01,
          3.6706e-01, 9.8396e-01],
         [2.1054e-02, 9.9919e-01, 9.9930e-01,  ..., 1.4769e-02,
          3.1547e-01, 5.3459e-03]],
        [[9.1044e-03, 2.6474e-03, 2.4045e-03,  ..., 1.4905e-02,
          4.2011e-03, 9.9937e-01],
         [9.1044e-03, 2.6474e-03, 2.4045e-03,  ..., 1.4905e-02,
          4.2011e-03, 2.1016e-04],
         [9.7269e-01, 2.6474e-03, 2.4045e-03,  ..., 9.5529e-01,
          9.8740e-01, 2.1016e-04],
         [9.1044e-03, 9.9206e-01, 9.9279e-01,  ..., 1.4905e-02,
          4.2011e-03, 2.1016e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 221:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6480, 0.0249, 0.0300,  ..., 0.9957, 0.9660, 0.0031],
         [0.3136, 0.0249, 0.0300,  ..., 0.0014, 0.0083, 0.0039],
         [0.0192, 0.0249, 0.0382,  ..., 0.0014, 0.0088, 0.0031],
         [0.0192, 0.9254, 0.9018,  ..., 0.0014, 0.0170, 0.9899]],
        [[0.9889, 0.0409, 0.0646,  ..., 0.0208, 0.0066, 0.0011],
         [0.0060, 0.0312, 0.0447,  ..., 0.0170, 0.0072, 0.0011],
         [0.0025, 0.0384, 0.0564,  ..., 0.0244, 0.9796, 0.9967],
         [0.0025, 0.8895, 0.8342,  ..., 0.9377, 0.0066, 0.0011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:00,911 [Process: 0] Synchronize training processes
2024-08-18 19:49:00,912 [Process: 0] Evaluating...
2024-08-18 19:49:00,919 [Process: 0] EPOCH 222:
2024-08-18 19:49:00,921 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0478e-02, 1.1501e-02, 1.5392e-03,  ..., 1.7215e-02,
          1.7486e-01, 1.0101e-02],
         [1.0478e-02, 8.5848e-03, 1.5392e-03,  ..., 1.7215e-02,
          8.0490e-02, 1.0101e-02],
         [9.6857e-01, 8.5848e-03, 1.5392e-03,  ..., 9.4835e-01,
          2.4927e-01, 9.6970e-01],
         [1.0478e-02, 9.7133e-01, 9.9538e-01,  ..., 1.7215e-02,
          4.9539e-01, 1.0101e-02]],
        [[5.3776e-03, 1.8768e-03, 1.0105e-04,  ..., 1.5744e-02,
          1.1365e-02, 9.9960e-01],
         [5.3776e-03, 1.8768e-03, 1.0105e-04,  ..., 1.5744e-02,
          1.1365e-02, 1.3420e-04],
         [9.8347e-01, 1.8768e-03, 1.0105e-04,  ..., 9.5277e-01,
          9.6590e-01, 1.3420e-04],
         [5.7749e-03, 9.9437e-01, 9.9970e-01,  ..., 1.5744e-02,
          1.1365e-02, 1.3420e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 222:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6939e-01, 6.0042e-03, 1.8563e-02,  ..., 9.9796e-01,
          9.4407e-01, 8.2401e-03],
         [8.0338e-03, 6.0042e-03, 1.1333e-02,  ..., 7.7815e-04,
          1.6213e-02, 6.9215e-03],
         [8.0338e-03, 6.0042e-03, 1.1333e-02,  ..., 6.2959e-04,
          2.0970e-02, 6.9215e-03],
         [1.4540e-02, 9.8199e-01, 9.5877e-01,  ..., 6.2959e-04,
          1.8744e-02, 9.7792e-01]],
        [[9.9715e-01, 9.9042e-03, 6.3169e-02,  ..., 3.3009e-02,
          6.2011e-03, 2.7617e-03],
         [9.5073e-04, 9.9042e-03, 1.6141e-01,  ..., 3.3009e-02,
          6.2011e-03, 2.7617e-03],
         [9.5073e-04, 1.0770e-02, 8.3098e-02,  ..., 4.9691e-02,
          9.8140e-01, 9.9171e-01],
         [9.5073e-04, 9.6942e-01, 6.9233e-01,  ..., 8.8429e-01,
          6.2011e-03, 2.7617e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3368e-02, 2.3727e-02, 3.2277e-03,  ..., 5.0457e-03,
          1.4870e-01, 6.4514e-03],
         [1.3368e-02, 4.3486e-02, 3.8347e-03,  ..., 5.0457e-03,
          6.6098e-02, 6.4514e-03],
         [9.5989e-01, 2.3727e-02, 3.2277e-03,  ..., 9.8486e-01,
          1.2461e-01, 9.8065e-01],
         [1.3368e-02, 9.0906e-01, 9.8971e-01,  ..., 5.0457e-03,
          6.6059e-01, 6.4514e-03]],
        [[5.4928e-03, 5.3970e-03, 8.2926e-05,  ..., 1.7766e-02,
          1.4174e-02, 9.9633e-01],
         [5.4928e-03, 5.4057e-03, 8.2926e-05,  ..., 1.7766e-02,
          1.3340e-02, 1.2221e-03],
         [9.8352e-01, 5.3970e-03, 8.2926e-05,  ..., 9.4670e-01,
          9.5915e-01, 1.2221e-03],
         [5.4928e-03, 9.8380e-01, 9.9975e-01,  ..., 1.7766e-02,
          1.3340e-02, 1.2221e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 223:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:02,074 [Process: 0] Synchronize training processes
2024-08-18 19:49:02,074 [Process: 0] Evaluating...
2024-08-18 19:49:02,076 [Process: 0] EPOCH 223:
2024-08-18 19:49:02,078 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:03,229 [Process: 0] Synchronize training processes
2024-08-18 19:49:03,229 [Process: 0] Evaluating...
2024-08-18 19:49:03,231 [Process: 0] EPOCH 224:
2024-08-18 19:49:03,233 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9603, 0.0111, 0.0157,  ..., 0.9948, 0.9662, 0.0106],
         [0.0132, 0.0111, 0.0145,  ..., 0.0017, 0.0103, 0.0106],
         [0.0132, 0.0118, 0.0145,  ..., 0.0017, 0.0132, 0.0106],
         [0.0132, 0.9660, 0.9553,  ..., 0.0017, 0.0103, 0.9683]],
        [[0.9772, 0.1018, 0.0121,  ..., 0.0271, 0.0017, 0.0017],
         [0.0090, 0.0721, 0.0121,  ..., 0.0271, 0.0017, 0.0017],
         [0.0077, 0.0519, 0.0121,  ..., 0.0333, 0.9949, 0.9948],
         [0.0060, 0.7743, 0.9636,  ..., 0.9126, 0.0017, 0.0017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8430e-03, 1.7684e-03, 2.1181e-03,  ..., 1.0750e-02,
          1.3014e-01, 1.8755e-02],
         [7.8430e-03, 1.4731e-03, 2.1181e-03,  ..., 1.0750e-02,
          6.2398e-02, 1.8755e-02],
         [9.7647e-01, 1.4731e-03, 2.1181e-03,  ..., 9.6775e-01,
          8.7661e-02, 9.4373e-01],
         [7.8430e-03, 9.9529e-01, 9.9365e-01,  ..., 1.0750e-02,
          7.1980e-01, 1.8755e-02]],
        [[1.1492e-02, 8.0907e-05, 4.4798e-06,  ..., 1.1932e-02,
          3.1627e-02, 9.9736e-01],
         [1.1492e-02, 1.0787e-04, 4.4798e-06,  ..., 1.1932e-02,
          1.4535e-02, 1.1302e-03],
         [9.6249e-01, 8.0907e-05, 4.4798e-06,  ..., 9.6394e-01,
          9.3930e-01, 7.5261e-04],
         [1.4527e-02, 9.9973e-01, 9.9999e-01,  ..., 1.2199e-02,
          1.4535e-02, 7.5261e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 224:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9914, 0.0468, 0.0153,  ..., 0.9820, 0.6162, 0.0046],
         [0.0029, 0.0287, 0.0156,  ..., 0.0060, 0.0527, 0.0046],
         [0.0029, 0.0353, 0.0153,  ..., 0.0060, 0.0893, 0.0046],
         [0.0029, 0.8892, 0.9539,  ..., 0.0060, 0.2419, 0.9863]],
        [[0.9450, 0.0140, 0.0035,  ..., 0.0168, 0.0055, 0.0020],
         [0.0360, 0.0140, 0.0035,  ..., 0.0151, 0.0055, 0.0020],
         [0.0095, 0.0163, 0.0035,  ..., 0.0151, 0.9834, 0.9940],
         [0.0095, 0.9558, 0.9896,  ..., 0.9530, 0.0055, 0.0020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2193e-03, 2.0595e-04, 1.0693e-02,  ..., 5.8230e-03,
          1.7090e-02, 8.5434e-03],
         [2.2193e-03, 2.0595e-04, 1.0693e-02,  ..., 5.8230e-03,
          1.6532e-02, 8.5434e-03],
         [9.9334e-01, 2.0595e-04, 1.0693e-02,  ..., 9.8253e-01,
          1.6532e-02, 9.7437e-01],
         [2.2193e-03, 9.9938e-01, 9.6792e-01,  ..., 5.8230e-03,
          9.4985e-01, 8.5434e-03]],
        [[4.6281e-03, 8.9461e-04, 3.0925e-03,  ..., 8.0429e-03,
          8.4700e-03, 9.9929e-01],
         [4.6281e-03, 8.9461e-04, 3.0925e-03,  ..., 8.0429e-03,
          8.4700e-03, 2.3666e-04],
         [9.8612e-01, 8.9461e-04, 3.0925e-03,  ..., 9.7587e-01,
          9.7459e-01, 2.3666e-04],
         [4.6281e-03, 9.9732e-01, 9.9072e-01,  ..., 8.0429e-03,
          8.4700e-03, 2.3666e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 225:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:04,385 [Process: 0] Synchronize training processes
2024-08-18 19:49:04,385 [Process: 0] Evaluating...
2024-08-18 19:49:04,387 [Process: 0] EPOCH 225:
2024-08-18 19:49:04,388 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:05,531 [Process: 0] Synchronize training processes
2024-08-18 19:49:05,532 [Process: 0] Evaluating...
2024-08-18 19:49:05,533 [Process: 0] EPOCH 226:
2024-08-18 19:49:05,535 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9501, 0.0027, 0.0062,  ..., 0.9863, 0.6833, 0.0053],
         [0.0166, 0.0027, 0.0054,  ..., 0.0046, 0.0549, 0.0053],
         [0.0166, 0.0027, 0.0054,  ..., 0.0046, 0.1435, 0.0065],
         [0.0166, 0.9919, 0.9830,  ..., 0.0046, 0.1184, 0.9829]],
        [[0.9950, 0.0149, 0.0612,  ..., 0.0175, 0.0013, 0.0053],
         [0.0023, 0.0149, 0.0482,  ..., 0.0249, 0.0013, 0.0053],
         [0.0014, 0.0153, 0.0567,  ..., 0.0175, 0.9961, 0.9841],
         [0.0014, 0.9549, 0.8339,  ..., 0.9402, 0.0013, 0.0053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2951e-02, 6.8528e-04, 1.8779e-03,  ..., 1.9522e-02,
          1.5153e-01, 3.4327e-02],
         [1.2951e-02, 6.8528e-04, 1.8779e-03,  ..., 1.7459e-02,
          7.8891e-02, 2.5337e-02],
         [9.6115e-01, 6.8528e-04, 1.8779e-03,  ..., 9.4556e-01,
          1.4450e-01, 9.1455e-01],
         [1.2951e-02, 9.9794e-01, 9.9437e-01,  ..., 1.7459e-02,
          6.2508e-01, 2.5783e-02]],
        [[4.5095e-03, 2.8073e-04, 1.0634e-04,  ..., 1.5319e-02,
          1.4806e-02, 9.9658e-01],
         [4.5095e-03, 2.8073e-04, 1.0634e-04,  ..., 1.5319e-02,
          1.3471e-02, 1.5013e-03],
         [9.8647e-01, 2.8073e-04, 1.0634e-04,  ..., 9.5404e-01,
          9.5825e-01, 9.6130e-04],
         [4.5095e-03, 9.9916e-01, 9.9968e-01,  ..., 1.5319e-02,
          1.3471e-02, 9.6130e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 226:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6697e-01, 8.0739e-03, 5.9039e-03,  ..., 9.9713e-01,
          5.2835e-01, 3.6634e-03],
         [1.1009e-02, 8.0739e-03, 1.5047e-02,  ..., 9.5580e-04,
          6.7799e-02, 3.6634e-03],
         [1.1009e-02, 1.0073e-02, 5.9039e-03,  ..., 9.5580e-04,
          2.5010e-01, 3.6634e-03],
         [1.1009e-02, 9.7378e-01, 9.7315e-01,  ..., 9.5580e-04,
          1.5375e-01, 9.8901e-01]],
        [[9.5286e-01, 1.3464e-02, 1.2394e-02,  ..., 7.7994e-03,
          9.2841e-04, 1.4256e-03],
         [3.3285e-02, 1.5212e-02, 1.0945e-02,  ..., 7.7994e-03,
          9.2841e-04, 1.4256e-03],
         [6.9258e-03, 1.3464e-02, 1.0945e-02,  ..., 7.9428e-03,
          9.9721e-01, 9.9572e-01],
         [6.9258e-03, 9.5786e-01, 9.6572e-01,  ..., 9.7646e-01,
          9.2841e-04, 1.4256e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:06,676 [Process: 0] Synchronize training processes
2024-08-18 19:49:06,676 [Process: 0] Evaluating...
2024-08-18 19:49:06,678 [Process: 0] EPOCH 227:
2024-08-18 19:49:06,680 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.5691e-03, 6.9254e-01, 1.8195e-03,  ..., 4.1374e-03,
          1.4631e-01, 2.0109e-02],
         [7.5691e-03, 8.4022e-02, 1.8195e-03,  ..., 4.1374e-03,
          6.4799e-02, 2.0109e-02],
         [9.7729e-01, 9.5842e-02, 1.8195e-03,  ..., 9.8759e-01,
          6.5336e-01, 9.3960e-01],
         [7.5691e-03, 1.2760e-01, 9.9454e-01,  ..., 4.1374e-03,
          1.3553e-01, 2.0186e-02]],
        [[1.8362e-02, 2.8578e-05, 1.4804e-04,  ..., 9.2572e-03,
          7.7742e-03, 9.9593e-01],
         [1.6989e-02, 2.8578e-05, 1.4804e-04,  ..., 9.2572e-03,
          7.7742e-03, 1.3580e-03],
         [9.4766e-01, 2.8578e-05, 1.4804e-04,  ..., 9.7223e-01,
          9.7668e-01, 1.3580e-03],
         [1.6989e-02, 9.9991e-01, 9.9956e-01,  ..., 9.2572e-03,
          7.7742e-03, 1.3580e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 227:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9865, 0.0233, 0.0040,  ..., 0.9926, 0.6569, 0.0050],
         [0.0045, 0.0233, 0.0046,  ..., 0.0025, 0.0560, 0.0050],
         [0.0045, 0.0292, 0.0040,  ..., 0.0025, 0.2188, 0.0053],
         [0.0045, 0.9243, 0.9874,  ..., 0.0025, 0.0683, 0.9847]],
        [[0.9670, 0.0205, 0.0057,  ..., 0.0053, 0.0067, 0.0018],
         [0.0229, 0.0134, 0.0057,  ..., 0.0053, 0.0067, 0.0018],
         [0.0050, 0.0140, 0.0057,  ..., 0.0061, 0.9799, 0.9945],
         [0.0050, 0.9521, 0.9830,  ..., 0.9832, 0.0067, 0.0018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5926e-02, 3.6377e-01, 5.0701e-04,  ..., 7.9267e-03,
          2.1053e-01, 9.5469e-03],
         [3.3894e-02, 1.6209e-01, 5.4420e-04,  ..., 7.9267e-03,
          9.8405e-02, 9.5469e-03],
         [8.8823e-01, 1.5938e-01, 5.0701e-04,  ..., 9.7622e-01,
          4.5041e-01, 9.7136e-01],
         [4.1947e-02, 3.1476e-01, 9.9844e-01,  ..., 7.9267e-03,
          2.4066e-01, 9.5469e-03]],
        [[2.5047e-02, 7.3035e-05, 3.4190e-04,  ..., 1.0388e-02,
          1.3143e-02, 9.9557e-01],
         [2.5047e-02, 7.3035e-05, 3.4190e-04,  ..., 1.0388e-02,
          1.3143e-02, 1.4753e-03],
         [9.1839e-01, 7.3035e-05, 3.4190e-04,  ..., 9.6884e-01,
          9.6057e-01, 1.4753e-03],
         [3.1512e-02, 9.9978e-01, 9.9897e-01,  ..., 1.0388e-02,
          1.3143e-02, 1.4753e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 228:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9674, 0.0033, 0.0388,  ..., 0.9946, 0.7598, 0.0120],
         [0.0098, 0.0033, 0.0365,  ..., 0.0018, 0.0399, 0.0112],
         [0.0126, 0.0033, 0.0458,  ..., 0.0018, 0.1456, 0.0115],
         [0.0102, 0.9901, 0.8789,  ..., 0.0018, 0.0547, 0.9653]],
        [[0.9926, 0.0224, 0.0289,  ..., 0.0341, 0.0069, 0.0014],
         [0.0025, 0.0224, 0.0289,  ..., 0.0754, 0.0069, 0.0014],
         [0.0025, 0.0243, 0.0387,  ..., 0.0403, 0.9794, 0.9958],
         [0.0025, 0.9310, 0.9035,  ..., 0.8501, 0.0069, 0.0014]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:07,832 [Process: 0] Synchronize training processes
2024-08-18 19:49:07,832 [Process: 0] Evaluating...
2024-08-18 19:49:07,834 [Process: 0] EPOCH 228:
2024-08-18 19:49:07,836 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:08,987 [Process: 0] Synchronize training processes
2024-08-18 19:49:08,987 [Process: 0] Evaluating...
2024-08-18 19:49:08,989 [Process: 0] EPOCH 229:
2024-08-18 19:49:08,991 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.2667e-03, 1.4819e-01, 5.6489e-04,  ..., 8.0040e-03,
          1.3889e-01, 1.3400e-02],
         [8.2667e-03, 5.7535e-02, 5.6489e-04,  ..., 8.0040e-03,
          8.5049e-02, 1.3400e-02],
         [9.7520e-01, 5.7535e-02, 5.6489e-04,  ..., 9.7599e-01,
          2.6422e-01, 9.5980e-01],
         [8.2667e-03, 7.3674e-01, 9.9831e-01,  ..., 8.0040e-03,
          5.1184e-01, 1.3400e-02]],
        [[2.3575e-02, 8.1408e-04, 7.6716e-05,  ..., 2.1250e-02,
          2.2230e-02, 9.9771e-01],
         [2.3575e-02, 8.1408e-04, 7.6716e-05,  ..., 2.1250e-02,
          1.8843e-02, 7.6321e-04],
         [9.2143e-01, 8.1408e-04, 7.6716e-05,  ..., 9.3270e-01,
          9.3905e-01, 7.6321e-04],
         [3.1416e-02, 9.9756e-01, 9.9977e-01,  ..., 2.4800e-02,
          1.9874e-02, 7.6321e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 229:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9877, 0.0045, 0.0202,  ..., 0.9764, 0.9395, 0.0202],
         [0.0041, 0.0045, 0.0202,  ..., 0.0082, 0.0143, 0.0202],
         [0.0042, 0.0045, 0.0241,  ..., 0.0077, 0.0193, 0.0233],
         [0.0041, 0.9864, 0.9354,  ..., 0.0077, 0.0268, 0.9363]],
        [[0.9629, 0.0345, 0.0051,  ..., 0.0050, 0.0015, 0.0043],
         [0.0172, 0.0252, 0.0051,  ..., 0.0050, 0.0015, 0.0048],
         [0.0100, 0.0252, 0.0052,  ..., 0.0050, 0.9955, 0.9866],
         [0.0100, 0.9152, 0.9845,  ..., 0.9851, 0.0015, 0.0043]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4024e-03, 7.4535e-02, 4.1058e-04,  ..., 6.0741e-03,
          2.3547e-01, 1.9261e-02],
         [9.4024e-03, 9.0420e-01, 4.1058e-04,  ..., 6.0741e-03,
          5.6064e-02, 1.9261e-02],
         [9.7179e-01, 1.0632e-02, 4.1058e-04,  ..., 9.8178e-01,
          5.6064e-02, 9.4222e-01],
         [9.4024e-03, 1.0632e-02, 9.9877e-01,  ..., 6.0741e-03,
          6.5240e-01, 1.9261e-02]],
        [[1.5088e-02, 2.5601e-04, 6.0706e-04,  ..., 1.4122e-02,
          6.2864e-03, 9.9818e-01],
         [1.2437e-02, 2.5601e-04, 6.0706e-04,  ..., 1.4122e-02,
          6.2864e-03, 6.0602e-04],
         [9.6004e-01, 2.5601e-04, 6.0706e-04,  ..., 9.5763e-01,
          9.8114e-01, 6.0602e-04],
         [1.2437e-02, 9.9923e-01, 9.9818e-01,  ..., 1.4122e-02,
          6.2864e-03, 6.0602e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 230:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:10,131 [Process: 0] Synchronize training processes
2024-08-18 19:49:10,132 [Process: 0] Evaluating...
2024-08-18 19:49:10,134 [Process: 0] EPOCH 230:
2024-08-18 19:49:10,135 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:11,279 [Process: 0] Synchronize training processes
2024-08-18 19:49:11,279 [Process: 0] Evaluating...
2024-08-18 19:49:11,281 [Process: 0] EPOCH 231:
2024-08-18 19:49:11,282 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8350e-01, 4.2684e-03, 8.2109e-03,  ..., 9.8858e-01,
          9.8218e-01, 1.1903e-02],
         [1.3678e-01, 3.9310e-03, 8.2109e-03,  ..., 3.6490e-03,
          5.5848e-03, 1.1903e-02],
         [4.0914e-02, 3.9310e-03, 8.2109e-03,  ..., 4.1202e-03,
          5.5848e-03, 1.1903e-02],
         [3.8811e-02, 9.8787e-01, 9.7537e-01,  ..., 3.6490e-03,
          6.6491e-03, 9.6429e-01]],
        [[9.9378e-01, 1.9125e-02, 4.9200e-03,  ..., 4.6827e-03,
          2.1571e-03, 4.4193e-04],
         [2.0729e-03, 1.6950e-02, 4.9200e-03,  ..., 4.6827e-03,
          2.1571e-03, 4.4193e-04],
         [2.0729e-03, 1.6950e-02, 4.9200e-03,  ..., 4.6827e-03,
          9.9353e-01, 9.9867e-01],
         [2.0729e-03, 9.4698e-01, 9.8524e-01,  ..., 9.8595e-01,
          2.1571e-03, 4.4193e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7797e-02, 7.0363e-03, 8.6334e-04,  ..., 2.1353e-02,
          8.5911e-02, 1.3205e-02],
         [1.7797e-02, 7.0363e-03, 8.6334e-04,  ..., 2.1353e-02,
          4.2837e-02, 1.3205e-02],
         [9.4661e-01, 7.0363e-03, 8.6334e-04,  ..., 9.3594e-01,
          4.2837e-02, 9.6039e-01],
         [1.7797e-02, 9.7889e-01, 9.9741e-01,  ..., 2.1353e-02,
          8.2842e-01, 1.3205e-02]],
        [[9.7391e-03, 1.2019e-03, 1.2208e-03,  ..., 2.3761e-02,
          1.0862e-02, 9.9938e-01],
         [9.7391e-03, 1.2019e-03, 1.2208e-03,  ..., 2.3761e-02,
          1.0862e-02, 2.0727e-04],
         [9.7078e-01, 1.2019e-03, 1.2208e-03,  ..., 9.2872e-01,
          9.6741e-01, 2.0727e-04],
         [9.7391e-03, 9.9639e-01, 9.9634e-01,  ..., 2.3761e-02,
          1.0862e-02, 2.0727e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 231:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5867e-01, 8.5007e-03, 6.4653e-03,  ..., 9.9868e-01,
          8.2233e-01, 3.0319e-02],
         [1.3778e-02, 8.5007e-03, 6.4653e-03,  ..., 4.4038e-04,
          2.7600e-02, 5.5288e-02],
         [1.3778e-02, 8.5007e-03, 6.4653e-03,  ..., 4.4038e-04,
          3.2800e-02, 3.6934e-02],
         [1.3778e-02, 9.7450e-01, 9.8060e-01,  ..., 4.4038e-04,
          1.1727e-01, 8.7746e-01]],
        [[9.9573e-01, 6.2797e-02, 8.7105e-03,  ..., 1.6488e-02,
          1.9608e-03, 1.5500e-03],
         [2.0303e-03, 5.1609e-02, 8.7105e-03,  ..., 1.6488e-02,
          1.9608e-03, 1.5500e-03],
         [1.1188e-03, 7.0861e-02, 8.7105e-03,  ..., 2.0939e-02,
          9.9412e-01, 9.9535e-01],
         [1.1188e-03, 8.1473e-01, 9.7387e-01,  ..., 9.4608e-01,
          1.9608e-03, 1.5500e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9261e-03, 1.5127e-03, 4.2558e-03,  ..., 6.7953e-03,
          4.6428e-02, 7.0351e-03],
         [6.9261e-03, 1.5127e-03, 3.7301e-03,  ..., 6.7953e-03,
          2.9994e-02, 7.0351e-03],
         [9.7922e-01, 1.5127e-03, 3.7301e-03,  ..., 9.7961e-01,
          3.7087e-02, 9.7889e-01],
         [6.9261e-03, 9.9546e-01, 9.8828e-01,  ..., 6.7953e-03,
          8.8649e-01, 7.0351e-03]],
        [[1.9771e-03, 1.6748e-03, 1.8560e-04,  ..., 1.6072e-02,
          6.5574e-03, 9.9990e-01],
         [1.9771e-03, 1.6748e-03, 1.8560e-04,  ..., 1.6072e-02,
          6.5574e-03, 3.3966e-05],
         [9.9407e-01, 1.6748e-03, 1.8560e-04,  ..., 9.5178e-01,
          9.8033e-01, 3.3966e-05],
         [1.9771e-03, 9.9498e-01, 9.9944e-01,  ..., 1.6072e-02,
          6.5574e-03, 3.3966e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 232:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:12,430 [Process: 0] Synchronize training processes
2024-08-18 19:49:12,430 [Process: 0] Evaluating...
2024-08-18 19:49:12,436 [Process: 0] EPOCH 232:
2024-08-18 19:49:12,438 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:13,585 [Process: 0] Synchronize training processes
2024-08-18 19:49:13,585 [Process: 0] Evaluating...
2024-08-18 19:49:13,587 [Process: 0] EPOCH 233:
2024-08-18 19:49:13,589 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9827, 0.0105, 0.0022,  ..., 0.9910, 0.5871, 0.0304],
         [0.0058, 0.0105, 0.0022,  ..., 0.0030, 0.0770, 0.8686],
         [0.0058, 0.0105, 0.0022,  ..., 0.0030, 0.1733, 0.0304],
         [0.0058, 0.9684, 0.9935,  ..., 0.0030, 0.1626, 0.0706]],
        [[0.9963, 0.0175, 0.0068,  ..., 0.0367, 0.0032, 0.0028],
         [0.0012, 0.0108, 0.0068,  ..., 0.0260, 0.0032, 0.0028],
         [0.0012, 0.0108, 0.0068,  ..., 0.0326, 0.9904, 0.9915],
         [0.0012, 0.9609, 0.9796,  ..., 0.9047, 0.0032, 0.0028]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.2604e-03, 7.0408e-04, 1.3993e-03,  ..., 1.4644e-02,
          1.2778e-01, 1.4997e-02],
         [8.2604e-03, 7.0408e-04, 1.3993e-03,  ..., 1.4644e-02,
          8.0674e-02, 1.4997e-02],
         [9.7522e-01, 7.0408e-04, 1.3993e-03,  ..., 9.5607e-01,
          5.7529e-01, 9.5501e-01],
         [8.2604e-03, 9.9789e-01, 9.9580e-01,  ..., 1.4644e-02,
          2.1626e-01, 1.4997e-02]],
        [[1.3639e-02, 1.1886e-04, 1.3363e-03,  ..., 3.1472e-02,
          1.1307e-02, 9.9208e-01],
         [1.3639e-02, 1.1886e-04, 1.3363e-03,  ..., 3.1472e-02,
          1.1227e-02, 4.3129e-03],
         [9.5908e-01, 1.1886e-04, 1.3363e-03,  ..., 9.0303e-01,
          9.6624e-01, 1.8042e-03],
         [1.3639e-02, 9.9964e-01, 9.9599e-01,  ..., 3.4029e-02,
          1.1227e-02, 1.8042e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 233:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9932, 0.0061, 0.0044,  ..., 0.9923, 0.9534, 0.0052],
         [0.0023, 0.0067, 0.0044,  ..., 0.0027, 0.0121, 0.9845],
         [0.0023, 0.0061, 0.0044,  ..., 0.0025, 0.0143, 0.0052],
         [0.0023, 0.9811, 0.9868,  ..., 0.0025, 0.0202, 0.0052]],
        [[0.9930, 0.0274, 0.0065,  ..., 0.0050, 0.0037, 0.0016],
         [0.0023, 0.0220, 0.0065,  ..., 0.0050, 0.0037, 0.0016],
         [0.0023, 0.0220, 0.0065,  ..., 0.0053, 0.9889, 0.9951],
         [0.0023, 0.9285, 0.9804,  ..., 0.9846, 0.0037, 0.0016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:14,742 [Process: 0] Synchronize training processes
2024-08-18 19:49:14,742 [Process: 0] Evaluating...
2024-08-18 19:49:14,744 [Process: 0] EPOCH 234:
2024-08-18 19:49:14,745 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1202e-03, 8.6188e-04, 5.6520e-05,  ..., 7.2034e-03,
          1.3671e-01, 1.1607e-02],
         [8.1202e-03, 8.6188e-04, 5.6520e-05,  ..., 7.2034e-03,
          7.4757e-02, 1.1607e-02],
         [9.7564e-01, 8.6188e-04, 5.6520e-05,  ..., 9.7839e-01,
          6.4093e-01, 9.6518e-01],
         [8.1202e-03, 9.9741e-01, 9.9983e-01,  ..., 7.2034e-03,
          1.4760e-01, 1.1607e-02]],
        [[4.6175e-03, 3.0921e-04, 5.7403e-05,  ..., 1.0835e-02,
          9.1056e-03, 9.9885e-01],
         [4.6175e-03, 3.0921e-04, 5.7403e-05,  ..., 1.0835e-02,
          9.1056e-03, 3.8214e-04],
         [9.8615e-01, 3.0921e-04, 5.7403e-05,  ..., 9.6749e-01,
          9.7268e-01, 3.8214e-04],
         [4.6175e-03, 9.9907e-01, 9.9983e-01,  ..., 1.0835e-02,
          9.1056e-03, 3.8214e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 234:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6107e-01, 1.3384e-02, 7.8789e-03,  ..., 9.6950e-01,
          9.7538e-01, 4.2271e-02],
         [1.1835e-02, 1.3384e-02, 7.8789e-03,  ..., 9.8581e-03,
          8.1324e-03, 1.0369e-01],
         [1.5259e-02, 1.3384e-02, 7.8789e-03,  ..., 1.0781e-02,
          8.3599e-03, 4.2271e-02],
         [1.1835e-02, 9.5985e-01, 9.7636e-01,  ..., 9.8581e-03,
          8.1324e-03, 8.1176e-01]],
        [[9.8804e-01, 3.0839e-02, 1.8980e-02,  ..., 9.6764e-03,
          5.0615e-03, 8.8322e-04],
         [3.9879e-03, 3.1376e-02, 1.8980e-02,  ..., 9.6764e-03,
          5.0615e-03, 8.8322e-04],
         [3.9879e-03, 5.5793e-02, 1.8980e-02,  ..., 1.1245e-02,
          9.8482e-01, 9.9735e-01],
         [3.9879e-03, 8.8199e-01, 9.4306e-01,  ..., 9.6940e-01,
          5.0615e-03, 8.8322e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1657e-03, 3.3815e-03, 1.4097e-04,  ..., 2.7292e-02,
          2.1554e-01, 1.3597e-02],
         [8.1657e-03, 3.0655e-03, 1.4097e-04,  ..., 2.3971e-02,
          8.9056e-02, 1.3597e-02],
         [9.7550e-01, 3.0655e-03, 1.4097e-04,  ..., 9.2477e-01,
          2.3958e-01, 9.5921e-01],
         [8.1657e-03, 9.9049e-01, 9.9958e-01,  ..., 2.3971e-02,
          4.5582e-01, 1.3597e-02]],
        [[1.2497e-02, 2.0062e-04, 2.0860e-04,  ..., 1.1806e-02,
          1.7981e-02, 9.9327e-01],
         [1.2497e-02, 2.0062e-04, 1.8419e-04,  ..., 1.1806e-02,
          1.7981e-02, 2.2435e-03],
         [9.6087e-01, 2.0062e-04, 1.8419e-04,  ..., 9.6458e-01,
          9.4606e-01, 2.2435e-03],
         [1.4140e-02, 9.9940e-01, 9.9942e-01,  ..., 1.1806e-02,
          1.7981e-02, 2.2435e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 235:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8466e-01, 1.3464e-03, 2.8762e-03,  ..., 9.9144e-01,
          9.7208e-01, 6.9705e-03],
         [4.7132e-02, 1.5718e-03, 2.8762e-03,  ..., 2.8533e-03,
          9.3070e-03, 6.9705e-03],
         [1.0081e-01, 1.3464e-03, 2.8762e-03,  ..., 2.8533e-03,
          9.3070e-03, 6.9705e-03],
         [6.7405e-02, 9.9574e-01, 9.9137e-01,  ..., 2.8533e-03,
          9.3070e-03, 9.7909e-01]],
        [[9.8236e-01, 1.9284e-02, 5.0855e-03,  ..., 4.5501e-02,
          3.6500e-03, 4.7055e-04],
         [5.6304e-03, 9.1034e-03, 5.0855e-03,  ..., 3.0568e-02,
          3.6500e-03, 4.7055e-04],
         [6.3747e-03, 9.1034e-03, 5.0855e-03,  ..., 3.2154e-02,
          9.8905e-01, 9.9859e-01],
         [5.6304e-03, 9.6251e-01, 9.8474e-01,  ..., 8.9178e-01,
          3.6500e-03, 4.7055e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:15,895 [Process: 0] Synchronize training processes
2024-08-18 19:49:15,896 [Process: 0] Evaluating...
2024-08-18 19:49:15,897 [Process: 0] EPOCH 235:
2024-08-18 19:49:15,899 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:17,049 [Process: 0] Synchronize training processes
2024-08-18 19:49:17,049 [Process: 0] Evaluating...
2024-08-18 19:49:17,051 [Process: 0] EPOCH 236:
2024-08-18 19:49:17,053 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1434e-03, 8.4072e-04, 3.7134e-04,  ..., 4.4910e-03,
          2.8027e-02, 1.3266e-02],
         [7.1434e-03, 8.4072e-04, 3.7134e-04,  ..., 4.4910e-03,
          2.2276e-02, 1.3266e-02],
         [9.7857e-01, 8.4072e-04, 3.7134e-04,  ..., 9.8653e-01,
          2.2276e-02, 9.6020e-01],
         [7.1434e-03, 9.9748e-01, 9.9889e-01,  ..., 4.4910e-03,
          9.2742e-01, 1.3266e-02]],
        [[5.2029e-03, 7.9891e-04, 2.0935e-03,  ..., 1.6823e-02,
          6.7253e-03, 9.9934e-01],
         [5.2029e-03, 7.9891e-04, 2.0935e-03,  ..., 1.6823e-02,
          6.7253e-03, 2.1905e-04],
         [9.8439e-01, 7.9891e-04, 2.0935e-03,  ..., 9.4953e-01,
          9.7982e-01, 2.1905e-04],
         [5.2029e-03, 9.9760e-01, 9.9372e-01,  ..., 1.6823e-02,
          6.7253e-03, 2.1905e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 236:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.0196e-01, 1.1305e-02, 5.3284e-03,  ..., 9.9586e-01,
          9.9139e-01, 4.0812e-03],
         [4.4804e-02, 1.1305e-02, 5.3284e-03,  ..., 1.3795e-03,
          2.7295e-03, 5.9908e-03],
         [3.0843e-01, 1.1677e-02, 5.3284e-03,  ..., 1.3795e-03,
          3.1467e-03, 4.0812e-03],
         [4.4804e-02, 9.6571e-01, 9.8401e-01,  ..., 1.3795e-03,
          2.7295e-03, 9.8585e-01]],
        [[9.9384e-01, 6.2437e-02, 2.4411e-02,  ..., 1.5508e-02,
          7.2600e-04, 1.0771e-03],
         [1.8861e-03, 3.2377e-02, 2.5986e-02,  ..., 1.5508e-02,
          7.2600e-04, 1.0771e-03],
         [2.3909e-03, 3.3736e-02, 2.6054e-02,  ..., 1.9939e-02,
          9.9782e-01, 9.9677e-01],
         [1.8861e-03, 8.7145e-01, 9.2355e-01,  ..., 9.4904e-01,
          7.2600e-04, 1.0771e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9091e-02, 4.8018e-06, 1.4553e-03,  ..., 1.5925e-02,
          1.4316e-01, 1.4093e-02],
         [2.8291e-02, 4.8018e-06, 1.4553e-03,  ..., 1.5925e-02,
          4.7170e-02, 1.4093e-02],
         [9.1433e-01, 4.8018e-06, 1.4553e-03,  ..., 9.5223e-01,
          7.0087e-02, 9.5772e-01],
         [2.8291e-02, 9.9999e-01, 9.9563e-01,  ..., 1.5925e-02,
          7.3959e-01, 1.4093e-02]],
        [[3.4627e-03, 6.7584e-03, 4.7350e-05,  ..., 2.1620e-02,
          4.5084e-03, 9.9961e-01],
         [3.4627e-03, 8.3061e-03, 4.7350e-05,  ..., 2.1620e-02,
          4.5084e-03, 1.3120e-04],
         [9.8961e-01, 6.7584e-03, 4.7350e-05,  ..., 9.2973e-01,
          9.8647e-01, 1.3120e-04],
         [3.4627e-03, 9.7818e-01, 9.9986e-01,  ..., 2.7033e-02,
          4.5084e-03, 1.3120e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 237:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:18,198 [Process: 0] Synchronize training processes
2024-08-18 19:49:18,198 [Process: 0] Evaluating...
2024-08-18 19:49:18,200 [Process: 0] EPOCH 237:
2024-08-18 19:49:18,202 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:19,360 [Process: 0] Synchronize training processes
2024-08-18 19:49:19,360 [Process: 0] Evaluating...
2024-08-18 19:49:19,362 [Process: 0] EPOCH 238:
2024-08-18 19:49:19,364 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0757e-01, 7.1818e-03, 3.4882e-03,  ..., 9.9898e-01,
          9.9799e-01, 7.1666e-03],
         [6.1888e-02, 7.1818e-03, 3.4882e-03,  ..., 3.4556e-04,
          6.7101e-04, 7.1666e-03],
         [5.6865e-01, 7.1818e-03, 3.4882e-03,  ..., 3.3903e-04,
          6.7101e-04, 7.1666e-03],
         [6.1888e-02, 9.7845e-01, 9.8954e-01,  ..., 3.3903e-04,
          6.7101e-04, 9.7850e-01]],
        [[9.9429e-01, 3.3406e-03, 9.8570e-03,  ..., 6.6816e-03,
          2.5183e-03, 3.0227e-03],
         [1.9026e-03, 3.3406e-03, 9.8570e-03,  ..., 6.6816e-03,
          2.5183e-03, 3.0227e-03],
         [1.9026e-03, 3.3406e-03, 1.0939e-02,  ..., 6.7519e-03,
          9.9245e-01, 9.9093e-01],
         [1.9026e-03, 9.8998e-01, 9.6935e-01,  ..., 9.7988e-01,
          2.5183e-03, 3.0227e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.5439e-03, 5.1143e-04, 2.4631e-04,  ..., 7.7571e-03,
          2.8073e-02, 1.3048e-02],
         [6.5439e-03, 5.1143e-04, 2.4631e-04,  ..., 7.7571e-03,
          1.9560e-02, 1.3048e-02],
         [9.8037e-01, 5.1143e-04, 2.4631e-04,  ..., 9.7673e-01,
          2.3754e-02, 9.6086e-01],
         [6.5439e-03, 9.9847e-01, 9.9926e-01,  ..., 7.7571e-03,
          9.2861e-01, 1.3048e-02]],
        [[1.0169e-03, 8.4615e-05, 1.0583e-03,  ..., 1.4625e-02,
          2.2596e-03, 9.8806e-01],
         [1.0169e-03, 8.4615e-05, 1.0583e-03,  ..., 1.4625e-02,
          2.2596e-03, 3.7970e-03],
         [9.9695e-01, 8.4615e-05, 1.0583e-03,  ..., 9.5613e-01,
          9.9322e-01, 3.7970e-03],
         [1.0169e-03, 9.9975e-01, 9.9683e-01,  ..., 1.4625e-02,
          2.2596e-03, 4.3444e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 238:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9107, 0.0058, 0.0071,  ..., 0.9915, 0.9747, 0.0249],
         [0.0230, 0.0058, 0.0077,  ..., 0.0041, 0.0063, 0.0211],
         [0.0430, 0.0067, 0.0071,  ..., 0.0022, 0.0127, 0.0241],
         [0.0234, 0.9816, 0.9781,  ..., 0.0022, 0.0063, 0.9299]],
        [[0.9632, 0.0049, 0.0231,  ..., 0.0143, 0.0020, 0.0032],
         [0.0107, 0.0049, 0.0206,  ..., 0.0143, 0.0020, 0.0032],
         [0.0151, 0.0049, 0.0278,  ..., 0.0329, 0.9941, 0.9903],
         [0.0109, 0.9852, 0.9285,  ..., 0.9386, 0.0020, 0.0032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6662e-02, 1.1112e-03, 8.0070e-04,  ..., 9.2434e-03,
          8.2207e-02, 1.5482e-02],
         [2.5569e-02, 1.1112e-03, 1.0301e-03,  ..., 9.2434e-03,
          5.4221e-02, 1.5482e-02],
         [9.1519e-01, 1.1112e-03, 8.0070e-04,  ..., 9.7227e-01,
          1.0207e-01, 9.5355e-01],
         [3.2579e-02, 9.9667e-01, 9.9737e-01,  ..., 9.2434e-03,
          7.6150e-01, 1.5482e-02]],
        [[2.1380e-03, 5.2018e-05, 1.1496e-04,  ..., 1.3371e-02,
          9.6312e-03, 9.8018e-01],
         [2.1380e-03, 9.1267e-05, 1.1496e-04,  ..., 1.3371e-02,
          9.6312e-03, 6.5366e-03],
         [9.9359e-01, 5.2018e-05, 1.1496e-04,  ..., 9.5989e-01,
          9.7111e-01, 6.5366e-03],
         [2.1380e-03, 9.9980e-01, 9.9966e-01,  ..., 1.3371e-02,
          9.6312e-03, 6.7478e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 239:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:20,507 [Process: 0] Synchronize training processes
2024-08-18 19:49:20,507 [Process: 0] Evaluating...
2024-08-18 19:49:20,509 [Process: 0] EPOCH 239:
2024-08-18 19:49:20,510 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8494e-01, 8.6698e-03, 2.7695e-02,  ..., 9.9126e-01,
          9.5428e-01, 4.7309e-03],
         [5.5915e-02, 8.6698e-03, 2.3796e-02,  ..., 2.9123e-03,
          1.0517e-02, 4.7309e-03],
         [9.6109e-02, 8.6698e-03, 2.9676e-02,  ..., 2.9123e-03,
          2.4688e-02, 4.7309e-03],
         [6.3038e-02, 9.7399e-01, 9.1883e-01,  ..., 2.9123e-03,
          1.0517e-02, 9.8581e-01]],
        [[9.9790e-01, 6.7202e-03, 9.2758e-03,  ..., 2.9509e-02,
          4.3257e-03, 1.0951e-03],
         [6.9861e-04, 6.7202e-03, 9.2758e-03,  ..., 2.4226e-02,
          4.3257e-03, 1.0951e-03],
         [6.9861e-04, 6.7202e-03, 9.2758e-03,  ..., 3.2882e-02,
          9.8702e-01, 9.9671e-01],
         [6.9861e-04, 9.7984e-01, 9.7217e-01,  ..., 9.1338e-01,
          4.3257e-03, 1.0951e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3453e-02, 5.1839e-05, 1.7247e-04,  ..., 1.7763e-02,
          4.7367e-02, 1.7134e-02],
         [1.3453e-02, 5.1839e-05, 1.7247e-04,  ..., 1.7763e-02,
          3.5897e-02, 1.7134e-02],
         [9.5964e-01, 5.1839e-05, 1.7247e-04,  ..., 9.4390e-01,
          5.6436e-02, 9.4584e-01],
         [1.3453e-02, 9.9984e-01, 9.9948e-01,  ..., 2.0576e-02,
          8.6030e-01, 1.9888e-02]],
        [[8.4254e-03, 4.5230e-04, 9.4084e-04,  ..., 1.3895e-02,
          2.8802e-03, 9.9537e-01],
         [8.0914e-03, 1.7644e-03, 9.4084e-04,  ..., 1.3895e-02,
          2.8802e-03, 2.2340e-03],
         [9.7539e-01, 4.5230e-04, 9.4084e-04,  ..., 9.5832e-01,
          9.9136e-01, 1.2000e-03],
         [8.0914e-03, 9.9733e-01, 9.9718e-01,  ..., 1.3895e-02,
          2.8802e-03, 1.2000e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 240:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7275, 0.0066, 0.0231,  ..., 0.9940, 0.9282, 0.0063],
         [0.0402, 0.0066, 0.0197,  ..., 0.0020, 0.0162, 0.0063],
         [0.1719, 0.0066, 0.0215,  ..., 0.0020, 0.0394, 0.0063],
         [0.0604, 0.9802, 0.9357,  ..., 0.0020, 0.0162, 0.9810]],
        [[0.9950, 0.0096, 0.0137,  ..., 0.0028, 0.0077, 0.0013],
         [0.0017, 0.0095, 0.0137,  ..., 0.0028, 0.0077, 0.0013],
         [0.0017, 0.0095, 0.0137,  ..., 0.0028, 0.9768, 0.9962],
         [0.0017, 0.9714, 0.9590,  ..., 0.9917, 0.0077, 0.0013]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:21,652 [Process: 0] Synchronize training processes
2024-08-18 19:49:21,652 [Process: 0] Evaluating...
2024-08-18 19:49:21,654 [Process: 0] EPOCH 240:
2024-08-18 19:49:21,656 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:22,806 [Process: 0] Synchronize training processes
2024-08-18 19:49:22,806 [Process: 0] Evaluating...
2024-08-18 19:49:22,808 [Process: 0] EPOCH 241:
2024-08-18 19:49:22,810 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6476e-02, 6.8389e-05, 1.9201e-04,  ..., 7.0572e-03,
          9.1358e-04, 7.1696e-03],
         [1.6476e-02, 6.8389e-05, 1.9201e-04,  ..., 7.0572e-03,
          9.1358e-04, 7.1696e-03],
         [9.4788e-01, 6.8389e-05, 1.9201e-04,  ..., 9.7883e-01,
          9.1358e-04, 9.7849e-01],
         [1.9173e-02, 9.9979e-01, 9.9942e-01,  ..., 7.0572e-03,
          9.9726e-01, 7.1696e-03]],
        [[5.0183e-03, 5.9170e-03, 2.2941e-05,  ..., 9.8593e-03,
          6.8002e-03, 9.9947e-01],
         [5.0183e-03, 5.9170e-03, 2.2941e-05,  ..., 9.8593e-03,
          6.8002e-03, 1.7508e-04],
         [9.8495e-01, 5.9170e-03, 2.2941e-05,  ..., 9.7042e-01,
          9.7960e-01, 1.7508e-04],
         [5.0183e-03, 9.8225e-01, 9.9993e-01,  ..., 9.8593e-03,
          6.8002e-03, 1.7508e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 241:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8773, 0.0022, 0.0153,  ..., 0.9935, 0.9018, 0.0013],
         [0.0255, 0.0022, 0.0153,  ..., 0.0022, 0.0196, 0.0013],
         [0.0577, 0.0022, 0.0196,  ..., 0.0022, 0.0590, 0.0013],
         [0.0396, 0.9933, 0.9498,  ..., 0.0022, 0.0196, 0.9961]],
        [[0.9937, 0.0083, 0.0086,  ..., 0.0045, 0.0030, 0.0010],
         [0.0021, 0.0083, 0.0086,  ..., 0.0045, 0.0030, 0.0010],
         [0.0021, 0.0106, 0.0086,  ..., 0.0047, 0.9909, 0.9969],
         [0.0021, 0.9727, 0.9741,  ..., 0.9863, 0.0030, 0.0010]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3054e-02, 1.7535e-04, 4.4438e-05,  ..., 1.8502e-02,
          1.3213e-03, 9.9035e-03],
         [1.3054e-02, 1.7535e-04, 4.4438e-05,  ..., 1.8502e-02,
          1.3213e-03, 9.9035e-03],
         [9.6084e-01, 1.7535e-04, 4.4438e-05,  ..., 9.4237e-01,
          1.3213e-03, 9.7029e-01],
         [1.3054e-02, 9.9947e-01, 9.9987e-01,  ..., 2.0627e-02,
          9.9604e-01, 9.9035e-03]],
        [[6.4868e-03, 2.1054e-04, 3.8596e-05,  ..., 5.9657e-03,
          8.9767e-03, 9.9766e-01],
         [5.3102e-03, 2.1054e-04, 3.8596e-05,  ..., 5.9657e-03,
          8.9767e-03, 7.4962e-04],
         [9.8289e-01, 2.1054e-04, 3.8596e-05,  ..., 9.8210e-01,
          9.7307e-01, 7.4962e-04],
         [5.3102e-03, 9.9937e-01, 9.9988e-01,  ..., 5.9657e-03,
          8.9767e-03, 8.4447e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 242:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2066e-01, 7.7788e-03, 6.0856e-03,  ..., 9.9296e-01,
          7.3992e-01, 7.9363e-03],
         [6.6418e-02, 7.7788e-03, 6.0856e-03,  ..., 2.7967e-03,
          2.9346e-02, 7.9363e-03],
         [3.3098e-01, 7.7788e-03, 6.0856e-03,  ..., 2.1208e-03,
          2.0138e-01, 7.9363e-03],
         [8.1936e-02, 9.7666e-01, 9.8174e-01,  ..., 2.1208e-03,
          2.9346e-02, 9.7619e-01]],
        [[9.9884e-01, 3.6219e-03, 2.0072e-02,  ..., 5.2250e-03,
          1.6025e-03, 9.1839e-04],
         [3.8621e-04, 3.6219e-03, 2.0072e-02,  ..., 5.6332e-03,
          1.6025e-03, 9.1839e-04],
         [3.8621e-04, 3.6219e-03, 2.3049e-02,  ..., 5.2250e-03,
          9.9519e-01, 9.9724e-01],
         [3.8621e-04, 9.8913e-01, 9.3681e-01,  ..., 9.8392e-01,
          1.6025e-03, 9.1839e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:23,961 [Process: 0] Synchronize training processes
2024-08-18 19:49:23,961 [Process: 0] Evaluating...
2024-08-18 19:49:23,967 [Process: 0] EPOCH 242:
2024-08-18 19:49:23,969 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:25,119 [Process: 0] Synchronize training processes
2024-08-18 19:49:25,120 [Process: 0] Evaluating...
2024-08-18 19:49:25,121 [Process: 0] EPOCH 243:
2024-08-18 19:49:25,124 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4734e-03, 1.5456e-04, 1.7649e-04,  ..., 5.7545e-03,
          5.1426e-02, 1.5673e-02],
         [9.4734e-03, 1.5456e-04, 1.7649e-04,  ..., 5.7545e-03,
          5.1426e-02, 1.5673e-02],
         [9.7158e-01, 1.5456e-04, 1.7649e-04,  ..., 9.8274e-01,
          6.4690e-01, 9.5242e-01],
         [9.4734e-03, 9.9954e-01, 9.9947e-01,  ..., 5.7545e-03,
          2.5025e-01, 1.6234e-02]],
        [[4.5976e-03, 4.3913e-04, 6.4139e-04,  ..., 1.2958e-02,
          8.7472e-03, 9.9575e-01],
         [4.8845e-03, 4.3913e-04, 6.4139e-04,  ..., 1.2958e-02,
          8.7472e-03, 1.4162e-03],
         [9.8592e-01, 4.3913e-04, 6.4139e-04,  ..., 9.6113e-01,
          9.7376e-01, 1.4162e-03],
         [4.5976e-03, 9.9868e-01, 9.9808e-01,  ..., 1.2958e-02,
          8.7472e-03, 1.4162e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 243:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6012, 0.0040, 0.0053,  ..., 0.9943, 0.9772, 0.0237],
         [0.0782, 0.0040, 0.0053,  ..., 0.0019, 0.0059, 0.0237],
         [0.1754, 0.0040, 0.0053,  ..., 0.0019, 0.0110, 0.0282],
         [0.1452, 0.9879, 0.9840,  ..., 0.0019, 0.0059, 0.9245]],
        [[0.9927, 0.0050, 0.0374,  ..., 0.0109, 0.0015, 0.0016],
         [0.0024, 0.0050, 0.0261,  ..., 0.0109, 0.0015, 0.0016],
         [0.0025, 0.0051, 0.0289,  ..., 0.0151, 0.9954, 0.9951],
         [0.0024, 0.9848, 0.9076,  ..., 0.9632, 0.0015, 0.0016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7008e-03, 1.0139e-03, 9.2857e-05,  ..., 9.3157e-03,
          1.0321e-01, 1.3347e-02],
         [8.7008e-03, 8.3953e-04, 9.2857e-05,  ..., 9.3157e-03,
          6.1111e-02, 1.3347e-02],
         [9.7390e-01, 8.3953e-04, 9.2857e-05,  ..., 9.7205e-01,
          2.5645e-01, 9.5938e-01],
         [8.7008e-03, 9.9731e-01, 9.9972e-01,  ..., 9.3157e-03,
          5.7923e-01, 1.3926e-02]],
        [[2.3119e-03, 9.7333e-04, 4.1890e-04,  ..., 8.8369e-03,
          1.2275e-02, 9.9707e-01],
         [1.9806e-03, 5.0596e-03, 4.1890e-04,  ..., 8.8369e-03,
          1.2275e-02, 1.4781e-03],
         [9.9373e-01, 9.7333e-04, 4.1890e-04,  ..., 9.7349e-01,
          9.6318e-01, 7.2396e-04],
         [1.9806e-03, 9.9299e-01, 9.9874e-01,  ..., 8.8369e-03,
          1.2275e-02, 7.2396e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 244:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:26,271 [Process: 0] Synchronize training processes
2024-08-18 19:49:26,272 [Process: 0] Evaluating...
2024-08-18 19:49:26,274 [Process: 0] EPOCH 244:
2024-08-18 19:49:26,276 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:27,426 [Process: 0] Synchronize training processes
2024-08-18 19:49:27,427 [Process: 0] Evaluating...
2024-08-18 19:49:27,428 [Process: 0] EPOCH 245:
2024-08-18 19:49:27,430 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8309, 0.0106, 0.0110,  ..., 0.9949, 0.9832, 0.0077],
         [0.0410, 0.0106, 0.0110,  ..., 0.0017, 0.0059, 0.0077],
         [0.0735, 0.0106, 0.0110,  ..., 0.0017, 0.0054, 0.0077],
         [0.0547, 0.9682, 0.9670,  ..., 0.0017, 0.0054, 0.9768]],
        [[0.9901, 0.0060, 0.0099,  ..., 0.0049, 0.0043, 0.0011],
         [0.0033, 0.0060, 0.0099,  ..., 0.0049, 0.0043, 0.0011],
         [0.0033, 0.0066, 0.0099,  ..., 0.0049, 0.9871, 0.9967],
         [0.0033, 0.9815, 0.9702,  ..., 0.9854, 0.0043, 0.0011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.7839e-03, 1.2167e-04, 4.2840e-04,  ..., 7.6357e-03,
          3.0174e-02, 2.5171e-02],
         [7.7839e-03, 1.2167e-04, 4.2840e-04,  ..., 7.6357e-03,
          2.7702e-02, 2.5171e-02],
         [9.7665e-01, 1.2167e-04, 4.2840e-04,  ..., 9.7709e-01,
          3.1545e-02, 9.1541e-01],
         [7.7839e-03, 9.9963e-01, 9.9871e-01,  ..., 7.6357e-03,
          9.1058e-01, 3.4252e-02]],
        [[8.0068e-03, 2.2377e-05, 1.5019e-05,  ..., 1.1978e-02,
          7.4091e-03, 9.9814e-01],
         [1.0529e-02, 2.2377e-05, 1.5019e-05,  ..., 1.3344e-02,
          7.4091e-03, 6.1946e-04],
         [9.7346e-01, 2.2377e-05, 1.5019e-05,  ..., 9.6270e-01,
          9.7777e-01, 6.1946e-04],
         [8.0068e-03, 9.9993e-01, 9.9995e-01,  ..., 1.1978e-02,
          7.4091e-03, 6.1946e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 245:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9079e-01, 1.8160e-02, 1.9343e-02,  ..., 9.5610e-01,
          9.7421e-01, 2.5052e-02],
         [2.7911e-02, 2.6467e-02, 1.9343e-02,  ..., 1.7409e-02,
          7.5829e-03, 3.9942e-02],
         [2.7911e-02, 3.1780e-02, 2.3761e-02,  ..., 1.4005e-02,
          7.5829e-03, 3.7057e-02],
         [5.3388e-02, 9.2359e-01, 9.3755e-01,  ..., 1.2481e-02,
          1.0627e-02, 8.9795e-01]],
        [[9.8584e-01, 6.9666e-03, 7.4976e-03,  ..., 9.4423e-03,
          9.5411e-04, 9.1967e-04],
         [4.4846e-03, 6.9666e-03, 7.4976e-03,  ..., 9.4423e-03,
          9.5411e-04, 9.1967e-04],
         [5.1902e-03, 6.9666e-03, 8.7953e-03,  ..., 1.0209e-02,
          9.9714e-01, 9.9724e-01],
         [4.4846e-03, 9.7910e-01, 9.7621e-01,  ..., 9.7091e-01,
          9.5411e-04, 9.1967e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5128e-02, 2.7932e-04, 1.6974e-04,  ..., 1.2851e-02,
          5.4474e-02, 1.5332e-02],
         [1.5071e-02, 4.7684e-04, 1.6974e-04,  ..., 1.2851e-02,
          5.0248e-02, 1.5332e-02],
         [9.5337e-01, 2.7932e-04, 1.6974e-04,  ..., 9.6016e-01,
          1.1537e-01, 9.5267e-01],
         [1.6433e-02, 9.9896e-01, 9.9949e-01,  ..., 1.4134e-02,
          7.7990e-01, 1.6670e-02]],
        [[9.5188e-03, 6.9312e-04, 2.1213e-04,  ..., 1.2274e-02,
          6.7362e-03, 9.9949e-01],
         [8.3376e-03, 1.2880e-03, 2.1213e-04,  ..., 2.2787e-02,
          6.7362e-03, 1.6985e-04],
         [9.7381e-01, 6.9312e-04, 2.1213e-04,  ..., 9.5267e-01,
          9.7979e-01, 1.6985e-04],
         [8.3376e-03, 9.9733e-01, 9.9936e-01,  ..., 1.2274e-02,
          6.7362e-03, 1.6985e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 246:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:28,580 [Process: 0] Synchronize training processes
2024-08-18 19:49:28,581 [Process: 0] Evaluating...
2024-08-18 19:49:28,583 [Process: 0] EPOCH 246:
2024-08-18 19:49:28,584 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:29,735 [Process: 0] Synchronize training processes
2024-08-18 19:49:29,736 [Process: 0] Evaluating...
2024-08-18 19:49:29,737 [Process: 0] EPOCH 247:
2024-08-18 19:49:29,739 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7011e-01, 4.4648e-03, 8.0016e-03,  ..., 9.9916e-01,
          8.6926e-02, 8.9915e-03],
         [3.0555e-02, 4.8084e-03, 8.0016e-03,  ..., 2.7906e-04,
          4.1479e-02, 8.9915e-03],
         [3.0555e-02, 4.4648e-03, 8.6449e-03,  ..., 2.7906e-04,
          6.3643e-02, 8.9915e-03],
         [6.8778e-02, 9.8626e-01, 9.7535e-01,  ..., 2.7906e-04,
          8.0795e-01, 9.7303e-01]],
        [[9.9509e-01, 2.7793e-02, 2.4049e-02,  ..., 1.1413e-02,
          2.6184e-03, 7.4416e-03],
         [1.8226e-03, 2.2901e-02, 2.4049e-02,  ..., 1.1413e-02,
          2.6184e-03, 7.4416e-03],
         [1.5454e-03, 2.6685e-02, 3.4721e-02,  ..., 1.4439e-02,
          9.9214e-01, 9.7768e-01],
         [1.5454e-03, 9.2262e-01, 9.1718e-01,  ..., 9.6274e-01,
          2.6184e-03, 7.4416e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8439e-03, 2.1005e-04, 9.1270e-05,  ..., 7.3984e-03,
          3.0011e-02, 1.2688e-02],
         [7.8439e-03, 2.1005e-04, 9.1270e-05,  ..., 7.3984e-03,
          3.0011e-02, 1.2688e-02],
         [9.7647e-01, 2.1005e-04, 9.1270e-05,  ..., 9.7780e-01,
          9.2114e-02, 9.5918e-01],
         [7.8439e-03, 9.9937e-01, 9.9973e-01,  ..., 7.3984e-03,
          8.4786e-01, 1.5446e-02]],
        [[4.3228e-03, 7.4357e-04, 6.7680e-05,  ..., 2.0205e-02,
          1.1943e-02, 9.8773e-01],
         [5.2687e-03, 1.5298e-04, 6.7680e-05,  ..., 2.3879e-02,
          1.1943e-02, 4.0888e-03],
         [9.8609e-01, 1.5298e-04, 6.7680e-05,  ..., 9.3571e-01,
          9.6417e-01, 4.0888e-03],
         [4.3228e-03, 9.9895e-01, 9.9980e-01,  ..., 2.0205e-02,
          1.1943e-02, 4.0888e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 247:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0487e-01, 1.3024e-02, 2.4528e-03,  ..., 9.8774e-01,
          9.9757e-01, 1.7999e-02],
         [2.6165e-02, 1.3024e-02, 2.4528e-03,  ..., 4.0872e-03,
          8.1045e-04, 4.8584e-02],
         [3.5670e-02, 1.4239e-02, 2.4528e-03,  ..., 4.0872e-03,
          8.1045e-04, 1.8963e-02],
         [3.3297e-02, 9.5971e-01, 9.9264e-01,  ..., 4.0872e-03,
          8.1045e-04, 9.1445e-01]],
        [[9.9212e-01, 4.9963e-03, 2.6054e-02,  ..., 7.9387e-03,
          1.1624e-03, 6.3368e-04],
         [3.3863e-03, 4.9963e-03, 2.6054e-02,  ..., 7.9387e-03,
          1.1624e-03, 6.3368e-04],
         [2.2469e-03, 4.9963e-03, 3.1298e-02,  ..., 7.9387e-03,
          9.9651e-01, 9.9810e-01],
         [2.2469e-03, 9.8501e-01, 9.1659e-01,  ..., 9.7618e-01,
          1.1624e-03, 6.3368e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:30,886 [Process: 0] Synchronize training processes
2024-08-18 19:49:30,887 [Process: 0] Evaluating...
2024-08-18 19:49:30,888 [Process: 0] EPOCH 248:
2024-08-18 19:49:30,890 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2325e-03, 8.4779e-04, 2.3735e-03,  ..., 9.1781e-03,
          9.8428e-02, 2.0305e-02],
         [5.2325e-03, 8.4779e-04, 2.3735e-03,  ..., 9.1781e-03,
          6.3219e-02, 2.0305e-02],
         [9.8430e-01, 8.4779e-04, 2.3735e-03,  ..., 9.7201e-01,
          3.8435e-01, 9.3462e-01],
         [5.2325e-03, 9.9746e-01, 9.9288e-01,  ..., 9.6353e-03,
          4.5401e-01, 2.4773e-02]],
        [[5.6582e-03, 1.8371e-04, 7.1157e-04,  ..., 9.1010e-03,
          3.5084e-03, 9.9845e-01],
         [5.6582e-03, 6.1302e-04, 7.1157e-04,  ..., 9.1010e-03,
          3.5084e-03, 5.1514e-04],
         [9.8303e-01, 1.8371e-04, 7.1157e-04,  ..., 9.7270e-01,
          9.8947e-01, 5.1514e-04],
         [5.6582e-03, 9.9902e-01, 9.9787e-01,  ..., 9.1010e-03,
          3.5084e-03, 5.1514e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 248:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2461e-01, 1.5777e-03, 1.9789e-02,  ..., 9.9703e-01,
          9.9116e-01, 5.8374e-02],
         [2.1834e-02, 1.5777e-03, 1.9789e-02,  ..., 9.8964e-04,
          2.8941e-03, 2.0524e-01],
         [2.5167e-02, 1.5777e-03, 2.1146e-02,  ..., 9.8964e-04,
          2.8941e-03, 6.0896e-02],
         [2.8391e-02, 9.9527e-01, 9.3928e-01,  ..., 9.8964e-04,
          3.0506e-03, 6.7549e-01]],
        [[9.9904e-01, 6.6876e-03, 1.7985e-03,  ..., 1.1216e-02,
          1.0366e-03, 2.3605e-03],
         [3.1944e-04, 6.6876e-03, 1.7985e-03,  ..., 1.1216e-02,
          1.0366e-03, 2.3605e-03],
         [3.1944e-04, 6.6876e-03, 1.7985e-03,  ..., 1.1216e-02,
          9.9689e-01, 9.9292e-01],
         [3.1944e-04, 9.7994e-01, 9.9460e-01,  ..., 9.6635e-01,
          1.0366e-03, 2.3605e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.3309e-03, 8.9912e-05, 4.0409e-06,  ..., 1.2143e-02,
          4.6729e-02, 7.9928e-03],
         [6.3309e-03, 8.9912e-05, 4.0409e-06,  ..., 1.2143e-02,
          4.6729e-02, 7.9928e-03],
         [9.8101e-01, 8.9912e-05, 4.0409e-06,  ..., 9.6346e-01,
          2.6378e-01, 9.7602e-01],
         [6.3309e-03, 9.9973e-01, 9.9999e-01,  ..., 1.2257e-02,
          6.4277e-01, 7.9928e-03]],
        [[6.1350e-02, 1.1397e-03, 1.6158e-03,  ..., 3.4584e-02,
          7.7932e-03, 9.9867e-01],
         [2.2589e-02, 1.5533e-03, 1.5494e-03,  ..., 3.1321e-02,
          7.7932e-03, 4.4494e-04],
         [8.9347e-01, 1.1397e-03, 1.5494e-03,  ..., 9.0513e-01,
          9.7662e-01, 4.4494e-04],
         [2.2589e-02, 9.9617e-01, 9.9529e-01,  ..., 2.8960e-02,
          7.7932e-03, 4.4494e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 249:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4816e-01, 1.5171e-02, 3.6924e-02,  ..., 9.9872e-01,
          8.4914e-01, 5.2158e-02],
         [6.6450e-02, 1.6574e-02, 2.5849e-02,  ..., 4.2697e-04,
          3.0362e-02, 6.6196e-01],
         [5.1894e-01, 1.5171e-02, 2.6966e-02,  ..., 4.2697e-04,
          9.0137e-02, 5.5249e-02],
         [6.6450e-02, 9.5308e-01, 9.1026e-01,  ..., 4.2697e-04,
          3.0362e-02, 2.3063e-01]],
        [[9.9641e-01, 1.7299e-02, 1.1163e-02,  ..., 9.1020e-02,
          1.1642e-03, 3.4852e-03],
         [1.1952e-03, 1.7299e-02, 1.9427e-02,  ..., 4.1767e-02,
          1.1642e-03, 3.4852e-03],
         [1.1952e-03, 2.0136e-02, 1.2263e-02,  ..., 6.1739e-02,
          9.9651e-01, 9.8954e-01],
         [1.1952e-03, 9.4527e-01, 9.5715e-01,  ..., 8.0547e-01,
          1.1642e-03, 3.4852e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:32,036 [Process: 0] Synchronize training processes
2024-08-18 19:49:32,036 [Process: 0] Evaluating...
2024-08-18 19:49:32,038 [Process: 0] EPOCH 249:
2024-08-18 19:49:32,040 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:33,188 [Process: 0] Synchronize training processes
2024-08-18 19:49:33,188 [Process: 0] Evaluating...
2024-08-18 19:49:33,190 [Process: 0] EPOCH 250:
2024-08-18 19:49:33,192 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9340e-03, 8.9957e-05, 1.1006e-04,  ..., 2.8022e-03,
          5.6033e-02, 1.5237e-02],
         [8.9340e-03, 8.9957e-05, 1.1006e-04,  ..., 2.8022e-03,
          4.3577e-02, 1.5237e-02],
         [9.7320e-01, 8.9957e-05, 1.1006e-04,  ..., 9.9159e-01,
          1.2193e-01, 9.5369e-01],
         [8.9340e-03, 9.9973e-01, 9.9967e-01,  ..., 2.8022e-03,
          7.7846e-01, 1.5839e-02]],
        [[2.2309e-02, 8.8252e-05, 3.5631e-05,  ..., 8.6122e-03,
          4.8128e-03, 9.9751e-01],
         [1.2481e-02, 8.8252e-05, 3.5631e-05,  ..., 8.6122e-03,
          4.8128e-03, 8.2896e-04],
         [9.5273e-01, 8.8252e-05, 3.5631e-05,  ..., 9.7416e-01,
          9.8556e-01, 8.2896e-04],
         [1.2481e-02, 9.9974e-01, 9.9989e-01,  ..., 8.6122e-03,
          4.8128e-03, 8.2896e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 250:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.0321e-01, 1.8568e-03, 1.1634e-02,  ..., 9.9550e-01,
          9.6752e-01, 2.8019e-02],
         [6.3593e-02, 1.8568e-03, 1.1634e-02,  ..., 1.5002e-03,
          8.8511e-03, 4.4889e-02],
         [1.5477e-01, 1.8568e-03, 1.1634e-02,  ..., 1.5002e-03,
          9.4581e-03, 2.8019e-02],
         [7.8428e-02, 9.9443e-01, 9.6510e-01,  ..., 1.5002e-03,
          1.4171e-02, 8.9907e-01]],
        [[9.9016e-01, 8.6370e-03, 4.5903e-03,  ..., 1.3238e-02,
          5.9539e-03, 9.4005e-04],
         [3.2785e-03, 8.6370e-03, 4.5903e-03,  ..., 1.3238e-02,
          5.9539e-03, 9.4005e-04],
         [3.2785e-03, 8.6370e-03, 4.5903e-03,  ..., 1.3501e-02,
          9.8214e-01, 9.9718e-01],
         [3.2785e-03, 9.7409e-01, 9.8623e-01,  ..., 9.6002e-01,
          5.9539e-03, 9.4005e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6618e-02, 2.1376e-02, 1.1754e-03,  ..., 3.9785e-03,
          1.0179e-01, 3.3513e-03],
         [1.3555e-02, 2.1376e-02, 1.1754e-03,  ..., 3.9785e-03,
          8.2513e-02, 3.3513e-03],
         [1.3555e-02, 2.1376e-02, 1.1754e-03,  ..., 9.8806e-01,
          4.2638e-01, 3.3513e-03],
         [9.5627e-01, 9.3587e-01, 9.9647e-01,  ..., 3.9785e-03,
          3.8933e-01, 9.8995e-01]],
        [[4.6082e-02, 1.4095e-04, 7.5015e-06,  ..., 1.2473e-02,
          3.9083e-03, 9.9916e-01],
         [2.3940e-02, 1.4095e-04, 7.5015e-06,  ..., 1.2473e-02,
          3.9083e-03, 2.8081e-04],
         [9.0604e-01, 1.4095e-04, 7.5015e-06,  ..., 9.6258e-01,
          9.8828e-01, 2.8081e-04],
         [2.3940e-02, 9.9958e-01, 9.9998e-01,  ..., 1.2473e-02,
          3.9083e-03, 2.8081e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 251:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:34,344 [Process: 0] Synchronize training processes
2024-08-18 19:49:34,345 [Process: 0] Evaluating...
2024-08-18 19:49:34,346 [Process: 0] EPOCH 251:
2024-08-18 19:49:34,348 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:35,498 [Process: 0] Synchronize training processes
2024-08-18 19:49:35,499 [Process: 0] Evaluating...
2024-08-18 19:49:35,505 [Process: 0] EPOCH 252:
2024-08-18 19:49:35,507 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9269, 0.0173, 0.0022,  ..., 0.9937, 0.1611, 0.0067],
         [0.0153, 0.0112, 0.0022,  ..., 0.0021, 0.0618, 0.0073],
         [0.0424, 0.0112, 0.0022,  ..., 0.0021, 0.1244, 0.0069],
         [0.0153, 0.9603, 0.9935,  ..., 0.0021, 0.6527, 0.9791]],
        [[0.9753, 0.0167, 0.0144,  ..., 0.0232, 0.0039, 0.0033],
         [0.0074, 0.0167, 0.0144,  ..., 0.0232, 0.0039, 0.0033],
         [0.0098, 0.0167, 0.0183,  ..., 0.0321, 0.9884, 0.9900],
         [0.0074, 0.9500, 0.9528,  ..., 0.9214, 0.0039, 0.0033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.0629e-03, 3.0118e-03, 2.3715e-02,  ..., 5.6242e-03,
          1.7331e-02, 1.7451e-02],
         [8.0629e-03, 3.0118e-03, 2.3715e-02,  ..., 5.6242e-03,
          1.7331e-02, 1.7451e-02],
         [8.0629e-03, 3.0118e-03, 2.6869e-02,  ..., 9.8313e-01,
          9.4656e-01, 1.7451e-02],
         [9.7581e-01, 9.9096e-01, 9.2570e-01,  ..., 5.6242e-03,
          1.8781e-02, 9.4765e-01]],
        [[6.0558e-02, 2.5232e-04, 6.2279e-05,  ..., 2.6445e-02,
          2.2163e-03, 9.9983e-01],
         [2.5922e-02, 2.0778e-04, 6.2279e-05,  ..., 2.2267e-02,
          2.2163e-03, 5.7396e-05],
         [8.8760e-01, 2.0778e-04, 6.2279e-05,  ..., 9.2902e-01,
          9.9335e-01, 5.7396e-05],
         [2.5922e-02, 9.9933e-01, 9.9981e-01,  ..., 2.2267e-02,
          2.2163e-03, 5.7396e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 252:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0159, 0.0153, 0.0137,  ..., 0.9940, 0.9837, 0.0043],
         [0.0127, 0.0092, 0.0240,  ..., 0.0020, 0.0049, 0.0043],
         [0.9587, 0.0092, 0.0145,  ..., 0.0020, 0.0064, 0.0043],
         [0.0127, 0.9663, 0.9478,  ..., 0.0020, 0.0049, 0.9872]],
        [[0.9917, 0.0049, 0.0082,  ..., 0.0064, 0.0475, 0.0023],
         [0.0028, 0.0049, 0.0082,  ..., 0.0064, 0.0475, 0.0023],
         [0.0028, 0.0049, 0.0088,  ..., 0.0064, 0.8287, 0.9930],
         [0.0028, 0.9854, 0.9748,  ..., 0.9809, 0.0764, 0.0023]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7485e-02, 7.9600e-04, 8.9248e-04,  ..., 7.8237e-03,
          4.8354e-02, 1.1799e-01],
         [1.7485e-02, 7.9600e-04, 8.9248e-04,  ..., 7.8237e-03,
          4.8354e-02, 4.2663e-02],
         [9.4690e-01, 7.9600e-04, 8.9248e-04,  ..., 9.7653e-01,
          1.3055e-01, 4.2663e-02],
         [1.8125e-02, 9.9761e-01, 9.9732e-01,  ..., 7.8237e-03,
          7.7274e-01, 7.9668e-01]],
        [[3.1657e-02, 8.4392e-05, 3.9128e-04,  ..., 7.4788e-03,
          4.8556e-03, 9.9752e-01],
         [2.6408e-02, 8.4392e-05, 3.9128e-04,  ..., 7.4788e-03,
          4.8556e-03, 8.0826e-04],
         [9.1376e-01, 8.4392e-05, 3.9128e-04,  ..., 9.7756e-01,
          9.8543e-01, 8.0826e-04],
         [2.8177e-02, 9.9975e-01, 9.9883e-01,  ..., 7.4788e-03,
          4.8556e-03, 8.6270e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:36,654 [Process: 0] Synchronize training processes
2024-08-18 19:49:36,655 [Process: 0] Evaluating...
2024-08-18 19:49:36,656 [Process: 0] EPOCH 253:
2024-08-18 19:49:36,658 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:37,811 [Process: 0] Synchronize training processes
2024-08-18 19:49:37,812 [Process: 0] Evaluating...
2024-08-18 19:49:37,814 [Process: 0] EPOCH 254:
2024-08-18 19:49:37,815 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 253:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6930e-02, 1.9556e-03, 6.5116e-03,  ..., 9.9969e-01,
          9.9918e-01, 1.6305e-02],
         [2.5991e-02, 1.9556e-03, 4.5747e-03,  ..., 1.0344e-04,
          2.7218e-04, 1.6305e-02],
         [8.6109e-01, 1.9556e-03, 4.5747e-03,  ..., 1.0344e-04,
          2.7218e-04, 2.0517e-02],
         [2.5991e-02, 9.9413e-01, 9.8434e-01,  ..., 1.0344e-04,
          2.7218e-04, 9.4687e-01]],
        [[9.9886e-01, 4.2632e-03, 3.6870e-02,  ..., 1.2413e-02,
          1.3106e-02, 1.8986e-03],
         [3.8057e-04, 4.2632e-03, 3.9014e-02,  ..., 1.2413e-02,
          1.3106e-02, 1.8986e-03],
         [3.8057e-04, 4.2632e-03, 6.9763e-02,  ..., 1.3802e-02,
          9.6068e-01, 9.9430e-01],
         [3.8057e-04, 9.8721e-01, 8.5435e-01,  ..., 9.6137e-01,
          1.3106e-02, 1.8986e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2914e-03, 5.9029e-03, 1.2971e-01,  ..., 2.9930e-02,
          9.0472e-03, 3.2447e-03],
         [9.2914e-03, 5.9029e-03, 8.4739e-02,  ..., 2.8412e-02,
          9.0472e-03, 3.2447e-03],
         [9.7213e-01, 9.8229e-01, 3.2085e-01,  ..., 9.0748e-01,
          9.7286e-01, 9.9027e-01],
         [9.2914e-03, 5.9029e-03, 4.6470e-01,  ..., 3.4180e-02,
          9.0472e-03, 3.2447e-03]],
        [[3.5487e-03, 2.1154e-04, 4.1982e-04,  ..., 6.9718e-03,
          7.6918e-02, 9.9677e-01],
         [3.5487e-03, 2.1154e-04, 5.3335e-04,  ..., 6.9718e-03,
          3.4791e-02, 1.0775e-03],
         [9.8935e-01, 2.1154e-04, 4.1982e-04,  ..., 9.7908e-01,
          8.4732e-01, 1.0775e-03],
         [3.5487e-03, 9.9937e-01, 9.9863e-01,  ..., 6.9718e-03,
          4.0975e-02, 1.0775e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 254:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4099e-01, 1.8307e-03, 3.8731e-03,  ..., 9.9519e-01,
          8.8834e-01, 1.8660e-02],
         [2.5513e-01, 1.8307e-03, 3.8731e-03,  ..., 1.6780e-03,
          3.0858e-02, 1.9529e-01],
         [1.3281e-01, 1.8307e-03, 4.1244e-03,  ..., 1.5660e-03,
          3.0858e-02, 1.8660e-02],
         [7.1060e-02, 9.9451e-01, 9.8813e-01,  ..., 1.5660e-03,
          4.9945e-02, 7.6739e-01]],
        [[9.7657e-01, 3.2495e-02, 1.9467e-01,  ..., 5.7949e-03,
          5.0440e-03, 6.6178e-04],
         [1.3455e-02, 5.1825e-02, 1.5157e-01,  ..., 5.7949e-03,
          5.0440e-03, 6.6178e-04],
         [4.9888e-03, 4.0269e-02, 2.4196e-01,  ..., 6.7132e-03,
          9.8487e-01, 9.9801e-01],
         [4.9888e-03, 8.7541e-01, 4.1180e-01,  ..., 9.8170e-01,
          5.0440e-03, 6.6178e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:38,967 [Process: 0] Synchronize training processes
2024-08-18 19:49:38,967 [Process: 0] Evaluating...
2024-08-18 19:49:38,969 [Process: 0] EPOCH 255:
2024-08-18 19:49:38,971 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1864e-02, 4.0305e-02, 9.7404e-02,  ..., 1.0950e-01,
          1.5136e-02, 1.1269e-02],
         [1.1864e-02, 2.3920e-02, 7.1169e-02,  ..., 7.6873e-02,
          1.5136e-02, 1.1269e-02],
         [9.6087e-01, 2.8743e-02, 1.7316e-01,  ..., 6.4169e-01,
          9.5454e-01, 9.6614e-01],
         [1.5401e-02, 9.0703e-01, 6.5826e-01,  ..., 1.7193e-01,
          1.5192e-02, 1.1320e-02]],
        [[1.8718e-02, 5.7855e-05, 1.9980e-04,  ..., 1.5493e-02,
          5.0911e-03, 9.4555e-01],
         [1.8718e-02, 5.7855e-05, 1.9980e-04,  ..., 1.5493e-02,
          5.0911e-03, 3.4558e-02],
         [9.3622e-01, 5.7855e-05, 1.9980e-04,  ..., 9.5352e-01,
          9.8473e-01, 9.8367e-03],
         [2.6348e-02, 9.9983e-01, 9.9940e-01,  ..., 1.5493e-02,
          5.0911e-03, 1.0052e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 255:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8456e-03, 1.0778e-03, 2.1620e-03,  ..., 9.9507e-01,
          9.4969e-01, 2.5717e-02],
         [9.9103e-01, 1.0778e-03, 2.1620e-03,  ..., 1.6434e-03,
          1.4974e-02, 2.5717e-02],
         [3.2343e-03, 1.0778e-03, 2.1620e-03,  ..., 1.6434e-03,
          1.5593e-02, 4.8005e-02],
         [1.8922e-03, 9.9677e-01, 9.9351e-01,  ..., 1.6434e-03,
          1.9747e-02, 9.0056e-01]],
        [[9.8807e-01, 4.6036e-02, 2.1691e-01,  ..., 1.1167e-02,
          2.8446e-02, 9.1086e-04],
         [4.1458e-03, 2.7898e-01, 2.0669e-01,  ..., 1.1167e-02,
          2.8446e-02, 9.1086e-04],
         [3.8912e-03, 5.9287e-02, 1.3896e-01,  ..., 1.3799e-02,
          9.1241e-01, 9.9727e-01],
         [3.8912e-03, 6.1569e-01, 4.3744e-01,  ..., 9.6387e-01,
          3.0694e-02, 9.1086e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5017e-02, 1.8230e-02, 1.5654e-01,  ..., 4.8530e-02,
          3.6221e-02, 9.4768e-03],
         [1.5017e-02, 1.8230e-02, 2.5253e-01,  ..., 5.1609e-02,
          3.5548e-02, 9.4768e-03],
         [9.5183e-01, 2.1141e-02, 2.7466e-01,  ..., 8.2763e-01,
          8.7164e-01, 9.7157e-01],
         [1.8139e-02, 9.4240e-01, 3.1628e-01,  ..., 7.2233e-02,
          5.6587e-02, 9.4768e-03]],
        [[3.9221e-03, 7.3481e-06, 6.3808e-06,  ..., 1.7854e-02,
          9.3231e-03, 9.9974e-01],
         [3.9221e-03, 7.3481e-06, 6.3808e-06,  ..., 3.5141e-02,
          9.3231e-03, 8.6762e-05],
         [9.8823e-01, 7.3481e-06, 6.3808e-06,  ..., 9.2915e-01,
          9.7203e-01, 8.6762e-05],
         [3.9221e-03, 9.9998e-01, 9.9998e-01,  ..., 1.7854e-02,
          9.3231e-03, 8.6762e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 256:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3087e-02, 1.0318e-02, 9.2232e-04,  ..., 9.9722e-01,
          9.6431e-01, 1.0668e-02],
         [9.7423e-01, 1.0318e-02, 1.1588e-03,  ..., 9.2800e-04,
          1.0623e-02, 1.0668e-02],
         [5.8545e-03, 1.4390e-02, 9.2232e-04,  ..., 9.2800e-04,
          1.0623e-02, 1.4579e-02],
         [6.8263e-03, 9.6497e-01, 9.9700e-01,  ..., 9.2800e-04,
          1.4447e-02, 9.6409e-01]],
        [[9.9463e-01, 8.5332e-03, 1.4505e-02,  ..., 5.7604e-03,
          6.2734e-03, 4.3772e-03],
         [1.7898e-03, 8.5332e-03, 1.4505e-02,  ..., 5.7604e-03,
          2.0274e-02, 1.1175e-02],
         [1.7898e-03, 8.5332e-03, 2.7492e-02,  ..., 6.0374e-03,
          9.6718e-01, 9.8007e-01],
         [1.7898e-03, 9.7440e-01, 9.4350e-01,  ..., 9.8244e-01,
          6.2734e-03, 4.3772e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:40,121 [Process: 0] Synchronize training processes
2024-08-18 19:49:40,121 [Process: 0] Evaluating...
2024-08-18 19:49:40,123 [Process: 0] EPOCH 256:
2024-08-18 19:49:40,125 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:41,272 [Process: 0] Synchronize training processes
2024-08-18 19:49:41,272 [Process: 0] Evaluating...
2024-08-18 19:49:41,274 [Process: 0] EPOCH 257:
2024-08-18 19:49:41,276 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7331e-02, 3.4623e-02, 1.1354e-01,  ..., 8.1425e-03,
          7.0076e-02, 5.5635e-02],
         [2.1418e-02, 3.1514e-02, 7.9053e-02,  ..., 8.1425e-03,
          6.8913e-02, 6.9538e-02],
         [9.4392e-01, 4.7633e-02, 2.4843e-01,  ..., 9.7557e-01,
          2.7495e-01, 8.0559e-01],
         [1.7331e-02, 8.8623e-01, 5.5897e-01,  ..., 8.1425e-03,
          5.8606e-01, 6.9238e-02]],
        [[1.6649e-03, 2.9489e-04, 1.2653e-06,  ..., 2.0464e-02,
          6.6951e-03, 9.9986e-01],
         [1.6649e-03, 2.9489e-04, 1.2653e-06,  ..., 2.5599e-02,
          6.6951e-03, 4.8089e-05],
         [9.9501e-01, 2.9489e-04, 1.2653e-06,  ..., 9.3640e-01,
          9.7991e-01, 4.8089e-05],
         [1.6649e-03, 9.9912e-01, 1.0000e+00,  ..., 1.7536e-02,
          6.6951e-03, 4.8089e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 257:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0539, 0.0130, 0.0060,  ..., 0.9924, 0.8780, 0.0150],
         [0.8484, 0.0095, 0.0060,  ..., 0.0025, 0.0319, 0.0142],
         [0.0543, 0.0108, 0.0060,  ..., 0.0025, 0.0295, 0.0145],
         [0.0434, 0.9667, 0.9821,  ..., 0.0025, 0.0606, 0.9563]],
        [[0.9949, 0.1389, 0.0225,  ..., 0.0049, 0.0014, 0.0047],
         [0.0017, 0.3261, 0.0400,  ..., 0.0058, 0.0014, 0.0047],
         [0.0017, 0.2089, 0.0350,  ..., 0.0049, 0.9958, 0.9859],
         [0.0017, 0.3261, 0.9025,  ..., 0.9844, 0.0014, 0.0047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0588e-02, 9.9949e-02, 1.7925e-01,  ..., 1.4247e-02,
          1.0658e-01, 1.3108e-02],
         [1.0588e-02, 7.7473e-02, 8.7830e-02,  ..., 1.5603e-02,
          1.1035e-01, 1.3108e-02],
         [9.6824e-01, 1.6609e-01, 2.4105e-01,  ..., 9.5582e-01,
          5.9475e-01, 9.5770e-01],
         [1.0588e-02, 6.5649e-01, 4.9187e-01,  ..., 1.4330e-02,
          1.8832e-01, 1.6087e-02]],
        [[1.0287e-04, 4.7840e-04, 2.0184e-06,  ..., 1.4577e-02,
          4.4851e-03, 9.9998e-01],
         [1.0287e-04, 4.7840e-04, 2.0184e-06,  ..., 3.3968e-02,
          4.4851e-03, 5.9099e-06],
         [9.9969e-01, 4.7840e-04, 2.0184e-06,  ..., 9.3740e-01,
          9.8654e-01, 5.9099e-06],
         [1.0287e-04, 9.9856e-01, 9.9999e-01,  ..., 1.4053e-02,
          4.4851e-03, 5.9099e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 258:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:42,420 [Process: 0] Synchronize training processes
2024-08-18 19:49:42,420 [Process: 0] Evaluating...
2024-08-18 19:49:42,422 [Process: 0] EPOCH 258:
2024-08-18 19:49:42,424 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:43,558 [Process: 0] Synchronize training processes
2024-08-18 19:49:43,558 [Process: 0] Evaluating...
2024-08-18 19:49:43,560 [Process: 0] EPOCH 259:
2024-08-18 19:49:43,562 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0266, 0.0181, 0.0054,  ..., 0.9949, 0.9472, 0.0107],
         [0.9008, 0.0181, 0.0068,  ..., 0.0017, 0.0154, 0.0143],
         [0.0495, 0.0219, 0.0054,  ..., 0.0017, 0.0154, 0.0115],
         [0.0232, 0.9420, 0.9824,  ..., 0.0017, 0.0221, 0.9636]],
        [[0.9937, 0.0093, 0.0075,  ..., 0.0143, 0.0037, 0.0034],
         [0.0021, 0.0166, 0.0150,  ..., 0.0143, 0.0038, 0.0034],
         [0.0021, 0.0093, 0.0075,  ..., 0.0177, 0.9888, 0.9899],
         [0.0021, 0.9648, 0.9701,  ..., 0.9537, 0.0037, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4031e-02, 1.8139e-01, 1.1233e-01,  ..., 1.9818e-02,
          1.5149e-01, 2.1661e-02],
         [3.1634e-02, 1.4167e-01, 8.4883e-02,  ..., 1.9818e-02,
          1.0326e-01, 2.1661e-02],
         [9.1405e-01, 1.8975e-01, 2.1690e-01,  ..., 9.3191e-01,
          5.2586e-01, 9.2226e-01],
         [3.0286e-02, 4.8719e-01, 5.8589e-01,  ..., 2.8455e-02,
          2.1939e-01, 3.4418e-02]],
        [[7.7388e-07, 2.8359e-05, 3.2076e-04,  ..., 8.9317e-03,
          8.5904e-03, 9.9682e-01],
         [7.7388e-07, 9.9796e-05, 1.3270e-03,  ..., 8.9317e-03,
          8.5904e-03, 1.0523e-03],
         [1.0000e+00, 2.8359e-05, 3.2076e-04,  ..., 9.7320e-01,
          9.7284e-01, 1.0523e-03],
         [7.7388e-07, 9.9984e-01, 9.9803e-01,  ..., 8.9317e-03,
          9.9836e-03, 1.0779e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 259:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0248, 0.0027, 0.0084,  ..., 0.9959, 0.9203, 0.0134],
         [0.9547, 0.0054, 0.0214,  ..., 0.0014, 0.0247, 0.0220],
         [0.0102, 0.0027, 0.0084,  ..., 0.0014, 0.0247, 0.0134],
         [0.0102, 0.9891, 0.9617,  ..., 0.0014, 0.0304, 0.9512]],
        [[0.9732, 0.0208, 0.0192,  ..., 0.0146, 0.0018, 0.0024],
         [0.0082, 0.0622, 0.0221,  ..., 0.0284, 0.0018, 0.0024],
         [0.0105, 0.0218, 0.0292,  ..., 0.0146, 0.9946, 0.9927],
         [0.0082, 0.8952, 0.9294,  ..., 0.9424, 0.0018, 0.0024]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7456e-02, 1.5656e-01, 8.5869e-02,  ..., 7.3043e-03,
          1.6267e-01, 3.5110e-02],
         [1.7456e-02, 9.9405e-02, 5.0482e-02,  ..., 7.3043e-03,
          1.5812e-01, 3.3956e-02],
         [9.4023e-01, 2.0001e-01, 7.4008e-02,  ..., 9.7796e-01,
          3.6876e-01, 8.7350e-01],
         [2.4863e-02, 5.4402e-01, 7.8964e-01,  ..., 7.4333e-03,
          3.1045e-01, 5.7430e-02]],
        [[8.6776e-06, 5.6153e-04, 8.3945e-06,  ..., 9.1401e-03,
          9.7303e-03, 9.9947e-01],
         [8.6776e-06, 1.6967e-03, 8.3945e-06,  ..., 9.1401e-03,
          9.7303e-03, 1.7717e-04],
         [9.9997e-01, 5.6153e-04, 8.3945e-06,  ..., 9.7182e-01,
          9.7081e-01, 1.7717e-04],
         [8.6776e-06, 9.9718e-01, 9.9997e-01,  ..., 9.8958e-03,
          9.7303e-03, 1.7717e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 260:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:44,700 [Process: 0] Synchronize training processes
2024-08-18 19:49:44,700 [Process: 0] Evaluating...
2024-08-18 19:49:44,702 [Process: 0] EPOCH 260:
2024-08-18 19:49:44,704 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:45,835 [Process: 0] Synchronize training processes
2024-08-18 19:49:45,835 [Process: 0] Evaluating...
2024-08-18 19:49:45,837 [Process: 0] EPOCH 261:
2024-08-18 19:49:45,839 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2078, 0.0046, 0.0069,  ..., 0.9888, 0.9967, 0.0058],
         [0.6350, 0.0057, 0.0147,  ..., 0.0029, 0.0011, 0.0124],
         [0.0767, 0.0046, 0.0069,  ..., 0.0054, 0.0011, 0.0058],
         [0.0805, 0.9850, 0.9715,  ..., 0.0029, 0.0011, 0.9760]],
        [[0.9906, 0.0096, 0.0264,  ..., 0.0121, 0.0024, 0.0039],
         [0.0027, 0.0096, 0.0781,  ..., 0.0151, 0.0024, 0.0039],
         [0.0039, 0.0096, 0.0270,  ..., 0.0127, 0.9927, 0.9883],
         [0.0027, 0.9713, 0.8686,  ..., 0.9602, 0.0024, 0.0039]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2604e-02, 1.3529e-01, 2.5511e-02,  ..., 7.4882e-03,
          2.4511e-01, 6.2436e-02],
         [2.1693e-02, 8.2229e-02, 2.6521e-02,  ..., 7.4882e-03,
          9.9145e-02, 7.4719e-02],
         [9.2497e-01, 1.7405e-01, 2.5511e-02,  ..., 9.7693e-01,
          2.8133e-01, 7.4568e-01],
         [3.0737e-02, 6.0844e-01, 9.2246e-01,  ..., 8.0929e-03,
          3.7442e-01, 1.1716e-01]],
        [[4.6989e-08, 1.7246e-04, 1.4186e-04,  ..., 1.1267e-02,
          9.6300e-03, 9.9991e-01],
         [4.6989e-08, 7.8894e-04, 2.5106e-04,  ..., 1.1267e-02,
          9.6300e-03, 3.0772e-05],
         [1.0000e+00, 1.7246e-04, 1.4186e-04,  ..., 9.6460e-01,
          9.7016e-01, 3.0772e-05],
         [4.6989e-08, 9.9887e-01, 9.9947e-01,  ..., 1.2863e-02,
          1.0581e-02, 3.0772e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 261:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.2981e-02, 3.5476e-03, 3.3853e-03,  ..., 9.9507e-01,
          9.9194e-01, 3.0067e-03],
         [8.8773e-01, 5.1654e-03, 3.3961e-03,  ..., 1.6432e-03,
          2.5712e-03, 1.7194e-02],
         [4.0988e-02, 3.5476e-03, 3.3853e-03,  ..., 1.6432e-03,
          2.9133e-03, 3.0067e-03],
         [2.8303e-02, 9.8774e-01, 9.8983e-01,  ..., 1.6432e-03,
          2.5712e-03, 9.7679e-01]],
        [[9.3965e-01, 1.9095e-02, 6.4755e-03,  ..., 8.7790e-02,
          4.6726e-03, 7.4749e-04],
         [1.4214e-02, 4.1562e-02, 8.2616e-03,  ..., 1.4133e-01,
          4.6726e-03, 7.4749e-04],
         [3.1919e-02, 1.8882e-02, 6.4755e-03,  ..., 8.0331e-02,
          9.8598e-01, 9.9776e-01],
         [1.4214e-02, 9.2046e-01, 9.7879e-01,  ..., 6.9055e-01,
          4.6726e-03, 7.4749e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:46,986 [Process: 0] Synchronize training processes
2024-08-18 19:49:46,986 [Process: 0] Evaluating...
2024-08-18 19:49:46,993 [Process: 0] EPOCH 262:
2024-08-18 19:49:46,995 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0789e-02, 1.5430e-01, 2.6924e-02,  ..., 3.3341e-03,
          3.2204e-01, 4.7495e-02],
         [2.5403e-02, 1.1010e-01, 2.6031e-02,  ..., 3.3341e-03,
          9.9530e-02, 5.8699e-02],
         [9.0694e-01, 1.2848e-01, 2.6031e-02,  ..., 9.9000e-01,
          2.4855e-01, 7.9789e-01],
         [3.6872e-02, 6.0712e-01, 9.2101e-01,  ..., 3.3341e-03,
          3.2987e-01, 9.5913e-02]],
        [[3.1728e-07, 6.6888e-06, 7.8031e-04,  ..., 1.7064e-02,
          3.6172e-03, 9.9990e-01],
         [3.1728e-07, 5.3861e-05, 2.2883e-02,  ..., 1.5759e-02,
          3.6172e-03, 3.1668e-05],
         [1.0000e+00, 6.6888e-06, 7.8031e-04,  ..., 9.4806e-01,
          9.8915e-01, 3.1668e-05],
         [3.1728e-07, 9.9993e-01, 9.7556e-01,  ..., 1.9118e-02,
          3.6172e-03, 3.1668e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 262:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1998, 0.0055, 0.0083,  ..., 0.9837, 0.9795, 0.0065],
         [0.5230, 0.0069, 0.0113,  ..., 0.0054, 0.0062, 0.0120],
         [0.2105, 0.0055, 0.0084,  ..., 0.0054, 0.0081, 0.0065],
         [0.0667, 0.9822, 0.9720,  ..., 0.0054, 0.0062, 0.9751]],
        [[0.9730, 0.0108, 0.0048,  ..., 0.0305, 0.0013, 0.0015],
         [0.0090, 0.0228, 0.0092,  ..., 0.0399, 0.0013, 0.0015],
         [0.0090, 0.0108, 0.0048,  ..., 0.0422, 0.9962, 0.9954],
         [0.0090, 0.9557, 0.9812,  ..., 0.8874, 0.0013, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6217e-02, 1.4916e-01, 4.1825e-02,  ..., 8.9099e-03,
          2.8568e-01, 4.8225e-02],
         [3.0504e-02, 7.7931e-02, 3.9276e-02,  ..., 8.9099e-03,
          1.3097e-01, 3.2480e-01],
         [9.0594e-01, 1.4035e-01, 3.9067e-02,  ..., 9.7298e-01,
          2.4034e-01, 5.6645e-01],
         [3.7334e-02, 6.3256e-01, 8.7983e-01,  ..., 9.1995e-03,
          3.4301e-01, 6.0517e-02]],
        [[9.7885e-07, 1.1959e-05, 5.3411e-03,  ..., 7.8672e-03,
          6.0158e-03, 9.9973e-01],
         [9.7885e-07, 1.5486e-04, 7.8403e-02,  ..., 7.8672e-03,
          6.0158e-03, 9.1604e-05],
         [1.0000e+00, 1.1959e-05, 5.3411e-03,  ..., 9.7640e-01,
          9.8195e-01, 9.1604e-05],
         [9.7885e-07, 9.9982e-01, 9.1091e-01,  ..., 7.8672e-03,
          6.0158e-03, 9.1604e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 263:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6653e-01, 1.1151e-02, 2.5163e-02,  ..., 9.4983e-01,
          9.3551e-01, 3.6143e-03],
         [4.9951e-01, 1.8823e-02, 6.5638e-02,  ..., 1.5122e-02,
          1.6540e-02, 8.5808e-03],
         [2.6549e-01, 1.0355e-02, 2.6825e-02,  ..., 1.8023e-02,
          3.1414e-02, 3.6143e-03],
         [6.8470e-02, 9.5967e-01, 8.8237e-01,  ..., 1.7023e-02,
          1.6540e-02, 9.8419e-01]],
        [[9.5364e-01, 1.5161e-02, 1.3302e-02,  ..., 6.5615e-02,
          1.6929e-03, 7.8691e-04],
         [1.4012e-02, 2.5969e-02, 2.8572e-02,  ..., 8.8469e-02,
          1.6929e-03, 7.8691e-04],
         [1.8336e-02, 1.5161e-02, 1.3703e-02,  ..., 1.0394e-01,
          9.9492e-01, 9.9764e-01],
         [1.4012e-02, 9.4371e-01, 9.4442e-01,  ..., 7.4198e-01,
          1.6929e-03, 7.8691e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:48,142 [Process: 0] Synchronize training processes
2024-08-18 19:49:48,142 [Process: 0] Evaluating...
2024-08-18 19:49:48,144 [Process: 0] EPOCH 263:
2024-08-18 19:49:48,146 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:49,289 [Process: 0] Synchronize training processes
2024-08-18 19:49:49,289 [Process: 0] Evaluating...
2024-08-18 19:49:49,291 [Process: 0] EPOCH 264:
2024-08-18 19:49:49,293 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.2053e-03, 8.6744e-02, 1.0039e-02,  ..., 8.6640e-03,
          3.5830e-01, 6.9785e-02],
         [8.2053e-03, 5.0296e-02, 1.0039e-02,  ..., 8.6640e-03,
          9.8591e-02, 2.0716e-01],
         [9.7538e-01, 5.0296e-02, 1.0039e-02,  ..., 9.7401e-01,
          1.9626e-01, 6.2355e-01],
         [8.2053e-03, 8.1266e-01, 9.6988e-01,  ..., 8.6640e-03,
          3.4685e-01, 9.9504e-02]],
        [[3.1021e-06, 2.1757e-04, 1.0679e-04,  ..., 4.4240e-03,
          5.0566e-03, 9.9934e-01],
         [3.1021e-06, 7.7911e-04, 1.0679e-04,  ..., 4.4240e-03,
          5.0566e-03, 2.2072e-04],
         [9.9999e-01, 2.1757e-04, 1.0679e-04,  ..., 9.8673e-01,
          9.8453e-01, 2.2072e-04],
         [3.1021e-06, 9.9879e-01, 9.9968e-01,  ..., 4.4240e-03,
          5.3534e-03, 2.2072e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 264:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4096e-01, 4.0856e-03, 2.2458e-02,  ..., 9.7440e-01,
          9.8021e-01, 8.9861e-03],
         [6.8180e-01, 5.8875e-03, 6.6495e-02,  ..., 7.3720e-03,
          5.7548e-03, 1.1702e-02],
         [1.3981e-01, 4.0856e-03, 2.2458e-02,  ..., 1.0858e-02,
          5.7548e-03, 8.9861e-03],
         [3.7429e-02, 9.8594e-01, 8.8859e-01,  ..., 7.3720e-03,
          8.2826e-03, 9.7033e-01]],
        [[9.8234e-01, 9.0203e-03, 1.5077e-02,  ..., 1.7684e-01,
          2.1336e-03, 9.6659e-04],
         [5.8857e-03, 1.3368e-02, 3.3372e-02,  ..., 1.2093e-01,
          2.1336e-03, 9.6659e-04],
         [5.8857e-03, 9.0203e-03, 1.5207e-02,  ..., 1.9563e-01,
          9.9360e-01, 9.9710e-01],
         [5.8857e-03, 9.6859e-01, 9.3634e-01,  ..., 5.0660e-01,
          2.1336e-03, 9.6659e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1581e-02, 6.0301e-02, 2.6145e-02,  ..., 1.0943e-02,
          2.9169e-01, 7.3149e-02],
         [1.1581e-02, 4.2318e-02, 2.6145e-02,  ..., 1.0943e-02,
          1.0654e-01, 2.4925e-01],
         [9.6436e-01, 4.2318e-02, 2.6145e-02,  ..., 9.6717e-01,
          1.5354e-01, 5.2176e-01],
         [1.2481e-02, 8.5506e-01, 9.2157e-01,  ..., 1.0943e-02,
          4.4823e-01, 1.5584e-01]],
        [[9.9668e-06, 7.7253e-04, 3.1630e-03,  ..., 4.5793e-03,
          1.8236e-03, 9.9948e-01],
         [9.9668e-06, 8.9684e-04, 1.7083e-02,  ..., 4.5793e-03,
          1.8236e-03, 1.7216e-04],
         [9.9997e-01, 7.7253e-04, 3.1630e-03,  ..., 9.8626e-01,
          9.9453e-01, 1.7216e-04],
         [9.9668e-06, 9.9756e-01, 9.7659e-01,  ..., 4.5793e-03,
          1.8236e-03, 1.7216e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 265:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:50,442 [Process: 0] Synchronize training processes
2024-08-18 19:49:50,442 [Process: 0] Evaluating...
2024-08-18 19:49:50,444 [Process: 0] EPOCH 265:
2024-08-18 19:49:50,446 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:51,590 [Process: 0] Synchronize training processes
2024-08-18 19:49:51,591 [Process: 0] Evaluating...
2024-08-18 19:49:51,592 [Process: 0] EPOCH 266:
2024-08-18 19:49:51,594 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0378e-01, 6.7820e-03, 1.0465e-02,  ..., 9.9468e-01,
          9.9647e-01, 2.1173e-03],
         [4.2979e-01, 8.2237e-03, 2.0389e-02,  ..., 1.7718e-03,
          1.1768e-03, 2.1173e-03],
         [1.2329e-01, 6.7820e-03, 1.0465e-02,  ..., 1.7718e-03,
          1.1768e-03, 2.1173e-03],
         [4.3136e-02, 9.7821e-01, 9.5868e-01,  ..., 1.7718e-03,
          1.1768e-03, 9.9365e-01]],
        [[9.9401e-01, 1.0185e-02, 2.2192e-02,  ..., 6.5572e-03,
          2.9733e-03, 4.6941e-04],
         [1.9850e-03, 1.0185e-02, 3.8408e-02,  ..., 6.5572e-03,
          2.9733e-03, 4.6941e-04],
         [2.0250e-03, 1.0185e-02, 2.2413e-02,  ..., 6.5572e-03,
          9.9108e-01, 9.9859e-01],
         [1.9850e-03, 9.6945e-01, 9.1699e-01,  ..., 9.8033e-01,
          2.9733e-03, 4.6941e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.1661e-03, 5.2467e-02, 3.9247e-02,  ..., 1.1148e-03,
          1.9582e-01, 7.2100e-02],
         [6.1661e-03, 4.3759e-02, 3.9247e-02,  ..., 1.1148e-03,
          1.4944e-01, 3.2274e-01],
         [9.8150e-01, 4.2196e-02, 3.9726e-02,  ..., 9.9666e-01,
          1.8490e-01, 5.2536e-01],
         [6.1661e-03, 8.6158e-01, 8.8178e-01,  ..., 1.1148e-03,
          4.6984e-01, 7.9795e-02]],
        [[9.4628e-06, 5.9923e-05, 9.5017e-05,  ..., 1.1048e-02,
          3.4920e-03, 9.9995e-01],
         [9.4628e-06, 9.5653e-05, 5.1060e-03,  ..., 1.0926e-02,
          3.4920e-03, 1.5589e-05],
         [9.9997e-01, 5.9923e-05, 9.5017e-05,  ..., 9.6710e-01,
          9.8952e-01, 1.5589e-05],
         [9.4628e-06, 9.9978e-01, 9.9470e-01,  ..., 1.0926e-02,
          3.4920e-03, 1.5589e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 266:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4339, 0.0069, 0.0092,  ..., 0.9836, 0.9872, 0.0054],
         [0.5023, 0.0081, 0.0079,  ..., 0.0054, 0.0038, 0.0054],
         [0.0319, 0.0069, 0.0081,  ..., 0.0056, 0.0052, 0.0054],
         [0.0319, 0.9781, 0.9748,  ..., 0.0054, 0.0038, 0.9839]],
        [[0.9760, 0.0167, 0.0030,  ..., 0.0072, 0.0055, 0.0056],
         [0.0069, 0.0292, 0.0030,  ..., 0.0072, 0.0055, 0.0056],
         [0.0101, 0.0196, 0.0030,  ..., 0.0072, 0.9836, 0.9831],
         [0.0069, 0.9344, 0.9910,  ..., 0.9785, 0.0055, 0.0056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6574e-02, 1.6386e-02, 8.9715e-03,  ..., 5.8165e-03,
          1.8492e-01, 7.6906e-02],
         [2.6574e-02, 1.6386e-02, 8.9715e-03,  ..., 5.8165e-03,
          8.0480e-02, 5.4885e-02],
         [9.0636e-01, 1.6386e-02, 8.9715e-03,  ..., 9.8255e-01,
          9.6666e-02, 8.0787e-01],
         [4.0492e-02, 9.5084e-01, 9.7309e-01,  ..., 5.8165e-03,
          6.3793e-01, 6.0338e-02]],
        [[6.4184e-04, 1.1190e-03, 7.9489e-05,  ..., 1.8069e-02,
          2.0446e-03, 9.7366e-01],
         [6.4184e-04, 1.1500e-03, 1.3701e-04,  ..., 1.6676e-02,
          2.0446e-03, 1.6192e-02],
         [9.9807e-01, 1.1190e-03, 7.9489e-05,  ..., 9.4505e-01,
          9.9387e-01, 5.0742e-03],
         [6.4184e-04, 9.9661e-01, 9.9970e-01,  ..., 2.0207e-02,
          2.0446e-03, 5.0742e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 267:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:52,739 [Process: 0] Synchronize training processes
2024-08-18 19:49:52,739 [Process: 0] Evaluating...
2024-08-18 19:49:52,741 [Process: 0] EPOCH 267:
2024-08-18 19:49:52,743 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.0864e-01, 5.2666e-03, 2.2845e-03,  ..., 9.9531e-01,
          9.9755e-01, 5.5687e-03],
         [1.2093e-01, 5.2666e-03, 2.2845e-03,  ..., 1.5638e-03,
          8.1741e-04, 6.0265e-03],
         [3.7044e-02, 5.2666e-03, 2.2845e-03,  ..., 1.5638e-03,
          8.1741e-04, 5.6914e-03],
         [3.3386e-02, 9.8420e-01, 9.9315e-01,  ..., 1.5638e-03,
          8.1741e-04, 9.8271e-01]],
        [[9.8307e-01, 7.2719e-03, 4.7988e-03,  ..., 6.5484e-03,
          2.4008e-03, 8.0394e-04],
         [5.6432e-03, 7.2719e-03, 5.9337e-03,  ..., 1.3820e-02,
          2.4008e-03, 8.0394e-04],
         [5.6432e-03, 7.7258e-03, 4.7988e-03,  ..., 6.5484e-03,
          9.9280e-01, 9.9759e-01],
         [5.6432e-03, 9.7773e-01, 9.8447e-01,  ..., 9.7308e-01,
          2.4008e-03, 8.0394e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.0041e-03, 5.3500e-02, 6.0425e-02,  ..., 3.0316e-03,
          1.9969e-01, 9.9149e-02],
         [7.0041e-03, 3.1612e-02, 3.5034e-02,  ..., 3.0316e-03,
          8.6610e-02, 6.1730e-01],
         [9.7899e-01, 3.1612e-02, 3.5034e-02,  ..., 9.9091e-01,
          1.0610e-01, 1.9045e-01],
         [7.0041e-03, 8.8327e-01, 8.6951e-01,  ..., 3.0316e-03,
          6.0759e-01, 9.3101e-02]],
        [[1.8181e-04, 2.7076e-03, 3.8193e-05,  ..., 1.8544e-02,
          7.9512e-03, 9.9988e-01],
         [1.8181e-04, 2.7076e-03, 3.8193e-05,  ..., 1.8293e-02,
          7.9512e-03, 3.8936e-05],
         [9.9945e-01, 2.7076e-03, 3.8193e-05,  ..., 9.4232e-01,
          9.7615e-01, 3.8936e-05],
         [1.8181e-04, 9.9188e-01, 9.9989e-01,  ..., 2.0842e-02,
          7.9512e-03, 3.8936e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 268:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.5028e-01, 5.1583e-03, 5.4191e-03,  ..., 9.8426e-01,
          9.8031e-01, 7.2413e-03],
         [3.2519e-02, 5.7251e-03, 5.6272e-03,  ..., 5.2460e-03,
          6.5624e-03, 8.7409e-03],
         [6.3518e-02, 5.1583e-03, 5.4191e-03,  ..., 5.2460e-03,
          6.5624e-03, 8.0936e-03],
         [5.3688e-02, 9.8396e-01, 9.8353e-01,  ..., 5.2460e-03,
          6.5624e-03, 9.7592e-01]],
        [[9.8409e-01, 1.2669e-02, 6.1823e-03,  ..., 1.0107e-02,
          2.5223e-03, 3.2605e-04],
         [5.3048e-03, 1.4012e-02, 6.3391e-03,  ..., 1.2231e-02,
          2.5223e-03, 3.2605e-04],
         [5.3048e-03, 1.5266e-02, 6.7468e-03,  ..., 1.1403e-02,
          9.9243e-01, 9.9902e-01],
         [5.3048e-03, 9.5805e-01, 9.8073e-01,  ..., 9.6626e-01,
          2.5223e-03, 3.2605e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:53,888 [Process: 0] Synchronize training processes
2024-08-18 19:49:53,889 [Process: 0] Evaluating...
2024-08-18 19:49:53,891 [Process: 0] EPOCH 268:
2024-08-18 19:49:53,892 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:55,063 [Process: 0] Synchronize training processes
2024-08-18 19:49:55,063 [Process: 0] Evaluating...
2024-08-18 19:49:55,065 [Process: 0] EPOCH 269:
2024-08-18 19:49:55,067 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0586e-03, 1.0562e-02, 3.3388e-03,  ..., 6.3685e-03,
          3.0265e-01, 1.2414e-01],
         [4.0586e-03, 1.0562e-02, 3.3388e-03,  ..., 6.3685e-03,
          1.8725e-01, 3.7307e-02],
         [9.8782e-01, 1.0562e-02, 3.3388e-03,  ..., 9.8089e-01,
          1.6226e-01, 7.9471e-01],
         [4.0586e-03, 9.6831e-01, 9.8998e-01,  ..., 6.3685e-03,
          3.4784e-01, 4.3835e-02]],
        [[4.2175e-03, 9.4986e-06, 9.4172e-06,  ..., 2.0621e-02,
          2.6955e-03, 9.9983e-01],
         [4.2175e-03, 9.4986e-06, 9.4172e-06,  ..., 2.0621e-02,
          2.6955e-03, 5.7105e-05],
         [9.8735e-01, 9.4986e-06, 9.4172e-06,  ..., 9.3220e-01,
          9.9191e-01, 5.7105e-05],
         [4.2175e-03, 9.9997e-01, 9.9997e-01,  ..., 2.6555e-02,
          2.6955e-03, 5.7105e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 269:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.7665e-01, 2.5905e-03, 1.2103e-02,  ..., 9.9845e-01,
          9.9966e-01, 4.6822e-03],
         [2.0563e-02, 2.5905e-03, 1.0183e-02,  ..., 5.1809e-04,
          1.1431e-04, 4.6822e-03],
         [1.8222e-01, 2.5905e-03, 1.4725e-02,  ..., 5.1809e-04,
          1.1431e-04, 4.6822e-03],
         [2.0563e-02, 9.9223e-01, 9.6299e-01,  ..., 5.1809e-04,
          1.1431e-04, 9.8595e-01]],
        [[9.9727e-01, 5.0925e-03, 4.6471e-03,  ..., 2.0836e-03,
          2.7324e-03, 2.8912e-04],
         [9.1027e-04, 5.0925e-03, 4.6471e-03,  ..., 2.0836e-03,
          2.7324e-03, 2.8912e-04],
         [9.1027e-04, 5.0925e-03, 4.6724e-03,  ..., 2.0836e-03,
          9.9180e-01, 9.9913e-01],
         [9.1027e-04, 9.8472e-01, 9.8603e-01,  ..., 9.9375e-01,
          2.7324e-03, 2.8912e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0602e-03, 1.7389e-02, 2.0558e-02,  ..., 5.1932e-03,
          2.9883e-01, 9.2438e-02],
         [2.0602e-03, 1.7541e-02, 3.2868e-02,  ..., 5.1932e-03,
          1.5616e-01, 3.8628e-02],
         [9.9382e-01, 1.7389e-02, 2.0558e-02,  ..., 9.8442e-01,
          1.4801e-01, 8.3031e-01],
         [2.0602e-03, 9.4768e-01, 9.2602e-01,  ..., 5.1932e-03,
          3.9699e-01, 3.8628e-02]],
        [[4.4274e-03, 4.7244e-05, 4.6678e-04,  ..., 3.3354e-02,
          1.8554e-02, 9.9969e-01],
         [4.4274e-03, 4.7244e-05, 4.6678e-04,  ..., 2.6193e-02,
          1.8554e-02, 1.0466e-04],
         [9.8672e-01, 4.7244e-05, 4.6678e-04,  ..., 9.0778e-01,
          9.3801e-01, 1.0466e-04],
         [4.4274e-03, 9.9986e-01, 9.9860e-01,  ..., 3.2678e-02,
          2.4881e-02, 1.0466e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 270:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.9023e-01, 5.3455e-03, 1.3335e-02,  ..., 9.9710e-01,
          9.9600e-01, 8.4129e-03],
         [1.7516e-01, 6.1585e-03, 1.6164e-02,  ..., 9.6789e-04,
          1.3344e-03, 8.4129e-03],
         [1.7306e-02, 5.3455e-03, 1.6062e-02,  ..., 9.6789e-04,
          1.3344e-03, 8.6978e-03],
         [1.7306e-02, 9.8315e-01, 9.5444e-01,  ..., 9.6789e-04,
          1.3344e-03, 9.7448e-01]],
        [[9.9455e-01, 1.8726e-02, 5.8979e-03,  ..., 2.7786e-03,
          1.6228e-03, 4.4697e-04],
         [1.7657e-03, 1.8726e-02, 5.8979e-03,  ..., 2.7786e-03,
          1.6228e-03, 4.4697e-04],
         [1.9151e-03, 2.6977e-02, 5.8979e-03,  ..., 2.7786e-03,
          9.9513e-01, 9.9866e-01],
         [1.7657e-03, 9.3557e-01, 9.8231e-01,  ..., 9.9166e-01,
          1.6228e-03, 4.4697e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:49:56,218 [Process: 0] Synchronize training processes
2024-08-18 19:49:56,218 [Process: 0] Evaluating...
2024-08-18 19:49:56,220 [Process: 0] EPOCH 270:
2024-08-18 19:49:56,222 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:57,367 [Process: 0] Synchronize training processes
2024-08-18 19:49:57,368 [Process: 0] Evaluating...
2024-08-18 19:49:57,369 [Process: 0] EPOCH 271:
2024-08-18 19:49:57,371 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1998e-03, 2.0720e-02, 9.7101e-03,  ..., 2.9800e-03,
          2.0498e-01, 8.9033e-02],
         [7.1998e-03, 2.0720e-02, 9.7101e-03,  ..., 2.9800e-03,
          8.7755e-02, 3.5194e-02],
         [9.7840e-01, 2.0720e-02, 9.7101e-03,  ..., 9.9106e-01,
          1.4993e-01, 8.3351e-01],
         [7.1998e-03, 9.3784e-01, 9.7087e-01,  ..., 2.9800e-03,
          5.5733e-01, 4.2261e-02]],
        [[7.7735e-03, 5.8476e-05, 2.7162e-05,  ..., 1.9046e-02,
          1.5474e-02, 9.6829e-01],
         [7.7735e-03, 5.8476e-05, 2.7162e-05,  ..., 1.7308e-02,
          9.7395e-03, 2.2663e-02],
         [9.7635e-01, 5.8476e-05, 2.7162e-05,  ..., 9.4424e-01,
          9.6505e-01, 4.5215e-03],
         [8.1027e-03, 9.9982e-01, 9.9992e-01,  ..., 1.9409e-02,
          9.7395e-03, 4.5215e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 271:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2900e-01, 3.3470e-03, 4.0970e-03,  ..., 9.9676e-01,
          9.3595e-01, 9.5646e-03],
         [3.2187e-02, 3.3470e-03, 4.0970e-03,  ..., 1.0794e-03,
          2.6757e-02, 9.5646e-03],
         [2.1190e-02, 3.3470e-03, 4.4918e-03,  ..., 1.0794e-03,
          1.8958e-02, 1.0862e-02],
         [1.7626e-02, 9.8996e-01, 9.8731e-01,  ..., 1.0794e-03,
          1.8336e-02, 9.7001e-01]],
        [[9.9771e-01, 1.0614e-02, 7.8934e-03,  ..., 1.2574e-02,
          6.4949e-03, 1.9388e-03],
         [7.6207e-04, 1.1200e-02, 7.8934e-03,  ..., 1.4525e-02,
          6.4949e-03, 1.9388e-03],
         [7.6207e-04, 1.0614e-02, 8.0199e-03,  ..., 1.4287e-02,
          9.8052e-01, 9.9418e-01],
         [7.6207e-04, 9.6757e-01, 9.7619e-01,  ..., 9.5861e-01,
          6.4949e-03, 1.9388e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3122e-02, 2.3318e-02, 2.2679e-02,  ..., 4.1920e-03,
          8.3672e-02, 8.7218e-02],
         [1.1039e-02, 2.5456e-02, 3.2522e-02,  ..., 4.1920e-03,
          5.6632e-02, 5.8478e-02],
         [9.6480e-01, 2.3318e-02, 2.2679e-02,  ..., 9.8742e-01,
          6.7311e-02, 7.3020e-01],
         [1.1039e-02, 9.2791e-01, 9.2212e-01,  ..., 4.1920e-03,
          7.9238e-01, 1.2410e-01]],
        [[6.1406e-03, 5.9809e-06, 2.5401e-04,  ..., 1.1416e-02,
          9.5845e-03, 9.9774e-01],
         [6.1406e-03, 5.9809e-06, 2.5401e-04,  ..., 1.0459e-02,
          8.2132e-03, 7.5400e-04],
         [9.8158e-01, 5.9809e-06, 2.5401e-04,  ..., 9.6767e-01,
          9.7399e-01, 7.5400e-04],
         [6.1406e-03, 9.9998e-01, 9.9924e-01,  ..., 1.0459e-02,
          8.2132e-03, 7.5400e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 272:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:58,518 [Process: 0] Synchronize training processes
2024-08-18 19:49:58,518 [Process: 0] Evaluating...
2024-08-18 19:49:58,524 [Process: 0] EPOCH 272:
2024-08-18 19:49:58,526 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:49:59,674 [Process: 0] Synchronize training processes
2024-08-18 19:49:59,674 [Process: 0] Evaluating...
2024-08-18 19:49:59,676 [Process: 0] EPOCH 273:
2024-08-18 19:49:59,678 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1558e-01, 8.9647e-03, 5.6938e-03,  ..., 9.6164e-01,
          9.8482e-01, 1.9258e-02],
         [1.3149e-02, 8.9647e-03, 5.6938e-03,  ..., 1.0319e-02,
          5.0596e-03, 1.7208e-02],
         [5.8124e-02, 9.2332e-03, 5.6938e-03,  ..., 1.0319e-02,
          5.0596e-03, 2.2047e-02],
         [1.3149e-02, 9.7284e-01, 9.8292e-01,  ..., 1.7723e-02,
          5.0596e-03, 9.4149e-01]],
        [[9.8925e-01, 1.4369e-03, 3.7432e-03,  ..., 1.8039e-02,
          1.9992e-03, 1.9390e-04],
         [3.4104e-03, 1.4369e-03, 3.7432e-03,  ..., 1.7470e-02,
          1.9992e-03, 1.9390e-04],
         [3.9291e-03, 1.4369e-03, 3.7432e-03,  ..., 2.3623e-02,
          9.9400e-01, 9.9942e-01],
         [3.4104e-03, 9.9569e-01, 9.8877e-01,  ..., 9.4087e-01,
          1.9992e-03, 1.9390e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6768e-03, 5.3383e-02, 3.1957e-03,  ..., 7.5131e-03,
          2.0794e-01, 9.2040e-02],
         [3.6768e-03, 3.7578e-02, 3.1957e-03,  ..., 7.5131e-03,
          7.8745e-02, 6.3842e-02],
         [9.8897e-01, 3.7578e-02, 3.1957e-03,  ..., 9.7746e-01,
          9.8087e-02, 7.4485e-01],
         [3.6768e-03, 8.7146e-01, 9.9041e-01,  ..., 7.5131e-03,
          6.1523e-01, 9.9267e-02]],
        [[1.9316e-03, 2.2985e-05, 2.0878e-05,  ..., 1.0077e-02,
          1.3094e-02, 9.7275e-01],
         [1.9316e-03, 2.2985e-05, 2.0878e-05,  ..., 1.0077e-02,
          7.2669e-03, 1.2726e-02],
         [9.9421e-01, 2.2985e-05, 2.0878e-05,  ..., 9.6977e-01,
          9.7237e-01, 7.2609e-03],
         [1.9316e-03, 9.9993e-01, 9.9994e-01,  ..., 1.0077e-02,
          7.2669e-03, 7.2609e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 273:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8829e-01, 8.1700e-03, 7.3257e-03,  ..., 9.7954e-01,
          9.9757e-01, 9.7052e-03],
         [6.2485e-01, 8.1700e-03, 7.3257e-03,  ..., 6.8190e-03,
          8.1021e-04, 9.2238e-03],
         [2.9243e-02, 8.1700e-03, 7.6864e-03,  ..., 6.8190e-03,
          8.1021e-04, 1.0673e-02],
         [5.7625e-02, 9.7549e-01, 9.7766e-01,  ..., 6.8190e-03,
          8.1021e-04, 9.7040e-01]],
        [[9.8742e-01, 3.8369e-03, 1.4268e-02,  ..., 5.5414e-03,
          2.9928e-04, 4.1121e-04],
         [4.1918e-03, 3.8369e-03, 1.4268e-02,  ..., 5.5414e-03,
          2.9928e-04, 4.1121e-04],
         [4.1918e-03, 3.8369e-03, 1.9405e-02,  ..., 5.8638e-03,
          9.9910e-01, 9.9877e-01],
         [4.1918e-03, 9.8849e-01, 9.5206e-01,  ..., 9.8305e-01,
          2.9928e-04, 4.1121e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5112e-03, 1.0300e-01, 2.1297e-02,  ..., 5.7974e-03,
          3.3808e-01, 4.4466e-02],
         [3.5112e-03, 1.8449e-01, 2.1297e-02,  ..., 5.7974e-03,
          3.1693e-01, 5.2920e-02],
         [9.8947e-01, 1.2494e-01, 2.3209e-02,  ..., 9.8261e-01,
          1.0601e-01, 8.5894e-01],
         [3.5112e-03, 5.8757e-01, 9.3420e-01,  ..., 5.7974e-03,
          2.3898e-01, 4.3678e-02]],
        [[1.4600e-03, 6.8316e-06, 5.2656e-05,  ..., 1.4434e-02,
          5.2105e-03, 9.9998e-01],
         [1.4600e-03, 6.8316e-06, 5.2656e-05,  ..., 1.4434e-02,
          5.2105e-03, 8.2142e-06],
         [9.9562e-01, 6.8316e-06, 5.2656e-05,  ..., 9.5500e-01,
          9.8437e-01, 8.2142e-06],
         [1.4600e-03, 9.9998e-01, 9.9984e-01,  ..., 1.6135e-02,
          5.2105e-03, 8.2142e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 274:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:00,823 [Process: 0] Synchronize training processes
2024-08-18 19:50:00,823 [Process: 0] Evaluating...
2024-08-18 19:50:00,825 [Process: 0] EPOCH 274:
2024-08-18 19:50:00,827 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7657e-01, 1.7151e-02, 4.7423e-03,  ..., 9.9931e-01,
          9.9566e-01, 5.8942e-03],
         [1.0773e-01, 1.3567e-02, 4.7423e-03,  ..., 2.3047e-04,
          1.4452e-03, 5.8942e-03],
         [7.8511e-03, 1.7532e-02, 5.3635e-03,  ..., 2.3047e-04,
          1.4452e-03, 5.8942e-03],
         [7.8511e-03, 9.5175e-01, 9.8515e-01,  ..., 2.3047e-04,
          1.4452e-03, 9.8232e-01]],
        [[9.8751e-01, 4.9856e-03, 8.3728e-03,  ..., 1.2060e-02,
          1.5076e-03, 1.1406e-03],
         [4.1617e-03, 4.9856e-03, 8.3728e-03,  ..., 1.2060e-02,
          1.5076e-03, 1.1406e-03],
         [4.1617e-03, 5.6682e-03, 9.3030e-03,  ..., 1.5937e-02,
          9.9548e-01, 9.9658e-01],
         [4.1617e-03, 9.8436e-01, 9.7395e-01,  ..., 9.5994e-01,
          1.5076e-03, 1.1406e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2670e-03, 5.7162e-02, 1.1422e-02,  ..., 2.4149e-03,
          2.6354e-01, 9.0824e-02],
         [5.2670e-03, 7.1744e-02, 1.1422e-02,  ..., 2.4149e-03,
          2.8944e-01, 2.4957e-01],
         [9.8420e-01, 5.3152e-02, 1.1422e-02,  ..., 9.9276e-01,
          1.8695e-01, 4.8003e-01],
         [5.2670e-03, 8.1794e-01, 9.6573e-01,  ..., 2.4149e-03,
          2.6006e-01, 1.7957e-01]],
        [[3.3453e-03, 2.7006e-04, 1.2257e-03,  ..., 1.2717e-02,
          6.7055e-03, 9.9953e-01],
         [3.3453e-03, 2.7006e-04, 1.2257e-03,  ..., 1.3611e-02,
          6.7055e-03, 1.5606e-04],
         [9.8874e-01, 2.7006e-04, 1.2257e-03,  ..., 9.6096e-01,
          9.7988e-01, 1.5606e-04],
         [4.5660e-03, 9.9919e-01, 9.9632e-01,  ..., 1.2717e-02,
          6.7055e-03, 1.5606e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 275:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0851e-01, 1.0373e-02, 1.1083e-02,  ..., 9.6097e-01,
          9.9779e-01, 1.2655e-02],
         [7.8060e-01, 1.0373e-02, 1.1083e-02,  ..., 2.2213e-02,
          7.3610e-04, 1.2655e-02],
         [5.4439e-03, 1.2354e-02, 1.2961e-02,  ..., 8.4103e-03,
          7.3610e-04, 1.8789e-02],
         [5.4439e-03, 9.6690e-01, 9.6487e-01,  ..., 8.4103e-03,
          7.3610e-04, 9.5590e-01]],
        [[9.8385e-01, 5.1661e-03, 6.2840e-03,  ..., 1.1163e-02,
          2.7408e-03, 9.5816e-04],
         [5.3154e-03, 6.0533e-03, 6.2840e-03,  ..., 1.1163e-02,
          2.7408e-03, 9.5816e-04],
         [5.5219e-03, 5.2569e-03, 7.0320e-03,  ..., 1.3723e-02,
          9.9178e-01, 9.9713e-01],
         [5.3154e-03, 9.8352e-01, 9.8040e-01,  ..., 9.6395e-01,
          2.7408e-03, 9.5816e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:50:01,984 [Process: 0] Synchronize training processes
2024-08-18 19:50:01,984 [Process: 0] Evaluating...
2024-08-18 19:50:01,986 [Process: 0] EPOCH 275:
2024-08-18 19:50:01,988 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:03,136 [Process: 0] Synchronize training processes
2024-08-18 19:50:03,136 [Process: 0] Evaluating...
2024-08-18 19:50:03,138 [Process: 0] EPOCH 276:
2024-08-18 19:50:03,140 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4570e-03, 9.8876e-02, 4.1850e-02,  ..., 7.3522e-03,
          2.1520e-01, 6.1649e-02],
         [9.4570e-03, 7.4705e-02, 3.9858e-02,  ..., 7.3522e-03,
          1.0278e-01, 2.6069e-01],
         [9.7163e-01, 1.1704e-01, 3.9858e-02,  ..., 9.7794e-01,
          2.3202e-01, 6.0021e-01],
         [9.4570e-03, 7.0938e-01, 8.7843e-01,  ..., 7.3564e-03,
          4.5000e-01, 7.7452e-02]],
        [[1.3555e-02, 9.5250e-05, 1.6547e-05,  ..., 4.8080e-02,
          7.1757e-03, 9.9789e-01],
         [1.3555e-02, 9.5250e-05, 1.6547e-05,  ..., 4.9320e-02,
          7.1757e-03, 7.0306e-04],
         [9.5009e-01, 9.5250e-05, 1.6547e-05,  ..., 8.6038e-01,
          9.7847e-01, 7.0306e-04],
         [2.2798e-02, 9.9971e-01, 9.9995e-01,  ..., 4.2220e-02,
          7.1757e-03, 7.0306e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 276:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.8074e-01, 2.3589e-03, 2.0042e-03,  ..., 9.9050e-01,
          8.4009e-01, 3.3162e-03],
         [3.8698e-01, 2.3589e-03, 2.0042e-03,  ..., 3.1681e-03,
          3.8726e-02, 3.3162e-03],
         [1.6142e-02, 2.3589e-03, 2.0042e-03,  ..., 3.1681e-03,
          4.4306e-02, 3.3805e-03],
         [1.6142e-02, 9.9292e-01, 9.9399e-01,  ..., 3.1681e-03,
          7.6875e-02, 9.8999e-01]],
        [[9.9779e-01, 5.7874e-03, 9.8507e-03,  ..., 1.3637e-02,
          2.0393e-04, 8.2939e-04],
         [7.3529e-04, 6.0724e-03, 9.8507e-03,  ..., 1.3637e-02,
          2.0393e-04, 8.2939e-04],
         [7.3529e-04, 5.8907e-03, 1.0204e-02,  ..., 1.4913e-02,
          9.9939e-01, 9.9751e-01],
         [7.3529e-04, 9.8225e-01, 9.7009e-01,  ..., 9.5781e-01,
          2.0393e-04, 8.2939e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7416e-03, 4.3673e-02, 1.3140e-02,  ..., 8.7243e-03,
          9.9027e-02, 2.9193e-02],
         [4.7416e-03, 4.3673e-02, 1.3140e-02,  ..., 8.3541e-03,
          1.1064e-01, 2.6501e-02],
         [9.8578e-01, 4.8594e-02, 1.3140e-02,  ..., 9.7457e-01,
          1.1476e-01, 9.1187e-01],
         [4.7416e-03, 8.6406e-01, 9.6058e-01,  ..., 8.3541e-03,
          6.7558e-01, 3.2436e-02]],
        [[3.9967e-02, 6.6505e-05, 4.3389e-05,  ..., 3.0221e-02,
          3.9328e-03, 9.9986e-01],
         [3.9967e-02, 6.6505e-05, 4.3389e-05,  ..., 5.1630e-02,
          3.9328e-03, 4.6238e-05],
         [7.9867e-01, 6.6505e-05, 4.3389e-05,  ..., 8.8058e-01,
          9.8820e-01, 4.6238e-05],
         [1.2139e-01, 9.9980e-01, 9.9987e-01,  ..., 3.7569e-02,
          3.9328e-03, 4.6238e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 277:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:04,286 [Process: 0] Synchronize training processes
2024-08-18 19:50:04,286 [Process: 0] Evaluating...
2024-08-18 19:50:04,288 [Process: 0] EPOCH 277:
2024-08-18 19:50:04,289 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:05,435 [Process: 0] Synchronize training processes
2024-08-18 19:50:05,435 [Process: 0] Evaluating...
2024-08-18 19:50:05,437 [Process: 0] EPOCH 278:
2024-08-18 19:50:05,439 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.0864e-01, 2.3897e-03, 4.9735e-03,  ..., 9.7266e-01,
          9.8590e-01, 2.0888e-03],
         [1.7941e-01, 2.3897e-03, 4.9735e-03,  ..., 9.1136e-03,
          4.7009e-03, 2.0888e-03],
         [5.9727e-03, 2.3897e-03, 4.9735e-03,  ..., 9.1136e-03,
          4.7009e-03, 2.0888e-03],
         [5.9727e-03, 9.9283e-01, 9.8508e-01,  ..., 9.1136e-03,
          4.7009e-03, 9.9373e-01]],
        [[9.9887e-01, 2.3077e-03, 2.0105e-02,  ..., 1.6392e-02,
          7.6073e-04, 1.5935e-04],
         [3.7549e-04, 2.3077e-03, 1.5042e-02,  ..., 1.6392e-02,
          7.6073e-04, 1.5935e-04],
         [3.7549e-04, 2.3077e-03, 1.6953e-02,  ..., 2.4013e-02,
          9.9772e-01, 9.9952e-01],
         [3.7549e-04, 9.9308e-01, 9.4790e-01,  ..., 9.4320e-01,
          7.6073e-04, 1.5935e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7091e-03, 3.5458e-02, 1.0186e-02,  ..., 5.7129e-03,
          4.8665e-02, 2.8066e-02],
         [5.7091e-03, 3.4775e-02, 1.0186e-02,  ..., 5.7129e-03,
          5.1855e-02, 2.0688e-02],
         [9.8287e-01, 3.4775e-02, 1.0186e-02,  ..., 9.8286e-01,
          5.4429e-02, 9.2733e-01],
         [5.7091e-03, 8.9499e-01, 9.6944e-01,  ..., 5.7129e-03,
          8.4505e-01, 2.3920e-02]],
        [[2.3443e-02, 7.4149e-06, 3.5174e-05,  ..., 3.6814e-02,
          4.7862e-03, 9.9969e-01],
         [2.2058e-02, 7.4149e-06, 3.5174e-05,  ..., 3.6247e-02,
          4.7862e-03, 1.0386e-04],
         [9.1648e-01, 7.4149e-06, 3.5174e-05,  ..., 8.6618e-01,
          9.8564e-01, 1.0386e-04],
         [3.8023e-02, 9.9998e-01, 9.9989e-01,  ..., 6.0755e-02,
          4.7862e-03, 1.0386e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 278:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8829e-01, 6.9280e-03, 7.6307e-03,  ..., 9.9725e-01,
          9.9810e-01, 6.8432e-03],
         [9.7845e-02, 6.0766e-03, 7.6307e-03,  ..., 9.1566e-04,
          6.3170e-04, 6.8432e-03],
         [6.9317e-03, 6.0766e-03, 7.6307e-03,  ..., 9.1566e-04,
          6.3170e-04, 7.5142e-03],
         [6.9317e-03, 9.8092e-01, 9.7711e-01,  ..., 9.1566e-04,
          6.3170e-04, 9.7880e-01]],
        [[9.9487e-01, 5.5880e-03, 7.6954e-03,  ..., 1.4155e-02,
          2.6730e-03, 1.2865e-03],
         [1.6730e-03, 5.8760e-03, 7.6954e-03,  ..., 1.4155e-02,
          2.6730e-03, 1.2865e-03],
         [1.7890e-03, 5.5880e-03, 8.1513e-03,  ..., 2.1180e-02,
          9.9198e-01, 9.9614e-01],
         [1.6730e-03, 9.8295e-01, 9.7646e-01,  ..., 9.5051e-01,
          2.6730e-03, 1.2865e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:50:06,585 [Process: 0] Synchronize training processes
2024-08-18 19:50:06,586 [Process: 0] Evaluating...
2024-08-18 19:50:06,587 [Process: 0] EPOCH 279:
2024-08-18 19:50:06,589 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:07,733 [Process: 0] Synchronize training processes
2024-08-18 19:50:07,734 [Process: 0] Evaluating...
2024-08-18 19:50:07,735 [Process: 0] EPOCH 280:
2024-08-18 19:50:07,737 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5250e-03, 4.8532e-02, 1.4636e-02,  ..., 4.7714e-03,
          4.3920e-02, 5.1955e-02],
         [2.5250e-03, 4.8532e-02, 1.4636e-02,  ..., 4.7714e-03,
          4.3920e-02, 3.7338e-02],
         [9.9242e-01, 5.4195e-02, 1.4636e-02,  ..., 9.8569e-01,
          4.7191e-02, 8.5061e-01],
         [2.5250e-03, 8.4874e-01, 9.5609e-01,  ..., 4.7714e-03,
          8.6497e-01, 6.0099e-02]],
        [[9.7115e-03, 4.6534e-04, 6.9548e-07,  ..., 1.1247e-02,
          6.6802e-03, 9.9997e-01],
         [9.7115e-03, 4.6534e-04, 6.9548e-07,  ..., 1.1247e-02,
          6.6802e-03, 1.1330e-05],
         [9.6811e-01, 4.6534e-04, 6.9548e-07,  ..., 9.6626e-01,
          9.7996e-01, 1.1330e-05],
         [1.2471e-02, 9.9860e-01, 1.0000e+00,  ..., 1.1247e-02,
          6.6802e-03, 1.1330e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 279:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9480e-01, 8.7515e-03, 3.4822e-03,  ..., 9.8114e-01,
          9.9725e-01, 5.8349e-03],
         [2.8664e-01, 9.6303e-03, 5.4042e-03,  ..., 5.8262e-03,
          9.1515e-04, 5.8349e-03],
         [9.8423e-03, 1.0318e-02, 3.4822e-03,  ..., 7.2053e-03,
          9.1515e-04, 5.8349e-03],
         [8.7131e-03, 9.7130e-01, 9.8763e-01,  ..., 5.8262e-03,
          9.1515e-04, 9.8250e-01]],
        [[9.9392e-01, 3.0364e-03, 1.5844e-03,  ..., 1.2436e-02,
          3.4640e-03, 4.6893e-04],
         [2.0272e-03, 3.0364e-03, 1.5844e-03,  ..., 1.2436e-02,
          3.4640e-03, 4.6893e-04],
         [2.0272e-03, 3.0364e-03, 1.5844e-03,  ..., 1.6724e-02,
          9.8961e-01, 9.9859e-01],
         [2.0272e-03, 9.9089e-01, 9.9525e-01,  ..., 9.5840e-01,
          3.4640e-03, 4.6893e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6987e-03, 1.0705e-01, 5.0989e-02,  ..., 7.5660e-03,
          1.2406e-01, 5.0362e-02],
         [4.6987e-03, 7.3489e-02, 8.4752e-02,  ..., 7.5660e-03,
          7.1533e-02, 3.2479e-02],
         [9.8590e-01, 6.8731e-02, 5.0142e-02,  ..., 9.7730e-01,
          7.8959e-02, 8.7741e-01],
         [4.6987e-03, 7.5073e-01, 8.1412e-01,  ..., 7.5660e-03,
          7.2544e-01, 3.9749e-02]],
        [[3.0004e-02, 1.3034e-04, 2.9315e-04,  ..., 5.2415e-03,
          1.3981e-02, 9.9991e-01],
         [3.0004e-02, 1.3034e-04, 2.9315e-04,  ..., 5.2415e-03,
          1.1257e-02, 3.0740e-05],
         [8.7630e-01, 1.3034e-04, 2.9315e-04,  ..., 9.8428e-01,
          9.6351e-01, 3.0740e-05],
         [6.3692e-02, 9.9961e-01, 9.9912e-01,  ..., 5.2415e-03,
          1.1257e-02, 3.0740e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 280:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3587e-01, 7.7283e-03, 1.3555e-02,  ..., 9.9024e-01,
          9.9910e-01, 9.4570e-03],
         [1.5641e-02, 7.7283e-03, 1.3555e-02,  ..., 4.4690e-03,
          2.9919e-04, 9.4570e-03],
         [3.2852e-02, 7.7283e-03, 1.8134e-02,  ..., 2.6478e-03,
          2.9919e-04, 1.0713e-02],
         [1.5641e-02, 9.7682e-01, 9.5476e-01,  ..., 2.6478e-03,
          2.9919e-04, 9.7037e-01]],
        [[9.9437e-01, 3.0281e-03, 5.3303e-03,  ..., 7.2010e-03,
          1.3273e-03, 7.0502e-04],
         [1.8757e-03, 3.0281e-03, 5.3303e-03,  ..., 7.2010e-03,
          1.3273e-03, 7.0502e-04],
         [1.8757e-03, 3.0281e-03, 5.3303e-03,  ..., 8.6563e-03,
          9.9602e-01, 9.9788e-01],
         [1.8757e-03, 9.9092e-01, 9.8401e-01,  ..., 9.7694e-01,
          1.3273e-03, 7.0502e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:50:08,883 [Process: 0] Synchronize training processes
2024-08-18 19:50:08,884 [Process: 0] Evaluating...
2024-08-18 19:50:08,886 [Process: 0] EPOCH 281:
2024-08-18 19:50:08,887 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3402e-03, 8.0648e-02, 3.9787e-02,  ..., 8.0481e-03,
          7.5604e-02, 1.1290e-02],
         [2.3402e-03, 7.3798e-02, 3.2401e-02,  ..., 8.0481e-03,
          5.2794e-02, 8.9260e-03],
         [9.9298e-01, 1.1649e-01, 3.2401e-02,  ..., 9.7568e-01,
          5.2794e-02, 9.7086e-01],
         [2.3402e-03, 7.2906e-01, 8.9541e-01,  ..., 8.2216e-03,
          8.1881e-01, 8.9260e-03]],
        [[1.0597e-02, 1.0985e-04, 6.8564e-04,  ..., 1.5102e-02,
          7.2707e-03, 9.9985e-01],
         [1.0597e-02, 1.0985e-04, 6.8564e-04,  ..., 1.2830e-02,
          7.2707e-03, 4.9228e-05],
         [9.6027e-01, 1.0985e-04, 6.8564e-04,  ..., 9.5924e-01,
          9.7819e-01, 4.9228e-05],
         [1.8536e-02, 9.9967e-01, 9.9794e-01,  ..., 1.2830e-02,
          7.2707e-03, 4.9228e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 281:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6751e-01, 1.1250e-02, 4.7565e-03,  ..., 9.9695e-01,
          9.9780e-01, 6.0296e-03],
         [1.3187e-02, 1.1250e-02, 4.7565e-03,  ..., 1.0181e-03,
          7.3172e-04, 6.0296e-03],
         [1.2602e-02, 1.1630e-02, 4.7565e-03,  ..., 1.0181e-03,
          7.3172e-04, 6.0296e-03],
         [6.7022e-03, 9.6587e-01, 9.8573e-01,  ..., 1.0181e-03,
          7.3172e-04, 9.8191e-01]],
        [[9.9046e-01, 1.1401e-02, 1.5256e-02,  ..., 7.0665e-03,
          7.7246e-04, 3.8821e-04],
         [3.1793e-03, 1.2631e-02, 1.5256e-02,  ..., 7.0665e-03,
          7.7246e-04, 3.8821e-04],
         [3.1793e-03, 1.1401e-02, 1.8603e-02,  ..., 8.5090e-03,
          9.9768e-01, 9.9884e-01],
         [3.1793e-03, 9.6457e-01, 9.5088e-01,  ..., 9.7736e-01,
          7.7246e-04, 3.8821e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9328e-03, 8.2902e-02, 1.4247e-02,  ..., 3.9441e-03,
          6.1700e-02, 3.0249e-02],
         [8.9328e-03, 6.1017e-02, 1.4247e-02,  ..., 3.9441e-03,
          1.4292e-01, 1.6651e-02],
         [9.7320e-01, 6.8140e-02, 1.4247e-02,  ..., 9.8817e-01,
          6.3671e-02, 9.3645e-01],
         [8.9328e-03, 7.8794e-01, 9.5726e-01,  ..., 3.9441e-03,
          7.3171e-01, 1.6651e-02]],
        [[4.5861e-03, 2.4880e-06, 1.2544e-04,  ..., 7.2750e-03,
          1.4849e-02, 9.9696e-01],
         [4.5861e-03, 2.4880e-06, 1.2544e-04,  ..., 7.2750e-03,
          1.4849e-02, 1.0150e-03],
         [9.8624e-01, 2.4880e-06, 1.2544e-04,  ..., 9.7818e-01,
          9.5317e-01, 1.0150e-03],
         [4.5861e-03, 9.9999e-01, 9.9962e-01,  ..., 7.2750e-03,
          1.7131e-02, 1.0150e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 282:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:10,040 [Process: 0] Synchronize training processes
2024-08-18 19:50:10,040 [Process: 0] Evaluating...
2024-08-18 19:50:10,066 [Process: 0] EPOCH 282:
2024-08-18 19:50:10,069 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:11,217 [Process: 0] Synchronize training processes
2024-08-18 19:50:11,217 [Process: 0] Evaluating...
2024-08-18 19:50:11,219 [Process: 0] EPOCH 283:
2024-08-18 19:50:11,221 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8737e-01, 5.3879e-03, 4.0253e-03,  ..., 9.9912e-01,
          9.8900e-01, 8.9121e-03],
         [4.1757e-03, 5.3879e-03, 4.0253e-03,  ..., 2.9422e-04,
          3.6653e-03, 8.9121e-03],
         [4.0469e-03, 5.5197e-03, 4.0253e-03,  ..., 2.9422e-04,
          3.6653e-03, 8.9121e-03],
         [4.4087e-03, 9.8370e-01, 9.8792e-01,  ..., 2.9422e-04,
          3.6653e-03, 9.7326e-01]],
        [[9.9874e-01, 7.4947e-03, 5.9552e-03,  ..., 3.7180e-03,
          1.0606e-03, 7.5568e-04],
         [4.2103e-04, 7.4947e-03, 6.0981e-03,  ..., 3.7180e-03,
          1.0606e-03, 7.5568e-04],
         [4.2103e-04, 7.4947e-03, 5.9552e-03,  ..., 3.7180e-03,
          9.9682e-01, 9.9773e-01],
         [4.2103e-04, 9.7752e-01, 9.8199e-01,  ..., 9.8885e-01,
          1.0606e-03, 7.5568e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9148e-03, 5.3590e-02, 6.0133e-03,  ..., 1.0490e-02,
          4.3720e-02, 1.4033e-02],
         [6.9148e-03, 1.2271e-01, 6.0133e-03,  ..., 1.0490e-02,
          5.5171e-02, 1.1691e-02],
         [9.7914e-01, 4.6850e-02, 6.0133e-03,  ..., 9.6743e-01,
          4.3270e-02, 9.6258e-01],
         [7.0342e-03, 7.7685e-01, 9.8196e-01,  ..., 1.1588e-02,
          8.5784e-01, 1.1691e-02]],
        [[1.3000e-03, 3.6530e-05, 9.7902e-06,  ..., 1.1259e-02,
          1.9639e-03, 9.9985e-01],
         [1.3000e-03, 3.6530e-05, 9.7902e-06,  ..., 1.1259e-02,
          1.9639e-03, 4.9151e-05],
         [9.9610e-01, 3.6530e-05, 9.7902e-06,  ..., 9.6524e-01,
          9.9411e-01, 4.9151e-05],
         [1.3000e-03, 9.9989e-01, 9.9997e-01,  ..., 1.2237e-02,
          1.9639e-03, 4.9151e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 283:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7958e-01, 2.0467e-03, 5.8427e-03,  ..., 9.9631e-01,
          9.6487e-01, 8.2901e-03],
         [5.9191e-01, 2.0467e-03, 5.7755e-03,  ..., 1.2312e-03,
          9.9539e-03, 5.8397e-03],
         [1.4253e-02, 2.0467e-03, 5.7755e-03,  ..., 1.2312e-03,
          1.2547e-02, 5.8397e-03],
         [1.4253e-02, 9.9386e-01, 9.8261e-01,  ..., 1.2312e-03,
          1.2631e-02, 9.8003e-01]],
        [[9.9626e-01, 2.5954e-03, 2.6711e-03,  ..., 4.2420e-03,
          9.7860e-04, 1.0982e-03],
         [1.2451e-03, 2.5954e-03, 2.6711e-03,  ..., 4.2420e-03,
          9.7860e-04, 1.0982e-03],
         [1.2451e-03, 2.5954e-03, 2.6711e-03,  ..., 4.2420e-03,
          9.9706e-01, 9.9671e-01],
         [1.2451e-03, 9.9221e-01, 9.9199e-01,  ..., 9.8727e-01,
          9.7860e-04, 1.0982e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.5158e-03, 1.4732e-02, 1.3216e-02,  ..., 4.1473e-03,
          2.1796e-02, 1.7182e-02],
         [7.5158e-03, 1.4732e-02, 1.3216e-02,  ..., 4.1473e-03,
          2.1796e-02, 1.6314e-02],
         [9.7745e-01, 1.4732e-02, 1.3216e-02,  ..., 9.8756e-01,
          2.1796e-02, 9.5019e-01],
         [7.5158e-03, 9.5580e-01, 9.6035e-01,  ..., 4.1473e-03,
          9.3461e-01, 1.6314e-02]],
        [[3.3907e-03, 9.8976e-05, 2.2666e-03,  ..., 6.1453e-03,
          1.8446e-03, 9.9967e-01],
         [3.3907e-03, 9.8976e-05, 2.2666e-03,  ..., 6.1453e-03,
          1.8446e-03, 1.0974e-04],
         [9.8983e-01, 9.8976e-05, 2.2666e-03,  ..., 9.8156e-01,
          9.9447e-01, 1.0974e-04],
         [3.3907e-03, 9.9970e-01, 9.9320e-01,  ..., 6.1453e-03,
          1.8446e-03, 1.0974e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 284:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:12,364 [Process: 0] Synchronize training processes
2024-08-18 19:50:12,364 [Process: 0] Evaluating...
2024-08-18 19:50:12,366 [Process: 0] EPOCH 284:
2024-08-18 19:50:12,368 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:13,513 [Process: 0] Synchronize training processes
2024-08-18 19:50:13,514 [Process: 0] Evaluating...
2024-08-18 19:50:13,516 [Process: 0] EPOCH 285:
2024-08-18 19:50:13,517 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9244e-01, 3.8669e-02, 6.3670e-03,  ..., 9.9876e-01,
          9.9163e-01, 4.3709e-02],
         [4.8751e-01, 2.1021e-02, 6.3670e-03,  ..., 4.1379e-04,
          2.7884e-03, 2.8662e-02],
         [1.0026e-02, 2.5959e-02, 6.3670e-03,  ..., 4.1379e-04,
          2.7884e-03, 3.6923e-02],
         [1.0026e-02, 9.1435e-01, 9.8090e-01,  ..., 4.1379e-04,
          2.7884e-03, 8.9071e-01]],
        [[9.8921e-01, 5.9604e-03, 6.3163e-03,  ..., 1.2110e-02,
          3.3276e-03, 2.3386e-03],
         [2.9874e-03, 5.8705e-03, 6.1808e-03,  ..., 1.0331e-02,
          4.0575e-03, 2.3386e-03],
         [4.8150e-03, 5.8705e-03, 6.3600e-03,  ..., 1.0753e-02,
          9.8929e-01, 9.9298e-01],
         [2.9874e-03, 9.8230e-01, 9.8114e-01,  ..., 9.6681e-01,
          3.3276e-03, 2.3386e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3648e-03, 8.3719e-03, 1.3251e-03,  ..., 1.3569e-02,
          6.8304e-03, 2.2922e-02],
         [2.3648e-03, 8.3719e-03, 1.3251e-03,  ..., 1.3569e-02,
          6.8304e-03, 1.8157e-02],
         [9.9291e-01, 8.3719e-03, 1.3251e-03,  ..., 9.5729e-01,
          6.8304e-03, 9.4073e-01],
         [2.3648e-03, 9.7488e-01, 9.9602e-01,  ..., 1.5575e-02,
          9.7951e-01, 1.8189e-02]],
        [[9.5790e-04, 2.7712e-05, 4.1624e-06,  ..., 5.5146e-03,
          5.7338e-03, 9.9993e-01],
         [9.5790e-04, 2.7712e-05, 4.1624e-06,  ..., 5.5146e-03,
          5.7338e-03, 2.1941e-05],
         [9.9713e-01, 2.7712e-05, 4.1624e-06,  ..., 9.8346e-01,
          9.8280e-01, 2.1941e-05],
         [9.5790e-04, 9.9992e-01, 9.9999e-01,  ..., 5.5146e-03,
          5.7338e-03, 2.1941e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 285:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7212e-01, 6.7910e-03, 4.2569e-02,  ..., 9.9862e-01,
          9.9565e-01, 3.9109e-03],
         [5.0376e-01, 6.5247e-03, 2.8940e-02,  ..., 4.6120e-04,
          1.6734e-03, 3.9133e-03],
         [1.2058e-02, 6.5247e-03, 4.2830e-02,  ..., 4.6120e-04,
          1.3401e-03, 3.9109e-03],
         [1.2058e-02, 9.8016e-01, 8.8566e-01,  ..., 4.6120e-04,
          1.3401e-03, 9.8827e-01]],
        [[9.9708e-01, 3.5809e-03, 3.2823e-03,  ..., 1.2573e-02,
          1.6319e-03, 1.5566e-03],
         [9.3802e-04, 3.5809e-03, 3.2823e-03,  ..., 1.2573e-02,
          1.6319e-03, 1.5566e-03],
         [1.0418e-03, 3.5809e-03, 3.2823e-03,  ..., 1.8093e-02,
          9.9510e-01, 9.9533e-01],
         [9.3802e-04, 9.8926e-01, 9.9015e-01,  ..., 9.5676e-01,
          1.6319e-03, 1.5566e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-18 19:50:14,661 [Process: 0] Synchronize training processes
2024-08-18 19:50:14,661 [Process: 0] Evaluating...
2024-08-18 19:50:14,663 [Process: 0] EPOCH 286:
2024-08-18 19:50:14,665 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:15,812 [Process: 0] Synchronize training processes
2024-08-18 19:50:15,812 [Process: 0] Evaluating...
2024-08-18 19:50:15,814 [Process: 0] EPOCH 287:
2024-08-18 19:50:15,815 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.1009e-03, 1.4580e-02, 7.2542e-03,  ..., 2.3108e-03,
          1.7200e-02, 5.7778e-02],
         [5.1009e-03, 2.7927e-02, 7.2542e-03,  ..., 2.3108e-03,
          2.3855e-02, 4.7134e-02],
         [9.8470e-01, 1.4580e-02, 7.2542e-03,  ..., 9.9307e-01,
          1.7200e-02, 8.3362e-01],
         [5.1009e-03, 9.4291e-01, 9.7824e-01,  ..., 2.3108e-03,
          9.4174e-01, 6.1468e-02]],
        [[3.1374e-03, 6.5855e-06, 3.7707e-05,  ..., 7.6498e-03,
          3.6898e-03, 9.9991e-01],
         [3.1374e-03, 6.5855e-06, 3.7707e-05,  ..., 7.6498e-03,
          3.6898e-03, 3.0260e-05],
         [9.9059e-01, 6.5855e-06, 3.7707e-05,  ..., 9.7705e-01,
          9.8893e-01, 3.0260e-05],
         [3.1374e-03, 9.9998e-01, 9.9989e-01,  ..., 7.6498e-03,
          3.6898e-03, 3.0260e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 286:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8509e-01, 7.5612e-03, 1.0920e-02,  ..., 9.7274e-01,
          9.9514e-01, 2.9961e-03],
         [4.9705e-03, 7.5116e-03, 1.0233e-02,  ..., 8.0696e-03,
          1.6188e-03, 2.9961e-03],
         [4.9705e-03, 7.5116e-03, 1.2276e-02,  ..., 1.1121e-02,
          1.6188e-03, 2.9961e-03],
         [4.9705e-03, 9.7742e-01, 9.6657e-01,  ..., 8.0696e-03,
          1.6188e-03, 9.9101e-01]],
        [[9.9171e-01, 5.8304e-03, 4.9022e-03,  ..., 3.8303e-03,
          8.5386e-03, 2.1222e-04],
         [2.5791e-03, 5.8304e-03, 4.9022e-03,  ..., 3.8303e-03,
          8.5386e-03, 2.1222e-04],
         [3.1301e-03, 6.1338e-03, 4.9022e-03,  ..., 3.8303e-03,
          9.7438e-01, 9.9936e-01],
         [2.5791e-03, 9.8221e-01, 9.8529e-01,  ..., 9.8851e-01,
          8.5386e-03, 2.1222e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2549e-02, 1.5467e-02, 1.4963e-03,  ..., 1.0849e-02,
          1.8661e-02, 1.7566e-02],
         [1.2549e-02, 1.5585e-02, 1.4963e-03,  ..., 1.0849e-02,
          1.9747e-02, 1.4543e-02],
         [9.6235e-01, 1.5467e-02, 1.4963e-03,  ..., 9.6679e-01,
          1.8661e-02, 9.5335e-01],
         [1.2549e-02, 9.5348e-01, 9.9551e-01,  ..., 1.1510e-02,
          9.4293e-01, 1.4543e-02]],
        [[6.3328e-04, 1.9472e-05, 3.4922e-04,  ..., 6.9983e-03,
          8.1422e-03, 9.9992e-01],
         [6.3328e-04, 1.9472e-05, 3.4922e-04,  ..., 6.9983e-03,
          8.1422e-03, 2.6835e-05],
         [9.9810e-01, 1.9472e-05, 3.4922e-04,  ..., 9.7901e-01,
          9.7557e-01, 2.6835e-05],
         [6.3328e-04, 9.9994e-01, 9.9895e-01,  ..., 6.9983e-03,
          8.1422e-03, 2.6835e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 287:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8760e-01, 7.4118e-03, 5.0622e-03,  ..., 9.9753e-01,
          9.9488e-01, 7.2666e-03],
         [1.6273e-01, 7.2397e-03, 5.0622e-03,  ..., 8.2387e-04,
          1.7056e-03, 5.9481e-03],
         [2.3399e-02, 7.2397e-03, 5.1116e-03,  ..., 8.2387e-04,
          1.7056e-03, 5.9481e-03],
         [2.6271e-02, 9.7811e-01, 9.8476e-01,  ..., 8.2387e-04,
          1.7056e-03, 9.8084e-01]],
        [[9.9676e-01, 7.5788e-03, 2.4714e-03,  ..., 4.6321e-03,
          4.4623e-03, 6.5854e-05],
         [9.5583e-04, 7.5788e-03, 2.4714e-03,  ..., 4.7912e-03,
          4.4623e-03, 6.5854e-05],
         [1.3268e-03, 9.3501e-03, 2.4714e-03,  ..., 4.7707e-03,
          9.8661e-01, 9.9980e-01],
         [9.5583e-04, 9.7549e-01, 9.9259e-01,  ..., 9.8581e-01,
          4.4623e-03, 6.5854e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:50:16,956 [Process: 0] Synchronize training processes
2024-08-18 19:50:16,956 [Process: 0] Evaluating...
2024-08-18 19:50:16,958 [Process: 0] EPOCH 288:
2024-08-18 19:50:16,960 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1206e-03, 7.6696e-03, 1.4292e-04,  ..., 1.7805e-02,
          3.2154e-03, 2.1203e-02],
         [3.1206e-03, 1.0731e-02, 1.4292e-04,  ..., 1.7805e-02,
          3.2154e-03, 1.6471e-02],
         [9.9064e-01, 7.6696e-03, 1.4292e-04,  ..., 9.4233e-01,
          3.2154e-03, 9.4585e-01],
         [3.1206e-03, 9.7393e-01, 9.9957e-01,  ..., 2.2062e-02,
          9.9035e-01, 1.6471e-02]],
        [[1.3038e-02, 1.1679e-04, 1.9042e-03,  ..., 5.1698e-03,
          8.4095e-03, 9.9963e-01],
         [1.3038e-02, 1.1679e-04, 1.9042e-03,  ..., 5.1698e-03,
          8.4095e-03, 1.2186e-04],
         [9.5407e-01, 1.1679e-04, 1.9042e-03,  ..., 9.8449e-01,
          9.7477e-01, 1.2186e-04],
         [1.9850e-02, 9.9965e-01, 9.9429e-01,  ..., 5.1698e-03,
          8.4095e-03, 1.2186e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 288:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.4076e-01, 1.3283e-02, 1.0539e-02,  ..., 9.9584e-01,
          9.6273e-01, 1.0355e-02],
         [1.9857e-01, 9.9055e-03, 7.3138e-03,  ..., 1.3869e-03,
          2.2597e-02, 9.4656e-03],
         [3.0334e-02, 1.0769e-02, 8.0014e-03,  ..., 1.3869e-03,
          7.3361e-03, 9.4656e-03],
         [3.0334e-02, 9.6604e-01, 9.7415e-01,  ..., 1.3869e-03,
          7.3361e-03, 9.7071e-01]],
        [[9.9843e-01, 5.0645e-03, 2.5059e-03,  ..., 7.3878e-03,
          3.7377e-03, 3.2631e-04],
         [4.7730e-04, 4.8164e-03, 2.5059e-03,  ..., 7.3878e-03,
          3.7377e-03, 3.2631e-04],
         [6.1723e-04, 4.8164e-03, 2.5059e-03,  ..., 7.9746e-03,
          9.8879e-01, 9.9902e-01],
         [4.7730e-04, 9.8530e-01, 9.9248e-01,  ..., 9.7725e-01,
          3.7377e-03, 3.2631e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4945e-02, 9.6274e-03, 2.5947e-03,  ..., 5.0357e-03,
          5.1277e-03, 1.4242e-02],
         [1.4945e-02, 9.6274e-03, 2.5947e-03,  ..., 5.0357e-03,
          5.1277e-03, 9.7456e-03],
         [9.5419e-01, 9.6274e-03, 2.5947e-03,  ..., 9.8489e-01,
          5.1277e-03, 9.6627e-01],
         [1.5921e-02, 9.7112e-01, 9.9222e-01,  ..., 5.0357e-03,
          9.8462e-01, 9.7456e-03]],
        [[1.4175e-02, 1.5821e-05, 1.3439e-04,  ..., 1.6148e-02,
          1.2712e-02, 9.9944e-01],
         [1.4175e-02, 2.5567e-05, 1.3439e-04,  ..., 1.6148e-02,
          9.5306e-03, 1.8521e-04],
         [9.4325e-01, 1.5821e-05, 1.3439e-04,  ..., 9.5001e-01,
          9.6823e-01, 1.8521e-04],
         [2.8401e-02, 9.9994e-01, 9.9960e-01,  ..., 1.7698e-02,
          9.5306e-03, 1.8521e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 289:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-18 19:50:18,112 [Process: 0] Synchronize training processes
2024-08-18 19:50:18,112 [Process: 0] Evaluating...
2024-08-18 19:50:18,114 [Process: 0] EPOCH 289:
2024-08-18 19:50:18,116 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:19,262 [Process: 0] Synchronize training processes
2024-08-18 19:50:19,262 [Process: 0] Evaluating...
2024-08-18 19:50:19,264 [Process: 0] EPOCH 290:
2024-08-18 19:50:19,265 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.6276e-01, 4.4918e-03, 1.3157e-03,  ..., 9.9811e-01,
          9.9630e-01, 8.2727e-03],
         [2.5525e-01, 4.4918e-03, 1.3157e-03,  ..., 6.2941e-04,
          1.7300e-03, 9.3174e-03],
         [3.3385e-02, 4.5330e-03, 1.3157e-03,  ..., 6.2941e-04,
          9.8678e-04, 9.0954e-03],
         [4.8606e-02, 9.8648e-01, 9.9605e-01,  ..., 6.2941e-04,
          9.8678e-04, 9.7331e-01]],
        [[9.8365e-01, 1.1438e-02, 8.2061e-03,  ..., 1.7020e-02,
          1.1087e-03, 1.3329e-03],
         [4.5716e-03, 1.1438e-02, 8.2061e-03,  ..., 1.7020e-02,
          1.1087e-03, 1.3329e-03],
         [7.2111e-03, 1.4873e-02, 1.0040e-02,  ..., 2.3972e-02,
          9.9667e-01, 9.9600e-01],
         [4.5716e-03, 9.6225e-01, 9.7355e-01,  ..., 9.4199e-01,
          1.1087e-03, 1.3329e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.3299e-03, 1.5252e-02, 1.0907e-04,  ..., 6.4930e-03,
          2.1437e-02, 4.1466e-02],
         [6.3299e-03, 2.5349e-02, 1.0907e-04,  ..., 6.4930e-03,
          1.6652e-02, 2.5680e-02],
         [9.8101e-01, 1.5252e-02, 1.0907e-04,  ..., 9.8052e-01,
          1.6652e-02, 9.0717e-01],
         [6.3299e-03, 9.4415e-01, 9.9967e-01,  ..., 6.4930e-03,
          9.4526e-01, 2.5680e-02]],
        [[1.0965e-02, 3.8318e-04, 8.2568e-06,  ..., 6.6330e-03,
          2.8025e-03, 9.9799e-01],
         [1.0965e-02, 3.8318e-04, 8.2568e-06,  ..., 6.6330e-03,
          2.8025e-03, 6.6908e-04],
         [9.6294e-01, 3.8318e-04, 8.2568e-06,  ..., 9.8010e-01,
          9.9159e-01, 6.6908e-04],
         [1.5135e-02, 9.9885e-01, 9.9998e-01,  ..., 6.6330e-03,
          2.8025e-03, 6.6908e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 290:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9609e-01, 8.3827e-03, 6.1616e-03,  ..., 9.9969e-01,
          9.9734e-01, 4.7776e-03],
         [4.2298e-02, 8.3827e-03, 6.1616e-03,  ..., 1.0240e-04,
          8.8583e-04, 4.2734e-03],
         [3.0911e-02, 9.0148e-03, 6.1616e-03,  ..., 1.0240e-04,
          8.8583e-04, 4.2734e-03],
         [3.0704e-02, 9.7422e-01, 9.8152e-01,  ..., 1.0240e-04,
          8.8583e-04, 9.8668e-01]],
        [[9.9667e-01, 8.0137e-03, 1.0390e-02,  ..., 4.7284e-02,
          1.6458e-03, 7.9556e-04],
         [1.1108e-03, 8.0137e-03, 1.0390e-02,  ..., 4.0769e-02,
          1.6458e-03, 7.9556e-04],
         [1.1108e-03, 9.1851e-03, 1.4035e-02,  ..., 8.2891e-02,
          9.9506e-01, 9.9761e-01],
         [1.1108e-03, 9.7479e-01, 9.6519e-01,  ..., 8.2906e-01,
          1.6458e-03, 7.9556e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.0868e-03, 4.8571e-03, 9.0050e-04,  ..., 6.5014e-03,
          2.2088e-03, 2.3392e-02],
         [8.0868e-03, 4.8571e-03, 9.0050e-04,  ..., 6.5014e-03,
          2.2088e-03, 1.9878e-02],
         [9.7574e-01, 4.8571e-03, 9.0050e-04,  ..., 9.8050e-01,
          2.2088e-03, 9.3489e-01],
         [8.0868e-03, 9.8543e-01, 9.9730e-01,  ..., 6.5014e-03,
          9.9337e-01, 2.1841e-02]],
        [[1.0516e-02, 3.1960e-04, 1.0883e-03,  ..., 1.1313e-02,
          7.1111e-03, 9.9401e-01],
         [1.0516e-02, 3.1960e-04, 2.0836e-03,  ..., 1.1313e-02,
          7.1111e-03, 1.9962e-03],
         [9.6734e-01, 3.1960e-04, 1.0883e-03,  ..., 9.6606e-01,
          9.7867e-01, 1.9962e-03],
         [1.1630e-02, 9.9904e-01, 9.9574e-01,  ..., 1.1313e-02,
          7.1111e-03, 1.9962e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 291:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:20,412 [Process: 0] Synchronize training processes
2024-08-18 19:50:20,412 [Process: 0] Evaluating...
2024-08-18 19:50:20,414 [Process: 0] EPOCH 291:
2024-08-18 19:50:20,416 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:21,563 [Process: 0] Synchronize training processes
2024-08-18 19:50:21,563 [Process: 0] Evaluating...
2024-08-18 19:50:21,570 [Process: 0] EPOCH 292:
2024-08-18 19:50:21,572 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3465e-03, 3.0848e-03, 3.5832e-03,  ..., 9.8803e-01,
          9.9596e-01, 2.8665e-03],
         [4.3465e-03, 3.0848e-03, 3.5832e-03,  ..., 4.3267e-03,
          1.3473e-03, 2.8665e-03],
         [9.8696e-01, 3.0848e-03, 3.5832e-03,  ..., 3.8220e-03,
          1.3473e-03, 2.8665e-03],
         [4.3465e-03, 9.9075e-01, 9.8925e-01,  ..., 3.8220e-03,
          1.3473e-03, 9.9140e-01]],
        [[9.9840e-01, 1.0169e-02, 3.9545e-03,  ..., 1.8112e-02,
          7.9056e-04, 2.2229e-03],
         [5.3373e-04, 1.0169e-02, 3.9545e-03,  ..., 1.8112e-02,
          7.9056e-04, 2.2229e-03],
         [5.3373e-04, 1.1213e-02, 4.1158e-03,  ..., 3.5895e-02,
          9.9763e-01, 9.9333e-01],
         [5.3373e-04, 9.6845e-01, 9.8798e-01,  ..., 9.2788e-01,
          7.9056e-04, 2.2229e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.2459e-03, 6.3682e-03, 3.0873e-04,  ..., 1.5016e-02,
          6.9221e-03, 1.7604e-02],
         [4.2459e-03, 7.5885e-03, 3.0873e-04,  ..., 1.5016e-02,
          6.9221e-03, 1.3270e-02],
         [9.8726e-01, 6.3682e-03, 3.0873e-04,  ..., 9.5325e-01,
          6.9221e-03, 9.5586e-01],
         [4.2459e-03, 9.7967e-01, 9.9907e-01,  ..., 1.6715e-02,
          9.7923e-01, 1.3270e-02]],
        [[8.9177e-03, 2.4176e-04, 1.9013e-04,  ..., 1.4041e-02,
          5.1812e-03, 9.9897e-01],
         [8.9177e-03, 2.4176e-04, 1.9013e-04,  ..., 1.1421e-02,
          5.1812e-03, 3.4263e-04],
         [9.7066e-01, 2.4176e-04, 1.9013e-04,  ..., 9.6312e-01,
          9.8446e-01, 3.4263e-04],
         [1.1502e-02, 9.9927e-01, 9.9943e-01,  ..., 1.1421e-02,
          5.1812e-03, 3.4263e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 292:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0837e-01, 7.5505e-03, 2.5926e-03,  ..., 9.9639e-01,
          9.7713e-01, 4.8263e-03],
         [6.4438e-01, 7.5505e-03, 2.5926e-03,  ..., 1.2047e-03,
          1.5237e-02, 4.8263e-03],
         [2.3625e-02, 8.5786e-03, 2.5926e-03,  ..., 1.2047e-03,
          3.8160e-03, 4.8263e-03],
         [2.3625e-02, 9.7632e-01, 9.9222e-01,  ..., 1.2047e-03,
          3.8160e-03, 9.8552e-01]],
        [[9.7404e-01, 6.4219e-03, 2.5991e-02,  ..., 1.4937e-02,
          1.6735e-04, 9.4343e-04],
         [8.2573e-03, 6.4219e-03, 2.0141e-02,  ..., 1.5236e-02,
          1.6735e-04, 9.4343e-04],
         [8.4402e-03, 7.0225e-03, 2.5436e-02,  ..., 1.9717e-02,
          9.9950e-01, 9.9717e-01],
         [9.2630e-03, 9.8013e-01, 9.2843e-01,  ..., 9.5011e-01,
          1.6735e-04, 9.4343e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-18 19:50:22,713 [Process: 0] Synchronize training processes
2024-08-18 19:50:22,714 [Process: 0] Evaluating...
2024-08-18 19:50:22,715 [Process: 0] EPOCH 293:
2024-08-18 19:50:22,717 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:23,861 [Process: 0] Synchronize training processes
2024-08-18 19:50:23,861 [Process: 0] Evaluating...
2024-08-18 19:50:23,863 [Process: 0] EPOCH 294:
2024-08-18 19:50:23,865 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1212e-02, 4.5490e-02, 1.1921e-03,  ..., 1.1343e-02,
          7.1820e-03, 1.1469e-02],
         [1.1212e-02, 3.8187e-02, 1.1921e-03,  ..., 1.1343e-02,
          7.1820e-03, 9.2330e-03],
         [9.6636e-01, 3.6910e-02, 1.1921e-03,  ..., 9.6596e-01,
          7.1820e-03, 9.7006e-01],
         [1.1212e-02, 8.7941e-01, 9.9642e-01,  ..., 1.1355e-02,
          9.7845e-01, 9.2330e-03]],
        [[1.8222e-02, 1.3897e-03, 8.5052e-05,  ..., 1.2660e-02,
          9.4052e-03, 9.9876e-01],
         [1.7209e-02, 1.3897e-03, 8.5052e-05,  ..., 1.2660e-02,
          9.4052e-03, 4.1310e-04],
         [9.4441e-01, 1.3897e-03, 8.5052e-05,  ..., 9.6202e-01,
          9.7178e-01, 4.1310e-04],
         [2.0156e-02, 9.9583e-01, 9.9974e-01,  ..., 1.2660e-02,
          9.4052e-03, 4.1310e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 293:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9145e-01, 1.9628e-03, 2.4102e-03,  ..., 9.9936e-01,
          9.9550e-01, 2.3480e-02],
         [2.9494e-01, 1.9628e-03, 2.4102e-03,  ..., 2.1465e-04,
          1.5010e-03, 3.4446e-02],
         [6.8058e-03, 1.9628e-03, 2.4102e-03,  ..., 2.1465e-04,
          1.5010e-03, 2.9071e-02],
         [6.8058e-03, 9.9411e-01, 9.9277e-01,  ..., 2.1465e-04,
          1.5010e-03, 9.1300e-01]],
        [[7.2449e-01, 1.7004e-02, 5.5039e-02,  ..., 2.1537e-02,
          1.5461e-03, 1.5364e-03],
         [5.3856e-02, 1.7004e-02, 4.6131e-02,  ..., 1.8741e-02,
          1.5461e-03, 1.5364e-03],
         [1.0945e-01, 2.7748e-02, 7.1444e-02,  ..., 3.6615e-02,
          9.9536e-01, 9.9539e-01],
         [1.1221e-01, 9.3824e-01, 8.2739e-01,  ..., 9.2311e-01,
          1.5461e-03, 1.5364e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8161e-02, 2.2323e-02, 3.0698e-04,  ..., 1.6182e-02,
          9.8028e-03, 1.4433e-02],
         [3.2419e-02, 2.2323e-02, 3.0698e-04,  ..., 1.6182e-02,
          7.6867e-03, 9.0305e-03],
         [8.9277e-01, 2.2323e-02, 3.0698e-04,  ..., 9.5145e-01,
          7.6867e-03, 9.6751e-01],
         [3.6653e-02, 9.3303e-01, 9.9908e-01,  ..., 1.6182e-02,
          9.7482e-01, 9.0305e-03]],
        [[1.9637e-02, 7.1158e-05, 2.0288e-04,  ..., 1.9032e-02,
          5.1128e-03, 9.9879e-01],
         [1.7964e-02, 7.1158e-05, 2.1726e-04,  ..., 1.6248e-02,
          5.1128e-03, 4.0436e-04],
         [9.4002e-01, 7.1158e-05, 2.0288e-04,  ..., 9.4847e-01,
          9.8466e-01, 4.0436e-04],
         [2.2374e-02, 9.9979e-01, 9.9938e-01,  ..., 1.6248e-02,
          5.1128e-03, 4.0436e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 294:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8342e-01, 4.3345e-03, 2.8361e-02,  ..., 9.9877e-01,
          9.9783e-01, 3.8034e-03],
         [5.3211e-03, 4.3345e-03, 1.7945e-02,  ..., 4.0960e-04,
          7.2490e-04, 3.8034e-03],
         [5.9334e-03, 4.3345e-03, 2.2504e-02,  ..., 4.0960e-04,
          7.2490e-04, 3.8034e-03],
         [5.3211e-03, 9.8700e-01, 9.3119e-01,  ..., 4.0960e-04,
          7.2490e-04, 9.8859e-01]],
        [[9.0661e-01, 1.4613e-02, 2.3580e-02,  ..., 9.9444e-03,
          7.6481e-04, 1.2695e-03],
         [2.5089e-02, 1.5699e-02, 2.8788e-02,  ..., 9.9444e-03,
          7.6481e-04, 1.2695e-03],
         [3.8958e-02, 2.1125e-02, 3.6069e-02,  ..., 1.1114e-02,
          9.9771e-01, 9.9619e-01],
         [2.9341e-02, 9.4856e-01, 9.1156e-01,  ..., 9.6900e-01,
          7.6481e-04, 1.2695e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:50:25,009 [Process: 0] Synchronize training processes
2024-08-18 19:50:25,010 [Process: 0] Evaluating...
2024-08-18 19:50:25,011 [Process: 0] EPOCH 295:
2024-08-18 19:50:25,014 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.4738e-03, 2.2636e-03, 7.3345e-04,  ..., 2.6098e-02,
          2.6493e-03, 1.2750e-02],
         [6.4738e-03, 2.2636e-03, 7.3345e-04,  ..., 2.5195e-02,
          2.6493e-03, 1.2750e-02],
         [9.8058e-01, 2.2636e-03, 7.3345e-04,  ..., 9.1640e-01,
          2.6493e-03, 9.6175e-01],
         [6.4738e-03, 9.9321e-01, 9.9780e-01,  ..., 3.2310e-02,
          9.9205e-01, 1.2750e-02]],
        [[7.1627e-03, 1.8321e-04, 7.0237e-05,  ..., 3.7783e-02,
          8.4272e-03, 9.9974e-01],
         [7.1627e-03, 1.8321e-04, 1.2202e-04,  ..., 2.9455e-02,
          8.4272e-03, 8.7422e-05],
         [9.7851e-01, 1.8321e-04, 7.0237e-05,  ..., 8.9895e-01,
          9.7472e-01, 8.7422e-05],
         [7.1627e-03, 9.9945e-01, 9.9974e-01,  ..., 3.3808e-02,
          8.4272e-03, 8.7422e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 295:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7056e-01, 6.0219e-03, 2.9925e-03,  ..., 9.9698e-01,
          9.8315e-01, 4.9645e-03],
         [8.5750e-03, 6.6176e-03, 2.9925e-03,  ..., 1.0058e-03,
          5.6164e-03, 4.9645e-03],
         [1.2286e-02, 6.0219e-03, 2.9925e-03,  ..., 1.0058e-03,
          5.6164e-03, 4.9645e-03],
         [8.5750e-03, 9.8134e-01, 9.9102e-01,  ..., 1.0058e-03,
          5.6164e-03, 9.8511e-01]],
        [[9.8357e-01, 4.4543e-03, 1.1778e-02,  ..., 5.4599e-03,
          4.3764e-04, 3.7214e-03],
         [4.7147e-03, 4.8639e-03, 1.1778e-02,  ..., 4.8612e-03,
          4.3764e-04, 3.7214e-03],
         [6.9979e-03, 4.4543e-03, 1.5413e-02,  ..., 4.8612e-03,
          9.9869e-01, 9.8884e-01],
         [4.7147e-03, 9.8623e-01, 9.6103e-01,  ..., 9.8482e-01,
          4.3764e-04, 3.7214e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.2888e-03, 3.6778e-03, 2.3437e-03,  ..., 7.5603e-03,
          2.1708e-03, 1.2866e-02],
         [8.2888e-03, 3.6778e-03, 2.3437e-03,  ..., 7.5603e-03,
          2.1708e-03, 1.2866e-02],
         [9.7513e-01, 3.6778e-03, 2.3437e-03,  ..., 9.7732e-01,
          2.1708e-03, 9.6140e-01],
         [8.2888e-03, 9.8897e-01, 9.9297e-01,  ..., 7.5603e-03,
          9.9349e-01, 1.2866e-02]],
        [[5.7846e-03, 5.9070e-04, 1.8670e-04,  ..., 3.0975e-02,
          2.9668e-03, 9.9913e-01],
         [5.7846e-03, 5.9070e-04, 1.8670e-04,  ..., 2.4484e-02,
          2.9668e-03, 2.9052e-04],
         [9.8211e-01, 5.9070e-04, 1.8670e-04,  ..., 9.1780e-01,
          9.9110e-01, 2.9052e-04],
         [6.3170e-03, 9.9823e-01, 9.9944e-01,  ..., 2.6744e-02,
          2.9668e-03, 2.9052e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 296:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 19:50:26,160 [Process: 0] Synchronize training processes
2024-08-18 19:50:26,160 [Process: 0] Evaluating...
2024-08-18 19:50:26,162 [Process: 0] EPOCH 296:
2024-08-18 19:50:26,164 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:27,307 [Process: 0] Synchronize training processes
2024-08-18 19:50:27,307 [Process: 0] Evaluating...
2024-08-18 19:50:27,309 [Process: 0] EPOCH 297:
2024-08-18 19:50:27,311 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4341e-01, 3.1973e-02, 4.3033e-03,  ..., 9.8653e-01,
          9.8025e-01, 5.3884e-03],
         [2.2357e-02, 3.9684e-02, 4.3033e-03,  ..., 4.0507e-03,
          6.3395e-03, 5.5981e-03],
         [2.0674e-02, 4.8789e-02, 4.3033e-03,  ..., 5.3652e-03,
          6.3395e-03, 5.3884e-03],
         [1.3556e-02, 8.7955e-01, 9.8709e-01,  ..., 4.0507e-03,
          7.0747e-03, 9.8363e-01]],
        [[9.3898e-01, 1.5878e-02, 7.8577e-03,  ..., 9.0592e-03,
          6.3384e-04, 4.9360e-03],
         [1.5283e-02, 1.2790e-02, 7.8577e-03,  ..., 1.1269e-02,
          6.3384e-04, 4.9360e-03],
         [3.0456e-02, 1.5226e-02, 8.5560e-03,  ..., 9.0592e-03,
          9.9810e-01, 9.8519e-01],
         [1.5283e-02, 9.5611e-01, 9.7573e-01,  ..., 9.7061e-01,
          6.3384e-04, 4.9360e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7168e-03, 2.6405e-03, 4.9472e-04,  ..., 7.7196e-03,
          1.7709e-03, 3.5005e-03],
         [5.7168e-03, 2.6405e-03, 4.9472e-04,  ..., 7.7196e-03,
          1.7709e-03, 3.5005e-03],
         [9.8285e-01, 2.6405e-03, 4.9472e-04,  ..., 9.7684e-01,
          1.7709e-03, 9.8950e-01],
         [5.7168e-03, 9.9208e-01, 9.9852e-01,  ..., 7.7196e-03,
          9.9469e-01, 3.5005e-03]],
        [[7.4073e-02, 4.6571e-05, 2.2348e-04,  ..., 8.0887e-03,
          3.3572e-03, 9.9572e-01],
         [4.6717e-02, 4.6571e-05, 2.2348e-04,  ..., 8.0887e-03,
          3.3572e-03, 1.3956e-03],
         [8.0065e-01, 4.6571e-05, 2.2348e-04,  ..., 9.7573e-01,
          9.8993e-01, 1.3956e-03],
         [7.8559e-02, 9.9986e-01, 9.9933e-01,  ..., 8.0887e-03,
          3.3572e-03, 1.4882e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 297:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5052e-01, 1.0898e-02, 4.4047e-03,  ..., 9.9406e-01,
          9.9748e-01, 6.5317e-03],
         [2.2701e-02, 8.3784e-03, 4.4047e-03,  ..., 1.9797e-03,
          8.4013e-04, 7.8624e-03],
         [1.6104e-02, 8.3784e-03, 4.4047e-03,  ..., 1.9797e-03,
          8.4013e-04, 7.1163e-03],
         [1.0674e-02, 9.7234e-01, 9.8679e-01,  ..., 1.9797e-03,
          8.4013e-04, 9.7849e-01]],
        [[9.9828e-01, 1.3621e-02, 3.1350e-03,  ..., 1.5047e-02,
          4.0470e-03, 6.5411e-04],
         [5.7417e-04, 9.3425e-03, 3.1350e-03,  ..., 1.6634e-02,
          4.0470e-03, 6.5411e-04],
         [5.7417e-04, 9.3425e-03, 3.1350e-03,  ..., 1.9168e-02,
          9.8786e-01, 9.9804e-01],
         [5.7417e-04, 9.6769e-01, 9.9060e-01,  ..., 9.4915e-01,
          4.0470e-03, 6.5411e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8574e-03, 2.5340e-02, 4.1482e-03,  ..., 1.5508e-02,
          2.6075e-03, 2.9491e-03],
         [2.8574e-03, 1.8506e-02, 4.1482e-03,  ..., 1.5508e-02,
          2.6075e-03, 2.9491e-03],
         [9.9143e-01, 1.8506e-02, 4.1482e-03,  ..., 9.5215e-01,
          2.6075e-03, 9.9115e-01],
         [2.8574e-03, 9.3765e-01, 9.8756e-01,  ..., 1.6835e-02,
          9.9218e-01, 2.9491e-03]],
        [[1.7918e-02, 1.5833e-04, 1.8573e-05,  ..., 7.3135e-03,
          4.1790e-03, 9.9912e-01],
         [1.6934e-02, 1.5833e-04, 1.8573e-05,  ..., 7.3135e-03,
          4.1790e-03, 2.9241e-04],
         [9.4740e-01, 1.5833e-04, 1.8573e-05,  ..., 9.7806e-01,
          9.8746e-01, 2.9241e-04],
         [1.7750e-02, 9.9953e-01, 9.9994e-01,  ..., 7.3135e-03,
          4.1790e-03, 2.9241e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 298:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:28,455 [Process: 0] Synchronize training processes
2024-08-18 19:50:28,455 [Process: 0] Evaluating...
2024-08-18 19:50:28,457 [Process: 0] EPOCH 298:
2024-08-18 19:50:28,458 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:29,607 [Process: 0] Synchronize training processes
2024-08-18 19:50:29,607 [Process: 0] Evaluating...
2024-08-18 19:50:29,609 [Process: 0] EPOCH 299:
2024-08-18 19:50:29,611 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6318e-01, 3.4458e-03, 8.8897e-04,  ..., 9.8676e-01,
          9.9871e-01, 1.7515e-02],
         [8.8419e-03, 3.4458e-03, 9.7565e-04,  ..., 4.4132e-03,
          4.3129e-04, 1.7515e-02],
         [2.0137e-02, 3.4458e-03, 8.8897e-04,  ..., 4.4132e-03,
          4.3129e-04, 1.9395e-02],
         [7.8447e-03, 9.8966e-01, 9.9725e-01,  ..., 4.4132e-03,
          4.3129e-04, 9.4557e-01]],
        [[9.8548e-01, 1.2505e-02, 2.2488e-03,  ..., 3.7734e-03,
          1.3531e-03, 3.3366e-04],
         [4.4910e-03, 1.0572e-02, 2.2488e-03,  ..., 3.7734e-03,
          1.3531e-03, 3.3366e-04],
         [5.5361e-03, 1.1887e-02, 2.2488e-03,  ..., 3.7734e-03,
          9.9594e-01, 9.9900e-01],
         [4.4910e-03, 9.6504e-01, 9.9325e-01,  ..., 9.8868e-01,
          1.3531e-03, 3.3366e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3672e-02, 3.6818e-03, 1.9024e-04,  ..., 6.3990e-03,
          6.9095e-03, 1.0512e-02],
         [1.3672e-02, 3.6818e-03, 1.9024e-04,  ..., 6.3990e-03,
          6.9095e-03, 1.0512e-02],
         [9.5814e-01, 3.6818e-03, 1.9024e-04,  ..., 9.8080e-01,
          6.9095e-03, 9.6846e-01],
         [1.4513e-02, 9.8895e-01, 9.9943e-01,  ..., 6.3990e-03,
          9.7927e-01, 1.0512e-02]],
        [[4.5957e-03, 1.7518e-04, 2.7114e-05,  ..., 1.5874e-02,
          4.4976e-03, 9.9795e-01],
         [4.5957e-03, 1.7518e-04, 2.7114e-05,  ..., 1.4274e-02,
          4.4976e-03, 6.8207e-04],
         [9.8454e-01, 1.7518e-04, 2.7114e-05,  ..., 9.5558e-01,
          9.8651e-01, 6.8207e-04],
         [6.2676e-03, 9.9947e-01, 9.9992e-01,  ..., 1.4274e-02,
          4.4976e-03, 6.8207e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 299:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9542, 0.0135, 0.0117,  ..., 0.9807, 0.9726, 0.0146],
         [0.0098, 0.0110, 0.0118,  ..., 0.0055, 0.0083, 0.0145],
         [0.0262, 0.0128, 0.0153,  ..., 0.0083, 0.0083, 0.0181],
         [0.0098, 0.9627, 0.9612,  ..., 0.0055, 0.0108, 0.9529]],
        [[0.9917, 0.0038, 0.0245,  ..., 0.0028, 0.0056, 0.0063],
         [0.0024, 0.0038, 0.0205,  ..., 0.0028, 0.0056, 0.0063],
         [0.0034, 0.0038, 0.0233,  ..., 0.0028, 0.9831, 0.9811],
         [0.0024, 0.9885, 0.9316,  ..., 0.9917, 0.0056, 0.0063]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:50:30,755 [Process: 0] Synchronize training processes
2024-08-18 19:50:30,756 [Process: 0] Evaluating...
2024-08-18 19:50:30,757 [Process: 0] EPOCH 300:
2024-08-18 19:50:30,759 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:31,898 [Process: 0] Synchronize training processes
2024-08-18 19:50:31,899 [Process: 0] Evaluating...
2024-08-18 19:50:31,900 [Process: 0] EPOCH 301:
2024-08-18 19:50:31,903 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.0740e-03, 9.2702e-03, 1.1901e-02,  ..., 1.5013e-02,
          1.7381e-02, 5.8599e-03],
         [6.0740e-03, 2.2380e-02, 1.0095e-02,  ..., 1.5013e-02,
          1.7381e-02, 5.8599e-03],
         [9.8178e-01, 9.2702e-03, 1.0095e-02,  ..., 9.5298e-01,
          1.7381e-02, 9.8242e-01],
         [6.0740e-03, 9.5908e-01, 9.6791e-01,  ..., 1.6995e-02,
          9.4786e-01, 5.8599e-03]],
        [[3.1591e-03, 4.5554e-05, 1.2850e-04,  ..., 1.7503e-02,
          1.1833e-02, 9.9636e-01],
         [3.1591e-03, 4.5554e-05, 1.2850e-04,  ..., 1.7082e-02,
          1.1833e-02, 1.2551e-03],
         [9.9022e-01, 4.5554e-05, 1.2850e-04,  ..., 9.4742e-01,
          9.6360e-01, 1.1942e-03],
         [3.4664e-03, 9.9986e-01, 9.9961e-01,  ..., 1.7999e-02,
          1.2733e-02, 1.1942e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 300:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.3180e-01, 2.1607e-02, 8.7738e-03,  ..., 9.8425e-01,
          9.7835e-01, 8.2907e-03],
         [3.9042e-01, 4.2620e-02, 8.7738e-03,  ..., 4.6102e-03,
          5.9846e-03, 8.2907e-03],
         [5.3966e-02, 2.7641e-02, 8.7738e-03,  ..., 6.5330e-03,
          9.6834e-03, 8.2907e-03],
         [2.3805e-02, 9.0813e-01, 9.7368e-01,  ..., 4.6102e-03,
          5.9846e-03, 9.7513e-01]],
        [[9.6969e-01, 1.4242e-02, 6.0126e-03,  ..., 6.2205e-03,
          3.9934e-04, 1.8592e-03],
         [8.6416e-03, 1.2386e-02, 6.0126e-03,  ..., 6.2205e-03,
          3.9934e-04, 1.8592e-03],
         [1.3023e-02, 1.2386e-02, 6.0126e-03,  ..., 6.2205e-03,
          9.9880e-01, 9.9442e-01],
         [8.6416e-03, 9.6099e-01, 9.8196e-01,  ..., 9.8134e-01,
          3.9934e-04, 1.8592e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1254e-03, 9.2828e-03, 2.3162e-03,  ..., 7.6368e-03,
          6.4061e-02, 4.7153e-03],
         [8.1254e-03, 2.7084e-02, 1.8243e-03,  ..., 7.6368e-03,
          9.1601e-02, 4.7153e-03],
         [9.7562e-01, 9.2828e-03, 1.8243e-03,  ..., 9.7709e-01,
          8.9656e-02, 9.8585e-01],
         [8.1254e-03, 9.5435e-01, 9.9404e-01,  ..., 7.6368e-03,
          7.5468e-01, 4.7153e-03]],
        [[9.7805e-03, 9.4758e-04, 7.6521e-06,  ..., 9.4621e-03,
          6.6399e-03, 9.9982e-01],
         [9.7805e-03, 1.3047e-03, 7.6521e-06,  ..., 9.4621e-03,
          6.6399e-03, 6.1386e-05],
         [9.6734e-01, 9.4758e-04, 7.6521e-06,  ..., 9.7161e-01,
          9.8008e-01, 6.1386e-05],
         [1.3098e-02, 9.9680e-01, 9.9998e-01,  ..., 9.4621e-03,
          6.6399e-03, 6.1386e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 301:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9144e-03, 3.4313e-03, 1.6854e-03,  ..., 9.9484e-01,
          9.9415e-01, 1.8742e-03],
         [6.9144e-03, 5.0676e-03, 2.1308e-03,  ..., 1.7102e-03,
          1.9507e-03, 1.8742e-03],
         [9.7926e-01, 3.4313e-03, 1.6854e-03,  ..., 1.7102e-03,
          1.9507e-03, 1.8742e-03],
         [6.9144e-03, 9.8807e-01, 9.9450e-01,  ..., 1.7384e-03,
          1.9507e-03, 9.9438e-01]],
        [[9.1994e-01, 5.0914e-03, 7.4881e-03,  ..., 1.2135e-02,
          7.4869e-04, 9.5730e-04],
         [2.0770e-02, 5.0914e-03, 7.4881e-03,  ..., 8.5645e-03,
          7.4869e-04, 9.5730e-04],
         [3.8516e-02, 5.0914e-03, 8.1841e-03,  ..., 8.5645e-03,
          9.9775e-01, 9.9713e-01],
         [2.0770e-02, 9.8473e-01, 9.7684e-01,  ..., 9.7074e-01,
          7.4869e-04, 9.5730e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:50:33,047 [Process: 0] Synchronize training processes
2024-08-18 19:50:33,047 [Process: 0] Evaluating...
2024-08-18 19:50:33,053 [Process: 0] EPOCH 302:
2024-08-18 19:50:33,055 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8447e-03, 1.1432e-02, 1.7848e-03,  ..., 7.9856e-03,
          3.8523e-02, 4.0862e-03],
         [9.8447e-03, 5.7040e-02, 2.7429e-03,  ..., 7.9856e-03,
          2.8392e-02, 4.0862e-03],
         [9.7047e-01, 1.1432e-02, 1.7848e-03,  ..., 9.7604e-01,
          2.8392e-02, 9.8774e-01],
         [9.8447e-03, 9.2010e-01, 9.9369e-01,  ..., 7.9856e-03,
          9.0469e-01, 4.0862e-03]],
        [[9.6651e-02, 9.3537e-04, 3.4640e-04,  ..., 1.9475e-02,
          5.5136e-03, 9.9881e-01],
         [5.6542e-02, 9.3537e-04, 3.6945e-04,  ..., 2.0938e-02,
          5.5136e-03, 3.9762e-04],
         [7.4082e-01, 9.3537e-04, 3.4640e-04,  ..., 9.4157e-01,
          9.8346e-01, 3.9762e-04],
         [1.0599e-01, 9.9719e-01, 9.9894e-01,  ..., 1.8014e-02,
          5.5136e-03, 3.9762e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 302:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6662e-03, 6.0161e-03, 9.6818e-03,  ..., 9.9688e-01,
          9.9299e-01, 8.1252e-03],
         [1.6662e-03, 9.0099e-03, 1.6291e-02,  ..., 1.0339e-03,
          2.2598e-03, 9.2295e-03],
         [9.9500e-01, 6.0161e-03, 9.6818e-03,  ..., 1.0520e-03,
          2.4869e-03, 8.1252e-03],
         [1.6662e-03, 9.7896e-01, 9.6435e-01,  ..., 1.0339e-03,
          2.2598e-03, 9.7452e-01]],
        [[9.9472e-01, 4.6254e-03, 2.4667e-02,  ..., 1.3534e-02,
          4.3901e-03, 3.3249e-04],
         [1.7584e-03, 4.6254e-03, 2.0048e-02,  ..., 1.3534e-02,
          4.3901e-03, 3.3249e-04],
         [1.7584e-03, 4.6254e-03, 2.6096e-02,  ..., 1.5113e-02,
          9.8683e-01, 9.9900e-01],
         [1.7584e-03, 9.8612e-01, 9.2919e-01,  ..., 9.5782e-01,
          4.3901e-03, 3.3249e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.5712e-03, 1.4512e-02, 1.4631e-04,  ..., 3.8942e-03,
          1.4585e-02, 5.5360e-03],
         [6.5712e-03, 2.5903e-02, 1.4631e-04,  ..., 3.8942e-03,
          1.4585e-02, 5.5360e-03],
         [9.8029e-01, 1.4512e-02, 1.4631e-04,  ..., 9.8832e-01,
          1.4585e-02, 9.8339e-01],
         [6.5712e-03, 9.4507e-01, 9.9956e-01,  ..., 3.8942e-03,
          9.5625e-01, 5.5360e-03]],
        [[1.0632e-02, 5.4212e-04, 1.3308e-06,  ..., 1.2712e-02,
          1.0283e-02, 9.9945e-01],
         [1.0632e-02, 5.4212e-04, 1.3308e-06,  ..., 1.2712e-02,
          1.0283e-02, 1.8208e-04],
         [9.6810e-01, 5.4212e-04, 1.3308e-06,  ..., 9.6186e-01,
          9.6915e-01, 1.8208e-04],
         [1.0632e-02, 9.9837e-01, 1.0000e+00,  ..., 1.2712e-02,
          1.0283e-02, 1.8208e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 303:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:50:34,200 [Process: 0] Synchronize training processes
2024-08-18 19:50:34,201 [Process: 0] Evaluating...
2024-08-18 19:50:34,202 [Process: 0] EPOCH 303:
2024-08-18 19:50:34,204 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:35,348 [Process: 0] Synchronize training processes
2024-08-18 19:50:35,348 [Process: 0] Evaluating...
2024-08-18 19:50:35,350 [Process: 0] EPOCH 304:
2024-08-18 19:50:35,352 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5197e-03, 1.2045e-02, 1.7939e-02,  ..., 9.7739e-01,
          9.9870e-01, 2.1232e-02],
         [3.5197e-03, 1.3219e-02, 2.1124e-02,  ..., 6.6505e-03,
          4.3391e-04, 1.7612e-02],
         [9.8944e-01, 1.4707e-02, 2.4378e-02,  ..., 7.3336e-03,
          4.3391e-04, 2.2574e-02],
         [3.5197e-03, 9.6003e-01, 9.3656e-01,  ..., 8.6231e-03,
          4.3391e-04, 9.3858e-01]],
        [[9.9286e-01, 2.6282e-02, 1.3676e-02,  ..., 1.2555e-02,
          2.6060e-03, 7.5584e-04],
         [2.3816e-03, 1.9954e-02, 1.3676e-02,  ..., 1.2555e-02,
          2.6060e-03, 7.5584e-04],
         [2.3816e-03, 3.0263e-02, 1.7021e-02,  ..., 1.3400e-02,
          9.9218e-01, 9.9773e-01],
         [2.3816e-03, 9.2350e-01, 9.5563e-01,  ..., 9.6149e-01,
          2.6060e-03, 7.5584e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6186e-02, 2.6583e-02, 3.5607e-03,  ..., 1.0066e-02,
          9.4011e-03, 6.7823e-03],
         [2.3339e-02, 2.0706e-02, 3.5607e-03,  ..., 1.0066e-02,
          8.1500e-03, 6.7823e-03],
         [9.2319e-01, 2.0706e-02, 3.5607e-03,  ..., 9.6969e-01,
          8.1500e-03, 9.7965e-01],
         [2.7287e-02, 9.3201e-01, 9.8932e-01,  ..., 1.0180e-02,
          9.7430e-01, 6.7823e-03]],
        [[7.4717e-03, 3.2569e-03, 5.5860e-05,  ..., 2.0673e-02,
          4.8220e-03, 9.9889e-01],
         [7.4717e-03, 3.2569e-03, 5.5860e-05,  ..., 2.0520e-02,
          4.8220e-03, 3.6989e-04],
         [9.7614e-01, 3.2569e-03, 5.5860e-05,  ..., 9.4269e-01,
          9.8553e-01, 3.6989e-04],
         [8.9137e-03, 9.9023e-01, 9.9983e-01,  ..., 1.6114e-02,
          4.8220e-03, 3.6989e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 304:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7135e-01, 4.3888e-03, 4.6579e-03,  ..., 9.9809e-01,
          9.9677e-01, 7.5726e-03],
         [5.4970e-03, 4.3888e-03, 4.6579e-03,  ..., 6.3684e-04,
          1.0776e-03, 7.4960e-03],
         [1.7661e-02, 4.3888e-03, 4.6579e-03,  ..., 6.3684e-04,
          1.0776e-03, 7.4960e-03],
         [5.4970e-03, 9.8683e-01, 9.8603e-01,  ..., 6.3684e-04,
          1.0776e-03, 9.7744e-01]],
        [[9.9100e-01, 3.5891e-03, 7.0571e-03,  ..., 6.6847e-03,
          6.3975e-03, 6.5776e-04],
         [2.9021e-03, 3.5891e-03, 7.0571e-03,  ..., 6.6847e-03,
          6.3975e-03, 6.5776e-04],
         [3.2004e-03, 3.5891e-03, 7.4557e-03,  ..., 6.6847e-03,
          9.8081e-01, 9.9803e-01],
         [2.9021e-03, 9.8923e-01, 9.7843e-01,  ..., 9.7995e-01,
          6.3975e-03, 6.5776e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.2380e-03, 2.7670e-02, 9.1562e-03,  ..., 4.3942e-03,
          9.0048e-03, 8.7413e-03],
         [4.2380e-03, 5.7038e-02, 3.5410e-02,  ..., 4.3942e-03,
          9.0048e-03, 8.7413e-03],
         [9.8729e-01, 2.7670e-02, 9.1562e-03,  ..., 9.8682e-01,
          9.0048e-03, 9.7335e-01],
         [4.2380e-03, 8.8762e-01, 9.4628e-01,  ..., 4.3942e-03,
          9.7299e-01, 9.1625e-03]],
        [[1.5329e-03, 1.1199e-03, 5.5171e-05,  ..., 1.0988e-02,
          1.0259e-02, 9.9860e-01],
         [1.5329e-03, 1.5618e-03, 5.5171e-05,  ..., 1.0988e-02,
          1.0259e-02, 4.6523e-04],
         [9.9540e-01, 1.1199e-03, 5.5171e-05,  ..., 9.6703e-01,
          9.6922e-01, 4.6523e-04],
         [1.5329e-03, 9.9620e-01, 9.9983e-01,  ..., 1.0988e-02,
          1.0259e-02, 4.6523e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 305:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:36,493 [Process: 0] Synchronize training processes
2024-08-18 19:50:36,494 [Process: 0] Evaluating...
2024-08-18 19:50:36,496 [Process: 0] EPOCH 305:
2024-08-18 19:50:36,497 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:37,642 [Process: 0] Synchronize training processes
2024-08-18 19:50:37,642 [Process: 0] Evaluating...
2024-08-18 19:50:37,644 [Process: 0] EPOCH 306:
2024-08-18 19:50:37,646 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.0380e-01, 7.1309e-03, 6.5065e-03,  ..., 9.9714e-01,
          9.9089e-01, 3.6012e-03],
         [3.7942e-01, 7.1309e-03, 8.6952e-03,  ..., 9.5189e-04,
          3.0359e-03, 3.6012e-03],
         [9.2274e-03, 8.5925e-03, 7.2316e-03,  ..., 9.5189e-04,
          3.0359e-03, 3.6012e-03],
         [7.5587e-03, 9.7715e-01, 9.7757e-01,  ..., 9.5189e-04,
          3.0359e-03, 9.8920e-01]],
        [[9.5685e-01, 4.9151e-03, 5.5681e-03,  ..., 6.7773e-03,
          5.6078e-02, 8.3534e-04],
         [1.0342e-02, 4.9151e-03, 5.5681e-03,  ..., 6.7773e-03,
          5.6078e-02, 8.3534e-04],
         [2.2471e-02, 4.9151e-03, 5.8383e-03,  ..., 6.7806e-03,
          7.2101e-01, 9.9749e-01],
         [1.0342e-02, 9.8525e-01, 9.8303e-01,  ..., 9.7966e-01,
          1.6684e-01, 8.3534e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.7928e-03, 1.1893e-02, 1.5104e-03,  ..., 8.7775e-03,
          1.6828e-02, 9.9478e-03],
         [6.7928e-03, 4.5208e-02, 1.5104e-03,  ..., 8.7775e-03,
          1.6828e-02, 9.9478e-03],
         [9.7962e-01, 1.1893e-02, 1.5104e-03,  ..., 9.7367e-01,
          1.6828e-02, 9.7016e-01],
         [6.7928e-03, 9.3101e-01, 9.9547e-01,  ..., 8.7775e-03,
          9.4952e-01, 9.9478e-03]],
        [[1.4338e-03, 5.5731e-04, 1.9246e-05,  ..., 6.3675e-03,
          6.3435e-03, 9.9872e-01],
         [1.4338e-03, 5.5731e-04, 1.9246e-05,  ..., 6.3675e-03,
          6.3435e-03, 4.2540e-04],
         [9.9570e-01, 5.5731e-04, 1.9246e-05,  ..., 9.8090e-01,
          9.8097e-01, 4.2540e-04],
         [1.4338e-03, 9.9833e-01, 9.9994e-01,  ..., 6.3675e-03,
          6.3435e-03, 4.2540e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 306:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1784e-03, 8.8495e-04, 4.2912e-03,  ..., 9.9205e-01,
          9.9714e-01, 4.5823e-03],
         [2.1784e-03, 8.8495e-04, 4.2912e-03,  ..., 2.6510e-03,
          1.2659e-03, 4.0928e-03],
         [9.9346e-01, 8.8495e-04, 4.2912e-03,  ..., 2.6510e-03,
          7.9660e-04, 4.0928e-03],
         [2.1784e-03, 9.9735e-01, 9.8713e-01,  ..., 2.6510e-03,
          7.9660e-04, 9.8723e-01]],
        [[9.5601e-01, 1.1282e-02, 1.7190e-03,  ..., 1.3421e-02,
          1.0590e-03, 2.9855e-03],
         [1.1535e-02, 1.1282e-02, 1.7190e-03,  ..., 1.2620e-02,
          1.0590e-03, 2.9855e-03],
         [2.0919e-02, 1.2546e-02, 1.7190e-03,  ..., 1.2620e-02,
          9.9682e-01, 9.9104e-01],
         [1.1535e-02, 9.6489e-01, 9.9484e-01,  ..., 9.6134e-01,
          1.0590e-03, 2.9855e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:50:38,790 [Process: 0] Synchronize training processes
2024-08-18 19:50:38,790 [Process: 0] Evaluating...
2024-08-18 19:50:38,792 [Process: 0] EPOCH 307:
2024-08-18 19:50:38,794 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:39,939 [Process: 0] Synchronize training processes
2024-08-18 19:50:39,939 [Process: 0] Evaluating...
2024-08-18 19:50:39,941 [Process: 0] EPOCH 308:
2024-08-18 19:50:39,943 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9655e-03, 4.6037e-03, 2.4581e-03,  ..., 6.4800e-03,
          1.3849e-01, 1.1343e-01],
         [3.9655e-03, 4.6037e-03, 2.4581e-03,  ..., 6.4800e-03,
          7.2035e-02, 4.6629e-02],
         [9.8810e-01, 4.6037e-03, 2.4581e-03,  ..., 9.8056e-01,
          1.1317e-01, 7.9825e-01],
         [3.9655e-03, 9.8619e-01, 9.9263e-01,  ..., 6.4800e-03,
          6.7631e-01, 4.1691e-02]],
        [[1.1676e-03, 7.1543e-05, 5.7184e-05,  ..., 3.6480e-02,
          9.5230e-03, 9.9735e-01],
         [1.1676e-03, 7.1543e-05, 5.7184e-05,  ..., 3.1027e-02,
          9.0827e-03, 8.8390e-04],
         [9.9650e-01, 7.1543e-05, 5.7184e-05,  ..., 8.8745e-01,
          9.7231e-01, 8.8390e-04],
         [1.1676e-03, 9.9979e-01, 9.9983e-01,  ..., 4.5046e-02,
          9.0827e-03, 8.8390e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 307:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6149e-03, 5.4033e-03, 1.0204e-02,  ..., 9.6585e-01,
          9.8844e-01, 4.6295e-03],
         [1.6149e-03, 5.7823e-03, 1.0204e-02,  ..., 2.0966e-02,
          3.8550e-03, 4.6295e-03],
         [9.9516e-01, 5.4738e-03, 1.1651e-02,  ..., 6.5905e-03,
          3.8550e-03, 4.6446e-03],
         [1.6149e-03, 9.8334e-01, 9.6794e-01,  ..., 6.5905e-03,
          3.8550e-03, 9.8610e-01]],
        [[9.9222e-01, 7.5554e-03, 9.7467e-03,  ..., 2.2627e-02,
          6.1752e-04, 7.3098e-03],
         [2.2880e-03, 9.6892e-03, 9.7467e-03,  ..., 1.6384e-02,
          6.1752e-04, 7.3098e-03],
         [3.2025e-03, 7.5554e-03, 1.2044e-02,  ..., 2.1530e-02,
          9.9815e-01, 9.7807e-01],
         [2.2880e-03, 9.7520e-01, 9.6846e-01,  ..., 9.3946e-01,
          6.1752e-04, 7.3098e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.4377e-03, 1.3943e-03, 5.5385e-03,  ..., 5.7513e-03,
          1.2163e-02, 6.4179e-02],
         [8.4377e-03, 1.3943e-03, 5.5385e-03,  ..., 5.7513e-03,
          1.1915e-02, 3.8909e-02],
         [9.7469e-01, 1.3943e-03, 5.5385e-03,  ..., 9.8275e-01,
          1.1915e-02, 8.3884e-01],
         [8.4377e-03, 9.9582e-01, 9.8338e-01,  ..., 5.7513e-03,
          9.6401e-01, 5.8074e-02]],
        [[3.2935e-04, 1.3340e-03, 2.5862e-04,  ..., 5.4142e-03,
          2.0075e-03, 9.9925e-01],
         [3.2935e-04, 1.3340e-03, 2.5862e-04,  ..., 5.4142e-03,
          2.0075e-03, 2.5011e-04],
         [9.9901e-01, 1.3340e-03, 2.5862e-04,  ..., 9.8376e-01,
          9.9398e-01, 2.5011e-04],
         [3.2935e-04, 9.9600e-01, 9.9922e-01,  ..., 5.4142e-03,
          2.0075e-03, 2.5011e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 308:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1674e-04, 1.9202e-03, 1.3010e-03,  ..., 9.6817e-01,
          9.9238e-01, 8.1051e-03],
         [9.1674e-04, 1.9202e-03, 1.3010e-03,  ..., 1.3998e-02,
          2.5396e-03, 8.1051e-03],
         [9.9725e-01, 1.9202e-03, 1.3010e-03,  ..., 9.6107e-03,
          2.5396e-03, 9.2099e-03],
         [9.1674e-04, 9.9424e-01, 9.9610e-01,  ..., 8.2196e-03,
          2.5396e-03, 9.7458e-01]],
        [[9.7927e-01, 5.4403e-03, 4.9949e-03,  ..., 8.1023e-03,
          5.7888e-04, 4.2716e-03],
         [5.7473e-03, 5.4403e-03, 4.9949e-03,  ..., 8.1023e-03,
          5.7888e-04, 4.2716e-03],
         [9.2338e-03, 6.7037e-03, 5.1742e-03,  ..., 8.7147e-03,
          9.9826e-01, 9.8719e-01],
         [5.7473e-03, 9.8242e-01, 9.8484e-01,  ..., 9.7508e-01,
          5.7888e-04, 4.2716e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:50:41,089 [Process: 0] Synchronize training processes
2024-08-18 19:50:41,089 [Process: 0] Evaluating...
2024-08-18 19:50:41,091 [Process: 0] EPOCH 309:
2024-08-18 19:50:41,093 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2345e-02, 4.6798e-03, 1.1535e-03,  ..., 2.1569e-02,
          4.6402e-03, 4.0551e-02],
         [1.2345e-02, 4.6798e-03, 1.1535e-03,  ..., 2.1092e-02,
          4.6402e-03, 3.7702e-02],
         [9.6297e-01, 4.6798e-03, 1.1535e-03,  ..., 9.3156e-01,
          4.6402e-03, 8.5415e-01],
         [1.2345e-02, 9.8596e-01, 9.9654e-01,  ..., 2.5777e-02,
          9.8608e-01, 6.7596e-02]],
        [[1.6030e-04, 4.3151e-04, 3.9487e-05,  ..., 1.4277e-02,
          2.9323e-03, 9.9977e-01],
         [1.6030e-04, 4.3151e-04, 3.9487e-05,  ..., 1.4277e-02,
          2.9323e-03, 7.7073e-05],
         [9.9952e-01, 4.3151e-04, 3.9487e-05,  ..., 9.5641e-01,
          9.9120e-01, 7.7073e-05],
         [1.6030e-04, 9.9871e-01, 9.9988e-01,  ..., 1.5038e-02,
          2.9323e-03, 7.7073e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 309:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9290e-03, 3.5399e-03, 3.7846e-03,  ..., 9.9943e-01,
          9.9121e-01, 7.0549e-03],
         [1.9290e-03, 3.5399e-03, 3.7846e-03,  ..., 1.8889e-04,
          3.3882e-03, 7.0549e-03],
         [9.9421e-01, 3.5399e-03, 3.7846e-03,  ..., 1.8889e-04,
          2.6992e-03, 8.3909e-03],
         [1.9290e-03, 9.8938e-01, 9.8865e-01,  ..., 1.8889e-04,
          2.6992e-03, 9.7750e-01]],
        [[9.9924e-01, 1.3618e-02, 4.6522e-03,  ..., 1.3939e-02,
          6.1362e-04, 1.6343e-03],
         [2.5468e-04, 1.2689e-02, 8.4032e-03,  ..., 1.2505e-02,
          6.1362e-04, 1.6343e-03],
         [2.5468e-04, 1.8240e-02, 5.0821e-03,  ..., 1.8192e-02,
          9.9816e-01, 9.9510e-01],
         [2.5468e-04, 9.5545e-01, 9.8186e-01,  ..., 9.5536e-01,
          6.1362e-04, 1.6343e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7270e-02, 5.8800e-04, 2.4280e-03,  ..., 7.1387e-02,
          6.1726e-03, 5.0774e-02],
         [7.8296e-02, 5.8800e-04, 2.4280e-03,  ..., 4.1807e-02,
          4.9527e-03, 4.5853e-02],
         [7.5936e-01, 5.8800e-04, 2.4280e-03,  ..., 8.2915e-01,
          4.9527e-03, 8.1540e-01],
         [6.5076e-02, 9.9824e-01, 9.9272e-01,  ..., 5.7658e-02,
          9.8392e-01, 8.7969e-02]],
        [[7.3319e-05, 4.0145e-05, 7.4235e-04,  ..., 4.7262e-03,
          4.0601e-03, 9.8000e-01],
         [7.3319e-05, 4.0145e-05, 7.4235e-04,  ..., 4.7262e-03,
          4.0601e-03, 6.6663e-03],
         [9.9978e-01, 4.0145e-05, 7.4235e-04,  ..., 9.8582e-01,
          9.8782e-01, 6.6663e-03],
         [7.3319e-05, 9.9988e-01, 9.9777e-01,  ..., 4.7262e-03,
          4.0601e-03, 6.6663e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 310:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:50:42,238 [Process: 0] Synchronize training processes
2024-08-18 19:50:42,238 [Process: 0] Evaluating...
2024-08-18 19:50:42,240 [Process: 0] EPOCH 310:
2024-08-18 19:50:42,241 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:43,386 [Process: 0] Synchronize training processes
2024-08-18 19:50:43,387 [Process: 0] Evaluating...
2024-08-18 19:50:43,389 [Process: 0] EPOCH 311:
2024-08-18 19:50:43,390 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3745e-03, 5.9697e-03, 1.6052e-03,  ..., 9.8465e-01,
          9.7401e-01, 5.2138e-03],
         [1.3745e-03, 5.9697e-03, 1.6052e-03,  ..., 4.9077e-03,
          1.6749e-02, 5.2138e-03],
         [9.9588e-01, 7.9767e-03, 1.6052e-03,  ..., 5.5381e-03,
          4.6230e-03, 6.8615e-03],
         [1.3745e-03, 9.8008e-01, 9.9518e-01,  ..., 4.9077e-03,
          4.6230e-03, 9.8271e-01]],
        [[9.8929e-01, 4.2570e-03, 4.5373e-03,  ..., 3.2039e-02,
          3.0207e-03, 3.5421e-04],
         [3.3439e-03, 4.2570e-03, 4.5373e-03,  ..., 2.6157e-02,
          3.0207e-03, 3.5421e-04],
         [4.0217e-03, 4.8945e-03, 4.5373e-03,  ..., 4.7779e-02,
          9.9094e-01, 9.9894e-01],
         [3.3439e-03, 9.8659e-01, 9.8639e-01,  ..., 8.9402e-01,
          3.0207e-03, 3.5421e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1166e-02, 1.9141e-03, 7.6074e-05,  ..., 8.1747e-03,
          3.8483e-02, 5.0955e-02],
         [1.0696e-02, 1.9141e-03, 7.6074e-05,  ..., 8.1747e-03,
          4.3904e-02, 3.4405e-02],
         [9.6744e-01, 1.9141e-03, 7.6074e-05,  ..., 9.7548e-01,
          4.9125e-02, 8.7067e-01],
         [1.0696e-02, 9.9426e-01, 9.9977e-01,  ..., 8.1747e-03,
          8.6849e-01, 4.3973e-02]],
        [[4.4693e-04, 4.0727e-04, 1.0667e-03,  ..., 1.2385e-02,
          9.6737e-03, 9.9863e-01],
         [4.4693e-04, 4.0727e-04, 1.0667e-03,  ..., 1.1570e-02,
          9.6737e-03, 4.5556e-04],
         [9.9866e-01, 4.0727e-04, 1.0667e-03,  ..., 9.6448e-01,
          9.6884e-01, 4.5556e-04],
         [4.4693e-04, 9.9878e-01, 9.9680e-01,  ..., 1.1570e-02,
          1.1816e-02, 4.5556e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 311:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9332e-04, 1.1055e-03, 4.0591e-03,  ..., 9.9930e-01,
          9.9311e-01, 1.0571e-03],
         [4.9332e-04, 1.1055e-03, 4.0591e-03,  ..., 2.3425e-04,
          2.2962e-03, 1.0571e-03],
         [9.9852e-01, 1.1055e-03, 4.1672e-03,  ..., 2.3425e-04,
          2.2962e-03, 1.0571e-03],
         [4.9332e-04, 9.9668e-01, 9.8771e-01,  ..., 2.3425e-04,
          2.2962e-03, 9.9683e-01]],
        [[9.8809e-01, 1.3490e-02, 5.0151e-03,  ..., 1.2777e-02,
          1.3830e-03, 1.7774e-03],
         [4.7394e-03, 2.7477e-02, 3.2971e-03,  ..., 9.8022e-03,
          1.3830e-03, 1.7774e-03],
         [3.5863e-03, 1.6437e-02, 3.2971e-03,  ..., 1.2715e-02,
          9.9585e-01, 9.9467e-01],
         [3.5863e-03, 9.4260e-01, 9.8839e-01,  ..., 9.6471e-01,
          1.3830e-03, 1.7774e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7020e-03, 8.3521e-04, 5.0417e-04,  ..., 7.7268e-03,
          8.1745e-04, 6.4272e-02],
         [4.7020e-03, 1.1825e-03, 5.0417e-04,  ..., 7.7268e-03,
          8.1745e-04, 3.5479e-02],
         [9.8589e-01, 8.3521e-04, 5.0417e-04,  ..., 9.7682e-01,
          8.1745e-04, 8.5653e-01],
         [4.7020e-03, 9.9715e-01, 9.9849e-01,  ..., 7.7268e-03,
          9.9755e-01, 4.3717e-02]],
        [[1.3757e-04, 4.7791e-04, 8.3158e-05,  ..., 1.3500e-02,
          3.0452e-03, 9.9892e-01],
         [1.3757e-04, 4.7791e-04, 8.3158e-05,  ..., 1.3500e-02,
          3.0452e-03, 3.5627e-04],
         [9.9959e-01, 4.7791e-04, 8.3158e-05,  ..., 9.5950e-01,
          9.9086e-01, 3.5627e-04],
         [1.3757e-04, 9.9857e-01, 9.9975e-01,  ..., 1.3500e-02,
          3.0452e-03, 3.7022e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 312:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:44,535 [Process: 0] Synchronize training processes
2024-08-18 19:50:44,535 [Process: 0] Evaluating...
2024-08-18 19:50:44,541 [Process: 0] EPOCH 312:
2024-08-18 19:50:44,543 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:45,688 [Process: 0] Synchronize training processes
2024-08-18 19:50:45,688 [Process: 0] Evaluating...
2024-08-18 19:50:45,691 [Process: 0] EPOCH 313:
2024-08-18 19:50:45,692 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7751e-04, 2.9475e-03, 1.0427e-02,  ..., 9.9535e-01,
          9.9161e-01, 4.9365e-03],
         [3.7751e-04, 2.9475e-03, 1.0629e-02,  ..., 1.5515e-03,
          2.7976e-03, 4.9365e-03],
         [9.9887e-01, 2.9475e-03, 1.1858e-02,  ..., 1.5515e-03,
          2.7976e-03, 4.9365e-03],
         [3.7751e-04, 9.9116e-01, 9.6709e-01,  ..., 1.5515e-03,
          2.7976e-03, 9.8519e-01]],
        [[9.8769e-01, 1.5391e-02, 5.7347e-03,  ..., 1.4958e-02,
          1.0308e-03, 7.4897e-04],
         [4.1037e-03, 1.4699e-02, 5.7347e-03,  ..., 1.2770e-02,
          1.0308e-03, 7.4897e-04],
         [4.1037e-03, 1.9909e-02, 5.7347e-03,  ..., 2.0601e-02,
          9.9691e-01, 9.9775e-01],
         [4.1037e-03, 9.5000e-01, 9.8280e-01,  ..., 9.5167e-01,
          1.0308e-03, 7.4897e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0129e-03, 3.8988e-03, 3.8367e-04,  ..., 6.8540e-03,
          2.1227e-03, 1.7959e-01],
         [3.0129e-03, 4.1367e-03, 3.8367e-04,  ..., 6.8540e-03,
          2.1227e-03, 5.4027e-02],
         [9.9096e-01, 3.8988e-03, 3.8367e-04,  ..., 9.7944e-01,
          2.1227e-03, 7.2324e-01],
         [3.0129e-03, 9.8807e-01, 9.9885e-01,  ..., 6.8540e-03,
          9.9363e-01, 4.3147e-02]],
        [[2.8014e-04, 7.7532e-04, 5.1398e-04,  ..., 8.4365e-03,
          9.7354e-03, 9.9931e-01],
         [2.8014e-04, 7.7532e-04, 5.1398e-04,  ..., 8.4365e-03,
          9.7354e-03, 2.3114e-04],
         [9.9916e-01, 7.7532e-04, 5.1398e-04,  ..., 9.7469e-01,
          9.7079e-01, 2.3114e-04],
         [2.8014e-04, 9.9767e-01, 9.9846e-01,  ..., 8.4365e-03,
          9.7354e-03, 2.3114e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 313:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7705e-04, 6.8456e-03, 6.5058e-03,  ..., 9.9780e-01,
          9.9807e-01, 1.1696e-03],
         [1.7705e-04, 5.5238e-03, 7.0132e-03,  ..., 9.6242e-04,
          6.4488e-04, 1.1696e-03],
         [9.9947e-01, 5.9955e-03, 6.5058e-03,  ..., 6.1921e-04,
          6.4488e-04, 1.1696e-03],
         [1.7705e-04, 9.8164e-01, 9.7998e-01,  ..., 6.1921e-04,
          6.4488e-04, 9.9649e-01]],
        [[9.5928e-01, 2.3646e-02, 2.7753e-02,  ..., 1.8902e-02,
          8.9839e-04, 7.3535e-03],
         [9.6729e-03, 2.5658e-02, 1.9973e-02,  ..., 1.6550e-02,
          8.9839e-04, 7.3535e-03],
         [2.1372e-02, 4.1420e-02, 2.8516e-02,  ..., 2.7866e-02,
          9.9730e-01, 9.7794e-01],
         [9.6729e-03, 9.0928e-01, 9.2376e-01,  ..., 9.3668e-01,
          8.9839e-04, 7.3535e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
2024-08-18 19:50:46,833 [Process: 0] Synchronize training processes
2024-08-18 19:50:46,834 [Process: 0] Evaluating...
2024-08-18 19:50:46,835 [Process: 0] EPOCH 314:
2024-08-18 19:50:46,837 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:47,982 [Process: 0] Synchronize training processes
2024-08-18 19:50:47,983 [Process: 0] Evaluating...
2024-08-18 19:50:47,985 [Process: 0] EPOCH 315:
2024-08-18 19:50:47,986 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1793e-03, 2.2643e-02, 1.0385e-03,  ..., 5.3484e-03,
          1.6232e-03, 4.3441e-02],
         [4.1793e-03, 8.4706e-02, 1.0063e-03,  ..., 5.3484e-03,
          1.6232e-03, 2.9273e-02],
         [9.8746e-01, 2.2643e-02, 1.0063e-03,  ..., 9.8395e-01,
          1.6232e-03, 8.9316e-01],
         [4.1793e-03, 8.7001e-01, 9.9695e-01,  ..., 5.3484e-03,
          9.9513e-01, 3.4124e-02]],
        [[3.5931e-04, 1.8668e-04, 7.6707e-05,  ..., 4.6830e-03,
          4.8483e-03, 9.9982e-01],
         [3.5931e-04, 4.1850e-04, 7.6707e-05,  ..., 4.6830e-03,
          3.5215e-03, 5.8685e-05],
         [9.9892e-01, 1.8668e-04, 7.6707e-05,  ..., 9.8595e-01,
          9.8811e-01, 5.8685e-05],
         [3.5931e-04, 9.9921e-01, 9.9977e-01,  ..., 4.6830e-03,
          3.5215e-03, 5.8685e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 314:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.0208e-04, 3.5504e-02, 1.0864e-02,  ..., 9.9660e-01,
          9.9878e-01, 2.4990e-03],
         [8.0208e-04, 1.4048e-02, 1.2543e-02,  ..., 1.1321e-03,
          4.0626e-04, 2.4990e-03],
         [9.9759e-01, 1.4344e-02, 1.1612e-02,  ..., 1.1321e-03,
          4.0626e-04, 2.4990e-03],
         [8.0208e-04, 9.3610e-01, 9.6498e-01,  ..., 1.1321e-03,
          4.0626e-04, 9.9250e-01]],
        [[9.8617e-01, 9.1545e-03, 8.0621e-03,  ..., 2.2033e-02,
          1.8895e-02, 3.8538e-03],
         [4.2289e-03, 1.1371e-02, 7.4952e-03,  ..., 1.5583e-02,
          1.8895e-02, 3.8538e-03],
         [5.3726e-03, 1.1466e-02, 8.1372e-03,  ..., 2.1287e-02,
          9.4088e-01, 9.8844e-01],
         [4.2289e-03, 9.6801e-01, 9.7631e-01,  ..., 9.4110e-01,
          2.1333e-02, 3.8538e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0490e-03, 3.5047e-03, 3.5665e-04,  ..., 7.6053e-03,
          9.8946e-03, 1.2250e-02],
         [5.0490e-03, 8.8961e-03, 3.7374e-04,  ..., 7.6053e-03,
          9.8946e-03, 1.2250e-02],
         [9.8485e-01, 3.5047e-03, 3.5665e-04,  ..., 9.7718e-01,
          9.8946e-03, 9.6325e-01],
         [5.0490e-03, 9.8409e-01, 9.9891e-01,  ..., 7.6053e-03,
          9.7032e-01, 1.2250e-02]],
        [[3.2808e-04, 9.3533e-04, 1.4465e-05,  ..., 8.5402e-03,
          1.3773e-03, 9.9880e-01],
         [3.2808e-04, 2.3454e-03, 1.4465e-05,  ..., 8.5402e-03,
          1.3773e-03, 3.9872e-04],
         [9.9902e-01, 9.3533e-04, 1.4465e-05,  ..., 9.7438e-01,
          9.9587e-01, 3.9872e-04],
         [3.2808e-04, 9.9578e-01, 9.9996e-01,  ..., 8.5402e-03,
          1.3773e-03, 3.9872e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 315:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1360e-03, 9.7465e-03, 1.5306e-03,  ..., 9.9595e-01,
          9.9973e-01, 2.9873e-03],
         [1.1360e-03, 1.2799e-02, 1.5306e-03,  ..., 1.3501e-03,
          9.0294e-05, 2.9873e-03],
         [9.9659e-01, 9.7465e-03, 1.5306e-03,  ..., 1.3501e-03,
          9.0294e-05, 2.9873e-03],
         [1.1360e-03, 9.6771e-01, 9.9541e-01,  ..., 1.3501e-03,
          9.0294e-05, 9.9104e-01]],
        [[5.0626e-01, 1.9590e-03, 8.6195e-03,  ..., 2.1988e-02,
          9.4632e-04, 3.0226e-03],
         [7.7964e-02, 1.9590e-03, 5.3531e-03,  ..., 2.6462e-02,
          9.4632e-04, 3.0226e-03],
         [3.0623e-01, 1.9590e-03, 6.6338e-03,  ..., 3.9626e-02,
          9.9716e-01, 9.9093e-01],
         [1.0954e-01, 9.9412e-01, 9.7939e-01,  ..., 9.1192e-01,
          9.4632e-04, 3.0226e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:50:49,132 [Process: 0] Synchronize training processes
2024-08-18 19:50:49,133 [Process: 0] Evaluating...
2024-08-18 19:50:49,134 [Process: 0] EPOCH 316:
2024-08-18 19:50:49,136 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.9893e-03, 6.6542e-04, 1.2617e-03,  ..., 2.1503e-03,
          4.0864e-03, 2.1003e-02],
         [7.9893e-03, 6.6542e-04, 2.0916e-03,  ..., 2.1503e-03,
          4.0864e-03, 1.6318e-02],
         [9.7603e-01, 6.6542e-04, 1.2617e-03,  ..., 9.9355e-01,
          4.0864e-03, 9.4636e-01],
         [7.9893e-03, 9.9800e-01, 9.9538e-01,  ..., 2.1503e-03,
          9.8774e-01, 1.6318e-02]],
        [[2.9156e-04, 6.6096e-03, 3.8010e-04,  ..., 8.8013e-03,
          8.6736e-03, 9.9937e-01],
         [2.9156e-04, 6.6096e-03, 3.8010e-04,  ..., 8.8013e-03,
          8.6736e-03, 2.6251e-04],
         [9.9913e-01, 6.6096e-03, 3.8010e-04,  ..., 9.7360e-01,
          9.7398e-01, 1.8328e-04],
         [2.9156e-04, 9.8017e-01, 9.9886e-01,  ..., 8.8013e-03,
          8.6736e-03, 1.8328e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 316:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.3837e-04, 8.4727e-03, 2.1029e-03,  ..., 9.9614e-01,
          9.9107e-01, 5.0214e-03],
         [8.3837e-04, 1.3877e-02, 2.1029e-03,  ..., 1.2268e-03,
          5.2226e-03, 5.0214e-03],
         [9.9748e-01, 9.9138e-03, 2.1029e-03,  ..., 1.4037e-03,
          1.8537e-03, 5.0214e-03],
         [8.3837e-04, 9.6774e-01, 9.9369e-01,  ..., 1.2268e-03,
          1.8537e-03, 9.8494e-01]],
        [[9.8585e-01, 7.8358e-03, 2.1403e-03,  ..., 9.4288e-03,
          5.0929e-04, 1.0364e-03],
         [3.6425e-03, 7.8358e-03, 2.1403e-03,  ..., 9.4204e-03,
          5.0929e-04, 1.0364e-03],
         [6.8691e-03, 9.5322e-03, 2.1403e-03,  ..., 1.2683e-02,
          9.9847e-01, 9.9689e-01],
         [3.6425e-03, 9.7480e-01, 9.9358e-01,  ..., 9.6847e-01,
          5.0929e-04, 1.0364e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3333e-03, 3.7483e-03, 9.6147e-04,  ..., 2.7309e-03,
          4.4293e-03, 6.7919e-03],
         [4.3333e-03, 9.2793e-03, 9.6147e-04,  ..., 2.7309e-03,
          4.4293e-03, 6.7919e-03],
         [9.8700e-01, 3.7483e-03, 9.6147e-04,  ..., 9.9181e-01,
          4.4293e-03, 9.7962e-01],
         [4.3333e-03, 9.8322e-01, 9.9712e-01,  ..., 2.7309e-03,
          9.8671e-01, 6.7919e-03]],
        [[3.2623e-03, 3.9418e-04, 2.2626e-05,  ..., 8.3527e-03,
          2.0278e-03, 9.6213e-01],
         [3.2623e-03, 6.9237e-04, 2.2626e-05,  ..., 8.3527e-03,
          2.0278e-03, 1.3177e-02],
         [9.8843e-01, 3.9418e-04, 2.2626e-05,  ..., 9.7494e-01,
          9.9392e-01, 1.2349e-02],
         [5.0489e-03, 9.9852e-01, 9.9993e-01,  ..., 8.3527e-03,
          2.0278e-03, 1.2349e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 317:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-18 19:50:50,279 [Process: 0] Synchronize training processes
2024-08-18 19:50:50,279 [Process: 0] Evaluating...
2024-08-18 19:50:50,281 [Process: 0] EPOCH 317:
2024-08-18 19:50:50,283 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:51,428 [Process: 0] Synchronize training processes
2024-08-18 19:50:51,428 [Process: 0] Evaluating...
2024-08-18 19:50:51,430 [Process: 0] EPOCH 318:
2024-08-18 19:50:51,432 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[5.6985e-03, 2.1927e-03, 2.4992e-03,  ..., 9.9770e-01,
          9.9951e-01, 6.9881e-03],
         [5.6985e-03, 2.1927e-03, 2.4992e-03,  ..., 8.4031e-04,
          2.1818e-04, 8.7858e-03],
         [9.8290e-01, 2.1927e-03, 2.4992e-03,  ..., 7.3099e-04,
          1.3821e-04, 7.5909e-03],
         [5.6985e-03, 9.9342e-01, 9.9250e-01,  ..., 7.3099e-04,
          1.3821e-04, 9.7664e-01]],
        [[9.6832e-01, 1.2981e-03, 2.3980e-03,  ..., 2.4853e-03,
          1.9135e-04, 1.9045e-03],
         [8.1286e-03, 1.2981e-03, 2.3980e-03,  ..., 2.4853e-03,
          1.9135e-04, 1.9045e-03],
         [1.5426e-02, 1.2981e-03, 2.3980e-03,  ..., 2.5775e-03,
          9.9943e-01, 9.9429e-01],
         [8.1286e-03, 9.9611e-01, 9.9281e-01,  ..., 9.9245e-01,
          1.9135e-04, 1.9045e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1500e-02, 7.6894e-04, 4.5525e-04,  ..., 6.6234e-03,
          1.8527e-01, 1.0903e-02],
         [1.1272e-02, 7.6894e-04, 4.5525e-04,  ..., 6.6234e-03,
          8.6010e-02, 1.0903e-02],
         [9.6596e-01, 7.6894e-04, 4.5525e-04,  ..., 9.8013e-01,
          5.1428e-01, 9.6604e-01],
         [1.1272e-02, 9.9769e-01, 9.9863e-01,  ..., 6.6234e-03,
          2.1444e-01, 1.2157e-02]],
        [[8.0152e-04, 8.2979e-04, 1.6240e-04,  ..., 7.2326e-03,
          4.1180e-03, 9.9806e-01],
         [8.0152e-04, 1.4501e-03, 1.6240e-04,  ..., 7.2326e-03,
          4.1180e-03, 8.2469e-04],
         [9.9739e-01, 8.2979e-04, 1.6240e-04,  ..., 9.7830e-01,
          9.8765e-01, 5.5708e-04],
         [1.0037e-03, 9.9689e-01, 9.9951e-01,  ..., 7.2326e-03,
          4.1180e-03, 5.5708e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 318:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7410e-02, 1.6372e-02, 7.5999e-03,  ..., 9.9926e-01,
          9.8854e-01, 1.3910e-03],
         [6.6600e-01, 1.6178e-02, 6.2709e-03,  ..., 2.4715e-04,
          3.8212e-03, 1.3910e-03],
         [2.5421e-01, 1.6990e-02, 8.7655e-03,  ..., 2.4715e-04,
          3.8212e-03, 1.3910e-03],
         [3.2381e-02, 9.5046e-01, 9.7736e-01,  ..., 2.4715e-04,
          3.8212e-03, 9.9583e-01]],
        [[9.4437e-01, 1.0243e-02, 2.2135e-03,  ..., 4.2117e-03,
          5.8316e-04, 8.8285e-04],
         [1.0306e-02, 1.0243e-02, 2.2135e-03,  ..., 5.5060e-03,
          5.8316e-04, 8.8285e-04],
         [3.5021e-02, 1.0243e-02, 2.2135e-03,  ..., 4.6034e-03,
          9.9825e-01, 9.9735e-01],
         [1.0306e-02, 9.6927e-01, 9.9336e-01,  ..., 9.8568e-01,
          5.8316e-04, 8.8285e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5182e-03, 4.4880e-01, 2.1825e-03,  ..., 4.7655e-03,
          2.2104e-01, 3.3216e-02],
         [2.5182e-03, 5.9724e-02, 2.1825e-03,  ..., 4.7655e-03,
          9.7447e-02, 3.0414e-02],
         [9.9245e-01, 7.7873e-02, 2.1825e-03,  ..., 9.8570e-01,
          3.5344e-01, 8.8726e-01],
         [2.5182e-03, 4.1361e-01, 9.9345e-01,  ..., 4.7655e-03,
          3.2808e-01, 4.9114e-02]],
        [[5.5724e-04, 3.1973e-04, 4.1418e-04,  ..., 6.3415e-03,
          5.2290e-03, 9.9794e-01],
         [5.5724e-04, 3.1973e-04, 5.4157e-04,  ..., 6.3415e-03,
          5.2290e-03, 6.8539e-04],
         [9.9828e-01, 3.1973e-04, 4.1418e-04,  ..., 9.8098e-01,
          9.8431e-01, 6.8539e-04],
         [6.0850e-04, 9.9904e-01, 9.9863e-01,  ..., 6.3415e-03,
          5.2290e-03, 6.8539e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 319:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:52,577 [Process: 0] Synchronize training processes
2024-08-18 19:50:52,577 [Process: 0] Evaluating...
2024-08-18 19:50:52,579 [Process: 0] EPOCH 319:
2024-08-18 19:50:52,581 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:53,725 [Process: 0] Synchronize training processes
2024-08-18 19:50:53,725 [Process: 0] Evaluating...
2024-08-18 19:50:53,727 [Process: 0] EPOCH 320:
2024-08-18 19:50:53,728 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.8245e-01, 2.6803e-03, 5.1086e-03,  ..., 9.9663e-01,
          9.7625e-01, 5.1003e-02],
         [4.8867e-01, 2.6803e-03, 5.3511e-03,  ..., 1.1233e-03,
          7.5884e-03, 5.0083e-02],
         [1.4440e-02, 2.6803e-03, 5.1086e-03,  ..., 1.1233e-03,
          7.7786e-03, 7.9340e-01],
         [1.4440e-02, 9.9196e-01, 9.8443e-01,  ..., 1.1233e-03,
          8.3796e-03, 1.0552e-01]],
        [[9.9829e-01, 7.1024e-03, 5.9975e-03,  ..., 8.6354e-03,
          1.6497e-03, 1.6297e-03],
         [5.7158e-04, 5.2830e-03, 5.9975e-03,  ..., 7.8703e-03,
          1.6497e-03, 1.6297e-03],
         [5.7158e-04, 5.2830e-03, 5.9975e-03,  ..., 7.8703e-03,
          9.9505e-01, 9.9511e-01],
         [5.7158e-04, 9.8233e-01, 9.8201e-01,  ..., 9.7562e-01,
          1.6497e-03, 1.6297e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.8805e-03, 1.8625e-02, 4.9660e-04,  ..., 2.3034e-03,
          1.7285e-01, 1.9166e-02],
         [4.8805e-03, 1.7920e-02, 4.9660e-04,  ..., 2.3034e-03,
          1.0603e-01, 1.9166e-02],
         [9.8536e-01, 9.4536e-01, 4.9660e-04,  ..., 9.9309e-01,
          4.3882e-01, 9.3677e-01],
         [4.8805e-03, 1.8097e-02, 9.9851e-01,  ..., 2.3034e-03,
          2.8230e-01, 2.4899e-02]],
        [[9.4429e-04, 6.1759e-05, 3.3798e-03,  ..., 1.1047e-02,
          5.6517e-03, 9.9910e-01],
         [9.4429e-04, 6.1759e-05, 3.3798e-03,  ..., 1.1047e-02,
          5.6517e-03, 3.0072e-04],
         [9.9680e-01, 6.1759e-05, 3.3798e-03,  ..., 9.6686e-01,
          9.8304e-01, 3.0072e-04],
         [1.3123e-03, 9.9981e-01, 9.8986e-01,  ..., 1.1047e-02,
          5.6517e-03, 3.0072e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 320:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3145e-01, 1.6364e-02, 4.2032e-03,  ..., 9.8423e-01,
          9.5584e-01, 1.2051e-02],
         [3.6312e-02, 2.5647e-02, 4.2032e-03,  ..., 5.7891e-03,
          2.2898e-02, 9.2757e-03],
         [1.9593e-01, 1.8794e-02, 4.2032e-03,  ..., 5.1423e-03,
          1.2006e-02, 1.0172e-02],
         [3.6312e-02, 9.3919e-01, 9.8739e-01,  ..., 4.8362e-03,
          9.2573e-03, 9.6850e-01]],
        [[9.9832e-01, 2.3901e-03, 1.2264e-03,  ..., 1.6804e-03,
          5.4623e-04, 9.0600e-05],
         [5.6038e-04, 2.3901e-03, 1.2264e-03,  ..., 1.6804e-03,
          5.4623e-04, 9.0600e-05],
         [5.6038e-04, 2.3901e-03, 1.2264e-03,  ..., 1.6804e-03,
          9.9836e-01, 9.9973e-01],
         [5.6038e-04, 9.9283e-01, 9.9632e-01,  ..., 9.9496e-01,
          5.4623e-04, 9.0600e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8726e-03, 1.2755e-01, 2.0883e-04,  ..., 4.7718e-03,
          1.7824e-01, 1.5618e-02],
         [8.8726e-03, 7.5638e-02, 2.1973e-04,  ..., 4.7718e-03,
          1.1095e-01, 1.5024e-02],
         [9.7338e-01, 5.9212e-01, 2.0883e-04,  ..., 9.8568e-01,
          4.4710e-01, 9.5295e-01],
         [8.8726e-03, 2.0469e-01, 9.9936e-01,  ..., 4.7718e-03,
          2.6371e-01, 1.6405e-02]],
        [[2.4712e-04, 3.8485e-05, 7.7122e-05,  ..., 6.0992e-03,
          5.8894e-03, 9.9918e-01],
         [2.4712e-04, 6.2559e-05, 7.7122e-05,  ..., 6.0992e-03,
          5.8894e-03, 2.7408e-04],
         [9.9921e-01, 3.8485e-05, 7.7122e-05,  ..., 9.8170e-01,
          9.8233e-01, 2.7408e-04],
         [2.9644e-04, 9.9986e-01, 9.9977e-01,  ..., 6.0992e-03,
          5.8894e-03, 2.7408e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:50:54,878 [Process: 0] Synchronize training processes
2024-08-18 19:50:54,878 [Process: 0] Evaluating...
2024-08-18 19:50:54,880 [Process: 0] EPOCH 321:
2024-08-18 19:50:54,882 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 321:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.5161e-01, 7.9864e-03, 1.3274e-03,  ..., 9.9817e-01,
          9.8794e-01, 9.2865e-01],
         [2.4995e-02, 7.9864e-03, 1.3274e-03,  ..., 6.1019e-04,
          2.9073e-03, 1.8014e-02],
         [3.9840e-01, 8.6930e-03, 1.3274e-03,  ..., 6.1019e-04,
          6.2491e-03, 3.5320e-02],
         [2.4995e-02, 9.7533e-01, 9.9602e-01,  ..., 6.1019e-04,
          2.9073e-03, 1.8014e-02]],
        [[9.9931e-01, 4.3124e-04, 4.7770e-04,  ..., 2.9178e-03,
          6.3324e-04, 9.7231e-04],
         [2.2840e-04, 4.3124e-04, 4.7770e-04,  ..., 4.4034e-03,
          6.3324e-04, 9.7231e-04],
         [2.2840e-04, 4.3124e-04, 4.7770e-04,  ..., 2.9178e-03,
          9.9810e-01, 9.9708e-01],
         [2.2840e-04, 9.9871e-01, 9.9857e-01,  ..., 9.8976e-01,
          6.3324e-04, 9.7231e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2278e-02, 6.4174e-02, 1.1314e-03,  ..., 3.4630e-03,
          1.9191e-01, 1.4491e-02],
         [1.2278e-02, 3.1358e-02, 1.3442e-03,  ..., 3.4630e-03,
          9.7627e-02, 1.4491e-02],
         [9.6302e-01, 3.4986e-02, 1.1314e-03,  ..., 9.8961e-01,
          3.0862e-01, 9.5653e-01],
         [1.2424e-02, 8.6948e-01, 9.9639e-01,  ..., 3.4630e-03,
          4.0185e-01, 1.4491e-02]],
        [[5.7679e-04, 5.7392e-05, 8.0701e-05,  ..., 5.9338e-03,
          4.8095e-03, 9.9910e-01],
         [5.7679e-04, 5.7392e-05, 8.0701e-05,  ..., 5.9338e-03,
          4.8095e-03, 2.9894e-04],
         [9.9827e-01, 5.7392e-05, 8.0701e-05,  ..., 9.8220e-01,
          9.8557e-01, 2.9894e-04],
         [5.7679e-04, 9.9983e-01, 9.9976e-01,  ..., 5.9338e-03,
          4.8095e-03, 2.9894e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 322:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3029e-01, 6.4136e-03, 2.3894e-03,  ..., 9.3871e-01,
          9.8298e-01, 3.1313e-01],
         [2.1462e-02, 6.4136e-03, 2.5893e-03,  ..., 3.4644e-02,
          4.2972e-03, 1.4834e-01],
         [3.7352e-02, 6.4136e-03, 2.3894e-03,  ..., 1.5520e-02,
          8.4718e-03, 1.3108e-01],
         [1.0898e-02, 9.8076e-01, 9.9263e-01,  ..., 1.1122e-02,
          4.2553e-03, 4.0746e-01]],
        [[9.9843e-01, 1.5289e-03, 4.7936e-03,  ..., 3.9903e-03,
          8.6546e-04, 1.3530e-03],
         [5.2442e-04, 1.5289e-03, 4.7936e-03,  ..., 7.8460e-03,
          8.6546e-04, 1.3530e-03],
         [5.2442e-04, 1.5289e-03, 4.7936e-03,  ..., 3.9903e-03,
          9.9740e-01, 9.9594e-01],
         [5.2442e-04, 9.9541e-01, 9.8562e-01,  ..., 9.8417e-01,
          8.6546e-04, 1.3530e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:50:56,030 [Process: 0] Synchronize training processes
2024-08-18 19:50:56,030 [Process: 0] Evaluating...
2024-08-18 19:50:56,037 [Process: 0] EPOCH 322:
2024-08-18 19:50:56,039 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:57,183 [Process: 0] Synchronize training processes
2024-08-18 19:50:57,183 [Process: 0] Evaluating...
2024-08-18 19:50:57,185 [Process: 0] EPOCH 323:
2024-08-18 19:50:57,187 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2512e-03, 2.4562e-02, 1.3097e-04,  ..., 3.7678e-03,
          1.3232e-01, 1.1588e-02],
         [2.2512e-03, 1.6103e-02, 2.6816e-04,  ..., 3.7678e-03,
          8.2904e-02, 1.1588e-02],
         [9.9325e-01, 1.6103e-02, 1.3097e-04,  ..., 9.8870e-01,
          5.6689e-01, 9.6524e-01],
         [2.2512e-03, 9.4323e-01, 9.9947e-01,  ..., 3.7678e-03,
          2.1788e-01, 1.1588e-02]],
        [[1.3413e-04, 5.9881e-04, 9.1135e-05,  ..., 2.0157e-02,
          7.1551e-03, 9.9699e-01],
         [1.3413e-04, 5.9881e-04, 9.1135e-05,  ..., 2.0157e-02,
          7.1551e-03, 1.0033e-03],
         [9.9960e-01, 5.9881e-04, 9.1135e-05,  ..., 9.3421e-01,
          9.7853e-01, 1.0033e-03],
         [1.3413e-04, 9.9820e-01, 9.9973e-01,  ..., 2.5474e-02,
          7.1551e-03, 1.0033e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 323:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1083e-01, 1.5093e-03, 2.3747e-02,  ..., 9.9973e-01,
          9.6343e-01, 4.9391e-02],
         [1.7339e-02, 1.5093e-03, 1.9179e-02,  ..., 8.8974e-05,
          1.4143e-02, 4.9630e-02],
         [5.6908e-02, 1.5093e-03, 1.9179e-02,  ..., 8.8974e-05,
          1.4478e-02, 8.9873e-02],
         [1.4920e-02, 9.9547e-01, 9.3789e-01,  ..., 8.8974e-05,
          7.9467e-03, 8.1111e-01]],
        [[9.9645e-01, 9.7381e-03, 6.6351e-03,  ..., 1.1727e-02,
          8.9867e-04, 1.6487e-04],
         [1.1040e-03, 9.4612e-03, 6.6351e-03,  ..., 8.9566e-03,
          8.9867e-04, 1.6487e-04],
         [1.3425e-03, 8.9021e-03, 6.6351e-03,  ..., 8.9566e-03,
          9.9730e-01, 9.9951e-01],
         [1.1040e-03, 9.7190e-01, 9.8009e-01,  ..., 9.7036e-01,
          8.9867e-04, 1.6487e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8112e-03, 2.8588e-01, 5.4627e-03,  ..., 3.4228e-03,
          1.8445e-01, 1.4366e-02],
         [1.8112e-03, 1.1845e-01, 5.4627e-03,  ..., 3.4228e-03,
          9.0086e-02, 1.4254e-02],
         [9.9457e-01, 3.2814e-01, 5.4627e-03,  ..., 9.8973e-01,
          4.9613e-01, 9.5713e-01],
         [1.8112e-03, 2.6753e-01, 9.8361e-01,  ..., 3.4228e-03,
          2.2933e-01, 1.4254e-02]],
        [[2.6041e-04, 6.2081e-05, 4.9926e-05,  ..., 1.7479e-02,
          3.9672e-03, 9.9909e-01],
         [2.6041e-04, 6.2081e-05, 4.8264e-05,  ..., 1.3673e-02,
          3.9672e-03, 3.0453e-04],
         [9.9922e-01, 6.2081e-05, 4.8264e-05,  ..., 9.5518e-01,
          9.8810e-01, 3.0320e-04],
         [2.6041e-04, 9.9981e-01, 9.9985e-01,  ..., 1.3673e-02,
          3.9672e-03, 3.0320e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 324:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7551e-01, 5.5387e-04, 2.2352e-03,  ..., 9.8156e-01,
          9.9908e-01, 1.8055e-01],
         [1.4499e-02, 5.5387e-04, 3.5153e-03,  ..., 5.9243e-03,
          3.0585e-04, 9.4530e-02],
         [5.2042e-03, 5.5387e-04, 2.2352e-03,  ..., 6.5882e-03,
          3.0585e-04, 5.7486e-01],
         [4.7869e-03, 9.9834e-01, 9.9201e-01,  ..., 5.9243e-03,
          3.0585e-04, 1.5006e-01]],
        [[9.9974e-01, 5.7526e-03, 2.5334e-03,  ..., 5.9384e-03,
          2.8499e-04, 1.0550e-04],
         [8.6697e-05, 5.1835e-03, 7.5073e-03,  ..., 5.2068e-03,
          2.8499e-04, 1.0550e-04],
         [8.6697e-05, 5.1835e-03, 2.5334e-03,  ..., 4.3832e-03,
          9.9915e-01, 9.9968e-01],
         [8.6697e-05, 9.8388e-01, 9.8743e-01,  ..., 9.8447e-01,
          2.8499e-04, 1.0550e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:50:58,330 [Process: 0] Synchronize training processes
2024-08-18 19:50:58,331 [Process: 0] Evaluating...
2024-08-18 19:50:58,333 [Process: 0] EPOCH 324:
2024-08-18 19:50:58,334 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:50:59,478 [Process: 0] Synchronize training processes
2024-08-18 19:50:59,478 [Process: 0] Evaluating...
2024-08-18 19:50:59,480 [Process: 0] EPOCH 325:
2024-08-18 19:50:59,482 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.6684e-03, 2.0783e-02, 1.9991e-04,  ..., 2.5529e-03,
          2.1871e-01, 1.1367e-02],
         [7.6684e-03, 1.9452e-02, 5.1448e-04,  ..., 2.5529e-03,
          1.2785e-01, 1.1367e-02],
         [9.7699e-01, 1.6128e-02, 1.9991e-04,  ..., 9.9234e-01,
          4.3303e-01, 9.6590e-01],
         [7.6684e-03, 9.4364e-01, 9.9909e-01,  ..., 2.5529e-03,
          2.2041e-01, 1.1367e-02]],
        [[1.5124e-04, 2.3021e-04, 1.7531e-04,  ..., 1.6522e-02,
          6.2042e-03, 9.9910e-01],
         [1.5124e-04, 2.3021e-04, 1.7531e-04,  ..., 1.3979e-02,
          6.2042e-03, 3.0120e-04],
         [9.9955e-01, 2.3021e-04, 1.7531e-04,  ..., 9.5552e-01,
          9.8139e-01, 3.0120e-04],
         [1.5124e-04, 9.9931e-01, 9.9947e-01,  ..., 1.3979e-02,
          6.2042e-03, 3.0120e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 325:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6169e-01, 1.9609e-03, 2.8445e-03,  ..., 9.9944e-01,
          9.9650e-01, 7.0300e-02],
         [1.4815e-02, 1.9609e-03, 1.3869e-03,  ..., 1.8567e-04,
          1.1660e-03, 4.4951e-02],
         [1.5569e-02, 1.9609e-03, 1.3869e-03,  ..., 1.8567e-04,
          1.1660e-03, 8.3439e-01],
         [7.9241e-03, 9.9412e-01, 9.9438e-01,  ..., 1.8567e-04,
          1.1660e-03, 5.0355e-02]],
        [[9.9994e-01, 2.4196e-03, 2.4222e-02,  ..., 3.0158e-03,
          8.0257e-05, 5.8892e-04],
         [2.0451e-05, 2.6359e-03, 1.4500e-02,  ..., 3.0158e-03,
          8.0257e-05, 5.8892e-04],
         [2.0451e-05, 2.4177e-03, 1.7174e-02,  ..., 3.0158e-03,
          9.9976e-01, 9.9823e-01],
         [2.0451e-05, 9.9253e-01, 9.4411e-01,  ..., 9.9095e-01,
          8.0257e-05, 5.8892e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8893e-03, 1.1156e-03, 1.4528e-03,  ..., 9.0716e-03,
          2.0418e-01, 3.5940e-03],
         [1.8893e-03, 1.1156e-03, 2.1963e-03,  ..., 9.0716e-03,
          1.3627e-01, 3.5940e-03],
         [9.9433e-01, 1.1156e-03, 1.4528e-03,  ..., 9.7279e-01,
          4.0169e-01, 9.8922e-01],
         [1.8893e-03, 9.9665e-01, 9.9490e-01,  ..., 9.0716e-03,
          2.5786e-01, 3.5940e-03]],
        [[2.2671e-03, 8.5003e-05, 1.3537e-04,  ..., 2.3109e-03,
          6.1771e-03, 9.9908e-01],
         [2.2671e-03, 1.0332e-04, 1.8251e-04,  ..., 2.3109e-03,
          6.1771e-03, 3.0704e-04],
         [9.9192e-01, 8.5003e-05, 1.3537e-04,  ..., 9.9307e-01,
          9.8147e-01, 3.0704e-04],
         [3.5484e-03, 9.9973e-01, 9.9955e-01,  ..., 2.3109e-03,
          6.1771e-03, 3.0704e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 326:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:00,625 [Process: 0] Synchronize training processes
2024-08-18 19:51:00,625 [Process: 0] Evaluating...
2024-08-18 19:51:00,627 [Process: 0] EPOCH 326:
2024-08-18 19:51:00,629 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:01,773 [Process: 0] Synchronize training processes
2024-08-18 19:51:01,773 [Process: 0] Evaluating...
2024-08-18 19:51:01,775 [Process: 0] EPOCH 327:
2024-08-18 19:51:01,776 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4216e-01, 1.0110e-02, 4.7020e-04,  ..., 9.9501e-01,
          9.7623e-01, 4.5132e-02],
         [1.1750e-02, 2.3639e-02, 4.7020e-04,  ..., 1.5412e-03,
          1.5504e-02, 4.7220e-02],
         [3.5203e-02, 1.0110e-02, 4.7020e-04,  ..., 1.9101e-03,
          4.2992e-03, 8.4383e-01],
         [1.0888e-02, 9.5614e-01, 9.9859e-01,  ..., 1.5412e-03,
          3.9682e-03, 6.3817e-02]],
        [[9.9926e-01, 1.3346e-03, 9.1393e-04,  ..., 1.1860e-02,
          7.4613e-05, 2.4955e-04],
         [2.4619e-04, 1.3346e-03, 1.5411e-03,  ..., 2.1091e-02,
          7.4613e-05, 2.4955e-04],
         [2.4619e-04, 1.3346e-03, 9.1393e-04,  ..., 1.1860e-02,
          9.9978e-01, 9.9925e-01],
         [2.4619e-04, 9.9600e-01, 9.9663e-01,  ..., 9.5519e-01,
          7.4613e-05, 2.4955e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8673e-03, 3.3595e-03, 1.8822e-04,  ..., 4.8257e-03,
          2.4990e-01, 5.7892e-03],
         [6.9995e-03, 5.2631e-03, 1.8822e-04,  ..., 4.8257e-03,
          1.0109e-01, 5.7892e-03],
         [9.7613e-01, 3.3595e-03, 1.8822e-04,  ..., 9.8552e-01,
          2.7397e-01, 9.8263e-01],
         [6.9995e-03, 9.8802e-01, 9.9944e-01,  ..., 4.8257e-03,
          3.7504e-01, 5.7892e-03]],
        [[3.6244e-03, 5.8728e-05, 1.1126e-04,  ..., 1.9040e-03,
          1.4350e-02, 9.9919e-01],
         [3.6244e-03, 6.7807e-05, 1.1126e-04,  ..., 1.9040e-03,
          1.4119e-02, 2.6960e-04],
         [9.8913e-01, 5.8728e-05, 1.1126e-04,  ..., 9.9429e-01,
          9.5741e-01, 2.6960e-04],
         [3.6244e-03, 9.9981e-01, 9.9967e-01,  ..., 1.9040e-03,
          1.4119e-02, 2.6960e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 327:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6936e-01, 1.3992e-03, 3.0220e-03,  ..., 9.9975e-01,
          9.8480e-01, 5.1569e-02],
         [1.1677e-02, 1.3992e-03, 5.1043e-03,  ..., 8.1801e-05,
          7.7510e-03, 6.2003e-02],
         [1.2495e-02, 1.3992e-03, 3.0220e-03,  ..., 8.1801e-05,
          4.1139e-03, 8.2875e-01],
         [6.4641e-03, 9.9580e-01, 9.8885e-01,  ..., 8.1801e-05,
          3.3400e-03, 5.7675e-02]],
        [[9.9977e-01, 7.3066e-04, 8.2402e-04,  ..., 6.1912e-04,
          2.3706e-04, 1.9343e-04],
         [7.7386e-05, 7.3066e-04, 8.2402e-04,  ..., 6.5994e-04,
          2.3706e-04, 1.9343e-04],
         [7.7386e-05, 7.3066e-04, 8.2402e-04,  ..., 6.1912e-04,
          9.9929e-01, 9.9942e-01],
         [7.7386e-05, 9.9781e-01, 9.9753e-01,  ..., 9.9810e-01,
          2.3706e-04, 1.9343e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4870e-01, 2.8360e-03, 3.5585e-03,  ..., 1.1665e-02,
          1.1599e-01, 3.6469e-03],
         [3.6779e-02, 3.0484e-03, 2.9777e-02,  ..., 1.1665e-02,
          5.3573e-02, 3.6469e-03],
         [7.7775e-01, 2.8360e-03, 3.5585e-03,  ..., 9.6500e-01,
          8.2645e-02, 9.8906e-01],
         [3.6779e-02, 9.9128e-01, 9.6311e-01,  ..., 1.1665e-02,
          7.4779e-01, 3.6469e-03]],
        [[1.2719e-03, 8.1006e-04, 2.7270e-05,  ..., 2.9829e-03,
          1.7751e-02, 9.9720e-01],
         [1.2719e-03, 1.0819e-02, 2.7270e-05,  ..., 2.9829e-03,
          1.4566e-02, 9.3238e-04],
         [9.9566e-01, 8.1006e-04, 2.7270e-05,  ..., 9.9105e-01,
          9.5312e-01, 9.3238e-04],
         [1.8006e-03, 9.8756e-01, 9.9992e-01,  ..., 2.9829e-03,
          1.4566e-02, 9.3238e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:02,920 [Process: 0] Synchronize training processes
2024-08-18 19:51:02,920 [Process: 0] Evaluating...
2024-08-18 19:51:02,922 [Process: 0] EPOCH 328:
2024-08-18 19:51:02,924 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 328:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.5234e-01, 1.2014e-03, 1.0228e-03,  ..., 9.9276e-01,
          9.9392e-01, 6.3508e-02],
         [4.4892e-02, 1.2014e-03, 1.0228e-03,  ..., 2.1325e-03,
          3.3045e-03, 6.6322e-02],
         [7.6906e-02, 1.2014e-03, 1.0228e-03,  ..., 2.9741e-03,
          1.3889e-03, 7.8249e-01],
         [2.5867e-02, 9.9640e-01, 9.9693e-01,  ..., 2.1325e-03,
          1.3889e-03, 8.7679e-02]],
        [[9.9931e-01, 2.1323e-03, 2.8318e-02,  ..., 6.7425e-03,
          3.9195e-04, 1.9804e-04],
         [2.2857e-04, 2.5644e-03, 1.0080e-01,  ..., 9.0891e-03,
          3.9195e-04, 1.9804e-04],
         [2.2857e-04, 2.1323e-03, 2.9459e-02,  ..., 7.1769e-03,
          9.9882e-01, 9.9941e-01],
         [2.2857e-04, 9.9317e-01, 8.4142e-01,  ..., 9.7699e-01,
          3.9195e-04, 1.9804e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4390e-02, 1.9018e-02, 1.3462e-03,  ..., 2.5980e-03,
          1.0130e-01, 3.6693e-03],
         [2.3981e-02, 1.3294e-02, 4.7474e-03,  ..., 2.5980e-03,
          5.2071e-02, 3.6693e-03],
         [9.1765e-01, 1.3294e-02, 1.3462e-03,  ..., 9.9221e-01,
          7.3367e-02, 9.8899e-01],
         [2.3981e-02, 9.5439e-01, 9.9256e-01,  ..., 2.5980e-03,
          7.7326e-01, 3.6693e-03]],
        [[9.2254e-03, 3.1585e-04, 1.7633e-04,  ..., 5.6038e-03,
          1.4299e-02, 9.9846e-01],
         [9.2254e-03, 2.9955e-03, 1.7633e-04,  ..., 5.6038e-03,
          1.4299e-02, 5.1418e-04],
         [9.6732e-01, 3.1585e-04, 1.7633e-04,  ..., 9.8319e-01,
          9.5710e-01, 5.1418e-04],
         [1.4233e-02, 9.9637e-01, 9.9947e-01,  ..., 5.6038e-03,
          1.4299e-02, 5.1418e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 329:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9928e-01, 5.5484e-04, 1.1449e-02,  ..., 9.9714e-01,
          9.4995e-01, 5.3885e-02],
         [9.5631e-02, 5.5484e-04, 4.5973e-02,  ..., 9.5283e-04,
          3.5290e-02, 5.5660e-02],
         [5.6104e-01, 5.5484e-04, 1.1687e-02,  ..., 9.5283e-04,
          7.9054e-03, 7.7756e-01],
         [4.4047e-02, 9.9834e-01, 9.3089e-01,  ..., 9.5283e-04,
          6.8512e-03, 1.1289e-01]],
        [[9.9841e-01, 3.6583e-03, 2.3633e-03,  ..., 3.7201e-03,
          2.0404e-03, 6.9339e-04],
         [5.1559e-04, 3.6583e-03, 2.3633e-03,  ..., 3.2667e-03,
          2.0404e-03, 6.9339e-04],
         [5.6214e-04, 3.6583e-03, 2.3633e-03,  ..., 3.2667e-03,
          9.9388e-01, 9.9792e-01],
         [5.1559e-04, 9.8903e-01, 9.9291e-01,  ..., 9.8975e-01,
          2.0404e-03, 6.9339e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:04,068 [Process: 0] Synchronize training processes
2024-08-18 19:51:04,069 [Process: 0] Evaluating...
2024-08-18 19:51:04,070 [Process: 0] EPOCH 329:
2024-08-18 19:51:04,072 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:05,221 [Process: 0] Synchronize training processes
2024-08-18 19:51:05,221 [Process: 0] Evaluating...
2024-08-18 19:51:05,223 [Process: 0] EPOCH 330:
2024-08-18 19:51:05,225 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9865e-02, 1.5479e-02, 9.2296e-03,  ..., 1.2997e-03,
          1.5999e-02, 8.9372e-03],
         [2.2654e-02, 2.9026e-02, 3.4690e-02,  ..., 1.2997e-03,
          1.1010e-02, 8.0471e-03],
         [9.1483e-01, 1.5479e-02, 9.2296e-03,  ..., 9.9610e-01,
          1.1010e-02, 9.7497e-01],
         [2.2654e-02, 9.4002e-01, 9.4685e-01,  ..., 1.2997e-03,
          9.6198e-01, 8.0471e-03]],
        [[4.9426e-03, 1.6437e-03, 2.5508e-05,  ..., 3.3431e-03,
          1.2886e-02, 9.9838e-01],
         [4.9426e-03, 3.9030e-03, 2.5508e-05,  ..., 3.3431e-03,
          1.1493e-02, 5.3881e-04],
         [9.8457e-01, 1.6437e-03, 2.5508e-05,  ..., 9.8997e-01,
          9.6413e-01, 5.3881e-04],
         [5.5476e-03, 9.9281e-01, 9.9992e-01,  ..., 3.3431e-03,
          1.1493e-02, 5.3881e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 330:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1430e-01, 1.1247e-03, 3.0837e-03,  ..., 9.9865e-01,
          9.9410e-01, 9.9806e-02],
         [6.7286e-02, 1.1247e-03, 3.0837e-03,  ..., 4.4965e-04,
          4.9761e-03, 7.5980e-02],
         [9.2056e-03, 1.1247e-03, 3.0837e-03,  ..., 4.4965e-04,
          4.6178e-04, 5.7204e-01],
         [9.2056e-03, 9.9663e-01, 9.9075e-01,  ..., 4.4965e-04,
          4.6178e-04, 2.5217e-01]],
        [[9.9794e-01, 3.9311e-03, 1.2595e-02,  ..., 8.0333e-04,
          1.2691e-04, 1.0140e-04],
         [6.5422e-04, 3.3411e-03, 1.4304e-02,  ..., 8.0333e-04,
          1.2691e-04, 1.0140e-04],
         [7.4986e-04, 3.3411e-03, 1.3280e-02,  ..., 8.0333e-04,
          9.9962e-01, 9.9970e-01],
         [6.5422e-04, 9.8939e-01, 9.5982e-01,  ..., 9.9759e-01,
          1.2691e-04, 1.0140e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3446e-03, 4.4679e-02, 4.6182e-02,  ..., 2.1875e-03,
          1.2239e-01, 9.3704e-03],
         [7.3446e-03, 3.0868e-02, 2.3843e-01,  ..., 2.1875e-03,
          6.4430e-02, 9.3704e-03],
         [9.7797e-01, 3.0868e-02, 4.6182e-02,  ..., 9.9344e-01,
          1.2238e-01, 9.7189e-01],
         [7.3446e-03, 8.9359e-01, 6.6921e-01,  ..., 2.1875e-03,
          6.9081e-01, 9.3704e-03]],
        [[5.9548e-03, 3.3007e-04, 8.1878e-05,  ..., 1.3234e-02,
          9.4578e-03, 9.9980e-01],
         [5.9548e-03, 4.6126e-03, 4.4651e-05,  ..., 1.3234e-02,
          9.4578e-03, 6.5023e-05],
         [9.7984e-01, 3.3007e-04, 4.4651e-05,  ..., 9.5909e-01,
          9.7163e-01, 6.5023e-05],
         [8.2498e-03, 9.9473e-01, 9.9983e-01,  ..., 1.4443e-02,
          9.4578e-03, 6.5023e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 331:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:06,396 [Process: 0] Synchronize training processes
2024-08-18 19:51:06,396 [Process: 0] Evaluating...
2024-08-18 19:51:06,398 [Process: 0] EPOCH 331:
2024-08-18 19:51:06,400 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:07,543 [Process: 0] Synchronize training processes
2024-08-18 19:51:07,543 [Process: 0] Evaluating...
2024-08-18 19:51:07,550 [Process: 0] EPOCH 332:
2024-08-18 19:51:07,552 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7217e-01, 8.9707e-03, 1.7121e-03,  ..., 9.9857e-01,
          9.9848e-01, 1.4898e-01],
         [1.9962e-02, 8.0504e-03, 1.7121e-03,  ..., 4.7645e-04,
          7.7816e-04, 1.1201e-01],
         [3.9359e-03, 9.9408e-03, 1.7121e-03,  ..., 4.7645e-04,
          3.7213e-04, 2.9165e-01],
         [3.9359e-03, 9.7304e-01, 9.9486e-01,  ..., 4.7645e-04,
          3.7213e-04, 4.4736e-01]],
        [[9.9903e-01, 8.0332e-03, 2.5524e-02,  ..., 2.5814e-03,
          2.2252e-05, 6.2239e-05],
         [3.2105e-04, 1.1897e-02, 1.2671e-01,  ..., 3.7550e-03,
          2.2252e-05, 6.2239e-05],
         [3.2878e-04, 8.0370e-03, 3.0356e-02,  ..., 2.5814e-03,
          9.9993e-01, 9.9981e-01],
         [3.2105e-04, 9.7203e-01, 8.1741e-01,  ..., 9.9108e-01,
          2.2252e-05, 6.2239e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3337e-02, 3.4237e-02, 3.0846e-02,  ..., 5.5418e-03,
          4.9874e-02, 8.6027e-03],
         [1.2204e-02, 1.9293e-01, 1.7684e-01,  ..., 5.5418e-03,
          2.7617e-02, 8.0260e-03],
         [9.6225e-01, 3.4237e-02, 3.0846e-02,  ..., 9.8337e-01,
          3.3244e-02, 9.7535e-01],
         [1.2204e-02, 7.3859e-01, 7.6147e-01,  ..., 5.5418e-03,
          8.8926e-01, 8.0260e-03]],
        [[9.8977e-03, 4.6397e-03, 6.2636e-05,  ..., 4.4856e-03,
          9.9871e-03, 9.9887e-01],
         [9.8977e-03, 4.6808e-03, 6.2636e-05,  ..., 4.4856e-03,
          9.6376e-03, 3.7672e-04],
         [9.6600e-01, 4.6397e-03, 6.2636e-05,  ..., 9.8654e-01,
          9.7074e-01, 3.7672e-04],
         [1.4200e-02, 9.8604e-01, 9.9981e-01,  ..., 4.4856e-03,
          9.6376e-03, 3.7672e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 332:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9075e-01, 1.1519e-02, 1.7938e-02,  ..., 9.9194e-01,
          9.9559e-01, 1.2829e-01],
         [3.1603e-03, 9.1664e-03, 9.2618e-03,  ..., 2.8262e-03,
          1.8770e-03, 1.1950e-01],
         [3.0432e-03, 1.0986e-02, 1.1199e-02,  ..., 2.6167e-03,
          1.2660e-03, 2.5217e-01],
         [3.0432e-03, 9.6833e-01, 9.6160e-01,  ..., 2.6167e-03,
          1.2660e-03, 5.0005e-01]],
        [[9.9959e-01, 3.5296e-03, 8.3070e-03,  ..., 2.3320e-02,
          8.7204e-05, 3.7327e-04],
         [1.3648e-04, 3.5941e-03, 8.3070e-03,  ..., 1.7157e-02,
          8.7204e-05, 3.7327e-04],
         [1.3648e-04, 3.5296e-03, 1.0441e-02,  ..., 2.3370e-02,
          9.9974e-01, 9.9888e-01],
         [1.3648e-04, 9.8935e-01, 9.7295e-01,  ..., 9.3615e-01,
          8.7204e-05, 3.7327e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.2709e-03, 1.1274e-02, 6.8297e-02,  ..., 4.3156e-03,
          1.1625e-01, 2.2567e-02],
         [6.2709e-03, 1.1274e-02, 5.0405e-02,  ..., 4.3156e-03,
          6.6495e-02, 2.0636e-02],
         [9.8119e-01, 1.1274e-02, 6.6252e-02,  ..., 9.8705e-01,
          1.3438e-01, 9.2919e-01],
         [6.2709e-03, 9.6618e-01, 8.1505e-01,  ..., 4.3156e-03,
          6.8288e-01, 2.7612e-02]],
        [[5.4748e-03, 2.4871e-04, 1.6906e-03,  ..., 4.7202e-03,
          5.7330e-03, 9.9731e-01],
         [5.4748e-03, 2.4871e-04, 4.3451e-03,  ..., 4.7202e-03,
          5.7330e-03, 8.9783e-04],
         [9.7153e-01, 2.4871e-04, 1.6906e-03,  ..., 9.8584e-01,
          9.8280e-01, 8.9783e-04],
         [1.7517e-02, 9.9925e-01, 9.9227e-01,  ..., 4.7202e-03,
          5.7330e-03, 8.9783e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 333:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:08,695 [Process: 0] Synchronize training processes
2024-08-18 19:51:08,695 [Process: 0] Evaluating...
2024-08-18 19:51:08,697 [Process: 0] EPOCH 333:
2024-08-18 19:51:08,699 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:09,844 [Process: 0] Synchronize training processes
2024-08-18 19:51:09,844 [Process: 0] Evaluating...
2024-08-18 19:51:09,846 [Process: 0] EPOCH 334:
2024-08-18 19:51:09,848 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2341e-01, 1.2257e-02, 3.5418e-02,  ..., 9.9540e-01,
          9.9908e-01, 6.4337e-02],
         [6.1366e-02, 2.7934e-02, 2.0785e-02,  ..., 1.5334e-03,
          3.0532e-04, 6.4337e-02],
         [7.6116e-03, 1.5673e-02, 3.0892e-02,  ..., 1.5334e-03,
          3.0532e-04, 5.8519e-01],
         [7.6116e-03, 9.4414e-01, 9.1290e-01,  ..., 1.5334e-03,
          3.0532e-04, 2.8614e-01]],
        [[9.8928e-01, 3.2370e-03, 1.4154e-02,  ..., 3.2033e-03,
          3.5533e-04, 7.4644e-04],
         [2.8907e-03, 5.6090e-03, 1.0681e-02,  ..., 3.2033e-03,
          3.5533e-04, 7.4644e-04],
         [4.9388e-03, 3.2370e-03, 1.2495e-02,  ..., 3.4170e-03,
          9.9893e-01, 9.9776e-01],
         [2.8907e-03, 9.8792e-01, 9.6267e-01,  ..., 9.9018e-01,
          3.5533e-04, 7.4644e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9651e-02, 4.9280e-03, 5.9977e-04,  ..., 1.7470e-03,
          1.0659e-01, 6.9282e-03],
         [1.1049e-02, 6.9878e-03, 1.7269e-03,  ..., 1.7470e-03,
          6.0079e-02, 6.9282e-03],
         [9.5825e-01, 4.9280e-03, 5.9977e-04,  ..., 9.9476e-01,
          1.3111e-01, 9.7922e-01],
         [1.1049e-02, 9.8316e-01, 9.9707e-01,  ..., 1.7470e-03,
          7.0222e-01, 6.9282e-03]],
        [[1.9124e-02, 1.5682e-03, 1.8524e-04,  ..., 8.7377e-03,
          3.9239e-03, 9.9939e-01],
         [1.9124e-02, 3.2274e-03, 4.6000e-04,  ..., 8.7377e-03,
          3.9239e-03, 2.0316e-04],
         [8.9010e-01, 1.5682e-03, 1.8524e-04,  ..., 9.7379e-01,
          9.8823e-01, 2.0316e-04],
         [7.1651e-02, 9.9364e-01, 9.9917e-01,  ..., 8.7377e-03,
          3.9239e-03, 2.0316e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 334:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6153e-01, 1.4775e-03, 7.8894e-04,  ..., 9.9602e-01,
          9.9503e-01, 1.0732e-01],
         [3.5051e-02, 1.4775e-03, 7.8894e-04,  ..., 1.3257e-03,
          3.8769e-03, 1.0123e-01],
         [1.7071e-03, 1.4775e-03, 7.8894e-04,  ..., 1.3257e-03,
          5.4857e-04, 1.8022e-01],
         [1.7071e-03, 9.9557e-01, 9.9763e-01,  ..., 1.3257e-03,
          5.4857e-04, 6.1124e-01]],
        [[9.9910e-01, 1.2917e-02, 5.8865e-02,  ..., 3.0336e-03,
          4.6726e-05, 6.8116e-04],
         [2.9893e-04, 9.9287e-03, 2.7634e-02,  ..., 3.3825e-03,
          4.6726e-05, 6.8116e-04],
         [2.9893e-04, 9.9428e-03, 4.2093e-02,  ..., 3.0336e-03,
          9.9986e-01, 9.9796e-01],
         [2.9893e-04, 9.6721e-01, 8.7141e-01,  ..., 9.9055e-01,
          4.6726e-05, 6.8116e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7616e-03, 9.0586e-03, 1.3316e-03,  ..., 7.1977e-03,
          8.9844e-02, 1.0290e-02],
         [2.7616e-03, 1.6186e-02, 2.2194e-03,  ..., 7.1977e-03,
          6.5768e-02, 1.0290e-02],
         [9.9172e-01, 9.0586e-03, 1.3316e-03,  ..., 9.7841e-01,
          5.8289e-01, 9.6852e-01],
         [2.7616e-03, 9.6570e-01, 9.9512e-01,  ..., 7.1977e-03,
          2.6149e-01, 1.0895e-02]],
        [[1.4344e-02, 1.2839e-04, 5.9362e-04,  ..., 2.0913e-03,
          4.3106e-03, 9.9925e-01],
         [1.4344e-02, 2.2178e-04, 9.8209e-04,  ..., 2.0913e-03,
          4.3106e-03, 2.5056e-04],
         [9.1894e-01, 1.2839e-04, 5.9362e-04,  ..., 9.9373e-01,
          9.8707e-01, 2.5056e-04],
         [5.2372e-02, 9.9952e-01, 9.9783e-01,  ..., 2.0913e-03,
          4.3106e-03, 2.5056e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:10,995 [Process: 0] Synchronize training processes
2024-08-18 19:51:10,995 [Process: 0] Evaluating...
2024-08-18 19:51:10,997 [Process: 0] EPOCH 335:
2024-08-18 19:51:10,999 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 335:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4717e-01, 4.1292e-03, 1.6480e-03,  ..., 9.9715e-01,
          9.7669e-01, 8.3919e-02],
         [4.4926e-02, 4.1292e-03, 1.6480e-03,  ..., 9.4975e-04,
          9.9412e-03, 8.0109e-02],
         [3.9513e-03, 4.4859e-03, 1.6480e-03,  ..., 9.4975e-04,
          6.6822e-03, 3.7052e-01],
         [3.9513e-03, 9.8726e-01, 9.9506e-01,  ..., 9.4975e-04,
          6.6822e-03, 4.6546e-01]],
        [[9.9041e-01, 4.8351e-03, 2.6964e-02,  ..., 4.9929e-03,
          3.5570e-04, 6.1313e-04],
         [2.6878e-03, 4.8351e-03, 1.8285e-02,  ..., 7.5888e-03,
          3.5570e-04, 6.1313e-04],
         [4.2112e-03, 4.8351e-03, 2.7589e-02,  ..., 5.1704e-03,
          9.9893e-01, 9.9816e-01],
         [2.6878e-03, 9.8549e-01, 9.2716e-01,  ..., 9.8225e-01,
          3.5570e-04, 6.1313e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0209e-03, 6.4475e-03, 2.0153e-02,  ..., 2.5864e-02,
          6.9923e-02, 3.4926e-03],
         [4.5772e-03, 6.6400e-03, 2.7337e-02,  ..., 1.6420e-02,
          5.3581e-02, 3.4926e-03],
         [9.8582e-01, 6.4475e-03, 2.0153e-02,  ..., 9.4130e-01,
          7.2054e-01, 9.8952e-01],
         [4.5772e-03, 9.8046e-01, 9.3236e-01,  ..., 1.6420e-02,
          1.5596e-01, 3.4926e-03]],
        [[5.1241e-02, 2.1546e-05, 1.0312e-04,  ..., 1.1518e-02,
          6.7609e-03, 9.9987e-01],
         [5.1183e-02, 2.1546e-05, 1.6112e-04,  ..., 1.1518e-02,
          6.7609e-03, 4.3407e-05],
         [7.5646e-01, 2.1546e-05, 1.0312e-04,  ..., 9.6427e-01,
          9.7972e-01, 4.3407e-05],
         [1.4111e-01, 9.9994e-01, 9.9963e-01,  ..., 1.2693e-02,
          6.7609e-03, 4.3407e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 336:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9104e-01, 5.4565e-03, 4.8151e-03,  ..., 9.9373e-01,
          9.9638e-01, 8.1463e-02],
         [4.6296e-03, 3.8842e-03, 4.0671e-03,  ..., 1.8771e-03,
          1.2372e-03, 6.9384e-02],
         [2.1629e-03, 4.1377e-03, 5.2151e-03,  ..., 2.5159e-03,
          1.1919e-03, 2.9995e-01],
         [2.1629e-03, 9.8652e-01, 9.8590e-01,  ..., 1.8771e-03,
          1.1919e-03, 5.4920e-01]],
        [[9.9627e-01, 7.1010e-03, 2.4453e-03,  ..., 2.4012e-03,
          6.4491e-05, 2.3267e-04],
         [1.2425e-03, 1.0807e-02, 2.4453e-03,  ..., 2.4012e-03,
          6.4491e-05, 2.3267e-04],
         [1.2425e-03, 7.1010e-03, 2.4453e-03,  ..., 2.4555e-03,
          9.9981e-01, 9.9930e-01],
         [1.2425e-03, 9.7499e-01, 9.9266e-01,  ..., 9.9274e-01,
          6.4491e-05, 2.3267e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:12,143 [Process: 0] Synchronize training processes
2024-08-18 19:51:12,143 [Process: 0] Evaluating...
2024-08-18 19:51:12,145 [Process: 0] EPOCH 336:
2024-08-18 19:51:12,146 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:13,290 [Process: 0] Synchronize training processes
2024-08-18 19:51:13,290 [Process: 0] Evaluating...
2024-08-18 19:51:13,292 [Process: 0] EPOCH 337:
2024-08-18 19:51:13,294 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4234e-03, 1.1483e-02, 3.6814e-04,  ..., 6.5490e-03,
          3.2508e-02, 4.9238e-03],
         [2.4234e-03, 1.1483e-02, 3.6814e-04,  ..., 6.5490e-03,
          2.1514e-02, 4.9238e-03],
         [9.9273e-01, 1.1483e-02, 3.6814e-04,  ..., 9.8035e-01,
          3.3358e-02, 9.8523e-01],
         [2.4234e-03, 9.6555e-01, 9.9890e-01,  ..., 6.5490e-03,
          9.1262e-01, 4.9238e-03]],
        [[8.9056e-03, 1.8529e-03, 1.7492e-04,  ..., 3.4242e-03,
          7.7847e-03, 9.9655e-01],
         [8.9056e-03, 7.4986e-03, 2.3577e-04,  ..., 3.4242e-03,
          7.7847e-03, 1.1512e-03],
         [9.5095e-01, 1.8529e-03, 1.7492e-04,  ..., 9.8973e-01,
          9.7665e-01, 1.1512e-03],
         [3.1234e-02, 9.8880e-01, 9.9941e-01,  ..., 3.4242e-03,
          7.7847e-03, 1.1512e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 337:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4906e-01, 2.7805e-03, 4.1016e-03,  ..., 9.1044e-01,
          9.9091e-01, 3.4101e-02],
         [1.5834e-02, 2.7805e-03, 4.1016e-03,  ..., 4.2085e-02,
          2.7598e-03, 3.0670e-02],
         [1.4589e-02, 2.7805e-03, 4.1016e-03,  ..., 2.8640e-02,
          3.5728e-03, 6.3867e-02],
         [2.0514e-02, 9.9166e-01, 9.8770e-01,  ..., 1.8836e-02,
          2.7598e-03, 8.7136e-01]],
        [[9.9944e-01, 2.7069e-03, 2.0014e-02,  ..., 9.2119e-03,
          2.2099e-04, 7.9627e-05],
         [1.8746e-04, 2.7069e-03, 3.1315e-02,  ..., 7.1880e-03,
          2.2099e-04, 7.9627e-05],
         [1.8746e-04, 2.7069e-03, 2.5412e-02,  ..., 8.2887e-03,
          9.9934e-01, 9.9976e-01],
         [1.8746e-04, 9.9188e-01, 9.2326e-01,  ..., 9.7531e-01,
          2.2099e-04, 7.9627e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7035e-03, 4.2163e-03, 1.0153e-03,  ..., 2.7824e-03,
          4.8724e-02, 2.7658e-03],
         [5.7035e-03, 4.2163e-03, 1.0153e-03,  ..., 2.7824e-03,
          3.4149e-02, 2.7658e-03],
         [9.8289e-01, 4.2163e-03, 1.0153e-03,  ..., 9.9165e-01,
          8.1067e-02, 9.9170e-01],
         [5.7035e-03, 9.8735e-01, 9.9695e-01,  ..., 2.7824e-03,
          8.3606e-01, 2.7658e-03]],
        [[9.7675e-03, 2.4425e-03, 4.6200e-04,  ..., 6.0693e-03,
          2.2164e-03, 9.9483e-01],
         [9.7675e-03, 8.8081e-03, 6.2174e-04,  ..., 6.0693e-03,
          2.2164e-03, 1.5667e-03],
         [9.4455e-01, 2.4425e-03, 4.6200e-04,  ..., 9.8179e-01,
          9.9335e-01, 1.5667e-03],
         [3.5917e-02, 9.8631e-01, 9.9845e-01,  ..., 6.0693e-03,
          2.2164e-03, 2.0345e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 338:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2062e-01, 3.5321e-03, 2.1448e-03,  ..., 9.8314e-01,
          9.9406e-01, 4.7646e-02],
         [8.9671e-02, 3.5321e-03, 2.1448e-03,  ..., 4.8015e-03,
          1.9801e-03, 4.7002e-02],
         [6.4928e-02, 3.5769e-03, 2.1448e-03,  ..., 4.8015e-03,
          1.9801e-03, 1.4284e-01],
         [1.2478e-01, 9.8936e-01, 9.9357e-01,  ..., 7.2614e-03,
          1.9801e-03, 7.6251e-01]],
        [[9.9622e-01, 4.8228e-03, 3.4594e-03,  ..., 1.5383e-03,
          2.1241e-03, 1.4304e-04],
         [1.2578e-03, 4.8228e-03, 5.0926e-03,  ..., 1.5383e-03,
          2.1241e-03, 1.4304e-04],
         [1.2658e-03, 5.8417e-03, 3.4594e-03,  ..., 1.5383e-03,
          9.9363e-01, 9.9957e-01],
         [1.2578e-03, 9.8451e-01, 9.8799e-01,  ..., 9.9539e-01,
          2.1241e-03, 1.4304e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:14,441 [Process: 0] Synchronize training processes
2024-08-18 19:51:14,441 [Process: 0] Evaluating...
2024-08-18 19:51:14,443 [Process: 0] EPOCH 338:
2024-08-18 19:51:14,445 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:15,591 [Process: 0] Synchronize training processes
2024-08-18 19:51:15,591 [Process: 0] Evaluating...
2024-08-18 19:51:15,593 [Process: 0] EPOCH 339:
2024-08-18 19:51:15,594 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7972e-03, 1.3409e-03, 1.5863e-03,  ..., 8.4468e-03,
          2.1202e-02, 6.0600e-03],
         [1.7972e-03, 1.3409e-03, 1.5863e-03,  ..., 8.4468e-03,
          1.9945e-02, 6.0600e-03],
         [9.9461e-01, 1.3409e-03, 1.5863e-03,  ..., 9.7466e-01,
          2.8766e-02, 9.8182e-01],
         [1.7972e-03, 9.9598e-01, 9.9524e-01,  ..., 8.4468e-03,
          9.3009e-01, 6.0600e-03]],
        [[2.1589e-02, 6.0226e-04, 6.3815e-05,  ..., 1.4743e-02,
          5.8228e-03, 9.9851e-01],
         [2.1589e-02, 6.2769e-04, 6.3815e-05,  ..., 1.3898e-02,
          5.8228e-03, 4.9623e-04],
         [8.6904e-01, 6.0226e-04, 6.3815e-05,  ..., 9.5540e-01,
          9.8253e-01, 4.9623e-04],
         [8.7787e-02, 9.9817e-01, 9.9981e-01,  ..., 1.5962e-02,
          5.8228e-03, 4.9623e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 339:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8465e-01, 7.9822e-03, 4.1615e-03,  ..., 9.9294e-01,
          9.9543e-01, 2.2917e-02],
         [7.3591e-02, 7.9822e-03, 7.2513e-03,  ..., 2.0179e-03,
          1.5237e-03, 2.2917e-02],
         [2.0401e-02, 7.9822e-03, 4.6642e-03,  ..., 3.0271e-03,
          1.5237e-03, 5.4659e-02],
         [2.1361e-02, 9.7605e-01, 9.8392e-01,  ..., 2.0179e-03,
          1.5237e-03, 8.9951e-01]],
        [[9.9972e-01, 4.7229e-03, 1.5892e-03,  ..., 7.5149e-03,
          4.1390e-04, 1.2396e-03],
         [9.2360e-05, 5.8455e-03, 1.5892e-03,  ..., 6.2735e-03,
          4.1390e-04, 1.2396e-03],
         [9.2360e-05, 4.7229e-03, 1.5892e-03,  ..., 7.2141e-03,
          9.9876e-01, 9.9628e-01],
         [9.2360e-05, 9.8471e-01, 9.9523e-01,  ..., 9.7900e-01,
          4.1390e-04, 1.2396e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3613e-02, 1.7332e-02, 6.1312e-03,  ..., 1.1908e-02,
          6.0468e-02, 4.5828e-03],
         [1.1056e-02, 1.7332e-02, 1.1984e-02,  ..., 1.1908e-02,
          5.2690e-02, 4.5828e-03],
         [9.6428e-01, 9.2623e-01, 6.1312e-03,  ..., 9.6050e-01,
          5.6573e-01, 9.8625e-01],
         [1.1056e-02, 3.9111e-02, 9.7575e-01,  ..., 1.5682e-02,
          3.2111e-01, 4.5828e-03]],
        [[1.2112e-03, 4.0097e-03, 1.5715e-03,  ..., 6.4110e-03,
          1.4711e-02, 9.9987e-01],
         [1.2112e-03, 5.4000e-02, 3.7190e-03,  ..., 6.4110e-03,
          1.4711e-02, 4.4578e-05],
         [9.9521e-01, 4.0097e-03, 1.5715e-03,  ..., 9.7955e-01,
          9.4883e-01, 4.4578e-05],
         [2.3656e-03, 9.3798e-01, 9.9314e-01,  ..., 7.6291e-03,
          2.1745e-02, 4.4578e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 340:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:16,736 [Process: 0] Synchronize training processes
2024-08-18 19:51:16,737 [Process: 0] Evaluating...
2024-08-18 19:51:16,739 [Process: 0] EPOCH 340:
2024-08-18 19:51:16,741 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:17,886 [Process: 0] Synchronize training processes
2024-08-18 19:51:17,886 [Process: 0] Evaluating...
2024-08-18 19:51:17,888 [Process: 0] EPOCH 341:
2024-08-18 19:51:17,890 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8288e-01, 5.5507e-03, 6.4958e-03,  ..., 9.9906e-01,
          9.9043e-01, 3.4645e-02],
         [7.8807e-02, 4.9176e-03, 8.1321e-03,  ..., 3.1320e-04,
          2.8708e-03, 2.7367e-02],
         [1.9157e-02, 6.4352e-03, 6.5108e-03,  ..., 3.1320e-04,
          3.0340e-03, 7.0752e-02],
         [1.9157e-02, 9.8310e-01, 9.7886e-01,  ..., 3.1320e-04,
          3.6647e-03, 8.6724e-01]],
        [[9.9925e-01, 2.7357e-03, 4.2059e-03,  ..., 2.4006e-03,
          1.4353e-03, 4.8458e-04],
         [2.5114e-04, 5.0887e-03, 4.1885e-03,  ..., 2.4006e-03,
          1.4353e-03, 4.8458e-04],
         [2.5114e-04, 2.7357e-03, 4.5218e-03,  ..., 2.4006e-03,
          9.9569e-01, 9.9855e-01],
         [2.5114e-04, 9.8944e-01, 9.8708e-01,  ..., 9.9280e-01,
          1.4353e-03, 4.8458e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.8321e-03, 2.3196e-02, 1.3225e-03,  ..., 2.1110e-03,
          2.0016e-02, 1.0442e-02],
         [4.8321e-03, 2.3196e-02, 4.2684e-03,  ..., 2.1110e-03,
          1.4279e-02, 1.0442e-02],
         [9.8550e-01, 9.0033e-01, 1.3225e-03,  ..., 9.9367e-01,
          1.5365e-02, 9.6853e-01],
         [4.8321e-03, 5.3277e-02, 9.9309e-01,  ..., 2.1110e-03,
          9.5034e-01, 1.0583e-02]],
        [[4.5571e-03, 3.1359e-03, 2.1873e-05,  ..., 6.5758e-03,
          3.3993e-03, 9.9922e-01],
         [4.5571e-03, 9.6826e-03, 2.1873e-05,  ..., 6.5758e-03,
          3.3993e-03, 2.5835e-04],
         [9.8072e-01, 3.1359e-03, 2.1873e-05,  ..., 9.8027e-01,
          9.8980e-01, 2.5835e-04],
         [1.0164e-02, 9.8405e-01, 9.9993e-01,  ..., 6.5758e-03,
          3.3993e-03, 2.5835e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 341:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2413e-01, 2.3374e-02, 3.3685e-03,  ..., 9.7809e-01,
          9.3875e-01, 6.8342e-02],
         [3.9599e-02, 1.7953e-02, 3.3685e-03,  ..., 5.7674e-03,
          2.6608e-02, 5.5754e-02],
         [1.7649e-02, 1.8864e-02, 3.3685e-03,  ..., 1.0375e-02,
          1.8976e-02, 1.3528e-01],
         [1.8626e-02, 9.3981e-01, 9.8989e-01,  ..., 5.7674e-03,
          1.5671e-02, 7.4062e-01]],
        [[9.9080e-01, 2.8005e-03, 9.8455e-03,  ..., 1.0617e-03,
          1.4124e-03, 6.6597e-04],
         [2.2558e-03, 2.5237e-03, 1.3169e-02,  ..., 1.0617e-03,
          1.4124e-03, 6.6597e-04],
         [4.6861e-03, 2.6261e-03, 1.0794e-02,  ..., 1.0617e-03,
          9.9576e-01, 9.9800e-01],
         [2.2558e-03, 9.9205e-01, 9.6619e-01,  ..., 9.9681e-01,
          1.4124e-03, 6.6597e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1599e-03, 5.6951e-02, 1.3739e-03,  ..., 1.0888e-03,
          4.9567e-02, 1.0416e-02],
         [3.1599e-03, 5.6951e-02, 1.6187e-03,  ..., 1.0888e-03,
          3.5334e-02, 1.0416e-02],
         [9.9052e-01, 5.6485e-01, 1.3739e-03,  ..., 9.9673e-01,
          6.1151e-02, 9.6540e-01],
         [3.1599e-03, 3.2124e-01, 9.9563e-01,  ..., 1.0888e-03,
          8.5395e-01, 1.3764e-02]],
        [[1.0608e-02, 2.4284e-04, 8.7356e-05,  ..., 2.1046e-02,
          6.6913e-03, 9.9870e-01],
         [1.0608e-02, 2.4284e-04, 8.7356e-05,  ..., 2.1046e-02,
          6.6913e-03, 4.3253e-04],
         [9.5301e-01, 2.4284e-04, 8.7356e-05,  ..., 9.2276e-01,
          9.7993e-01, 4.3253e-04],
         [2.5776e-02, 9.9927e-01, 9.9974e-01,  ..., 3.5149e-02,
          6.6913e-03, 4.3253e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:19,033 [Process: 0] Synchronize training processes
2024-08-18 19:51:19,033 [Process: 0] Evaluating...
2024-08-18 19:51:19,039 [Process: 0] EPOCH 342:
2024-08-18 19:51:19,041 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 342:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1613e-01, 7.0928e-03, 1.9401e-02,  ..., 9.9923e-01,
          9.6345e-01, 7.7745e-02],
         [2.5800e-02, 7.0928e-03, 1.9401e-02,  ..., 2.5680e-04,
          2.0083e-02, 5.3550e-02],
         [2.1334e-02, 7.8666e-03, 2.2753e-02,  ..., 2.5680e-04,
          8.2321e-03, 1.2894e-01],
         [3.6741e-02, 9.7795e-01, 9.3845e-01,  ..., 2.5680e-04,
          8.2321e-03, 7.3977e-01]],
        [[9.7131e-01, 1.1609e-03, 1.1234e-02,  ..., 2.8420e-03,
          2.9789e-04, 1.1312e-03],
         [1.2871e-02, 1.1609e-03, 6.9407e-03,  ..., 2.8420e-03,
          2.9789e-04, 1.1312e-03],
         [9.1446e-03, 1.1609e-03, 7.2429e-03,  ..., 2.8420e-03,
          9.9911e-01, 9.9661e-01],
         [6.6717e-03, 9.9652e-01, 9.7458e-01,  ..., 9.9147e-01,
          2.9789e-04, 1.1312e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4951e-02, 1.0016e-01, 1.4556e-03,  ..., 1.4999e-03,
          6.8930e-02, 2.4161e-03],
         [1.1280e-02, 6.5844e-02, 1.4556e-03,  ..., 1.4999e-03,
          4.0029e-02, 2.4161e-03],
         [9.5249e-01, 3.5767e-01, 1.4556e-03,  ..., 9.9550e-01,
          6.1032e-02, 9.9275e-01],
         [1.1280e-02, 4.7633e-01, 9.9563e-01,  ..., 1.4999e-03,
          8.3001e-01, 2.4161e-03]],
        [[1.6047e-02, 7.2763e-05, 1.4337e-05,  ..., 8.1486e-03,
          2.0395e-02, 9.9966e-01],
         [1.6047e-02, 7.2763e-05, 1.4337e-05,  ..., 8.1486e-03,
          1.8441e-02, 1.1475e-04],
         [9.1824e-01, 7.2763e-05, 1.4337e-05,  ..., 9.7555e-01,
          9.3432e-01, 1.1475e-04],
         [4.9662e-02, 9.9978e-01, 9.9996e-01,  ..., 8.1486e-03,
          2.6843e-02, 1.1475e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 343:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8058e-01, 9.0282e-03, 2.3900e-03,  ..., 9.9736e-01,
          9.9004e-01, 9.2854e-02],
         [6.4726e-03, 8.1358e-03, 2.3900e-03,  ..., 8.8068e-04,
          3.3212e-03, 6.8063e-02],
         [6.4726e-03, 8.1358e-03, 2.3900e-03,  ..., 8.8068e-04,
          3.3212e-03, 3.9127e-01],
         [6.4726e-03, 9.7470e-01, 9.9283e-01,  ..., 8.8068e-04,
          3.3212e-03, 4.4782e-01]],
        [[9.9823e-01, 9.4778e-03, 8.0370e-03,  ..., 5.9100e-03,
          1.4390e-03, 1.9509e-04],
         [5.6418e-04, 9.4778e-03, 6.3188e-03,  ..., 5.7834e-03,
          1.4390e-03, 1.9509e-04],
         [6.4116e-04, 9.4778e-03, 6.6330e-03,  ..., 5.7834e-03,
          9.9568e-01, 9.9941e-01],
         [5.6418e-04, 9.7157e-01, 9.7901e-01,  ..., 9.8252e-01,
          1.4390e-03, 1.9509e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:20,189 [Process: 0] Synchronize training processes
2024-08-18 19:51:20,189 [Process: 0] Evaluating...
2024-08-18 19:51:20,191 [Process: 0] EPOCH 343:
2024-08-18 19:51:20,193 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:21,336 [Process: 0] Synchronize training processes
2024-08-18 19:51:21,337 [Process: 0] Evaluating...
2024-08-18 19:51:21,338 [Process: 0] EPOCH 344:
2024-08-18 19:51:21,340 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.7352e-03, 1.1304e-01, 1.6606e-03,  ..., 3.6968e-03,
          8.1531e-02, 3.8408e-03],
         [3.8192e-03, 6.4144e-02, 1.6606e-03,  ..., 3.6968e-03,
          5.2947e-02, 3.8408e-03],
         [9.8563e-01, 1.7219e-01, 1.6606e-03,  ..., 9.8891e-01,
          9.9098e-02, 9.8848e-01],
         [3.8192e-03, 6.5062e-01, 9.9502e-01,  ..., 3.6968e-03,
          7.6642e-01, 3.8408e-03]],
        [[6.3405e-03, 6.6739e-04, 6.3022e-05,  ..., 6.9207e-03,
          4.7750e-03, 9.9977e-01],
         [6.3405e-03, 6.6739e-04, 6.3022e-05,  ..., 6.6835e-03,
          4.7750e-03, 7.6060e-05],
         [9.7128e-01, 6.6739e-04, 6.3022e-05,  ..., 9.7971e-01,
          9.8568e-01, 7.6060e-05],
         [1.6040e-02, 9.9800e-01, 9.9981e-01,  ..., 6.6835e-03,
          4.7750e-03, 7.6060e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 344:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2943e-01, 2.9616e-03, 7.4852e-03,  ..., 9.9773e-01,
          9.9751e-01, 4.3196e-02],
         [1.6550e-02, 2.9616e-03, 7.4852e-03,  ..., 7.5779e-04,
          8.2956e-04, 3.6692e-02],
         [3.2053e-02, 2.9616e-03, 8.6594e-03,  ..., 7.5779e-04,
          8.2956e-04, 6.8905e-02],
         [2.1967e-02, 9.9112e-01, 9.7637e-01,  ..., 7.5779e-04,
          8.2956e-04, 8.5121e-01]],
        [[9.9914e-01, 1.9187e-03, 2.5633e-03,  ..., 3.4976e-03,
          6.9416e-04, 5.2740e-04],
         [2.8823e-04, 1.5372e-03, 2.5633e-03,  ..., 3.4976e-03,
          6.9416e-04, 5.2740e-04],
         [2.8823e-04, 1.5372e-03, 2.5633e-03,  ..., 3.4976e-03,
          9.9792e-01, 9.9842e-01],
         [2.8823e-04, 9.9501e-01, 9.9231e-01,  ..., 9.8951e-01,
          6.9416e-04, 5.2740e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1872e-03, 1.1682e-01, 4.1436e-03,  ..., 2.1336e-03,
          1.5598e-01, 1.8674e-02],
         [4.0447e-03, 6.4245e-02, 4.1436e-03,  ..., 2.1336e-03,
          8.5583e-02, 1.8361e-02],
         [9.8772e-01, 1.8240e-01, 4.1436e-03,  ..., 9.9360e-01,
          3.0211e-01, 9.3652e-01],
         [4.0447e-03, 6.3653e-01, 9.8757e-01,  ..., 2.1336e-03,
          4.5633e-01, 2.6445e-02]],
        [[5.1853e-03, 2.2582e-04, 9.0838e-07,  ..., 5.4405e-02,
          1.1828e-02, 9.9946e-01],
         [5.1853e-03, 2.5591e-04, 9.0838e-07,  ..., 2.8253e-02,
          1.1828e-02, 1.7878e-04],
         [9.7699e-01, 2.2582e-04, 9.0838e-07,  ..., 8.8036e-01,
          9.6184e-01, 1.7878e-04],
         [1.2638e-02, 9.9929e-01, 1.0000e+00,  ..., 3.6977e-02,
          1.4503e-02, 1.7878e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 345:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4719e-01, 7.1274e-03, 6.4211e-04,  ..., 9.9835e-01,
          9.8419e-01, 4.9370e-02],
         [1.2807e-02, 7.2844e-03, 6.4211e-04,  ..., 5.4891e-04,
          5.2703e-03, 3.7101e-02],
         [1.6441e-02, 8.7082e-03, 6.4211e-04,  ..., 5.4891e-04,
          5.2703e-03, 8.8379e-02],
         [2.3565e-02, 9.7688e-01, 9.9807e-01,  ..., 5.4891e-04,
          5.2703e-03, 8.2515e-01]],
        [[9.9133e-01, 3.7249e-03, 3.1513e-03,  ..., 2.1583e-03,
          3.5753e-04, 3.4828e-04],
         [2.5430e-03, 3.7249e-03, 3.6815e-03,  ..., 2.1583e-03,
          3.5753e-04, 3.4828e-04],
         [3.5865e-03, 3.7249e-03, 3.2426e-03,  ..., 2.1583e-03,
          9.9893e-01, 9.9896e-01],
         [2.5430e-03, 9.8883e-01, 9.8992e-01,  ..., 9.9353e-01,
          3.5753e-04, 3.4828e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:22,486 [Process: 0] Synchronize training processes
2024-08-18 19:51:22,486 [Process: 0] Evaluating...
2024-08-18 19:51:22,488 [Process: 0] EPOCH 345:
2024-08-18 19:51:22,490 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:23,634 [Process: 0] Synchronize training processes
2024-08-18 19:51:23,634 [Process: 0] Evaluating...
2024-08-18 19:51:23,636 [Process: 0] EPOCH 346:
2024-08-18 19:51:23,638 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0510e-02, 7.2257e-03, 3.3836e-04,  ..., 3.8627e-03,
          6.8037e-02, 4.6949e-03],
         [7.4992e-03, 4.6226e-03, 3.3836e-04,  ..., 3.8627e-03,
          3.9470e-02, 4.6949e-03],
         [9.7449e-01, 4.6226e-03, 3.3836e-04,  ..., 9.8841e-01,
          5.8612e-02, 9.8592e-01],
         [7.4992e-03, 9.8353e-01, 9.9898e-01,  ..., 3.8627e-03,
          8.3388e-01, 4.6949e-03]],
        [[5.7070e-04, 3.9180e-05, 5.4566e-05,  ..., 1.2079e-02,
          5.8887e-03, 9.9869e-01],
         [5.7070e-04, 3.9180e-05, 5.4566e-05,  ..., 1.2079e-02,
          5.8887e-03, 4.3732e-04],
         [9.9827e-01, 3.9180e-05, 5.4566e-05,  ..., 9.5982e-01,
          9.8233e-01, 4.3732e-04],
         [5.9035e-04, 9.9988e-01, 9.9984e-01,  ..., 1.6026e-02,
          5.8887e-03, 4.3732e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 346:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8251e-01, 2.0695e-03, 7.7804e-03,  ..., 9.9832e-01,
          9.9333e-01, 4.1402e-02],
         [5.7424e-03, 2.0695e-03, 6.0148e-03,  ..., 5.3933e-04,
          2.2248e-03, 3.3465e-02],
         [5.7424e-03, 2.0695e-03, 6.2271e-03,  ..., 5.9955e-04,
          2.2248e-03, 7.2707e-02],
         [6.0086e-03, 9.9379e-01, 9.7998e-01,  ..., 5.3933e-04,
          2.2248e-03, 8.5243e-01]],
        [[9.9906e-01, 2.8048e-03, 2.7043e-02,  ..., 1.2760e-02,
          1.8193e-03, 9.4411e-04],
         [3.1235e-04, 2.8048e-03, 1.1918e-02,  ..., 9.4359e-03,
          1.8193e-03, 9.4411e-04],
         [3.1235e-04, 2.8048e-03, 1.6152e-02,  ..., 1.2372e-02,
          9.9454e-01, 9.9717e-01],
         [3.1235e-04, 9.9159e-01, 9.4489e-01,  ..., 9.6543e-01,
          1.8193e-03, 9.4411e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5101e-02, 2.6058e-02, 1.7685e-03,  ..., 8.1253e-04,
          1.1119e-01, 3.9963e-03],
         [1.9253e-02, 1.9963e-02, 1.7685e-03,  ..., 8.1253e-04,
          5.5346e-02, 3.9963e-03],
         [9.2547e-01, 2.0475e-02, 1.7685e-03,  ..., 9.9756e-01,
          1.0190e-01, 9.8801e-01],
         [2.0179e-02, 9.3350e-01, 9.9469e-01,  ..., 8.1253e-04,
          7.3157e-01, 3.9963e-03]],
        [[2.7703e-03, 4.4305e-05, 5.1866e-05,  ..., 3.3431e-03,
          2.4388e-03, 9.9320e-01],
         [2.7703e-03, 4.4305e-05, 5.1866e-05,  ..., 3.3431e-03,
          2.4388e-03, 2.3330e-03],
         [9.8973e-01, 4.4305e-05, 5.1866e-05,  ..., 9.8997e-01,
          9.9268e-01, 2.2312e-03],
         [4.7326e-03, 9.9987e-01, 9.9984e-01,  ..., 3.3431e-03,
          2.4388e-03, 2.2312e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 347:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:24,783 [Process: 0] Synchronize training processes
2024-08-18 19:51:24,783 [Process: 0] Evaluating...
2024-08-18 19:51:24,785 [Process: 0] EPOCH 347:
2024-08-18 19:51:24,787 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:25,931 [Process: 0] Synchronize training processes
2024-08-18 19:51:25,931 [Process: 0] Evaluating...
2024-08-18 19:51:25,933 [Process: 0] EPOCH 348:
2024-08-18 19:51:25,935 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2462e-01, 2.4489e-03, 1.5888e-03,  ..., 9.9550e-01,
          9.9539e-01, 1.6931e-02],
         [2.3582e-02, 2.4489e-03, 1.5888e-03,  ..., 1.4995e-03,
          1.7804e-03, 1.6931e-02],
         [2.7199e-02, 2.4489e-03, 1.5888e-03,  ..., 1.4995e-03,
          1.4164e-03, 2.8018e-02],
         [2.4601e-02, 9.9265e-01, 9.9523e-01,  ..., 1.4995e-03,
          1.4164e-03, 9.3812e-01]],
        [[9.9853e-01, 1.0799e-03, 4.0360e-03,  ..., 1.5533e-03,
          5.8172e-03, 5.5927e-04],
         [4.9054e-04, 1.0799e-03, 4.0360e-03,  ..., 1.5533e-03,
          5.8172e-03, 5.5927e-04],
         [4.9054e-04, 1.0799e-03, 4.4689e-03,  ..., 1.5738e-03,
          9.8255e-01, 9.9832e-01],
         [4.9054e-04, 9.9676e-01, 9.8746e-01,  ..., 9.9532e-01,
          5.8172e-03, 5.5927e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4788e-03, 1.6359e-02, 2.3022e-04,  ..., 2.1621e-03,
          1.3987e-01, 2.2990e-02],
         [1.4243e-03, 1.4401e-02, 2.3022e-04,  ..., 2.1621e-03,
          5.9327e-02, 1.7752e-02],
         [9.9567e-01, 1.4401e-02, 2.3022e-04,  ..., 9.9351e-01,
          1.1958e-01, 9.3868e-01],
         [1.4243e-03, 9.5484e-01, 9.9931e-01,  ..., 2.1621e-03,
          6.8122e-01, 2.0582e-02]],
        [[1.7182e-02, 2.5951e-04, 2.1656e-05,  ..., 1.4130e-02,
          4.1288e-03, 9.9932e-01],
         [1.7182e-02, 2.5951e-04, 2.1656e-05,  ..., 1.4130e-02,
          4.1288e-03, 2.2813e-04],
         [9.0095e-01, 2.5951e-04, 2.1656e-05,  ..., 9.5320e-01,
          9.8761e-01, 2.2813e-04],
         [6.4683e-02, 9.9922e-01, 9.9994e-01,  ..., 1.8545e-02,
          4.1288e-03, 2.2813e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 348:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5433e-01, 1.0525e-03, 3.1192e-03,  ..., 9.9193e-01,
          9.9876e-01, 7.8311e-02],
         [1.5327e-02, 1.0525e-03, 3.1192e-03,  ..., 2.7660e-03,
          4.1217e-04, 6.8978e-02],
         [1.3893e-02, 1.0525e-03, 3.3962e-03,  ..., 3.1628e-03,
          4.1217e-04, 3.6776e-01],
         [1.6455e-02, 9.9684e-01, 9.9037e-01,  ..., 2.1429e-03,
          4.1217e-04, 4.8495e-01]],
        [[9.9176e-01, 4.0273e-03, 5.9915e-03,  ..., 1.0681e-03,
          2.4808e-03, 1.0425e-04],
         [3.0296e-03, 4.0884e-03, 5.9268e-03,  ..., 1.0681e-03,
          2.4808e-03, 1.0425e-04],
         [2.6036e-03, 4.0273e-03, 6.7228e-03,  ..., 1.0681e-03,
          9.9256e-01, 9.9969e-01],
         [2.6036e-03, 9.8786e-01, 9.8136e-01,  ..., 9.9680e-01,
          2.4808e-03, 1.0425e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.3287e-03, 3.3555e-03, 9.2024e-04,  ..., 2.6829e-03,
          2.0535e-01, 1.9334e-02],
         [3.3339e-03, 2.5662e-03, 9.2024e-04,  ..., 2.6829e-03,
          7.8009e-02, 1.4523e-02],
         [9.8800e-01, 2.5662e-03, 9.2024e-04,  ..., 9.9195e-01,
          2.1349e-01, 9.5162e-01],
         [3.3339e-03, 9.9151e-01, 9.9724e-01,  ..., 2.6829e-03,
          5.0315e-01, 1.4523e-02]],
        [[8.6904e-03, 4.9648e-05, 5.5011e-05,  ..., 1.3571e-02,
          5.9180e-03, 9.9941e-01],
         [8.6904e-03, 4.9648e-05, 5.5011e-05,  ..., 1.3571e-02,
          5.9180e-03, 1.9576e-04],
         [9.7036e-01, 4.9648e-05, 5.5011e-05,  ..., 9.5574e-01,
          9.8225e-01, 1.9576e-04],
         [1.2259e-02, 9.9985e-01, 9.9983e-01,  ..., 1.7124e-02,
          5.9180e-03, 1.9576e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:27,079 [Process: 0] Synchronize training processes
2024-08-18 19:51:27,079 [Process: 0] Evaluating...
2024-08-18 19:51:27,081 [Process: 0] EPOCH 349:
2024-08-18 19:51:27,083 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 349:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5569e-01, 2.9781e-02, 1.8285e-02,  ..., 9.9668e-01,
          9.9561e-01, 8.4945e-02],
         [1.0061e-02, 1.8759e-02, 1.2749e-02,  ..., 1.1067e-03,
          1.4640e-03, 6.7646e-02],
         [1.4807e-02, 2.6973e-02, 1.6365e-02,  ..., 1.1067e-03,
          1.4640e-03, 1.3806e-01],
         [1.9438e-02, 9.2449e-01, 9.5260e-01,  ..., 1.1067e-03,
          1.4640e-03, 7.0935e-01]],
        [[9.9728e-01, 2.2117e-03, 7.0246e-03,  ..., 8.5547e-03,
          1.6761e-04, 3.9536e-04],
         [8.4769e-04, 2.2117e-03, 6.2018e-03,  ..., 8.5547e-03,
          1.6761e-04, 3.9536e-04],
         [1.0215e-03, 2.2117e-03, 6.9753e-03,  ..., 1.1151e-02,
          9.9950e-01, 9.9881e-01],
         [8.4769e-04, 9.9336e-01, 9.7980e-01,  ..., 9.7174e-01,
          1.6761e-04, 3.9536e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8745e-03, 7.5162e-03, 3.1957e-04,  ..., 4.9716e-03,
          9.7967e-03, 8.5020e-03],
         [3.8745e-03, 6.3939e-03, 3.1957e-04,  ..., 4.9716e-03,
          8.5139e-03, 8.5020e-03],
         [9.8838e-01, 6.3939e-03, 3.1957e-04,  ..., 9.8509e-01,
          8.5139e-03, 9.7367e-01],
         [3.8745e-03, 9.7970e-01, 9.9904e-01,  ..., 4.9716e-03,
          9.7318e-01, 9.3237e-03]],
        [[2.8885e-03, 2.2863e-05, 1.0355e-04,  ..., 1.0496e-02,
          9.0977e-03, 9.9781e-01],
         [2.8885e-03, 2.2863e-05, 1.0355e-04,  ..., 1.0496e-02,
          6.0079e-03, 7.3016e-04],
         [9.9133e-01, 2.2863e-05, 1.0355e-04,  ..., 9.6748e-01,
          9.7889e-01, 7.3016e-04],
         [2.8885e-03, 9.9993e-01, 9.9969e-01,  ..., 1.1529e-02,
          6.0079e-03, 7.3016e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 350:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5805e-01, 7.2176e-03, 7.6818e-03,  ..., 9.9915e-01,
          9.6023e-01, 3.0572e-02],
         [1.8966e-02, 7.2176e-03, 6.1129e-03,  ..., 2.8263e-04,
          8.8888e-03, 3.1050e-02],
         [1.1721e-02, 7.2176e-03, 6.4918e-03,  ..., 2.8263e-04,
          8.8888e-03, 5.5526e-02],
         [1.1260e-02, 9.7835e-01, 9.7971e-01,  ..., 2.8263e-04,
          2.1989e-02, 8.8285e-01]],
        [[9.9895e-01, 5.8928e-03, 6.3201e-03,  ..., 1.2234e-03,
          1.6653e-04, 2.3420e-04],
         [3.4929e-04, 5.8928e-03, 5.5604e-03,  ..., 1.2234e-03,
          1.6653e-04, 2.3420e-04],
         [3.4929e-04, 6.3631e-03, 5.5604e-03,  ..., 1.2234e-03,
          9.9950e-01, 9.9930e-01],
         [3.4929e-04, 9.8185e-01, 9.8256e-01,  ..., 9.9633e-01,
          1.6653e-04, 2.3420e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:28,224 [Process: 0] Synchronize training processes
2024-08-18 19:51:28,224 [Process: 0] Evaluating...
2024-08-18 19:51:28,226 [Process: 0] EPOCH 350:
2024-08-18 19:51:28,228 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:29,371 [Process: 0] Synchronize training processes
2024-08-18 19:51:29,371 [Process: 0] Evaluating...
2024-08-18 19:51:29,373 [Process: 0] EPOCH 351:
2024-08-18 19:51:29,375 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1158e-02, 2.1898e-03, 5.2618e-04,  ..., 3.6708e-03,
          2.8307e-02, 7.1628e-03],
         [7.5164e-03, 2.1898e-03, 5.2618e-04,  ..., 3.6708e-03,
          1.5766e-02, 6.6409e-03],
         [9.7381e-01, 2.1898e-03, 5.2618e-04,  ..., 9.8899e-01,
          1.5766e-02, 9.7956e-01],
         [7.5164e-03, 9.9343e-01, 9.9842e-01,  ..., 3.6708e-03,
          9.4016e-01, 6.6409e-03]],
        [[6.3086e-03, 1.0763e-04, 7.2734e-04,  ..., 7.6040e-03,
          8.1354e-03, 9.9734e-01],
         [6.3086e-03, 1.0763e-04, 7.2734e-04,  ..., 7.6040e-03,
          6.7750e-03, 8.8346e-04],
         [9.7668e-01, 1.0763e-04, 7.2734e-04,  ..., 9.7719e-01,
          9.7831e-01, 8.8346e-04],
         [1.0704e-02, 9.9968e-01, 9.9782e-01,  ..., 7.6040e-03,
          6.7750e-03, 8.8915e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 351:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.3893e-01, 5.2957e-03, 9.1972e-03,  ..., 9.9014e-01,
          8.8633e-01, 1.9106e-02],
         [1.0095e-01, 5.2957e-03, 1.2087e-02,  ..., 2.6064e-03,
          5.3273e-02, 1.9106e-02],
         [2.8333e-02, 5.2957e-03, 9.1972e-03,  ..., 4.6470e-03,
          3.2969e-02, 3.2772e-02],
         [3.1791e-02, 9.8411e-01, 9.6952e-01,  ..., 2.6064e-03,
          2.7432e-02, 9.2902e-01]],
        [[9.9010e-01, 2.4048e-03, 2.9789e-03,  ..., 4.9078e-03,
          3.2028e-04, 2.1005e-04],
         [3.2677e-03, 2.4048e-03, 2.9789e-03,  ..., 4.9078e-03,
          3.2028e-04, 2.1005e-04],
         [3.3611e-03, 2.4716e-03, 2.9789e-03,  ..., 5.2085e-03,
          9.9904e-01, 9.9937e-01],
         [3.2677e-03, 9.9272e-01, 9.9106e-01,  ..., 9.8498e-01,
          3.2028e-04, 2.1005e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.6757e-03, 6.9225e-04, 1.7024e-03,  ..., 7.6290e-03,
          1.4953e-01, 7.9488e-03],
         [5.6757e-03, 6.9225e-04, 1.7024e-03,  ..., 6.3044e-03,
          7.3092e-02, 6.3487e-03],
         [9.8297e-01, 6.9225e-04, 1.7024e-03,  ..., 9.7976e-01,
          1.7598e-01, 9.7935e-01],
         [5.6757e-03, 9.9792e-01, 9.9489e-01,  ..., 6.3044e-03,
          6.0139e-01, 6.3487e-03]],
        [[3.1743e-03, 4.2100e-03, 5.3081e-05,  ..., 2.7235e-02,
          1.2896e-02, 9.9561e-01],
         [3.1743e-03, 4.2100e-03, 5.3081e-05,  ..., 1.6285e-02,
          1.0304e-02, 1.4277e-03],
         [9.8991e-01, 4.2100e-03, 5.3081e-05,  ..., 9.4020e-01,
          9.6650e-01, 1.4277e-03],
         [3.7452e-03, 9.8737e-01, 9.9984e-01,  ..., 1.6285e-02,
          1.0304e-02, 1.5347e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 352:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.4585e-01, 2.6084e-03, 6.4688e-03,  ..., 9.9531e-01,
          9.9310e-01, 1.1382e-02],
         [1.1298e-01, 2.7613e-03, 6.0296e-03,  ..., 1.5619e-03,
          1.7789e-03, 1.1382e-02],
         [2.0586e-02, 2.6084e-03, 6.0296e-03,  ..., 1.5619e-03,
          1.7789e-03, 1.6816e-02],
         [2.0586e-02, 9.9202e-01, 9.8147e-01,  ..., 1.5619e-03,
          3.3373e-03, 9.6042e-01]],
        [[9.9552e-01, 9.6565e-04, 3.3371e-03,  ..., 2.0028e-03,
          2.9924e-04, 4.3186e-04],
         [1.4925e-03, 9.6565e-04, 3.3371e-03,  ..., 2.0028e-03,
          2.9924e-04, 4.3186e-04],
         [1.4925e-03, 9.6565e-04, 3.3436e-03,  ..., 2.0215e-03,
          9.9910e-01, 9.9870e-01],
         [1.4925e-03, 9.9710e-01, 9.8998e-01,  ..., 9.9397e-01,
          2.9924e-04, 4.3186e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:30,526 [Process: 0] Synchronize training processes
2024-08-18 19:51:30,526 [Process: 0] Evaluating...
2024-08-18 19:51:30,538 [Process: 0] EPOCH 352:
2024-08-18 19:51:30,540 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:31,686 [Process: 0] Synchronize training processes
2024-08-18 19:51:31,687 [Process: 0] Evaluating...
2024-08-18 19:51:31,688 [Process: 0] EPOCH 353:
2024-08-18 19:51:31,690 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0344e-03, 1.8596e-03, 6.8401e-05,  ..., 6.4838e-03,
          1.0054e-02, 6.6959e-03],
         [3.5011e-03, 1.8596e-03, 6.8401e-05,  ..., 6.4838e-03,
          1.0054e-02, 6.1353e-03],
         [9.8896e-01, 1.8596e-03, 6.8401e-05,  ..., 9.8055e-01,
          9.6893e-01, 9.8103e-01],
         [3.5011e-03, 9.9442e-01, 9.9979e-01,  ..., 6.4838e-03,
          1.0959e-02, 6.1353e-03]],
        [[3.3343e-04, 1.7314e-03, 2.3868e-05,  ..., 5.7196e-03,
          6.7769e-03, 9.9043e-01],
         [3.3343e-04, 1.7314e-03, 2.3868e-05,  ..., 5.7196e-03,
          6.7769e-03, 3.1906e-03],
         [9.9900e-01, 1.7314e-03, 2.3868e-05,  ..., 9.8284e-01,
          9.7967e-01, 3.1906e-03],
         [3.3343e-04, 9.9481e-01, 9.9993e-01,  ..., 5.7196e-03,
          6.7769e-03, 3.1906e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 353:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6588e-01, 5.2759e-03, 3.9611e-03,  ..., 9.9950e-01,
          9.9884e-01, 2.4731e-02],
         [1.4852e-02, 6.5833e-03, 5.4228e-03,  ..., 1.6768e-04,
          4.2844e-04, 3.4295e-02],
         [9.6360e-03, 5.2759e-03, 3.9611e-03,  ..., 1.6768e-04,
          3.6811e-04, 4.7985e-02],
         [9.6360e-03, 9.8286e-01, 9.8665e-01,  ..., 1.6768e-04,
          3.6811e-04, 8.9299e-01]],
        [[9.9700e-01, 3.3358e-03, 2.8130e-03,  ..., 2.3181e-03,
          1.2174e-03, 2.7615e-03],
         [9.9958e-04, 3.3358e-03, 4.0404e-03,  ..., 2.3181e-03,
          1.2174e-03, 2.7615e-03],
         [9.9958e-04, 3.3358e-03, 2.8130e-03,  ..., 2.3181e-03,
          9.9635e-01, 9.9172e-01],
         [9.9958e-04, 9.8999e-01, 9.9033e-01,  ..., 9.9305e-01,
          1.2174e-03, 2.7615e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1493e-03, 2.4082e-04, 3.4994e-04,  ..., 9.6157e-03,
          5.3947e-02, 7.8190e-03],
         [4.1493e-03, 2.4082e-04, 1.0280e-03,  ..., 6.0420e-03,
          4.6365e-02, 7.7884e-03],
         [9.8755e-01, 2.4082e-04, 3.4994e-04,  ..., 9.7830e-01,
          7.7824e-01, 9.7660e-01],
         [4.1493e-03, 9.9928e-01, 9.9827e-01,  ..., 6.0420e-03,
          1.2144e-01, 7.7884e-03]],
        [[2.9417e-03, 4.2852e-04, 3.2015e-05,  ..., 3.6199e-03,
          8.0534e-03, 9.9909e-01],
         [2.9417e-03, 4.2852e-04, 3.2015e-05,  ..., 3.6199e-03,
          8.0534e-03, 3.0483e-04],
         [9.9117e-01, 4.2852e-04, 3.2015e-05,  ..., 9.8914e-01,
          9.7584e-01, 3.0483e-04],
         [2.9417e-03, 9.9871e-01, 9.9990e-01,  ..., 3.6199e-03,
          8.0534e-03, 3.0483e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 354:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:32,834 [Process: 0] Synchronize training processes
2024-08-18 19:51:32,834 [Process: 0] Evaluating...
2024-08-18 19:51:32,836 [Process: 0] EPOCH 354:
2024-08-18 19:51:32,838 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:33,981 [Process: 0] Synchronize training processes
2024-08-18 19:51:33,982 [Process: 0] Evaluating...
2024-08-18 19:51:33,983 [Process: 0] EPOCH 355:
2024-08-18 19:51:33,985 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8772e-01, 7.6322e-03, 4.6922e-03,  ..., 9.7623e-01,
          9.9373e-01, 4.2534e-02],
         [3.9873e-03, 7.6322e-03, 4.6922e-03,  ..., 1.0015e-02,
          2.0901e-03, 4.2534e-02],
         [3.9873e-03, 7.6491e-03, 4.6922e-03,  ..., 6.8786e-03,
          2.0901e-03, 8.0052e-01],
         [4.3012e-03, 9.7709e-01, 9.8592e-01,  ..., 6.8786e-03,
          2.0901e-03, 1.1442e-01]],
        [[9.9506e-01, 1.0092e-02, 3.3313e-03,  ..., 1.6710e-02,
          1.7200e-03, 5.3564e-04],
         [1.5415e-03, 1.0092e-02, 3.3313e-03,  ..., 1.1048e-02,
          1.7200e-03, 5.3564e-04],
         [1.8599e-03, 1.1897e-02, 3.3313e-03,  ..., 1.3997e-02,
          9.9484e-01, 9.9839e-01],
         [1.5415e-03, 9.6792e-01, 9.9001e-01,  ..., 9.5825e-01,
          1.7200e-03, 5.3564e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9915e-03, 5.2482e-03, 1.9646e-04,  ..., 2.5708e-03,
          9.4428e-02, 7.0565e-03],
         [4.3952e-03, 9.1624e-03, 1.9646e-04,  ..., 2.5708e-03,
          4.6994e-02, 7.0026e-03],
         [9.8622e-01, 5.2482e-03, 1.9646e-04,  ..., 9.9229e-01,
          1.1097e-01, 9.7894e-01],
         [4.3952e-03, 9.8034e-01, 9.9941e-01,  ..., 2.5708e-03,
          7.4761e-01, 7.0026e-03]],
        [[9.1031e-04, 2.2257e-04, 8.6360e-06,  ..., 1.3159e-02,
          7.5191e-03, 9.9631e-01],
         [9.1031e-04, 2.2257e-04, 8.6360e-06,  ..., 1.1693e-02,
          7.5191e-03, 1.2297e-03],
         [9.9700e-01, 2.2257e-04, 8.6360e-06,  ..., 9.6228e-01,
          9.7744e-01, 1.2297e-03],
         [1.1798e-03, 9.9933e-01, 9.9997e-01,  ..., 1.2866e-02,
          7.5191e-03, 1.2297e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 355:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5041e-01, 7.3364e-04, 4.7974e-03,  ..., 9.9392e-01,
          9.9011e-01, 2.5439e-02],
         [1.4781e-02, 7.3364e-04, 5.7453e-03,  ..., 1.7179e-03,
          3.2966e-03, 2.5439e-02],
         [1.8978e-02, 7.3364e-04, 5.6428e-03,  ..., 2.6465e-03,
          3.2966e-03, 4.2440e-02],
         [1.5828e-02, 9.9780e-01, 9.8381e-01,  ..., 1.7179e-03,
          3.2966e-03, 9.0668e-01]],
        [[9.7498e-01, 1.2309e-03, 6.2915e-03,  ..., 4.3777e-03,
          6.0358e-04, 2.0261e-04],
         [7.6751e-03, 1.2309e-03, 6.2915e-03,  ..., 4.3777e-03,
          6.0358e-04, 2.0261e-04],
         [9.0973e-03, 1.2309e-03, 6.2915e-03,  ..., 4.3777e-03,
          9.9819e-01, 9.9939e-01],
         [8.2428e-03, 9.9631e-01, 9.8113e-01,  ..., 9.8687e-01,
          6.0358e-04, 2.0261e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6823e-03, 7.3590e-04, 1.9498e-04,  ..., 8.3814e-03,
          1.6680e-03, 1.0497e-02],
         [2.6823e-03, 7.3590e-04, 1.9498e-04,  ..., 7.8143e-03,
          1.6680e-03, 8.8006e-03],
         [9.9195e-01, 7.3590e-04, 1.9498e-04,  ..., 9.7584e-01,
          1.6680e-03, 9.7190e-01],
         [2.6823e-03, 9.9779e-01, 9.9942e-01,  ..., 7.9599e-03,
          9.9500e-01, 8.8006e-03]],
        [[8.0484e-03, 1.6191e-03, 2.7981e-05,  ..., 2.9054e-03,
          2.2388e-02, 9.9739e-01],
         [8.0484e-03, 1.6191e-03, 2.7981e-05,  ..., 2.9054e-03,
          1.1877e-02, 8.7108e-04],
         [9.7260e-01, 1.6191e-03, 2.7981e-05,  ..., 9.9128e-01,
          9.5386e-01, 8.7108e-04],
         [1.1305e-02, 9.9514e-01, 9.9992e-01,  ..., 2.9054e-03,
          1.1877e-02, 8.7108e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:35,130 [Process: 0] Synchronize training processes
2024-08-18 19:51:35,130 [Process: 0] Evaluating...
2024-08-18 19:51:35,132 [Process: 0] EPOCH 356:
2024-08-18 19:51:35,133 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 356:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5970e-01, 2.6227e-03, 6.7096e-03,  ..., 9.8868e-01,
          9.9780e-01, 3.6391e-02],
         [1.1751e-02, 2.6227e-03, 6.2249e-03,  ..., 3.0675e-03,
          7.3450e-04, 4.3207e-02],
         [1.4273e-02, 2.6227e-03, 6.2249e-03,  ..., 5.1842e-03,
          7.3450e-04, 7.4428e-02],
         [1.4272e-02, 9.9213e-01, 9.8084e-01,  ..., 3.0675e-03,
          7.3450e-04, 8.4597e-01]],
        [[9.6649e-01, 4.2368e-03, 1.0085e-02,  ..., 1.3293e-02,
          6.5734e-04, 2.9859e-04],
         [9.4238e-03, 4.2368e-03, 1.2182e-02,  ..., 1.5835e-02,
          6.5734e-04, 2.9859e-04],
         [1.4664e-02, 4.2368e-03, 1.2827e-02,  ..., 1.8802e-02,
          9.9803e-01, 9.9910e-01],
         [9.4238e-03, 9.8729e-01, 9.6491e-01,  ..., 9.5207e-01,
          6.5734e-04, 2.9859e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.4936e-03, 1.2041e-03, 1.1734e-03,  ..., 8.9574e-03,
          1.5644e-03, 1.6866e-02],
         [5.7492e-03, 1.2041e-03, 1.1734e-03,  ..., 8.2469e-03,
          1.5644e-03, 1.3909e-02],
         [9.8101e-01, 1.2041e-03, 1.1734e-03,  ..., 9.7455e-01,
          1.5644e-03, 9.5382e-01],
         [5.7492e-03, 9.9639e-01, 9.9648e-01,  ..., 8.2469e-03,
          9.9531e-01, 1.5408e-02]],
        [[1.4091e-02, 2.3660e-05, 1.4073e-04,  ..., 4.8449e-03,
          1.3773e-03, 9.9906e-01],
         [1.4091e-02, 2.3660e-05, 1.4073e-04,  ..., 4.8449e-03,
          1.3773e-03, 3.1440e-04],
         [9.3638e-01, 2.3660e-05, 1.4073e-04,  ..., 9.8516e-01,
          9.9587e-01, 3.1440e-04],
         [3.5436e-02, 9.9993e-01, 9.9958e-01,  ..., 5.1510e-03,
          1.3773e-03, 3.1440e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 357:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.3139e-01, 4.1452e-03, 5.7479e-03,  ..., 9.9952e-01,
          9.8986e-01, 1.2583e-02],
         [3.4572e-02, 4.1452e-03, 5.7479e-03,  ..., 1.6135e-04,
          3.3789e-03, 1.3585e-02],
         [5.2720e-02, 4.1452e-03, 5.7479e-03,  ..., 1.6135e-04,
          3.3789e-03, 1.7015e-02],
         [8.1319e-02, 9.8756e-01, 9.8276e-01,  ..., 1.6135e-04,
          3.3789e-03, 9.5682e-01]],
        [[9.9456e-01, 3.7993e-03, 1.3937e-03,  ..., 6.5610e-03,
          4.8812e-04, 2.8680e-04],
         [1.8124e-03, 3.7993e-03, 1.3937e-03,  ..., 5.5463e-03,
          4.8812e-04, 2.8680e-04],
         [1.8124e-03, 3.7993e-03, 1.3937e-03,  ..., 5.5463e-03,
          9.9854e-01, 9.9914e-01],
         [1.8124e-03, 9.8860e-01, 9.9582e-01,  ..., 9.8235e-01,
          4.8812e-04, 2.8680e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:36,278 [Process: 0] Synchronize training processes
2024-08-18 19:51:36,278 [Process: 0] Evaluating...
2024-08-18 19:51:36,280 [Process: 0] EPOCH 357:
2024-08-18 19:51:36,282 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:37,426 [Process: 0] Synchronize training processes
2024-08-18 19:51:37,426 [Process: 0] Evaluating...
2024-08-18 19:51:37,428 [Process: 0] EPOCH 358:
2024-08-18 19:51:37,429 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4512e-03, 2.7768e-03, 1.9801e-04,  ..., 1.6772e-02,
          7.2032e-02, 2.8004e-02],
         [3.4512e-03, 2.7768e-03, 1.9801e-04,  ..., 1.2928e-02,
          2.9630e-02, 2.0203e-02],
         [9.8965e-01, 2.7768e-03, 1.9801e-04,  ..., 9.5480e-01,
          4.3485e-02, 9.2443e-01],
         [3.4512e-03, 9.9167e-01, 9.9941e-01,  ..., 1.5502e-02,
          8.5485e-01, 2.7360e-02]],
        [[1.9013e-02, 9.3336e-04, 2.2316e-05,  ..., 5.0848e-03,
          1.5108e-02, 9.9449e-01],
         [1.9013e-02, 9.3336e-04, 2.2316e-05,  ..., 5.0848e-03,
          1.2697e-02, 1.8372e-03],
         [9.1945e-01, 9.3336e-04, 2.2316e-05,  ..., 9.8475e-01,
          9.5797e-01, 1.8372e-03],
         [4.2520e-02, 9.9720e-01, 9.9993e-01,  ..., 5.0848e-03,
          1.4221e-02, 1.8372e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 358:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6747e-01, 9.3558e-03, 8.7238e-03,  ..., 9.9460e-01,
          9.7257e-01, 4.2019e-02],
         [4.7773e-02, 9.5635e-03, 7.5649e-03,  ..., 1.7996e-03,
          9.1427e-03, 4.0791e-02],
         [2.9692e-02, 1.0751e-02, 8.2915e-03,  ..., 1.7996e-03,
          9.1427e-03, 1.1737e-01],
         [5.5066e-02, 9.7033e-01, 9.7542e-01,  ..., 1.7996e-03,
          9.1427e-03, 7.9982e-01]],
        [[9.9825e-01, 3.4320e-03, 1.4012e-03,  ..., 4.8004e-03,
          8.6291e-03, 2.0698e-03],
         [5.8206e-04, 3.4320e-03, 1.4012e-03,  ..., 4.8004e-03,
          8.6291e-03, 2.0698e-03],
         [5.8206e-04, 3.4320e-03, 1.4012e-03,  ..., 5.6347e-03,
          9.7411e-01, 9.9379e-01],
         [5.8206e-04, 9.8970e-01, 9.9580e-01,  ..., 9.8476e-01,
          8.6291e-03, 2.0698e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6518e-03, 3.0344e-04, 2.1283e-04,  ..., 6.8979e-03,
          2.2520e-01, 9.7181e-03],
         [4.6518e-03, 4.0613e-04, 2.1283e-04,  ..., 6.8979e-03,
          7.8363e-02, 9.7181e-03],
         [9.8604e-01, 3.0344e-04, 2.1283e-04,  ..., 9.7931e-01,
          2.1109e-01, 9.6997e-01],
         [4.6518e-03, 9.9899e-01, 9.9936e-01,  ..., 6.8979e-03,
          4.8534e-01, 1.0596e-02]],
        [[9.3429e-03, 4.3480e-04, 2.0889e-03,  ..., 8.9773e-03,
          3.2881e-03, 9.9577e-01],
         [9.3429e-03, 4.3480e-04, 9.7680e-04,  ..., 8.9773e-03,
          3.2881e-03, 1.4104e-03],
         [9.6636e-01, 4.3480e-04, 9.7680e-04,  ..., 9.7107e-01,
          9.9014e-01, 1.4104e-03],
         [1.4956e-02, 9.9870e-01, 9.9596e-01,  ..., 1.0975e-02,
          3.2881e-03, 1.4104e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 359:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.8214e-01, 4.0080e-03, 5.9258e-03,  ..., 9.9732e-01,
          9.8244e-01, 1.0418e-02],
         [1.3645e-01, 4.0080e-03, 1.0547e-02,  ..., 8.9271e-04,
          5.8549e-03, 1.0418e-02],
         [4.9635e-02, 4.3118e-03, 6.8975e-03,  ..., 8.9271e-04,
          5.8549e-03, 1.4974e-02],
         [1.3177e-01, 9.8767e-01, 9.7663e-01,  ..., 8.9271e-04,
          5.8549e-03, 9.6419e-01]],
        [[9.9100e-01, 1.1947e-02, 4.2318e-03,  ..., 6.0561e-03,
          9.9189e-04, 1.2223e-03],
         [2.9408e-03, 7.9060e-03, 4.2318e-03,  ..., 4.9361e-03,
          9.9189e-04, 1.2223e-03],
         [3.1185e-03, 7.9060e-03, 4.9185e-03,  ..., 5.3372e-03,
          9.9702e-01, 9.9633e-01],
         [2.9408e-03, 9.7224e-01, 9.8662e-01,  ..., 9.8367e-01,
          9.9189e-04, 1.2223e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:38,573 [Process: 0] Synchronize training processes
2024-08-18 19:51:38,574 [Process: 0] Evaluating...
2024-08-18 19:51:38,575 [Process: 0] EPOCH 359:
2024-08-18 19:51:38,577 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:39,718 [Process: 0] Synchronize training processes
2024-08-18 19:51:39,719 [Process: 0] Evaluating...
2024-08-18 19:51:39,720 [Process: 0] EPOCH 360:
2024-08-18 19:51:39,722 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6035e-03, 5.6324e-04, 1.1711e-04,  ..., 3.1260e-03,
          2.4714e-02, 4.9031e-03],
         [2.6035e-03, 1.0619e-03, 1.1711e-04,  ..., 3.1260e-03,
          1.5106e-02, 4.9031e-03],
         [9.9219e-01, 5.6324e-04, 1.1711e-04,  ..., 9.9062e-01,
          1.5106e-02, 9.8529e-01],
         [2.6035e-03, 9.9781e-01, 9.9965e-01,  ..., 3.1260e-03,
          9.4507e-01, 4.9031e-03]],
        [[1.6172e-03, 4.1533e-04, 1.0608e-05,  ..., 7.4833e-03,
          6.3270e-03, 9.3494e-01],
         [1.6172e-03, 4.1533e-04, 1.0608e-05,  ..., 7.4833e-03,
          6.3270e-03, 2.3313e-02],
         [9.9515e-01, 4.1533e-04, 1.0608e-05,  ..., 9.7755e-01,
          9.8102e-01, 1.8636e-02],
         [1.6172e-03, 9.9875e-01, 9.9997e-01,  ..., 7.4833e-03,
          6.3270e-03, 2.3107e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 360:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1585e-01, 4.5441e-03, 2.7885e-03,  ..., 9.9836e-01,
          9.9968e-01, 9.8972e-03],
         [4.4233e-02, 4.5441e-03, 2.7885e-03,  ..., 5.4794e-04,
          1.0599e-04, 9.2511e-03],
         [1.9477e-02, 4.9871e-03, 2.8805e-03,  ..., 5.4794e-04,
          1.0599e-04, 1.1203e-02],
         [2.0437e-02, 9.8592e-01, 9.9154e-01,  ..., 5.4794e-04,
          1.0599e-04, 9.6965e-01]],
        [[9.9828e-01, 2.4993e-03, 1.0857e-03,  ..., 7.7130e-03,
          1.6548e-03, 3.7065e-04],
         [5.7307e-04, 2.4993e-03, 1.0857e-03,  ..., 7.7130e-03,
          1.6548e-03, 3.7065e-04],
         [5.7307e-04, 2.4993e-03, 1.0857e-03,  ..., 8.7428e-03,
          9.9504e-01, 9.9889e-01],
         [5.7307e-04, 9.9250e-01, 9.9674e-01,  ..., 9.7583e-01,
          1.6548e-03, 3.7065e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7402e-03, 6.8952e-04, 1.7734e-02,  ..., 5.5796e-03,
          1.7215e-01, 5.9700e-03],
         [5.6810e-03, 6.8952e-04, 4.6311e-01,  ..., 4.8358e-03,
          7.6865e-02, 5.8652e-03],
         [9.7890e-01, 6.8952e-04, 1.7734e-02,  ..., 9.8475e-01,
          1.9344e-01, 9.8230e-01],
         [5.6810e-03, 9.9793e-01, 5.0143e-01,  ..., 4.8358e-03,
          5.5754e-01, 5.8652e-03]],
        [[4.0215e-03, 4.2503e-05, 3.9704e-06,  ..., 5.2670e-03,
          2.6473e-03, 9.9282e-01],
         [4.0215e-03, 4.2503e-05, 3.9704e-06,  ..., 5.2670e-03,
          2.6473e-03, 3.0811e-03],
         [9.8704e-01, 4.2503e-05, 3.9704e-06,  ..., 9.8420e-01,
          9.9206e-01, 2.0485e-03],
         [4.9191e-03, 9.9987e-01, 9.9999e-01,  ..., 5.2670e-03,
          2.6473e-03, 2.0485e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 361:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:40,863 [Process: 0] Synchronize training processes
2024-08-18 19:51:40,863 [Process: 0] Evaluating...
2024-08-18 19:51:40,865 [Process: 0] EPOCH 361:
2024-08-18 19:51:40,867 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:42,011 [Process: 0] Synchronize training processes
2024-08-18 19:51:42,011 [Process: 0] Evaluating...
2024-08-18 19:51:42,017 [Process: 0] EPOCH 362:
2024-08-18 19:51:42,019 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.9414e-01, 2.2977e-03, 5.3235e-03,  ..., 9.9908e-01,
          9.9796e-01, 1.0308e-02],
         [1.3794e-01, 2.2977e-03, 5.3235e-03,  ..., 3.0611e-04,
          6.7920e-04, 1.0308e-02],
         [3.3122e-02, 2.2977e-03, 5.3235e-03,  ..., 3.0611e-04,
          6.7920e-04, 1.3667e-02],
         [3.4793e-02, 9.9311e-01, 9.8403e-01,  ..., 3.0611e-04,
          6.7920e-04, 9.6572e-01]],
        [[9.9688e-01, 3.7014e-03, 2.0702e-02,  ..., 9.0358e-03,
          1.6485e-03, 1.9344e-03],
         [1.0395e-03, 4.3517e-03, 1.3970e-02,  ..., 9.0358e-03,
          1.6485e-03, 1.9344e-03],
         [1.0395e-03, 3.7014e-03, 1.5859e-02,  ..., 1.2657e-02,
          9.9505e-01, 9.9420e-01],
         [1.0395e-03, 9.8825e-01, 9.4947e-01,  ..., 9.6927e-01,
          1.6485e-03, 1.9344e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0013e-03, 1.2798e-03, 4.6800e-03,  ..., 4.4772e-03,
          6.8782e-02, 4.2829e-03],
         [4.0013e-03, 1.2798e-03, 2.9556e-02,  ..., 3.3522e-03,
          2.3279e-02, 4.2829e-03],
         [9.8800e-01, 1.2798e-03, 4.6800e-03,  ..., 9.8882e-01,
          2.6836e-02, 9.8715e-01],
         [4.0013e-03, 9.9616e-01, 9.6108e-01,  ..., 3.3522e-03,
          8.8110e-01, 4.2829e-03]],
        [[6.3005e-03, 3.6222e-04, 9.8628e-06,  ..., 4.2005e-02,
          1.8637e-03, 9.9979e-01],
         [6.3005e-03, 3.6222e-04, 9.8628e-06,  ..., 2.9501e-02,
          1.8637e-03, 6.9813e-05],
         [9.7649e-01, 3.6222e-04, 9.8628e-06,  ..., 8.8210e-01,
          9.9441e-01, 6.9813e-05],
         [1.0907e-02, 9.9891e-01, 9.9997e-01,  ..., 4.6396e-02,
          1.8637e-03, 6.9813e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 362:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7877e-01, 1.5771e-02, 1.1526e-03,  ..., 9.9181e-01,
          9.9034e-01, 2.2559e-02],
         [5.1054e-03, 1.4248e-02, 1.1526e-03,  ..., 2.4963e-03,
          3.2196e-03, 2.2559e-02],
         [5.1054e-03, 2.1185e-02, 1.1526e-03,  ..., 3.2020e-03,
          3.2196e-03, 4.5261e-02],
         [1.1016e-02, 9.4880e-01, 9.9654e-01,  ..., 2.4963e-03,
          3.2196e-03, 9.0962e-01]],
        [[9.9852e-01, 1.4152e-03, 2.3737e-03,  ..., 4.4672e-03,
          1.6979e-03, 5.1563e-04],
         [4.9480e-04, 1.4152e-03, 3.5455e-03,  ..., 4.4672e-03,
          1.6979e-03, 5.1563e-04],
         [4.9480e-04, 1.4152e-03, 2.3737e-03,  ..., 5.3949e-03,
          9.9491e-01, 9.9845e-01],
         [4.9480e-04, 9.9575e-01, 9.9171e-01,  ..., 9.8567e-01,
          1.6979e-03, 5.1563e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.2876e-03, 1.0729e-03, 5.0128e-03,  ..., 4.2481e-02,
          1.2715e-01, 1.0724e-02],
         [4.2876e-03, 1.0729e-03, 5.0128e-03,  ..., 2.0014e-02,
          6.0258e-02, 9.8604e-03],
         [9.8714e-01, 1.0729e-03, 5.0128e-03,  ..., 9.1749e-01,
          1.0788e-01, 9.6878e-01],
         [4.2876e-03, 9.9678e-01, 9.8496e-01,  ..., 2.0014e-02,
          7.0471e-01, 1.0637e-02]],
        [[6.0995e-04, 1.1336e-04, 6.7479e-06,  ..., 7.4081e-03,
          1.0532e-02, 9.8762e-01],
         [6.0995e-04, 1.1336e-04, 6.7479e-06,  ..., 7.4081e-03,
          7.1463e-03, 4.0512e-03],
         [9.9817e-01, 1.1336e-04, 6.7479e-06,  ..., 9.7685e-01,
          9.7518e-01, 4.0512e-03],
         [6.0995e-04, 9.9966e-01, 9.9998e-01,  ..., 8.3381e-03,
          7.1463e-03, 4.2814e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:43,163 [Process: 0] Synchronize training processes
2024-08-18 19:51:43,164 [Process: 0] Evaluating...
2024-08-18 19:51:43,166 [Process: 0] EPOCH 363:
2024-08-18 19:51:43,168 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 363:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7776e-01, 8.1117e-04, 1.5141e-03,  ..., 9.9768e-01,
          9.9623e-01, 4.4318e-02],
         [6.2093e-03, 8.1117e-04, 1.5141e-03,  ..., 7.7436e-04,
          1.2561e-03, 3.0048e-02],
         [6.2093e-03, 8.1117e-04, 1.5141e-03,  ..., 7.7436e-04,
          1.2561e-03, 6.1280e-02],
         [9.8186e-03, 9.9757e-01, 9.9546e-01,  ..., 7.7436e-04,
          1.2561e-03, 8.6435e-01]],
        [[9.9913e-01, 2.3845e-03, 5.5179e-03,  ..., 2.0605e-03,
          6.5487e-04, 4.0299e-04],
         [2.8959e-04, 2.3845e-03, 5.5179e-03,  ..., 2.0605e-03,
          6.5487e-04, 4.0299e-04],
         [2.8959e-04, 2.3845e-03, 5.7056e-03,  ..., 2.0605e-03,
          9.9804e-01, 9.9879e-01],
         [2.8959e-04, 9.9285e-01, 9.8326e-01,  ..., 9.9382e-01,
          6.5487e-04, 4.0299e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8815e-02, 2.1586e-03, 8.1302e-04,  ..., 5.1713e-03,
          3.7863e-02, 5.2843e-03],
         [1.6961e-02, 2.1586e-03, 8.1302e-04,  ..., 4.5952e-03,
          1.8196e-02, 5.2843e-03],
         [9.4112e-01, 2.1586e-03, 8.1302e-04,  ..., 9.8564e-01,
          2.1441e-02, 9.8406e-01],
         [2.3101e-02, 9.9352e-01, 9.9756e-01,  ..., 4.5952e-03,
          9.2250e-01, 5.3698e-03]],
        [[4.5558e-03, 4.5535e-04, 5.5279e-01,  ..., 9.2821e-03,
          9.7421e-03, 9.9935e-01],
         [4.5558e-03, 4.5535e-04, 1.6615e-02,  ..., 9.2821e-03,
          8.2666e-03, 2.1703e-04],
         [9.8300e-01, 4.5535e-04, 1.6615e-02,  ..., 9.7017e-01,
          9.7372e-01, 2.1703e-04],
         [7.8868e-03, 9.9863e-01, 4.1398e-01,  ..., 1.1267e-02,
          8.2666e-03, 2.1703e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 364:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5196e-01, 5.7790e-03, 8.6555e-03,  ..., 9.9979e-01,
          9.8504e-01, 4.1733e-03],
         [1.1115e-02, 5.7790e-03, 6.6874e-03,  ..., 6.8397e-05,
          4.6806e-03, 4.1733e-03],
         [1.3292e-02, 7.3276e-03, 8.3978e-03,  ..., 6.8397e-05,
          4.6806e-03, 4.5258e-03],
         [2.3633e-02, 9.8111e-01, 9.7626e-01,  ..., 6.8397e-05,
          5.5973e-03, 9.8713e-01]],
        [[9.9589e-01, 2.2556e-03, 2.9113e-03,  ..., 2.7798e-03,
          1.0083e-03, 8.5906e-04],
         [1.3693e-03, 2.2556e-03, 2.9113e-03,  ..., 2.7798e-03,
          1.0083e-03, 8.5906e-04],
         [1.3693e-03, 2.2923e-03, 2.9113e-03,  ..., 2.7798e-03,
          9.9698e-01, 9.9742e-01],
         [1.3693e-03, 9.9320e-01, 9.9127e-01,  ..., 9.9166e-01,
          1.0083e-03, 8.5906e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:44,330 [Process: 0] Synchronize training processes
2024-08-18 19:51:44,330 [Process: 0] Evaluating...
2024-08-18 19:51:44,332 [Process: 0] EPOCH 364:
2024-08-18 19:51:44,334 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:45,480 [Process: 0] Synchronize training processes
2024-08-18 19:51:45,480 [Process: 0] Evaluating...
2024-08-18 19:51:45,482 [Process: 0] EPOCH 365:
2024-08-18 19:51:45,483 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.8088e-03, 5.8658e-04, 1.7314e-03,  ..., 4.1851e-03,
          3.3305e-03, 4.8883e-03],
         [6.4501e-03, 5.8658e-04, 1.7314e-03,  ..., 4.1851e-03,
          3.3305e-03, 4.8883e-03],
         [9.8029e-01, 5.8658e-04, 1.7314e-03,  ..., 9.8744e-01,
          3.3305e-03, 9.8533e-01],
         [6.4501e-03, 9.9824e-01, 9.9481e-01,  ..., 4.1851e-03,
          9.9001e-01, 4.8883e-03]],
        [[1.2576e-02, 1.0897e-04, 7.6076e-05,  ..., 3.7853e-03,
          1.3325e-02, 9.9888e-01],
         [1.2576e-02, 1.0897e-04, 7.6076e-05,  ..., 3.7853e-03,
          9.4837e-03, 3.7374e-04],
         [9.4934e-01, 1.0897e-04, 7.6076e-05,  ..., 9.8864e-01,
          9.6771e-01, 3.7374e-04],
         [2.5505e-02, 9.9967e-01, 9.9977e-01,  ..., 3.7853e-03,
          9.4837e-03, 3.7374e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 365:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8903e-01, 5.4121e-03, 9.4178e-03,  ..., 9.9324e-01,
          9.8737e-01, 1.6725e-02],
         [3.9865e-02, 5.9997e-03, 7.7996e-03,  ..., 2.2536e-03,
          3.6456e-03, 1.4390e-02],
         [7.8699e-02, 5.4121e-03, 8.4960e-03,  ..., 2.2536e-03,
          3.6456e-03, 2.5276e-02],
         [9.2409e-02, 9.8318e-01, 9.7429e-01,  ..., 2.2536e-03,
          5.3416e-03, 9.4361e-01]],
        [[9.9747e-01, 1.3577e-02, 5.3151e-03,  ..., 2.3009e-03,
          6.4780e-04, 5.9263e-04],
         [7.1269e-04, 1.3577e-02, 5.3794e-03,  ..., 2.3009e-03,
          6.4780e-04, 5.9263e-04],
         [1.1094e-03, 2.1818e-02, 5.4794e-03,  ..., 2.3009e-03,
          9.9806e-01, 9.9822e-01],
         [7.1269e-04, 9.5103e-01, 9.8383e-01,  ..., 9.9310e-01,
          6.4780e-04, 5.9263e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3699e-04, 3.2065e-03, 8.2052e-05,  ..., 6.3102e-04,
          8.2608e-02, 1.0751e-03],
         [9.3699e-04, 3.2065e-03, 8.2052e-05,  ..., 6.3102e-04,
          5.7777e-02, 1.0751e-03],
         [9.9719e-01, 3.2065e-03, 8.2052e-05,  ..., 9.9811e-01,
          6.7967e-01, 9.9677e-01],
         [9.3699e-04, 9.9038e-01, 9.9975e-01,  ..., 6.3102e-04,
          1.7995e-01, 1.0751e-03]],
        [[1.5869e-02, 4.6904e-04, 6.0833e-05,  ..., 3.6573e-03,
          4.0844e-03, 9.9833e-01],
         [1.5869e-02, 4.6904e-04, 6.0833e-05,  ..., 3.6573e-03,
          4.0844e-03, 5.5620e-04],
         [9.3055e-01, 4.6904e-04, 6.0833e-05,  ..., 9.8903e-01,
          9.8775e-01, 5.5620e-04],
         [3.7710e-02, 9.9859e-01, 9.9982e-01,  ..., 3.6573e-03,
          4.0844e-03, 5.5620e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 366:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3430e-01, 6.7792e-03, 2.7650e-03,  ..., 9.9984e-01,
          9.9759e-01, 3.3909e-02],
         [4.4313e-01, 6.7792e-03, 2.7650e-03,  ..., 5.3452e-05,
          8.0499e-04, 3.1785e-02],
         [8.4995e-02, 7.0155e-03, 2.7650e-03,  ..., 5.3452e-05,
          8.0499e-04, 8.0164e-02],
         [2.3757e-01, 9.7943e-01, 9.9170e-01,  ..., 5.3452e-05,
          8.0499e-04, 8.5414e-01]],
        [[9.8924e-01, 4.3738e-03, 2.2953e-03,  ..., 4.0900e-03,
          1.8104e-03, 2.7907e-04],
         [3.4618e-03, 4.1145e-03, 2.2953e-03,  ..., 4.0900e-03,
          1.8104e-03, 2.7907e-04],
         [4.0799e-03, 4.5318e-03, 2.2953e-03,  ..., 4.0900e-03,
          9.9457e-01, 9.9916e-01],
         [3.2155e-03, 9.8698e-01, 9.9311e-01,  ..., 9.8773e-01,
          1.8104e-03, 2.7907e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:46,628 [Process: 0] Synchronize training processes
2024-08-18 19:51:46,628 [Process: 0] Evaluating...
2024-08-18 19:51:46,630 [Process: 0] EPOCH 366:
2024-08-18 19:51:46,632 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:47,776 [Process: 0] Synchronize training processes
2024-08-18 19:51:47,777 [Process: 0] Evaluating...
2024-08-18 19:51:47,778 [Process: 0] EPOCH 367:
2024-08-18 19:51:47,780 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0889e-03, 1.2183e-04, 1.7747e-03,  ..., 1.7907e-03,
          1.3084e-01, 1.0583e-02],
         [2.0889e-03, 1.2183e-04, 1.7747e-03,  ..., 1.7907e-03,
          7.5181e-02, 1.0583e-02],
         [9.9373e-01, 1.2183e-04, 1.7747e-03,  ..., 9.9463e-01,
          5.4682e-01, 9.6497e-01],
         [2.0889e-03, 9.9963e-01, 9.9468e-01,  ..., 1.7907e-03,
          2.4716e-01, 1.3860e-02]],
        [[8.9763e-03, 2.6588e-04, 1.0061e-05,  ..., 1.8060e-02,
          4.8925e-03, 9.9955e-01],
         [8.9763e-03, 2.6588e-04, 1.0061e-05,  ..., 1.7944e-02,
          4.8925e-03, 1.5110e-04],
         [9.6909e-01, 2.6588e-04, 1.0061e-05,  ..., 9.3887e-01,
          9.8532e-01, 1.5110e-04],
         [1.2961e-02, 9.9920e-01, 9.9997e-01,  ..., 2.5124e-02,
          4.8925e-03, 1.5110e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 367:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3010e-02, 4.7026e-03, 4.1451e-03,  ..., 9.9427e-01,
          9.9224e-01, 5.2104e-02],
         [5.6291e-01, 4.7026e-03, 4.1451e-03,  ..., 1.8924e-03,
          2.5877e-03, 5.2104e-02],
         [6.9909e-02, 6.4455e-03, 4.1451e-03,  ..., 1.9492e-03,
          2.5877e-03, 5.8154e-01],
         [2.7417e-01, 9.8415e-01, 9.8756e-01,  ..., 1.8924e-03,
          2.5877e-03, 3.1425e-01]],
        [[9.9866e-01, 5.3209e-03, 4.0668e-03,  ..., 3.5627e-03,
          1.2842e-03, 2.7243e-04],
         [4.4541e-04, 5.3209e-03, 4.0668e-03,  ..., 3.5627e-03,
          1.2842e-03, 2.7243e-04],
         [4.4541e-04, 5.3209e-03, 4.2332e-03,  ..., 4.0766e-03,
          9.9615e-01, 9.9918e-01],
         [4.4541e-04, 9.8404e-01, 9.8763e-01,  ..., 9.8880e-01,
          1.2842e-03, 2.7243e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3116e-03, 1.6925e-04, 6.2236e-04,  ..., 8.4235e-03,
          1.4245e-01, 1.0074e-02],
         [1.3116e-03, 1.6925e-04, 6.2236e-04,  ..., 5.9234e-03,
          7.4134e-02, 7.9132e-03],
         [9.9607e-01, 1.6925e-04, 6.2236e-04,  ..., 9.7973e-01,
          4.6652e-01, 9.7410e-01],
         [1.3116e-03, 9.9949e-01, 9.9813e-01,  ..., 5.9234e-03,
          3.1690e-01, 7.9132e-03]],
        [[4.7608e-03, 2.1051e-04, 4.6253e-05,  ..., 1.5896e-02,
          2.1383e-03, 9.9840e-01],
         [4.7608e-03, 2.1051e-04, 4.6253e-05,  ..., 1.3923e-02,
          2.1383e-03, 5.3416e-04],
         [9.8488e-01, 2.1051e-04, 4.6253e-05,  ..., 9.5372e-01,
          9.9359e-01, 5.3416e-04],
         [5.5969e-03, 9.9937e-01, 9.9986e-01,  ..., 1.6465e-02,
          2.1383e-03, 5.3416e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 368:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:48,923 [Process: 0] Synchronize training processes
2024-08-18 19:51:48,924 [Process: 0] Evaluating...
2024-08-18 19:51:48,925 [Process: 0] EPOCH 368:
2024-08-18 19:51:48,927 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:50,070 [Process: 0] Synchronize training processes
2024-08-18 19:51:50,070 [Process: 0] Evaluating...
2024-08-18 19:51:50,072 [Process: 0] EPOCH 369:
2024-08-18 19:51:50,074 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4075e-01, 4.1233e-03, 3.2474e-03,  ..., 9.9869e-01,
          8.8292e-01, 7.4820e-02],
         [1.7487e-01, 4.1233e-03, 4.6164e-03,  ..., 4.1585e-04,
          1.6070e-02, 9.5278e-02],
         [1.0422e-01, 4.1233e-03, 3.2474e-03,  ..., 4.7800e-04,
          1.6070e-02, 1.0678e-01],
         [4.8016e-01, 9.8763e-01, 9.8889e-01,  ..., 4.1585e-04,
          8.4944e-02, 7.2312e-01]],
        [[9.9256e-01, 4.4584e-03, 4.4118e-03,  ..., 8.7254e-03,
          4.7446e-04, 1.1368e-03],
         [2.1649e-03, 4.4584e-03, 4.4118e-03,  ..., 6.8302e-03,
          4.7446e-04, 1.1368e-03],
         [3.1087e-03, 4.4584e-03, 4.6524e-03,  ..., 9.5246e-03,
          9.9858e-01, 9.9659e-01],
         [2.1649e-03, 9.8662e-01, 9.8652e-01,  ..., 9.7492e-01,
          4.7446e-04, 1.1368e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7173e-03, 2.0165e-03, 6.5157e-05,  ..., 4.9021e-03,
          1.3600e-01, 7.7595e-03],
         [1.7173e-03, 1.1944e-03, 6.5157e-05,  ..., 4.9021e-03,
          7.0606e-02, 7.7595e-03],
         [9.9485e-01, 1.1944e-03, 6.5157e-05,  ..., 9.8529e-01,
          1.8995e-01, 9.7624e-01],
         [1.7173e-03, 9.9559e-01, 9.9980e-01,  ..., 4.9021e-03,
          6.0345e-01, 8.2412e-03]],
        [[5.5829e-03, 5.9577e-05, 8.2129e-05,  ..., 1.0050e-02,
          2.3964e-03, 9.9924e-01],
         [5.5829e-03, 5.9577e-05, 8.2129e-05,  ..., 1.0050e-02,
          2.3964e-03, 2.5285e-04],
         [9.8324e-01, 5.9577e-05, 8.2129e-05,  ..., 9.6895e-01,
          9.9281e-01, 2.5285e-04],
         [5.5908e-03, 9.9982e-01, 9.9975e-01,  ..., 1.0950e-02,
          2.3964e-03, 2.5285e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 369:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9219e-01, 6.9708e-03, 1.2267e-02,  ..., 9.9688e-01,
          9.1354e-01, 9.7122e-02],
         [2.6039e-03, 6.9708e-03, 8.5996e-03,  ..., 1.0409e-03,
          1.4577e-02, 8.5862e-02],
         [2.6039e-03, 7.5689e-03, 1.1299e-02,  ..., 1.0409e-03,
          1.4577e-02, 1.2310e-01],
         [2.6039e-03, 9.7849e-01, 9.6783e-01,  ..., 1.0409e-03,
          5.7306e-02, 6.9391e-01]],
        [[9.9793e-01, 6.7972e-03, 1.5795e-02,  ..., 5.3494e-03,
          1.7906e-03, 4.0115e-04],
         [6.5672e-04, 5.9185e-03, 3.6693e-02,  ..., 5.3494e-03,
          1.7906e-03, 4.0115e-04],
         [7.6024e-04, 7.0742e-03, 2.2928e-02,  ..., 5.3494e-03,
          9.9463e-01, 9.9880e-01],
         [6.5672e-04, 9.8021e-01, 9.2458e-01,  ..., 9.8395e-01,
          1.7906e-03, 4.0115e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4258e-03, 1.8044e-03, 3.5088e-03,  ..., 9.3892e-03,
          3.5870e-02, 9.3890e-03],
         [4.4258e-03, 1.8044e-03, 3.5088e-03,  ..., 9.3892e-03,
          2.4880e-02, 9.1538e-03],
         [9.8672e-01, 1.8044e-03, 3.5088e-03,  ..., 9.7183e-01,
          3.5185e-02, 9.7230e-01],
         [4.4258e-03, 9.9459e-01, 9.8947e-01,  ..., 9.3892e-03,
          9.0407e-01, 9.1538e-03]],
        [[5.5760e-03, 1.2884e-04, 2.7758e-04,  ..., 7.9541e-03,
          1.5914e-03, 9.9718e-01],
         [5.5760e-03, 1.2884e-04, 2.7758e-04,  ..., 7.9541e-03,
          1.5914e-03, 9.4135e-04],
         [9.8327e-01, 1.2884e-04, 2.7758e-04,  ..., 9.7614e-01,
          9.9523e-01, 9.4135e-04],
         [5.5760e-03, 9.9961e-01, 9.9917e-01,  ..., 7.9541e-03,
          1.5914e-03, 9.4135e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:51,218 [Process: 0] Synchronize training processes
2024-08-18 19:51:51,218 [Process: 0] Evaluating...
2024-08-18 19:51:51,220 [Process: 0] EPOCH 370:
2024-08-18 19:51:51,222 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 370:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.8677e-01, 2.1127e-03, 1.2276e-02,  ..., 9.9879e-01,
          9.9928e-01, 2.6288e-02],
         [2.4955e-01, 2.1127e-03, 1.0713e-02,  ..., 4.0321e-04,
          2.4102e-04, 4.7452e-02],
         [3.1836e-02, 2.1127e-03, 1.5292e-02,  ..., 4.0321e-04,
          2.4102e-04, 3.7817e-02],
         [3.1836e-02, 9.9366e-01, 9.6172e-01,  ..., 4.0321e-04,
          2.4102e-04, 8.8844e-01]],
        [[9.9793e-01, 4.3272e-03, 6.2458e-03,  ..., 3.0547e-03,
          1.4480e-03, 3.2013e-04],
         [6.8891e-04, 4.3272e-03, 6.2458e-03,  ..., 3.0547e-03,
          1.4480e-03, 3.2013e-04],
         [6.8891e-04, 4.6965e-03, 7.6425e-03,  ..., 3.0547e-03,
          9.9566e-01, 9.9904e-01],
         [6.8891e-04, 9.8665e-01, 9.7987e-01,  ..., 9.9084e-01,
          1.4480e-03, 3.2013e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3599e-01, 9.3851e-04, 4.0584e-05,  ..., 9.5356e-03,
          2.0032e-01, 2.9729e-02],
         [2.2335e-02, 9.3851e-04, 4.0584e-05,  ..., 4.6691e-03,
          8.1453e-02, 2.0035e-02],
         [8.1934e-01, 9.3851e-04, 4.0584e-05,  ..., 9.8113e-01,
          2.2602e-01, 9.2423e-01],
         [2.2335e-02, 9.9718e-01, 9.9988e-01,  ..., 4.6691e-03,
          4.9220e-01, 2.6009e-02]],
        [[3.7098e-03, 3.7754e-05, 5.0325e-04,  ..., 1.0766e-02,
          1.2875e-02, 9.7851e-01],
         [3.7098e-03, 3.7754e-05, 5.0325e-04,  ..., 1.0766e-02,
          1.1197e-02, 6.6667e-03],
         [9.8884e-01, 3.7754e-05, 5.0325e-04,  ..., 9.6622e-01,
          9.6473e-01, 6.6667e-03],
         [3.7363e-03, 9.9989e-01, 9.9849e-01,  ..., 1.2249e-02,
          1.1197e-02, 8.1557e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 371:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9950e-01, 6.8203e-03, 3.7023e-03,  ..., 9.9609e-01,
          9.9869e-01, 2.1694e-03],
         [1.6746e-04, 6.8203e-03, 3.7023e-03,  ..., 1.5720e-03,
          4.3725e-04, 3.1366e-03],
         [1.6455e-04, 6.9740e-03, 3.7023e-03,  ..., 1.1684e-03,
          4.3725e-04, 2.1694e-03],
         [1.6455e-04, 9.7939e-01, 9.8889e-01,  ..., 1.1684e-03,
          4.3725e-04, 9.9252e-01]],
        [[9.9864e-01, 4.2545e-03, 4.1490e-03,  ..., 4.8180e-03,
          1.3389e-03, 5.6627e-04],
         [4.5332e-04, 4.2545e-03, 4.1490e-03,  ..., 4.5066e-03,
          1.3389e-03, 5.6627e-04],
         [4.5332e-04, 4.4150e-03, 4.1490e-03,  ..., 5.6868e-03,
          9.9598e-01, 9.9830e-01],
         [4.5332e-04, 9.8708e-01, 9.8755e-01,  ..., 9.8499e-01,
          1.3389e-03, 5.6627e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:52,365 [Process: 0] Synchronize training processes
2024-08-18 19:51:52,366 [Process: 0] Evaluating...
2024-08-18 19:51:52,367 [Process: 0] EPOCH 371:
2024-08-18 19:51:52,369 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:53,512 [Process: 0] Synchronize training processes
2024-08-18 19:51:53,513 [Process: 0] Evaluating...
2024-08-18 19:51:53,519 [Process: 0] EPOCH 372:
2024-08-18 19:51:53,521 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.0905e-02, 3.9227e-04, 1.5150e-04,  ..., 2.5271e-03,
          1.8046e-01, 5.6969e-03],
         [1.3565e-02, 3.9227e-04, 1.3541e-04,  ..., 2.5271e-03,
          7.8288e-02, 5.4194e-03],
         [9.0197e-01, 3.9227e-04, 1.3541e-04,  ..., 9.9242e-01,
          4.1698e-01, 9.8346e-01],
         [1.3565e-02, 9.9882e-01, 9.9958e-01,  ..., 2.5271e-03,
          3.2428e-01, 5.4194e-03]],
        [[6.4104e-03, 2.3886e-03, 1.0501e-04,  ..., 1.1610e-02,
          3.5568e-02, 9.9896e-01],
         [6.4104e-03, 2.3886e-03, 1.0501e-04,  ..., 1.1610e-02,
          2.3434e-02, 3.4779e-04],
         [9.7861e-01, 2.3886e-03, 1.0501e-04,  ..., 9.6160e-01,
          9.0817e-01, 3.4779e-04],
         [8.5699e-03, 9.9283e-01, 9.9968e-01,  ..., 1.5178e-02,
          3.2830e-02, 3.4779e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 372:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9674e-01, 1.1167e-02, 3.4049e-03,  ..., 9.9832e-01,
          9.8995e-01, 4.0005e-03],
         [1.7311e-03, 7.0608e-03, 3.3831e-03,  ..., 5.5842e-04,
          3.3135e-03, 4.0005e-03],
         [7.6275e-04, 8.2559e-03, 3.3831e-03,  ..., 5.5842e-04,
          3.4255e-03, 4.6390e-03],
         [7.6275e-04, 9.7352e-01, 9.8983e-01,  ..., 5.5842e-04,
          3.3135e-03, 9.8736e-01]],
        [[9.9189e-01, 5.3033e-03, 2.7196e-03,  ..., 1.0206e-02,
          2.5565e-03, 1.8532e-04],
         [2.6258e-03, 5.3033e-03, 2.9511e-03,  ..., 7.2386e-03,
          2.5565e-03, 1.8532e-04],
         [2.6318e-03, 5.3033e-03, 2.7196e-03,  ..., 8.6257e-03,
          9.9233e-01, 9.9944e-01],
         [2.8564e-03, 9.8409e-01, 9.9161e-01,  ..., 9.7393e-01,
          2.5565e-03, 1.8532e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.2372e-03, 6.5541e-04, 1.1997e-04,  ..., 1.9286e-02,
          8.7764e-02, 2.0143e-02],
         [4.2372e-03, 6.5541e-04, 1.1997e-04,  ..., 1.9286e-02,
          3.9542e-02, 1.1902e-02],
         [9.8729e-01, 6.5541e-04, 1.1997e-04,  ..., 9.2908e-01,
          6.0488e-02, 9.5605e-01],
         [4.2372e-03, 9.9803e-01, 9.9964e-01,  ..., 3.2348e-02,
          8.1221e-01, 1.1902e-02]],
        [[5.4324e-03, 1.5322e-03, 7.8693e-04,  ..., 1.9811e-03,
          4.6909e-03, 9.9983e-01],
         [5.4324e-03, 1.5322e-03, 7.8693e-04,  ..., 1.9811e-03,
          4.6909e-03, 5.7305e-05],
         [9.8239e-01, 1.5322e-03, 7.8693e-04,  ..., 9.9406e-01,
          9.8593e-01, 5.7305e-05],
         [6.7427e-03, 9.9540e-01, 9.9764e-01,  ..., 1.9811e-03,
          4.6909e-03, 5.7305e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 373:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9794e-01, 4.4955e-03, 3.2873e-03,  ..., 9.9502e-01,
          9.9615e-01, 1.0354e-02],
         [6.8543e-04, 4.4955e-03, 3.2873e-03,  ..., 1.5646e-03,
          1.2829e-03, 1.0354e-02],
         [6.8543e-04, 5.3864e-03, 3.2873e-03,  ..., 1.8538e-03,
          1.2829e-03, 1.7451e-02],
         [6.8543e-04, 9.8562e-01, 9.9014e-01,  ..., 1.5646e-03,
          1.2829e-03, 9.6184e-01]],
        [[9.9735e-01, 5.2369e-03, 2.3867e-03,  ..., 2.9449e-03,
          2.1834e-03, 2.4237e-04],
         [8.8255e-04, 5.2369e-03, 2.3867e-03,  ..., 2.9449e-03,
          2.1834e-03, 2.4237e-04],
         [8.8255e-04, 5.5890e-03, 2.3867e-03,  ..., 2.9449e-03,
          9.9345e-01, 9.9927e-01],
         [8.8255e-04, 9.8394e-01, 9.9284e-01,  ..., 9.9117e-01,
          2.1834e-03, 2.4237e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:54,691 [Process: 0] Synchronize training processes
2024-08-18 19:51:54,691 [Process: 0] Evaluating...
2024-08-18 19:51:54,693 [Process: 0] EPOCH 373:
2024-08-18 19:51:54,695 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:55,837 [Process: 0] Synchronize training processes
2024-08-18 19:51:55,837 [Process: 0] Evaluating...
2024-08-18 19:51:55,839 [Process: 0] EPOCH 374:
2024-08-18 19:51:55,841 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1018e-02, 7.5372e-04, 5.6165e-04,  ..., 2.7352e-03,
          2.7479e-02, 1.5040e-02],
         [8.7652e-03, 5.4984e-04, 5.6165e-04,  ..., 2.7352e-03,
          2.2806e-02, 1.1069e-02],
         [9.7145e-01, 5.4984e-04, 5.6165e-04,  ..., 9.9179e-01,
          2.9893e-02, 9.6282e-01],
         [8.7652e-03, 9.9815e-01, 9.9832e-01,  ..., 2.7352e-03,
          9.1982e-01, 1.1069e-02]],
        [[2.5699e-03, 8.7964e-04, 1.0635e-05,  ..., 1.0360e-02,
          4.4225e-03, 9.9935e-01],
         [2.5699e-03, 8.7964e-04, 1.0635e-05,  ..., 1.0360e-02,
          4.4225e-03, 2.1807e-04],
         [9.9204e-01, 8.7964e-04, 1.0635e-05,  ..., 9.6822e-01,
          9.8673e-01, 2.1807e-04],
         [2.8215e-03, 9.9736e-01, 9.9997e-01,  ..., 1.1055e-02,
          4.4225e-03, 2.1807e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 374:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9624e-01, 4.7709e-03, 2.2439e-03,  ..., 9.8752e-01,
          9.9976e-01, 5.7039e-03],
         [1.1294e-03, 4.4114e-03, 2.0006e-03,  ..., 3.0296e-03,
          7.9998e-05, 5.7039e-03],
         [1.4971e-03, 4.4114e-03, 2.0006e-03,  ..., 6.4230e-03,
          7.9998e-05, 6.1172e-03],
         [1.1294e-03, 9.8641e-01, 9.9375e-01,  ..., 3.0296e-03,
          7.9998e-05, 9.8248e-01]],
        [[9.9723e-01, 2.5988e-03, 4.5445e-03,  ..., 2.8819e-02,
          2.2630e-02, 3.2569e-04],
         [8.8645e-04, 2.5988e-03, 3.4095e-03,  ..., 1.2525e-02,
          2.2630e-02, 3.2569e-04],
         [9.9576e-04, 2.5988e-03, 3.5549e-03,  ..., 1.7718e-02,
          9.0308e-01, 9.9902e-01],
         [8.8645e-04, 9.9220e-01, 9.8849e-01,  ..., 9.4094e-01,
          5.1659e-02, 3.2569e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0128e-02, 1.4663e-02, 6.7631e-04,  ..., 5.4085e-03,
          1.7836e-01, 6.3904e-03],
         [7.7315e-03, 6.6647e-03, 6.7631e-04,  ..., 5.4085e-03,
          7.3691e-02, 6.3904e-03],
         [9.7441e-01, 6.6647e-03, 6.7631e-04,  ..., 9.8377e-01,
          1.8541e-01, 9.8083e-01],
         [7.7315e-03, 9.7201e-01, 9.9797e-01,  ..., 5.4085e-03,
          5.6254e-01, 6.3904e-03]],
        [[4.9172e-03, 3.2248e-04, 3.4320e-05,  ..., 4.9300e-03,
          2.7664e-03, 9.9558e-01],
         [4.9172e-03, 3.2248e-04, 3.4320e-05,  ..., 4.9300e-03,
          2.7664e-03, 1.4739e-03],
         [9.8370e-01, 3.2248e-04, 3.4320e-05,  ..., 9.8521e-01,
          9.9159e-01, 1.4739e-03],
         [6.4700e-03, 9.9903e-01, 9.9990e-01,  ..., 4.9300e-03,
          2.8793e-03, 1.4739e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 375:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:56,989 [Process: 0] Synchronize training processes
2024-08-18 19:51:56,989 [Process: 0] Evaluating...
2024-08-18 19:51:56,991 [Process: 0] EPOCH 375:
2024-08-18 19:51:56,993 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6436e-02, 4.1498e-03, 1.7312e-03,  ..., 9.9804e-01,
          9.9470e-01, 1.4651e-02],
         [4.0868e-03, 4.1498e-03, 1.7312e-03,  ..., 6.5335e-04,
          2.2983e-03, 1.1367e-02],
         [9.7539e-01, 4.6070e-03, 1.7312e-03,  ..., 6.5335e-04,
          1.4986e-03, 1.2880e-02],
         [4.0868e-03, 9.8709e-01, 9.9481e-01,  ..., 6.5335e-04,
          1.4986e-03, 9.6110e-01]],
        [[9.9941e-01, 1.0969e-02, 1.1366e-02,  ..., 6.8842e-03,
          8.9239e-04, 2.6474e-04],
         [1.9595e-04, 7.6938e-03, 7.3291e-03,  ..., 7.5194e-03,
          8.9239e-04, 2.6474e-04],
         [1.9595e-04, 9.5634e-03, 9.4805e-03,  ..., 9.7163e-03,
          9.9732e-01, 9.9921e-01],
         [1.9595e-04, 9.7177e-01, 9.7182e-01,  ..., 9.7588e-01,
          8.9239e-04, 2.6474e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0988e-03, 2.2902e-03, 1.5206e-04,  ..., 2.5359e-03,
          1.1618e-01, 9.1048e-03],
         [5.0988e-03, 2.2902e-03, 1.5206e-04,  ..., 2.5359e-03,
          5.0643e-02, 8.8007e-03],
         [9.8470e-01, 2.2902e-03, 1.5206e-04,  ..., 9.9239e-01,
          1.1569e-01, 9.7329e-01],
         [5.0988e-03, 9.9313e-01, 9.9954e-01,  ..., 2.5359e-03,
          7.1748e-01, 8.8007e-03]],
        [[6.0527e-03, 3.6709e-04, 1.0099e-04,  ..., 6.8998e-03,
          3.5491e-03, 9.9831e-01],
         [6.0527e-03, 3.6709e-04, 1.0099e-04,  ..., 6.8998e-03,
          3.5491e-03, 5.6298e-04],
         [9.8139e-01, 3.6709e-04, 1.0099e-04,  ..., 9.7891e-01,
          9.8935e-01, 5.6298e-04],
         [6.5019e-03, 9.9890e-01, 9.9970e-01,  ..., 7.2870e-03,
          3.5491e-03, 5.6298e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 376:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9657e-01, 2.0341e-03, 2.2427e-03,  ..., 9.9696e-01,
          9.9949e-01, 1.8470e-02],
         [8.8462e-04, 2.0341e-03, 2.2427e-03,  ..., 1.0143e-03,
          1.6888e-04, 1.3376e-02],
         [1.6631e-03, 2.0341e-03, 2.2427e-03,  ..., 1.0143e-03,
          1.6888e-04, 2.1115e-02],
         [8.8462e-04, 9.9390e-01, 9.9327e-01,  ..., 1.0143e-03,
          1.6888e-04, 9.4704e-01]],
        [[9.9860e-01, 1.2565e-03, 1.5117e-02,  ..., 3.9807e-03,
          6.8880e-04, 6.1709e-04],
         [4.6630e-04, 1.2565e-03, 1.1597e-02,  ..., 3.9807e-03,
          6.8880e-04, 6.1709e-04],
         [4.6630e-04, 1.2565e-03, 1.4284e-02,  ..., 3.9807e-03,
          9.9793e-01, 9.9815e-01],
         [4.6630e-04, 9.9623e-01, 9.5900e-01,  ..., 9.8806e-01,
          6.8880e-04, 6.1709e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8365e-03, 4.8660e-04, 2.8534e-05,  ..., 1.2541e-02,
          3.1634e-02, 4.4454e-03],
         [6.4819e-03, 4.8660e-04, 2.8534e-05,  ..., 1.1811e-02,
          1.8720e-02, 4.4454e-03],
         [9.7920e-01, 4.8660e-04, 2.8534e-05,  ..., 9.6154e-01,
          1.8720e-02, 9.8666e-01],
         [6.4819e-03, 9.9854e-01, 9.9991e-01,  ..., 1.4113e-02,
          9.3093e-01, 4.4454e-03]],
        [[3.4241e-03, 2.8289e-03, 2.0887e-05,  ..., 2.2256e-02,
          2.7129e-03, 9.9966e-01],
         [3.4241e-03, 2.8289e-03, 2.0887e-05,  ..., 1.6102e-02,
          2.7129e-03, 1.1379e-04],
         [9.8905e-01, 2.8289e-03, 2.0887e-05,  ..., 9.4369e-01,
          9.9186e-01, 1.1379e-04],
         [4.1054e-03, 9.9151e-01, 9.9994e-01,  ..., 1.7950e-02,
          2.7129e-03, 1.1379e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:51:58,138 [Process: 0] Synchronize training processes
2024-08-18 19:51:58,138 [Process: 0] Evaluating...
2024-08-18 19:51:58,140 [Process: 0] EPOCH 376:
2024-08-18 19:51:58,142 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:51:59,286 [Process: 0] Synchronize training processes
2024-08-18 19:51:59,286 [Process: 0] Evaluating...
2024-08-18 19:51:59,288 [Process: 0] EPOCH 377:
2024-08-18 19:51:59,290 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 377:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9729e-01, 2.5863e-03, 1.0079e-02,  ..., 9.8725e-01,
          9.9806e-01, 3.1091e-03],
         [8.4331e-04, 2.7919e-03, 1.3682e-02,  ..., 3.9814e-03,
          7.7791e-04, 3.1091e-03],
         [1.0232e-03, 2.5863e-03, 1.0420e-02,  ..., 4.7921e-03,
          5.7994e-04, 3.2547e-03],
         [8.4331e-04, 9.9204e-01, 9.6582e-01,  ..., 3.9814e-03,
          5.7994e-04, 9.9053e-01]],
        [[9.9721e-01, 3.0184e-03, 2.7106e-03,  ..., 1.9659e-03,
          3.2217e-04, 1.4285e-03],
         [9.3102e-04, 3.0184e-03, 2.7106e-03,  ..., 1.9659e-03,
          3.2217e-04, 1.4285e-03],
         [9.3102e-04, 3.0682e-03, 2.7106e-03,  ..., 1.9659e-03,
          9.9903e-01, 9.9571e-01],
         [9.3102e-04, 9.9089e-01, 9.9187e-01,  ..., 9.9410e-01,
          3.2217e-04, 1.4285e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7799e-02, 3.8253e-04, 1.6511e-03,  ..., 7.6997e-03,
          6.3064e-03, 1.2449e-02],
         [9.1034e-03, 3.8253e-04, 1.4589e-03,  ..., 7.6997e-03,
          6.3064e-03, 1.2419e-02],
         [9.6399e-01, 3.8253e-04, 1.4589e-03,  ..., 9.7690e-01,
          6.7422e-03, 9.6009e-01],
         [9.1034e-03, 9.9885e-01, 9.9543e-01,  ..., 7.6997e-03,
          9.8065e-01, 1.5041e-02]],
        [[5.7006e-03, 6.6035e-04, 8.1318e-05,  ..., 9.7569e-03,
          2.7803e-03, 9.9708e-01],
         [5.7006e-03, 1.1254e-03, 8.1318e-05,  ..., 9.7569e-03,
          2.7803e-03, 9.7219e-04],
         [9.8055e-01, 6.6035e-04, 8.1318e-05,  ..., 9.7033e-01,
          9.9166e-01, 9.7219e-04],
         [8.0447e-03, 9.9755e-01, 9.9976e-01,  ..., 1.0160e-02,
          2.7803e-03, 9.7219e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 378:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9687e-01, 1.2662e-03, 3.4675e-03,  ..., 9.9775e-01,
          9.9492e-01, 5.8539e-03],
         [1.0449e-03, 1.2662e-03, 3.3097e-03,  ..., 7.4998e-04,
          1.6636e-03, 6.6739e-03],
         [1.0449e-03, 1.2662e-03, 3.3097e-03,  ..., 7.4998e-04,
          1.6636e-03, 5.8539e-03],
         [1.0449e-03, 9.9620e-01, 9.8991e-01,  ..., 7.4998e-04,
          1.7566e-03, 9.8162e-01]],
        [[9.8614e-01, 5.9451e-03, 2.4003e-03,  ..., 3.4548e-03,
          9.9175e-04, 6.6555e-04],
         [3.9960e-03, 5.9451e-03, 3.7524e-03,  ..., 3.4548e-03,
          9.9175e-04, 6.6555e-04],
         [5.8659e-03, 6.8726e-03, 2.4003e-03,  ..., 3.6852e-03,
          9.9702e-01, 9.9800e-01],
         [3.9960e-03, 9.8124e-01, 9.9145e-01,  ..., 9.8941e-01,
          9.9175e-04, 6.6555e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:00,432 [Process: 0] Synchronize training processes
2024-08-18 19:52:00,432 [Process: 0] Evaluating...
2024-08-18 19:52:00,434 [Process: 0] EPOCH 378:
2024-08-18 19:52:00,436 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:01,582 [Process: 0] Synchronize training processes
2024-08-18 19:52:01,583 [Process: 0] Evaluating...
2024-08-18 19:52:01,584 [Process: 0] EPOCH 379:
2024-08-18 19:52:01,586 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9760e-03, 2.2781e-03, 1.7309e-04,  ..., 7.6753e-03,
          1.0616e-01, 2.5018e-02],
         [6.3419e-03, 2.2781e-03, 1.7309e-04,  ..., 7.6753e-03,
          6.4237e-02, 1.2609e-02],
         [9.7734e-01, 2.2781e-03, 1.7309e-04,  ..., 9.7697e-01,
          2.2629e-01, 9.4976e-01],
         [6.3419e-03, 9.9317e-01, 9.9948e-01,  ..., 7.6753e-03,
          6.0331e-01, 1.2609e-02]],
        [[2.6309e-02, 3.2912e-03, 1.1692e-05,  ..., 4.5883e-02,
          1.0658e-02, 9.9533e-01],
         [2.6309e-02, 3.2912e-03, 1.1692e-05,  ..., 3.7720e-02,
          1.0658e-02, 1.5566e-03],
         [8.6975e-01, 3.2912e-03, 1.1692e-05,  ..., 8.2296e-01,
          9.6575e-01, 1.5566e-03],
         [7.7630e-02, 9.9013e-01, 9.9996e-01,  ..., 9.3441e-02,
          1.2939e-02, 1.5566e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 379:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9606e-01, 5.9056e-03, 4.4144e-03,  ..., 9.9948e-01,
          9.8818e-01, 4.4813e-03],
         [1.3133e-03, 5.4203e-03, 5.6114e-03,  ..., 1.7426e-04,
          3.6812e-03, 4.4813e-03],
         [1.3133e-03, 5.7313e-03, 4.4144e-03,  ..., 1.7426e-04,
          3.6812e-03, 5.2698e-03],
         [1.3133e-03, 9.8294e-01, 9.8556e-01,  ..., 1.7426e-04,
          4.4600e-03, 9.8577e-01]],
        [[9.8455e-01, 1.7764e-03, 6.1657e-03,  ..., 3.2801e-03,
          2.1824e-04, 4.1108e-04],
         [3.9925e-03, 1.7764e-03, 9.8528e-03,  ..., 3.1003e-03,
          2.1824e-04, 4.1108e-04],
         [7.4656e-03, 1.7764e-03, 7.2622e-03,  ..., 3.4421e-03,
          9.9935e-01, 9.9877e-01],
         [3.9925e-03, 9.9467e-01, 9.7672e-01,  ..., 9.9018e-01,
          2.1824e-04, 4.1108e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1032e-03, 4.9423e-03, 5.6278e-04,  ..., 6.6243e-03,
          3.0988e-02, 5.4524e-03],
         [4.9286e-03, 4.8531e-03, 5.6278e-04,  ..., 5.7691e-03,
          2.0320e-02, 4.9433e-03],
         [9.8204e-01, 4.8531e-03, 5.6278e-04,  ..., 9.8184e-01,
          3.4385e-02, 9.8466e-01],
         [4.9286e-03, 9.8535e-01, 9.9831e-01,  ..., 5.7691e-03,
          9.1431e-01, 4.9433e-03]],
        [[9.0989e-03, 2.0642e-03, 1.2524e-04,  ..., 1.1234e-02,
          3.1723e-03, 9.9575e-01],
         [9.0989e-03, 2.0642e-03, 1.2524e-04,  ..., 1.0668e-02,
          2.9643e-03, 1.4152e-03],
         [9.6596e-01, 2.0642e-03, 1.2524e-04,  ..., 9.6609e-01,
          9.9090e-01, 1.4152e-03],
         [1.5842e-02, 9.9381e-01, 9.9962e-01,  ..., 1.2003e-02,
          2.9643e-03, 1.4152e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 380:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9634e-01, 7.0723e-03, 3.4578e-03,  ..., 9.9464e-01,
          9.9618e-01, 1.1446e-02],
         [1.2206e-03, 5.5065e-03, 3.8289e-03,  ..., 1.7864e-03,
          1.2774e-03, 1.1446e-02],
         [1.2206e-03, 7.0319e-03, 3.4578e-03,  ..., 1.7864e-03,
          1.2726e-03, 1.5397e-02],
         [1.2206e-03, 9.8039e-01, 9.8926e-01,  ..., 1.7864e-03,
          1.2726e-03, 9.6171e-01]],
        [[9.8207e-01, 2.6184e-03, 1.8156e-03,  ..., 1.2267e-02,
          1.4244e-03, 5.7066e-04],
         [4.8375e-03, 2.6184e-03, 1.7202e-03,  ..., 7.3828e-03,
          1.4244e-03, 5.7066e-04],
         [8.2556e-03, 2.6450e-03, 1.7202e-03,  ..., 9.8762e-03,
          9.9573e-01, 9.9829e-01],
         [4.8375e-03, 9.9212e-01, 9.9474e-01,  ..., 9.7047e-01,
          1.4244e-03, 5.7066e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:02,729 [Process: 0] Synchronize training processes
2024-08-18 19:52:02,730 [Process: 0] Evaluating...
2024-08-18 19:52:02,731 [Process: 0] EPOCH 380:
2024-08-18 19:52:02,733 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:03,878 [Process: 0] Synchronize training processes
2024-08-18 19:52:03,878 [Process: 0] Evaluating...
2024-08-18 19:52:03,880 [Process: 0] EPOCH 381:
2024-08-18 19:52:03,882 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1833e-03, 3.1891e-04, 2.1180e-02,  ..., 6.6938e-03,
          6.9492e-03, 5.7530e-03],
         [7.6406e-03, 3.1891e-04, 1.7104e-02,  ..., 6.6938e-03,
          4.4234e-03, 4.6175e-03],
         [9.7654e-01, 3.1891e-04, 1.6472e-02,  ..., 9.7992e-01,
          4.4234e-03, 9.8501e-01],
         [7.6406e-03, 9.9904e-01, 9.4524e-01,  ..., 6.6938e-03,
          9.8420e-01, 4.6175e-03]],
        [[6.1617e-03, 9.9149e-04, 5.1397e-06,  ..., 5.3831e-03,
          4.5651e-03, 9.9861e-01],
         [6.1617e-03, 9.9149e-04, 5.1397e-06,  ..., 5.3831e-03,
          4.5651e-03, 4.6498e-04],
         [9.7989e-01, 9.9149e-04, 5.1397e-06,  ..., 9.8385e-01,
          9.8630e-01, 4.6498e-04],
         [7.7858e-03, 9.9703e-01, 9.9998e-01,  ..., 5.3831e-03,
          4.5651e-03, 4.6498e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 381:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9208e-01, 8.0363e-03, 1.4850e-03,  ..., 9.9874e-01,
          9.9688e-01, 6.5789e-02],
         [3.1945e-03, 8.0363e-03, 1.4850e-03,  ..., 4.1889e-04,
          1.0385e-03, 3.3323e-02],
         [2.3652e-03, 9.4394e-03, 1.4850e-03,  ..., 4.1889e-04,
          1.0385e-03, 6.9644e-02],
         [2.3652e-03, 9.7449e-01, 9.9555e-01,  ..., 4.1889e-04,
          1.0385e-03, 8.3124e-01]],
        [[9.9919e-01, 2.3933e-03, 2.3942e-03,  ..., 1.1876e-02,
          4.5565e-04, 1.7377e-03],
         [2.7040e-04, 2.3933e-03, 3.1579e-03,  ..., 8.9998e-03,
          4.5565e-04, 1.7377e-03],
         [2.7040e-04, 2.3933e-03, 2.3942e-03,  ..., 1.1904e-02,
          9.9863e-01, 9.9479e-01],
         [2.7040e-04, 9.9282e-01, 9.9205e-01,  ..., 9.6722e-01,
          4.5565e-04, 1.7377e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.7979e-03, 6.1846e-04, 2.0548e-04,  ..., 6.1699e-03,
          1.8848e-02, 3.8524e-03],
         [5.1146e-03, 6.1846e-04, 2.0548e-04,  ..., 5.5926e-03,
          1.3152e-02, 3.8524e-03],
         [9.8197e-01, 6.1846e-04, 2.0548e-04,  ..., 9.8264e-01,
          1.9402e-02, 9.8844e-01],
         [5.1146e-03, 9.9814e-01, 9.9938e-01,  ..., 5.5926e-03,
          9.4860e-01, 3.8524e-03]],
        [[1.9465e-03, 1.0359e-03, 5.7820e-05,  ..., 1.4315e-02,
          7.9812e-03, 9.9994e-01],
         [1.9465e-03, 1.0185e-03, 5.7820e-05,  ..., 1.2510e-02,
          7.9812e-03, 2.0132e-05],
         [9.9406e-01, 1.0185e-03, 5.7820e-05,  ..., 9.5967e-01,
          9.7447e-01, 2.0132e-05],
         [2.0497e-03, 9.9693e-01, 9.9983e-01,  ..., 1.3502e-02,
          9.5672e-03, 2.0132e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 382:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:05,026 [Process: 0] Synchronize training processes
2024-08-18 19:52:05,026 [Process: 0] Evaluating...
2024-08-18 19:52:05,032 [Process: 0] EPOCH 382:
2024-08-18 19:52:05,034 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5919e-01, 3.1123e-03, 2.1059e-03,  ..., 9.9876e-01,
          9.9476e-01, 2.5493e-03],
         [1.0251e-02, 3.1123e-03, 2.1059e-03,  ..., 4.1459e-04,
          2.7034e-03, 2.5493e-03],
         [1.0386e-02, 3.1123e-03, 2.1059e-03,  ..., 4.1459e-04,
          1.2695e-03, 2.5976e-03],
         [2.0172e-02, 9.9066e-01, 9.9368e-01,  ..., 4.1459e-04,
          1.2695e-03, 9.9230e-01]],
        [[9.9649e-01, 2.3551e-03, 2.4780e-03,  ..., 1.2372e-02,
          3.9185e-04, 2.3858e-04],
         [1.1237e-03, 2.3551e-03, 2.4780e-03,  ..., 1.2372e-02,
          3.9185e-04, 2.3858e-04],
         [1.2618e-03, 2.3551e-03, 2.4780e-03,  ..., 1.9109e-02,
          9.9882e-01, 9.9928e-01],
         [1.1237e-03, 9.9293e-01, 9.9257e-01,  ..., 9.5615e-01,
          3.9185e-04, 2.3858e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7441e-03, 7.1955e-04, 1.4783e-04,  ..., 4.4166e-03,
          5.5662e-02, 5.3222e-03],
         [4.7441e-03, 7.1955e-04, 1.4783e-04,  ..., 4.4166e-03,
          3.0747e-02, 5.3222e-03],
         [9.8577e-01, 7.1955e-04, 1.4783e-04,  ..., 9.8675e-01,
          5.1431e-02, 9.8403e-01],
         [4.7441e-03, 9.9784e-01, 9.9956e-01,  ..., 4.4166e-03,
          8.6216e-01, 5.3222e-03]],
        [[3.0575e-02, 5.7792e-04, 6.2056e-05,  ..., 5.6316e-03,
          2.7473e-03, 9.9983e-01],
         [3.0575e-02, 5.7792e-04, 6.2056e-05,  ..., 5.6316e-03,
          2.7473e-03, 5.6934e-05],
         [8.7789e-01, 5.7792e-04, 6.2056e-05,  ..., 9.8311e-01,
          9.9176e-01, 5.6934e-05],
         [6.0961e-02, 9.9827e-01, 9.9981e-01,  ..., 5.6316e-03,
          2.7473e-03, 5.6934e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 383:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2362e-01, 4.4317e-03, 7.2754e-03,  ..., 9.9604e-01,
          9.9699e-01, 1.1966e-02],
         [8.7037e-02, 4.5041e-03, 5.2847e-03,  ..., 1.3198e-03,
          1.0026e-03, 1.0141e-02],
         [5.7026e-02, 4.5104e-03, 5.8078e-03,  ..., 1.3198e-03,
          1.0026e-03, 1.4419e-02],
         [1.3232e-01, 9.8655e-01, 9.8163e-01,  ..., 1.3198e-03,
          1.0026e-03, 9.6347e-01]],
        [[9.9475e-01, 2.7982e-03, 1.2112e-03,  ..., 1.6436e-02,
          2.2406e-04, 4.2571e-04],
         [1.7502e-03, 2.7015e-03, 1.2112e-03,  ..., 1.3263e-02,
          2.2406e-04, 4.2571e-04],
         [1.7502e-03, 2.7310e-03, 1.2112e-03,  ..., 2.0893e-02,
          9.9933e-01, 9.9872e-01],
         [1.7502e-03, 9.9177e-01, 9.9637e-01,  ..., 9.4941e-01,
          2.2406e-04, 4.2571e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0510e-02, 4.0989e-03, 2.9415e-04,  ..., 4.9500e-03,
          3.5289e-03, 3.5747e-03],
         [1.2489e-02, 4.0989e-03, 2.9415e-04,  ..., 4.9500e-03,
          3.5289e-03, 3.5747e-03],
         [9.5451e-01, 4.0989e-03, 2.9415e-04,  ..., 9.8515e-01,
          3.5289e-03, 9.8928e-01],
         [1.2489e-02, 9.8770e-01, 9.9912e-01,  ..., 4.9500e-03,
          9.8941e-01, 3.5747e-03]],
        [[1.6865e-03, 1.0739e-04, 5.1052e-06,  ..., 1.0432e-02,
          5.2733e-03, 9.9721e-01],
         [1.6865e-03, 1.0739e-04, 5.1052e-06,  ..., 1.0432e-02,
          4.6115e-03, 9.2976e-04],
         [9.9494e-01, 1.0739e-04, 5.1052e-06,  ..., 9.6675e-01,
          9.8550e-01, 9.2976e-04],
         [1.6865e-03, 9.9968e-01, 9.9998e-01,  ..., 1.2391e-02,
          4.6115e-03, 9.2976e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:06,178 [Process: 0] Synchronize training processes
2024-08-18 19:52:06,179 [Process: 0] Evaluating...
2024-08-18 19:52:06,180 [Process: 0] EPOCH 383:
2024-08-18 19:52:06,182 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:07,330 [Process: 0] Synchronize training processes
2024-08-18 19:52:07,331 [Process: 0] Evaluating...
2024-08-18 19:52:07,332 [Process: 0] EPOCH 384:
2024-08-18 19:52:07,334 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 384:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8183e-01, 5.5720e-03, 3.3978e-03,  ..., 9.9409e-01,
          9.9887e-01, 7.6210e-03],
         [6.5057e-02, 5.5720e-03, 2.8040e-03,  ..., 1.9700e-03,
          3.8212e-04, 8.9350e-03],
         [2.6470e-02, 6.7832e-03, 2.8040e-03,  ..., 1.9700e-03,
          3.7226e-04, 9.3333e-03],
         [2.6647e-02, 9.8207e-01, 9.9099e-01,  ..., 1.9700e-03,
          3.7226e-04, 9.7411e-01]],
        [[9.9938e-01, 3.0025e-03, 8.6965e-03,  ..., 3.7768e-02,
          4.0391e-04, 3.1434e-04],
         [1.8335e-04, 3.0025e-03, 9.9413e-03,  ..., 2.5464e-02,
          4.0391e-04, 3.1434e-04],
         [2.4843e-04, 3.0025e-03, 1.0404e-02,  ..., 5.9179e-02,
          9.9879e-01, 9.9906e-01],
         [1.8335e-04, 9.9099e-01, 9.7096e-01,  ..., 8.7759e-01,
          4.0391e-04, 3.1434e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3762e-02, 1.3430e-03, 1.2693e-03,  ..., 5.8019e-03,
          1.9810e-03, 5.6291e-03],
         [1.3279e-02, 1.3430e-03, 1.2693e-03,  ..., 5.8019e-03,
          1.9810e-03, 5.6291e-03],
         [9.3968e-01, 1.3430e-03, 1.2693e-03,  ..., 9.8259e-01,
          1.9810e-03, 9.8311e-01],
         [1.3279e-02, 9.9597e-01, 9.9619e-01,  ..., 5.8019e-03,
          9.9406e-01, 5.6291e-03]],
        [[1.5942e-02, 3.6119e-04, 3.9472e-04,  ..., 7.1411e-03,
          3.4182e-03, 9.9522e-01],
         [1.5942e-02, 3.6119e-04, 3.9472e-04,  ..., 7.1411e-03,
          3.4182e-03, 1.4620e-03],
         [9.3812e-01, 3.6119e-04, 3.9472e-04,  ..., 9.7826e-01,
          9.8975e-01, 1.4620e-03],
         [2.9997e-02, 9.9892e-01, 9.9882e-01,  ..., 7.4577e-03,
          3.4182e-03, 1.8559e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 385:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.8558e-01, 8.1905e-04, 6.5696e-03,  ..., 9.9904e-01,
          9.8585e-01, 1.4576e-02],
         [2.4142e-01, 8.1905e-04, 6.6163e-03,  ..., 3.1969e-04,
          6.0040e-03, 1.4633e-02],
         [4.0443e-02, 8.1905e-04, 7.8998e-03,  ..., 3.1969e-04,
          4.0721e-03, 1.9978e-02],
         [3.2549e-02, 9.9754e-01, 9.7891e-01,  ..., 3.1969e-04,
          4.0721e-03, 9.5081e-01]],
        [[9.9904e-01, 1.5143e-03, 3.9513e-03,  ..., 3.6333e-03,
          1.5910e-04, 2.0542e-04],
         [3.1939e-04, 1.5143e-03, 3.9513e-03,  ..., 3.6333e-03,
          1.5910e-04, 2.0542e-04],
         [3.1939e-04, 1.5143e-03, 4.3159e-03,  ..., 4.0336e-03,
          9.9952e-01, 9.9938e-01],
         [3.1939e-04, 9.9546e-01, 9.8778e-01,  ..., 9.8870e-01,
          1.5910e-04, 2.0542e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:08,478 [Process: 0] Synchronize training processes
2024-08-18 19:52:08,479 [Process: 0] Evaluating...
2024-08-18 19:52:08,480 [Process: 0] EPOCH 385:
2024-08-18 19:52:08,483 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:09,631 [Process: 0] Synchronize training processes
2024-08-18 19:52:09,631 [Process: 0] Evaluating...
2024-08-18 19:52:09,633 [Process: 0] EPOCH 386:
2024-08-18 19:52:09,634 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3459e-02, 1.8909e-04, 8.5429e-04,  ..., 5.4720e-03,
          1.2826e-02, 6.8686e-03],
         [9.7984e-03, 1.8909e-04, 8.5429e-04,  ..., 5.4720e-03,
          1.1130e-02, 6.8686e-03],
         [9.5694e-01, 1.8909e-04, 8.5429e-04,  ..., 9.8293e-01,
          1.9486e-02, 9.7939e-01],
         [9.7984e-03, 9.9943e-01, 9.9744e-01,  ..., 6.1267e-03,
          9.5656e-01, 6.8686e-03]],
        [[4.5340e-03, 6.8581e-04, 4.6703e-05,  ..., 3.2748e-03,
          4.7670e-03, 9.9795e-01],
         [4.5340e-03, 2.2497e-04, 4.6703e-05,  ..., 3.2748e-03,
          4.7670e-03, 6.8351e-04],
         [9.8483e-01, 2.2497e-04, 4.6703e-05,  ..., 9.9018e-01,
          9.8570e-01, 6.8351e-04],
         [6.1054e-03, 9.9886e-01, 9.9986e-01,  ..., 3.2748e-03,
          4.7670e-03, 6.8351e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 386:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8438e-01, 9.5495e-03, 2.4434e-03,  ..., 9.9935e-01,
          9.9937e-01, 9.9202e-03],
         [5.2282e-03, 8.5894e-03, 2.4434e-03,  ..., 2.1589e-04,
          2.3508e-04, 9.9202e-03],
         [5.1940e-03, 1.1662e-02, 2.4434e-03,  ..., 2.1589e-04,
          1.9612e-04, 1.2353e-02],
         [5.1940e-03, 9.7020e-01, 9.9267e-01,  ..., 2.1589e-04,
          1.9612e-04, 9.6781e-01]],
        [[9.9703e-01, 7.1199e-04, 2.4475e-03,  ..., 3.4663e-03,
          1.7480e-03, 1.0085e-03],
         [9.8869e-04, 7.1199e-04, 2.4475e-03,  ..., 2.8912e-03,
          1.7480e-03, 1.0085e-03],
         [9.8869e-04, 7.1199e-04, 2.4475e-03,  ..., 3.1260e-03,
          9.9476e-01, 9.9697e-01],
         [9.8869e-04, 9.9786e-01, 9.9266e-01,  ..., 9.9052e-01,
          1.7480e-03, 1.0085e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1076e-02, 4.8991e-04, 1.9978e-04,  ..., 3.9106e-03,
          3.6252e-03, 1.8902e-03],
         [4.8734e-03, 4.8991e-04, 1.9978e-04,  ..., 2.8576e-03,
          3.6252e-03, 1.8902e-03],
         [9.7918e-01, 4.8991e-04, 1.9978e-04,  ..., 9.9037e-01,
          3.7322e-03, 9.9433e-01],
         [4.8734e-03, 9.9853e-01, 9.9940e-01,  ..., 2.8576e-03,
          9.8902e-01, 1.8902e-03]],
        [[5.6702e-03, 7.8252e-04, 6.5914e-06,  ..., 4.6316e-03,
          2.6447e-03, 9.9936e-01],
         [5.6702e-03, 7.8252e-04, 6.5914e-06,  ..., 4.6316e-03,
          2.6447e-03, 2.1457e-04],
         [9.8197e-01, 7.8252e-04, 6.5914e-06,  ..., 9.8611e-01,
          9.9207e-01, 2.1457e-04],
         [6.6864e-03, 9.9765e-01, 9.9998e-01,  ..., 4.6316e-03,
          2.6447e-03, 2.1457e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 387:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9089e-01, 1.1289e-03, 8.8564e-04,  ..., 9.9948e-01,
          9.9740e-01, 1.0453e-02],
         [1.9900e-02, 1.1289e-03, 8.8564e-04,  ..., 1.7181e-04,
          9.1906e-04, 1.0082e-02],
         [2.4372e-02, 1.1289e-03, 8.8564e-04,  ..., 1.7181e-04,
          8.3828e-04, 1.3159e-02],
         [6.4842e-02, 9.9661e-01, 9.9734e-01,  ..., 1.7181e-04,
          8.3828e-04, 9.6631e-01]],
        [[9.9496e-01, 1.4587e-03, 5.0129e-03,  ..., 5.0385e-03,
          1.9636e-04, 1.5268e-04],
         [1.3956e-03, 1.4587e-03, 3.5952e-03,  ..., 8.3899e-03,
          1.9636e-04, 1.5268e-04],
         [2.2444e-03, 1.4587e-03, 3.9081e-03,  ..., 5.4472e-03,
          9.9941e-01, 9.9954e-01],
         [1.3956e-03, 9.9562e-01, 9.8748e-01,  ..., 9.8112e-01,
          1.9636e-04, 1.5268e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:10,778 [Process: 0] Synchronize training processes
2024-08-18 19:52:10,778 [Process: 0] Evaluating...
2024-08-18 19:52:10,780 [Process: 0] EPOCH 387:
2024-08-18 19:52:10,782 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:11,926 [Process: 0] Synchronize training processes
2024-08-18 19:52:11,926 [Process: 0] Evaluating...
2024-08-18 19:52:11,928 [Process: 0] EPOCH 388:
2024-08-18 19:52:11,930 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8728e-03, 2.8695e-03, 1.9241e-04,  ..., 1.6853e-03,
          7.9564e-03, 1.9427e-03],
         [2.6982e-03, 2.8695e-03, 1.9241e-04,  ..., 1.6853e-03,
          7.9564e-03, 1.9427e-03],
         [9.8673e-01, 2.8695e-03, 1.9241e-04,  ..., 9.9494e-01,
          1.2134e-02, 9.9417e-01],
         [2.6982e-03, 9.9139e-01, 9.9942e-01,  ..., 1.6853e-03,
          9.7195e-01, 1.9427e-03]],
        [[9.4479e-03, 1.1076e-04, 1.6893e-05,  ..., 1.0607e-02,
          2.5356e-03, 9.9975e-01],
         [9.4479e-03, 1.1076e-04, 1.6893e-05,  ..., 1.0607e-02,
          2.5356e-03, 8.4723e-05],
         [9.6870e-01, 1.1076e-04, 1.6893e-05,  ..., 9.6750e-01,
          9.9239e-01, 8.4723e-05],
         [1.2400e-02, 9.9967e-01, 9.9995e-01,  ..., 1.1290e-02,
          2.5356e-03, 8.4723e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 388:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7409e-01, 1.4640e-03, 4.8684e-03,  ..., 9.9947e-01,
          9.9742e-01, 1.1562e-03],
         [7.1025e-03, 1.4640e-03, 4.8684e-03,  ..., 1.7630e-04,
          8.6060e-04, 1.1984e-03],
         [1.1706e-02, 1.4640e-03, 5.5733e-03,  ..., 1.7630e-04,
          8.6060e-04, 1.1562e-03],
         [7.1025e-03, 9.9561e-01, 9.8469e-01,  ..., 1.7630e-04,
          8.6060e-04, 9.9649e-01]],
        [[9.9457e-01, 2.9358e-03, 9.5959e-04,  ..., 2.8069e-03,
          7.8718e-04, 1.1626e-03],
         [1.8103e-03, 2.9358e-03, 9.5959e-04,  ..., 2.8069e-03,
          7.8718e-04, 1.1626e-03],
         [1.8103e-03, 2.9358e-03, 9.5959e-04,  ..., 2.8165e-03,
          9.9764e-01, 9.9651e-01],
         [1.8103e-03, 9.9119e-01, 9.9712e-01,  ..., 9.9157e-01,
          7.8718e-04, 1.1626e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3100e-02, 4.2233e-04, 4.1995e-04,  ..., 3.1792e-03,
          1.3720e-02, 4.8219e-03],
         [8.6255e-03, 4.2233e-04, 4.1995e-04,  ..., 3.1792e-03,
          1.3720e-02, 4.8219e-03],
         [9.5965e-01, 4.2233e-04, 4.1995e-04,  ..., 9.9046e-01,
          3.5273e-02, 9.8553e-01],
         [8.6255e-03, 9.9873e-01, 9.9874e-01,  ..., 3.1792e-03,
          9.3729e-01, 4.8219e-03]],
        [[2.1620e-03, 2.1218e-04, 1.2889e-04,  ..., 1.2562e-02,
          5.9745e-03, 9.9799e-01],
         [2.1620e-03, 2.1218e-04, 1.6708e-04,  ..., 1.2532e-02,
          5.9745e-03, 6.6912e-04],
         [9.9351e-01, 2.1218e-04, 1.2889e-04,  ..., 9.6184e-01,
          9.8208e-01, 6.6912e-04],
         [2.1620e-03, 9.9936e-01, 9.9958e-01,  ..., 1.3065e-02,
          5.9745e-03, 6.6912e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 389:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:13,074 [Process: 0] Synchronize training processes
2024-08-18 19:52:13,074 [Process: 0] Evaluating...
2024-08-18 19:52:13,076 [Process: 0] EPOCH 389:
2024-08-18 19:52:13,078 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8622e-01, 1.6658e-02, 5.0149e-03,  ..., 9.9884e-01,
          9.9208e-01, 2.4887e-03],
         [4.5930e-03, 1.2629e-02, 5.0149e-03,  ..., 3.8649e-04,
          2.6401e-03, 2.4887e-03],
         [4.5930e-03, 1.5343e-02, 6.3939e-03,  ..., 3.8649e-04,
          2.6401e-03, 2.4887e-03],
         [4.5930e-03, 9.5537e-01, 9.8358e-01,  ..., 3.8649e-04,
          2.6401e-03, 9.9253e-01]],
        [[9.9884e-01, 4.7596e-03, 1.3235e-03,  ..., 4.2039e-03,
          3.9759e-04, 3.7783e-04],
         [3.8694e-04, 1.1095e-02, 1.7240e-03,  ..., 4.2039e-03,
          3.9759e-04, 3.7783e-04],
         [3.8694e-04, 4.7596e-03, 1.3235e-03,  ..., 4.4857e-03,
          9.9881e-01, 9.9887e-01],
         [3.8694e-04, 9.7939e-01, 9.9563e-01,  ..., 9.8711e-01,
          3.9759e-04, 3.7783e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0075e-03, 3.3322e-03, 2.1710e-04,  ..., 4.0439e-03,
          4.9006e-03, 1.6728e-02],
         [1.0075e-03, 6.1286e-03, 2.1710e-04,  ..., 4.0159e-03,
          4.9006e-03, 1.4553e-02],
         [9.9698e-01, 3.3322e-03, 2.1710e-04,  ..., 9.8792e-01,
          4.9006e-03, 9.5098e-01],
         [1.0075e-03, 9.8721e-01, 9.9935e-01,  ..., 4.0159e-03,
          9.8530e-01, 1.7739e-02]],
        [[2.5902e-03, 7.9570e-04, 8.1578e-05,  ..., 1.0162e-02,
          4.1149e-03, 9.9930e-01],
         [2.5902e-03, 7.9570e-04, 8.1578e-05,  ..., 1.0162e-02,
          4.1149e-03, 2.3421e-04],
         [9.9223e-01, 7.9570e-04, 8.1578e-05,  ..., 9.6904e-01,
          9.8766e-01, 2.3421e-04],
         [2.5902e-03, 9.9761e-01, 9.9976e-01,  ..., 1.0636e-02,
          4.1149e-03, 2.3421e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 390:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9593e-01, 2.0988e-03, 3.8892e-03,  ..., 9.9465e-01,
          9.9545e-01, 4.7520e-03],
         [1.3564e-03, 2.0988e-03, 3.0364e-03,  ..., 1.6531e-03,
          1.5177e-03, 4.7520e-03],
         [1.3564e-03, 2.0988e-03, 3.6039e-03,  ..., 2.0438e-03,
          1.5177e-03, 4.7520e-03],
         [1.3564e-03, 9.9370e-01, 9.8947e-01,  ..., 1.6531e-03,
          1.5177e-03, 9.8574e-01]],
        [[9.9277e-01, 2.5367e-03, 4.4017e-03,  ..., 6.3532e-03,
          3.2535e-04, 1.3440e-03],
         [2.4084e-03, 4.1525e-03, 8.0092e-03,  ..., 6.3532e-03,
          3.2535e-04, 1.3440e-03],
         [2.4084e-03, 2.5367e-03, 4.4017e-03,  ..., 8.3884e-03,
          9.9902e-01, 9.9597e-01],
         [2.4084e-03, 9.9077e-01, 9.8319e-01,  ..., 9.7891e-01,
          3.2535e-04, 1.3440e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1864e-03, 3.2059e-03, 1.5109e-03,  ..., 6.4298e-03,
          1.7668e-03, 3.4919e-03],
         [2.4340e-03, 6.9449e-03, 1.5109e-03,  ..., 6.4298e-03,
          1.7668e-03, 3.4919e-03],
         [9.9095e-01, 3.2059e-03, 1.5109e-03,  ..., 9.8071e-01,
          1.7668e-03, 9.8952e-01],
         [2.4340e-03, 9.8664e-01, 9.9547e-01,  ..., 6.4298e-03,
          9.9470e-01, 3.4919e-03]],
        [[3.2336e-03, 1.3830e-03, 3.7524e-05,  ..., 4.5366e-03,
          3.7313e-03, 9.9926e-01],
         [3.2336e-03, 1.3830e-03, 3.7524e-05,  ..., 4.5366e-03,
          3.7313e-03, 2.4731e-04],
         [9.9030e-01, 1.3830e-03, 3.7524e-05,  ..., 9.8639e-01,
          9.8881e-01, 2.4731e-04],
         [3.2336e-03, 9.9585e-01, 9.9989e-01,  ..., 4.5366e-03,
          3.7313e-03, 2.4731e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:14,222 [Process: 0] Synchronize training processes
2024-08-18 19:52:14,222 [Process: 0] Evaluating...
2024-08-18 19:52:14,224 [Process: 0] EPOCH 390:
2024-08-18 19:52:14,225 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:15,369 [Process: 0] Synchronize training processes
2024-08-18 19:52:15,370 [Process: 0] Evaluating...
2024-08-18 19:52:15,371 [Process: 0] EPOCH 391:
2024-08-18 19:52:15,373 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 391:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9471e-01, 3.7561e-03, 3.1349e-03,  ..., 9.9888e-01,
          1.5909e-02, 3.6326e-03],
         [1.4240e-03, 3.7561e-03, 2.3994e-03,  ..., 3.7175e-04,
          1.2586e-02, 3.6326e-03],
         [1.4240e-03, 3.7561e-03, 2.3994e-03,  ..., 3.7175e-04,
          2.1440e-02, 3.7579e-03],
         [2.4430e-03, 9.8873e-01, 9.9207e-01,  ..., 3.7175e-04,
          9.5007e-01, 9.8898e-01]],
        [[9.9747e-01, 4.7825e-03, 3.5679e-03,  ..., 1.0771e-02,
          3.2593e-03, 2.6004e-03],
         [8.2811e-04, 7.4570e-03, 5.6865e-03,  ..., 7.1344e-03,
          3.2593e-03, 2.6004e-03],
         [8.7470e-04, 4.7825e-03, 3.5679e-03,  ..., 1.0391e-02,
          9.9022e-01, 9.9220e-01],
         [8.2811e-04, 9.8298e-01, 9.8718e-01,  ..., 9.7170e-01,
          3.2593e-03, 2.6004e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.5873e-03, 3.9492e-04, 9.0781e-04,  ..., 4.3731e-03,
          3.7767e-02, 5.8724e-03],
         [4.0627e-03, 3.9492e-04, 9.0781e-04,  ..., 4.3731e-03,
          2.6926e-02, 5.8724e-03],
         [9.8329e-01, 3.9492e-04, 9.0781e-04,  ..., 9.8688e-01,
          8.8056e-01, 9.8167e-01],
         [4.0627e-03, 9.9882e-01, 9.9728e-01,  ..., 4.3731e-03,
          5.4743e-02, 6.5816e-03]],
        [[2.4534e-02, 2.2700e-02, 1.1214e-05,  ..., 1.4153e-02,
          4.4226e-03, 9.9137e-01],
         [2.4534e-02, 5.3986e-02, 1.1214e-05,  ..., 1.4153e-02,
          4.4226e-03, 2.8769e-03],
         [8.9924e-01, 2.2700e-02, 1.1214e-05,  ..., 9.4925e-01,
          9.8673e-01, 2.8769e-03],
         [5.1694e-02, 9.0061e-01, 9.9997e-01,  ..., 2.2448e-02,
          4.4226e-03, 2.8769e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 392:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8773e-01, 2.0305e-03, 9.4112e-03,  ..., 9.9855e-01,
          4.5183e-03, 2.3850e-03],
         [3.0393e-03, 2.0305e-03, 1.5206e-02,  ..., 4.8206e-04,
          5.2041e-03, 2.3850e-03],
         [6.1901e-03, 2.0305e-03, 1.1619e-02,  ..., 4.8206e-04,
          4.5183e-03, 2.3850e-03],
         [3.0393e-03, 9.9391e-01, 9.6376e-01,  ..., 4.8206e-04,
          9.8576e-01, 9.9285e-01]],
        [[9.9125e-01, 2.1008e-03, 1.3825e-03,  ..., 7.5104e-03,
          3.9319e-04, 2.6529e-04],
         [2.6048e-03, 2.1008e-03, 1.3825e-03,  ..., 7.5104e-03,
          3.9319e-04, 2.6529e-04],
         [3.5427e-03, 2.1008e-03, 1.3825e-03,  ..., 1.0467e-02,
          9.9882e-01, 9.9920e-01],
         [2.6048e-03, 9.9370e-01, 9.9585e-01,  ..., 9.7451e-01,
          3.9319e-04, 2.6529e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:16,519 [Process: 0] Synchronize training processes
2024-08-18 19:52:16,519 [Process: 0] Evaluating...
2024-08-18 19:52:16,526 [Process: 0] EPOCH 392:
2024-08-18 19:52:16,528 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:17,673 [Process: 0] Synchronize training processes
2024-08-18 19:52:17,674 [Process: 0] Evaluating...
2024-08-18 19:52:17,676 [Process: 0] EPOCH 393:
2024-08-18 19:52:17,678 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0917e-02, 2.8466e-03, 3.3650e-04,  ..., 1.7017e-03,
          3.2881e-03, 1.9515e-03],
         [1.0917e-02, 2.8719e-03, 3.3650e-04,  ..., 1.7017e-03,
          2.1153e-03, 1.9515e-03],
         [9.6585e-01, 2.8466e-03, 3.3650e-04,  ..., 9.9489e-01,
          2.1153e-03, 9.9415e-01],
         [1.2317e-02, 9.9143e-01, 9.9899e-01,  ..., 1.7017e-03,
          9.9248e-01, 1.9515e-03]],
        [[6.7267e-03, 1.3484e-03, 2.1490e-05,  ..., 1.0345e-02,
          7.1088e-03, 9.9849e-01],
         [6.7267e-03, 2.2338e-03, 2.1490e-05,  ..., 9.0268e-03,
          7.1088e-03, 5.0243e-04],
         [9.7600e-01, 1.3484e-03, 2.1490e-05,  ..., 9.7160e-01,
          9.7818e-01, 5.0243e-04],
         [1.0543e-02, 9.9507e-01, 9.9994e-01,  ..., 9.0268e-03,
          7.6074e-03, 5.0243e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 393:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9412e-01, 1.3017e-03, 3.7868e-03,  ..., 9.9860e-01,
          9.6061e-01, 7.8298e-03],
         [1.8640e-03, 1.3017e-03, 5.0333e-03,  ..., 4.6506e-04,
          8.9449e-03, 7.8298e-03],
         [2.1484e-03, 1.3017e-03, 3.7868e-03,  ..., 4.6506e-04,
          8.9449e-03, 1.0103e-02],
         [1.8640e-03, 9.9609e-01, 9.8739e-01,  ..., 4.6506e-04,
          2.1496e-02, 9.7424e-01]],
        [[9.9910e-01, 1.9500e-03, 3.3811e-03,  ..., 1.5656e-03,
          1.9413e-04, 2.0418e-04],
         [2.9577e-04, 2.0562e-03, 4.4514e-03,  ..., 1.5656e-03,
          1.9413e-04, 2.0418e-04],
         [3.0657e-04, 1.9500e-03, 3.3811e-03,  ..., 1.6271e-03,
          9.9942e-01, 9.9939e-01],
         [2.9577e-04, 9.9404e-01, 9.8879e-01,  ..., 9.9524e-01,
          1.9413e-04, 2.0418e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4523e-03, 3.6336e-03, 7.5505e-04,  ..., 5.8478e-03,
          7.9610e-03, 2.7519e-03],
         [3.4523e-03, 4.0560e-03, 7.5505e-04,  ..., 4.8280e-03,
          7.9610e-03, 2.7519e-03],
         [9.8964e-01, 3.6336e-03, 7.5505e-04,  ..., 9.8450e-01,
          7.9610e-03, 9.9174e-01],
         [3.4523e-03, 9.8868e-01, 9.9773e-01,  ..., 4.8280e-03,
          9.7612e-01, 2.7519e-03]],
        [[4.4413e-03, 6.3001e-04, 3.2807e-04,  ..., 7.6128e-03,
          8.8406e-03, 9.9540e-01],
         [4.4413e-03, 6.3001e-04, 3.2807e-04,  ..., 7.4461e-03,
          8.8406e-03, 1.5327e-03],
         [9.8651e-01, 6.3001e-04, 3.2807e-04,  ..., 9.7750e-01,
          9.7279e-01, 1.5327e-03],
         [4.6095e-03, 9.9811e-01, 9.9902e-01,  ..., 7.4461e-03,
          9.5262e-03, 1.5327e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 394:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9807e-01, 5.6401e-03, 1.2296e-02,  ..., 9.9762e-01,
          9.9648e-01, 4.7703e-03],
         [6.4354e-04, 8.2981e-03, 8.8421e-03,  ..., 7.9382e-04,
          1.1602e-03, 4.7703e-03],
         [6.4354e-04, 5.8864e-03, 1.1283e-02,  ..., 7.9382e-04,
          1.2022e-03, 4.7703e-03],
         [6.4354e-04, 9.8018e-01, 9.6758e-01,  ..., 7.9382e-04,
          1.1602e-03, 9.8569e-01]],
        [[9.9661e-01, 3.2929e-03, 2.2119e-03,  ..., 2.7259e-03,
          8.2514e-05, 3.7540e-04],
         [9.6919e-04, 4.3579e-03, 2.2119e-03,  ..., 2.7259e-03,
          8.2514e-05, 3.7540e-04],
         [1.4550e-03, 3.6590e-03, 2.2119e-03,  ..., 2.9005e-03,
          9.9975e-01, 9.9887e-01],
         [9.6919e-04, 9.8869e-01, 9.9336e-01,  ..., 9.9165e-01,
          8.2514e-05, 3.7540e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:18,822 [Process: 0] Synchronize training processes
2024-08-18 19:52:18,822 [Process: 0] Evaluating...
2024-08-18 19:52:18,824 [Process: 0] EPOCH 394:
2024-08-18 19:52:18,826 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:19,971 [Process: 0] Synchronize training processes
2024-08-18 19:52:19,971 [Process: 0] Evaluating...
2024-08-18 19:52:19,973 [Process: 0] EPOCH 395:
2024-08-18 19:52:19,974 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7289e-02, 4.4512e-04, 3.5197e-04,  ..., 2.7578e-03,
          1.0453e-01, 3.8097e-03],
         [6.5066e-03, 4.4512e-04, 3.5197e-04,  ..., 2.7578e-03,
          4.7575e-02, 3.8097e-03],
         [9.6970e-01, 4.4512e-04, 3.5197e-04,  ..., 9.9173e-01,
          1.4170e-01, 9.8857e-01],
         [6.5066e-03, 9.9866e-01, 9.9894e-01,  ..., 2.7578e-03,
          7.0619e-01, 3.8097e-03]],
        [[4.3066e-03, 2.3373e-03, 1.1995e-04,  ..., 4.0808e-03,
          7.0642e-03, 9.9896e-01],
         [4.3066e-03, 2.3373e-03, 1.1995e-04,  ..., 4.0808e-03,
          6.6763e-03, 3.4833e-04],
         [9.8708e-01, 2.3373e-03, 1.1995e-04,  ..., 9.8716e-01,
          9.7958e-01, 3.4833e-04],
         [4.3066e-03, 9.9299e-01, 9.9964e-01,  ..., 4.6829e-03,
          6.6763e-03, 3.4833e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 395:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9928e-01, 3.8946e-03, 1.8950e-03,  ..., 9.9648e-01,
          9.9376e-01, 1.0650e-02],
         [2.4118e-04, 3.8946e-03, 1.8950e-03,  ..., 1.1304e-03,
          1.9134e-03, 8.8605e-03],
         [2.4118e-04, 4.4209e-03, 1.8950e-03,  ..., 1.2551e-03,
          1.9134e-03, 1.1053e-02],
         [2.4118e-04, 9.8779e-01, 9.9431e-01,  ..., 1.1304e-03,
          2.4091e-03, 9.6944e-01]],
        [[9.9907e-01, 4.9091e-03, 6.8376e-03,  ..., 1.0647e-03,
          4.7051e-03, 4.6405e-04],
         [3.1092e-04, 4.9091e-03, 6.8376e-03,  ..., 1.0647e-03,
          4.7051e-03, 4.6405e-04],
         [3.1092e-04, 4.9091e-03, 7.6284e-03,  ..., 1.0647e-03,
          9.8517e-01, 9.9861e-01],
         [3.1092e-04, 9.8527e-01, 9.7870e-01,  ..., 9.9681e-01,
          5.4197e-03, 4.6405e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8326e-03, 1.9508e-03, 3.6573e-04,  ..., 5.6029e-03,
          6.8821e-03, 4.8712e-03],
         [3.8326e-03, 1.9508e-03, 3.6573e-04,  ..., 5.4001e-03,
          6.8821e-03, 4.6310e-03],
         [9.8850e-01, 1.9508e-03, 3.6573e-04,  ..., 9.8360e-01,
          6.8821e-03, 9.8587e-01],
         [3.8326e-03, 9.9415e-01, 9.9890e-01,  ..., 5.4001e-03,
          9.7935e-01, 4.6310e-03]],
        [[5.0377e-03, 7.5068e-05, 5.1418e-05,  ..., 1.0579e-02,
          3.8440e-03, 9.9984e-01],
         [5.0377e-03, 7.5068e-05, 5.1418e-05,  ..., 1.0579e-02,
          3.8440e-03, 5.4416e-05],
         [9.8410e-01, 7.5068e-05, 5.1418e-05,  ..., 9.6350e-01,
          9.8847e-01, 5.4416e-05],
         [5.8209e-03, 9.9977e-01, 9.9985e-01,  ..., 1.5341e-02,
          3.8440e-03, 5.4416e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 396:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:21,116 [Process: 0] Synchronize training processes
2024-08-18 19:52:21,116 [Process: 0] Evaluating...
2024-08-18 19:52:21,118 [Process: 0] EPOCH 396:
2024-08-18 19:52:21,119 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0964e-01, 4.8607e-03, 3.2035e-03,  ..., 9.9971e-01,
          9.9439e-01, 4.2850e-02],
         [1.7127e-02, 4.4014e-03, 3.2035e-03,  ..., 9.5239e-05,
          1.7656e-03, 3.9428e-02],
         [3.8545e-02, 4.6894e-03, 3.2035e-03,  ..., 9.5239e-05,
          2.0814e-03, 5.7905e-02],
         [3.4688e-02, 9.8605e-01, 9.9039e-01,  ..., 9.5239e-05,
          1.7656e-03, 8.5982e-01]],
        [[9.8007e-01, 8.6742e-03, 4.8425e-03,  ..., 2.5525e-03,
          4.5780e-04, 1.0231e-04],
         [6.6882e-03, 1.1601e-02, 7.1190e-03,  ..., 2.5525e-03,
          4.5780e-04, 1.0231e-04],
         [6.8281e-03, 9.9046e-03, 4.8425e-03,  ..., 2.5525e-03,
          9.9863e-01, 9.9969e-01],
         [6.4101e-03, 9.6982e-01, 9.8320e-01,  ..., 9.9234e-01,
          4.5780e-04, 1.0231e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4784e-02, 1.0150e-04, 8.5608e-05,  ..., 4.3790e-03,
          5.3317e-03, 5.2852e-03],
         [1.7440e-02, 1.0150e-04, 8.5608e-05,  ..., 4.3790e-03,
          3.9505e-03, 5.2852e-03],
         [9.3978e-01, 1.0150e-04, 8.5608e-05,  ..., 9.8686e-01,
          3.9505e-03, 9.8414e-01],
         [1.7998e-02, 9.9970e-01, 9.9974e-01,  ..., 4.3790e-03,
          9.8677e-01, 5.2852e-03]],
        [[1.6550e-03, 1.1341e-04, 2.5441e-05,  ..., 1.5094e-02,
          1.1185e-03, 9.9501e-01],
         [1.6550e-03, 1.1341e-04, 2.5441e-05,  ..., 1.1209e-02,
          1.1185e-03, 1.8238e-03],
         [9.9503e-01, 1.1341e-04, 2.5441e-05,  ..., 9.6249e-01,
          9.9664e-01, 1.5812e-03],
         [1.6550e-03, 9.9966e-01, 9.9992e-01,  ..., 1.1209e-02,
          1.1185e-03, 1.5812e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 397:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9454e-01, 5.1852e-03, 2.1264e-03,  ..., 9.9729e-01,
          9.6479e-01, 3.7539e-02],
         [1.2908e-03, 5.1852e-03, 2.1264e-03,  ..., 9.0315e-04,
          7.4634e-03, 2.3606e-02],
         [2.8787e-03, 7.7180e-03, 2.1264e-03,  ..., 9.0315e-04,
          1.6330e-02, 4.9304e-02],
         [1.2908e-03, 9.8191e-01, 9.9362e-01,  ..., 9.0315e-04,
          1.1413e-02, 8.8955e-01]],
        [[9.9891e-01, 2.1877e-03, 1.4167e-03,  ..., 4.3410e-03,
          2.2248e-03, 4.6818e-04],
         [3.6481e-04, 2.1877e-03, 1.4167e-03,  ..., 3.5520e-03,
          2.2248e-03, 4.6818e-04],
         [3.6481e-04, 2.1877e-03, 1.4167e-03,  ..., 5.2242e-03,
          9.9333e-01, 9.9860e-01],
         [3.6481e-04, 9.9344e-01, 9.9575e-01,  ..., 9.8688e-01,
          2.2248e-03, 4.6818e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7314e-03, 1.9026e-05, 9.8203e-04,  ..., 6.4259e-03,
          1.2056e-02, 4.2672e-03],
         [5.2995e-03, 1.9026e-05, 9.8203e-04,  ..., 6.4259e-03,
          8.6549e-03, 4.2672e-03],
         [9.8367e-01, 1.9026e-05, 9.8203e-04,  ..., 9.8072e-01,
          8.6549e-03, 9.8720e-01],
         [5.2995e-03, 9.9994e-01, 9.9705e-01,  ..., 6.4259e-03,
          9.7063e-01, 4.2672e-03]],
        [[3.9435e-03, 2.5813e-04, 1.7820e-04,  ..., 1.2572e-02,
          5.3057e-03, 9.9987e-01],
         [3.9435e-03, 2.5813e-04, 1.7820e-04,  ..., 1.2292e-02,
          5.3057e-03, 4.2556e-05],
         [9.8749e-01, 2.5813e-04, 1.7820e-04,  ..., 9.6146e-01,
          9.8408e-01, 4.2556e-05],
         [4.6244e-03, 9.9923e-01, 9.9947e-01,  ..., 1.3673e-02,
          5.3057e-03, 4.2556e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:22,266 [Process: 0] Synchronize training processes
2024-08-18 19:52:22,266 [Process: 0] Evaluating...
2024-08-18 19:52:22,268 [Process: 0] EPOCH 397:
2024-08-18 19:52:22,270 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:23,414 [Process: 0] Synchronize training processes
2024-08-18 19:52:23,415 [Process: 0] Evaluating...
2024-08-18 19:52:23,416 [Process: 0] EPOCH 398:
2024-08-18 19:52:23,418 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 398:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7518e-01, 6.2089e-04, 3.1651e-03,  ..., 9.9988e-01,
          9.9599e-01, 7.2331e-02],
         [5.4857e-03, 6.2089e-04, 3.1651e-03,  ..., 3.8726e-05,
          1.2695e-03, 2.4704e-02],
         [1.3847e-02, 6.2089e-04, 3.1651e-03,  ..., 3.8726e-05,
          1.2695e-03, 3.8828e-02],
         [5.4857e-03, 9.9814e-01, 9.9050e-01,  ..., 3.8726e-05,
          1.4757e-03, 8.6414e-01]],
        [[9.9897e-01, 8.1600e-03, 2.7112e-03,  ..., 9.3181e-04,
          4.8452e-04, 4.4497e-04],
         [3.4464e-04, 1.3503e-02, 2.7112e-03,  ..., 9.3181e-04,
          4.8452e-04, 4.4497e-04],
         [3.4464e-04, 1.2016e-02, 2.7112e-03,  ..., 9.3181e-04,
          9.9855e-01, 9.9867e-01],
         [3.4464e-04, 9.6632e-01, 9.9187e-01,  ..., 9.9720e-01,
          4.8452e-04, 4.4497e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5208e-02, 1.0087e-04, 9.4372e-04,  ..., 5.5588e-03,
          4.3709e-02, 3.7803e-03],
         [1.0273e-02, 1.0087e-04, 9.4372e-04,  ..., 5.5588e-03,
          2.9358e-02, 3.2392e-03],
         [9.6424e-01, 1.0087e-04, 9.4372e-04,  ..., 9.8332e-01,
          4.1950e-02, 9.8974e-01],
         [1.0273e-02, 9.9970e-01, 9.9717e-01,  ..., 5.5588e-03,
          8.8498e-01, 3.2392e-03]],
        [[1.2303e-03, 1.7645e-03, 1.6330e-04,  ..., 6.8826e-03,
          3.2582e-03, 9.9887e-01],
         [1.2303e-03, 4.8749e-03, 1.8831e-04,  ..., 6.8826e-03,
          3.2582e-03, 3.7543e-04],
         [9.9631e-01, 1.7645e-03, 1.6330e-04,  ..., 9.7935e-01,
          9.9023e-01, 3.7543e-04],
         [1.2303e-03, 9.9160e-01, 9.9949e-01,  ..., 6.8826e-03,
          3.2582e-03, 3.7543e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 399:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9318e-01, 1.6353e-03, 1.5506e-03,  ..., 9.9662e-01,
          9.4751e-01, 1.0565e-01],
         [1.9818e-03, 1.6353e-03, 1.5506e-03,  ..., 1.1267e-03,
          1.3180e-02, 5.5142e-02],
         [2.8610e-03, 1.6353e-03, 1.5506e-03,  ..., 1.1267e-03,
          1.6065e-02, 1.6243e-01],
         [1.9818e-03, 9.9509e-01, 9.9535e-01,  ..., 1.1267e-03,
          2.3242e-02, 6.7678e-01]],
        [[9.9850e-01, 6.9229e-03, 2.1510e-03,  ..., 1.2412e-03,
          7.3152e-04, 3.7043e-04],
         [5.9750e-04, 5.6600e-03, 2.1510e-03,  ..., 1.2412e-03,
          8.0776e-04, 3.7043e-04],
         [4.5122e-04, 7.1870e-03, 2.2347e-03,  ..., 1.2412e-03,
          9.9773e-01, 9.9889e-01],
         [4.5122e-04, 9.8023e-01, 9.9346e-01,  ..., 9.9628e-01,
          7.3152e-04, 3.7043e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:24,566 [Process: 0] Synchronize training processes
2024-08-18 19:52:24,566 [Process: 0] Evaluating...
2024-08-18 19:52:24,568 [Process: 0] EPOCH 399:
2024-08-18 19:52:24,570 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:25,715 [Process: 0] Synchronize training processes
2024-08-18 19:52:25,715 [Process: 0] Evaluating...
2024-08-18 19:52:25,717 [Process: 0] EPOCH 400:
2024-08-18 19:52:25,719 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7752e-03, 2.4562e-04, 6.8922e-05,  ..., 1.1190e-03,
          6.8395e-03, 3.3513e-03],
         [4.7752e-03, 2.4562e-04, 6.8922e-05,  ..., 1.1190e-03,
          6.8395e-03, 3.3513e-03],
         [9.8567e-01, 2.4562e-04, 6.8922e-05,  ..., 9.9664e-01,
          6.8395e-03, 9.8995e-01],
         [4.7752e-03, 9.9926e-01, 9.9979e-01,  ..., 1.1190e-03,
          9.7948e-01, 3.3513e-03]],
        [[1.1710e-03, 2.9439e-03, 2.2784e-04,  ..., 6.0544e-03,
          1.7266e-03, 9.9775e-01],
         [1.1710e-03, 1.9426e-03, 2.2784e-04,  ..., 6.0544e-03,
          1.7266e-03, 7.5152e-04],
         [9.9649e-01, 1.9426e-03, 2.2784e-04,  ..., 9.8184e-01,
          9.9482e-01, 7.5152e-04],
         [1.1710e-03, 9.9317e-01, 9.9932e-01,  ..., 6.0544e-03,
          1.7266e-03, 7.5152e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 400:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8754e-01, 6.4223e-03, 1.2698e-03,  ..., 9.7978e-01,
          7.0717e-01, 1.4674e-01],
         [3.5475e-03, 3.7285e-03, 1.2698e-03,  ..., 7.2494e-03,
          4.4745e-02, 8.6606e-02],
         [5.3683e-03, 3.7285e-03, 1.2888e-03,  ..., 8.2649e-03,
          1.4507e-01, 3.2413e-01],
         [3.5475e-03, 9.8612e-01, 9.9617e-01,  ..., 4.7102e-03,
          1.0302e-01, 4.4252e-01]],
        [[9.8755e-01, 4.4405e-03, 7.2288e-03,  ..., 7.9480e-04,
          1.0628e-04, 4.5609e-04],
         [5.7257e-03, 7.9776e-03, 8.1054e-03,  ..., 7.9480e-04,
          1.0628e-04, 4.5609e-04],
         [3.3610e-03, 4.5119e-03, 8.0348e-03,  ..., 7.9480e-04,
          9.9968e-01, 9.9863e-01],
         [3.3610e-03, 9.8307e-01, 9.7663e-01,  ..., 9.9762e-01,
          1.0628e-04, 4.5609e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7790e-02, 1.0766e-04, 1.9507e-04,  ..., 1.2202e-03,
          1.0639e-03, 9.6658e-03],
         [1.5274e-02, 1.6398e-04, 1.9507e-04,  ..., 1.2202e-03,
          1.0639e-03, 9.6658e-03],
         [9.4166e-01, 1.0766e-04, 1.9507e-04,  ..., 9.9634e-01,
          1.0639e-03, 9.6997e-01],
         [1.5274e-02, 9.9962e-01, 9.9941e-01,  ..., 1.2202e-03,
          9.9681e-01, 1.0701e-02]],
        [[5.3881e-04, 7.6256e-05, 1.3946e-06,  ..., 1.4173e-02,
          1.3284e-02, 9.9368e-01],
         [5.3881e-04, 7.6256e-05, 1.3946e-06,  ..., 1.2560e-02,
          9.1103e-03, 2.0361e-03],
         [9.9838e-01, 7.6256e-05, 1.3946e-06,  ..., 9.5935e-01,
          9.6850e-01, 2.0361e-03],
         [5.3881e-04, 9.9977e-01, 1.0000e+00,  ..., 1.3921e-02,
          9.1103e-03, 2.2462e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 401:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9551e-01, 1.1229e-03, 2.2479e-03,  ..., 9.9768e-01,
          9.3930e-01, 5.0852e-02],
         [1.4976e-03, 1.1229e-03, 2.0716e-03,  ..., 8.0208e-04,
          1.6945e-02, 3.4354e-02],
         [1.4976e-03, 1.2772e-03, 2.0716e-03,  ..., 7.5915e-04,
          2.4673e-02, 8.2497e-02],
         [1.4976e-03, 9.9648e-01, 9.9361e-01,  ..., 7.5915e-04,
          1.9087e-02, 8.3230e-01]],
        [[9.9970e-01, 1.2134e-03, 2.0266e-03,  ..., 8.7727e-04,
          1.0770e-03, 3.6674e-04],
         [9.9616e-05, 1.2134e-03, 2.0266e-03,  ..., 8.7727e-04,
          1.0770e-03, 3.6674e-04],
         [9.9616e-05, 1.2308e-03, 2.1066e-03,  ..., 8.7727e-04,
          9.9677e-01, 9.9890e-01],
         [9.9616e-05, 9.9634e-01, 9.9384e-01,  ..., 9.9737e-01,
          1.0770e-03, 3.6674e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:26,864 [Process: 0] Synchronize training processes
2024-08-18 19:52:26,864 [Process: 0] Evaluating...
2024-08-18 19:52:26,866 [Process: 0] EPOCH 401:
2024-08-18 19:52:26,868 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:28,013 [Process: 0] Synchronize training processes
2024-08-18 19:52:28,013 [Process: 0] Evaluating...
2024-08-18 19:52:28,020 [Process: 0] EPOCH 402:
2024-08-18 19:52:28,022 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1519e-02, 7.2517e-03, 1.3998e-05,  ..., 5.0403e-03,
          1.8166e-02, 2.9660e-03],
         [1.4467e-02, 7.2517e-03, 1.3998e-05,  ..., 5.0403e-03,
          1.4667e-02, 2.9660e-03],
         [9.4955e-01, 7.2517e-03, 1.3998e-05,  ..., 9.8488e-01,
          1.7765e-02, 9.9110e-01],
         [1.4467e-02, 9.7824e-01, 9.9996e-01,  ..., 5.0403e-03,
          9.4940e-01, 2.9660e-03]],
        [[2.5209e-03, 1.6228e-03, 4.1357e-05,  ..., 5.6832e-03,
          3.0095e-03, 9.9345e-01],
         [2.5209e-03, 1.6228e-03, 4.1357e-05,  ..., 5.6832e-03,
          3.0095e-03, 2.0759e-03],
         [9.9244e-01, 1.6228e-03, 4.1357e-05,  ..., 9.8295e-01,
          9.9097e-01, 2.0759e-03],
         [2.5209e-03, 9.9513e-01, 9.9988e-01,  ..., 5.6832e-03,
          3.0095e-03, 2.3995e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 402:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8679e-01, 1.8805e-02, 4.0399e-03,  ..., 9.9753e-01,
          8.9786e-01, 4.7251e-02],
         [3.4729e-03, 1.1137e-02, 4.0399e-03,  ..., 8.2296e-04,
          2.6632e-02, 2.9721e-02],
         [6.1741e-03, 1.7624e-02, 4.5532e-03,  ..., 8.2296e-04,
          4.1195e-02, 6.0365e-02],
         [3.5601e-03, 9.5243e-01, 9.8737e-01,  ..., 8.2296e-04,
          3.4318e-02, 8.6266e-01]],
        [[9.8397e-01, 1.3071e-02, 3.8496e-03,  ..., 1.6262e-03,
          3.5628e-04, 7.8934e-04],
         [7.3835e-03, 1.3973e-02, 3.9213e-03,  ..., 1.6262e-03,
          3.5628e-04, 7.8934e-04],
         [4.3222e-03, 1.8969e-02, 4.5225e-03,  ..., 1.6262e-03,
          9.9893e-01, 9.9763e-01],
         [4.3222e-03, 9.5399e-01, 9.8771e-01,  ..., 9.9512e-01,
          3.5628e-04, 7.8934e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4704e-03, 5.7134e-04, 3.5069e-05,  ..., 3.2437e-03,
          1.4964e-01, 1.4526e-03],
         [4.5090e-03, 5.7134e-04, 2.5224e-05,  ..., 3.2437e-03,
          7.0888e-02, 1.4526e-03],
         [9.8551e-01, 5.7134e-04, 2.5224e-05,  ..., 9.9027e-01,
          4.4762e-01, 9.9564e-01],
         [4.5090e-03, 9.9829e-01, 9.9991e-01,  ..., 3.2437e-03,
          3.3185e-01, 1.4526e-03]],
        [[7.4185e-04, 1.4301e-03, 3.3325e-06,  ..., 4.3047e-03,
          5.2100e-03, 9.9963e-01],
         [7.4185e-04, 1.4301e-03, 3.3325e-06,  ..., 4.3047e-03,
          5.2100e-03, 1.2337e-04],
         [9.9777e-01, 1.4301e-03, 3.3325e-06,  ..., 9.8709e-01,
          9.8402e-01, 1.2337e-04],
         [7.4185e-04, 9.9571e-01, 9.9999e-01,  ..., 4.3047e-03,
          5.5602e-03, 1.2337e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 403:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:29,168 [Process: 0] Synchronize training processes
2024-08-18 19:52:29,168 [Process: 0] Evaluating...
2024-08-18 19:52:29,170 [Process: 0] EPOCH 403:
2024-08-18 19:52:29,172 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8468e-01, 4.1411e-03, 6.3765e-03,  ..., 9.9904e-01,
          7.2016e-01, 1.2581e-01],
         [3.9867e-03, 3.3480e-03, 9.2383e-03,  ..., 3.2144e-04,
          5.2990e-02, 8.3840e-02],
         [6.0435e-03, 3.3480e-03, 6.5936e-03,  ..., 3.2144e-04,
          9.4536e-02, 3.3669e-01],
         [5.2914e-03, 9.8916e-01, 9.7779e-01,  ..., 3.2144e-04,
          1.3231e-01, 4.5366e-01]],
        [[9.9600e-01, 2.3219e-03, 1.0303e-03,  ..., 1.7505e-03,
          7.3272e-04, 3.7320e-04],
         [1.0497e-03, 5.2223e-03, 1.0303e-03,  ..., 1.7260e-03,
          7.7804e-04, 3.7320e-04],
         [1.8973e-03, 2.3219e-03, 1.0303e-03,  ..., 1.7260e-03,
          9.9776e-01, 9.9888e-01],
         [1.0497e-03, 9.9013e-01, 9.9691e-01,  ..., 9.9480e-01,
          7.3272e-04, 3.7320e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2158e-02, 5.6860e-03, 2.4216e-04,  ..., 3.9222e-03,
          4.8689e-02, 6.2676e-03],
         [8.6443e-03, 5.6860e-03, 1.0496e-04,  ..., 3.9222e-03,
          3.3670e-02, 4.1632e-03],
         [9.7055e-01, 5.6860e-03, 1.0496e-04,  ..., 9.8823e-01,
          6.2896e-02, 9.8541e-01],
         [8.6443e-03, 9.8294e-01, 9.9955e-01,  ..., 3.9222e-03,
          8.5474e-01, 4.1632e-03]],
        [[2.7821e-03, 1.2680e-02, 3.2608e-06,  ..., 7.9029e-03,
          1.9190e-03, 9.9953e-01],
         [2.7821e-03, 4.6700e-02, 3.2608e-06,  ..., 7.9029e-03,
          1.9190e-03, 1.5650e-04],
         [9.9165e-01, 1.2680e-02, 3.2608e-06,  ..., 9.7629e-01,
          9.9424e-01, 1.5650e-04],
         [2.7821e-03, 9.2794e-01, 9.9999e-01,  ..., 7.9029e-03,
          1.9190e-03, 1.5650e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 404:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1600e-01, 2.9574e-03, 6.2695e-03,  ..., 9.8967e-01,
          4.2154e-01, 1.1184e-01],
         [2.0600e-02, 2.6008e-03, 8.6634e-03,  ..., 4.6427e-03,
          6.9166e-02, 7.4323e-02],
         [1.4280e-01, 2.6008e-03, 8.2257e-03,  ..., 2.8452e-03,
          1.3365e-01, 3.3346e-01],
         [2.0600e-02, 9.9184e-01, 9.7684e-01,  ..., 2.8452e-03,
          3.7565e-01, 4.8037e-01]],
        [[9.9987e-01, 1.3596e-02, 9.9055e-04,  ..., 1.0169e-03,
          1.6174e-04, 4.6728e-04],
         [4.2142e-05, 7.6171e-03, 1.2421e-03,  ..., 1.0169e-03,
          1.6174e-04, 4.6728e-04],
         [4.2142e-05, 1.0868e-02, 9.9055e-04,  ..., 1.0169e-03,
          9.9951e-01, 9.9860e-01],
         [4.2142e-05, 9.6792e-01, 9.9678e-01,  ..., 9.9695e-01,
          1.6174e-04, 4.6728e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3806e-03, 9.4566e-04, 8.0057e-04,  ..., 6.0390e-03,
          1.7016e-03, 2.1983e-03],
         [6.6245e-03, 9.4566e-04, 8.0057e-04,  ..., 6.0390e-03,
          1.5347e-03, 2.1983e-03],
         [9.7937e-01, 9.4566e-04, 8.0057e-04,  ..., 9.8184e-01,
          1.5347e-03, 9.9341e-01],
         [6.6245e-03, 9.9716e-01, 9.9760e-01,  ..., 6.0837e-03,
          9.9523e-01, 2.1983e-03]],
        [[4.6486e-03, 2.2656e-02, 3.7288e-04,  ..., 5.9841e-03,
          1.6717e-03, 9.7286e-01],
         [4.6486e-03, 1.8141e-01, 1.8645e-04,  ..., 5.9841e-03,
          1.6717e-03, 8.4027e-03],
         [9.8605e-01, 2.2656e-02, 1.8645e-04,  ..., 9.8205e-01,
          9.9498e-01, 8.4027e-03],
         [4.6486e-03, 7.7327e-01, 9.9925e-01,  ..., 5.9841e-03,
          1.6717e-03, 1.0330e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:30,321 [Process: 0] Synchronize training processes
2024-08-18 19:52:30,322 [Process: 0] Evaluating...
2024-08-18 19:52:30,324 [Process: 0] EPOCH 404:
2024-08-18 19:52:30,326 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:31,468 [Process: 0] Synchronize training processes
2024-08-18 19:52:31,469 [Process: 0] Evaluating...
2024-08-18 19:52:31,471 [Process: 0] EPOCH 405:
2024-08-18 19:52:31,472 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 405:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6366e-01, 1.6749e-03, 4.4045e-03,  ..., 9.6771e-01,
          9.3747e-01, 1.8933e-02],
         [6.7559e-03, 1.6867e-03, 4.4045e-03,  ..., 8.2309e-03,
          1.7243e-02, 2.0687e-02],
         [2.2829e-02, 1.6749e-03, 4.4045e-03,  ..., 1.5833e-02,
          1.8571e-02, 3.7895e-02],
         [6.7559e-03, 9.9496e-01, 9.8679e-01,  ..., 8.2309e-03,
          2.6717e-02, 9.2248e-01]],
        [[9.9871e-01, 9.0216e-04, 8.8913e-03,  ..., 3.6636e-03,
          4.4171e-04, 4.0093e-04],
         [4.2857e-04, 9.0216e-04, 1.7070e-02,  ..., 5.1793e-03,
          4.4171e-04, 4.0093e-04],
         [4.2857e-04, 9.0216e-04, 9.8701e-03,  ..., 3.7856e-03,
          9.9867e-01, 9.9880e-01],
         [4.2857e-04, 9.9729e-01, 9.6417e-01,  ..., 9.8737e-01,
          4.4171e-04, 4.0093e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3670e-03, 3.4218e-04, 7.1291e-04,  ..., 7.7106e-03,
          1.0064e-03, 3.8193e-03],
         [5.7150e-03, 3.4218e-04, 6.7389e-04,  ..., 7.7106e-03,
          1.0064e-03, 3.8193e-03],
         [9.7920e-01, 3.4218e-04, 6.7389e-04,  ..., 9.7687e-01,
          1.0064e-03, 9.8854e-01],
         [5.7150e-03, 9.9897e-01, 9.9794e-01,  ..., 7.7106e-03,
          9.9698e-01, 3.8193e-03]],
        [[1.0220e-03, 2.9586e-03, 3.0875e-04,  ..., 2.1523e-02,
          8.6369e-04, 9.9987e-01],
         [1.0220e-03, 2.9586e-03, 3.0875e-04,  ..., 2.1523e-02,
          8.6369e-04, 4.2043e-05],
         [9.9693e-01, 2.9586e-03, 3.0875e-04,  ..., 9.1998e-01,
          9.9741e-01, 4.2043e-05],
         [1.0220e-03, 9.9112e-01, 9.9907e-01,  ..., 3.6978e-02,
          8.6369e-04, 4.2043e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 406:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7840e-01, 2.3845e-03, 7.6068e-03,  ..., 9.9968e-01,
          9.5635e-01, 3.0210e-02],
         [5.7127e-03, 2.6367e-03, 2.1299e-02,  ..., 1.0609e-04,
          1.0854e-02, 2.9171e-02],
         [1.0177e-02, 2.3845e-03, 7.7121e-03,  ..., 1.0609e-04,
          1.1741e-02, 6.5664e-02],
         [5.7127e-03, 9.9259e-01, 9.6338e-01,  ..., 1.0609e-04,
          2.1054e-02, 8.7496e-01]],
        [[9.9923e-01, 4.0827e-03, 4.4631e-03,  ..., 2.3323e-03,
          1.2020e-04, 1.7144e-03],
         [2.5632e-04, 2.1680e-03, 4.4631e-03,  ..., 2.2816e-03,
          1.2020e-04, 1.7144e-03],
         [2.5632e-04, 2.3982e-03, 4.9454e-03,  ..., 2.3972e-03,
          9.9964e-01, 9.9486e-01],
         [2.5632e-04, 9.9135e-01, 9.8613e-01,  ..., 9.9299e-01,
          1.2020e-04, 1.7144e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:32,616 [Process: 0] Synchronize training processes
2024-08-18 19:52:32,616 [Process: 0] Evaluating...
2024-08-18 19:52:32,618 [Process: 0] EPOCH 406:
2024-08-18 19:52:32,620 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:33,763 [Process: 0] Synchronize training processes
2024-08-18 19:52:33,763 [Process: 0] Evaluating...
2024-08-18 19:52:33,765 [Process: 0] EPOCH 407:
2024-08-18 19:52:33,766 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7752e-02, 9.7457e-05, 2.1983e-04,  ..., 3.4564e-03,
          2.6418e-02, 8.0531e-03],
         [7.6632e-03, 9.7457e-05, 2.1983e-04,  ..., 3.4564e-03,
          1.3275e-02, 8.0531e-03],
         [9.6692e-01, 9.7457e-05, 2.1983e-04,  ..., 9.8963e-01,
          1.5237e-02, 9.7539e-01],
         [7.6632e-03, 9.9971e-01, 9.9934e-01,  ..., 3.4564e-03,
          9.4507e-01, 8.5041e-03]],
        [[1.2885e-03, 5.2651e-04, 7.5410e-04,  ..., 5.3181e-03,
          3.4146e-03, 9.9898e-01],
         [1.2885e-03, 5.2651e-04, 7.5410e-04,  ..., 5.3181e-03,
          3.4146e-03, 3.4066e-04],
         [9.9613e-01, 5.2651e-04, 7.5410e-04,  ..., 9.8405e-01,
          9.8976e-01, 3.4066e-04],
         [1.2885e-03, 9.9842e-01, 9.9774e-01,  ..., 5.3181e-03,
          3.4146e-03, 3.4066e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 407:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7157e-01, 3.3245e-03, 5.6707e-03,  ..., 9.9691e-01,
          9.7852e-01, 2.4380e-02],
         [7.9892e-03, 3.8704e-03, 5.6750e-03,  ..., 1.0294e-03,
          7.1057e-03, 2.1382e-02],
         [1.2453e-02, 3.3245e-03, 6.5373e-03,  ..., 1.0294e-03,
          7.1057e-03, 4.3667e-02],
         [7.9892e-03, 9.8948e-01, 9.8212e-01,  ..., 1.0294e-03,
          7.2678e-03, 9.1057e-01]],
        [[9.9602e-01, 1.7104e-03, 8.0490e-03,  ..., 1.4679e-03,
          1.2159e-03, 1.5817e-04],
         [1.3267e-03, 1.7104e-03, 6.8094e-03,  ..., 1.4679e-03,
          1.2159e-03, 1.5817e-04],
         [1.3267e-03, 1.7104e-03, 1.0138e-02,  ..., 1.4679e-03,
          9.9635e-01, 9.9953e-01],
         [1.3267e-03, 9.9487e-01, 9.7500e-01,  ..., 9.9560e-01,
          1.2159e-03, 1.5817e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6787e-02, 2.4023e-04, 5.6226e-05,  ..., 2.3316e-03,
          1.9000e-02, 9.0882e-03],
         [1.0531e-02, 2.4023e-04, 5.6226e-05,  ..., 2.3316e-03,
          1.2993e-02, 9.0882e-03],
         [9.6215e-01, 2.4023e-04, 5.6226e-05,  ..., 9.9301e-01,
          1.3664e-02, 9.7272e-01],
         [1.0531e-02, 9.9928e-01, 9.9983e-01,  ..., 2.3316e-03,
          9.5434e-01, 9.1002e-03]],
        [[1.4489e-03, 4.9683e-04, 6.6561e-04,  ..., 2.1394e-02,
          7.9458e-03, 9.9946e-01],
         [1.4489e-03, 4.9683e-04, 6.6561e-04,  ..., 1.9931e-02,
          7.9458e-03, 1.8006e-04],
         [9.9565e-01, 4.9683e-04, 6.6561e-04,  ..., 9.2988e-01,
          9.7352e-01, 1.8006e-04],
         [1.4489e-03, 9.9851e-01, 9.9800e-01,  ..., 2.8792e-02,
          1.0584e-02, 1.8006e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 408:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:34,915 [Process: 0] Synchronize training processes
2024-08-18 19:52:34,915 [Process: 0] Evaluating...
2024-08-18 19:52:34,917 [Process: 0] EPOCH 408:
2024-08-18 19:52:34,919 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:36,063 [Process: 0] Synchronize training processes
2024-08-18 19:52:36,063 [Process: 0] Evaluating...
2024-08-18 19:52:36,065 [Process: 0] EPOCH 409:
2024-08-18 19:52:36,067 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9502e-01, 9.9741e-04, 4.6189e-03,  ..., 9.9399e-01,
          9.8373e-01, 1.7958e-02],
         [2.3556e-02, 9.9741e-04, 3.3522e-03,  ..., 1.8161e-03,
          5.4241e-03, 1.5227e-02],
         [4.3078e-02, 9.9741e-04, 4.0231e-03,  ..., 2.3825e-03,
          5.4241e-03, 2.9350e-02],
         [3.8341e-02, 9.9701e-01, 9.8801e-01,  ..., 1.8161e-03,
          5.4241e-03, 9.3747e-01]],
        [[9.9713e-01, 2.0371e-03, 3.5999e-03,  ..., 3.8856e-03,
          3.3907e-04, 1.3080e-03],
         [9.5719e-04, 2.0371e-03, 3.5999e-03,  ..., 6.2486e-03,
          3.3907e-04, 1.3080e-03],
         [9.5719e-04, 2.0371e-03, 3.6439e-03,  ..., 3.8856e-03,
          9.9898e-01, 9.9608e-01],
         [9.5719e-04, 9.9389e-01, 9.8916e-01,  ..., 9.8598e-01,
          3.3907e-04, 1.3080e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7215e-03, 1.5483e-03, 4.9926e-04,  ..., 2.6241e-03,
          1.6615e-02, 6.2493e-03],
         [3.7215e-03, 1.5483e-03, 4.9926e-04,  ..., 2.6241e-03,
          9.4862e-03, 6.2493e-03],
         [9.8884e-01, 1.5483e-03, 4.9926e-04,  ..., 9.9213e-01,
          9.8102e-03, 9.8125e-01],
         [3.7215e-03, 9.9536e-01, 9.9850e-01,  ..., 2.6241e-03,
          9.6409e-01, 6.2493e-03]],
        [[1.8699e-03, 3.2395e-05, 1.8777e-04,  ..., 1.3157e-02,
          2.2506e-03, 9.9958e-01],
         [1.8699e-03, 3.2395e-05, 1.8777e-04,  ..., 1.3157e-02,
          2.2506e-03, 1.3858e-04],
         [9.9439e-01, 3.2395e-05, 1.8777e-04,  ..., 9.5403e-01,
          9.9325e-01, 1.3858e-04],
         [1.8699e-03, 9.9990e-01, 9.9944e-01,  ..., 1.9659e-02,
          2.2506e-03, 1.3858e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 409:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9794e-01, 3.6405e-03, 1.4214e-03,  ..., 9.9839e-01,
          9.7454e-01, 3.5415e-02],
         [1.9723e-02, 3.6405e-03, 1.4214e-03,  ..., 5.3780e-04,
          6.2967e-03, 2.2742e-02],
         [3.4901e-02, 3.6405e-03, 1.4214e-03,  ..., 5.3780e-04,
          9.5697e-03, 4.1823e-02],
         [4.7433e-02, 9.8908e-01, 9.9574e-01,  ..., 5.3780e-04,
          9.5956e-03, 9.0002e-01]],
        [[9.9847e-01, 4.4829e-03, 2.1383e-03,  ..., 3.0454e-03,
          8.7642e-05, 1.9278e-04],
         [5.1018e-04, 4.4829e-03, 2.7266e-03,  ..., 3.0454e-03,
          8.7642e-05, 1.9278e-04],
         [5.1018e-04, 4.6605e-03, 2.1383e-03,  ..., 3.0454e-03,
          9.9974e-01, 9.9942e-01],
         [5.1018e-04, 9.8637e-01, 9.9300e-01,  ..., 9.9086e-01,
          8.7642e-05, 1.9278e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:37,211 [Process: 0] Synchronize training processes
2024-08-18 19:52:37,212 [Process: 0] Evaluating...
2024-08-18 19:52:37,213 [Process: 0] EPOCH 410:
2024-08-18 19:52:37,215 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8016e-03, 1.6236e-03, 1.2508e-04,  ..., 2.1951e-03,
          5.4147e-03, 3.4229e-03],
         [3.8016e-03, 1.6236e-03, 1.2508e-04,  ..., 2.1951e-03,
          3.7672e-03, 3.4229e-03],
         [9.8860e-01, 1.6236e-03, 1.2508e-04,  ..., 9.9341e-01,
          3.7672e-03, 9.8973e-01],
         [3.8016e-03, 9.9513e-01, 9.9962e-01,  ..., 2.1951e-03,
          9.8705e-01, 3.4229e-03]],
        [[6.8977e-03, 1.1954e-04, 4.1445e-04,  ..., 6.4353e-03,
          4.1438e-03, 9.9915e-01],
         [6.8977e-03, 1.1954e-04, 4.1445e-04,  ..., 6.4353e-03,
          4.1438e-03, 2.8450e-04],
         [9.7922e-01, 1.1954e-04, 4.1445e-04,  ..., 9.8040e-01,
          9.8757e-01, 2.8450e-04],
         [6.9883e-03, 9.9964e-01, 9.9876e-01,  ..., 6.7340e-03,
          4.1438e-03, 2.8450e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 410:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7071e-01, 3.7020e-03, 5.4376e-03,  ..., 9.9751e-01,
          9.2848e-01, 8.4800e-03],
         [1.9828e-02, 5.1694e-03, 4.4988e-03,  ..., 8.3112e-04,
          1.5942e-02, 1.1349e-02],
         [8.9635e-02, 3.7020e-03, 4.4988e-03,  ..., 8.3112e-04,
          3.4786e-02, 1.0697e-02],
         [1.9828e-02, 9.8743e-01, 9.8556e-01,  ..., 8.3112e-04,
          2.0795e-02, 9.6947e-01]],
        [[9.9678e-01, 2.8639e-03, 2.7296e-03,  ..., 1.7294e-03,
          4.2712e-03, 3.2473e-04],
         [1.0716e-03, 2.8639e-03, 1.9667e-03,  ..., 1.7294e-03,
          4.2712e-03, 3.2473e-04],
         [1.0737e-03, 2.8639e-03, 1.9667e-03,  ..., 1.7294e-03,
          9.8719e-01, 9.9903e-01],
         [1.0716e-03, 9.9141e-01, 9.9334e-01,  ..., 9.9481e-01,
          4.2712e-03, 3.2473e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3899e-03, 1.9246e-04, 1.8433e-04,  ..., 5.3864e-03,
          2.3598e-03, 8.7109e-03],
         [3.3899e-03, 1.9246e-04, 1.8433e-04,  ..., 5.3864e-03,
          1.5415e-03, 7.8518e-03],
         [9.8983e-01, 1.9246e-04, 1.8433e-04,  ..., 9.8384e-01,
          1.5415e-03, 9.7559e-01],
         [3.3899e-03, 9.9942e-01, 9.9945e-01,  ..., 5.3864e-03,
          9.9456e-01, 7.8518e-03]],
        [[1.3985e-02, 3.3242e-03, 8.0353e-06,  ..., 7.0906e-03,
          2.5935e-03, 9.9923e-01],
         [1.3985e-02, 3.3242e-03, 8.0353e-06,  ..., 7.0906e-03,
          2.5935e-03, 2.5763e-04],
         [9.5184e-01, 3.3242e-03, 8.0353e-06,  ..., 9.7873e-01,
          9.9222e-01, 2.5763e-04],
         [2.0188e-02, 9.9003e-01, 9.9998e-01,  ..., 7.0906e-03,
          2.5935e-03, 2.5763e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 411:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.9523e-01, 1.5193e-03, 2.1074e-03,  ..., 9.9178e-01,
          9.9549e-01, 4.2821e-03],
         [4.0678e-02, 1.5193e-03, 2.1074e-03,  ..., 2.7388e-03,
          1.2800e-03, 4.2821e-03],
         [3.2292e-01, 1.5193e-03, 2.1074e-03,  ..., 2.7388e-03,
          1.9488e-03, 4.2821e-03],
         [4.1174e-02, 9.9544e-01, 9.9368e-01,  ..., 2.7388e-03,
          1.2800e-03, 9.8715e-01]],
        [[9.9827e-01, 8.2667e-03, 2.5065e-03,  ..., 1.7717e-03,
          1.1865e-04, 1.0295e-03],
         [5.4110e-04, 7.5591e-03, 2.5065e-03,  ..., 1.7717e-03,
          1.1865e-04, 1.0295e-03],
         [6.4723e-04, 9.0216e-03, 2.5065e-03,  ..., 1.7717e-03,
          9.9964e-01, 9.9691e-01],
         [5.4110e-04, 9.7515e-01, 9.9248e-01,  ..., 9.9468e-01,
          1.1865e-04, 1.0295e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:38,358 [Process: 0] Synchronize training processes
2024-08-18 19:52:38,359 [Process: 0] Evaluating...
2024-08-18 19:52:38,360 [Process: 0] EPOCH 411:
2024-08-18 19:52:38,362 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:39,514 [Process: 0] Synchronize training processes
2024-08-18 19:52:39,515 [Process: 0] Evaluating...
2024-08-18 19:52:39,520 [Process: 0] EPOCH 412:
2024-08-18 19:52:39,522 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.8411e-03, 5.2541e-05, 4.3261e-05,  ..., 6.6462e-03,
          6.0577e-03, 2.1657e-03],
         [4.8411e-03, 5.2541e-05, 4.3261e-05,  ..., 6.6462e-03,
          5.3908e-03, 2.1657e-03],
         [9.8548e-01, 5.2541e-05, 4.3261e-05,  ..., 9.8006e-01,
          5.3908e-03, 9.9350e-01],
         [4.8411e-03, 9.9984e-01, 9.9987e-01,  ..., 6.6462e-03,
          9.8316e-01, 2.1657e-03]],
        [[1.3187e-02, 1.2317e-04, 4.4364e-05,  ..., 2.8438e-02,
          1.0057e-02, 9.9853e-01],
         [1.3187e-02, 1.2317e-04, 4.4364e-05,  ..., 2.5426e-02,
          1.0057e-02, 4.9117e-04],
         [9.5162e-01, 1.2317e-04, 4.4364e-05,  ..., 8.9670e-01,
          9.6940e-01, 4.9117e-04],
         [2.2008e-02, 9.9963e-01, 9.9987e-01,  ..., 4.9433e-02,
          1.0491e-02, 4.9117e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 412:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9521e-01, 3.4618e-03, 1.1690e-03,  ..., 9.9694e-01,
          9.7344e-01, 2.2638e-03],
         [1.4938e-02, 3.5097e-03, 1.1690e-03,  ..., 1.0213e-03,
          7.2126e-03, 2.2638e-03],
         [7.4917e-02, 3.4618e-03, 1.1690e-03,  ..., 1.0213e-03,
          1.0185e-02, 2.5598e-03],
         [1.4938e-02, 9.8957e-01, 9.9649e-01,  ..., 1.0213e-03,
          9.1590e-03, 9.9291e-01]],
        [[9.9050e-01, 1.7399e-02, 9.2639e-03,  ..., 5.1705e-03,
          4.0518e-04, 7.5682e-04],
         [2.4940e-03, 4.6273e-02, 7.7991e-03,  ..., 4.7346e-03,
          4.5418e-04, 7.5682e-04],
         [4.5086e-03, 2.5547e-02, 1.0591e-02,  ..., 5.4761e-03,
          9.9874e-01, 9.9773e-01],
         [2.4940e-03, 9.1078e-01, 9.7235e-01,  ..., 9.8462e-01,
          4.0518e-04, 7.5682e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6179e-03, 1.7797e-04, 5.2043e-04,  ..., 4.1515e-03,
          4.1453e-03, 2.6715e-03],
         [1.6179e-03, 1.7797e-04, 5.2043e-04,  ..., 4.1515e-03,
          4.1453e-03, 2.6715e-03],
         [9.9515e-01, 1.7797e-04, 5.2043e-04,  ..., 9.8755e-01,
          4.1453e-03, 9.9199e-01],
         [1.6179e-03, 9.9947e-01, 9.9844e-01,  ..., 4.1515e-03,
          9.8756e-01, 2.6715e-03]],
        [[1.0306e-02, 6.6179e-04, 7.5464e-05,  ..., 6.0171e-03,
          2.9591e-03, 9.9967e-01],
         [1.0306e-02, 5.1884e-04, 7.5464e-05,  ..., 6.0171e-03,
          2.9591e-03, 1.0994e-04],
         [9.6212e-01, 5.1884e-04, 7.5464e-05,  ..., 9.8092e-01,
          9.9112e-01, 1.0994e-04],
         [1.7265e-02, 9.9830e-01, 9.9977e-01,  ..., 7.0417e-03,
          2.9591e-03, 1.0994e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 413:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-18 19:52:40,664 [Process: 0] Synchronize training processes
2024-08-18 19:52:40,665 [Process: 0] Evaluating...
2024-08-18 19:52:40,667 [Process: 0] EPOCH 413:
2024-08-18 19:52:40,668 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:41,817 [Process: 0] Synchronize training processes
2024-08-18 19:52:41,817 [Process: 0] Evaluating...
2024-08-18 19:52:41,819 [Process: 0] EPOCH 414:
2024-08-18 19:52:41,821 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6308e-01, 5.0179e-03, 1.6192e-03,  ..., 9.9389e-01,
          5.9085e-01, 1.8322e-03],
         [3.7637e-02, 5.7432e-03, 1.6192e-03,  ..., 1.8976e-03,
          5.1658e-02, 1.8322e-03],
         [4.5956e-01, 5.0179e-03, 1.6192e-03,  ..., 2.3145e-03,
          9.1196e-02, 1.8322e-03],
         [3.9723e-02, 9.8422e-01, 9.9514e-01,  ..., 1.8976e-03,
          2.6629e-01, 9.9450e-01]],
        [[9.9952e-01, 4.4863e-02, 3.5258e-03,  ..., 8.6208e-03,
          2.3048e-04, 2.3715e-04],
         [1.5899e-04, 1.5856e-01, 3.9802e-03,  ..., 9.1854e-03,
          2.3048e-04, 2.3715e-04],
         [1.5899e-04, 4.0711e-02, 3.5258e-03,  ..., 1.3709e-02,
          9.9931e-01, 9.9929e-01],
         [1.5899e-04, 7.5586e-01, 9.8897e-01,  ..., 9.6848e-01,
          2.3048e-04, 2.3715e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4957e-03, 4.5068e-04, 4.7046e-04,  ..., 2.6458e-03,
          2.5975e-03, 1.1790e-03],
         [4.4957e-03, 4.5068e-04, 4.7046e-04,  ..., 2.6458e-03,
          2.5186e-03, 1.1790e-03],
         [9.8651e-01, 4.5068e-04, 4.7046e-04,  ..., 9.9206e-01,
          2.5186e-03, 9.9646e-01],
         [4.4957e-03, 9.9865e-01, 9.9859e-01,  ..., 2.6458e-03,
          9.9237e-01, 1.1790e-03]],
        [[1.7072e-03, 6.3842e-04, 1.9305e-04,  ..., 4.6777e-03,
          3.9648e-03, 9.9857e-01],
         [1.7072e-03, 6.2263e-04, 1.9305e-04,  ..., 4.6777e-03,
          3.9648e-03, 4.7640e-04],
         [9.9488e-01, 6.2263e-04, 1.9305e-04,  ..., 9.8597e-01,
          9.8811e-01, 4.7640e-04],
         [1.7072e-03, 9.9812e-01, 9.9942e-01,  ..., 4.6777e-03,
          3.9648e-03, 4.7640e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 414:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8735e-01, 3.2367e-03, 2.3587e-03,  ..., 9.9229e-01,
          9.9146e-01, 4.0534e-03],
         [4.1180e-03, 2.3868e-03, 2.3587e-03,  ..., 2.3392e-03,
          2.5952e-03, 4.0534e-03],
         [4.4134e-03, 2.3868e-03, 2.3587e-03,  ..., 3.0328e-03,
          3.3511e-03, 4.5193e-03],
         [4.1180e-03, 9.9199e-01, 9.9292e-01,  ..., 2.3392e-03,
          2.5952e-03, 9.8737e-01]],
        [[9.9816e-01, 2.3153e-03, 4.0088e-03,  ..., 2.3643e-03,
          2.1541e-04, 2.8925e-04],
         [6.1188e-04, 2.3153e-03, 4.0088e-03,  ..., 2.3643e-03,
          2.1541e-04, 2.8925e-04],
         [6.1188e-04, 2.3153e-03, 4.0088e-03,  ..., 2.3643e-03,
          9.9935e-01, 9.9913e-01],
         [6.1188e-04, 9.9305e-01, 9.8797e-01,  ..., 9.9291e-01,
          2.1541e-04, 2.8925e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3996e-03, 6.1284e-05, 3.2391e-05,  ..., 3.1431e-03,
          4.0248e-03, 7.7542e-03],
         [2.3996e-03, 6.1284e-05, 3.2391e-05,  ..., 3.1431e-03,
          4.0248e-03, 6.2277e-03],
         [9.9280e-01, 6.1284e-05, 3.2391e-05,  ..., 9.9057e-01,
          4.0248e-03, 9.7979e-01],
         [2.3996e-03, 9.9982e-01, 9.9990e-01,  ..., 3.1431e-03,
          9.8793e-01, 6.2277e-03]],
        [[6.0984e-04, 3.9012e-04, 1.3728e-05,  ..., 4.6816e-03,
          9.8725e-03, 9.9665e-01],
         [6.0984e-04, 3.9012e-04, 1.3728e-05,  ..., 4.6816e-03,
          7.1491e-03, 1.1108e-03],
         [9.9817e-01, 3.9012e-04, 1.3728e-05,  ..., 9.8596e-01,
          9.7583e-01, 1.1108e-03],
         [6.0984e-04, 9.9883e-01, 9.9996e-01,  ..., 4.6816e-03,
          7.1491e-03, 1.1293e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 415:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:42,967 [Process: 0] Synchronize training processes
2024-08-18 19:52:42,968 [Process: 0] Evaluating...
2024-08-18 19:52:42,969 [Process: 0] EPOCH 415:
2024-08-18 19:52:42,971 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:44,116 [Process: 0] Synchronize training processes
2024-08-18 19:52:44,117 [Process: 0] Evaluating...
2024-08-18 19:52:44,119 [Process: 0] EPOCH 416:
2024-08-18 19:52:44,121 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9571e-01, 1.0261e-03, 5.6572e-03,  ..., 9.9773e-01,
          9.9330e-01, 1.1766e-03],
         [1.4237e-03, 9.2952e-04, 5.6342e-03,  ..., 7.5508e-04,
          2.0291e-03, 1.1766e-03],
         [1.4427e-03, 9.2952e-04, 6.9895e-03,  ..., 7.5508e-04,
          2.6448e-03, 1.1766e-03],
         [1.4237e-03, 9.9711e-01, 9.8172e-01,  ..., 7.5508e-04,
          2.0291e-03, 9.9647e-01]],
        [[9.8582e-01, 5.4452e-03, 5.1552e-03,  ..., 6.0021e-03,
          5.8126e-04, 1.6186e-03],
         [6.8529e-03, 6.0144e-03, 5.1552e-03,  ..., 9.4738e-03,
          5.8126e-04, 1.6186e-03],
         [3.6634e-03, 5.5101e-03, 5.1552e-03,  ..., 7.1080e-03,
          9.9826e-01, 9.9514e-01],
         [3.6634e-03, 9.8303e-01, 9.8453e-01,  ..., 9.7742e-01,
          5.8126e-04, 1.6186e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.4752e-03, 4.8921e-04, 1.0094e-04,  ..., 2.9646e-03,
          5.1733e-04, 1.4018e-03],
         [8.4752e-03, 4.8921e-04, 1.0094e-04,  ..., 2.9646e-03,
          5.1733e-04, 1.4018e-03],
         [9.7457e-01, 4.8921e-04, 1.0094e-04,  ..., 9.9111e-01,
          5.1733e-04, 9.9579e-01],
         [8.4752e-03, 9.9853e-01, 9.9970e-01,  ..., 2.9646e-03,
          9.9845e-01, 1.4018e-03]],
        [[3.1629e-03, 6.1055e-04, 6.2539e-05,  ..., 7.2640e-03,
          2.5802e-03, 9.9993e-01],
         [3.1629e-03, 6.1055e-04, 6.2539e-05,  ..., 7.2640e-03,
          2.5802e-03, 2.4354e-05],
         [9.9051e-01, 6.1055e-04, 6.2539e-05,  ..., 9.7821e-01,
          9.9226e-01, 2.4354e-05],
         [3.1629e-03, 9.9817e-01, 9.9981e-01,  ..., 7.2640e-03,
          2.5802e-03, 2.4354e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 416:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8695e-01, 3.4131e-03, 4.4306e-03,  ..., 9.7379e-01,
          8.3785e-01, 9.9339e-04],
         [4.3372e-03, 3.4131e-03, 4.4306e-03,  ..., 8.2094e-03,
          2.4142e-02, 9.9339e-04],
         [4.5663e-03, 4.0061e-03, 4.9079e-03,  ..., 9.7913e-03,
          1.0025e-01, 9.9339e-04],
         [4.1450e-03, 9.8917e-01, 9.8623e-01,  ..., 8.2094e-03,
          3.7764e-02, 9.9702e-01]],
        [[9.4779e-01, 5.2716e-03, 1.9561e-03,  ..., 5.4896e-03,
          1.5327e-03, 4.8618e-04],
         [1.1654e-02, 5.2716e-03, 1.9561e-03,  ..., 5.4896e-03,
          1.5327e-03, 4.8618e-04],
         [2.6156e-02, 5.2716e-03, 1.9561e-03,  ..., 6.2948e-03,
          9.9540e-01, 9.9854e-01],
         [1.4395e-02, 9.8419e-01, 9.9413e-01,  ..., 9.8273e-01,
          1.5327e-03, 4.8618e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-18 19:52:45,265 [Process: 0] Synchronize training processes
2024-08-18 19:52:45,265 [Process: 0] Evaluating...
2024-08-18 19:52:45,267 [Process: 0] EPOCH 417:
2024-08-18 19:52:45,268 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2536e-02, 6.7300e-04, 5.1138e-05,  ..., 3.1847e-03,
          6.1284e-04, 2.3823e-03],
         [9.2019e-03, 6.7300e-04, 5.1138e-05,  ..., 3.1377e-03,
          6.1284e-04, 2.3823e-03],
         [9.6906e-01, 6.7300e-04, 5.1138e-05,  ..., 9.9054e-01,
          6.1284e-04, 9.9285e-01],
         [9.2019e-03, 9.9798e-01, 9.9985e-01,  ..., 3.1377e-03,
          9.9816e-01, 2.3823e-03]],
        [[1.1797e-02, 5.6841e-05, 1.9045e-05,  ..., 3.7194e-03,
          1.5890e-03, 9.9935e-01],
         [1.1797e-02, 5.6841e-05, 1.9045e-05,  ..., 3.7194e-03,
          1.5890e-03, 2.1738e-04],
         [9.5715e-01, 5.6841e-05, 1.9045e-05,  ..., 9.8884e-01,
          9.9523e-01, 2.1738e-04],
         [1.9261e-02, 9.9983e-01, 9.9994e-01,  ..., 3.7194e-03,
          1.5890e-03, 2.1738e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 417:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9677e-01, 2.3540e-03, 1.4804e-03,  ..., 9.9589e-01,
          8.8806e-01, 5.1070e-02],
         [9.7249e-04, 2.3540e-03, 1.4804e-03,  ..., 1.3716e-03,
          1.9051e-02, 3.2484e-02],
         [1.2852e-03, 2.3540e-03, 1.4804e-03,  ..., 1.3716e-03,
          2.2708e-02, 9.8186e-02],
         [9.7249e-04, 9.9294e-01, 9.9556e-01,  ..., 1.3716e-03,
          7.0182e-02, 8.1826e-01]],
        [[9.9680e-01, 1.1094e-03, 7.6429e-03,  ..., 5.3717e-03,
          5.3454e-04, 6.5969e-04],
         [9.4108e-04, 1.1094e-03, 5.7843e-03,  ..., 5.3717e-03,
          5.3454e-04, 6.5969e-04],
         [1.3198e-03, 1.1094e-03, 6.8978e-03,  ..., 6.2366e-03,
          9.9840e-01, 9.9802e-01],
         [9.4108e-04, 9.9667e-01, 9.7967e-01,  ..., 9.8302e-01,
          5.3454e-04, 6.5969e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.8076e-03, 9.3796e-05, 1.6040e-04,  ..., 2.5611e-03,
          1.1892e-03, 1.3154e-02],
         [4.6555e-03, 9.3796e-05, 1.6040e-04,  ..., 2.5611e-03,
          1.1892e-03, 7.0599e-03],
         [9.8588e-01, 9.3796e-05, 1.6040e-04,  ..., 9.9232e-01,
          1.1892e-03, 9.7273e-01],
         [4.6555e-03, 9.9972e-01, 9.9952e-01,  ..., 2.5611e-03,
          9.9643e-01, 7.0599e-03]],
        [[4.7658e-03, 2.1670e-04, 9.6271e-04,  ..., 3.8053e-03,
          1.6640e-03, 9.9701e-01],
         [4.7658e-03, 2.1670e-04, 9.6271e-04,  ..., 3.8053e-03,
          1.6640e-03, 9.9701e-04],
         [9.8547e-01, 2.1670e-04, 9.6271e-04,  ..., 9.8858e-01,
          9.9501e-01, 9.9701e-04],
         [5.0010e-03, 9.9935e-01, 9.9711e-01,  ..., 3.8053e-03,
          1.6640e-03, 9.9701e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 418:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9804e-01, 2.0138e-03, 4.3905e-03,  ..., 9.9241e-01,
          9.8798e-01, 1.5019e-03],
         [6.5242e-04, 2.0138e-03, 4.3905e-03,  ..., 2.5314e-03,
          3.6664e-03, 1.5019e-03],
         [6.5242e-04, 2.0138e-03, 5.2963e-03,  ..., 2.5314e-03,
          4.6913e-03, 1.5019e-03],
         [6.5242e-04, 9.9396e-01, 9.8592e-01,  ..., 2.5314e-03,
          3.6664e-03, 9.9549e-01]],
        [[9.9882e-01, 1.5144e-03, 2.9588e-03,  ..., 3.3369e-03,
          1.8257e-04, 3.0494e-04],
         [3.9286e-04, 1.5144e-03, 2.9588e-03,  ..., 3.3369e-03,
          1.8257e-04, 3.0494e-04],
         [3.9286e-04, 1.5175e-03, 2.9588e-03,  ..., 3.3369e-03,
          9.9945e-01, 9.9909e-01],
         [3.9286e-04, 9.9545e-01, 9.9112e-01,  ..., 9.8999e-01,
          1.8257e-04, 3.0494e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:46,411 [Process: 0] Synchronize training processes
2024-08-18 19:52:46,411 [Process: 0] Evaluating...
2024-08-18 19:52:46,413 [Process: 0] EPOCH 418:
2024-08-18 19:52:46,415 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:47,560 [Process: 0] Synchronize training processes
2024-08-18 19:52:47,560 [Process: 0] Evaluating...
2024-08-18 19:52:47,562 [Process: 0] EPOCH 419:
2024-08-18 19:52:47,564 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3527e-03, 2.2236e-03, 8.2083e-05,  ..., 5.8455e-03,
          3.1384e-03, 3.7423e-03],
         [7.3527e-03, 1.8323e-03, 8.2083e-05,  ..., 5.8455e-03,
          3.1384e-03, 2.5368e-03],
         [9.7773e-01, 1.8323e-03, 8.2083e-05,  ..., 9.8246e-01,
          3.1384e-03, 9.9118e-01],
         [7.5659e-03, 9.9411e-01, 9.9975e-01,  ..., 5.8455e-03,
          9.9058e-01, 2.5368e-03]],
        [[2.0547e-03, 1.6830e-04, 5.3827e-05,  ..., 2.5048e-03,
          5.6811e-03, 9.9986e-01],
         [2.0547e-03, 1.6830e-04, 5.3827e-05,  ..., 2.5048e-03,
          5.6811e-03, 4.7313e-05],
         [9.9384e-01, 1.6830e-04, 5.3827e-05,  ..., 9.9249e-01,
          9.8290e-01, 4.7313e-05],
         [2.0547e-03, 9.9950e-01, 9.9984e-01,  ..., 2.5048e-03,
          5.7353e-03, 4.7313e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 419:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9095e-01, 3.4961e-03, 4.8894e-03,  ..., 9.9708e-01,
          9.7771e-01, 3.2081e-03],
         [2.8915e-03, 3.4961e-03, 4.8894e-03,  ..., 9.7239e-04,
          6.0977e-03, 3.2081e-03],
         [2.8915e-03, 3.6788e-03, 6.1532e-03,  ..., 9.7239e-04,
          6.4556e-03, 3.4440e-03],
         [3.2670e-03, 9.8933e-01, 9.8407e-01,  ..., 9.7239e-04,
          9.7368e-03, 9.9014e-01]],
        [[9.9896e-01, 2.6270e-03, 1.4186e-03,  ..., 2.0591e-03,
          2.3024e-04, 4.6388e-04],
         [3.4579e-04, 2.6270e-03, 1.4186e-03,  ..., 2.0591e-03,
          2.3024e-04, 4.6388e-04],
         [3.4579e-04, 2.6270e-03, 1.4186e-03,  ..., 2.0591e-03,
          9.9931e-01, 9.9861e-01],
         [3.4579e-04, 9.9212e-01, 9.9574e-01,  ..., 9.9382e-01,
          2.3024e-04, 4.6388e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0707e-03, 2.3019e-04, 2.7692e-04,  ..., 1.7483e-03,
          1.6263e-03, 2.1580e-03],
         [2.0707e-03, 2.3019e-04, 2.7692e-04,  ..., 1.7483e-03,
          1.6263e-03, 2.1580e-03],
         [9.9379e-01, 2.3019e-04, 2.7692e-04,  ..., 9.9476e-01,
          1.6263e-03, 9.9353e-01],
         [2.0707e-03, 9.9931e-01, 9.9917e-01,  ..., 1.7483e-03,
          9.9512e-01, 2.1580e-03]],
        [[7.3457e-03, 9.6611e-05, 5.1984e-05,  ..., 3.5055e-03,
          8.7251e-03, 9.9639e-01],
         [7.3457e-03, 9.6611e-05, 5.1984e-05,  ..., 3.5055e-03,
          6.8703e-03, 1.0590e-03],
         [9.7662e-01, 9.6611e-05, 5.1984e-05,  ..., 9.8948e-01,
          9.7753e-01, 1.0590e-03],
         [8.6904e-03, 9.9971e-01, 9.9984e-01,  ..., 3.5055e-03,
          6.8703e-03, 1.4911e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 420:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 19:52:48,706 [Process: 0] Synchronize training processes
2024-08-18 19:52:48,706 [Process: 0] Evaluating...
2024-08-18 19:52:48,708 [Process: 0] EPOCH 420:
2024-08-18 19:52:48,710 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:49,855 [Process: 0] Synchronize training processes
2024-08-18 19:52:49,855 [Process: 0] Evaluating...
2024-08-18 19:52:49,857 [Process: 0] EPOCH 421:
2024-08-18 19:52:49,859 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2420e-01, 5.2337e-03, 4.1799e-03,  ..., 9.9913e-01,
          7.0248e-01, 4.6374e-03],
         [3.6419e-02, 5.2337e-03, 4.1799e-03,  ..., 2.9073e-04,
          4.1670e-02, 4.6374e-03],
         [7.2392e-02, 6.5329e-03, 4.5105e-03,  ..., 2.9073e-04,
          7.9080e-02, 4.9035e-03],
         [1.6699e-01, 9.8300e-01, 9.8713e-01,  ..., 2.9073e-04,
          1.7677e-01, 9.8582e-01]],
        [[9.8831e-01, 1.5998e-03, 4.3082e-03,  ..., 3.7611e-03,
          1.0261e-03, 8.7799e-04],
         [3.5817e-03, 1.5998e-03, 4.3082e-03,  ..., 3.7611e-03,
          1.0261e-03, 8.7799e-04],
         [4.5222e-03, 1.5998e-03, 5.2648e-03,  ..., 4.1083e-03,
          9.9692e-01, 9.9737e-01],
         [3.5817e-03, 9.9520e-01, 9.8612e-01,  ..., 9.8837e-01,
          1.0261e-03, 8.7799e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7711e-02, 1.1157e-04, 8.5975e-04,  ..., 9.5597e-04,
          1.2326e-03, 7.3239e-03],
         [1.0622e-02, 1.1157e-04, 8.5975e-04,  ..., 9.5597e-04,
          1.2326e-03, 7.3239e-03],
         [9.6105e-01, 1.1157e-04, 8.5975e-04,  ..., 9.9713e-01,
          1.2326e-03, 9.7803e-01],
         [1.0622e-02, 9.9967e-01, 9.9742e-01,  ..., 9.5597e-04,
          9.9630e-01, 7.3239e-03]],
        [[4.4975e-03, 1.1497e-03, 4.9940e-05,  ..., 9.5150e-03,
          1.0246e-02, 9.9878e-01],
         [4.4975e-03, 1.1497e-03, 4.9940e-05,  ..., 9.5150e-03,
          7.8528e-03, 4.0694e-04],
         [9.8618e-01, 1.1497e-03, 4.9940e-05,  ..., 9.7131e-01,
          9.7405e-01, 4.0694e-04],
         [4.8277e-03, 9.9655e-01, 9.9985e-01,  ..., 9.6571e-03,
          7.8528e-03, 4.0694e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 421:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0114e-01, 5.5271e-03, 3.4828e-03,  ..., 9.8609e-01,
          9.2261e-01, 4.4597e-02],
         [2.2082e-02, 5.0159e-03, 3.4828e-03,  ..., 4.6379e-03,
          1.6091e-02, 3.3898e-02],
         [4.2215e-02, 6.3477e-03, 3.9428e-03,  ..., 4.6379e-03,
          2.2631e-02, 1.0739e-01],
         [3.4565e-02, 9.8311e-01, 9.8909e-01,  ..., 4.6379e-03,
          3.8671e-02, 8.1411e-01]],
        [[9.9179e-01, 1.8807e-03, 1.9847e-03,  ..., 5.5902e-03,
          9.2004e-04, 4.2641e-04],
         [2.9215e-03, 1.8807e-03, 1.9847e-03,  ..., 5.5902e-03,
          9.2004e-04, 4.2641e-04],
         [2.7763e-03, 1.8807e-03, 1.9847e-03,  ..., 8.0430e-03,
          9.9724e-01, 9.9872e-01],
         [2.5107e-03, 9.9436e-01, 9.9405e-01,  ..., 9.8078e-01,
          9.2004e-04, 4.2641e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7351e-03, 1.0622e-03, 1.0447e-04,  ..., 4.0307e-03,
          1.8587e-03, 4.1447e-03],
         [3.7351e-03, 1.0622e-03, 1.0447e-04,  ..., 4.0307e-03,
          1.8587e-03, 4.1447e-03],
         [9.8879e-01, 1.0622e-03, 1.0447e-04,  ..., 9.8791e-01,
          1.8587e-03, 9.8757e-01],
         [3.7351e-03, 9.9681e-01, 9.9969e-01,  ..., 4.0307e-03,
          9.9442e-01, 4.1447e-03]],
        [[1.2664e-03, 1.6547e-04, 1.7167e-05,  ..., 8.4911e-03,
          1.0883e-02, 9.9916e-01],
         [1.2664e-03, 1.6547e-04, 1.7167e-05,  ..., 8.4911e-03,
          9.7308e-03, 2.8101e-04],
         [9.9620e-01, 1.6547e-04, 1.7167e-05,  ..., 9.7409e-01,
          9.6966e-01, 2.8101e-04],
         [1.2664e-03, 9.9950e-01, 9.9995e-01,  ..., 8.9268e-03,
          9.7308e-03, 2.8101e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 422:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:51,011 [Process: 0] Synchronize training processes
2024-08-18 19:52:51,011 [Process: 0] Evaluating...
2024-08-18 19:52:51,017 [Process: 0] EPOCH 422:
2024-08-18 19:52:51,019 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:52,165 [Process: 0] Synchronize training processes
2024-08-18 19:52:52,165 [Process: 0] Evaluating...
2024-08-18 19:52:52,167 [Process: 0] EPOCH 423:
2024-08-18 19:52:52,169 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8554e-01, 3.3016e-03, 5.6109e-03,  ..., 9.9849e-01,
          9.9057e-01, 3.7047e-03],
         [3.0574e-03, 3.3016e-03, 5.6109e-03,  ..., 5.0242e-04,
          2.8927e-03, 3.7047e-03],
         [3.0574e-03, 5.0345e-03, 9.0687e-03,  ..., 5.0242e-04,
          2.9174e-03, 4.2741e-03],
         [8.3481e-03, 9.8836e-01, 9.7971e-01,  ..., 5.0242e-04,
          3.6202e-03, 9.8832e-01]],
        [[9.9979e-01, 1.3693e-03, 2.4311e-03,  ..., 5.0996e-03,
          2.9737e-04, 2.3605e-03],
         [6.9258e-05, 1.3693e-03, 2.4311e-03,  ..., 5.0996e-03,
          2.9737e-04, 2.3605e-03],
         [6.9258e-05, 1.3693e-03, 2.6999e-03,  ..., 6.0259e-03,
          9.9911e-01, 9.9292e-01],
         [6.9258e-05, 9.9589e-01, 9.9244e-01,  ..., 9.8377e-01,
          2.9737e-04, 2.3605e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9342e-03, 3.4945e-04, 1.9057e-05,  ..., 1.1689e-03,
          5.6823e-04, 2.6011e-03],
         [2.9342e-03, 3.4945e-04, 1.9057e-05,  ..., 1.1689e-03,
          5.6823e-04, 2.2181e-03],
         [9.9120e-01, 3.4945e-04, 1.9057e-05,  ..., 9.9649e-01,
          5.6823e-04, 9.9296e-01],
         [2.9342e-03, 9.9895e-01, 9.9994e-01,  ..., 1.1689e-03,
          9.9830e-01, 2.2181e-03]],
        [[1.1436e-03, 3.4109e-04, 2.2185e-05,  ..., 6.1492e-03,
          6.5837e-03, 9.9962e-01],
         [1.1436e-03, 3.4109e-04, 2.2185e-05,  ..., 6.1492e-03,
          6.5837e-03, 1.2600e-04],
         [9.9657e-01, 3.4109e-04, 2.2185e-05,  ..., 9.8155e-01,
          9.8025e-01, 1.2600e-04],
         [1.1436e-03, 9.9898e-01, 9.9993e-01,  ..., 6.1492e-03,
          6.5837e-03, 1.2600e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 423:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6115e-01, 3.2087e-03, 2.7788e-03,  ..., 9.9687e-01,
          7.4788e-01, 4.6385e-03],
         [8.8839e-03, 3.0060e-03, 2.7788e-03,  ..., 1.0431e-03,
          2.9363e-02, 4.6385e-03],
         [1.6287e-02, 3.0074e-03, 2.7788e-03,  ..., 1.0431e-03,
          3.5208e-02, 4.6385e-03],
         [1.3677e-02, 9.9078e-01, 9.9166e-01,  ..., 1.0431e-03,
          1.8755e-01, 9.8608e-01]],
        [[9.8987e-01, 1.6092e-03, 2.0548e-03,  ..., 3.1285e-03,
          3.8028e-04, 4.6237e-04],
         [2.8257e-03, 1.6092e-03, 2.0548e-03,  ..., 2.5400e-03,
          3.8028e-04, 4.6237e-04],
         [4.4836e-03, 1.6092e-03, 2.0548e-03,  ..., 2.9093e-03,
          9.9886e-01, 9.9861e-01],
         [2.8257e-03, 9.9517e-01, 9.9384e-01,  ..., 9.9142e-01,
          3.8028e-04, 4.6237e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 19:52:53,315 [Process: 0] Synchronize training processes
2024-08-18 19:52:53,316 [Process: 0] Evaluating...
2024-08-18 19:52:53,318 [Process: 0] EPOCH 424:
2024-08-18 19:52:53,319 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.5648e-03, 3.2680e-03, 4.1968e-05,  ..., 1.7230e-03,
          6.4324e-04, 3.5270e-03],
         [5.5648e-03, 3.2680e-03, 4.1968e-05,  ..., 1.7230e-03,
          6.4324e-04, 3.5270e-03],
         [9.8331e-01, 3.2680e-03, 4.1968e-05,  ..., 9.9483e-01,
          6.4324e-04, 9.8942e-01],
         [5.5648e-03, 9.9020e-01, 9.9987e-01,  ..., 1.7230e-03,
          9.9807e-01, 3.5270e-03]],
        [[6.3952e-04, 6.3942e-04, 3.7375e-03,  ..., 2.5425e-03,
          6.0538e-03, 9.9851e-01],
         [6.3952e-04, 6.3942e-04, 3.7375e-03,  ..., 2.5425e-03,
          6.0538e-03, 4.9626e-04],
         [9.9808e-01, 6.3942e-04, 3.7375e-03,  ..., 9.9237e-01,
          9.8184e-01, 4.9626e-04],
         [6.3952e-04, 9.9808e-01, 9.8879e-01,  ..., 2.5425e-03,
          6.0538e-03, 4.9626e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 424:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9930e-01, 1.8344e-03, 2.7152e-03,  ..., 9.9430e-01,
          9.5913e-01, 1.2453e-04],
         [2.3369e-04, 1.8344e-03, 2.7152e-03,  ..., 1.9002e-03,
          8.6870e-03, 1.2453e-04],
         [2.3369e-04, 1.8344e-03, 3.0387e-03,  ..., 1.9002e-03,
          8.6870e-03, 1.2453e-04],
         [2.3369e-04, 9.9450e-01, 9.9153e-01,  ..., 1.9002e-03,
          2.3495e-02, 9.9963e-01]],
        [[9.9921e-01, 1.8354e-03, 2.8690e-03,  ..., 4.2152e-03,
          3.6364e-03, 3.7118e-04],
         [2.6296e-04, 1.8354e-03, 2.8690e-03,  ..., 3.9217e-03,
          3.6364e-03, 3.7118e-04],
         [2.6296e-04, 1.8354e-03, 3.4522e-03,  ..., 4.9085e-03,
          9.8909e-01, 9.9889e-01],
         [2.6296e-04, 9.9449e-01, 9.9081e-01,  ..., 9.8695e-01,
          3.6364e-03, 3.7118e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0145e-03, 1.0790e-02, 3.0773e-04,  ..., 1.1450e-03,
          1.3969e-03, 9.4947e-04],
         [4.0145e-03, 5.1854e-03, 3.0773e-04,  ..., 1.1450e-03,
          1.3969e-03, 9.4947e-04],
         [9.8796e-01, 5.1854e-03, 3.0773e-04,  ..., 9.9657e-01,
          1.3969e-03, 9.9715e-01],
         [4.0145e-03, 9.7884e-01, 9.9908e-01,  ..., 1.1450e-03,
          9.9581e-01, 9.4947e-04]],
        [[1.8479e-03, 4.7818e-03, 2.1068e-05,  ..., 3.9993e-03,
          4.3086e-03, 9.9963e-01],
         [1.8479e-03, 4.7818e-03, 2.1068e-05,  ..., 3.9993e-03,
          4.3086e-03, 1.2466e-04],
         [9.9446e-01, 4.7818e-03, 2.1068e-05,  ..., 9.8800e-01,
          9.8707e-01, 1.2466e-04],
         [1.8479e-03, 9.8565e-01, 9.9994e-01,  ..., 3.9993e-03,
          4.3086e-03, 1.2466e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 425:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8337e-01, 1.4668e-03, 3.4779e-03,  ..., 9.9766e-01,
          9.6446e-01, 7.1408e-04],
         [4.5953e-03, 1.4668e-03, 3.4779e-03,  ..., 7.7692e-04,
          8.8374e-03, 7.1408e-04],
         [7.4351e-03, 1.4668e-03, 3.4779e-03,  ..., 7.8902e-04,
          8.8374e-03, 7.1408e-04],
         [4.5953e-03, 9.9560e-01, 9.8957e-01,  ..., 7.7692e-04,
          1.7864e-02, 9.9786e-01]],
        [[9.9775e-01, 4.9539e-03, 3.1564e-03,  ..., 2.2512e-03,
          9.0556e-04, 1.6616e-04],
         [7.5149e-04, 4.9539e-03, 3.1564e-03,  ..., 2.2512e-03,
          9.0556e-04, 1.6616e-04],
         [7.5149e-04, 6.3220e-03, 3.8197e-03,  ..., 2.2512e-03,
          9.9728e-01, 9.9950e-01],
         [7.5149e-04, 9.8377e-01, 9.8987e-01,  ..., 9.9325e-01,
          9.0556e-04, 1.6616e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:52:54,467 [Process: 0] Synchronize training processes
2024-08-18 19:52:54,467 [Process: 0] Evaluating...
2024-08-18 19:52:54,469 [Process: 0] EPOCH 425:
2024-08-18 19:52:54,471 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:55,617 [Process: 0] Synchronize training processes
2024-08-18 19:52:55,617 [Process: 0] Evaluating...
2024-08-18 19:52:55,619 [Process: 0] EPOCH 426:
2024-08-18 19:52:55,621 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6523e-03, 3.3072e-04, 1.6261e-05,  ..., 7.3716e-03,
          2.9313e-04, 8.8388e-04],
         [2.6523e-03, 3.3072e-04, 1.6261e-05,  ..., 7.3716e-03,
          2.9313e-04, 8.8388e-04],
         [9.9204e-01, 3.3072e-04, 1.6261e-05,  ..., 9.7789e-01,
          2.9313e-04, 9.9735e-01],
         [2.6523e-03, 9.9901e-01, 9.9995e-01,  ..., 7.3716e-03,
          9.9912e-01, 8.8388e-04]],
        [[1.9134e-03, 5.5276e-05, 5.0951e-05,  ..., 3.1030e-03,
          3.0597e-03, 9.9988e-01],
         [1.9134e-03, 5.5276e-05, 5.0951e-05,  ..., 3.1030e-03,
          3.0597e-03, 3.9905e-05],
         [9.9426e-01, 5.5276e-05, 5.0951e-05,  ..., 9.9069e-01,
          9.9082e-01, 3.9905e-05],
         [1.9134e-03, 9.9983e-01, 9.9985e-01,  ..., 3.1030e-03,
          3.0597e-03, 3.9905e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 426:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8989e-01, 4.5962e-03, 4.7961e-03,  ..., 9.9172e-01,
          9.7628e-01, 9.0777e-04],
         [2.2618e-03, 4.5962e-03, 4.7961e-03,  ..., 2.4778e-03,
          5.5842e-03, 9.0777e-04],
         [5.5819e-03, 6.8024e-03, 5.3837e-03,  ..., 3.3264e-03,
          5.5842e-03, 9.0777e-04],
         [2.2618e-03, 9.8401e-01, 9.8502e-01,  ..., 2.4778e-03,
          1.2547e-02, 9.9728e-01]],
        [[9.9890e-01, 1.4538e-03, 1.7554e-03,  ..., 2.5781e-03,
          1.2645e-04, 3.1619e-04],
         [3.6828e-04, 1.3362e-03, 1.7554e-03,  ..., 2.5781e-03,
          1.2645e-04, 3.1619e-04],
         [3.6828e-04, 1.3362e-03, 1.7554e-03,  ..., 2.5781e-03,
          9.9962e-01, 9.9905e-01],
         [3.6828e-04, 9.9587e-01, 9.9473e-01,  ..., 9.9227e-01,
          1.2645e-04, 3.1619e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.2949e-03, 1.1953e-03, 3.5763e-05,  ..., 4.6461e-03,
          8.8140e-04, 1.6510e-03],
         [8.2949e-03, 1.1953e-03, 3.5763e-05,  ..., 4.6461e-03,
          8.8140e-04, 1.6510e-03],
         [9.7118e-01, 1.1953e-03, 3.5763e-05,  ..., 9.8606e-01,
          8.8140e-04, 9.9505e-01],
         [1.2234e-02, 9.9641e-01, 9.9989e-01,  ..., 4.6461e-03,
          9.9736e-01, 1.6510e-03]],
        [[2.8785e-03, 1.5397e-04, 2.0340e-04,  ..., 2.3196e-03,
          3.1822e-03, 9.9645e-01],
         [2.8785e-03, 1.5397e-04, 2.0340e-04,  ..., 2.3196e-03,
          3.1822e-03, 1.1616e-03],
         [9.9136e-01, 1.5397e-04, 2.0340e-04,  ..., 9.9304e-01,
          9.9045e-01, 1.1616e-03],
         [2.8785e-03, 9.9954e-01, 9.9939e-01,  ..., 2.3196e-03,
          3.1822e-03, 1.2315e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 427:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 19:52:56,759 [Process: 0] Synchronize training processes
2024-08-18 19:52:56,759 [Process: 0] Evaluating...
2024-08-18 19:52:56,761 [Process: 0] EPOCH 427:
2024-08-18 19:52:56,763 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:57,911 [Process: 0] Synchronize training processes
2024-08-18 19:52:57,912 [Process: 0] Evaluating...
2024-08-18 19:52:57,913 [Process: 0] EPOCH 428:
2024-08-18 19:52:57,915 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9774e-01, 4.7729e-03, 1.5068e-03,  ..., 9.9939e-01,
          7.6811e-01, 3.9485e-04],
         [7.5364e-04, 4.7729e-03, 1.5068e-03,  ..., 2.0472e-04,
          2.7319e-02, 3.9485e-04],
         [7.5364e-04, 5.1173e-03, 1.5068e-03,  ..., 2.0472e-04,
          2.9406e-02, 3.9485e-04],
         [7.5364e-04, 9.8534e-01, 9.9548e-01,  ..., 2.0472e-04,
          1.7516e-01, 9.9882e-01]],
        [[9.7920e-01, 2.4458e-03, 2.1905e-03,  ..., 6.9305e-03,
          2.3842e-04, 2.2979e-03],
         [5.1900e-03, 2.4458e-03, 2.1905e-03,  ..., 6.9305e-03,
          2.3842e-04, 2.2979e-03],
         [1.0422e-02, 2.7228e-03, 2.1905e-03,  ..., 7.1838e-03,
          9.9928e-01, 9.9311e-01],
         [5.1900e-03, 9.9239e-01, 9.9343e-01,  ..., 9.7896e-01,
          2.3842e-04, 2.2979e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5198e-03, 8.9240e-04, 5.4797e-04,  ..., 5.7317e-03,
          1.8924e-03, 2.1962e-03],
         [3.4976e-03, 8.9240e-04, 5.4797e-04,  ..., 5.7317e-03,
          1.8924e-03, 2.1962e-03],
         [9.8948e-01, 8.9240e-04, 5.4797e-04,  ..., 9.8280e-01,
          1.8924e-03, 9.9341e-01],
         [3.4976e-03, 9.9732e-01, 9.9836e-01,  ..., 5.7317e-03,
          9.9432e-01, 2.1962e-03]],
        [[9.9403e-04, 8.9728e-04, 2.0566e-04,  ..., 5.0127e-03,
          5.2769e-03, 9.9299e-01],
         [9.9403e-04, 8.9728e-04, 2.0566e-04,  ..., 5.0127e-03,
          5.2769e-03, 1.8743e-03],
         [9.9702e-01, 8.9728e-04, 2.0566e-04,  ..., 9.8496e-01,
          9.8417e-01, 1.8743e-03],
         [9.9403e-04, 9.9731e-01, 9.9938e-01,  ..., 5.0127e-03,
          5.2769e-03, 3.2626e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 428:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9058e-01, 1.2832e-03, 1.9567e-03,  ..., 9.9917e-01,
          7.0637e-01, 2.2474e-03],
         [3.1402e-03, 1.2832e-03, 1.9567e-03,  ..., 2.7501e-04,
          3.3480e-02, 2.2474e-03],
         [3.1402e-03, 1.2832e-03, 2.0131e-03,  ..., 2.7501e-04,
          4.3918e-02, 2.2474e-03],
         [3.1402e-03, 9.9615e-01, 9.9407e-01,  ..., 2.7501e-04,
          2.1623e-01, 9.9326e-01]],
        [[9.9824e-01, 1.0518e-03, 3.7561e-03,  ..., 5.0174e-03,
          5.9121e-04, 4.5685e-04],
         [5.7132e-04, 1.0518e-03, 3.7561e-03,  ..., 3.9873e-03,
          5.9121e-04, 4.5685e-04],
         [6.1446e-04, 1.0518e-03, 4.5906e-03,  ..., 5.9182e-03,
          9.9823e-01, 9.9863e-01],
         [5.7132e-04, 9.9684e-01, 9.8790e-01,  ..., 9.8508e-01,
          5.9121e-04, 4.5685e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4679e-02, 1.8223e-04, 4.2549e-04,  ..., 5.0661e-03,
          1.3471e-03, 2.9359e-03],
         [1.0184e-02, 1.8223e-04, 4.2549e-04,  ..., 5.0661e-03,
          1.3471e-03, 2.9359e-03],
         [9.6495e-01, 1.8223e-04, 4.2549e-04,  ..., 9.8480e-01,
          1.3471e-03, 9.9119e-01],
         [1.0184e-02, 9.9945e-01, 9.9872e-01,  ..., 5.0661e-03,
          9.9596e-01, 2.9359e-03]],
        [[6.8068e-03, 4.4908e-04, 4.2643e-04,  ..., 6.1712e-03,
          1.0242e-03, 9.9676e-01],
         [6.8068e-03, 4.4908e-04, 4.2643e-04,  ..., 6.1712e-03,
          1.0242e-03, 1.0609e-03],
         [9.7703e-01, 4.4908e-04, 4.2643e-04,  ..., 9.8149e-01,
          9.9693e-01, 1.0609e-03],
         [9.3597e-03, 9.9865e-01, 9.9872e-01,  ..., 6.1712e-03,
          1.0242e-03, 1.1230e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 429:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:52:59,060 [Process: 0] Synchronize training processes
2024-08-18 19:52:59,060 [Process: 0] Evaluating...
2024-08-18 19:52:59,062 [Process: 0] EPOCH 429:
2024-08-18 19:52:59,064 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:00,206 [Process: 0] Synchronize training processes
2024-08-18 19:53:00,207 [Process: 0] Evaluating...
2024-08-18 19:53:00,209 [Process: 0] EPOCH 430:
2024-08-18 19:53:00,211 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7712e-01, 1.5375e-03, 2.0872e-03,  ..., 9.9888e-01,
          9.3300e-01, 2.2932e-03],
         [4.6165e-03, 1.5375e-03, 2.0872e-03,  ..., 3.7333e-04,
          1.2936e-02, 2.2932e-03],
         [1.3645e-02, 1.5375e-03, 2.0872e-03,  ..., 3.7333e-04,
          1.3051e-02, 2.6385e-03],
         [4.6165e-03, 9.9539e-01, 9.9374e-01,  ..., 3.7333e-04,
          4.1015e-02, 9.9277e-01]],
        [[9.7188e-01, 2.9442e-03, 6.9162e-03,  ..., 3.2849e-03,
          4.3944e-04, 6.4778e-04],
         [6.6021e-03, 2.9442e-03, 6.2168e-03,  ..., 3.2849e-03,
          4.3944e-04, 6.4778e-04],
         [1.4918e-02, 3.0621e-03, 6.2168e-03,  ..., 3.2849e-03,
          9.9868e-01, 9.9806e-01],
         [6.6021e-03, 9.9105e-01, 9.8065e-01,  ..., 9.9015e-01,
          4.3944e-04, 6.4778e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2944e-03, 8.6834e-04, 7.4772e-04,  ..., 3.5341e-03,
          4.6091e-05, 1.5816e-03],
         [2.2944e-03, 8.6834e-04, 6.9968e-04,  ..., 3.5341e-03,
          4.6091e-05, 1.5816e-03],
         [9.9312e-01, 8.6834e-04, 6.9968e-04,  ..., 9.8940e-01,
          4.6091e-05, 9.9526e-01],
         [2.2944e-03, 9.9739e-01, 9.9785e-01,  ..., 3.5341e-03,
          9.9986e-01, 1.5816e-03]],
        [[3.3270e-03, 6.9609e-04, 1.2598e-05,  ..., 4.8317e-03,
          3.5780e-02, 9.9745e-01],
         [3.3270e-03, 6.9609e-04, 1.2598e-05,  ..., 4.8317e-03,
          3.3006e-02, 8.3590e-04],
         [9.9002e-01, 6.9609e-04, 1.2598e-05,  ..., 9.8550e-01,
          8.5055e-01, 8.3590e-04],
         [3.3270e-03, 9.9791e-01, 9.9996e-01,  ..., 4.8317e-03,
          8.0665e-02, 8.7902e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 430:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8343e-01, 3.2107e-03, 1.4929e-03,  ..., 9.9756e-01,
          9.9647e-01, 1.4892e-02],
         [3.6328e-03, 3.2107e-03, 1.4929e-03,  ..., 8.1238e-04,
          1.1751e-03, 1.6711e-02],
         [9.3053e-03, 3.8550e-03, 1.4929e-03,  ..., 8.1238e-04,
          1.1751e-03, 2.9047e-02],
         [3.6328e-03, 9.8972e-01, 9.9552e-01,  ..., 8.1238e-04,
          1.1751e-03, 9.3935e-01]],
        [[9.9970e-01, 2.6646e-03, 5.0282e-03,  ..., 3.5387e-03,
          3.3575e-04, 1.2987e-03],
         [9.9930e-05, 2.6646e-03, 3.5304e-03,  ..., 3.5387e-03,
          3.3575e-04, 1.2987e-03],
         [9.9930e-05, 2.6646e-03, 3.5304e-03,  ..., 4.2391e-03,
          9.9899e-01, 9.9610e-01],
         [9.9930e-05, 9.9201e-01, 9.8791e-01,  ..., 9.8868e-01,
          3.3575e-04, 1.2987e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:53:01,359 [Process: 0] Synchronize training processes
2024-08-18 19:53:01,359 [Process: 0] Evaluating...
2024-08-18 19:53:01,361 [Process: 0] EPOCH 431:
2024-08-18 19:53:01,363 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9026e-03, 2.3460e-04, 2.7567e-04,  ..., 2.8688e-03,
          8.6417e-05, 1.0647e-02],
         [4.9026e-03, 2.3460e-04, 2.7567e-04,  ..., 2.8688e-03,
          8.6417e-05, 1.0647e-02],
         [9.8529e-01, 2.3460e-04, 2.7567e-04,  ..., 9.9139e-01,
          8.6417e-05, 9.6515e-01],
         [4.9026e-03, 9.9930e-01, 9.9917e-01,  ..., 2.8688e-03,
          9.9974e-01, 1.3556e-02]],
        [[1.3884e-03, 1.0967e-03, 1.5314e-04,  ..., 8.1435e-03,
          3.2678e-03, 9.9916e-01],
         [1.3884e-03, 1.0967e-03, 1.5314e-04,  ..., 6.3760e-03,
          3.2678e-03, 2.8011e-04],
         [9.9583e-01, 1.0967e-03, 1.5314e-04,  ..., 9.7910e-01,
          9.9020e-01, 2.8011e-04],
         [1.3884e-03, 9.9671e-01, 9.9954e-01,  ..., 6.3760e-03,
          3.2678e-03, 2.8011e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 431:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8621e-01, 2.1017e-03, 1.7799e-03,  ..., 9.9646e-01,
          9.9331e-01, 3.9978e-03],
         [3.7030e-03, 2.1017e-03, 1.7799e-03,  ..., 1.1721e-03,
          1.9726e-03, 3.9978e-03],
         [6.3872e-03, 2.1017e-03, 1.7799e-03,  ..., 1.1950e-03,
          1.9726e-03, 4.3015e-03],
         [3.7030e-03, 9.9369e-01, 9.9466e-01,  ..., 1.1721e-03,
          2.7491e-03, 9.8770e-01]],
        [[9.9822e-01, 3.7751e-03, 2.0446e-03,  ..., 3.1911e-03,
          3.5807e-04, 1.3479e-03],
         [5.3939e-04, 3.7751e-03, 2.0446e-03,  ..., 3.1911e-03,
          3.5807e-04, 1.3479e-03],
         [7.0409e-04, 3.7751e-03, 2.0446e-03,  ..., 3.2615e-03,
          9.9893e-01, 9.9596e-01],
         [5.3939e-04, 9.8867e-01, 9.9387e-01,  ..., 9.9036e-01,
          3.5807e-04, 1.3479e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7849e-03, 9.5911e-04, 1.4251e-04,  ..., 2.3135e-03,
          2.9265e-04, 2.4181e-03],
         [4.7849e-03, 9.5911e-04, 1.4251e-04,  ..., 2.3135e-03,
          2.9265e-04, 2.4181e-03],
         [9.8565e-01, 9.5911e-04, 1.4251e-04,  ..., 9.9306e-01,
          2.9265e-04, 9.9275e-01],
         [4.7849e-03, 9.9712e-01, 9.9957e-01,  ..., 2.3135e-03,
          9.9912e-01, 2.4181e-03]],
        [[1.7499e-03, 6.9295e-05, 8.9033e-04,  ..., 3.9016e-03,
          8.0464e-03, 9.9715e-01],
         [1.7499e-03, 6.9295e-05, 6.5797e-04,  ..., 3.9016e-03,
          8.0464e-03, 8.9721e-04],
         [9.9475e-01, 6.9295e-05, 6.5797e-04,  ..., 9.8830e-01,
          9.7531e-01, 8.9721e-04],
         [1.7499e-03, 9.9979e-01, 9.9779e-01,  ..., 3.9016e-03,
          8.5947e-03, 1.0539e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 432:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8471e-01, 3.2141e-03, 1.0527e-03,  ..., 9.9424e-01,
          9.3278e-01, 7.9818e-03],
         [4.8369e-03, 3.7450e-03, 1.0527e-03,  ..., 3.3631e-03,
          1.2517e-02, 5.4488e-03],
         [5.6194e-03, 3.2141e-03, 1.0527e-03,  ..., 1.2006e-03,
          1.3904e-02, 6.3054e-03],
         [4.8369e-03, 9.8983e-01, 9.9684e-01,  ..., 1.2006e-03,
          4.0801e-02, 9.8026e-01]],
        [[9.8795e-01, 6.4955e-03, 1.2038e-02,  ..., 2.4400e-03,
          1.6948e-03, 1.3759e-04],
         [4.2428e-03, 4.4828e-03, 9.5355e-03,  ..., 2.4400e-03,
          1.6948e-03, 1.3759e-04],
         [3.9051e-03, 5.3265e-03, 1.1339e-02,  ..., 2.4400e-03,
          9.9492e-01, 9.9959e-01],
         [3.9051e-03, 9.8370e-01, 9.6709e-01,  ..., 9.9268e-01,
          1.6948e-03, 1.3759e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:02,509 [Process: 0] Synchronize training processes
2024-08-18 19:53:02,510 [Process: 0] Evaluating...
2024-08-18 19:53:02,516 [Process: 0] EPOCH 432:
2024-08-18 19:53:02,518 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:03,662 [Process: 0] Synchronize training processes
2024-08-18 19:53:03,662 [Process: 0] Evaluating...
2024-08-18 19:53:03,664 [Process: 0] EPOCH 433:
2024-08-18 19:53:03,666 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4185e-03, 1.0130e-03, 5.8335e-05,  ..., 5.5072e-03,
          1.9114e-04, 2.2273e-03],
         [4.4185e-03, 1.0130e-03, 5.8335e-05,  ..., 5.5072e-03,
          1.9114e-04, 2.2273e-03],
         [9.8674e-01, 1.0130e-03, 5.8335e-05,  ..., 9.8348e-01,
          1.9114e-04, 9.9332e-01],
         [4.4185e-03, 9.9696e-01, 9.9983e-01,  ..., 5.5072e-03,
          9.9943e-01, 2.2273e-03]],
        [[9.5163e-04, 5.0925e-04, 3.0467e-05,  ..., 3.1172e-03,
          7.8102e-03, 9.9935e-01],
         [9.5163e-04, 5.0925e-04, 3.0467e-05,  ..., 3.1172e-03,
          5.9637e-03, 2.1626e-04],
         [9.9715e-01, 5.0925e-04, 3.0467e-05,  ..., 9.9065e-01,
          9.8026e-01, 2.1626e-04],
         [9.5163e-04, 9.9847e-01, 9.9991e-01,  ..., 3.1172e-03,
          5.9637e-03, 2.1626e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 433:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6380e-01, 1.1512e-03, 3.6990e-03,  ..., 9.9675e-01,
          9.8013e-01, 1.3852e-03],
         [1.1196e-02, 1.1512e-03, 3.8139e-03,  ..., 1.0169e-03,
          4.9513e-03, 1.3852e-03],
         [1.6184e-02, 1.1512e-03, 3.6990e-03,  ..., 1.2174e-03,
          5.1446e-03, 1.3852e-03],
         [8.8195e-03, 9.9655e-01, 9.8879e-01,  ..., 1.0169e-03,
          9.7696e-03, 9.9584e-01]],
        [[9.8834e-01, 2.3220e-03, 4.3280e-03,  ..., 2.3818e-03,
          3.2824e-04, 1.1556e-03],
         [3.3764e-03, 2.3220e-03, 4.3280e-03,  ..., 2.3818e-03,
          3.2824e-04, 1.1556e-03],
         [4.9115e-03, 2.3220e-03, 4.8544e-03,  ..., 2.5109e-03,
          9.9902e-01, 9.9653e-01],
         [3.3764e-03, 9.9303e-01, 9.8649e-01,  ..., 9.9273e-01,
          3.2824e-04, 1.1556e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5880e-03, 7.3203e-04, 7.9699e-04,  ..., 3.2250e-03,
          1.4251e-03, 3.8256e-03],
         [3.5880e-03, 7.3203e-04, 7.9699e-04,  ..., 3.2250e-03,
          1.4251e-03, 3.8256e-03],
         [9.8924e-01, 7.3203e-04, 7.9699e-04,  ..., 9.9032e-01,
          1.4251e-03, 9.8852e-01],
         [3.5880e-03, 9.9780e-01, 9.9761e-01,  ..., 3.2250e-03,
          9.9572e-01, 3.8256e-03]],
        [[1.0179e-03, 1.2501e-04, 2.4366e-06,  ..., 1.1648e-02,
          4.2859e-03, 9.9407e-01],
         [1.0179e-03, 1.2501e-04, 2.4366e-06,  ..., 1.1648e-02,
          4.2859e-03, 1.8118e-03],
         [9.9695e-01, 1.2501e-04, 2.4366e-06,  ..., 9.6072e-01,
          9.8714e-01, 1.8118e-03],
         [1.0179e-03, 9.9962e-01, 9.9999e-01,  ..., 1.5981e-02,
          4.2859e-03, 2.3079e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 434:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:53:04,810 [Process: 0] Synchronize training processes
2024-08-18 19:53:04,810 [Process: 0] Evaluating...
2024-08-18 19:53:04,812 [Process: 0] EPOCH 434:
2024-08-18 19:53:04,814 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:05,957 [Process: 0] Synchronize training processes
2024-08-18 19:53:05,957 [Process: 0] Evaluating...
2024-08-18 19:53:05,959 [Process: 0] EPOCH 435:
2024-08-18 19:53:05,961 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6973e-01, 5.3832e-03, 1.6707e-03,  ..., 9.9730e-01,
          9.9396e-01, 1.2744e-03],
         [8.8070e-02, 5.3832e-03, 1.6707e-03,  ..., 8.9942e-04,
          1.7559e-03, 1.2744e-03],
         [2.3378e-02, 7.2918e-03, 1.6707e-03,  ..., 8.9942e-04,
          2.4640e-03, 1.2744e-03],
         [1.8818e-02, 9.8194e-01, 9.9499e-01,  ..., 8.9942e-04,
          1.8207e-03, 9.9618e-01]],
        [[9.9843e-01, 4.0986e-03, 5.9296e-03,  ..., 3.5284e-03,
          9.0777e-05, 3.1782e-04],
         [5.2015e-04, 4.0986e-03, 5.8652e-03,  ..., 3.5284e-03,
          9.0777e-05, 3.1782e-04],
         [5.3412e-04, 4.4551e-03, 8.4156e-03,  ..., 3.5284e-03,
          9.9973e-01, 9.9905e-01],
         [5.2015e-04, 9.8735e-01, 9.7979e-01,  ..., 9.8941e-01,
          9.0777e-05, 3.1782e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5544e-03, 5.8719e-04, 4.0915e-04,  ..., 1.8648e-03,
          5.5668e-04, 2.3846e-03],
         [3.5544e-03, 5.8719e-04, 4.0915e-04,  ..., 1.8648e-03,
          5.5668e-04, 2.3846e-03],
         [9.8934e-01, 5.8719e-04, 4.0915e-04,  ..., 9.9441e-01,
          5.5668e-04, 9.9285e-01],
         [3.5544e-03, 9.9824e-01, 9.9877e-01,  ..., 1.8648e-03,
          9.9833e-01, 2.3846e-03]],
        [[3.8562e-04, 2.2456e-03, 9.8874e-06,  ..., 2.6312e-03,
          4.2319e-03, 9.9858e-01],
         [3.8562e-04, 2.2456e-03, 9.8874e-06,  ..., 2.6312e-03,
          4.2319e-03, 4.6060e-04],
         [9.9884e-01, 2.2456e-03, 9.8874e-06,  ..., 9.9211e-01,
          9.8730e-01, 4.6060e-04],
         [3.8562e-04, 9.9326e-01, 9.9997e-01,  ..., 2.6312e-03,
          4.2319e-03, 5.0008e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 435:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2033e-01, 6.5884e-03, 1.9854e-03,  ..., 9.9700e-01,
          9.5641e-01, 1.9186e-03],
         [3.8355e-02, 6.5884e-03, 1.9854e-03,  ..., 9.8237e-04,
          1.0133e-02, 1.9186e-03],
         [1.5859e-01, 1.0420e-02, 1.9854e-03,  ..., 1.0385e-03,
          1.0133e-02, 1.9186e-03],
         [8.2724e-02, 9.7640e-01, 9.9404e-01,  ..., 9.8237e-04,
          2.3324e-02, 9.9424e-01]],
        [[9.7359e-01, 9.6270e-04, 1.7120e-02,  ..., 3.1362e-03,
          9.4368e-04, 9.2100e-04],
         [6.1633e-03, 9.6270e-04, 1.4525e-02,  ..., 3.1362e-03,
          9.4368e-04, 9.2100e-04],
         [1.4079e-02, 9.6270e-04, 2.5081e-02,  ..., 3.1362e-03,
          9.9717e-01, 9.9724e-01],
         [6.1633e-03, 9.9711e-01, 9.4327e-01,  ..., 9.9059e-01,
          9.4368e-04, 9.2100e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9395e-03, 1.8048e-03, 2.2222e-06,  ..., 5.3074e-03,
          5.0609e-04, 1.3280e-02],
         [3.9395e-03, 1.8048e-03, 2.2222e-06,  ..., 5.3074e-03,
          4.4389e-04, 8.4531e-03],
         [9.8818e-01, 1.8048e-03, 2.2222e-06,  ..., 9.8408e-01,
          4.4389e-04, 9.6981e-01],
         [3.9395e-03, 9.9459e-01, 9.9999e-01,  ..., 5.3074e-03,
          9.9861e-01, 8.4531e-03]],
        [[3.8951e-04, 1.2608e-04, 4.5622e-06,  ..., 4.9948e-03,
          2.1430e-03, 9.9982e-01],
         [3.8951e-04, 1.2608e-04, 4.5622e-06,  ..., 4.9948e-03,
          2.1430e-03, 5.9195e-05],
         [9.9883e-01, 1.2608e-04, 4.5622e-06,  ..., 9.8502e-01,
          9.9357e-01, 5.9195e-05],
         [3.8951e-04, 9.9962e-01, 9.9999e-01,  ..., 4.9948e-03,
          2.1430e-03, 5.9195e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 436:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:07,104 [Process: 0] Synchronize training processes
2024-08-18 19:53:07,105 [Process: 0] Evaluating...
2024-08-18 19:53:07,106 [Process: 0] EPOCH 436:
2024-08-18 19:53:07,108 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3067e-01, 8.2350e-03, 5.8979e-03,  ..., 9.9663e-01,
          7.1657e-01, 3.2769e-03],
         [1.4023e-02, 8.7651e-03, 3.9259e-03,  ..., 1.1245e-03,
          3.1259e-02, 3.2769e-03],
         [3.0612e-02, 8.9559e-03, 5.2158e-03,  ..., 1.1245e-03,
          4.5140e-02, 3.2769e-03],
         [2.4693e-02, 9.7404e-01, 9.8496e-01,  ..., 1.1245e-03,
          2.0703e-01, 9.9017e-01]],
        [[9.9864e-01, 3.4877e-03, 2.9085e-03,  ..., 2.8193e-03,
          1.8617e-03, 5.0709e-04],
         [4.5234e-04, 3.4877e-03, 2.9085e-03,  ..., 2.7294e-03,
          1.8617e-03, 5.0709e-04],
         [4.5234e-04, 3.9482e-03, 2.9085e-03,  ..., 2.7294e-03,
          9.9442e-01, 9.9848e-01],
         [4.5234e-04, 9.8908e-01, 9.9127e-01,  ..., 9.9172e-01,
          1.8617e-03, 5.0709e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3101e-03, 1.0630e-02, 2.0959e-04,  ..., 9.4698e-03,
          8.0553e-04, 1.1787e-03],
         [7.3101e-03, 1.4558e-02, 2.0959e-04,  ..., 8.2166e-03,
          8.0553e-04, 1.1787e-03],
         [9.7708e-01, 1.0630e-02, 2.0959e-04,  ..., 9.7410e-01,
          8.0553e-04, 9.9646e-01],
         [8.2966e-03, 9.6418e-01, 9.9937e-01,  ..., 8.2166e-03,
          9.9758e-01, 1.1787e-03]],
        [[2.1956e-03, 1.9786e-05, 7.8763e-04,  ..., 3.8681e-03,
          5.5029e-03, 9.9964e-01],
         [2.1956e-03, 1.9786e-05, 7.8763e-04,  ..., 3.8681e-03,
          5.5029e-03, 1.2053e-04],
         [9.9341e-01, 1.9786e-05, 7.8763e-04,  ..., 9.8808e-01,
          9.8349e-01, 1.2053e-04],
         [2.1956e-03, 9.9994e-01, 9.9764e-01,  ..., 4.1818e-03,
          5.5029e-03, 1.2053e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 437:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6402e-01, 2.7370e-03, 1.6533e-03,  ..., 9.9775e-01,
          9.2044e-01, 1.5749e-02],
         [8.4208e-03, 2.7370e-03, 1.6533e-03,  ..., 7.5680e-04,
          1.2885e-02, 1.4071e-02],
         [1.9141e-02, 3.1686e-03, 1.6533e-03,  ..., 7.4859e-04,
          1.2885e-02, 2.8212e-02],
         [8.4208e-03, 9.9136e-01, 9.9504e-01,  ..., 7.4859e-04,
          5.3792e-02, 9.4197e-01]],
        [[9.9481e-01, 1.8451e-03, 4.4030e-03,  ..., 3.4772e-03,
          2.0726e-04, 4.8334e-04],
         [1.2772e-03, 1.8451e-03, 4.2121e-03,  ..., 3.4772e-03,
          2.0726e-04, 4.8334e-04],
         [2.6359e-03, 1.8451e-03, 5.5038e-03,  ..., 4.0558e-03,
          9.9938e-01, 9.9855e-01],
         [1.2772e-03, 9.9446e-01, 9.8588e-01,  ..., 9.8899e-01,
          2.0726e-04, 4.8334e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:53:08,251 [Process: 0] Synchronize training processes
2024-08-18 19:53:08,252 [Process: 0] Evaluating...
2024-08-18 19:53:08,254 [Process: 0] EPOCH 437:
2024-08-18 19:53:08,255 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:09,400 [Process: 0] Synchronize training processes
2024-08-18 19:53:09,400 [Process: 0] Evaluating...
2024-08-18 19:53:09,402 [Process: 0] EPOCH 438:
2024-08-18 19:53:09,404 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3178e-02, 2.6802e-03, 4.1891e-04,  ..., 3.1897e-03,
          9.5423e-04, 2.8323e-03],
         [1.3089e-02, 4.1895e-03, 8.2051e-04,  ..., 3.1897e-03,
          9.5423e-04, 2.3648e-03],
         [9.5741e-01, 2.6802e-03, 4.1891e-04,  ..., 9.9043e-01,
          9.5423e-04, 9.9244e-01],
         [1.6324e-02, 9.9045e-01, 9.9834e-01,  ..., 3.1897e-03,
          9.9714e-01, 2.3648e-03]],
        [[3.8159e-04, 4.9649e-04, 1.2164e-05,  ..., 6.2458e-03,
          1.8106e-02, 9.9420e-01],
         [3.8159e-04, 4.9649e-04, 1.2164e-05,  ..., 6.2458e-03,
          1.4271e-02, 1.7126e-03],
         [9.9886e-01, 4.9649e-04, 1.2164e-05,  ..., 9.8126e-01,
          9.5058e-01, 1.7126e-03],
         [3.8159e-04, 9.9851e-01, 9.9996e-01,  ..., 6.2458e-03,
          1.7041e-02, 2.3740e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 438:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1220e-01, 1.9406e-03, 2.4993e-03,  ..., 9.9969e-01,
          9.8921e-01, 3.6924e-02],
         [7.4638e-02, 1.9406e-03, 2.6565e-03,  ..., 1.0461e-04,
          2.6942e-03, 2.7709e-02],
         [8.0909e-02, 1.9406e-03, 2.4993e-03,  ..., 1.0461e-04,
          2.6942e-03, 8.3858e-02],
         [3.2254e-02, 9.9418e-01, 9.9234e-01,  ..., 1.0461e-04,
          5.3988e-03, 8.5151e-01]],
        [[9.7594e-01, 2.5636e-03, 4.5154e-03,  ..., 4.7692e-03,
          1.3209e-03, 2.3824e-03],
         [6.0605e-03, 1.9613e-03, 4.0596e-03,  ..., 4.3747e-03,
          1.3209e-03, 2.3824e-03],
         [1.1939e-02, 1.9613e-03, 4.0596e-03,  ..., 4.4722e-03,
          9.9604e-01, 9.9285e-01],
         [6.0605e-03, 9.9351e-01, 9.8737e-01,  ..., 9.8638e-01,
          1.3209e-03, 2.3824e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3498e-02, 8.4410e-03, 7.3427e-06,  ..., 4.0462e-03,
          1.1168e-03, 2.3010e-03],
         [1.0836e-02, 1.3911e-02, 7.3427e-06,  ..., 4.0462e-03,
          1.1168e-03, 2.3010e-03],
         [9.6464e-01, 8.4410e-03, 7.3427e-06,  ..., 9.8786e-01,
          1.1168e-03, 9.9310e-01],
         [1.1026e-02, 9.6921e-01, 9.9998e-01,  ..., 4.0462e-03,
          9.9665e-01, 2.3010e-03]],
        [[6.1222e-04, 5.3716e-05, 8.8522e-05,  ..., 3.3628e-03,
          5.8755e-03, 9.9974e-01],
         [6.1222e-04, 5.3716e-05, 8.8522e-05,  ..., 3.3628e-03,
          5.8755e-03, 8.6684e-05],
         [9.9816e-01, 5.3716e-05, 8.8522e-05,  ..., 9.8991e-01,
          9.8237e-01, 8.6684e-05],
         [6.1222e-04, 9.9984e-01, 9.9973e-01,  ..., 3.3628e-03,
          5.8755e-03, 8.6684e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 439:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1505e-01, 7.2386e-03, 3.0634e-03,  ..., 9.9044e-01,
          9.9137e-01, 1.0991e-02],
         [1.2046e-01, 7.2386e-03, 3.0634e-03,  ..., 2.7903e-03,
          2.8751e-03, 1.0690e-02],
         [3.1699e-01, 1.1691e-02, 3.0634e-03,  ..., 2.7903e-03,
          2.8751e-03, 2.1053e-02],
         [1.4750e-01, 9.7383e-01, 9.9081e-01,  ..., 3.9761e-03,
          2.8751e-03, 9.5727e-01]],
        [[9.9664e-01, 1.2584e-03, 3.0706e-03,  ..., 6.9356e-03,
          4.4906e-04, 6.6185e-04],
         [1.1188e-03, 1.2254e-03, 3.0706e-03,  ..., 6.9356e-03,
          4.4906e-04, 6.6185e-04],
         [1.1188e-03, 1.2254e-03, 3.0706e-03,  ..., 8.9926e-03,
          9.9865e-01, 9.9801e-01],
         [1.1188e-03, 9.9629e-01, 9.9079e-01,  ..., 9.7714e-01,
          4.4906e-04, 6.6185e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:10,549 [Process: 0] Synchronize training processes
2024-08-18 19:53:10,549 [Process: 0] Evaluating...
2024-08-18 19:53:10,551 [Process: 0] EPOCH 439:
2024-08-18 19:53:10,552 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:11,698 [Process: 0] Synchronize training processes
2024-08-18 19:53:11,698 [Process: 0] Evaluating...
2024-08-18 19:53:11,700 [Process: 0] EPOCH 440:
2024-08-18 19:53:11,701 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0884e-03, 2.7142e-04, 1.0454e-03,  ..., 4.3625e-03,
          1.3704e-03, 8.4765e-03],
         [2.0884e-03, 2.7142e-04, 1.0454e-03,  ..., 4.3625e-03,
          1.3704e-03, 6.4832e-03],
         [9.9373e-01, 2.7142e-04, 1.0454e-03,  ..., 9.8691e-01,
          1.3704e-03, 9.7856e-01],
         [2.0884e-03, 9.9919e-01, 9.9686e-01,  ..., 4.3625e-03,
          9.9589e-01, 6.4832e-03]],
        [[4.8556e-04, 7.3627e-05, 9.6540e-05,  ..., 1.3897e-02,
          6.0916e-03, 9.9860e-01],
         [4.8556e-04, 7.3627e-05, 9.6540e-05,  ..., 1.3897e-02,
          6.0916e-03, 4.6694e-04],
         [9.9854e-01, 7.3627e-05, 9.6540e-05,  ..., 9.5246e-01,
          9.8173e-01, 4.6694e-04],
         [4.8556e-04, 9.9978e-01, 9.9971e-01,  ..., 1.9741e-02,
          6.0916e-03, 4.6694e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 440:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0751e-01, 3.5472e-03, 7.1705e-03,  ..., 9.9622e-01,
          9.8941e-01, 1.2823e-03],
         [1.7059e-02, 3.5472e-03, 5.5105e-03,  ..., 1.2612e-03,
          3.2392e-03, 1.2823e-03],
         [5.8368e-02, 3.5472e-03, 7.8023e-03,  ..., 1.2612e-03,
          4.0387e-03, 1.2823e-03],
         [1.7059e-02, 9.8936e-01, 9.7952e-01,  ..., 1.2612e-03,
          3.3126e-03, 9.9615e-01]],
        [[9.9869e-01, 4.3983e-03, 1.2046e-03,  ..., 9.1470e-03,
          9.6761e-04, 3.0140e-04],
         [4.3738e-04, 4.3983e-03, 1.2046e-03,  ..., 8.8632e-03,
          9.6761e-04, 3.0140e-04],
         [4.3738e-04, 5.5436e-03, 1.2046e-03,  ..., 1.2978e-02,
          9.9710e-01, 9.9910e-01],
         [4.3738e-04, 9.8566e-01, 9.9639e-01,  ..., 9.6901e-01,
          9.6761e-04, 3.0140e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3661e-03, 8.5880e-04, 1.0893e-04,  ..., 2.7546e-03,
          2.5633e-04, 4.4215e-03],
         [4.3661e-03, 8.5880e-04, 1.0893e-04,  ..., 2.7546e-03,
          2.5633e-04, 4.4215e-03],
         [9.8690e-01, 8.5880e-04, 1.0893e-04,  ..., 9.9174e-01,
          2.5633e-04, 9.8674e-01],
         [4.3661e-03, 9.9742e-01, 9.9967e-01,  ..., 2.7546e-03,
          9.9923e-01, 4.4215e-03]],
        [[5.5632e-04, 1.2693e-04, 6.0259e-04,  ..., 4.0433e-03,
          1.7839e-03, 9.9591e-01],
         [5.5632e-04, 1.2693e-04, 1.7955e-04,  ..., 4.0433e-03,
          1.7839e-03, 1.2677e-03],
         [9.9833e-01, 1.2693e-04, 1.7955e-04,  ..., 9.8787e-01,
          9.9465e-01, 1.2677e-03],
         [5.5632e-04, 9.9962e-01, 9.9904e-01,  ..., 4.0433e-03,
          1.7839e-03, 1.5573e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 441:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:53:12,853 [Process: 0] Synchronize training processes
2024-08-18 19:53:12,853 [Process: 0] Evaluating...
2024-08-18 19:53:12,855 [Process: 0] EPOCH 441:
2024-08-18 19:53:12,857 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:13,999 [Process: 0] Synchronize training processes
2024-08-18 19:53:14,000 [Process: 0] Evaluating...
2024-08-18 19:53:14,008 [Process: 0] EPOCH 442:
2024-08-18 19:53:14,009 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.5399e-01, 1.0631e-02, 2.6959e-03,  ..., 9.9733e-01,
          9.9813e-01, 3.2485e-05],
         [5.8676e-02, 9.2155e-03, 2.6959e-03,  ..., 7.9539e-04,
          6.2475e-04, 3.2485e-05],
         [4.4735e-01, 1.5744e-02, 2.6959e-03,  ..., 1.0747e-03,
          6.2475e-04, 3.2485e-05],
         [3.9984e-02, 9.6441e-01, 9.9191e-01,  ..., 7.9539e-04,
          6.2475e-04, 9.9990e-01]],
        [[9.9943e-01, 5.4007e-03, 5.0404e-03,  ..., 1.2180e-02,
          3.8289e-04, 1.2315e-03],
         [1.8996e-04, 5.4864e-03, 5.0404e-03,  ..., 1.2180e-02,
          3.8289e-04, 1.2315e-03],
         [1.8996e-04, 5.4547e-03, 6.1100e-03,  ..., 2.2341e-02,
          9.9885e-01, 9.9631e-01],
         [1.8996e-04, 9.8366e-01, 9.8381e-01,  ..., 9.5330e-01,
          3.8289e-04, 1.2315e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6194e-03, 1.1834e-03, 3.6960e-04,  ..., 4.0123e-03,
          5.7042e-04, 1.2813e-03],
         [3.6194e-03, 1.1834e-03, 3.6960e-04,  ..., 4.0123e-03,
          5.7042e-04, 1.2813e-03],
         [9.8914e-01, 1.1834e-03, 3.6960e-04,  ..., 9.8796e-01,
          5.7042e-04, 9.9616e-01],
         [3.6194e-03, 9.9645e-01, 9.9889e-01,  ..., 4.0123e-03,
          9.9829e-01, 1.2813e-03]],
        [[6.3620e-04, 1.3602e-04, 8.0992e-05,  ..., 4.3413e-03,
          1.4706e-03, 9.7545e-01],
         [6.3620e-04, 1.1694e-04, 8.0992e-05,  ..., 4.3413e-03,
          1.4706e-03, 5.5435e-03],
         [9.9809e-01, 1.1694e-04, 8.0992e-05,  ..., 9.8698e-01,
          9.9559e-01, 5.5435e-03],
         [6.3620e-04, 9.9963e-01, 9.9976e-01,  ..., 4.3413e-03,
          1.4706e-03, 1.3461e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 442:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.7270e-01, 7.7686e-03, 6.0139e-03,  ..., 9.9601e-01,
          9.9656e-01, 1.2453e-05],
         [1.4233e-02, 6.3165e-03, 5.0364e-03,  ..., 1.3285e-03,
          1.1463e-03, 1.2453e-05],
         [1.9884e-01, 7.2809e-03, 5.1501e-03,  ..., 1.3285e-03,
          1.1463e-03, 1.2453e-05],
         [1.4233e-02, 9.7863e-01, 9.8380e-01,  ..., 1.3285e-03,
          1.1463e-03, 9.9996e-01]],
        [[9.9371e-01, 1.2407e-03, 1.2610e-03,  ..., 3.9683e-03,
          1.6097e-04, 5.7963e-04],
         [2.0450e-03, 1.2407e-03, 1.2610e-03,  ..., 4.3763e-03,
          1.6097e-04, 5.7963e-04],
         [2.1236e-03, 1.2407e-03, 1.2610e-03,  ..., 4.5845e-03,
          9.9952e-01, 9.9826e-01],
         [2.1196e-03, 9.9628e-01, 9.9622e-01,  ..., 9.8707e-01,
          1.6097e-04, 5.7963e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7155e-03, 5.4092e-04, 2.6200e-05,  ..., 2.4551e-03,
          1.9252e-04, 4.7301e-03],
         [2.7155e-03, 5.4092e-04, 2.6200e-05,  ..., 2.4551e-03,
          1.9252e-04, 4.7301e-03],
         [9.9185e-01, 5.4092e-04, 2.6200e-05,  ..., 9.9263e-01,
          1.9252e-04, 9.8581e-01],
         [2.7155e-03, 9.9838e-01, 9.9992e-01,  ..., 2.4551e-03,
          9.9942e-01, 4.7301e-03]],
        [[9.2225e-04, 4.7440e-04, 1.6234e-05,  ..., 5.4464e-03,
          3.8190e-03, 9.9991e-01],
         [9.2225e-04, 3.4691e-04, 1.6234e-05,  ..., 5.4464e-03,
          3.8190e-03, 3.1177e-05],
         [9.9723e-01, 3.4691e-04, 1.6234e-05,  ..., 9.8366e-01,
          9.8854e-01, 3.1177e-05],
         [9.2225e-04, 9.9883e-01, 9.9995e-01,  ..., 5.4464e-03,
          3.8190e-03, 3.1177e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 443:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:15,154 [Process: 0] Synchronize training processes
2024-08-18 19:53:15,154 [Process: 0] Evaluating...
2024-08-18 19:53:15,156 [Process: 0] EPOCH 443:
2024-08-18 19:53:15,158 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2521e-01, 3.6244e-03, 2.6774e-03,  ..., 9.9582e-01,
          9.8372e-01, 5.9002e-04],
         [8.1453e-03, 3.6244e-03, 2.6774e-03,  ..., 1.1533e-03,
          4.7123e-03, 5.9002e-04],
         [5.8499e-02, 3.6244e-03, 2.6774e-03,  ..., 1.8739e-03,
          4.7123e-03, 5.9002e-04],
         [8.1453e-03, 9.8913e-01, 9.9197e-01,  ..., 1.1533e-03,
          6.8506e-03, 9.9823e-01]],
        [[9.9913e-01, 5.0784e-03, 6.8824e-03,  ..., 6.6376e-03,
          1.0713e-04, 1.0347e-04],
         [2.7057e-04, 5.0784e-03, 6.0203e-03,  ..., 5.0318e-03,
          1.0713e-04, 1.0347e-04],
         [3.2425e-04, 5.1633e-03, 8.9477e-03,  ..., 6.1284e-03,
          9.9968e-01, 9.9969e-01],
         [2.7057e-04, 9.8468e-01, 9.7815e-01,  ..., 9.8220e-01,
          1.0713e-04, 1.0347e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9792e-03, 1.5291e-04, 9.2877e-06,  ..., 2.1146e-03,
          1.5626e-04, 2.8324e-02],
         [2.9792e-03, 1.5291e-04, 9.2877e-06,  ..., 2.1146e-03,
          1.5626e-04, 1.6948e-02],
         [9.9106e-01, 1.5291e-04, 9.2877e-06,  ..., 9.9366e-01,
          1.5626e-04, 9.3208e-01],
         [2.9792e-03, 9.9954e-01, 9.9997e-01,  ..., 2.1146e-03,
          9.9953e-01, 2.2645e-02]],
        [[7.2209e-04, 2.7271e-05, 3.9410e-04,  ..., 2.6268e-03,
          6.8287e-03, 9.9946e-01],
         [7.2209e-04, 2.7271e-05, 3.9410e-04,  ..., 2.6268e-03,
          6.8287e-03, 1.8118e-04],
         [9.9783e-01, 2.7271e-05, 3.9410e-04,  ..., 9.9212e-01,
          9.7857e-01, 1.8118e-04],
         [7.2209e-04, 9.9992e-01, 9.9882e-01,  ..., 2.6268e-03,
          7.7750e-03, 1.8118e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 444:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9879e-01, 4.7074e-03, 2.1988e-02,  ..., 9.9917e-01,
          9.9838e-01, 7.4488e-04],
         [1.9614e-02, 3.9743e-03, 1.3044e-02,  ..., 2.7521e-04,
          5.4106e-04, 7.4488e-04],
         [5.3091e-02, 4.0512e-03, 2.4172e-02,  ..., 2.7521e-04,
          5.4106e-04, 7.4488e-04],
         [2.8505e-02, 9.8727e-01, 9.4080e-01,  ..., 2.7521e-04,
          5.4106e-04, 9.9777e-01]],
        [[9.9814e-01, 5.1112e-03, 3.4672e-03,  ..., 1.8437e-03,
          1.4060e-03, 5.2009e-04],
         [5.6209e-04, 5.1112e-03, 3.4672e-03,  ..., 1.8437e-03,
          1.4060e-03, 5.2009e-04],
         [7.3221e-04, 6.3016e-03, 3.4672e-03,  ..., 1.8437e-03,
          9.9578e-01, 9.9844e-01],
         [5.6209e-04, 9.8348e-01, 9.8960e-01,  ..., 9.9447e-01,
          1.4060e-03, 5.2009e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:53:16,302 [Process: 0] Synchronize training processes
2024-08-18 19:53:16,302 [Process: 0] Evaluating...
2024-08-18 19:53:16,304 [Process: 0] EPOCH 444:
2024-08-18 19:53:16,306 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:17,450 [Process: 0] Synchronize training processes
2024-08-18 19:53:17,451 [Process: 0] Evaluating...
2024-08-18 19:53:17,452 [Process: 0] EPOCH 445:
2024-08-18 19:53:17,454 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0640e-03, 2.0535e-04, 4.4941e-05,  ..., 6.1134e-03,
          5.6084e-04, 2.5902e-03],
         [5.0640e-03, 2.2860e-04, 4.4941e-05,  ..., 6.1134e-03,
          5.6084e-04, 2.5902e-03],
         [9.8481e-01, 2.0535e-04, 4.4941e-05,  ..., 9.8131e-01,
          5.6084e-04, 9.9223e-01],
         [5.0640e-03, 9.9936e-01, 9.9987e-01,  ..., 6.4666e-03,
          9.9832e-01, 2.5902e-03]],
        [[2.3927e-03, 2.8133e-04, 6.4000e-05,  ..., 6.2453e-03,
          2.2444e-03, 9.9949e-01],
         [2.3927e-03, 2.8133e-04, 6.4000e-05,  ..., 6.2453e-03,
          2.2444e-03, 1.6231e-04],
         [9.9019e-01, 2.8133e-04, 6.4000e-05,  ..., 9.8065e-01,
          9.9327e-01, 1.6231e-04],
         [5.0227e-03, 9.9916e-01, 9.9981e-01,  ..., 6.8607e-03,
          2.2444e-03, 1.8947e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 445:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9250e-01, 4.0214e-03, 1.1693e-02,  ..., 9.9578e-01,
          8.8741e-01, 5.1922e-02],
         [1.9787e-03, 4.0214e-03, 1.0012e-02,  ..., 1.3822e-03,
          1.7192e-02, 4.3208e-02],
         [3.5402e-03, 5.0174e-03, 1.4158e-02,  ..., 1.4602e-03,
          2.0226e-02, 2.8084e-01],
         [1.9787e-03, 9.8694e-01, 9.6414e-01,  ..., 1.3822e-03,
          7.5172e-02, 6.2403e-01]],
        [[9.9148e-01, 4.6160e-03, 1.2563e-03,  ..., 8.1892e-03,
          8.9777e-04, 8.7519e-04],
         [2.4858e-03, 4.6160e-03, 1.2563e-03,  ..., 8.1892e-03,
          8.9777e-04, 8.7519e-04],
         [3.5450e-03, 5.0846e-03, 1.2563e-03,  ..., 1.1325e-02,
          9.9731e-01, 9.9737e-01],
         [2.4858e-03, 9.8568e-01, 9.9623e-01,  ..., 9.7230e-01,
          8.9777e-04, 8.7519e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7250e-03, 3.3692e-03, 1.6244e-03,  ..., 9.3285e-03,
          1.2067e-05, 7.6390e-03],
         [2.7250e-03, 3.3692e-03, 1.6244e-03,  ..., 9.2438e-03,
          1.2067e-05, 7.1218e-03],
         [9.9182e-01, 3.3692e-03, 1.6244e-03,  ..., 9.7208e-01,
          1.2067e-05, 9.7812e-01],
         [2.7250e-03, 9.8989e-01, 9.9513e-01,  ..., 9.3428e-03,
          9.9996e-01, 7.1218e-03]],
        [[2.5629e-03, 2.2764e-04, 1.8250e-04,  ..., 7.0035e-03,
          5.2133e-03, 9.9797e-01],
         [2.5629e-03, 2.2764e-04, 1.8250e-04,  ..., 7.0035e-03,
          4.9396e-03, 6.1781e-04],
         [9.9231e-01, 2.2764e-04, 1.8250e-04,  ..., 9.7898e-01,
          9.8491e-01, 6.1781e-04],
         [2.5629e-03, 9.9932e-01, 9.9945e-01,  ..., 7.0132e-03,
          4.9396e-03, 7.9314e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 446:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6750e-01, 4.5145e-03, 2.7900e-03,  ..., 9.9861e-01,
          9.9938e-01, 1.3056e-01],
         [9.6515e-03, 4.5145e-03, 2.7900e-03,  ..., 6.3564e-04,
          2.0742e-04, 3.1122e-02],
         [1.4356e-02, 5.6392e-03, 2.7915e-03,  ..., 3.7863e-04,
          2.0742e-04, 3.7315e-02],
         [8.4907e-03, 9.8533e-01, 9.9163e-01,  ..., 3.7863e-04,
          2.0742e-04, 8.0100e-01]],
        [[9.9817e-01, 5.5773e-03, 3.3439e-03,  ..., 4.1404e-03,
          4.2872e-04, 1.7889e-04],
         [6.1139e-04, 1.0792e-02, 3.3439e-03,  ..., 4.1404e-03,
          4.2872e-04, 1.7889e-04],
         [6.1139e-04, 5.7823e-03, 3.9941e-03,  ..., 4.4556e-03,
          9.9871e-01, 9.9946e-01],
         [6.1139e-04, 9.7785e-01, 9.8932e-01,  ..., 9.8726e-01,
          4.2872e-04, 1.7889e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:18,599 [Process: 0] Synchronize training processes
2024-08-18 19:53:18,599 [Process: 0] Evaluating...
2024-08-18 19:53:18,601 [Process: 0] EPOCH 446:
2024-08-18 19:53:18,603 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:19,752 [Process: 0] Synchronize training processes
2024-08-18 19:53:19,753 [Process: 0] Evaluating...
2024-08-18 19:53:19,755 [Process: 0] EPOCH 447:
2024-08-18 19:53:19,756 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2227e-03, 4.7007e-04, 1.4948e-04,  ..., 2.0752e-03,
          5.4399e-04, 2.0241e-03],
         [3.2227e-03, 4.7007e-04, 1.4948e-04,  ..., 2.0752e-03,
          5.4399e-04, 2.0241e-03],
         [9.9033e-01, 4.7007e-04, 1.4948e-04,  ..., 9.9377e-01,
          5.4399e-04, 9.9393e-01],
         [3.2227e-03, 9.9859e-01, 9.9955e-01,  ..., 2.0752e-03,
          9.9837e-01, 2.0241e-03]],
        [[2.0325e-02, 8.2338e-04, 9.4498e-07,  ..., 1.1603e-02,
          4.0233e-03, 9.9821e-01],
         [2.0325e-02, 8.2338e-04, 9.4498e-07,  ..., 1.1603e-02,
          4.0233e-03, 5.9529e-04],
         [8.6433e-01, 8.2338e-04, 9.4498e-07,  ..., 9.6083e-01,
          9.8793e-01, 5.9529e-04],
         [9.5016e-02, 9.9753e-01, 1.0000e+00,  ..., 1.5968e-02,
          4.0233e-03, 5.9529e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 447:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.4160e-01, 3.7113e-03, 5.8743e-03,  ..., 9.9894e-01,
          9.9971e-01, 3.7165e-02],
         [3.2243e-02, 3.7113e-03, 5.8743e-03,  ..., 3.0974e-04,
          9.5686e-05, 2.2283e-02],
         [9.8801e-02, 3.8978e-03, 9.5416e-03,  ..., 4.3619e-04,
          9.5686e-05, 2.4909e-02],
         [2.7352e-02, 9.8868e-01, 9.7871e-01,  ..., 3.0974e-04,
          9.5686e-05, 9.1564e-01]],
        [[9.9007e-01, 1.6824e-03, 7.5782e-03,  ..., 8.6226e-03,
          1.1056e-04, 7.7344e-05],
         [1.6929e-03, 1.6824e-03, 7.5782e-03,  ..., 8.2216e-03,
          1.1056e-04, 7.7344e-05],
         [6.5460e-03, 1.6824e-03, 1.0071e-02,  ..., 1.3478e-02,
          9.9967e-01, 9.9977e-01],
         [1.6929e-03, 9.9495e-01, 9.7477e-01,  ..., 9.6968e-01,
          1.1056e-04, 7.7344e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5140e-03, 3.3861e-03, 9.3109e-05,  ..., 2.7830e-03,
          2.4489e-05, 1.5634e-03],
         [3.5140e-03, 3.4645e-03, 9.3109e-05,  ..., 2.7830e-03,
          2.4489e-05, 1.5634e-03],
         [9.8946e-01, 3.3861e-03, 9.3109e-05,  ..., 9.9165e-01,
          2.4489e-05, 9.9531e-01],
         [3.5140e-03, 9.8976e-01, 9.9972e-01,  ..., 2.7830e-03,
          9.9993e-01, 1.5634e-03]],
        [[8.7010e-03, 9.6845e-04, 3.3927e-06,  ..., 9.1193e-03,
          2.9749e-03, 9.9880e-01],
         [8.7010e-03, 6.6344e-04, 3.3927e-06,  ..., 9.1193e-03,
          2.5011e-03, 4.0083e-04],
         [9.6401e-01, 6.6344e-04, 3.3927e-06,  ..., 9.7073e-01,
          9.9202e-01, 4.0083e-04],
         [1.8587e-02, 9.9770e-01, 9.9999e-01,  ..., 1.1034e-02,
          2.5011e-03, 4.0083e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 448:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-18 19:53:20,895 [Process: 0] Synchronize training processes
2024-08-18 19:53:20,895 [Process: 0] Evaluating...
2024-08-18 19:53:20,897 [Process: 0] EPOCH 448:
2024-08-18 19:53:20,899 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:22,038 [Process: 0] Synchronize training processes
2024-08-18 19:53:22,038 [Process: 0] Evaluating...
2024-08-18 19:53:22,040 [Process: 0] EPOCH 449:
2024-08-18 19:53:22,042 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[9.8650e-01, 5.4721e-03, 6.0011e-03,  ..., 9.9870e-01,
          9.5747e-01, 5.1748e-04],
         [2.9830e-03, 5.4721e-03, 5.0972e-03,  ..., 4.0418e-04,
          7.8801e-03, 5.1748e-04],
         [7.5377e-03, 5.7421e-03, 6.7715e-03,  ..., 4.8667e-04,
          7.9716e-03, 5.1748e-04],
         [2.9830e-03, 9.8331e-01, 9.8213e-01,  ..., 4.0418e-04,
          2.6683e-02, 9.9845e-01]],
        [[9.9686e-01, 7.6782e-03, 2.4930e-03,  ..., 2.4859e-03,
          1.0460e-03, 2.4568e-04],
         [9.2116e-04, 7.2327e-03, 2.4930e-03,  ..., 2.4859e-03,
          1.0460e-03, 2.4568e-04],
         [1.2943e-03, 1.1941e-02, 3.0236e-03,  ..., 2.4859e-03,
          9.9686e-01, 9.9926e-01],
         [9.2116e-04, 9.7315e-01, 9.9199e-01,  ..., 9.9254e-01,
          1.0460e-03, 2.4568e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9461e-03, 5.4263e-04, 1.5511e-04,  ..., 2.0021e-03,
          9.4501e-04, 8.3047e-03],
         [3.9461e-03, 5.4263e-04, 1.5511e-04,  ..., 2.0021e-03,
          9.4501e-04, 8.3047e-03],
         [9.8816e-01, 5.4263e-04, 1.5511e-04,  ..., 9.9399e-01,
          9.4501e-04, 9.7392e-01],
         [3.9461e-03, 9.9837e-01, 9.9953e-01,  ..., 2.0021e-03,
          9.9717e-01, 9.4724e-03]],
        [[2.6823e-03, 3.3855e-05, 6.4134e-06,  ..., 1.4049e-02,
          2.8119e-03, 9.9939e-01],
         [2.6823e-03, 3.3855e-05, 6.4134e-06,  ..., 1.1600e-02,
          2.8119e-03, 2.0488e-04],
         [9.9195e-01, 3.3855e-05, 6.4134e-06,  ..., 9.6143e-01,
          9.9156e-01, 2.0488e-04],
         [2.6823e-03, 9.9990e-01, 9.9998e-01,  ..., 1.2923e-02,
          2.8119e-03, 2.0488e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 449:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0148e-01, 2.0499e-03, 3.5724e-03,  ..., 9.9702e-01,
          6.0139e-01, 5.5986e-04],
         [1.5054e-02, 2.0408e-03, 3.5724e-03,  ..., 9.9245e-04,
          4.7762e-02, 5.5986e-04],
         [6.8414e-02, 2.4801e-03, 5.2758e-03,  ..., 9.9245e-04,
          8.6207e-02, 5.5986e-04],
         [1.5054e-02, 9.9343e-01, 9.8758e-01,  ..., 9.9245e-04,
          2.6464e-01, 9.9832e-01]],
        [[9.9822e-01, 1.6506e-03, 1.8593e-03,  ..., 3.3981e-03,
          4.4270e-05, 1.7402e-04],
         [5.9439e-04, 1.8771e-03, 1.8593e-03,  ..., 3.3981e-03,
          4.4270e-05, 1.7402e-04],
         [5.9439e-04, 1.7913e-03, 1.8593e-03,  ..., 3.7350e-03,
          9.9987e-01, 9.9948e-01],
         [5.9439e-04, 9.9468e-01, 9.9442e-01,  ..., 9.8947e-01,
          4.4270e-05, 1.7402e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9274e-03, 7.4607e-04, 8.4616e-05,  ..., 1.4314e-02,
          4.1372e-04, 9.3561e-03],
         [2.9274e-03, 1.1647e-03, 8.4616e-05,  ..., 9.8275e-03,
          4.1372e-04, 9.3561e-03],
         [9.9122e-01, 7.4607e-04, 8.4616e-05,  ..., 9.6603e-01,
          4.1372e-04, 9.6902e-01],
         [2.9274e-03, 9.9734e-01, 9.9975e-01,  ..., 9.8275e-03,
          9.9876e-01, 1.2266e-02]],
        [[1.7482e-03, 5.9067e-05, 7.7535e-06,  ..., 2.7333e-03,
          3.0415e-03, 9.9989e-01],
         [1.7482e-03, 5.9067e-05, 7.7535e-06,  ..., 2.7333e-03,
          3.0415e-03, 3.6977e-05],
         [9.9476e-01, 5.9067e-05, 7.7535e-06,  ..., 9.9180e-01,
          9.9088e-01, 3.6977e-05],
         [1.7482e-03, 9.9982e-01, 9.9998e-01,  ..., 2.7333e-03,
          3.0415e-03, 3.6977e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 450:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:23,186 [Process: 0] Synchronize training processes
2024-08-18 19:53:23,186 [Process: 0] Evaluating...
2024-08-18 19:53:23,188 [Process: 0] EPOCH 450:
2024-08-18 19:53:23,189 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1304e-01, 2.5969e-03, 9.2163e-03,  ..., 9.9919e-01,
          9.7627e-01, 9.9084e-04],
         [2.2461e-02, 2.5969e-03, 9.9418e-03,  ..., 2.6991e-04,
          6.6375e-03, 9.9084e-04],
         [5.0582e-02, 4.3376e-03, 1.6824e-02,  ..., 2.6991e-04,
          6.6375e-03, 9.9084e-04],
         [1.3917e-02, 9.9047e-01, 9.6402e-01,  ..., 2.6991e-04,
          1.0453e-02, 9.9703e-01]],
        [[9.9806e-01, 2.9803e-03, 3.1420e-03,  ..., 3.0440e-03,
          4.4295e-04, 7.0505e-04],
         [6.4812e-04, 2.9803e-03, 3.1420e-03,  ..., 3.0440e-03,
          4.4295e-04, 7.0505e-04],
         [6.4812e-04, 4.0644e-03, 4.5044e-03,  ..., 4.0293e-03,
          9.9867e-01, 9.9788e-01],
         [6.4812e-04, 9.8997e-01, 9.8921e-01,  ..., 9.8988e-01,
          4.4295e-04, 7.0505e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0786e-03, 1.4068e-04, 4.9387e-04,  ..., 8.9851e-03,
          4.1998e-03, 2.8908e-03],
         [5.0786e-03, 1.4068e-04, 4.9387e-04,  ..., 8.7051e-03,
          4.1998e-03, 2.8908e-03],
         [9.8476e-01, 1.4068e-04, 4.9387e-04,  ..., 9.7345e-01,
          6.4812e-03, 9.9133e-01],
         [5.0786e-03, 9.9958e-01, 9.9852e-01,  ..., 8.8611e-03,
          9.8512e-01, 2.8908e-03]],
        [[1.6889e-03, 5.0632e-05, 1.2796e-04,  ..., 3.3786e-03,
          1.9200e-03, 9.9678e-01],
         [1.6889e-03, 5.0632e-05, 1.2796e-04,  ..., 3.3532e-03,
          1.9200e-03, 1.0374e-03],
         [9.9493e-01, 5.0632e-05, 1.2796e-04,  ..., 9.8991e-01,
          9.9424e-01, 1.0374e-03],
         [1.6889e-03, 9.9985e-01, 9.9962e-01,  ..., 3.3532e-03,
          1.9200e-03, 1.1411e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 451:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7689e-01, 2.5263e-03, 1.1059e-02,  ..., 9.9915e-01,
          8.9191e-01, 9.8663e-04],
         [3.7973e-03, 2.5263e-03, 9.1306e-03,  ..., 2.8220e-04,
          1.8018e-02, 9.8663e-04],
         [1.5519e-02, 2.5263e-03, 1.7599e-02,  ..., 2.8220e-04,
          2.2609e-02, 1.3228e-03],
         [3.7973e-03, 9.9242e-01, 9.6221e-01,  ..., 2.8220e-04,
          6.7463e-02, 9.9670e-01]],
        [[9.9635e-01, 1.2218e-03, 3.1003e-03,  ..., 3.5934e-03,
          1.6045e-03, 6.6949e-04],
         [1.2173e-03, 1.2218e-03, 2.8451e-03,  ..., 3.5934e-03,
          1.6045e-03, 6.6949e-04],
         [1.2173e-03, 1.2218e-03, 3.6712e-03,  ..., 4.1227e-03,
          9.9519e-01, 9.9799e-01],
         [1.2173e-03, 9.9633e-01, 9.9038e-01,  ..., 9.8869e-01,
          1.6045e-03, 6.6949e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0665e-04, 2.3248e-04, 3.8326e-04,  ..., 1.7053e-02,
          1.5128e-04, 3.5260e-03],
         [9.0665e-04, 2.3248e-04, 3.8326e-04,  ..., 1.7053e-02,
          1.5128e-04, 3.5260e-03],
         [9.9728e-01, 2.3248e-04, 3.8326e-04,  ..., 9.3386e-01,
          1.5128e-04, 9.8942e-01],
         [9.0665e-04, 9.9930e-01, 9.9885e-01,  ..., 3.2031e-02,
          9.9955e-01, 3.5260e-03]],
        [[6.7963e-03, 4.3844e-04, 4.8429e-05,  ..., 4.3649e-03,
          3.3343e-03, 9.9940e-01],
         [6.7963e-03, 4.3844e-04, 4.8429e-05,  ..., 4.3649e-03,
          3.3343e-03, 1.9856e-04],
         [9.7744e-01, 4.3844e-04, 4.8429e-05,  ..., 9.8691e-01,
          9.9000e-01, 1.9856e-04],
         [8.9656e-03, 9.9868e-01, 9.9985e-01,  ..., 4.3649e-03,
          3.3343e-03, 1.9856e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:24,333 [Process: 0] Synchronize training processes
2024-08-18 19:53:24,333 [Process: 0] Evaluating...
2024-08-18 19:53:24,335 [Process: 0] EPOCH 451:
2024-08-18 19:53:24,337 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:25,480 [Process: 0] Synchronize training processes
2024-08-18 19:53:25,481 [Process: 0] Evaluating...
2024-08-18 19:53:25,487 [Process: 0] EPOCH 452:
2024-08-18 19:53:25,489 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 452:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7376e-01, 5.7517e-03, 3.6061e-03,  ..., 9.9963e-01,
          9.6524e-02, 1.4927e-03],
         [8.2314e-03, 5.7517e-03, 3.5813e-03,  ..., 1.2465e-04,
          3.3264e-02, 1.4927e-03],
         [1.3635e-02, 7.6685e-03, 6.0450e-03,  ..., 1.2465e-04,
          5.4407e-02, 1.4927e-03],
         [4.3765e-03, 9.8083e-01, 9.8677e-01,  ..., 1.2465e-04,
          8.1581e-01, 9.9552e-01]],
        [[9.9970e-01, 3.0066e-03, 5.2098e-03,  ..., 3.4242e-03,
          3.2743e-04, 1.2370e-04],
         [1.0037e-04, 3.0066e-03, 7.1023e-03,  ..., 3.4242e-03,
          3.2743e-04, 1.2370e-04],
         [1.0037e-04, 3.0066e-03, 5.3152e-03,  ..., 3.8870e-03,
          9.9902e-01, 9.9963e-01],
         [1.0037e-04, 9.9098e-01, 9.8237e-01,  ..., 9.8926e-01,
          3.2743e-04, 1.2370e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0703e-03, 2.9137e-03, 1.1139e-04,  ..., 1.7142e-03,
          1.7193e-03, 2.9307e-03],
         [5.0703e-03, 2.9137e-03, 1.1139e-04,  ..., 1.7142e-03,
          1.7193e-03, 2.9307e-03],
         [9.8467e-01, 2.9137e-03, 1.1139e-04,  ..., 9.9486e-01,
          1.7193e-03, 9.9121e-01],
         [5.1878e-03, 9.9126e-01, 9.9967e-01,  ..., 1.7142e-03,
          9.9484e-01, 2.9307e-03]],
        [[1.1885e-03, 7.0863e-04, 1.0579e-05,  ..., 1.0926e-02,
          1.9732e-03, 9.9959e-01],
         [1.1885e-03, 7.0863e-04, 1.0579e-05,  ..., 1.0926e-02,
          1.9732e-03, 1.3556e-04],
         [9.9643e-01, 7.0863e-04, 1.0579e-05,  ..., 9.6567e-01,
          9.9408e-01, 1.3556e-04],
         [1.1885e-03, 9.9787e-01, 9.9997e-01,  ..., 1.2473e-02,
          1.9732e-03, 1.3556e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 453:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6097e-01, 3.6093e-03, 2.1197e-03,  ..., 9.9963e-01,
          9.8372e-01, 2.7497e-03],
         [6.4211e-03, 3.6093e-03, 2.1197e-03,  ..., 1.2185e-04,
          4.9125e-03, 2.7497e-03],
         [2.7572e-02, 4.4704e-03, 2.7803e-03,  ..., 1.2185e-04,
          5.9473e-03, 3.1958e-03],
         [5.0391e-03, 9.8831e-01, 9.9298e-01,  ..., 1.2185e-04,
          5.4246e-03, 9.9130e-01]],
        [[9.9852e-01, 5.6487e-03, 1.3354e-03,  ..., 3.2597e-03,
          2.5138e-04, 8.2411e-05],
         [4.9359e-04, 7.5100e-03, 1.3354e-03,  ..., 3.2597e-03,
          2.5138e-04, 8.2411e-05],
         [4.9359e-04, 5.6487e-03, 1.3354e-03,  ..., 4.6069e-03,
          9.9925e-01, 9.9975e-01],
         [4.9359e-04, 9.8119e-01, 9.9599e-01,  ..., 9.8887e-01,
          2.5138e-04, 8.2411e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:26,633 [Process: 0] Synchronize training processes
2024-08-18 19:53:26,633 [Process: 0] Evaluating...
2024-08-18 19:53:26,635 [Process: 0] EPOCH 453:
2024-08-18 19:53:26,637 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:27,784 [Process: 0] Synchronize training processes
2024-08-18 19:53:27,785 [Process: 0] Evaluating...
2024-08-18 19:53:27,786 [Process: 0] EPOCH 454:
2024-08-18 19:53:27,788 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9717e-03, 1.4756e-03, 6.0276e-05,  ..., 1.5736e-03,
          7.8878e-05, 5.4916e-03],
         [1.9717e-03, 1.8504e-03, 6.0276e-05,  ..., 1.5736e-03,
          7.8878e-05, 5.4916e-03],
         [9.9408e-01, 1.4756e-03, 6.0276e-05,  ..., 9.9528e-01,
          7.8878e-05, 9.8353e-01],
         [1.9717e-03, 9.9520e-01, 9.9982e-01,  ..., 1.5736e-03,
          9.9976e-01, 5.4916e-03]],
        [[1.1331e-02, 4.2013e-04, 4.7260e-06,  ..., 2.6032e-03,
          3.6166e-03, 9.9688e-01],
         [1.1331e-02, 4.2013e-04, 4.7260e-06,  ..., 2.6032e-03,
          3.6166e-03, 1.0384e-03],
         [9.4690e-01, 4.2013e-04, 4.7260e-06,  ..., 9.9219e-01,
          9.8915e-01, 1.0384e-03],
         [3.0437e-02, 9.9874e-01, 9.9999e-01,  ..., 2.6032e-03,
          3.6166e-03, 1.0384e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 454:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9731e-01, 2.1112e-03, 1.7372e-03,  ..., 9.9965e-01,
          9.4187e-01, 3.1892e-03],
         [8.8827e-04, 2.1112e-03, 1.7372e-03,  ..., 1.1590e-04,
          1.2596e-02, 2.9590e-03],
         [9.1668e-04, 2.2720e-03, 1.7372e-03,  ..., 1.1590e-04,
          1.9656e-02, 4.0474e-03],
         [8.8827e-04, 9.9351e-01, 9.9479e-01,  ..., 1.1590e-04,
          2.5880e-02, 9.8980e-01]],
        [[9.9447e-01, 6.2847e-04, 7.2439e-03,  ..., 1.2254e-03,
          9.2553e-05, 4.6671e-04],
         [1.5431e-03, 6.2847e-04, 5.6465e-03,  ..., 1.2254e-03,
          9.2553e-05, 4.6671e-04],
         [2.4414e-03, 6.2847e-04, 5.6465e-03,  ..., 1.2254e-03,
          9.9972e-01, 9.9860e-01],
         [1.5431e-03, 9.9811e-01, 9.8146e-01,  ..., 9.9632e-01,
          9.2553e-05, 4.6671e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3691e-03, 4.8774e-04, 3.3580e-04,  ..., 3.1945e-03,
          1.2908e-04, 2.1110e-03],
         [1.3691e-03, 4.8774e-04, 3.3580e-04,  ..., 3.1945e-03,
          1.2908e-04, 2.1110e-03],
         [9.9589e-01, 4.8774e-04, 3.3580e-04,  ..., 9.9042e-01,
          1.2908e-04, 9.9367e-01],
         [1.3691e-03, 9.9854e-01, 9.9899e-01,  ..., 3.1945e-03,
          9.9961e-01, 2.1110e-03]],
        [[5.5742e-03, 2.1699e-04, 9.1966e-05,  ..., 4.2567e-03,
          3.1356e-03, 9.9906e-01],
         [5.5742e-03, 2.1699e-04, 9.1966e-05,  ..., 4.2567e-03,
          3.1356e-03, 3.1316e-04],
         [9.7924e-01, 2.1699e-04, 9.1966e-05,  ..., 9.8723e-01,
          9.9059e-01, 3.1316e-04],
         [9.6107e-03, 9.9935e-01, 9.9972e-01,  ..., 4.2567e-03,
          3.1356e-03, 3.1316e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 455:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8915e-01, 1.4321e-03, 1.8626e-03,  ..., 9.9807e-01,
          9.8610e-01, 1.2032e-03],
         [2.5619e-03, 1.4321e-03, 1.8626e-03,  ..., 7.3030e-04,
          3.9547e-03, 1.2032e-03],
         [5.7283e-03, 1.4321e-03, 2.3042e-03,  ..., 6.0172e-04,
          3.9547e-03, 1.2032e-03],
         [2.5619e-03, 9.9570e-01, 9.9397e-01,  ..., 6.0172e-04,
          5.9871e-03, 9.9639e-01]],
        [[9.9962e-01, 8.9950e-04, 7.9983e-04,  ..., 8.2343e-03,
          1.9864e-03, 6.0961e-04],
         [1.2771e-04, 8.9950e-04, 7.9983e-04,  ..., 4.7243e-03,
          1.9864e-03, 6.0961e-04],
         [1.2771e-04, 8.9950e-04, 7.9983e-04,  ..., 6.6802e-03,
          9.9404e-01, 9.9817e-01],
         [1.2771e-04, 9.9730e-01, 9.9760e-01,  ..., 9.8036e-01,
          1.9864e-03, 6.0961e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:28,932 [Process: 0] Synchronize training processes
2024-08-18 19:53:28,933 [Process: 0] Evaluating...
2024-08-18 19:53:28,934 [Process: 0] EPOCH 455:
2024-08-18 19:53:28,936 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:30,072 [Process: 0] Synchronize training processes
2024-08-18 19:53:30,072 [Process: 0] Evaluating...
2024-08-18 19:53:30,074 [Process: 0] EPOCH 456:
2024-08-18 19:53:30,076 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.5909e-03, 1.7421e-04, 5.4218e-04,  ..., 2.1345e-03,
          1.0715e-03, 8.5765e-03],
         [7.5909e-03, 1.7421e-04, 5.4218e-04,  ..., 2.1345e-03,
          1.0715e-03, 7.7085e-03],
         [9.7337e-01, 1.7421e-04, 5.4218e-04,  ..., 9.9360e-01,
          1.0715e-03, 9.7601e-01],
         [1.1449e-02, 9.9948e-01, 9.9837e-01,  ..., 2.1345e-03,
          9.9679e-01, 7.7085e-03]],
        [[8.8352e-03, 4.4883e-05, 1.9826e-06,  ..., 2.1866e-03,
          1.9050e-03, 9.9788e-01],
         [8.8352e-03, 4.4883e-05, 1.9826e-06,  ..., 2.1866e-03,
          1.9050e-03, 7.0579e-04],
         [9.6524e-01, 4.4883e-05, 1.9826e-06,  ..., 9.9344e-01,
          9.9429e-01, 7.0579e-04],
         [1.7087e-02, 9.9987e-01, 9.9999e-01,  ..., 2.1866e-03,
          1.9050e-03, 7.0579e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 456:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8683e-01, 4.2020e-03, 3.2350e-03,  ..., 9.9836e-01,
          9.1744e-01, 4.3302e-03],
         [2.9038e-03, 4.2020e-03, 3.2350e-03,  ..., 5.4757e-04,
          1.6606e-02, 3.0486e-03],
         [7.3646e-03, 5.3759e-03, 3.2350e-03,  ..., 5.4757e-04,
          2.2421e-02, 3.3786e-03],
         [2.9038e-03, 9.8622e-01, 9.9029e-01,  ..., 5.4757e-04,
          4.3529e-02, 9.8924e-01]],
        [[9.9916e-01, 3.5587e-03, 1.5104e-03,  ..., 1.4251e-02,
          3.2840e-04, 5.8472e-04],
         [2.8147e-04, 3.5587e-03, 1.5104e-03,  ..., 1.1405e-02,
          3.2840e-04, 5.8472e-04],
         [2.8147e-04, 3.5587e-03, 1.5104e-03,  ..., 2.1937e-02,
          9.9901e-01, 9.9825e-01],
         [2.8147e-04, 9.8932e-01, 9.9547e-01,  ..., 9.5241e-01,
          3.2840e-04, 5.8472e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0623e-03, 7.9361e-03, 1.1723e-03,  ..., 5.6331e-03,
          5.1145e-03, 3.3448e-03],
         [2.0623e-03, 1.2003e-02, 1.3850e-03,  ..., 5.6331e-03,
          3.9398e-03, 3.3448e-03],
         [9.9381e-01, 7.9361e-03, 1.1723e-03,  ..., 9.8310e-01,
          3.9398e-03, 9.8997e-01],
         [2.0623e-03, 9.7212e-01, 9.9627e-01,  ..., 5.6331e-03,
          9.8701e-01, 3.3448e-03]],
        [[9.2991e-03, 6.8696e-05, 1.6966e-05,  ..., 3.2339e-03,
          4.8085e-03, 9.9878e-01],
         [9.2991e-03, 6.8696e-05, 1.6966e-05,  ..., 3.2339e-03,
          4.8085e-03, 4.0567e-04],
         [9.6032e-01, 6.8696e-05, 1.6966e-05,  ..., 9.9030e-01,
          9.8531e-01, 4.0567e-04],
         [2.1084e-02, 9.9979e-01, 9.9995e-01,  ..., 3.2339e-03,
          5.0681e-03, 4.0567e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 457:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:31,221 [Process: 0] Synchronize training processes
2024-08-18 19:53:31,222 [Process: 0] Evaluating...
2024-08-18 19:53:31,224 [Process: 0] EPOCH 457:
2024-08-18 19:53:31,225 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9426e-01, 6.7047e-03, 1.0172e-02,  ..., 9.9560e-01,
          8.6996e-01, 5.2106e-03],
         [1.8525e-03, 4.2748e-03, 8.9607e-03,  ..., 1.3124e-03,
          2.5552e-02, 5.2106e-03],
         [2.0321e-03, 4.4604e-03, 1.5351e-02,  ..., 1.7737e-03,
          3.4668e-02, 7.2823e-03],
         [1.8525e-03, 9.8456e-01, 9.6552e-01,  ..., 1.3124e-03,
          6.9821e-02, 9.8230e-01]],
        [[9.9918e-01, 3.7529e-03, 6.4533e-04,  ..., 2.9765e-03,
          9.3441e-05, 1.5385e-03],
         [2.7309e-04, 5.5446e-03, 6.4533e-04,  ..., 2.6373e-03,
          9.3441e-05, 1.5385e-03],
         [2.7309e-04, 3.7529e-03, 6.4533e-04,  ..., 3.4724e-03,
          9.9972e-01, 9.9538e-01],
         [2.7309e-04, 9.8695e-01, 9.9806e-01,  ..., 9.9091e-01,
          9.3441e-05, 1.5385e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1100e-02, 1.9395e-04, 1.7878e-04,  ..., 5.7581e-03,
          2.0338e-04, 1.6706e-03],
         [1.1100e-02, 1.9395e-04, 1.7878e-04,  ..., 5.7581e-03,
          2.0338e-04, 1.6706e-03],
         [9.6016e-01, 1.9395e-04, 1.7878e-04,  ..., 9.8273e-01,
          2.0338e-04, 9.9499e-01],
         [1.7642e-02, 9.9942e-01, 9.9946e-01,  ..., 5.7581e-03,
          9.9939e-01, 1.6706e-03]],
        [[8.8303e-03, 2.5345e-04, 5.2525e-06,  ..., 7.6070e-03,
          1.6319e-03, 9.9956e-01],
         [8.8303e-03, 2.5345e-04, 5.2525e-06,  ..., 7.6070e-03,
          1.6319e-03, 1.4631e-04],
         [9.6633e-01, 2.5345e-04, 5.2525e-06,  ..., 9.7456e-01,
          9.9510e-01, 1.4631e-04],
         [1.6007e-02, 9.9924e-01, 9.9998e-01,  ..., 1.0221e-02,
          1.6319e-03, 1.4631e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 458:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1059e-01, 3.4515e-03, 1.3146e-03,  ..., 9.9920e-01,
          7.7716e-01, 6.3687e-03],
         [3.6191e-02, 3.4515e-03, 1.3146e-03,  ..., 2.6615e-04,
          3.1654e-02, 6.3687e-03],
         [3.9510e-02, 3.8413e-03, 1.3146e-03,  ..., 2.6615e-04,
          4.7903e-02, 9.1346e-03],
         [1.3705e-02, 9.8926e-01, 9.9606e-01,  ..., 2.6615e-04,
          1.4328e-01, 9.7813e-01]],
        [[9.9852e-01, 4.7739e-03, 1.9838e-03,  ..., 3.8843e-03,
          2.0449e-04, 6.4516e-04],
         [4.9248e-04, 4.7739e-03, 1.9838e-03,  ..., 3.8843e-03,
          2.0449e-04, 6.4516e-04],
         [4.9248e-04, 5.5228e-03, 1.9838e-03,  ..., 4.7140e-03,
          9.9939e-01, 9.9806e-01],
         [4.9248e-04, 9.8493e-01, 9.9405e-01,  ..., 9.8752e-01,
          2.0449e-04, 6.4516e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2883e-02, 2.2183e-04, 3.0060e-04,  ..., 1.0993e-01,
          1.7272e-03, 8.5104e-03],
         [1.2883e-02, 4.0939e-04, 3.0060e-04,  ..., 3.1941e-02,
          1.7272e-03, 8.5104e-03],
         [9.4637e-01, 2.2183e-04, 3.0060e-04,  ..., 8.2080e-01,
          1.7272e-03, 9.7085e-01],
         [2.7864e-02, 9.9915e-01, 9.9910e-01,  ..., 3.7325e-02,
          9.9482e-01, 1.2128e-02]],
        [[1.5514e-02, 9.8202e-05, 1.8706e-04,  ..., 4.3763e-03,
          5.3577e-03, 9.9993e-01],
         [1.5514e-02, 9.8202e-05, 1.8706e-04,  ..., 4.2170e-03,
          5.3577e-03, 2.4148e-05],
         [9.3227e-01, 9.8202e-05, 1.8706e-04,  ..., 9.8719e-01,
          9.8393e-01, 2.4148e-05],
         [3.6704e-02, 9.9971e-01, 9.9944e-01,  ..., 4.2170e-03,
          5.3577e-03, 2.4148e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:32,392 [Process: 0] Synchronize training processes
2024-08-18 19:53:32,392 [Process: 0] Evaluating...
2024-08-18 19:53:32,394 [Process: 0] EPOCH 458:
2024-08-18 19:53:32,396 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:33,538 [Process: 0] Synchronize training processes
2024-08-18 19:53:33,538 [Process: 0] Evaluating...
2024-08-18 19:53:33,540 [Process: 0] EPOCH 459:
2024-08-18 19:53:33,542 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 459:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9643e-01, 5.9894e-04, 6.4455e-03,  ..., 9.9889e-01,
          7.4150e-01, 4.7235e-03],
         [1.6564e-03, 5.9894e-04, 5.3686e-03,  ..., 3.6853e-04,
          3.4302e-02, 4.3525e-03],
         [1.0846e-03, 5.9894e-04, 6.3866e-03,  ..., 3.6853e-04,
          5.1062e-02, 5.7582e-03],
         [8.2657e-04, 9.9820e-01, 9.8180e-01,  ..., 3.6853e-04,
          1.7313e-01, 9.8517e-01]],
        [[9.4500e-01, 2.2624e-03, 1.3087e-03,  ..., 3.2223e-03,
          2.2709e-03, 5.3246e-04],
         [1.1309e-02, 2.5503e-03, 1.3087e-03,  ..., 3.2223e-03,
          2.2709e-03, 5.3246e-04],
         [1.8593e-02, 2.2624e-03, 1.3087e-03,  ..., 4.1857e-03,
          9.9319e-01, 9.9840e-01],
         [2.5103e-02, 9.9292e-01, 9.9607e-01,  ..., 9.8937e-01,
          2.2709e-03, 5.3246e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8360e-03, 2.7750e-04, 4.1681e-04,  ..., 2.3119e-03,
          3.1126e-04, 2.9777e-03],
         [1.8360e-03, 5.6730e-04, 4.9080e-04,  ..., 2.3119e-03,
          3.1126e-04, 2.9777e-03],
         [9.9449e-01, 2.7750e-04, 4.1681e-04,  ..., 9.9306e-01,
          3.1126e-04, 9.9107e-01],
         [1.8360e-03, 9.9888e-01, 9.9868e-01,  ..., 2.3119e-03,
          9.9907e-01, 2.9777e-03]],
        [[1.1726e-03, 1.7778e-03, 7.2390e-04,  ..., 4.7349e-03,
          1.6809e-03, 9.9963e-01],
         [1.1726e-03, 1.7778e-03, 4.4148e-04,  ..., 4.7349e-03,
          1.6809e-03, 1.2477e-04],
         [9.9648e-01, 1.7778e-03, 4.4148e-04,  ..., 9.8580e-01,
          9.9496e-01, 1.2477e-04],
         [1.1726e-03, 9.9467e-01, 9.9839e-01,  ..., 4.7349e-03,
          1.6809e-03, 1.2477e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 460:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.2757e-01, 4.0657e-04, 2.3781e-03,  ..., 9.9980e-01,
          4.6120e-01, 2.3047e-03],
         [1.2171e-02, 3.7045e-04, 2.3781e-03,  ..., 6.6116e-05,
          4.2758e-02, 2.3047e-03],
         [1.4808e-01, 3.7045e-04, 2.3781e-03,  ..., 6.6116e-05,
          5.5061e-02, 2.3047e-03],
         [1.2171e-02, 9.9885e-01, 9.9287e-01,  ..., 6.6116e-05,
          4.4098e-01, 9.9309e-01]],
        [[9.9490e-01, 8.4234e-04, 1.2522e-03,  ..., 5.0321e-03,
          6.3592e-05, 9.5884e-05],
         [1.7003e-03, 8.4234e-04, 1.2522e-03,  ..., 5.4929e-03,
          6.3592e-05, 9.5884e-05],
         [1.7003e-03, 8.4234e-04, 1.2522e-03,  ..., 5.7770e-03,
          9.9981e-01, 9.9971e-01],
         [1.7003e-03, 9.9747e-01, 9.9624e-01,  ..., 9.8370e-01,
          6.3592e-05, 9.5884e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:34,687 [Process: 0] Synchronize training processes
2024-08-18 19:53:34,687 [Process: 0] Evaluating...
2024-08-18 19:53:34,689 [Process: 0] EPOCH 460:
2024-08-18 19:53:34,691 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:35,833 [Process: 0] Synchronize training processes
2024-08-18 19:53:35,833 [Process: 0] Evaluating...
2024-08-18 19:53:35,835 [Process: 0] EPOCH 461:
2024-08-18 19:53:35,837 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3880e-03, 1.0268e-03, 2.7040e-03,  ..., 8.3584e-03,
          3.1004e-04, 2.5915e-03],
         [2.3880e-03, 1.0268e-03, 6.9164e-03,  ..., 8.3584e-03,
          3.1004e-04, 2.5915e-03],
         [9.9284e-01, 1.0268e-03, 2.7040e-03,  ..., 9.7388e-01,
          3.1004e-04, 9.9223e-01],
         [2.3880e-03, 9.9692e-01, 9.8768e-01,  ..., 9.4067e-03,
          9.9907e-01, 2.5915e-03]],
        [[1.7392e-02, 4.5475e-04, 9.0350e-04,  ..., 8.3679e-03,
          1.9616e-03, 9.9975e-01],
         [1.7392e-02, 4.5475e-04, 9.0350e-04,  ..., 8.2527e-03,
          1.9616e-03, 8.4913e-05],
         [9.1363e-01, 4.5475e-04, 9.0350e-04,  ..., 9.7478e-01,
          9.9412e-01, 8.4913e-05],
         [5.1584e-02, 9.9864e-01, 9.9729e-01,  ..., 8.6026e-03,
          1.9616e-03, 8.4913e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 461:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4040e-01, 2.2615e-03, 2.2711e-03,  ..., 9.8750e-01,
          9.5255e-01, 9.1484e-04],
         [9.3809e-02, 2.2609e-03, 2.2711e-03,  ..., 3.5616e-03,
          8.5700e-03, 9.1484e-04],
         [3.4045e-01, 2.2609e-03, 2.7834e-03,  ..., 5.2296e-03,
          8.5700e-03, 9.1484e-04],
         [2.5344e-02, 9.9322e-01, 9.9267e-01,  ..., 3.7122e-03,
          3.0306e-02, 9.9726e-01]],
        [[9.9932e-01, 2.9139e-03, 8.9294e-04,  ..., 3.0690e-03,
          5.8575e-04, 8.3062e-04],
         [2.2723e-04, 2.9139e-03, 8.9294e-04,  ..., 3.0690e-03,
          5.8575e-04, 8.3062e-04],
         [2.2723e-04, 2.9139e-03, 8.9294e-04,  ..., 3.3709e-03,
          9.9824e-01, 9.9751e-01],
         [2.2723e-04, 9.9126e-01, 9.9732e-01,  ..., 9.9049e-01,
          5.8575e-04, 8.3062e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1813e-03, 7.6262e-04, 2.3979e-03,  ..., 9.1764e-03,
          1.3464e-04, 2.5722e-03],
         [3.1813e-03, 7.6262e-04, 2.3979e-03,  ..., 9.1764e-03,
          1.3464e-04, 2.5722e-03],
         [9.9046e-01, 7.6262e-04, 2.3979e-03,  ..., 9.7138e-01,
          1.3464e-04, 9.9228e-01],
         [3.1813e-03, 9.9771e-01, 9.9281e-01,  ..., 1.0266e-02,
          9.9960e-01, 2.5722e-03]],
        [[4.8433e-03, 7.5534e-05, 3.9438e-04,  ..., 4.3325e-03,
          1.9092e-03, 9.9460e-01],
         [4.8433e-03, 7.5534e-05, 3.9438e-04,  ..., 4.3325e-03,
          1.9092e-03, 1.8003e-03],
         [9.8338e-01, 7.5534e-05, 3.9438e-04,  ..., 9.8700e-01,
          9.9427e-01, 1.8003e-03],
         [6.9349e-03, 9.9977e-01, 9.9882e-01,  ..., 4.3325e-03,
          1.9092e-03, 1.8003e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 462:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5690e-01, 9.0376e-04, 7.2576e-04,  ..., 9.9373e-01,
          9.7832e-01, 2.7167e-03],
         [4.3517e-03, 9.0376e-04, 7.2576e-04,  ..., 1.7590e-03,
          5.1737e-03, 2.7167e-03],
         [3.4400e-02, 9.0376e-04, 7.2576e-04,  ..., 2.7545e-03,
          5.1737e-03, 2.7167e-03],
         [4.3517e-03, 9.9729e-01, 9.9782e-01,  ..., 1.7590e-03,
          1.1334e-02, 9.9185e-01]],
        [[9.9429e-01, 6.1786e-03, 1.7819e-03,  ..., 3.3096e-03,
          9.7879e-04, 1.3794e-04],
         [1.3273e-03, 6.1786e-03, 1.7819e-03,  ..., 3.3096e-03,
          9.7879e-04, 1.3794e-04],
         [3.0527e-03, 7.8111e-03, 1.7819e-03,  ..., 3.6064e-03,
          9.9706e-01, 9.9959e-01],
         [1.3273e-03, 9.7983e-01, 9.9465e-01,  ..., 9.8977e-01,
          9.7879e-04, 1.3794e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:36,982 [Process: 0] Synchronize training processes
2024-08-18 19:53:36,982 [Process: 0] Evaluating...
2024-08-18 19:53:36,988 [Process: 0] EPOCH 462:
2024-08-18 19:53:36,990 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:38,131 [Process: 0] Synchronize training processes
2024-08-18 19:53:38,131 [Process: 0] Evaluating...
2024-08-18 19:53:38,133 [Process: 0] EPOCH 463:
2024-08-18 19:53:38,134 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2442e-03, 6.7539e-05, 4.1125e-03,  ..., 1.9132e-03,
          1.3499e-03, 1.2972e-03],
         [2.2442e-03, 6.7539e-05, 6.4849e-03,  ..., 1.9132e-03,
          1.3499e-03, 1.2972e-03],
         [9.9327e-01, 6.7539e-05, 4.1125e-03,  ..., 9.9426e-01,
          1.3499e-03, 9.9611e-01],
         [2.2442e-03, 9.9980e-01, 9.8529e-01,  ..., 1.9132e-03,
          9.9595e-01, 1.2972e-03]],
        [[1.4992e-03, 5.4071e-05, 1.2827e-03,  ..., 8.7687e-03,
          4.7793e-03, 9.9999e-01],
         [1.4992e-03, 5.4071e-05, 1.2827e-03,  ..., 8.7687e-03,
          4.7793e-03, 3.0454e-06],
         [9.9550e-01, 5.4071e-05, 1.2827e-03,  ..., 9.7311e-01,
          9.8566e-01, 3.0454e-06],
         [1.4992e-03, 9.9984e-01, 9.9615e-01,  ..., 9.3562e-03,
          4.7793e-03, 3.0454e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 463:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9485e-01, 1.7171e-03, 4.1920e-03,  ..., 9.9838e-01,
          9.9608e-01, 1.7962e-03],
         [8.2663e-04, 1.7171e-03, 4.1920e-03,  ..., 7.1510e-04,
          1.1959e-03, 1.4759e-03],
         [3.4961e-03, 1.7171e-03, 4.7193e-03,  ..., 4.5234e-04,
          1.1959e-03, 1.4759e-03],
         [8.2663e-04, 9.9485e-01, 9.8690e-01,  ..., 4.5234e-04,
          1.5300e-03, 9.9525e-01]],
        [[9.9107e-01, 2.9037e-03, 3.8463e-03,  ..., 4.4954e-03,
          3.3827e-04, 9.4497e-04],
         [2.3145e-03, 2.9037e-03, 3.1941e-03,  ..., 3.0133e-03,
          3.3827e-04, 9.4497e-04],
         [4.3057e-03, 3.0584e-03, 3.1941e-03,  ..., 4.1212e-03,
          9.9899e-01, 9.9717e-01],
         [2.3145e-03, 9.9113e-01, 9.8977e-01,  ..., 9.8837e-01,
          3.3827e-04, 9.4497e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3558e-03, 6.5065e-05, 1.0272e-03,  ..., 5.1251e-03,
          7.4015e-04, 3.5200e-03],
         [1.3558e-03, 6.5065e-05, 1.0272e-03,  ..., 5.1251e-03,
          7.4015e-04, 3.5200e-03],
         [9.9593e-01, 6.5065e-05, 1.0272e-03,  ..., 9.8462e-01,
          7.4015e-04, 9.8944e-01],
         [1.3558e-03, 9.9980e-01, 9.9692e-01,  ..., 5.1251e-03,
          9.9778e-01, 3.5200e-03]],
        [[1.9220e-04, 1.6153e-04, 1.3083e-04,  ..., 8.5682e-03,
          3.2205e-03, 9.9955e-01],
         [1.9220e-04, 1.6153e-04, 1.3083e-04,  ..., 8.5682e-03,
          3.2205e-03, 1.4962e-04],
         [9.9942e-01, 1.6153e-04, 1.3083e-04,  ..., 9.7331e-01,
          9.9034e-01, 1.4962e-04],
         [1.9220e-04, 9.9952e-01, 9.9961e-01,  ..., 9.5519e-03,
          3.2205e-03, 1.4962e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 464:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:39,274 [Process: 0] Synchronize training processes
2024-08-18 19:53:39,274 [Process: 0] Evaluating...
2024-08-18 19:53:39,276 [Process: 0] EPOCH 464:
2024-08-18 19:53:39,278 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8959e-01, 2.3783e-03, 3.5138e-04,  ..., 9.9660e-01,
          9.9911e-01, 1.3969e-03],
         [2.3226e-03, 2.3783e-03, 3.5138e-04,  ..., 1.1016e-03,
          2.9558e-04, 1.3969e-03],
         [5.7652e-03, 2.3783e-03, 3.5138e-04,  ..., 1.1946e-03,
          2.9558e-04, 1.3969e-03],
         [2.3226e-03, 9.9287e-01, 9.9895e-01,  ..., 1.1016e-03,
          2.9558e-04, 9.9581e-01]],
        [[9.9821e-01, 5.2083e-03, 1.8736e-03,  ..., 3.2012e-03,
          4.2139e-04, 6.2184e-04],
         [5.9507e-04, 5.2083e-03, 1.8736e-03,  ..., 3.2012e-03,
          4.2139e-04, 6.2184e-04],
         [5.9507e-04, 6.5595e-03, 1.8736e-03,  ..., 3.2012e-03,
          9.9874e-01, 9.9813e-01],
         [5.9507e-04, 9.8302e-01, 9.9438e-01,  ..., 9.9040e-01,
          4.2139e-04, 6.2184e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4364e-03, 2.2152e-05, 2.6083e-03,  ..., 2.2366e-03,
          7.6151e-04, 6.4757e-03],
         [5.4364e-03, 2.2152e-05, 2.6083e-03,  ..., 2.2366e-03,
          7.6151e-04, 6.3244e-03],
         [9.8369e-01, 2.2152e-05, 2.6083e-03,  ..., 9.9329e-01,
          7.6151e-04, 9.8088e-01],
         [5.4364e-03, 9.9993e-01, 9.9218e-01,  ..., 2.2366e-03,
          9.9772e-01, 6.3244e-03]],
        [[1.4369e-03, 1.7881e-04, 2.5748e-04,  ..., 5.3278e-03,
          1.5668e-03, 9.9915e-01],
         [1.4369e-03, 1.7881e-04, 2.5748e-04,  ..., 5.3278e-03,
          1.5668e-03, 3.4865e-04],
         [9.9569e-01, 1.7881e-04, 2.5748e-04,  ..., 9.8402e-01,
          9.9530e-01, 2.5123e-04],
         [1.4369e-03, 9.9946e-01, 9.9923e-01,  ..., 5.3278e-03,
          1.5668e-03, 2.5123e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 465:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2833e-01, 8.1133e-04, 1.8082e-03,  ..., 9.9996e-01,
          9.9521e-01, 1.5808e-03],
         [7.9165e-03, 8.1133e-04, 1.5936e-03,  ..., 1.3874e-05,
          1.5955e-03, 1.5808e-03],
         [5.5833e-02, 8.1133e-04, 1.5936e-03,  ..., 1.3874e-05,
          1.5955e-03, 1.5808e-03],
         [7.9165e-03, 9.9757e-01, 9.9500e-01,  ..., 1.3874e-05,
          1.5955e-03, 9.9526e-01]],
        [[9.9639e-01, 1.7072e-03, 1.9124e-03,  ..., 5.2621e-03,
          6.9901e-04, 3.6145e-04],
         [1.1967e-03, 1.7072e-03, 1.5125e-03,  ..., 5.1964e-03,
          6.9901e-04, 3.6145e-04],
         [1.2208e-03, 1.7072e-03, 1.5125e-03,  ..., 5.6406e-03,
          9.9790e-01, 9.9892e-01],
         [1.1967e-03, 9.9488e-01, 9.9506e-01,  ..., 9.8390e-01,
          6.9901e-04, 3.6145e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6251e-03, 1.8111e-03, 1.4309e-03,  ..., 1.7221e-03,
          7.0468e-04, 1.4854e-03],
         [1.6251e-03, 1.1960e-03, 1.4309e-03,  ..., 1.7221e-03,
          7.0468e-04, 1.4854e-03],
         [9.9512e-01, 1.1960e-03, 1.4309e-03,  ..., 9.9483e-01,
          7.0468e-04, 9.9554e-01],
         [1.6251e-03, 9.9580e-01, 9.9571e-01,  ..., 1.7221e-03,
          9.9789e-01, 1.4854e-03]],
        [[1.8733e-04, 1.2024e-03, 4.2035e-04,  ..., 1.2922e-02,
          2.0388e-02, 9.9980e-01],
         [1.8733e-04, 1.2024e-03, 4.2035e-04,  ..., 1.2122e-02,
          1.2808e-02, 6.5473e-05],
         [9.9944e-01, 1.2024e-03, 4.2035e-04,  ..., 9.6017e-01,
          9.5310e-01, 6.5473e-05],
         [1.8733e-04, 9.9639e-01, 9.9874e-01,  ..., 1.4786e-02,
          1.3706e-02, 6.5473e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:40,419 [Process: 0] Synchronize training processes
2024-08-18 19:53:40,419 [Process: 0] Evaluating...
2024-08-18 19:53:40,421 [Process: 0] EPOCH 465:
2024-08-18 19:53:40,423 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:41,562 [Process: 0] Synchronize training processes
2024-08-18 19:53:41,562 [Process: 0] Evaluating...
2024-08-18 19:53:41,564 [Process: 0] EPOCH 466:
2024-08-18 19:53:41,566 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 466:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6787e-01, 7.0076e-03, 5.6588e-03,  ..., 9.9964e-01,
          9.7962e-01, 3.7917e-03],
         [2.0732e-03, 6.7394e-03, 8.9782e-03,  ..., 1.2052e-04,
          5.1829e-03, 3.1156e-03],
         [2.7981e-02, 7.4182e-03, 6.8893e-03,  ..., 1.2052e-04,
          5.8819e-03, 3.1156e-03],
         [2.0732e-03, 9.7883e-01, 9.7847e-01,  ..., 1.2052e-04,
          9.3180e-03, 9.8998e-01]],
        [[9.9974e-01, 7.7525e-04, 2.8506e-03,  ..., 1.6592e-03,
          7.0242e-04, 3.0694e-04],
         [8.5870e-05, 7.7525e-04, 2.8506e-03,  ..., 1.6592e-03,
          7.0242e-04, 3.0694e-04],
         [8.5870e-05, 7.7525e-04, 3.5077e-03,  ..., 1.6592e-03,
          9.9789e-01, 9.9908e-01],
         [8.5870e-05, 9.9767e-01, 9.9079e-01,  ..., 9.9502e-01,
          7.0242e-04, 3.0694e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7367e-03, 2.1955e-03, 3.8959e-03,  ..., 5.2272e-03,
          9.3209e-04, 1.4755e-02],
         [3.7367e-03, 2.9548e-03, 8.8261e-03,  ..., 5.2272e-03,
          9.3209e-04, 1.1713e-02],
         [9.8879e-01, 2.1955e-03, 3.8959e-03,  ..., 9.8381e-01,
          9.3209e-04, 9.5930e-01],
         [3.7367e-03, 9.9265e-01, 9.8338e-01,  ..., 5.7399e-03,
          9.9720e-01, 1.4232e-02]],
        [[1.8227e-03, 2.7057e-03, 8.3471e-04,  ..., 6.2374e-03,
          3.4798e-03, 9.9441e-01],
         [1.8227e-03, 2.7057e-03, 8.3471e-04,  ..., 6.2374e-03,
          3.4798e-03, 1.6654e-03],
         [9.9453e-01, 2.7057e-03, 8.3471e-04,  ..., 9.7973e-01,
          9.8956e-01, 1.6654e-03],
         [1.8227e-03, 9.9188e-01, 9.9750e-01,  ..., 7.7985e-03,
          3.4798e-03, 2.2591e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 467:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7115e-01, 2.3637e-03, 4.5725e-03,  ..., 9.9908e-01,
          9.9673e-01, 3.5318e-04],
         [3.7698e-03, 2.3637e-03, 4.5725e-03,  ..., 3.0611e-04,
          9.3747e-04, 3.5318e-04],
         [2.1435e-02, 2.5561e-03, 4.7457e-03,  ..., 3.0611e-04,
          9.3747e-04, 3.5318e-04],
         [3.6453e-03, 9.9272e-01, 9.8611e-01,  ..., 3.0611e-04,
          1.3930e-03, 9.9894e-01]],
        [[9.9279e-01, 1.7450e-03, 1.5026e-03,  ..., 8.2472e-03,
          1.5614e-04, 5.0271e-04],
         [2.2999e-03, 1.7450e-03, 1.5026e-03,  ..., 8.2472e-03,
          1.5614e-04, 5.0271e-04],
         [2.6142e-03, 1.7450e-03, 1.5026e-03,  ..., 1.2933e-02,
          9.9953e-01, 9.9849e-01],
         [2.2999e-03, 9.9476e-01, 9.9549e-01,  ..., 9.7057e-01,
          1.5614e-04, 5.0271e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:42,707 [Process: 0] Synchronize training processes
2024-08-18 19:53:42,708 [Process: 0] Evaluating...
2024-08-18 19:53:42,709 [Process: 0] EPOCH 467:
2024-08-18 19:53:42,712 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:43,844 [Process: 0] Synchronize training processes
2024-08-18 19:53:43,845 [Process: 0] Evaluating...
2024-08-18 19:53:43,846 [Process: 0] EPOCH 468:
2024-08-18 19:53:43,848 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7073e-03, 3.6497e-04, 9.4501e-04,  ..., 8.0044e-03,
          1.3500e-03, 2.5842e-02],
         [3.7073e-03, 3.6497e-04, 9.4501e-04,  ..., 8.0044e-03,
          1.3500e-03, 1.6717e-02],
         [9.8888e-01, 3.6497e-04, 9.4501e-04,  ..., 9.7475e-01,
          1.3500e-03, 9.3715e-01],
         [3.7073e-03, 9.9891e-01, 9.9716e-01,  ..., 9.2453e-03,
          9.9595e-01, 2.0294e-02]],
        [[7.0657e-04, 2.3187e-04, 1.2105e-03,  ..., 6.0603e-03,
          1.9120e-03, 9.9886e-01],
         [7.0657e-04, 2.3187e-04, 1.2105e-03,  ..., 6.0603e-03,
          1.9120e-03, 3.8144e-04],
         [9.9788e-01, 2.3187e-04, 1.2105e-03,  ..., 9.8182e-01,
          9.9426e-01, 3.8144e-04],
         [7.0657e-04, 9.9930e-01, 9.9637e-01,  ..., 6.0603e-03,
          1.9120e-03, 3.8144e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 468:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6923e-01, 2.3620e-03, 1.4020e-03,  ..., 9.9323e-01,
          3.3341e-01, 6.2343e-04],
         [5.8009e-03, 2.2727e-03, 1.4020e-03,  ..., 2.0090e-03,
          4.2216e-02, 6.2343e-04],
         [1.9169e-02, 2.2727e-03, 1.4020e-03,  ..., 2.7558e-03,
          7.8880e-02, 6.2343e-04],
         [5.8009e-03, 9.9309e-01, 9.9579e-01,  ..., 2.0090e-03,
          5.4549e-01, 9.9813e-01]],
        [[9.9731e-01, 3.4814e-03, 1.2697e-02,  ..., 2.9630e-03,
          8.8535e-04, 5.8651e-04],
         [7.8488e-04, 3.4814e-03, 1.1987e-02,  ..., 2.9630e-03,
          8.8535e-04, 5.8651e-04],
         [1.1222e-03, 3.5437e-03, 1.6232e-02,  ..., 2.9630e-03,
          9.9734e-01, 9.9824e-01],
         [7.8488e-04, 9.8949e-01, 9.5908e-01,  ..., 9.9111e-01,
          8.8535e-04, 5.8651e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8889e-03, 8.6189e-04, 7.3330e-04,  ..., 2.6995e-03,
          2.9785e-04, 1.0049e-03],
         [3.8889e-03, 8.6189e-04, 7.3330e-04,  ..., 2.6995e-03,
          2.9785e-04, 1.0049e-03],
         [9.8833e-01, 8.6189e-04, 7.3330e-04,  ..., 9.9190e-01,
          2.9785e-04, 9.9699e-01],
         [3.8889e-03, 9.9741e-01, 9.9780e-01,  ..., 2.6995e-03,
          9.9911e-01, 1.0049e-03]],
        [[1.2104e-04, 1.6552e-03, 6.8416e-03,  ..., 6.8226e-03,
          4.3552e-03, 9.9980e-01],
         [1.2104e-04, 1.8238e-03, 6.8416e-03,  ..., 6.8226e-03,
          4.3155e-03, 6.6751e-05],
         [9.9964e-01, 1.6552e-03, 1.2065e-02,  ..., 9.7953e-01,
          9.8701e-01, 6.6751e-05],
         [1.2104e-04, 9.9487e-01, 9.7425e-01,  ..., 6.8226e-03,
          4.3155e-03, 6.6751e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 469:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.2774e-01, 1.1274e-03, 2.8765e-03,  ..., 9.9672e-01,
          9.9780e-01, 7.5299e-04],
         [1.1282e-02, 1.1274e-03, 2.8765e-03,  ..., 1.0744e-03,
          7.3224e-04, 7.5299e-04],
         [3.5115e-01, 1.1274e-03, 2.8765e-03,  ..., 1.1309e-03,
          7.3224e-04, 7.5299e-04],
         [9.8355e-03, 9.9662e-01, 9.9137e-01,  ..., 1.0744e-03,
          7.3224e-04, 9.9774e-01]],
        [[9.8779e-01, 8.6518e-02, 3.4840e-02,  ..., 8.6119e-03,
          1.2627e-03, 4.4455e-05],
         [2.0466e-03, 1.9292e-01, 8.8983e-01,  ..., 7.9519e-03,
          1.2627e-03, 4.4455e-05],
         [8.1178e-03, 1.5250e-01, 2.6965e-02,  ..., 8.4178e-03,
          9.9621e-01, 9.9987e-01],
         [2.0466e-03, 5.6806e-01, 4.8366e-02,  ..., 9.7502e-01,
          1.2627e-03, 4.4455e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:44,994 [Process: 0] Synchronize training processes
2024-08-18 19:53:44,994 [Process: 0] Evaluating...
2024-08-18 19:53:44,996 [Process: 0] EPOCH 469:
2024-08-18 19:53:44,998 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:46,142 [Process: 0] Synchronize training processes
2024-08-18 19:53:46,142 [Process: 0] Evaluating...
2024-08-18 19:53:46,144 [Process: 0] EPOCH 470:
2024-08-18 19:53:46,145 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.2205e-03, 2.2593e-04, 2.0190e-03,  ..., 2.1935e-03,
          5.7306e-04, 3.6519e-03],
         [8.2205e-03, 3.3661e-04, 2.0190e-03,  ..., 2.1935e-03,
          5.7306e-04, 3.1447e-03],
         [9.7203e-01, 2.2593e-04, 2.0190e-03,  ..., 9.9342e-01,
          5.7306e-04, 9.9006e-01],
         [1.1532e-02, 9.9921e-01, 9.9394e-01,  ..., 2.1935e-03,
          9.9828e-01, 3.1447e-03]],
        [[5.3429e-04, 2.2560e-04, 1.2976e-05,  ..., 6.2658e-03,
          1.3749e-03, 9.9658e-01],
         [5.3429e-04, 2.2560e-04, 1.2976e-05,  ..., 6.2658e-03,
          1.3749e-03, 9.9939e-04],
         [9.9840e-01, 2.2560e-04, 1.2976e-05,  ..., 9.8120e-01,
          9.9588e-01, 9.9939e-04],
         [5.3429e-04, 9.9932e-01, 9.9996e-01,  ..., 6.2658e-03,
          1.3749e-03, 1.4258e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 470:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9750e-01, 2.4970e-03, 1.7184e-02,  ..., 9.9946e-01,
          9.7823e-01, 1.6584e-03],
         [5.7075e-04, 2.4970e-03, 1.2336e-02,  ..., 1.8134e-04,
          4.1196e-03, 1.6584e-03],
         [1.3549e-03, 2.4970e-03, 2.3780e-02,  ..., 1.8134e-04,
          1.3530e-02, 1.6584e-03],
         [5.7075e-04, 9.9251e-01, 9.4670e-01,  ..., 1.8134e-04,
          4.1196e-03, 9.9502e-01]],
        [[9.9914e-01, 7.5310e-03, 1.3816e-03,  ..., 8.2706e-03,
          7.9538e-04, 8.3879e-04],
         [2.8779e-04, 7.5210e-03, 1.3816e-03,  ..., 8.2706e-03,
          7.9538e-04, 8.3879e-04],
         [2.8779e-04, 1.4708e-02, 1.3816e-03,  ..., 1.0110e-02,
          9.9761e-01, 9.9748e-01],
         [2.8779e-04, 9.7024e-01, 9.9586e-01,  ..., 9.7335e-01,
          7.9538e-04, 8.3879e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1059e-03, 6.1400e-04, 6.4580e-04,  ..., 2.2025e-03,
          1.3776e-04, 4.3379e-03],
         [3.1059e-03, 6.1400e-04, 6.4580e-04,  ..., 2.2025e-03,
          1.3776e-04, 4.3379e-03],
         [9.9068e-01, 6.1400e-04, 6.4580e-04,  ..., 9.9339e-01,
          1.3776e-04, 9.8699e-01],
         [3.1059e-03, 9.9816e-01, 9.9806e-01,  ..., 2.2025e-03,
          9.9959e-01, 4.3379e-03]],
        [[2.0569e-03, 9.2062e-05, 4.3224e-04,  ..., 9.4772e-03,
          7.0379e-04, 9.9930e-01],
         [2.0569e-03, 9.2062e-05, 4.3224e-04,  ..., 9.4772e-03,
          7.0379e-04, 2.3423e-04],
         [9.9383e-01, 9.2062e-05, 4.3224e-04,  ..., 9.6910e-01,
          9.9789e-01, 2.3423e-04],
         [2.0569e-03, 9.9972e-01, 9.9870e-01,  ..., 1.1943e-02,
          7.0379e-04, 2.3423e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 471:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:47,291 [Process: 0] Synchronize training processes
2024-08-18 19:53:47,291 [Process: 0] Evaluating...
2024-08-18 19:53:47,293 [Process: 0] EPOCH 471:
2024-08-18 19:53:47,295 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9877e-01, 3.9498e-03, 6.7399e-03,  ..., 9.9891e-01,
          9.9865e-01, 2.0559e-03],
         [2.9621e-04, 3.9498e-03, 6.7399e-03,  ..., 3.6287e-04,
          4.0219e-04, 2.0559e-03],
         [6.3911e-04, 3.9498e-03, 1.0870e-02,  ..., 3.6287e-04,
          5.4583e-04, 2.0559e-03],
         [2.9621e-04, 9.8815e-01, 9.7565e-01,  ..., 3.6287e-04,
          4.0219e-04, 9.9383e-01]],
        [[9.9521e-01, 1.4277e-03, 8.8265e-03,  ..., 4.4789e-03,
          1.1323e-03, 6.9333e-05],
         [1.3751e-03, 1.4277e-03, 6.8261e-03,  ..., 4.4789e-03,
          1.1323e-03, 6.9333e-05],
         [1.3751e-03, 1.4277e-03, 8.1717e-03,  ..., 4.5740e-03,
          9.9660e-01, 9.9979e-01],
         [2.0425e-03, 9.9572e-01, 9.7618e-01,  ..., 9.8647e-01,
          1.1323e-03, 6.9333e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5180e-03, 2.9371e-04, 2.2839e-04,  ..., 1.4950e-03,
          3.9663e-04, 4.1668e-03],
         [8.2620e-03, 2.9371e-04, 2.2839e-04,  ..., 1.4950e-03,
          3.9663e-04, 4.1668e-03],
         [9.7396e-01, 2.9371e-04, 2.2839e-04,  ..., 9.9552e-01,
          3.9663e-04, 9.8750e-01],
         [8.2620e-03, 9.9912e-01, 9.9931e-01,  ..., 1.4950e-03,
          9.9881e-01, 4.1668e-03]],
        [[5.9653e-04, 1.8063e-04, 2.2570e-04,  ..., 7.3850e-03,
          3.9759e-03, 9.9896e-01],
         [5.9653e-04, 1.8063e-04, 3.5537e-04,  ..., 6.4634e-03,
          3.9759e-03, 3.4422e-04],
         [9.9821e-01, 1.8063e-04, 2.2570e-04,  ..., 9.7969e-01,
          9.8807e-01, 3.4422e-04],
         [5.9653e-04, 9.9946e-01, 9.9919e-01,  ..., 6.4634e-03,
          3.9759e-03, 3.5149e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 472:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9749e-01, 1.3544e-03, 8.7273e-04,  ..., 9.8232e-01,
          9.9643e-01, 1.4305e-03],
         [9.3543e-04, 1.5556e-03, 8.7273e-04,  ..., 4.3141e-03,
          1.1917e-03, 1.4305e-03],
         [8.1300e-04, 1.3544e-03, 8.7273e-04,  ..., 4.8235e-03,
          1.1917e-03, 1.4305e-03],
         [7.5734e-04, 9.9574e-01, 9.9738e-01,  ..., 8.5387e-03,
          1.1917e-03, 9.9571e-01]],
        [[9.9035e-01, 4.4095e-03, 1.4387e-03,  ..., 1.7563e-03,
          2.4471e-04, 4.6735e-04],
         [4.7881e-03, 4.4095e-03, 1.5236e-03,  ..., 1.7563e-03,
          2.4471e-04, 4.6735e-04],
         [2.4286e-03, 6.5058e-03, 1.4387e-03,  ..., 1.7563e-03,
          9.9927e-01, 9.9860e-01],
         [2.4286e-03, 9.8468e-01, 9.9560e-01,  ..., 9.9473e-01,
          2.4471e-04, 4.6735e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.1649e-03, 8.9559e-05, 4.8391e-04,  ..., 1.9033e-03,
          5.6081e-04, 9.8301e-03],
         [5.1649e-03, 8.9559e-05, 4.8391e-04,  ..., 1.9033e-03,
          5.6081e-04, 6.9265e-03],
         [9.8442e-01, 8.9559e-05, 4.8391e-04,  ..., 9.9429e-01,
          5.6081e-04, 9.7632e-01],
         [5.2479e-03, 9.9973e-01, 9.9855e-01,  ..., 1.9033e-03,
          9.9832e-01, 6.9265e-03]],
        [[1.1323e-04, 4.3114e-05, 5.5356e-05,  ..., 6.5434e-03,
          4.1037e-03, 9.9673e-01],
         [1.1323e-04, 4.3114e-05, 5.5356e-05,  ..., 6.5434e-03,
          4.1037e-03, 9.2546e-04],
         [9.9966e-01, 4.3114e-05, 5.5356e-05,  ..., 9.8037e-01,
          9.8769e-01, 9.2546e-04],
         [1.1323e-04, 9.9987e-01, 9.9983e-01,  ..., 6.5434e-03,
          4.1037e-03, 1.4175e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:48,439 [Process: 0] Synchronize training processes
2024-08-18 19:53:48,439 [Process: 0] Evaluating...
2024-08-18 19:53:48,445 [Process: 0] EPOCH 472:
2024-08-18 19:53:48,447 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:49,591 [Process: 0] Synchronize training processes
2024-08-18 19:53:49,591 [Process: 0] Evaluating...
2024-08-18 19:53:49,593 [Process: 0] EPOCH 473:
2024-08-18 19:53:49,595 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 473:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4051e-01, 1.1385e-03, 5.5120e-03,  ..., 9.9867e-01,
          8.4485e-01, 1.2590e-03],
         [1.6459e-01, 1.1385e-03, 5.5695e-03,  ..., 4.4479e-04,
          2.0631e-02, 1.2590e-03],
         [2.9338e-01, 1.1385e-03, 7.0457e-03,  ..., 4.4479e-04,
          3.5880e-02, 1.2590e-03],
         [1.0152e-01, 9.9658e-01, 9.8187e-01,  ..., 4.4479e-04,
          9.8642e-02, 9.9622e-01]],
        [[9.9933e-01, 1.6582e-03, 7.1890e-04,  ..., 1.1419e-03,
          5.4277e-04, 8.1982e-05],
         [2.2185e-04, 1.6582e-03, 7.1890e-04,  ..., 1.1419e-03,
          7.5204e-04, 8.1982e-05],
         [2.2185e-04, 1.6582e-03, 7.1890e-04,  ..., 1.1419e-03,
          9.9816e-01, 9.9975e-01],
         [2.2185e-04, 9.9503e-01, 9.9784e-01,  ..., 9.9657e-01,
          5.4277e-04, 8.1982e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9541e-03, 2.2313e-04, 3.9612e-04,  ..., 2.8780e-03,
          8.1327e-04, 3.8305e-03],
         [2.9541e-03, 2.2313e-04, 3.9612e-04,  ..., 2.8780e-03,
          8.1327e-04, 3.8305e-03],
         [9.9114e-01, 2.2313e-04, 3.9612e-04,  ..., 9.9137e-01,
          8.1327e-04, 9.8851e-01],
         [2.9541e-03, 9.9933e-01, 9.9881e-01,  ..., 2.8780e-03,
          9.9756e-01, 3.8305e-03]],
        [[1.8992e-03, 4.8544e-04, 1.8484e-05,  ..., 1.0139e-02,
          4.0310e-03, 9.9982e-01],
         [1.8992e-03, 4.8544e-04, 1.8484e-05,  ..., 1.0139e-02,
          4.0310e-03, 6.0924e-05],
         [9.9430e-01, 4.8544e-04, 1.8484e-05,  ..., 9.6478e-01,
          9.8791e-01, 6.0924e-05],
         [1.8992e-03, 9.9854e-01, 9.9994e-01,  ..., 1.4940e-02,
          4.0310e-03, 6.0924e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 474:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9369e-01, 2.8688e-03, 2.2149e-03,  ..., 9.9829e-01,
          9.1646e-01, 3.6026e-03],
         [2.4838e-03, 2.8688e-03, 2.2149e-03,  ..., 6.1287e-04,
          1.0868e-02, 3.6026e-03],
         [2.2962e-03, 3.0047e-03, 2.2149e-03,  ..., 5.5056e-04,
          1.0868e-02, 3.6026e-03],
         [1.5330e-03, 9.9126e-01, 9.9336e-01,  ..., 5.5056e-04,
          6.1807e-02, 9.8919e-01]],
        [[9.8722e-01, 1.9292e-03, 2.7870e-03,  ..., 3.0921e-03,
          7.1765e-04, 1.9208e-03],
         [3.2315e-03, 1.9292e-03, 2.3565e-03,  ..., 3.0921e-03,
          7.1765e-04, 1.9208e-03],
         [3.4493e-03, 1.9292e-03, 2.9935e-03,  ..., 3.0921e-03,
          9.9785e-01, 9.9424e-01],
         [6.0985e-03, 9.9421e-01, 9.9186e-01,  ..., 9.9072e-01,
          7.1765e-04, 1.9208e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:50,735 [Process: 0] Synchronize training processes
2024-08-18 19:53:50,736 [Process: 0] Evaluating...
2024-08-18 19:53:50,737 [Process: 0] EPOCH 474:
2024-08-18 19:53:50,739 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:51,889 [Process: 0] Synchronize training processes
2024-08-18 19:53:51,890 [Process: 0] Evaluating...
2024-08-18 19:53:51,891 [Process: 0] EPOCH 475:
2024-08-18 19:53:51,893 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4762e-03, 7.4124e-05, 9.9211e-05,  ..., 5.9021e-03,
          2.1053e-04, 4.0725e-03],
         [3.1687e-03, 7.4124e-05, 9.9211e-05,  ..., 5.9021e-03,
          2.1053e-04, 3.0345e-03],
         [9.9019e-01, 7.4124e-05, 9.9211e-05,  ..., 9.8229e-01,
          2.1053e-04, 9.8986e-01],
         [3.1687e-03, 9.9978e-01, 9.9970e-01,  ..., 5.9021e-03,
          9.9937e-01, 3.0345e-03]],
        [[1.5277e-04, 3.6932e-04, 3.5669e-05,  ..., 1.3233e-02,
          9.2102e-03, 9.9687e-01],
         [1.5277e-04, 3.6932e-04, 3.5669e-05,  ..., 9.0412e-03,
          5.3284e-03, 9.7331e-04],
         [9.9954e-01, 3.6932e-04, 3.5669e-05,  ..., 9.6868e-01,
          9.8013e-01, 9.7331e-04],
         [1.5277e-04, 9.9889e-01, 9.9989e-01,  ..., 9.0412e-03,
          5.3284e-03, 1.1871e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 475:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9741e-01, 2.7054e-03, 2.9265e-03,  ..., 9.9802e-01,
          9.9790e-01, 1.0595e-03],
         [4.6229e-04, 2.7054e-03, 2.9265e-03,  ..., 6.6049e-04,
          6.9841e-04, 1.0595e-03],
         [1.6671e-03, 2.7054e-03, 2.9265e-03,  ..., 6.6049e-04,
          6.9841e-04, 1.0595e-03],
         [4.6229e-04, 9.9188e-01, 9.9122e-01,  ..., 6.6049e-04,
          6.9841e-04, 9.9682e-01]],
        [[9.9912e-01, 1.8619e-03, 1.9548e-03,  ..., 6.0933e-03,
          1.0484e-03, 8.8615e-05],
         [2.9239e-04, 1.8619e-03, 1.9548e-03,  ..., 5.7851e-03,
          1.0484e-03, 8.8615e-05],
         [2.9239e-04, 1.8619e-03, 1.9548e-03,  ..., 8.8602e-03,
          9.9685e-01, 9.9973e-01],
         [2.9239e-04, 9.9441e-01, 9.9414e-01,  ..., 9.7926e-01,
          1.0484e-03, 8.8615e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6630e-03, 2.8088e-04, 2.0242e-04,  ..., 7.2444e-03,
          1.2309e-04, 1.4522e-03],
         [8.6630e-03, 2.8088e-04, 2.0242e-04,  ..., 6.9088e-03,
          1.2309e-04, 1.4522e-03],
         [9.7272e-01, 2.8088e-04, 2.0242e-04,  ..., 9.7894e-01,
          1.2309e-04, 9.9564e-01],
         [9.9582e-03, 9.9916e-01, 9.9939e-01,  ..., 6.9088e-03,
          9.9963e-01, 1.4522e-03]],
        [[6.0345e-04, 5.1709e-06, 3.1200e-06,  ..., 3.6890e-03,
          1.1072e-03, 9.9937e-01],
         [6.0345e-04, 5.1709e-06, 3.1200e-06,  ..., 3.6890e-03,
          1.1072e-03, 2.0556e-04],
         [9.9819e-01, 5.1709e-06, 3.1200e-06,  ..., 9.8893e-01,
          9.9668e-01, 2.0556e-04],
         [6.0345e-04, 9.9998e-01, 9.9999e-01,  ..., 3.6890e-03,
          1.1072e-03, 2.2224e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 476:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9339e-01, 3.9252e-03, 4.0483e-03,  ..., 9.9375e-01,
          9.9390e-01, 3.3405e-03],
         [1.8659e-03, 3.8374e-03, 4.0483e-03,  ..., 2.0830e-03,
          1.9928e-03, 3.8307e-03],
         [2.8758e-03, 3.9805e-03, 4.7660e-03,  ..., 2.0830e-03,
          2.0549e-03, 3.3405e-03],
         [1.8659e-03, 9.8826e-01, 9.8714e-01,  ..., 2.0830e-03,
          2.0534e-03, 9.8949e-01]],
        [[9.9693e-01, 6.2200e-04, 1.6222e-03,  ..., 1.8092e-03,
          1.6831e-03, 4.2634e-05],
         [1.0224e-03, 6.2200e-04, 1.6222e-03,  ..., 1.8092e-03,
          1.6831e-03, 4.2634e-05],
         [1.0224e-03, 6.2200e-04, 1.6222e-03,  ..., 1.8092e-03,
          9.9495e-01, 9.9987e-01],
         [1.0224e-03, 9.9813e-01, 9.9513e-01,  ..., 9.9457e-01,
          1.6831e-03, 4.2634e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:53,043 [Process: 0] Synchronize training processes
2024-08-18 19:53:53,044 [Process: 0] Evaluating...
2024-08-18 19:53:53,045 [Process: 0] EPOCH 476:
2024-08-18 19:53:53,047 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:54,190 [Process: 0] Synchronize training processes
2024-08-18 19:53:54,190 [Process: 0] Evaluating...
2024-08-18 19:53:54,192 [Process: 0] EPOCH 477:
2024-08-18 19:53:54,194 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.8688e-03, 2.1197e-05, 1.3874e-03,  ..., 4.5323e-03,
          1.6997e-03, 5.8667e-03],
         [4.8688e-03, 2.1197e-05, 1.3874e-03,  ..., 4.5323e-03,
          1.6997e-03, 5.4085e-03],
         [9.8539e-01, 2.1197e-05, 1.3874e-03,  ..., 9.8640e-01,
          1.6997e-03, 9.8332e-01],
         [4.8688e-03, 9.9994e-01, 9.9584e-01,  ..., 4.5323e-03,
          9.9490e-01, 5.4085e-03]],
        [[1.9958e-04, 1.3630e-04, 2.1656e-06,  ..., 3.9839e-03,
          4.7261e-03, 9.9712e-01],
         [1.9958e-04, 1.3630e-04, 2.1656e-06,  ..., 3.9839e-03,
          4.7261e-03, 9.0970e-04],
         [9.9940e-01, 1.3630e-04, 2.1656e-06,  ..., 9.8805e-01,
          9.8582e-01, 9.0970e-04],
         [1.9958e-04, 9.9959e-01, 9.9999e-01,  ..., 3.9839e-03,
          4.7261e-03, 1.0636e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 477:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8351e-01, 1.9995e-03, 3.8453e-03,  ..., 9.9953e-01,
          9.9892e-01, 1.2639e-03],
         [6.2278e-03, 1.9995e-03, 3.7296e-03,  ..., 1.5627e-04,
          3.6090e-04, 1.2639e-03],
         [5.7531e-03, 1.9995e-03, 4.9937e-03,  ..., 1.5627e-04,
          3.6090e-04, 1.2639e-03],
         [4.5107e-03, 9.9400e-01, 9.8743e-01,  ..., 1.5627e-04,
          3.6090e-04, 9.9621e-01]],
        [[9.9924e-01, 1.3260e-03, 2.1122e-03,  ..., 6.9244e-03,
          3.6664e-04, 1.9016e-04],
         [2.4267e-04, 1.3260e-03, 2.1122e-03,  ..., 5.2763e-03,
          3.6664e-04, 1.9016e-04],
         [2.7745e-04, 1.3260e-03, 2.1122e-03,  ..., 6.5858e-03,
          9.9890e-01, 9.9943e-01],
         [2.4267e-04, 9.9602e-01, 9.9366e-01,  ..., 9.8121e-01,
          3.6664e-04, 1.9016e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4869e-03, 1.0325e-04, 8.1704e-05,  ..., 8.4996e-03,
          4.8712e-04, 3.6075e-03],
         [2.4869e-03, 1.0325e-04, 8.1704e-05,  ..., 7.2512e-03,
          4.8712e-04, 3.6075e-03],
         [9.9254e-01, 1.0325e-04, 8.1704e-05,  ..., 9.7700e-01,
          4.8712e-04, 9.8918e-01],
         [2.4869e-03, 9.9969e-01, 9.9975e-01,  ..., 7.2512e-03,
          9.9854e-01, 3.6075e-03]],
        [[2.8529e-04, 4.9857e-05, 1.5599e-04,  ..., 3.1918e-03,
          1.1810e-03, 9.7956e-01],
         [2.8529e-04, 4.9857e-05, 1.5599e-04,  ..., 3.1918e-03,
          1.1810e-03, 5.3913e-03],
         [9.9914e-01, 4.9857e-05, 1.5599e-04,  ..., 9.9042e-01,
          9.9646e-01, 5.3913e-03],
         [2.8529e-04, 9.9985e-01, 9.9953e-01,  ..., 3.1918e-03,
          1.1810e-03, 9.6600e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 478:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:55,337 [Process: 0] Synchronize training processes
2024-08-18 19:53:55,337 [Process: 0] Evaluating...
2024-08-18 19:53:55,339 [Process: 0] EPOCH 478:
2024-08-18 19:53:55,341 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9574e-01, 7.7791e-03, 1.4087e-03,  ..., 9.9850e-01,
          9.9904e-01, 6.7472e-04],
         [1.9915e-03, 6.9119e-03, 1.4087e-03,  ..., 4.9987e-04,
          3.1922e-04, 6.7472e-04],
         [1.1329e-03, 8.0154e-03, 1.4087e-03,  ..., 4.9987e-04,
          3.1922e-04, 6.7472e-04],
         [1.1329e-03, 9.7729e-01, 9.9577e-01,  ..., 4.9987e-04,
          3.1922e-04, 9.9798e-01]],
        [[9.9888e-01, 5.2329e-03, 1.2574e-03,  ..., 3.9989e-03,
          3.7070e-04, 5.9385e-04],
         [3.7210e-04, 3.9030e-03, 1.2574e-03,  ..., 3.9989e-03,
          3.7070e-04, 5.9385e-04],
         [3.7210e-04, 4.0895e-03, 1.2574e-03,  ..., 3.9989e-03,
          9.9889e-01, 9.9822e-01],
         [3.7210e-04, 9.8677e-01, 9.9623e-01,  ..., 9.8800e-01,
          3.7070e-04, 5.9385e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.9654e-03, 2.1312e-05, 5.3863e-04,  ..., 4.7040e-03,
          2.7184e-04, 5.9092e-03],
         [5.9654e-03, 2.1312e-05, 5.3863e-04,  ..., 4.7040e-03,
          2.7184e-04, 5.9092e-03],
         [9.7997e-01, 2.1312e-05, 5.3863e-04,  ..., 9.8386e-01,
          2.7184e-04, 9.8202e-01],
         [8.1037e-03, 9.9994e-01, 9.9838e-01,  ..., 6.7302e-03,
          9.9918e-01, 6.1632e-03]],
        [[1.2186e-03, 3.6214e-05, 1.3297e-04,  ..., 6.0286e-03,
          3.2279e-03, 9.9936e-01],
         [1.2186e-03, 3.6214e-05, 1.3297e-04,  ..., 6.0286e-03,
          3.2279e-03, 2.1403e-04],
         [9.9634e-01, 3.6214e-05, 1.3297e-04,  ..., 9.8074e-01,
          9.9032e-01, 2.1403e-04],
         [1.2186e-03, 9.9989e-01, 9.9960e-01,  ..., 7.2019e-03,
          3.2279e-03, 2.1403e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 479:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9239e-01, 2.3261e-03, 1.3036e-03,  ..., 9.9894e-01,
          9.9862e-01, 2.5574e-03],
         [1.2567e-03, 2.3261e-03, 1.1768e-03,  ..., 3.5261e-04,
          4.5990e-04, 2.5574e-03],
         [5.0927e-03, 2.9768e-03, 1.3917e-03,  ..., 3.5261e-04,
          4.5990e-04, 2.5574e-03],
         [1.2567e-03, 9.9237e-01, 9.9613e-01,  ..., 3.5261e-04,
          4.5990e-04, 9.9233e-01]],
        [[9.9768e-01, 2.0882e-03, 2.0893e-03,  ..., 3.1478e-03,
          3.7459e-04, 4.1501e-04],
         [8.6139e-04, 2.6202e-03, 2.0678e-03,  ..., 2.9608e-03,
          3.7459e-04, 4.1501e-04],
         [7.2950e-04, 2.4156e-03, 2.0678e-03,  ..., 3.6106e-03,
          9.9888e-01, 9.9875e-01],
         [7.2950e-04, 9.9288e-01, 9.9378e-01,  ..., 9.9028e-01,
          3.7459e-04, 4.1501e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2980e-03, 1.0150e-04, 6.6005e-04,  ..., 2.5879e-03,
          1.9748e-03, 2.7959e-03],
         [3.2980e-03, 1.0150e-04, 6.6005e-04,  ..., 2.5879e-03,
          1.6188e-03, 2.7959e-03],
         [9.9011e-01, 1.0150e-04, 6.6005e-04,  ..., 9.9224e-01,
          1.6188e-03, 9.9159e-01],
         [3.2980e-03, 9.9970e-01, 9.9802e-01,  ..., 2.5879e-03,
          9.9479e-01, 2.8145e-03]],
        [[2.6581e-04, 6.2006e-05, 3.9917e-04,  ..., 1.9034e-03,
          3.0069e-03, 9.9940e-01],
         [2.6581e-04, 6.2006e-05, 3.6900e-04,  ..., 1.9034e-03,
          3.0069e-03, 2.0034e-04],
         [9.9920e-01, 6.2006e-05, 3.6900e-04,  ..., 9.9429e-01,
          9.9098e-01, 2.0034e-04],
         [2.6581e-04, 9.9981e-01, 9.9886e-01,  ..., 1.9034e-03,
          3.0069e-03, 2.0034e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:56,479 [Process: 0] Synchronize training processes
2024-08-18 19:53:56,479 [Process: 0] Evaluating...
2024-08-18 19:53:56,481 [Process: 0] EPOCH 479:
2024-08-18 19:53:56,483 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:57,626 [Process: 0] Synchronize training processes
2024-08-18 19:53:57,626 [Process: 0] Evaluating...
2024-08-18 19:53:57,628 [Process: 0] EPOCH 480:
2024-08-18 19:53:57,630 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 480:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9059e-01, 3.6722e-03, 3.6993e-03,  ..., 9.8873e-01,
          9.8461e-01, 5.7413e-03],
         [2.5003e-03, 3.6540e-03, 3.6993e-03,  ..., 2.8502e-03,
          4.4646e-03, 5.7413e-03],
         [4.4048e-03, 4.2025e-03, 4.8271e-03,  ..., 5.5726e-03,
          6.4624e-03, 7.4752e-03],
         [2.5003e-03, 9.8847e-01, 9.8777e-01,  ..., 2.8502e-03,
          4.4646e-03, 9.8104e-01]],
        [[9.9156e-01, 1.3875e-03, 1.2027e-03,  ..., 5.9868e-03,
          3.9630e-04, 3.6632e-03],
         [2.3536e-03, 1.3875e-03, 1.2027e-03,  ..., 4.7307e-03,
          3.9630e-04, 3.6632e-03],
         [3.7364e-03, 1.3875e-03, 1.2027e-03,  ..., 6.1076e-03,
          9.9881e-01, 9.8901e-01],
         [2.3536e-03, 9.9584e-01, 9.9639e-01,  ..., 9.8317e-01,
          3.9630e-04, 3.6632e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1468e-03, 7.1725e-06, 4.2011e-04,  ..., 4.6610e-03,
          6.3258e-04, 6.8428e-03],
         [4.0186e-03, 7.1725e-06, 4.2011e-04,  ..., 4.6610e-03,
          6.3258e-04, 5.8420e-03],
         [9.8782e-01, 7.1725e-06, 4.2011e-04,  ..., 9.8555e-01,
          6.3258e-04, 9.8147e-01],
         [4.0186e-03, 9.9998e-01, 9.9874e-01,  ..., 5.1315e-03,
          9.9810e-01, 5.8420e-03]],
        [[2.1214e-03, 1.2853e-04, 1.2512e-05,  ..., 5.2612e-03,
          2.9886e-03, 9.9981e-01],
         [2.1214e-03, 1.2853e-04, 1.2512e-05,  ..., 5.2612e-03,
          2.9886e-03, 6.3991e-05],
         [9.9364e-01, 1.2853e-04, 1.2512e-05,  ..., 9.8422e-01,
          9.9103e-01, 6.3991e-05],
         [2.1214e-03, 9.9961e-01, 9.9996e-01,  ..., 5.2612e-03,
          2.9886e-03, 6.3991e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 481:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8569e-01, 3.4403e-03, 2.4105e-03,  ..., 9.9995e-01,
          9.9858e-01, 1.1703e-03],
         [2.1514e-02, 2.8549e-03, 2.4105e-03,  ..., 1.6136e-05,
          4.7322e-04, 1.1703e-03],
         [7.1280e-02, 3.5525e-03, 2.4105e-03,  ..., 1.6136e-05,
          4.7322e-04, 1.1703e-03],
         [2.1514e-02, 9.9015e-01, 9.9277e-01,  ..., 1.6136e-05,
          4.7322e-04, 9.9649e-01]],
        [[9.2498e-01, 1.9814e-03, 1.5861e-03,  ..., 1.9550e-03,
          2.8874e-05, 1.5837e-04],
         [1.2609e-02, 1.9814e-03, 1.5861e-03,  ..., 1.9550e-03,
          2.8874e-05, 1.5837e-04],
         [2.3535e-02, 2.1464e-03, 1.5861e-03,  ..., 1.9550e-03,
          9.9991e-01, 9.9952e-01],
         [3.8873e-02, 9.9389e-01, 9.9524e-01,  ..., 9.9413e-01,
          2.8874e-05, 1.5837e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:53:58,779 [Process: 0] Synchronize training processes
2024-08-18 19:53:58,779 [Process: 0] Evaluating...
2024-08-18 19:53:58,781 [Process: 0] EPOCH 481:
2024-08-18 19:53:58,782 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:53:59,926 [Process: 0] Synchronize training processes
2024-08-18 19:53:59,927 [Process: 0] Evaluating...
2024-08-18 19:53:59,933 [Process: 0] EPOCH 482:
2024-08-18 19:53:59,935 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8508e-03, 1.6403e-04, 1.9465e-03,  ..., 4.9831e-03,
          2.4025e-04, 9.5247e-03],
         [7.8508e-03, 1.6403e-04, 1.9465e-03,  ..., 4.9831e-03,
          2.4025e-04, 9.5247e-03],
         [9.7486e-01, 1.6403e-04, 1.9465e-03,  ..., 9.8498e-01,
          2.4025e-04, 9.6583e-01],
         [9.4372e-03, 9.9951e-01, 9.9416e-01,  ..., 5.0492e-03,
          9.9928e-01, 1.5117e-02]],
        [[7.4783e-05, 1.3279e-03, 2.1040e-04,  ..., 2.9884e-03,
          3.0009e-03, 9.9982e-01],
         [7.4783e-05, 1.3279e-03, 2.1040e-04,  ..., 2.9884e-03,
          2.6910e-03, 6.1611e-05],
         [9.9978e-01, 1.3279e-03, 2.1040e-04,  ..., 9.9103e-01,
          9.9162e-01, 6.1611e-05],
         [7.4783e-05, 9.9602e-01, 9.9937e-01,  ..., 2.9884e-03,
          2.6910e-03, 6.1611e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 482:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5405e-01, 4.3463e-03, 7.6085e-03,  ..., 9.9785e-01,
          8.4588e-01, 5.3142e-03],
         [6.9935e-03, 4.3463e-03, 5.2538e-03,  ..., 7.1565e-04,
          2.1429e-02, 5.0312e-03],
         [3.1964e-02, 5.3847e-03, 8.6265e-03,  ..., 7.1565e-04,
          2.4884e-02, 8.2393e-03],
         [6.9935e-03, 9.8592e-01, 9.7851e-01,  ..., 7.1565e-04,
          1.0781e-01, 9.8142e-01]],
        [[9.9689e-01, 2.2419e-03, 1.6003e-03,  ..., 3.1147e-03,
          3.0294e-04, 1.3139e-03],
         [1.0370e-03, 2.2419e-03, 1.6003e-03,  ..., 3.1147e-03,
          3.0294e-04, 1.3139e-03],
         [1.0370e-03, 2.3054e-03, 1.6003e-03,  ..., 3.1147e-03,
          9.9909e-01, 9.9606e-01],
         [1.0370e-03, 9.9321e-01, 9.9520e-01,  ..., 9.9066e-01,
          3.0294e-04, 1.3139e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8638e-03, 1.6660e-04, 6.0317e-04,  ..., 7.5558e-03,
          2.3739e-04, 8.4637e-04],
         [2.8638e-03, 1.6660e-04, 7.1302e-04,  ..., 7.5558e-03,
          2.3739e-04, 8.4637e-04],
         [9.9141e-01, 1.6660e-04, 6.0317e-04,  ..., 9.7497e-01,
          2.3739e-04, 9.9746e-01],
         [2.8638e-03, 9.9950e-01, 9.9808e-01,  ..., 9.9221e-03,
          9.9929e-01, 8.4637e-04]],
        [[7.4033e-04, 6.4135e-03, 6.8733e-05,  ..., 1.3292e-02,
          2.9797e-03, 9.9940e-01],
         [7.4033e-04, 1.2418e-02, 6.8733e-05,  ..., 1.0775e-02,
          2.9797e-03, 1.9912e-04],
         [9.9778e-01, 6.4135e-03, 6.8733e-05,  ..., 9.6320e-01,
          9.9106e-01, 1.9912e-04],
         [7.4033e-04, 9.7475e-01, 9.9979e-01,  ..., 1.2734e-02,
          2.9797e-03, 1.9912e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 483:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7459e-01, 2.6003e-03, 3.1856e-03,  ..., 9.9785e-01,
          5.3492e-01, 1.8171e-02],
         [4.0579e-03, 2.6003e-03, 3.1856e-03,  ..., 7.1673e-04,
          2.8335e-02, 1.8171e-02],
         [1.7298e-02, 3.2675e-03, 4.3803e-03,  ..., 7.1673e-04,
          3.6558e-02, 6.7194e-02],
         [4.0579e-03, 9.9153e-01, 9.8925e-01,  ..., 7.1673e-04,
          4.0018e-01, 8.9646e-01]],
        [[9.9962e-01, 1.1457e-03, 2.9140e-03,  ..., 1.1307e-02,
          6.9482e-05, 1.3215e-03],
         [1.2623e-04, 1.1457e-03, 3.6928e-03,  ..., 6.9826e-03,
          6.9482e-05, 1.3215e-03],
         [1.2623e-04, 1.1457e-03, 3.2900e-03,  ..., 1.1204e-02,
          9.9979e-01, 9.9604e-01],
         [1.2623e-04, 9.9656e-01, 9.9010e-01,  ..., 9.7051e-01,
          6.9482e-05, 1.3215e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:01,077 [Process: 0] Synchronize training processes
2024-08-18 19:54:01,077 [Process: 0] Evaluating...
2024-08-18 19:54:01,079 [Process: 0] EPOCH 483:
2024-08-18 19:54:01,081 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:02,223 [Process: 0] Synchronize training processes
2024-08-18 19:54:02,224 [Process: 0] Evaluating...
2024-08-18 19:54:02,225 [Process: 0] EPOCH 484:
2024-08-18 19:54:02,227 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2419e-03, 1.4472e-04, 2.0899e-04,  ..., 5.8765e-03,
          1.9603e-03, 1.8024e-03],
         [7.2419e-03, 1.4472e-04, 2.0899e-04,  ..., 5.8765e-03,
          1.9603e-03, 1.8024e-03],
         [9.7827e-01, 1.4472e-04, 2.0899e-04,  ..., 9.8182e-01,
          1.9603e-03, 9.9459e-01],
         [7.2419e-03, 9.9957e-01, 9.9937e-01,  ..., 6.4292e-03,
          9.9412e-01, 1.8024e-03]],
        [[1.0819e-03, 4.6874e-04, 2.0932e-04,  ..., 6.9850e-03,
          9.7452e-04, 9.9862e-01],
         [1.0819e-03, 4.6874e-04, 2.0932e-04,  ..., 6.9850e-03,
          9.7452e-04, 4.4475e-04],
         [9.9675e-01, 4.6874e-04, 2.0932e-04,  ..., 9.7904e-01,
          9.9708e-01, 4.4475e-04],
         [1.0819e-03, 9.9859e-01, 9.9937e-01,  ..., 6.9850e-03,
          9.7452e-04, 4.9370e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 484:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7680e-01, 2.7470e-03, 4.1925e-03,  ..., 9.9224e-01,
          1.4187e-01, 1.8614e-02],
         [1.2793e-02, 2.7470e-03, 4.1925e-03,  ..., 2.5868e-03,
          2.4501e-02, 1.6943e-02],
         [9.7617e-02, 3.0997e-03, 5.2225e-03,  ..., 2.5868e-03,
          3.1577e-02, 5.1685e-02],
         [1.2793e-02, 9.9141e-01, 9.8639e-01,  ..., 2.5868e-03,
          8.0205e-01, 9.1276e-01]],
        [[9.9717e-01, 3.8366e-03, 2.1943e-03,  ..., 4.1504e-03,
          1.2270e-03, 7.5494e-04],
         [7.1180e-04, 4.0171e-03, 2.8129e-03,  ..., 3.9621e-03,
          1.2270e-03, 7.5494e-04],
         [1.4039e-03, 4.4272e-03, 2.1943e-03,  ..., 6.5303e-03,
          9.9632e-01, 9.9774e-01],
         [7.1180e-04, 9.8772e-01, 9.9280e-01,  ..., 9.8536e-01,
          1.2270e-03, 7.5494e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3348e-03, 1.0175e-04, 5.4497e-04,  ..., 4.2103e-02,
          2.8731e-04, 1.6920e-03],
         [2.3348e-03, 1.1423e-04, 5.4497e-04,  ..., 2.8625e-02,
          2.8731e-04, 1.6920e-03],
         [9.9300e-01, 1.0175e-04, 5.4497e-04,  ..., 8.6985e-01,
          2.8731e-04, 9.9492e-01],
         [2.3348e-03, 9.9968e-01, 9.9837e-01,  ..., 5.9420e-02,
          9.9914e-01, 1.6920e-03]],
        [[1.5094e-03, 2.4295e-03, 2.0319e-03,  ..., 2.0775e-03,
          1.4267e-02, 9.9760e-01],
         [1.5094e-03, 2.4295e-03, 2.0319e-03,  ..., 2.0775e-03,
          6.8316e-03, 8.0101e-04],
         [9.9547e-01, 2.4295e-03, 2.0319e-03,  ..., 9.9377e-01,
          9.7207e-01, 8.0101e-04],
         [1.5094e-03, 9.9271e-01, 9.9390e-01,  ..., 2.0775e-03,
          6.8316e-03, 8.0101e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 485:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:03,370 [Process: 0] Synchronize training processes
2024-08-18 19:54:03,370 [Process: 0] Evaluating...
2024-08-18 19:54:03,372 [Process: 0] EPOCH 485:
2024-08-18 19:54:03,373 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8700e-01, 1.4186e-03, 1.6072e-03,  ..., 9.9816e-01,
          9.9711e-01, 3.2891e-03],
         [2.6392e-03, 1.2807e-03, 1.6072e-03,  ..., 6.1363e-04,
          8.8130e-04, 3.2891e-03],
         [7.7242e-03, 1.2807e-03, 1.6072e-03,  ..., 6.1363e-04,
          8.8130e-04, 3.7556e-03],
         [2.6392e-03, 9.9602e-01, 9.9518e-01,  ..., 6.1363e-04,
          1.1226e-03, 9.8967e-01]],
        [[9.9900e-01, 1.0189e-03, 2.8839e-03,  ..., 1.3078e-02,
          4.1573e-04, 9.6922e-04],
         [3.3502e-04, 1.0189e-03, 2.8839e-03,  ..., 7.6383e-03,
          4.1573e-04, 9.6922e-04],
         [3.3502e-04, 1.0189e-03, 3.0511e-03,  ..., 1.2437e-02,
          9.9875e-01, 9.9709e-01],
         [3.3502e-04, 9.9694e-01, 9.9118e-01,  ..., 9.6685e-01,
          4.1573e-04, 9.6922e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.9155e-03, 7.1918e-04, 2.2496e-04,  ..., 6.3987e-03,
          4.3888e-05, 3.6191e-03],
         [7.9155e-03, 7.1918e-04, 2.2496e-04,  ..., 6.3987e-03,
          4.3888e-05, 3.5941e-03],
         [9.7595e-01, 7.1918e-04, 2.2496e-04,  ..., 9.8080e-01,
          4.3888e-05, 9.8919e-01],
         [8.2210e-03, 9.9784e-01, 9.9933e-01,  ..., 6.3987e-03,
          9.9987e-01, 3.5941e-03]],
        [[1.6521e-03, 1.1081e-04, 2.0805e-04,  ..., 2.1606e-03,
          4.9187e-03, 9.9981e-01],
         [1.6521e-03, 1.1081e-04, 2.0805e-04,  ..., 2.1606e-03,
          4.9187e-03, 6.3781e-05],
         [9.9504e-01, 1.1081e-04, 2.0805e-04,  ..., 9.9352e-01,
          9.8524e-01, 6.3781e-05],
         [1.6521e-03, 9.9967e-01, 9.9938e-01,  ..., 2.1606e-03,
          4.9187e-03, 6.3781e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 486:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9538e-01, 1.7519e-03, 1.7430e-03,  ..., 9.9812e-01,
          9.2608e-01, 1.5245e-02],
         [1.5408e-03, 1.7519e-03, 1.7430e-03,  ..., 6.2522e-04,
          1.3003e-02, 1.2155e-02],
         [1.5408e-03, 1.7519e-03, 1.7430e-03,  ..., 6.2522e-04,
          2.3834e-02, 2.1080e-02],
         [1.5408e-03, 9.9474e-01, 9.9477e-01,  ..., 6.2522e-04,
          3.7078e-02, 9.5152e-01]],
        [[9.9991e-01, 6.2820e-03, 1.2160e-03,  ..., 3.5253e-03,
          3.8286e-04, 1.8368e-03],
         [3.1381e-05, 5.3269e-03, 1.2160e-03,  ..., 3.5253e-03,
          3.8286e-04, 1.8368e-03],
         [3.1381e-05, 1.0208e-02, 1.2160e-03,  ..., 4.5652e-03,
          9.9885e-01, 9.9449e-01],
         [3.1381e-05, 9.7818e-01, 9.9635e-01,  ..., 9.8838e-01,
          3.8286e-04, 1.8368e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0572e-02, 7.2711e-04, 7.8746e-04,  ..., 2.8368e-03,
          8.2257e-05, 8.0235e-03],
         [9.3472e-03, 7.2711e-04, 4.1969e-03,  ..., 2.8368e-03,
          8.2257e-05, 7.5015e-03],
         [9.6955e-01, 7.2711e-04, 7.8746e-04,  ..., 9.9149e-01,
          8.2257e-05, 9.7697e-01],
         [1.0536e-02, 9.9782e-01, 9.9423e-01,  ..., 2.8368e-03,
          9.9975e-01, 7.5015e-03]],
        [[3.1616e-04, 2.8173e-04, 3.2501e-05,  ..., 3.2306e-03,
          2.8884e-03, 9.9874e-01],
         [3.1616e-04, 2.8173e-04, 3.2501e-05,  ..., 3.2306e-03,
          2.8884e-03, 4.2163e-04],
         [9.9905e-01, 2.8173e-04, 3.2501e-05,  ..., 9.9031e-01,
          9.9133e-01, 4.2163e-04],
         [3.1616e-04, 9.9915e-01, 9.9990e-01,  ..., 3.2306e-03,
          2.8884e-03, 4.2163e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:04,520 [Process: 0] Synchronize training processes
2024-08-18 19:54:04,520 [Process: 0] Evaluating...
2024-08-18 19:54:04,522 [Process: 0] EPOCH 486:
2024-08-18 19:54:04,524 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:05,667 [Process: 0] Synchronize training processes
2024-08-18 19:54:05,667 [Process: 0] Evaluating...
2024-08-18 19:54:05,669 [Process: 0] EPOCH 487:
2024-08-18 19:54:05,671 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 487:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9242e-01, 2.5718e-03, 6.1955e-03,  ..., 9.9473e-01,
          9.8254e-01, 9.6972e-04],
         [1.1659e-03, 2.5718e-03, 4.4210e-03,  ..., 1.6580e-03,
          5.1850e-03, 9.6972e-04],
         [5.2432e-03, 2.9520e-03, 7.0998e-03,  ..., 1.9518e-03,
          5.6939e-03, 9.6972e-04],
         [1.1659e-03, 9.9190e-01, 9.8228e-01,  ..., 1.6580e-03,
          6.5822e-03, 9.9709e-01]],
        [[9.9846e-01, 1.0649e-02, 3.5642e-03,  ..., 2.4972e-03,
          7.1278e-04, 5.1043e-04],
         [5.1336e-04, 7.2092e-03, 3.5642e-03,  ..., 2.4972e-03,
          7.1278e-04, 5.1043e-04],
         [5.1336e-04, 1.2270e-02, 4.3248e-03,  ..., 2.4972e-03,
          9.9786e-01, 9.9847e-01],
         [5.1336e-04, 9.6987e-01, 9.8855e-01,  ..., 9.9251e-01,
          7.1278e-04, 5.1043e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5265e-03, 9.5404e-04, 2.2475e-04,  ..., 2.8521e-03,
          1.9894e-04, 6.6619e-03],
         [3.5265e-03, 9.5404e-04, 2.2475e-04,  ..., 2.8521e-03,
          1.9894e-04, 6.6619e-03],
         [9.8942e-01, 9.5404e-04, 2.2475e-04,  ..., 9.9144e-01,
          1.9894e-04, 9.7957e-01],
         [3.5265e-03, 9.9714e-01, 9.9933e-01,  ..., 2.8521e-03,
          9.9940e-01, 7.1051e-03]],
        [[3.1779e-03, 3.3180e-04, 6.8980e-05,  ..., 5.7708e-03,
          3.1310e-03, 9.9982e-01],
         [3.1779e-03, 3.3180e-04, 6.8980e-05,  ..., 5.7708e-03,
          3.1310e-03, 5.8750e-05],
         [9.9047e-01, 3.3180e-04, 6.8980e-05,  ..., 9.8269e-01,
          9.9061e-01, 5.8750e-05],
         [3.1779e-03, 9.9900e-01, 9.9979e-01,  ..., 5.7708e-03,
          3.1310e-03, 5.8750e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 488:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2302e-01, 3.5915e-03, 1.5037e-02,  ..., 9.9926e-01,
          9.7595e-01, 2.1248e-03],
         [8.8231e-03, 6.2150e-03, 8.5626e-03,  ..., 2.4585e-04,
          5.0861e-03, 1.7453e-03],
         [5.9333e-02, 3.5915e-03, 1.6160e-02,  ..., 2.4585e-04,
          1.3177e-02, 1.7453e-03],
         [8.8231e-03, 9.8660e-01, 9.6024e-01,  ..., 2.4585e-04,
          5.7868e-03, 9.9438e-01]],
        [[9.9542e-01, 3.6173e-03, 8.4820e-04,  ..., 1.1825e-03,
          5.1405e-04, 2.0248e-04],
         [1.4398e-03, 3.6173e-03, 8.4820e-04,  ..., 1.2279e-03,
          5.1405e-04, 2.0248e-04],
         [1.6991e-03, 3.8696e-03, 8.4820e-04,  ..., 1.1825e-03,
          9.9846e-01, 9.9939e-01],
         [1.4398e-03, 9.8890e-01, 9.9746e-01,  ..., 9.9641e-01,
          5.1405e-04, 2.0248e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:06,814 [Process: 0] Synchronize training processes
2024-08-18 19:54:06,814 [Process: 0] Evaluating...
2024-08-18 19:54:06,816 [Process: 0] EPOCH 488:
2024-08-18 19:54:06,817 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:07,964 [Process: 0] Synchronize training processes
2024-08-18 19:54:07,964 [Process: 0] Evaluating...
2024-08-18 19:54:07,966 [Process: 0] EPOCH 489:
2024-08-18 19:54:07,968 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.8085e-03, 1.7363e-03, 1.3093e-03,  ..., 9.3849e-03,
          1.5133e-04, 2.8693e-03],
         [6.8085e-03, 5.8516e-03, 1.3093e-03,  ..., 9.3849e-03,
          1.5133e-04, 2.8693e-03],
         [9.7817e-01, 1.7363e-03, 1.3093e-03,  ..., 9.7041e-01,
          1.5133e-04, 9.9139e-01],
         [8.2159e-03, 9.9068e-01, 9.9607e-01,  ..., 1.0819e-02,
          9.9955e-01, 2.8693e-03]],
        [[1.5852e-03, 2.2595e-03, 2.6582e-05,  ..., 2.3518e-03,
          4.0904e-03, 9.9810e-01],
         [1.5852e-03, 2.6436e-03, 2.6582e-05,  ..., 2.3518e-03,
          4.0904e-03, 6.3390e-04],
         [9.9524e-01, 2.2595e-03, 2.6582e-05,  ..., 9.9294e-01,
          9.8773e-01, 6.3390e-04],
         [1.5852e-03, 9.9284e-01, 9.9992e-01,  ..., 2.3518e-03,
          4.0904e-03, 6.3390e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 489:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3367e-01, 7.3926e-03, 1.8604e-03,  ..., 9.9859e-01,
          9.9875e-01, 1.1034e-03],
         [1.8432e-02, 4.7239e-03, 1.8604e-03,  ..., 4.7025e-04,
          4.0033e-04, 1.1034e-03],
         [2.2947e-01, 6.6051e-03, 1.8604e-03,  ..., 4.7025e-04,
          4.4765e-04, 1.1034e-03],
         [1.8432e-02, 9.8128e-01, 9.9442e-01,  ..., 4.7025e-04,
          4.0033e-04, 9.9669e-01]],
        [[9.9821e-01, 2.4189e-03, 1.3037e-03,  ..., 2.6867e-03,
          1.1721e-03, 1.1991e-04],
         [5.9309e-04, 3.2585e-03, 1.1426e-03,  ..., 3.7648e-03,
          1.1721e-03, 1.1991e-04],
         [5.9309e-04, 2.4189e-03, 1.1426e-03,  ..., 2.6867e-03,
          9.9648e-01, 9.9964e-01],
         [6.0697e-04, 9.9190e-01, 9.9641e-01,  ..., 9.9086e-01,
          1.1721e-03, 1.1991e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0049e-02, 2.4775e-04, 8.5543e-03,  ..., 5.2706e-03,
          5.7483e-05, 4.6917e-03],
         [1.0049e-02, 2.6615e-04, 5.2363e-03,  ..., 5.2706e-03,
          5.7483e-05, 4.6917e-03],
         [9.6628e-01, 2.4775e-04, 5.2363e-03,  ..., 9.8419e-01,
          5.7483e-05, 9.8592e-01],
         [1.3622e-02, 9.9924e-01, 9.8097e-01,  ..., 5.2706e-03,
          9.9983e-01, 4.6917e-03]],
        [[9.6328e-04, 3.8783e-04, 5.9088e-06,  ..., 3.3989e-03,
          1.0595e-02, 9.9989e-01],
         [9.6328e-04, 3.8783e-04, 5.9088e-06,  ..., 3.3989e-03,
          9.1739e-03, 3.5304e-05],
         [9.9711e-01, 3.8783e-04, 5.9088e-06,  ..., 9.8980e-01,
          9.7055e-01, 3.5304e-05],
         [9.6328e-04, 9.9884e-01, 9.9998e-01,  ..., 3.3989e-03,
          9.6845e-03, 3.5304e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 490:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.0224e-01, 3.0287e-03, 3.4789e-03,  ..., 9.9905e-01,
          9.9893e-01, 2.2603e-03],
         [1.7085e-02, 2.8625e-03, 3.4789e-03,  ..., 3.1730e-04,
          3.1846e-04, 2.2603e-03],
         [2.6359e-01, 3.6810e-03, 3.4789e-03,  ..., 3.1730e-04,
          4.3017e-04, 2.2603e-03],
         [1.7085e-02, 9.9043e-01, 9.8956e-01,  ..., 3.1730e-04,
          3.1846e-04, 9.9322e-01]],
        [[9.9438e-01, 8.0871e-04, 1.4452e-03,  ..., 2.9321e-03,
          5.7358e-04, 8.1883e-05],
         [1.8748e-03, 8.0871e-04, 2.3790e-03,  ..., 2.0370e-03,
          5.7358e-04, 8.1883e-05],
         [1.8748e-03, 8.0871e-04, 1.4452e-03,  ..., 2.0415e-03,
          9.9828e-01, 9.9975e-01],
         [1.8748e-03, 9.9757e-01, 9.9473e-01,  ..., 9.9299e-01,
          5.7358e-04, 8.1883e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:09,140 [Process: 0] Synchronize training processes
2024-08-18 19:54:09,141 [Process: 0] Evaluating...
2024-08-18 19:54:09,143 [Process: 0] EPOCH 490:
2024-08-18 19:54:09,145 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:10,287 [Process: 0] Synchronize training processes
2024-08-18 19:54:10,287 [Process: 0] Evaluating...
2024-08-18 19:54:10,289 [Process: 0] EPOCH 491:
2024-08-18 19:54:10,291 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.1187e-03, 3.3226e-04, 2.4472e-03,  ..., 6.7271e-03,
          3.9265e-04, 5.3252e-03],
         [5.1187e-03, 3.3226e-04, 2.4472e-03,  ..., 6.7271e-03,
          3.9265e-04, 5.3252e-03],
         [9.8464e-01, 3.3226e-04, 2.4472e-03,  ..., 9.7953e-01,
          3.9265e-04, 9.8300e-01],
         [5.1187e-03, 9.9900e-01, 9.9266e-01,  ..., 7.0122e-03,
          9.9882e-01, 6.3534e-03]],
        [[8.0067e-04, 4.1673e-05, 5.8950e-05,  ..., 7.5963e-03,
          6.3906e-03, 9.9975e-01],
         [8.0067e-04, 4.1673e-05, 5.8950e-05,  ..., 7.5963e-03,
          6.3906e-03, 8.3190e-05],
         [9.9760e-01, 4.1673e-05, 5.8950e-05,  ..., 9.7560e-01,
          9.8083e-01, 8.3190e-05],
         [8.0067e-04, 9.9987e-01, 9.9982e-01,  ..., 9.2037e-03,
          6.3906e-03, 8.3190e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 491:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9001e-01, 1.4634e-03, 1.7058e-03,  ..., 9.8896e-01,
          9.9276e-01, 4.6827e-03],
         [2.3014e-03, 1.4634e-03, 1.7991e-03,  ..., 3.1771e-03,
          1.6269e-03, 3.7200e-03],
         [5.3905e-03, 1.4634e-03, 1.7058e-03,  ..., 4.6906e-03,
          3.9844e-03, 3.7561e-03],
         [2.3014e-03, 9.9561e-01, 9.9479e-01,  ..., 3.1771e-03,
          1.6269e-03, 9.8784e-01]],
        [[9.9872e-01, 4.1827e-03, 2.3388e-03,  ..., 1.5089e-03,
          3.9211e-04, 1.9793e-04],
         [4.2520e-04, 4.1827e-03, 2.3388e-03,  ..., 1.5089e-03,
          3.9211e-04, 1.9793e-04],
         [4.2520e-04, 4.2722e-03, 2.3388e-03,  ..., 1.5089e-03,
          9.9882e-01, 9.9941e-01],
         [4.2520e-04, 9.8736e-01, 9.9298e-01,  ..., 9.9547e-01,
          3.9211e-04, 1.9793e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1627e-03, 1.5287e-04, 7.0625e-04,  ..., 3.2209e-03,
          3.3896e-04, 2.4391e-03],
         [2.1627e-03, 1.5287e-04, 7.0625e-04,  ..., 3.2209e-03,
          2.9116e-04, 2.3494e-03],
         [9.9351e-01, 1.5287e-04, 7.0625e-04,  ..., 9.9034e-01,
          2.9116e-04, 9.9286e-01],
         [2.1627e-03, 9.9954e-01, 9.9788e-01,  ..., 3.2209e-03,
          9.9908e-01, 2.3494e-03]],
        [[1.1899e-02, 1.8377e-04, 3.9584e-05,  ..., 3.3395e-03,
          7.3073e-03, 9.9817e-01],
         [1.1899e-02, 1.8377e-04, 3.9584e-05,  ..., 3.3395e-03,
          7.3073e-03, 6.1044e-04],
         [9.5344e-01, 1.8377e-04, 3.9584e-05,  ..., 9.8998e-01,
          9.7785e-01, 6.1044e-04],
         [2.2766e-02, 9.9945e-01, 9.9988e-01,  ..., 3.3395e-03,
          7.5392e-03, 6.1044e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 492:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:11,423 [Process: 0] Synchronize training processes
2024-08-18 19:54:11,423 [Process: 0] Evaluating...
2024-08-18 19:54:11,429 [Process: 0] EPOCH 492:
2024-08-18 19:54:11,431 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9664e-01, 7.6081e-04, 1.6772e-03,  ..., 9.9945e-01,
          9.9797e-01, 4.2730e-03],
         [1.1205e-03, 7.6081e-04, 1.6772e-03,  ..., 1.8200e-04,
          6.7630e-04, 3.8906e-03],
         [1.1205e-03, 7.6081e-04, 1.6772e-03,  ..., 1.8200e-04,
          6.7630e-04, 5.7913e-03],
         [1.1205e-03, 9.9772e-01, 9.9497e-01,  ..., 1.8200e-04,
          6.7630e-04, 9.8605e-01]],
        [[9.9779e-01, 1.7873e-03, 4.2936e-03,  ..., 3.0328e-03,
          6.4804e-04, 3.0520e-04],
         [7.0647e-04, 1.7873e-03, 3.6570e-03,  ..., 3.0328e-03,
          6.4804e-04, 3.0520e-04],
         [8.0094e-04, 2.0148e-03, 3.6570e-03,  ..., 3.5439e-03,
          9.9806e-01, 9.9908e-01],
         [7.0647e-04, 9.9441e-01, 9.8839e-01,  ..., 9.9039e-01,
          6.4804e-04, 3.0520e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7591e-03, 2.1149e-04, 2.1504e-03,  ..., 4.9814e-03,
          1.7925e-04, 6.6505e-03],
         [3.7591e-03, 2.1149e-04, 2.1504e-03,  ..., 4.9814e-03,
          1.5034e-04, 5.7309e-03],
         [9.8872e-01, 2.1149e-04, 2.1504e-03,  ..., 9.8506e-01,
          1.5034e-04, 9.8189e-01],
         [3.7591e-03, 9.9937e-01, 9.9355e-01,  ..., 4.9814e-03,
          9.9952e-01, 5.7309e-03]],
        [[2.6092e-04, 9.3825e-05, 6.1259e-06,  ..., 5.6277e-03,
          5.5023e-03, 9.9959e-01],
         [2.6092e-04, 9.3825e-05, 1.1032e-05,  ..., 5.6277e-03,
          4.3058e-03, 1.3732e-04],
         [9.9922e-01, 9.3825e-05, 6.1259e-06,  ..., 9.8312e-01,
          9.8589e-01, 1.3732e-04],
         [2.6092e-04, 9.9972e-01, 9.9998e-01,  ..., 5.6277e-03,
          4.3058e-03, 1.3732e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 493:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8140e-01, 3.5033e-03, 1.9967e-03,  ..., 9.9940e-01,
          9.9180e-01, 3.5141e-03],
         [5.7047e-03, 3.5033e-03, 1.9967e-03,  ..., 2.0101e-04,
          2.0543e-03, 4.0447e-03],
         [7.1875e-03, 3.5033e-03, 1.9967e-03,  ..., 2.0101e-04,
          2.0543e-03, 4.5139e-03],
         [5.7047e-03, 9.8949e-01, 9.9401e-01,  ..., 2.0101e-04,
          4.0904e-03, 9.8793e-01]],
        [[9.9974e-01, 2.2844e-03, 1.2339e-03,  ..., 4.0511e-03,
          2.2767e-04, 3.8528e-04],
         [8.6756e-05, 2.2844e-03, 1.9946e-03,  ..., 3.1927e-03,
          2.2767e-04, 3.8528e-04],
         [8.6756e-05, 2.2844e-03, 1.2339e-03,  ..., 4.9684e-03,
          9.9932e-01, 9.9884e-01],
         [8.6756e-05, 9.9315e-01, 9.9554e-01,  ..., 9.8779e-01,
          2.2767e-04, 3.8528e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3833e-03, 4.3272e-03, 4.5090e-03,  ..., 2.8552e-03,
          2.9735e-05, 4.5616e-03],
         [3.3833e-03, 6.7056e-03, 1.2258e-02,  ..., 2.8552e-03,
          2.9735e-05, 4.5616e-03],
         [9.8985e-01, 4.3272e-03, 4.5090e-03,  ..., 9.9143e-01,
          2.9735e-05, 9.8632e-01],
         [3.3833e-03, 9.8464e-01, 9.7872e-01,  ..., 2.8552e-03,
          9.9991e-01, 4.5616e-03]],
        [[1.1231e-03, 3.7650e-05, 7.8586e-07,  ..., 2.3901e-03,
          7.7246e-03, 9.9994e-01],
         [1.1231e-03, 3.7650e-05, 7.8586e-07,  ..., 2.3901e-03,
          7.7246e-03, 1.9068e-05],
         [9.9663e-01, 3.7650e-05, 7.8586e-07,  ..., 9.9283e-01,
          9.7656e-01, 1.9068e-05],
         [1.1231e-03, 9.9989e-01, 1.0000e+00,  ..., 2.3901e-03,
          7.9862e-03, 1.9068e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:12,576 [Process: 0] Synchronize training processes
2024-08-18 19:54:12,577 [Process: 0] Evaluating...
2024-08-18 19:54:12,578 [Process: 0] EPOCH 493:
2024-08-18 19:54:12,580 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:13,726 [Process: 0] Synchronize training processes
2024-08-18 19:54:13,726 [Process: 0] Evaluating...
2024-08-18 19:54:13,728 [Process: 0] EPOCH 494:
2024-08-18 19:54:13,730 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 494:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7468e-01, 5.2768e-04, 6.3253e-03,  ..., 9.9741e-01,
          9.7920e-01, 4.7637e-04],
         [5.4470e-03, 5.2768e-04, 4.4314e-03,  ..., 8.5540e-04,
          6.1923e-03, 4.7637e-04],
         [1.4423e-02, 5.2768e-04, 5.3968e-03,  ..., 8.5540e-04,
          8.4193e-03, 4.7637e-04],
         [5.4470e-03, 9.9842e-01, 9.8385e-01,  ..., 8.7699e-04,
          6.1923e-03, 9.9857e-01]],
        [[9.9922e-01, 3.7185e-03, 7.6437e-04,  ..., 6.1119e-03,
          3.9424e-04, 3.1777e-04],
         [2.5976e-04, 3.1303e-03, 7.6437e-04,  ..., 5.3038e-03,
          3.9424e-04, 3.1777e-04],
         [2.5976e-04, 4.1575e-03, 7.6437e-04,  ..., 7.1163e-03,
          9.9882e-01, 9.9905e-01],
         [2.5976e-04, 9.8899e-01, 9.9771e-01,  ..., 9.8147e-01,
          3.9424e-04, 3.1777e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.1929e-03, 1.6557e-04, 1.4074e-03,  ..., 4.6224e-03,
          4.4456e-03, 3.8212e-03],
         [5.1929e-03, 1.6557e-04, 1.4074e-03,  ..., 4.6224e-03,
          4.4456e-03, 3.8212e-03],
         [9.8442e-01, 1.6557e-04, 1.4074e-03,  ..., 9.8613e-01,
          4.4456e-03, 9.8854e-01],
         [5.1929e-03, 9.9950e-01, 9.9578e-01,  ..., 4.6224e-03,
          9.8666e-01, 3.8212e-03]],
        [[1.0692e-03, 1.6322e-04, 1.0542e-03,  ..., 7.2098e-04,
          5.9601e-03, 9.9963e-01],
         [1.0692e-03, 1.6322e-04, 7.3591e-04,  ..., 7.2098e-04,
          5.9601e-03, 1.2226e-04],
         [9.9679e-01, 1.6322e-04, 7.3591e-04,  ..., 9.9784e-01,
          9.8212e-01, 1.2226e-04],
         [1.0692e-03, 9.9951e-01, 9.9747e-01,  ..., 7.2098e-04,
          5.9601e-03, 1.2226e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 495:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9090e-01, 4.8960e-03, 1.9035e-03,  ..., 9.9974e-01,
          9.9657e-01, 1.1493e-03],
         [1.6344e-02, 5.1558e-03, 1.9035e-03,  ..., 8.6195e-05,
          1.1177e-03, 1.1493e-03],
         [7.6412e-02, 7.0707e-03, 1.9035e-03,  ..., 8.6195e-05,
          1.1177e-03, 1.1493e-03],
         [1.6344e-02, 9.8288e-01, 9.9429e-01,  ..., 8.6195e-05,
          1.1941e-03, 9.9655e-01]],
        [[9.9925e-01, 9.4968e-04, 9.4697e-04,  ..., 4.5342e-03,
          1.4016e-03, 2.5352e-04],
         [2.4967e-04, 8.1360e-04, 9.4697e-04,  ..., 3.4269e-03,
          1.4016e-03, 2.5352e-04],
         [2.4967e-04, 8.1360e-04, 9.4697e-04,  ..., 4.2729e-03,
          9.9580e-01, 9.9924e-01],
         [2.4967e-04, 9.9742e-01, 9.9716e-01,  ..., 9.8777e-01,
          1.4016e-03, 2.5352e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:14,874 [Process: 0] Synchronize training processes
2024-08-18 19:54:14,875 [Process: 0] Evaluating...
2024-08-18 19:54:14,876 [Process: 0] EPOCH 495:
2024-08-18 19:54:14,878 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:16,049 [Process: 0] Synchronize training processes
2024-08-18 19:54:16,049 [Process: 0] Evaluating...
2024-08-18 19:54:16,051 [Process: 0] EPOCH 496:
2024-08-18 19:54:16,053 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6380e-03, 1.9616e-04, 2.1646e-03,  ..., 3.0701e-03,
          3.1365e-04, 3.3798e-03],
         [8.6380e-03, 1.9616e-04, 4.8937e-03,  ..., 3.0701e-03,
          3.1365e-04, 3.1043e-03],
         [9.7276e-01, 1.9616e-04, 2.1646e-03,  ..., 9.9079e-01,
          3.1365e-04, 9.9041e-01],
         [9.9645e-03, 9.9941e-01, 9.9078e-01,  ..., 3.0701e-03,
          9.9906e-01, 3.1043e-03]],
        [[3.3000e-03, 4.7462e-04, 3.2331e-05,  ..., 4.1104e-03,
          4.2455e-03, 9.9992e-01],
         [3.3000e-03, 4.7462e-04, 3.2331e-05,  ..., 4.1104e-03,
          4.2455e-03, 2.7341e-05],
         [9.9010e-01, 4.7462e-04, 3.2331e-05,  ..., 9.8767e-01,
          9.8726e-01, 2.7341e-05],
         [3.3000e-03, 9.9858e-01, 9.9990e-01,  ..., 4.1104e-03,
          4.2455e-03, 2.7341e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 496:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0792e-01, 1.1951e-03, 3.3598e-03,  ..., 9.9943e-01,
          9.7746e-01, 8.2121e-04],
         [1.1977e-02, 1.1951e-03, 3.4505e-03,  ..., 1.9023e-04,
          5.1275e-03, 8.2121e-04],
         [6.8129e-02, 1.1951e-03, 3.3598e-03,  ..., 1.9023e-04,
          5.1275e-03, 8.2121e-04],
         [1.1977e-02, 9.9641e-01, 9.8983e-01,  ..., 1.9023e-04,
          1.2284e-02, 9.9754e-01]],
        [[9.9935e-01, 5.4875e-03, 1.5041e-03,  ..., 3.8079e-03,
          4.2157e-04, 6.2496e-04],
         [2.1189e-04, 5.4875e-03, 1.7902e-03,  ..., 3.5499e-03,
          4.2157e-04, 6.2496e-04],
         [2.2282e-04, 7.0443e-03, 1.5041e-03,  ..., 3.5499e-03,
          9.9874e-01, 9.9813e-01],
         [2.1189e-04, 9.8198e-01, 9.9520e-01,  ..., 9.8909e-01,
          4.2157e-04, 6.2496e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0940e-03, 2.3235e-04, 3.7567e-03,  ..., 3.8886e-03,
          2.1894e-04, 3.9613e-03],
         [3.0940e-03, 2.3235e-04, 4.3840e-03,  ..., 3.8886e-03,
          2.1894e-04, 3.9613e-03],
         [9.9072e-01, 2.3235e-04, 3.7567e-03,  ..., 9.8833e-01,
          2.1894e-04, 9.8812e-01],
         [3.0940e-03, 9.9930e-01, 9.8810e-01,  ..., 3.8886e-03,
          9.9934e-01, 3.9613e-03]],
        [[3.1876e-03, 3.3204e-04, 8.2386e-05,  ..., 2.7767e-03,
          3.0575e-03, 9.9987e-01],
         [3.1876e-03, 2.6471e-04, 8.2386e-05,  ..., 2.7767e-03,
          3.0575e-03, 4.2485e-05],
         [9.9044e-01, 2.6471e-04, 8.2386e-05,  ..., 9.9167e-01,
          9.9083e-01, 4.2485e-05],
         [3.1876e-03, 9.9914e-01, 9.9975e-01,  ..., 2.7767e-03,
          3.0575e-03, 4.2485e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 497:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9696e-01, 2.1229e-03, 3.1869e-03,  ..., 9.9631e-01,
          9.9817e-01, 3.6639e-03],
         [7.9648e-04, 2.1229e-03, 2.9758e-03,  ..., 1.0012e-03,
          5.4810e-04, 3.6639e-03],
         [1.4513e-03, 2.1229e-03, 3.3814e-03,  ..., 1.6843e-03,
          7.2944e-04, 5.0945e-03],
         [7.9648e-04, 9.9363e-01, 9.9046e-01,  ..., 1.0012e-03,
          5.4810e-04, 9.8758e-01]],
        [[9.9870e-01, 1.3649e-03, 2.8437e-03,  ..., 9.5502e-04,
          6.5426e-04, 1.2689e-04],
         [4.3182e-04, 1.4992e-03, 2.8437e-03,  ..., 9.5502e-04,
          6.5426e-04, 1.2689e-04],
         [4.3182e-04, 1.3649e-03, 3.2545e-03,  ..., 9.5502e-04,
          9.9804e-01, 9.9962e-01],
         [4.3182e-04, 9.9577e-01, 9.9106e-01,  ..., 9.9713e-01,
          6.5426e-04, 1.2689e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:17,197 [Process: 0] Synchronize training processes
2024-08-18 19:54:17,198 [Process: 0] Evaluating...
2024-08-18 19:54:17,199 [Process: 0] EPOCH 497:
2024-08-18 19:54:17,201 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:18,345 [Process: 0] Synchronize training processes
2024-08-18 19:54:18,345 [Process: 0] Evaluating...
2024-08-18 19:54:18,347 [Process: 0] EPOCH 498:
2024-08-18 19:54:18,349 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9517e-03, 1.8399e-04, 1.6503e-03,  ..., 3.6479e-03,
          6.2522e-03, 1.7942e-03],
         [1.9517e-03, 1.8399e-04, 1.6503e-03,  ..., 3.6479e-03,
          5.2818e-03, 1.7942e-03],
         [9.9415e-01, 1.8399e-04, 1.6503e-03,  ..., 9.8906e-01,
          5.2818e-03, 9.9462e-01],
         [1.9517e-03, 9.9945e-01, 9.9505e-01,  ..., 3.6479e-03,
          9.8318e-01, 1.7942e-03]],
        [[1.2651e-02, 2.4380e-04, 8.1539e-05,  ..., 3.2166e-03,
          5.0450e-03, 9.9937e-01],
         [1.2651e-02, 2.4380e-04, 8.1539e-05,  ..., 3.2166e-03,
          4.7435e-03, 2.1042e-04],
         [9.5283e-01, 2.4380e-04, 8.1539e-05,  ..., 9.9035e-01,
          9.8547e-01, 2.1042e-04],
         [2.1870e-02, 9.9927e-01, 9.9976e-01,  ..., 3.2166e-03,
          4.7435e-03, 2.1042e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 498:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9550e-01, 1.7632e-03, 2.4022e-03,  ..., 9.9889e-01,
          9.9622e-01, 6.7631e-04],
         [1.0282e-03, 1.8303e-03, 1.6586e-03,  ..., 3.5592e-04,
          1.2584e-03, 6.7631e-04],
         [2.4398e-03, 1.7632e-03, 1.6588e-03,  ..., 3.9767e-04,
          1.2584e-03, 6.7631e-04],
         [1.0282e-03, 9.9464e-01, 9.9428e-01,  ..., 3.5592e-04,
          1.2584e-03, 9.9797e-01]],
        [[9.7294e-01, 7.9814e-04, 4.7201e-03,  ..., 1.6457e-03,
          7.3627e-04, 2.3567e-04],
         [5.3178e-03, 7.2522e-04, 4.6983e-03,  ..., 1.6457e-03,
          7.3627e-04, 2.3567e-04],
         [1.6420e-02, 7.2522e-04, 6.0118e-03,  ..., 1.6457e-03,
          9.9779e-01, 9.9929e-01],
         [5.3178e-03, 9.9775e-01, 9.8457e-01,  ..., 9.9506e-01,
          7.3627e-04, 2.3567e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3647e-03, 5.5484e-04, 8.1060e-03,  ..., 3.5267e-03,
          3.5463e-04, 2.8326e-03],
         [3.3647e-03, 5.5484e-04, 1.2155e-02,  ..., 3.5267e-03,
          3.5463e-04, 2.8326e-03],
         [9.8991e-01, 5.5484e-04, 8.1060e-03,  ..., 9.8942e-01,
          3.5463e-04, 9.9150e-01],
         [3.3647e-03, 9.9834e-01, 9.7163e-01,  ..., 3.5267e-03,
          9.9894e-01, 2.8326e-03]],
        [[1.2708e-03, 1.8877e-04, 8.4894e-06,  ..., 2.0996e-03,
          2.9393e-03, 9.9935e-01],
         [1.2708e-03, 1.8877e-04, 8.4894e-06,  ..., 2.0996e-03,
          2.9393e-03, 2.1616e-04],
         [9.9619e-01, 1.8877e-04, 8.4894e-06,  ..., 9.9370e-01,
          9.9118e-01, 2.1616e-04],
         [1.2708e-03, 9.9943e-01, 9.9997e-01,  ..., 2.0996e-03,
          2.9393e-03, 2.1616e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 499:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:19,494 [Process: 0] Synchronize training processes
2024-08-18 19:54:19,495 [Process: 0] Evaluating...
2024-08-18 19:54:19,496 [Process: 0] EPOCH 499:
2024-08-18 19:54:19,498 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9443e-01, 2.2715e-03, 7.9505e-03,  ..., 9.9880e-01,
          9.9743e-01, 2.2484e-04],
         [1.7758e-03, 2.2715e-03, 7.5181e-03,  ..., 3.9990e-04,
          7.9102e-04, 2.2484e-04],
         [2.0172e-03, 2.2715e-03, 8.1001e-03,  ..., 3.9990e-04,
          9.9237e-04, 2.2484e-04],
         [1.7758e-03, 9.9319e-01, 9.7643e-01,  ..., 3.9990e-04,
          7.9102e-04, 9.9933e-01]],
        [[9.9765e-01, 1.8061e-03, 1.4327e-03,  ..., 1.9753e-03,
          6.6175e-04, 2.6467e-03],
         [7.8440e-04, 1.8061e-03, 1.4327e-03,  ..., 1.6649e-03,
          6.6175e-04, 2.6467e-03],
         [7.8440e-04, 1.8061e-03, 1.4327e-03,  ..., 1.8031e-03,
          9.9801e-01, 9.9206e-01],
         [7.8440e-04, 9.9458e-01, 9.9570e-01,  ..., 9.9456e-01,
          6.6175e-04, 2.6467e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2255e-03, 2.0796e-04, 1.1813e-02,  ..., 5.6449e-03,
          6.1353e-05, 4.8072e-03],
         [3.2255e-03, 2.0796e-04, 4.8017e-03,  ..., 5.6449e-03,
          6.1353e-05, 4.2045e-03],
         [9.9032e-01, 2.0796e-04, 4.8017e-03,  ..., 9.8307e-01,
          6.1353e-05, 9.8678e-01],
         [3.2255e-03, 9.9938e-01, 9.7858e-01,  ..., 5.6449e-03,
          9.9982e-01, 4.2045e-03]],
        [[5.7451e-03, 1.4366e-05, 4.9890e-05,  ..., 2.5716e-03,
          3.0809e-03, 9.9975e-01],
         [5.7451e-03, 1.4366e-05, 3.8065e-05,  ..., 2.5716e-03,
          3.0809e-03, 8.1789e-05],
         [9.8077e-01, 1.4366e-05, 3.8065e-05,  ..., 9.9229e-01,
          9.9076e-01, 8.1789e-05],
         [7.7431e-03, 9.9996e-01, 9.9987e-01,  ..., 2.5716e-03,
          3.0809e-03, 8.1789e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 500:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9584e-01, 7.5192e-03, 2.4429e-03,  ..., 9.7908e-01,
          9.9810e-01, 6.6140e-04],
         [1.2357e-03, 6.5195e-03, 2.4429e-03,  ..., 7.9500e-03,
          4.3115e-04, 7.6199e-04],
         [1.6886e-03, 1.0329e-02, 2.4781e-03,  ..., 8.3378e-03,
          1.0337e-03, 6.6140e-04],
         [1.2357e-03, 9.7563e-01, 9.9264e-01,  ..., 4.6342e-03,
          4.3115e-04, 9.9792e-01]],
        [[9.9962e-01, 4.1136e-03, 1.9135e-03,  ..., 1.1171e-03,
          5.9530e-04, 3.2867e-04],
         [1.2785e-04, 4.1136e-03, 1.9135e-03,  ..., 1.1171e-03,
          5.9530e-04, 3.2867e-04],
         [1.2785e-04, 5.2835e-03, 1.9997e-03,  ..., 1.1171e-03,
          9.9821e-01, 9.9901e-01],
         [1.2785e-04, 9.8649e-01, 9.9417e-01,  ..., 9.9665e-01,
          5.9530e-04, 3.2867e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0863e-02, 5.6904e-04, 2.3399e-03,  ..., 3.3926e-03,
          6.2890e-04, 1.5442e-02],
         [9.5417e-03, 5.6904e-04, 5.2387e-03,  ..., 3.3926e-03,
          6.2890e-04, 1.2558e-02],
         [9.6982e-01, 5.6904e-04, 2.3399e-03,  ..., 9.8982e-01,
          6.2890e-04, 9.5663e-01],
         [9.7732e-03, 9.9829e-01, 9.9008e-01,  ..., 3.3926e-03,
          9.9811e-01, 1.5368e-02]],
        [[5.1820e-03, 4.3864e-05, 1.0126e-04,  ..., 2.5857e-03,
          1.0908e-03, 9.9653e-01],
         [5.1820e-03, 4.3864e-05, 1.0126e-04,  ..., 2.5857e-03,
          1.0908e-03, 1.1581e-03],
         [9.8422e-01, 4.3864e-05, 1.0126e-04,  ..., 9.9224e-01,
          9.9673e-01, 1.1581e-03],
         [5.4145e-03, 9.9987e-01, 9.9970e-01,  ..., 2.5857e-03,
          1.0908e-03, 1.1581e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:20,642 [Process: 0] Synchronize training processes
2024-08-18 19:54:20,642 [Process: 0] Evaluating...
2024-08-18 19:54:20,644 [Process: 0] EPOCH 500:
2024-08-18 19:54:20,645 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:21,791 [Process: 0] Synchronize training processes
2024-08-18 19:54:21,791 [Process: 0] Evaluating...
2024-08-18 19:54:21,793 [Process: 0] EPOCH 501:
2024-08-18 19:54:21,795 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 501:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9869e-01, 2.2530e-03, 1.5533e-03,  ..., 9.9676e-01,
          9.9878e-01, 5.2851e-04],
         [4.3086e-04, 2.1889e-03, 1.5533e-03,  ..., 8.7454e-04,
          4.0673e-04, 5.2851e-04],
         [4.4484e-04, 2.5333e-03, 1.5533e-03,  ..., 1.4896e-03,
          4.0673e-04, 5.2851e-04],
         [4.3086e-04, 9.9302e-01, 9.9534e-01,  ..., 8.7454e-04,
          4.0673e-04, 9.9841e-01]],
        [[9.9232e-01, 1.0509e-03, 2.0044e-03,  ..., 3.2696e-03,
          2.5048e-04, 7.1822e-05],
         [1.7670e-03, 1.0509e-03, 2.0044e-03,  ..., 3.7015e-03,
          2.5048e-04, 7.1822e-05],
         [4.1491e-03, 1.0509e-03, 2.0241e-03,  ..., 3.2696e-03,
          9.9925e-01, 9.9978e-01],
         [1.7670e-03, 9.9685e-01, 9.9397e-01,  ..., 9.8976e-01,
          2.5048e-04, 7.1822e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.8082e-03, 2.0330e-03, 5.0254e-03,  ..., 2.5341e-03,
          7.6955e-05, 6.6136e-03],
         [6.7593e-03, 2.0330e-03, 7.8449e-03,  ..., 2.5341e-03,
          7.6955e-05, 6.6136e-03],
         [9.7967e-01, 2.0330e-03, 5.0254e-03,  ..., 9.9240e-01,
          7.6955e-05, 9.7938e-01],
         [6.7593e-03, 9.9390e-01, 9.8210e-01,  ..., 2.5341e-03,
          9.9977e-01, 7.3886e-03]],
        [[5.2129e-03, 1.0768e-03, 3.7847e-04,  ..., 3.1548e-03,
          7.4380e-04, 9.9790e-01],
         [5.2129e-03, 1.2326e-03, 3.7847e-04,  ..., 3.1548e-03,
          7.4380e-04, 6.9995e-04],
         [9.8418e-01, 1.0768e-03, 3.7847e-04,  ..., 9.9054e-01,
          9.9777e-01, 6.9995e-04],
         [5.3907e-03, 9.9661e-01, 9.9886e-01,  ..., 3.1548e-03,
          7.4380e-04, 6.9995e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 502:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9836e-01, 2.8207e-03, 3.3017e-03,  ..., 9.9956e-01,
          9.8049e-01, 9.3702e-04],
         [5.4893e-04, 2.8207e-03, 3.3017e-03,  ..., 1.3775e-04,
          5.4967e-03, 9.3702e-04],
         [5.4764e-04, 3.2590e-03, 3.3017e-03,  ..., 1.6550e-04,
          6.0296e-03, 9.3702e-04],
         [5.4764e-04, 9.9110e-01, 9.9009e-01,  ..., 1.3775e-04,
          7.9799e-03, 9.9719e-01]],
        [[9.9884e-01, 1.1178e-02, 1.6924e-03,  ..., 1.8900e-03,
          1.0056e-03, 1.0164e-03],
         [3.1363e-04, 9.1165e-03, 1.3613e-03,  ..., 1.8900e-03,
          1.0056e-03, 1.0164e-03],
         [5.3556e-04, 1.8146e-02, 1.3613e-03,  ..., 1.8900e-03,
          9.9698e-01, 9.9695e-01],
         [3.1363e-04, 9.6156e-01, 9.9558e-01,  ..., 9.9433e-01,
          1.0056e-03, 1.0164e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:22,942 [Process: 0] Synchronize training processes
2024-08-18 19:54:22,942 [Process: 0] Evaluating...
2024-08-18 19:54:22,949 [Process: 0] EPOCH 502:
2024-08-18 19:54:22,951 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:24,094 [Process: 0] Synchronize training processes
2024-08-18 19:54:24,094 [Process: 0] Evaluating...
2024-08-18 19:54:24,096 [Process: 0] EPOCH 503:
2024-08-18 19:54:24,098 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.8659e-03, 1.0376e-03, 1.4970e-03,  ..., 4.2758e-03,
          4.8923e-04, 2.3796e-03],
         [4.8659e-03, 1.0376e-03, 1.5182e-03,  ..., 4.0276e-03,
          4.8923e-04, 2.3796e-03],
         [9.8540e-01, 1.0376e-03, 1.4970e-03,  ..., 9.8767e-01,
          4.8923e-04, 9.9286e-01],
         [4.8659e-03, 9.9689e-01, 9.9549e-01,  ..., 4.0276e-03,
          9.9853e-01, 2.3796e-03]],
        [[6.3607e-03, 1.3876e-04, 2.4564e-04,  ..., 7.1977e-03,
          1.2609e-03, 9.9944e-01],
         [6.3607e-03, 1.3876e-04, 2.1592e-04,  ..., 7.1977e-03,
          1.1124e-03, 1.8721e-04],
         [9.8017e-01, 1.3876e-04, 2.1592e-04,  ..., 9.7831e-01,
          9.9651e-01, 1.8721e-04],
         [7.1098e-03, 9.9958e-01, 9.9932e-01,  ..., 7.2898e-03,
          1.1124e-03, 1.8721e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 503:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8731e-01, 4.0815e-03, 3.1523e-03,  ..., 9.9690e-01,
          9.9477e-01, 1.5570e-03],
         [2.4779e-03, 4.0815e-03, 3.0462e-03,  ..., 1.0328e-03,
          1.5892e-03, 1.5570e-03],
         [7.7326e-03, 4.6433e-03, 3.5531e-03,  ..., 1.0328e-03,
          2.0487e-03, 1.5570e-03],
         [2.4779e-03, 9.8719e-01, 9.9025e-01,  ..., 1.0328e-03,
          1.5892e-03, 9.9533e-01]],
        [[9.9589e-01, 5.6835e-04, 2.6676e-03,  ..., 1.4429e-03,
          7.3348e-04, 3.0184e-05],
         [1.3705e-03, 5.6835e-04, 2.6676e-03,  ..., 1.4429e-03,
          7.3348e-04, 3.0184e-05],
         [1.3705e-03, 5.6835e-04, 3.1573e-03,  ..., 1.4429e-03,
          9.9780e-01, 9.9991e-01],
         [1.3705e-03, 9.9830e-01, 9.9151e-01,  ..., 9.9567e-01,
          7.3348e-04, 3.0184e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3252e-03, 5.2851e-04, 1.6262e-03,  ..., 6.0520e-04,
          3.1511e-05, 1.9111e-03],
         [3.3252e-03, 5.2851e-04, 1.6262e-03,  ..., 6.0520e-04,
          3.1511e-05, 1.9111e-03],
         [9.9002e-01, 5.2851e-04, 1.6262e-03,  ..., 9.9818e-01,
          3.1511e-05, 9.9427e-01],
         [3.3252e-03, 9.9841e-01, 9.9512e-01,  ..., 6.0520e-04,
          9.9991e-01, 1.9111e-03]],
        [[8.3030e-03, 1.1073e-04, 6.4841e-04,  ..., 3.9740e-03,
          8.8653e-04, 9.8629e-01],
         [8.3030e-03, 1.1073e-04, 6.4841e-04,  ..., 3.9740e-03,
          8.8653e-04, 3.8398e-03],
         [9.7065e-01, 1.1073e-04, 6.4841e-04,  ..., 9.8808e-01,
          9.9734e-01, 4.0863e-03],
         [1.2743e-02, 9.9967e-01, 9.9805e-01,  ..., 3.9740e-03,
          8.8653e-04, 5.7814e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 504:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9678e-01, 1.8191e-03, 4.0588e-03,  ..., 9.9037e-01,
          9.8562e-01, 2.1086e-03],
         [1.0739e-03, 1.8191e-03, 4.3694e-03,  ..., 2.3072e-03,
          3.9910e-03, 2.1086e-03],
         [1.0739e-03, 1.9602e-03, 4.2158e-03,  ..., 5.0154e-03,
          4.0679e-03, 2.1086e-03],
         [1.0739e-03, 9.9440e-01, 9.8736e-01,  ..., 2.3072e-03,
          6.3202e-03, 9.9367e-01]],
        [[9.9706e-01, 8.3714e-04, 2.0361e-03,  ..., 1.1864e-03,
          6.2957e-04, 1.4760e-04],
         [9.6528e-04, 8.3714e-04, 2.0361e-03,  ..., 1.1864e-03,
          6.2957e-04, 1.4760e-04],
         [1.0136e-03, 8.3714e-04, 2.0361e-03,  ..., 1.1864e-03,
          9.9811e-01, 9.9956e-01],
         [9.6528e-04, 9.9749e-01, 9.9389e-01,  ..., 9.9644e-01,
          6.2957e-04, 1.4760e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:25,242 [Process: 0] Synchronize training processes
2024-08-18 19:54:25,243 [Process: 0] Evaluating...
2024-08-18 19:54:25,244 [Process: 0] EPOCH 504:
2024-08-18 19:54:25,246 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:26,392 [Process: 0] Synchronize training processes
2024-08-18 19:54:26,392 [Process: 0] Evaluating...
2024-08-18 19:54:26,394 [Process: 0] EPOCH 505:
2024-08-18 19:54:26,395 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1342e-03, 5.2277e-04, 2.0783e-03,  ..., 1.2818e-02,
          4.0061e-04, 4.3270e-03],
         [2.1342e-03, 9.3792e-04, 2.0783e-03,  ..., 1.2818e-02,
          4.0061e-04, 4.3270e-03],
         [9.9360e-01, 5.2277e-04, 2.0783e-03,  ..., 9.5472e-01,
          4.0061e-04, 9.8702e-01],
         [2.1342e-03, 9.9802e-01, 9.9377e-01,  ..., 1.9643e-02,
          9.9880e-01, 4.3270e-03]],
        [[5.4662e-03, 1.0378e-03, 3.1741e-04,  ..., 5.4852e-03,
          2.2440e-03, 9.9990e-01],
         [5.4662e-03, 1.0240e-03, 3.1741e-04,  ..., 5.4852e-03,
          2.2440e-03, 3.3274e-05],
         [9.8135e-01, 1.0240e-03, 3.1741e-04,  ..., 9.8288e-01,
          9.9327e-01, 3.3274e-05],
         [7.7164e-03, 9.9691e-01, 9.9905e-01,  ..., 6.1541e-03,
          2.2440e-03, 3.3274e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 505:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9151e-01, 2.1832e-03, 3.5751e-03,  ..., 9.9895e-01,
          9.9081e-01, 4.7968e-04],
         [2.4448e-03, 2.1832e-03, 3.5751e-03,  ..., 3.5042e-04,
          2.4571e-03, 4.7968e-04],
         [3.5982e-03, 2.3322e-03, 4.5193e-03,  ..., 3.5042e-04,
          3.6436e-03, 4.7968e-04],
         [2.4448e-03, 9.9330e-01, 9.8833e-01,  ..., 3.5042e-04,
          3.0845e-03, 9.9856e-01]],
        [[9.9474e-01, 1.1906e-03, 2.7607e-03,  ..., 4.1848e-03,
          1.6963e-03, 4.5921e-04],
         [1.6361e-03, 9.9183e-04, 2.7607e-03,  ..., 4.1848e-03,
          1.6963e-03, 4.5921e-04],
         [1.9890e-03, 1.0053e-03, 2.7607e-03,  ..., 4.2464e-03,
          9.9491e-01, 9.9862e-01],
         [1.6361e-03, 9.9681e-01, 9.9172e-01,  ..., 9.8738e-01,
          1.6963e-03, 4.5921e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9797e-03, 3.1576e-04, 5.2116e-03,  ..., 7.0823e-03,
          1.1408e-02, 3.0669e-03],
         [1.9797e-03, 3.1576e-04, 6.4772e-03,  ..., 7.0823e-03,
          9.9100e-03, 3.0669e-03],
         [9.9406e-01, 3.1576e-04, 5.2116e-03,  ..., 9.7542e-01,
          9.9100e-03, 9.9080e-01],
         [1.9797e-03, 9.9905e-01, 9.8310e-01,  ..., 1.0420e-02,
          9.6877e-01, 3.0669e-03]],
        [[3.4839e-03, 1.4165e-04, 8.3461e-04,  ..., 3.9323e-03,
          2.8165e-03, 9.9560e-01],
         [3.4839e-03, 1.4165e-04, 6.0818e-04,  ..., 3.9323e-03,
          2.8165e-03, 1.3098e-03],
         [9.8955e-01, 1.4165e-04, 6.0818e-04,  ..., 9.8820e-01,
          9.9155e-01, 1.3098e-03],
         [3.4839e-03, 9.9958e-01, 9.9795e-01,  ..., 3.9323e-03,
          2.8165e-03, 1.7774e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 506:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:27,538 [Process: 0] Synchronize training processes
2024-08-18 19:54:27,539 [Process: 0] Evaluating...
2024-08-18 19:54:27,540 [Process: 0] EPOCH 506:
2024-08-18 19:54:27,542 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9723e-01, 8.6958e-04, 2.3275e-03,  ..., 9.9548e-01,
          9.9146e-01, 5.0399e-03],
         [7.8042e-04, 8.6958e-04, 2.3275e-03,  ..., 9.8959e-04,
          2.7000e-03, 5.0399e-03],
         [1.2116e-03, 8.6958e-04, 2.4120e-03,  ..., 2.5389e-03,
          2.7043e-03, 6.2522e-03],
         [7.8042e-04, 9.9739e-01, 9.9293e-01,  ..., 9.8959e-04,
          3.1313e-03, 9.8367e-01]],
        [[9.9949e-01, 8.4734e-04, 2.6646e-03,  ..., 1.5032e-03,
          2.4917e-04, 3.9578e-04],
         [1.6902e-04, 8.4734e-04, 2.1734e-03,  ..., 1.5032e-03,
          2.4917e-04, 3.9578e-04],
         [1.6977e-04, 8.4734e-04, 2.3487e-03,  ..., 1.5032e-03,
          9.9925e-01, 9.9881e-01],
         [1.6902e-04, 9.9746e-01, 9.9281e-01,  ..., 9.9549e-01,
          2.4917e-04, 3.9578e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8733e-03, 1.0170e-03, 2.9903e-03,  ..., 1.9351e-03,
          4.7231e-04, 4.5465e-03],
         [2.8733e-03, 1.0170e-03, 4.8752e-03,  ..., 1.9351e-03,
          4.7231e-04, 4.5465e-03],
         [9.9138e-01, 1.0170e-03, 2.9903e-03,  ..., 9.9419e-01,
          4.7231e-04, 9.8585e-01],
         [2.8733e-03, 9.9695e-01, 9.8914e-01,  ..., 1.9351e-03,
          9.9858e-01, 5.0612e-03]],
        [[8.3675e-03, 9.1113e-04, 2.0007e-03,  ..., 3.4587e-03,
          1.0109e-03, 9.9990e-01],
         [8.3675e-03, 9.1113e-04, 1.7989e-03,  ..., 3.4587e-03,
          1.0109e-03, 3.4425e-05],
         [9.7280e-01, 9.1113e-04, 1.7989e-03,  ..., 9.8962e-01,
          9.9697e-01, 3.4425e-05],
         [1.0461e-02, 9.9727e-01, 9.9440e-01,  ..., 3.4587e-03,
          1.0109e-03, 3.4425e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 507:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6517e-01, 1.1910e-03, 2.1021e-03,  ..., 9.9875e-01,
          9.9544e-01, 1.9114e-03],
         [7.4293e-03, 1.1910e-03, 2.1021e-03,  ..., 3.7676e-04,
          1.0753e-03, 1.7579e-03],
         [1.9976e-02, 1.1910e-03, 2.1021e-03,  ..., 4.9497e-04,
          2.4102e-03, 1.7579e-03],
         [7.4293e-03, 9.9643e-01, 9.9369e-01,  ..., 3.7676e-04,
          1.0753e-03, 9.9457e-01]],
        [[9.9950e-01, 4.1248e-03, 1.3747e-03,  ..., 2.6757e-03,
          1.8124e-03, 2.4893e-04],
         [1.5012e-04, 4.1248e-03, 1.3747e-03,  ..., 2.6757e-03,
          1.8124e-03, 2.4893e-04],
         [2.0081e-04, 5.5493e-03, 1.3747e-03,  ..., 3.0391e-03,
          9.9456e-01, 9.9925e-01],
         [1.5012e-04, 9.8620e-01, 9.9588e-01,  ..., 9.9161e-01,
          1.8124e-03, 2.4893e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7124e-03, 1.5922e-04, 1.2892e-03,  ..., 8.6177e-03,
          7.9702e-03, 2.6825e-03],
         [1.7124e-03, 1.5922e-04, 1.2892e-03,  ..., 6.6666e-03,
          7.9702e-03, 2.6825e-03],
         [9.9486e-01, 1.5922e-04, 1.2892e-03,  ..., 9.7805e-01,
          1.0588e-02, 9.9195e-01],
         [1.7124e-03, 9.9952e-01, 9.9613e-01,  ..., 6.6666e-03,
          9.7347e-01, 2.6825e-03]],
        [[1.1766e-02, 1.0944e-04, 6.3643e-04,  ..., 4.7720e-03,
          3.5685e-03, 9.3625e-01],
         [1.1766e-02, 1.0944e-04, 5.7824e-04,  ..., 4.7720e-03,
          3.5685e-03, 2.0504e-02],
         [9.4947e-01, 1.0944e-04, 5.7824e-04,  ..., 9.8557e-01,
          9.8929e-01, 1.5649e-02],
         [2.6998e-02, 9.9967e-01, 9.9821e-01,  ..., 4.8868e-03,
          3.5685e-03, 2.7599e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-18 19:54:28,691 [Process: 0] Synchronize training processes
2024-08-18 19:54:28,691 [Process: 0] Evaluating...
2024-08-18 19:54:28,693 [Process: 0] EPOCH 507:
2024-08-18 19:54:28,695 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:29,840 [Process: 0] Synchronize training processes
2024-08-18 19:54:29,840 [Process: 0] Evaluating...
2024-08-18 19:54:29,842 [Process: 0] EPOCH 508:
2024-08-18 19:54:29,843 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 508:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9825e-01, 1.3053e-03, 2.4281e-03,  ..., 9.9977e-01,
          9.4056e-01, 3.1736e-03],
         [6.5919e-04, 1.3053e-03, 2.4281e-03,  ..., 7.6281e-05,
          1.1706e-02, 3.1736e-03],
         [5.4731e-04, 1.3053e-03, 2.4281e-03,  ..., 7.6281e-05,
          2.9469e-02, 3.1736e-03],
         [5.4731e-04, 9.9608e-01, 9.9272e-01,  ..., 7.6281e-05,
          1.8268e-02, 9.9048e-01]],
        [[9.9484e-01, 9.7453e-03, 3.6569e-03,  ..., 3.3570e-03,
          8.3081e-04, 2.5879e-05],
         [1.6216e-03, 1.1618e-02, 3.6569e-03,  ..., 2.3352e-03,
          8.3081e-04, 2.5879e-05],
         [1.9168e-03, 1.4987e-02, 3.6569e-03,  ..., 2.3352e-03,
          9.9751e-01, 9.9992e-01],
         [1.6216e-03, 9.6365e-01, 9.8903e-01,  ..., 9.9197e-01,
          8.3081e-04, 2.5879e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0679e-03, 3.8677e-04, 1.5063e-03,  ..., 4.1876e-03,
          1.7658e-03, 2.5220e-03],
         [2.0679e-03, 3.8677e-04, 1.5063e-03,  ..., 4.1876e-03,
          1.7658e-03, 2.3109e-03],
         [9.9380e-01, 3.8677e-04, 1.5063e-03,  ..., 9.8744e-01,
          1.7658e-03, 9.9286e-01],
         [2.0679e-03, 9.9884e-01, 9.9548e-01,  ..., 4.1876e-03,
          9.9470e-01, 2.3109e-03]],
        [[9.0784e-03, 1.3221e-04, 1.5962e-04,  ..., 7.5052e-03,
          3.7592e-03, 9.9565e-01],
         [9.0784e-03, 1.3221e-04, 1.5962e-04,  ..., 7.5052e-03,
          3.5811e-03, 1.4502e-03],
         [9.6521e-01, 1.3221e-04, 1.5962e-04,  ..., 9.7413e-01,
          9.8908e-01, 1.4502e-03],
         [1.6635e-02, 9.9960e-01, 9.9952e-01,  ..., 1.0857e-02,
          3.5811e-03, 1.4502e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 509:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9767e-01, 1.9404e-03, 1.9838e-03,  ..., 9.9819e-01,
          9.8779e-01, 2.6231e-03],
         [1.0983e-03, 1.9404e-03, 1.9838e-03,  ..., 5.9467e-04,
          3.3855e-03, 2.6231e-03],
         [6.4810e-04, 1.9909e-03, 2.1846e-03,  ..., 6.1861e-04,
          3.9241e-03, 2.8931e-03],
         [5.7912e-04, 9.9413e-01, 9.9385e-01,  ..., 5.9467e-04,
          4.9035e-03, 9.9186e-01]],
        [[9.9961e-01, 1.2439e-03, 1.8276e-03,  ..., 1.2777e-03,
          1.3725e-03, 2.3411e-04],
         [1.2218e-04, 1.2439e-03, 1.8276e-03,  ..., 1.2777e-03,
          1.3725e-03, 2.3411e-04],
         [1.4258e-04, 1.2439e-03, 1.8276e-03,  ..., 1.2777e-03,
          9.9588e-01, 9.9930e-01],
         [1.2218e-04, 9.9627e-01, 9.9452e-01,  ..., 9.9617e-01,
          1.3725e-03, 2.3411e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:30,986 [Process: 0] Synchronize training processes
2024-08-18 19:54:30,987 [Process: 0] Evaluating...
2024-08-18 19:54:30,989 [Process: 0] EPOCH 509:
2024-08-18 19:54:30,991 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:32,134 [Process: 0] Synchronize training processes
2024-08-18 19:54:32,135 [Process: 0] Evaluating...
2024-08-18 19:54:32,136 [Process: 0] EPOCH 510:
2024-08-18 19:54:32,138 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5137e-03, 1.7656e-03, 4.0546e-03,  ..., 6.8508e-03,
          3.4458e-04, 2.9711e-03],
         [1.5137e-03, 1.7656e-03, 4.0546e-03,  ..., 6.8508e-03,
          3.4458e-04, 2.9711e-03],
         [9.9546e-01, 1.7656e-03, 4.0546e-03,  ..., 9.7718e-01,
          3.4458e-04, 9.9109e-01],
         [1.5137e-03, 9.9470e-01, 9.8784e-01,  ..., 9.1198e-03,
          9.9897e-01, 2.9711e-03]],
        [[1.5348e-02, 2.0675e-05, 9.4226e-05,  ..., 3.6256e-03,
          2.1813e-03, 9.9971e-01],
         [1.5348e-02, 2.0675e-05, 9.4226e-05,  ..., 3.6256e-03,
          2.1813e-03, 9.8246e-05],
         [9.3515e-01, 2.0675e-05, 9.4226e-05,  ..., 9.8908e-01,
          9.9346e-01, 9.8246e-05],
         [3.4152e-02, 9.9994e-01, 9.9972e-01,  ..., 3.6706e-03,
          2.1813e-03, 9.8246e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 510:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9900e-01, 3.0064e-03, 2.4663e-03,  ..., 9.9740e-01,
          9.9039e-01, 1.2257e-03],
         [3.1910e-04, 3.0064e-03, 2.4663e-03,  ..., 8.3294e-04,
          3.0823e-03, 1.1240e-03],
         [3.6193e-04, 3.5906e-03, 2.7894e-03,  ..., 9.3176e-04,
          3.0823e-03, 1.1240e-03],
         [3.1910e-04, 9.9040e-01, 9.9228e-01,  ..., 8.3294e-04,
          3.4441e-03, 9.9653e-01]],
        [[9.9966e-01, 2.7830e-03, 3.9943e-03,  ..., 1.1423e-03,
          2.4279e-04, 1.2963e-04],
         [1.1221e-04, 2.7830e-03, 3.9943e-03,  ..., 1.1423e-03,
          2.4279e-04, 1.2963e-04],
         [1.1221e-04, 2.7830e-03, 3.9943e-03,  ..., 1.1423e-03,
          9.9927e-01, 9.9961e-01],
         [1.1221e-04, 9.9165e-01, 9.8802e-01,  ..., 9.9657e-01,
          2.4279e-04, 1.2963e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0115e-03, 7.5873e-05, 2.6321e-03,  ..., 2.1466e-03,
          1.0251e-03, 4.6834e-03],
         [2.0115e-03, 7.5873e-05, 2.6321e-03,  ..., 2.1466e-03,
          1.0251e-03, 4.6834e-03],
         [9.9397e-01, 7.5873e-05, 2.6321e-03,  ..., 9.9356e-01,
          1.0251e-03, 9.8438e-01],
         [2.0115e-03, 9.9977e-01, 9.9210e-01,  ..., 2.1466e-03,
          9.9692e-01, 6.2485e-03]],
        [[1.9812e-02, 9.4822e-05, 1.4175e-03,  ..., 2.5435e-03,
          3.9502e-03, 9.9818e-01],
         [1.9812e-02, 9.4822e-05, 1.4175e-03,  ..., 2.5435e-03,
          3.9502e-03, 6.0716e-04],
         [9.0608e-01, 9.4822e-05, 1.4175e-03,  ..., 9.9237e-01,
          9.8815e-01, 6.0716e-04],
         [5.4298e-02, 9.9972e-01, 9.9575e-01,  ..., 2.5435e-03,
          3.9502e-03, 6.0716e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 511:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9199e-01, 1.4089e-03, 2.1257e-03,  ..., 9.9921e-01,
          9.9644e-01, 3.3824e-02],
         [2.5453e-03, 1.4089e-03, 2.1257e-03,  ..., 2.6450e-04,
          1.1178e-03, 2.6673e-02],
         [2.9174e-03, 1.4089e-03, 2.2011e-03,  ..., 2.6450e-04,
          1.3222e-03, 5.0810e-02],
         [2.5453e-03, 9.9577e-01, 9.9355e-01,  ..., 2.6450e-04,
          1.1178e-03, 8.8869e-01]],
        [[9.8489e-01, 2.8798e-03, 1.5335e-03,  ..., 7.3218e-03,
          4.6586e-04, 5.1770e-04],
         [3.8151e-03, 2.8798e-03, 1.5335e-03,  ..., 6.8954e-03,
          4.6586e-04, 5.1770e-04],
         [7.7096e-03, 3.6271e-03, 1.5335e-03,  ..., 9.4860e-03,
          9.9860e-01, 9.9845e-01],
         [3.5857e-03, 9.9061e-01, 9.9540e-01,  ..., 9.7630e-01,
          4.6586e-04, 5.1770e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:33,283 [Process: 0] Synchronize training processes
2024-08-18 19:54:33,284 [Process: 0] Evaluating...
2024-08-18 19:54:33,286 [Process: 0] EPOCH 511:
2024-08-18 19:54:33,288 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:34,434 [Process: 0] Synchronize training processes
2024-08-18 19:54:34,435 [Process: 0] Evaluating...
2024-08-18 19:54:34,440 [Process: 0] EPOCH 512:
2024-08-18 19:54:34,442 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2949e-03, 7.9924e-05, 4.8506e-04,  ..., 6.0570e-03,
          6.2576e-02, 2.4113e-03],
         [7.2949e-03, 7.9924e-05, 4.8506e-04,  ..., 6.0570e-03,
          3.4622e-02, 2.4113e-03],
         [9.7724e-01, 7.9924e-05, 4.8506e-04,  ..., 9.8169e-01,
          1.3608e-01, 9.9277e-01],
         [8.1682e-03, 9.9976e-01, 9.9854e-01,  ..., 6.1917e-03,
          7.6672e-01, 2.4113e-03]],
        [[2.4136e-03, 1.4390e-04, 2.5253e-04,  ..., 9.7247e-03,
          8.5769e-03, 9.9837e-01],
         [2.4136e-03, 1.4390e-04, 2.5253e-04,  ..., 7.9852e-03,
          7.5226e-03, 5.4434e-04],
         [9.9276e-01, 1.4390e-04, 2.5253e-04,  ..., 9.7419e-01,
          9.7625e-01, 5.4434e-04],
         [2.4136e-03, 9.9957e-01, 9.9924e-01,  ..., 8.1048e-03,
          7.6554e-03, 5.4434e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 512:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9920e-01, 2.5132e-03, 1.7614e-03,  ..., 9.9897e-01,
          9.9374e-01, 2.9902e-02],
         [2.1502e-04, 2.5132e-03, 1.7614e-03,  ..., 3.4175e-04,
          1.8022e-03, 2.9902e-02],
         [3.6964e-04, 2.5132e-03, 1.7614e-03,  ..., 3.4175e-04,
          1.8022e-03, 2.8856e-01],
         [2.1502e-04, 9.9246e-01, 9.9472e-01,  ..., 3.4175e-04,
          2.6561e-03, 6.5164e-01]],
        [[9.9783e-01, 3.2352e-03, 4.2137e-03,  ..., 2.1707e-03,
          2.1811e-03, 1.5437e-04],
         [7.2192e-04, 6.5835e-03, 3.9821e-03,  ..., 2.1707e-03,
          2.1811e-03, 1.5437e-04],
         [7.2192e-04, 3.2352e-03, 4.7777e-03,  ..., 2.1707e-03,
          9.9346e-01, 9.9954e-01],
         [7.2192e-04, 9.8695e-01, 9.8703e-01,  ..., 9.9349e-01,
          2.1811e-03, 1.5437e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4792e-03, 3.0296e-03, 1.0878e-04,  ..., 6.3265e-03,
          2.0054e-03, 3.7840e-03],
         [3.4792e-03, 1.8380e-03, 1.0878e-04,  ..., 6.3265e-03,
          2.0054e-03, 3.7840e-03],
         [9.8956e-01, 1.8380e-03, 1.0878e-04,  ..., 9.8039e-01,
          2.0054e-03, 9.8865e-01],
         [3.4792e-03, 9.9329e-01, 9.9967e-01,  ..., 6.9554e-03,
          9.9398e-01, 3.7840e-03]],
        [[1.9909e-02, 8.1390e-05, 6.9653e-04,  ..., 3.1482e-03,
          3.3456e-03, 9.9912e-01],
         [1.8785e-02, 8.1390e-05, 4.4075e-04,  ..., 3.1482e-03,
          3.3456e-03, 2.9356e-04],
         [9.1946e-01, 8.1390e-05, 4.4075e-04,  ..., 9.9056e-01,
          9.8996e-01, 2.9356e-04],
         [4.1848e-02, 9.9976e-01, 9.9842e-01,  ..., 3.1482e-03,
          3.3456e-03, 2.9356e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 513:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:35,587 [Process: 0] Synchronize training processes
2024-08-18 19:54:35,587 [Process: 0] Evaluating...
2024-08-18 19:54:35,589 [Process: 0] EPOCH 513:
2024-08-18 19:54:35,591 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9089e-01, 2.3977e-03, 3.1961e-03,  ..., 9.9916e-01,
          9.8934e-01, 3.0258e-02],
         [1.7991e-03, 2.3977e-03, 3.1793e-03,  ..., 2.6457e-04,
          2.9742e-03, 3.0258e-02],
         [5.5103e-03, 2.3977e-03, 3.2229e-03,  ..., 3.1283e-04,
          2.9742e-03, 2.8010e-01],
         [1.7991e-03, 9.9281e-01, 9.9040e-01,  ..., 2.6457e-04,
          4.7142e-03, 6.5939e-01]],
        [[9.9672e-01, 9.8334e-04, 1.6043e-03,  ..., 8.4063e-04,
          9.9372e-05, 3.2203e-04],
         [8.4852e-04, 9.8334e-04, 1.6043e-03,  ..., 8.4063e-04,
          9.9372e-05, 3.2203e-04],
         [1.5794e-03, 9.8334e-04, 1.6043e-03,  ..., 8.4063e-04,
          9.9970e-01, 9.9903e-01],
         [8.4852e-04, 9.9705e-01, 9.9519e-01,  ..., 9.9748e-01,
          9.9372e-05, 3.2203e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5220e-03, 7.5294e-05, 2.8070e-04,  ..., 9.3854e-03,
          1.0511e-03, 3.2139e-03],
         [3.5220e-03, 7.5294e-05, 2.8070e-04,  ..., 9.3392e-03,
          1.0511e-03, 3.2139e-03],
         [9.8943e-01, 7.5294e-05, 2.8070e-04,  ..., 9.6886e-01,
          1.0511e-03, 9.9036e-01],
         [3.5220e-03, 9.9977e-01, 9.9916e-01,  ..., 1.2411e-02,
          9.9685e-01, 3.2139e-03]],
        [[4.3082e-03, 2.2103e-04, 1.4537e-03,  ..., 1.4496e-02,
          9.5444e-04, 9.8617e-01],
         [4.3082e-03, 2.2103e-04, 6.5238e-04,  ..., 1.1186e-02,
          9.5444e-04, 3.9182e-03],
         [9.8613e-01, 2.2103e-04, 6.5238e-04,  ..., 9.5915e-01,
          9.9714e-01, 3.9182e-03],
         [5.2518e-03, 9.9934e-01, 9.9724e-01,  ..., 1.5172e-02,
          9.5444e-04, 5.9893e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 514:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9590e-01, 2.2510e-03, 6.9200e-03,  ..., 9.9625e-01,
          9.9418e-01, 1.7145e-03],
         [1.1211e-03, 2.2510e-03, 5.2611e-03,  ..., 1.3485e-03,
          1.8285e-03, 1.7145e-03],
         [1.8562e-03, 2.2510e-03, 6.4296e-03,  ..., 1.1996e-03,
          1.8285e-03, 1.7145e-03],
         [1.1211e-03, 9.9325e-01, 9.8139e-01,  ..., 1.1996e-03,
          2.1662e-03, 9.9486e-01]],
        [[9.9814e-01, 2.0842e-03, 3.0698e-03,  ..., 3.9759e-03,
          1.1723e-04, 4.2787e-03],
         [6.1846e-04, 2.0842e-03, 3.0698e-03,  ..., 2.7524e-03,
          1.1723e-04, 4.2787e-03],
         [6.1846e-04, 2.0842e-03, 3.5468e-03,  ..., 2.7524e-03,
          9.9965e-01, 9.8716e-01],
         [6.1846e-04, 9.9375e-01, 9.9031e-01,  ..., 9.9052e-01,
          1.1723e-04, 4.2787e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2714e-03, 8.5819e-04, 4.1838e-04,  ..., 2.5818e-03,
          1.8816e-04, 4.8890e-03],
         [2.2714e-03, 8.5819e-04, 4.1838e-04,  ..., 2.5818e-03,
          1.8816e-04, 4.8890e-03],
         [9.9319e-01, 8.5819e-04, 4.1838e-04,  ..., 9.9225e-01,
          1.8816e-04, 9.8533e-01],
         [2.2714e-03, 9.9743e-01, 9.9874e-01,  ..., 2.5818e-03,
          9.9944e-01, 4.8890e-03]],
        [[1.0702e-03, 1.7199e-04, 4.4361e-05,  ..., 9.9505e-04,
          4.9796e-03, 9.9991e-01],
         [1.0702e-03, 1.7199e-04, 4.4361e-05,  ..., 9.9505e-04,
          3.0360e-03, 2.8622e-05],
         [9.9679e-01, 1.7199e-04, 4.4361e-05,  ..., 9.9701e-01,
          9.8895e-01, 2.8622e-05],
         [1.0702e-03, 9.9948e-01, 9.9987e-01,  ..., 9.9505e-04,
          3.0360e-03, 2.8622e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 515:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:36,735 [Process: 0] Synchronize training processes
2024-08-18 19:54:36,735 [Process: 0] Evaluating...
2024-08-18 19:54:36,737 [Process: 0] EPOCH 514:
2024-08-18 19:54:36,738 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:37,883 [Process: 0] Synchronize training processes
2024-08-18 19:54:37,883 [Process: 0] Evaluating...
2024-08-18 19:54:37,885 [Process: 0] EPOCH 515:
2024-08-18 19:54:37,887 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9895e-01, 4.0770e-03, 4.5333e-03,  ..., 9.9880e-01,
          9.8062e-01, 2.6619e-03],
         [3.0494e-04, 4.0770e-03, 4.7897e-03,  ..., 4.0099e-04,
          5.2031e-03, 2.6619e-03],
         [4.3607e-04, 4.8061e-03, 4.5849e-03,  ..., 4.0099e-04,
          7.9839e-03, 3.7874e-03],
         [3.0494e-04, 9.8704e-01, 9.8609e-01,  ..., 4.0099e-04,
          6.1889e-03, 9.9089e-01]],
        [[9.9870e-01, 2.3697e-03, 3.9914e-03,  ..., 2.3868e-03,
          4.2029e-04, 3.8654e-05],
         [4.3464e-04, 2.3697e-03, 3.5538e-03,  ..., 2.3868e-03,
          4.2029e-04, 3.8654e-05],
         [4.3464e-04, 2.3697e-03, 4.8746e-03,  ..., 2.3868e-03,
          9.9874e-01, 9.9988e-01],
         [4.3464e-04, 9.9289e-01, 9.8758e-01,  ..., 9.9284e-01,
          4.2029e-04, 3.8654e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4230e-03, 1.3311e-04, 1.5774e-03,  ..., 5.3686e-03,
          5.1886e-04, 1.7617e-03],
         [2.8051e-03, 1.3311e-04, 1.5774e-03,  ..., 5.3686e-03,
          5.1886e-04, 1.7617e-03],
         [9.9097e-01, 1.3311e-04, 1.5774e-03,  ..., 9.8284e-01,
          5.1886e-04, 9.9472e-01],
         [2.8051e-03, 9.9960e-01, 9.9527e-01,  ..., 6.4209e-03,
          9.9844e-01, 1.7617e-03]],
        [[8.5515e-04, 6.6173e-04, 1.3086e-05,  ..., 4.7669e-03,
          1.0829e-02, 9.9786e-01],
         [8.5515e-04, 6.6173e-04, 1.3086e-05,  ..., 4.7669e-03,
          8.6272e-03, 7.1353e-04],
         [9.9743e-01, 6.6173e-04, 1.3086e-05,  ..., 9.8570e-01,
          9.7060e-01, 7.1353e-04],
         [8.5515e-04, 9.9801e-01, 9.9996e-01,  ..., 4.7669e-03,
          9.9410e-03, 7.1353e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 516:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9101e-01, 8.2163e-03, 1.5725e-03,  ..., 9.9768e-01,
          9.9669e-01, 9.3180e-04],
         [2.4961e-03, 7.5388e-03, 1.5725e-03,  ..., 9.8716e-04,
          9.4683e-04, 9.3180e-04],
         [4.6479e-03, 7.0902e-03, 1.5897e-03,  ..., 6.6740e-04,
          1.4116e-03, 9.3180e-04],
         [1.8442e-03, 9.7715e-01, 9.9527e-01,  ..., 6.6740e-04,
          9.4683e-04, 9.9720e-01]],
        [[9.9604e-01, 4.2886e-03, 5.8845e-03,  ..., 1.5885e-03,
          2.5733e-03, 1.4077e-04],
         [1.3192e-03, 9.8320e-03, 3.8982e-03,  ..., 1.5885e-03,
          2.5733e-03, 1.4077e-04],
         [1.3192e-03, 4.8088e-03, 5.1777e-03,  ..., 2.1452e-03,
          9.9228e-01, 9.9958e-01],
         [1.3192e-03, 9.8107e-01, 9.8504e-01,  ..., 9.9468e-01,
          2.5733e-03, 1.4077e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:39,031 [Process: 0] Synchronize training processes
2024-08-18 19:54:39,031 [Process: 0] Evaluating...
2024-08-18 19:54:39,033 [Process: 0] EPOCH 516:
2024-08-18 19:54:39,035 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:40,179 [Process: 0] Synchronize training processes
2024-08-18 19:54:40,179 [Process: 0] Evaluating...
2024-08-18 19:54:40,181 [Process: 0] EPOCH 517:
2024-08-18 19:54:40,183 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6148e-02, 1.7935e-05, 7.8427e-05,  ..., 8.6932e-03,
          4.5728e-03, 4.6966e-03],
         [1.3013e-02, 1.7935e-05, 7.8427e-05,  ..., 8.6932e-03,
          4.5728e-03, 4.6966e-03],
         [9.3783e-01, 1.7935e-05, 7.8427e-05,  ..., 9.7213e-01,
          4.5728e-03, 9.8591e-01],
         [1.3013e-02, 9.9995e-01, 9.9976e-01,  ..., 1.0488e-02,
          9.8628e-01, 4.6966e-03]],
        [[1.3700e-03, 5.8485e-04, 5.8034e-05,  ..., 1.5391e-03,
          3.1183e-03, 9.9753e-01],
         [1.3700e-03, 5.8485e-04, 5.8034e-05,  ..., 1.5391e-03,
          3.1183e-03, 8.2398e-04],
         [9.9589e-01, 5.8485e-04, 5.8034e-05,  ..., 9.9538e-01,
          9.9065e-01, 8.2398e-04],
         [1.3700e-03, 9.9825e-01, 9.9983e-01,  ..., 1.5391e-03,
          3.1183e-03, 8.2398e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 517:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9483e-01, 1.1100e-03, 3.8887e-03,  ..., 9.9993e-01,
          9.9455e-01, 1.0853e-03],
         [1.3140e-03, 1.1100e-03, 3.8887e-03,  ..., 2.3320e-05,
          1.6225e-03, 1.0853e-03],
         [2.5454e-03, 1.1100e-03, 3.8887e-03,  ..., 2.3320e-05,
          2.2098e-03, 1.0853e-03],
         [1.3140e-03, 9.9667e-01, 9.8833e-01,  ..., 2.3320e-05,
          1.6225e-03, 9.9674e-01]],
        [[9.9129e-01, 4.4708e-03, 7.6937e-04,  ..., 3.8182e-03,
          6.4804e-04, 3.1491e-04],
         [2.2885e-03, 5.1398e-03, 7.6937e-04,  ..., 3.4403e-03,
          6.4804e-04, 3.1491e-04],
         [2.9791e-03, 5.2779e-03, 7.6937e-04,  ..., 3.7678e-03,
          9.9806e-01, 9.9906e-01],
         [3.4374e-03, 9.8511e-01, 9.9769e-01,  ..., 9.8897e-01,
          6.4804e-04, 3.1491e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0736e-02, 9.2588e-06, 2.1323e-03,  ..., 2.6593e-03,
          1.1603e-02, 2.0202e-03],
         [3.7132e-03, 9.2588e-06, 2.1323e-03,  ..., 2.6593e-03,
          1.1417e-02, 2.0202e-03],
         [9.8184e-01, 9.2588e-06, 2.1323e-03,  ..., 9.9202e-01,
          1.4091e-02, 9.9394e-01],
         [3.7132e-03, 9.9997e-01, 9.9360e-01,  ..., 2.6593e-03,
          9.6289e-01, 2.0202e-03]],
        [[1.7544e-03, 2.3804e-04, 5.2142e-05,  ..., 2.7209e-03,
          3.4620e-02, 9.9699e-01],
         [1.7544e-03, 2.3804e-04, 5.2142e-05,  ..., 2.7209e-03,
          2.2396e-02, 1.0030e-03],
         [9.9474e-01, 2.3804e-04, 5.2142e-05,  ..., 9.9184e-01,
          9.0095e-01, 1.0030e-03],
         [1.7544e-03, 9.9929e-01, 9.9984e-01,  ..., 2.7209e-03,
          4.2038e-02, 1.0086e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 518:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9829e-01, 1.8023e-03, 1.3826e-03,  ..., 9.9987e-01,
          9.9804e-01, 1.5384e-03],
         [5.2771e-04, 1.9255e-03, 1.3826e-03,  ..., 4.4680e-05,
          6.5198e-04, 1.5311e-03],
         [6.5018e-04, 1.8023e-03, 1.3826e-03,  ..., 4.4680e-05,
          6.5198e-04, 1.5311e-03],
         [5.2771e-04, 9.9447e-01, 9.9585e-01,  ..., 4.4680e-05,
          6.5198e-04, 9.9540e-01]],
        [[9.9986e-01, 2.1354e-02, 3.3955e-03,  ..., 1.4263e-03,
          1.3135e-04, 9.5065e-05],
         [4.7013e-05, 8.4589e-03, 3.0783e-03,  ..., 1.4263e-03,
          1.3135e-04, 9.5065e-05],
         [4.7013e-05, 1.3550e-02, 3.0783e-03,  ..., 1.4263e-03,
          9.9961e-01, 9.9971e-01],
         [4.7013e-05, 9.5664e-01, 9.9045e-01,  ..., 9.9572e-01,
          1.3135e-04, 9.5065e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:41,342 [Process: 0] Synchronize training processes
2024-08-18 19:54:41,342 [Process: 0] Evaluating...
2024-08-18 19:54:41,344 [Process: 0] EPOCH 518:
2024-08-18 19:54:41,346 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5702e-02, 4.5171e-04, 5.8466e-04,  ..., 4.2107e-03,
          4.7461e-04, 7.4698e-03],
         [7.2900e-03, 6.3411e-04, 5.8466e-04,  ..., 4.2107e-03,
          4.7461e-04, 7.4698e-03],
         [9.6972e-01, 4.5171e-04, 5.8466e-04,  ..., 9.8720e-01,
          4.7461e-04, 9.7656e-01],
         [7.2900e-03, 9.9846e-01, 9.9825e-01,  ..., 4.3793e-03,
          9.9858e-01, 8.5045e-03]],
        [[2.6666e-03, 1.2794e-03, 4.5453e-05,  ..., 2.5225e-03,
          1.4970e-03, 9.9884e-01],
         [2.6666e-03, 1.2794e-03, 4.5453e-05,  ..., 2.5225e-03,
          1.4970e-03, 3.8709e-04],
         [9.9200e-01, 1.2794e-03, 4.5453e-05,  ..., 9.9243e-01,
          9.9551e-01, 3.8709e-04],
         [2.6666e-03, 9.9616e-01, 9.9986e-01,  ..., 2.5225e-03,
          1.4970e-03, 3.8709e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 519:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9864e-01, 4.5007e-03, 2.1821e-03,  ..., 9.9869e-01,
          9.8995e-01, 3.4105e-04],
         [4.5360e-04, 4.2884e-03, 2.1821e-03,  ..., 4.3651e-04,
          2.5548e-03, 3.4105e-04],
         [4.5360e-04, 5.2240e-03, 2.1821e-03,  ..., 4.3651e-04,
          2.5548e-03, 3.4105e-04],
         [4.5360e-04, 9.8599e-01, 9.9345e-01,  ..., 4.3651e-04,
          4.9380e-03, 9.9898e-01]],
        [[9.9976e-01, 1.2013e-03, 1.2459e-03,  ..., 4.2375e-03,
          7.6998e-05, 8.4957e-05],
         [7.9753e-05, 1.2013e-03, 1.2459e-03,  ..., 4.2375e-03,
          7.6998e-05, 8.4957e-05],
         [7.9753e-05, 1.2013e-03, 1.2459e-03,  ..., 4.3967e-03,
          9.9977e-01, 9.9975e-01],
         [7.9753e-05, 9.9640e-01, 9.9626e-01,  ..., 9.8713e-01,
          7.6998e-05, 8.4957e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8808e-02, 1.1051e-04, 4.3797e-05,  ..., 3.6919e-03,
          5.8905e-04, 3.6051e-03],
         [1.5791e-02, 1.1051e-04, 4.3797e-05,  ..., 3.6919e-03,
          5.8905e-04, 3.6051e-03],
         [9.2961e-01, 1.1051e-04, 4.3797e-05,  ..., 9.8879e-01,
          5.8905e-04, 9.8918e-01],
         [1.5791e-02, 9.9967e-01, 9.9987e-01,  ..., 3.8249e-03,
          9.9823e-01, 3.6051e-03]],
        [[2.2368e-03, 3.1855e-05, 6.6947e-04,  ..., 2.8277e-03,
          3.3694e-03, 9.9941e-01],
         [2.2368e-03, 3.1855e-05, 6.6947e-04,  ..., 2.8277e-03,
          2.9888e-03, 1.9777e-04],
         [9.9329e-01, 3.1855e-05, 6.6947e-04,  ..., 9.9152e-01,
          9.9065e-01, 1.9777e-04],
         [2.2368e-03, 9.9990e-01, 9.9799e-01,  ..., 2.8277e-03,
          2.9888e-03, 1.9777e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 520:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:42,510 [Process: 0] Synchronize training processes
2024-08-18 19:54:42,511 [Process: 0] Evaluating...
2024-08-18 19:54:42,512 [Process: 0] EPOCH 519:
2024-08-18 19:54:42,514 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:43,717 [Process: 0] Synchronize training processes
2024-08-18 19:54:43,717 [Process: 0] Evaluating...
2024-08-18 19:54:43,719 [Process: 0] EPOCH 520:
2024-08-18 19:54:43,721 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9842e-01, 5.0267e-04, 5.7168e-03,  ..., 9.9865e-01,
          9.7600e-01, 2.4260e-03],
         [5.2801e-04, 5.0267e-04, 4.6793e-03,  ..., 4.5001e-04,
          4.9407e-03, 1.0945e-03],
         [5.2801e-04, 5.0267e-04, 6.5953e-03,  ..., 4.5001e-04,
          5.1389e-03, 1.0945e-03],
         [5.2801e-04, 9.9849e-01, 9.8301e-01,  ..., 4.5001e-04,
          1.3919e-02, 9.9539e-01]],
        [[9.6127e-01, 2.3105e-03, 1.5783e-03,  ..., 2.0520e-03,
          4.2220e-04, 2.8437e-05],
         [9.0025e-03, 2.3105e-03, 1.5331e-03,  ..., 2.0520e-03,
          4.2220e-04, 2.8437e-05],
         [1.1436e-02, 2.3105e-03, 1.5331e-03,  ..., 2.0520e-03,
          9.9873e-01, 9.9991e-01],
         [1.8289e-02, 9.9307e-01, 9.9536e-01,  ..., 9.9384e-01,
          4.2220e-04, 2.8437e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.8400e-02, 2.2212e-04, 4.9252e-04,  ..., 5.4208e-03,
          5.2238e-03, 2.5670e-03],
         [8.4564e-03, 2.6255e-04, 4.9252e-04,  ..., 5.4208e-03,
          5.2238e-03, 2.0382e-03],
         [9.1469e-01, 2.2212e-04, 4.9252e-04,  ..., 9.8374e-01,
          5.2876e-03, 9.9336e-01],
         [8.4564e-03, 9.9929e-01, 9.9852e-01,  ..., 5.4208e-03,
          9.8426e-01, 2.0382e-03]],
        [[2.8087e-03, 2.0812e-04, 5.7637e-04,  ..., 5.9523e-03,
          4.3718e-03, 9.9632e-01],
         [2.8087e-03, 2.0812e-04, 5.7637e-04,  ..., 5.9523e-03,
          4.3718e-03, 1.2268e-03],
         [9.9157e-01, 2.0812e-04, 5.7637e-04,  ..., 9.8208e-01,
          9.8676e-01, 1.2268e-03],
         [2.8087e-03, 9.9938e-01, 9.9827e-01,  ..., 6.0122e-03,
          4.5010e-03, 1.2268e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 521:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9989e-01, 6.8427e-03, 9.2905e-04,  ..., 9.9535e-01,
          9.9740e-01, 6.8187e-03],
         [3.8075e-05, 4.0286e-03, 9.2905e-04,  ..., 1.4227e-03,
          7.6077e-04, 4.4692e-03],
         [3.8075e-05, 4.0822e-03, 9.2905e-04,  ..., 1.8055e-03,
          1.0739e-03, 4.8089e-03],
         [3.8075e-05, 9.8505e-01, 9.9721e-01,  ..., 1.4227e-03,
          7.6077e-04, 9.8390e-01]],
        [[9.9897e-01, 1.5644e-03, 1.8153e-03,  ..., 2.0776e-03,
          1.1848e-03, 1.7015e-04],
         [3.1695e-04, 1.5644e-03, 1.7218e-03,  ..., 1.9561e-03,
          1.1848e-03, 1.7015e-04],
         [4.1128e-04, 1.5644e-03, 1.7218e-03,  ..., 1.9561e-03,
          9.9645e-01, 9.9949e-01],
         [3.0594e-04, 9.9531e-01, 9.9474e-01,  ..., 9.9401e-01,
          1.1848e-03, 1.7015e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0420e-01, 3.3124e-04, 2.7232e-04,  ..., 4.7677e-03,
          5.9301e-03, 7.8907e-03],
         [1.9405e-02, 6.6130e-04, 2.7232e-04,  ..., 4.0191e-03,
          5.1122e-03, 7.8907e-03],
         [6.5699e-01, 3.3124e-04, 2.7232e-04,  ..., 9.8719e-01,
          6.3785e-03, 9.7354e-01],
         [1.9405e-02, 9.9868e-01, 9.9918e-01,  ..., 4.0191e-03,
          9.8258e-01, 1.0677e-02]],
        [[2.4993e-03, 2.4312e-04, 2.3643e-04,  ..., 8.0697e-03,
          5.4087e-03, 9.9983e-01],
         [2.4993e-03, 2.4312e-04, 2.3643e-04,  ..., 8.0697e-03,
          5.4087e-03, 5.5840e-05],
         [9.9250e-01, 2.4312e-04, 2.3643e-04,  ..., 9.7354e-01,
          9.8326e-01, 5.5840e-05],
         [2.4993e-03, 9.9927e-01, 9.9929e-01,  ..., 1.0319e-02,
          5.9259e-03, 5.5840e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:44,903 [Process: 0] Synchronize training processes
2024-08-18 19:54:44,903 [Process: 0] Evaluating...
2024-08-18 19:54:44,905 [Process: 0] EPOCH 521:
2024-08-18 19:54:44,907 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:46,048 [Process: 0] Synchronize training processes
2024-08-18 19:54:46,049 [Process: 0] Evaluating...
2024-08-18 19:54:46,055 [Process: 0] EPOCH 522:
2024-08-18 19:54:46,056 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 522:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9364e-01, 1.1717e-02, 3.1862e-03,  ..., 9.9943e-01,
          9.8013e-01, 1.6567e-03],
         [1.0734e-03, 7.2473e-03, 2.7285e-03,  ..., 1.9024e-04,
          5.0351e-03, 1.6567e-03],
         [4.2170e-03, 1.1303e-02, 3.0953e-03,  ..., 1.9024e-04,
          5.9754e-03, 1.6567e-03],
         [1.0734e-03, 9.6973e-01, 9.9099e-01,  ..., 1.9024e-04,
          8.8592e-03, 9.9503e-01]],
        [[9.9895e-01, 9.7421e-04, 1.1442e-03,  ..., 1.0338e-03,
          1.0211e-04, 7.9473e-04],
         [3.0510e-04, 9.7421e-04, 1.1442e-03,  ..., 1.0338e-03,
          1.0211e-04, 7.9473e-04],
         [4.4142e-04, 9.7421e-04, 1.1442e-03,  ..., 1.0338e-03,
          9.9969e-01, 9.9762e-01],
         [3.0510e-04, 9.9708e-01, 9.9657e-01,  ..., 9.9690e-01,
          1.0211e-04, 7.9473e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4443e-02, 2.7656e-05, 2.8551e-04,  ..., 3.1751e-03,
          1.6904e-02, 2.8684e-03],
         [8.8379e-03, 2.7656e-05, 2.8551e-04,  ..., 3.1751e-03,
          1.5977e-02, 2.8684e-03],
         [9.5788e-01, 2.7656e-05, 2.8551e-04,  ..., 9.9047e-01,
          2.7467e-02, 9.9139e-01],
         [8.8379e-03, 9.9992e-01, 9.9914e-01,  ..., 3.1751e-03,
          9.3965e-01, 2.8684e-03]],
        [[5.7709e-04, 1.7360e-05, 1.3360e-04,  ..., 1.7747e-03,
          3.1941e-03, 9.9994e-01],
         [5.7709e-04, 1.7360e-05, 1.3360e-04,  ..., 1.7747e-03,
          3.1941e-03, 2.1514e-05],
         [9.9827e-01, 1.7360e-05, 1.3360e-04,  ..., 9.9468e-01,
          9.9042e-01, 2.1514e-05],
         [5.7709e-04, 9.9995e-01, 9.9960e-01,  ..., 1.7747e-03,
          3.1941e-03, 2.1514e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 523:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9479e-01, 3.2917e-03, 2.5018e-03,  ..., 9.9063e-01,
          9.9805e-01, 1.8685e-04],
         [1.6294e-03, 3.2917e-03, 2.5018e-03,  ..., 3.2502e-03,
          6.0097e-04, 1.8685e-04],
         [1.9539e-03, 3.2917e-03, 2.5018e-03,  ..., 3.1131e-03,
          7.4663e-04, 1.8685e-04],
         [1.6294e-03, 9.9012e-01, 9.9249e-01,  ..., 3.0095e-03,
          6.0097e-04, 9.9944e-01]],
        [[9.9399e-01, 8.4189e-03, 2.4600e-03,  ..., 2.3197e-03,
          4.0590e-04, 4.7295e-04],
         [1.6500e-03, 5.7303e-03, 1.8528e-03,  ..., 2.3197e-03,
          4.0590e-04, 4.7295e-04],
         [2.7141e-03, 8.4946e-03, 1.8528e-03,  ..., 2.6167e-03,
          9.9878e-01, 9.9858e-01],
         [1.6500e-03, 9.7736e-01, 9.9383e-01,  ..., 9.9274e-01,
          4.0590e-04, 4.7295e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:47,203 [Process: 0] Synchronize training processes
2024-08-18 19:54:47,204 [Process: 0] Evaluating...
2024-08-18 19:54:47,205 [Process: 0] EPOCH 523:
2024-08-18 19:54:47,207 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:48,351 [Process: 0] Synchronize training processes
2024-08-18 19:54:48,352 [Process: 0] Evaluating...
2024-08-18 19:54:48,353 [Process: 0] EPOCH 524:
2024-08-18 19:54:48,355 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9406e-03, 8.8513e-04, 3.5863e-04,  ..., 2.1254e-03,
          8.9919e-04, 1.2925e-03],
         [6.9406e-03, 8.8513e-04, 3.5863e-04,  ..., 2.1254e-03,
          8.9919e-04, 1.2925e-03],
         [9.7918e-01, 8.8513e-04, 3.5863e-04,  ..., 9.9362e-01,
          8.9919e-04, 9.9612e-01],
         [6.9406e-03, 9.9734e-01, 9.9892e-01,  ..., 2.1254e-03,
          9.9730e-01, 1.2925e-03]],
        [[7.7250e-04, 2.0923e-04, 8.5077e-05,  ..., 1.3943e-03,
          1.1358e-03, 9.9270e-01],
         [7.7250e-04, 2.0923e-04, 8.5077e-05,  ..., 1.3943e-03,
          1.1358e-03, 2.1681e-03],
         [9.9768e-01, 2.0923e-04, 8.5077e-05,  ..., 9.9582e-01,
          9.9659e-01, 2.1681e-03],
         [7.7250e-04, 9.9937e-01, 9.9974e-01,  ..., 1.3943e-03,
          1.1358e-03, 2.9640e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 524:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9608e-01, 2.7143e-03, 7.2173e-04,  ..., 9.9365e-01,
          9.9168e-01, 2.7201e-03],
         [8.3563e-04, 2.1808e-03, 7.2173e-04,  ..., 2.1082e-03,
          2.4882e-03, 2.8596e-03],
         [2.2501e-03, 2.1808e-03, 7.2173e-04,  ..., 2.1298e-03,
          3.3459e-03, 3.0650e-03],
         [8.3563e-04, 9.9292e-01, 9.9783e-01,  ..., 2.1082e-03,
          2.4882e-03, 9.9136e-01]],
        [[9.9913e-01, 2.2614e-03, 8.8817e-03,  ..., 6.9228e-04,
          4.1947e-04, 4.5156e-04],
         [2.9132e-04, 2.2614e-03, 6.5623e-03,  ..., 6.9228e-04,
          4.1947e-04, 4.5156e-04],
         [2.9132e-04, 2.2614e-03, 8.1740e-03,  ..., 6.9228e-04,
          9.9874e-01, 9.9865e-01],
         [2.9132e-04, 9.9322e-01, 9.7638e-01,  ..., 9.9792e-01,
          4.1947e-04, 4.5156e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.1625e-03, 1.0841e-04, 3.5090e-04,  ..., 4.1780e-03,
          8.6737e-05, 2.3457e-03],
         [4.1472e-03, 1.0841e-04, 3.5090e-04,  ..., 4.1780e-03,
          8.6737e-05, 2.3457e-03],
         [9.8554e-01, 1.0841e-04, 3.5090e-04,  ..., 9.8747e-01,
          8.6737e-05, 9.9296e-01],
         [4.1472e-03, 9.9967e-01, 9.9895e-01,  ..., 4.1780e-03,
          9.9974e-01, 2.3457e-03]],
        [[1.4576e-03, 3.5121e-04, 2.2594e-05,  ..., 1.5147e-03,
          1.0010e-02, 9.9984e-01],
         [1.4576e-03, 3.5121e-04, 2.2594e-05,  ..., 1.5147e-03,
          1.0010e-02, 5.4139e-05],
         [9.9563e-01, 3.5121e-04, 2.2594e-05,  ..., 9.9546e-01,
          9.6372e-01, 5.4139e-05],
         [1.4576e-03, 9.9895e-01, 9.9993e-01,  ..., 1.5147e-03,
          1.6264e-02, 5.4139e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 525:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9562e-01, 2.0040e-03, 1.7089e-03,  ..., 9.9191e-01,
          6.7732e-01, 1.4485e-03],
         [1.0313e-03, 2.0040e-03, 1.3837e-03,  ..., 2.1646e-03,
          2.8829e-02, 1.4485e-03],
         [2.3165e-03, 2.0626e-03, 1.3837e-03,  ..., 3.7565e-03,
          2.9183e-02, 1.4485e-03],
         [1.0313e-03, 9.9393e-01, 9.9552e-01,  ..., 2.1646e-03,
          2.6467e-01, 9.9565e-01]],
        [[9.9915e-01, 5.2002e-03, 7.5879e-04,  ..., 1.8765e-03,
          5.3651e-04, 1.5428e-04],
         [2.8476e-04, 5.2002e-03, 7.5879e-04,  ..., 1.8128e-03,
          5.3651e-04, 1.5428e-04],
         [2.8476e-04, 5.5930e-03, 7.5879e-04,  ..., 1.8128e-03,
          9.9839e-01, 9.9954e-01],
         [2.8476e-04, 9.8401e-01, 9.9772e-01,  ..., 9.9450e-01,
          5.3651e-04, 1.5428e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:49,500 [Process: 0] Synchronize training processes
2024-08-18 19:54:49,500 [Process: 0] Evaluating...
2024-08-18 19:54:49,502 [Process: 0] EPOCH 525:
2024-08-18 19:54:49,504 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4695e-03, 2.3444e-04, 2.7332e-04,  ..., 1.1618e-02,
          2.0500e-04, 6.8929e-04],
         [4.4695e-03, 2.3444e-04, 2.7332e-04,  ..., 1.1618e-02,
          2.0500e-04, 6.8929e-04],
         [9.8659e-01, 2.3444e-04, 2.7332e-04,  ..., 9.5571e-01,
          2.0500e-04, 9.9793e-01],
         [4.4695e-03, 9.9930e-01, 9.9918e-01,  ..., 2.1051e-02,
          9.9938e-01, 6.8929e-04]],
        [[1.6300e-04, 1.0174e-04, 5.2976e-06,  ..., 3.1470e-03,
          2.8065e-03, 9.9983e-01],
         [1.6300e-04, 1.0174e-04, 5.2976e-06,  ..., 3.1470e-03,
          2.8065e-03, 5.8191e-05],
         [9.9951e-01, 1.0174e-04, 5.2976e-06,  ..., 9.9056e-01,
          9.9158e-01, 5.8191e-05],
         [1.6300e-04, 9.9969e-01, 9.9998e-01,  ..., 3.1470e-03,
          2.8065e-03, 5.8191e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 526:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9797e-01, 1.2215e-02, 3.0450e-03,  ..., 9.9965e-01,
          9.9038e-01, 2.5075e-03],
         [4.7756e-04, 8.0944e-03, 2.1003e-03,  ..., 1.1750e-04,
          3.2081e-03, 2.5075e-03],
         [1.0705e-03, 1.0683e-02, 2.1003e-03,  ..., 1.1750e-04,
          3.2081e-03, 2.8482e-03],
         [4.7756e-04, 9.6901e-01, 9.9275e-01,  ..., 1.1750e-04,
          3.2081e-03, 9.9214e-01]],
        [[9.9858e-01, 1.1684e-03, 1.5129e-03,  ..., 2.0054e-03,
          6.1250e-04, 7.8838e-05],
         [4.4311e-04, 1.1684e-03, 1.5129e-03,  ..., 1.4141e-03,
          6.1250e-04, 7.8838e-05],
         [5.2957e-04, 1.1684e-03, 1.5129e-03,  ..., 1.4141e-03,
          9.9816e-01, 9.9976e-01],
         [4.4311e-04, 9.9649e-01, 9.9546e-01,  ..., 9.9517e-01,
          6.1250e-04, 7.8838e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7997e-03, 2.0048e-03, 1.2315e-03,  ..., 1.3672e-03,
          2.2356e-04, 2.2408e-03],
         [2.7997e-03, 2.0048e-03, 1.2315e-03,  ..., 1.3672e-03,
          2.2356e-04, 2.2408e-03],
         [9.9160e-01, 2.0048e-03, 1.2315e-03,  ..., 9.9590e-01,
          2.2356e-04, 9.9328e-01],
         [2.7997e-03, 9.9399e-01, 9.9631e-01,  ..., 1.3672e-03,
          9.9933e-01, 2.2408e-03]],
        [[4.8998e-04, 1.2401e-04, 1.3197e-04,  ..., 5.8467e-03,
          2.0004e-03, 9.9978e-01],
         [4.8998e-04, 1.2401e-04, 1.3197e-04,  ..., 5.8467e-03,
          1.9517e-03, 7.2232e-05],
         [9.9853e-01, 1.2401e-04, 1.3197e-04,  ..., 9.8193e-01,
          9.9410e-01, 7.2232e-05],
         [4.8998e-04, 9.9963e-01, 9.9960e-01,  ..., 6.3730e-03,
          1.9517e-03, 7.2232e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 527:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:50,649 [Process: 0] Synchronize training processes
2024-08-18 19:54:50,649 [Process: 0] Evaluating...
2024-08-18 19:54:50,651 [Process: 0] EPOCH 526:
2024-08-18 19:54:50,653 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:51,796 [Process: 0] Synchronize training processes
2024-08-18 19:54:51,796 [Process: 0] Evaluating...
2024-08-18 19:54:51,798 [Process: 0] EPOCH 527:
2024-08-18 19:54:51,800 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9594e-01, 3.4341e-03, 2.3838e-03,  ..., 9.9833e-01,
          9.9633e-01, 7.0503e-04],
         [1.0117e-03, 3.4341e-03, 3.1492e-03,  ..., 3.9602e-04,
          1.2023e-03, 7.0503e-04],
         [2.0382e-03, 3.9519e-03, 2.3838e-03,  ..., 8.7594e-04,
          1.2023e-03, 7.0503e-04],
         [1.0117e-03, 9.8918e-01, 9.9208e-01,  ..., 3.9602e-04,
          1.2681e-03, 9.9788e-01]],
        [[9.9587e-01, 1.7146e-03, 1.2325e-03,  ..., 5.9975e-04,
          7.6581e-04, 2.7212e-04],
         [1.2547e-03, 1.7146e-03, 1.2325e-03,  ..., 5.9975e-04,
          7.6581e-04, 2.7212e-04],
         [1.6163e-03, 1.7146e-03, 1.2325e-03,  ..., 5.9975e-04,
          9.9770e-01, 9.9918e-01],
         [1.2547e-03, 9.9486e-01, 9.9630e-01,  ..., 9.9820e-01,
          7.6581e-04, 2.7212e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3203e-02, 8.3161e-04, 6.1862e-04,  ..., 3.9387e-03,
          5.5577e-05, 2.2320e-03],
         [1.1985e-02, 8.3161e-04, 6.1862e-04,  ..., 3.9387e-03,
          5.5577e-05, 2.2320e-03],
         [9.5615e-01, 8.3161e-04, 6.1862e-04,  ..., 9.8818e-01,
          5.5577e-05, 9.9330e-01],
         [1.8661e-02, 9.9751e-01, 9.9814e-01,  ..., 3.9387e-03,
          9.9983e-01, 2.2320e-03]],
        [[3.2754e-03, 1.0664e-05, 1.6916e-05,  ..., 3.2646e-03,
          3.3489e-03, 9.9973e-01],
         [3.2754e-03, 1.0664e-05, 1.6916e-05,  ..., 3.2646e-03,
          3.3489e-03, 9.0305e-05],
         [9.9004e-01, 1.0664e-05, 1.6916e-05,  ..., 9.9021e-01,
          9.8995e-01, 9.0305e-05],
         [3.4079e-03, 9.9997e-01, 9.9995e-01,  ..., 3.2646e-03,
          3.3489e-03, 9.0305e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 528:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7122e-01, 1.3954e-03, 1.6863e-03,  ..., 9.9662e-01,
          9.9236e-01, 5.7256e-04],
         [5.1448e-03, 1.1662e-03, 1.6863e-03,  ..., 1.3903e-03,
          2.3025e-03, 5.7256e-04],
         [1.8493e-02, 1.1662e-03, 1.6863e-03,  ..., 1.0542e-03,
          3.0316e-03, 5.7256e-04],
         [5.1448e-03, 9.9627e-01, 9.9494e-01,  ..., 9.3744e-04,
          2.3025e-03, 9.9828e-01]],
        [[9.9982e-01, 8.8209e-04, 2.9294e-03,  ..., 9.9059e-04,
          9.5272e-04, 4.6194e-04],
         [5.8650e-05, 8.8209e-04, 2.9294e-03,  ..., 9.9059e-04,
          9.5272e-04, 4.6194e-04],
         [5.8650e-05, 8.8209e-04, 2.9294e-03,  ..., 9.9059e-04,
          9.9714e-01, 9.9861e-01],
         [5.8650e-05, 9.9735e-01, 9.9121e-01,  ..., 9.9703e-01,
          9.5272e-04, 4.6194e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:52,947 [Process: 0] Synchronize training processes
2024-08-18 19:54:52,948 [Process: 0] Evaluating...
2024-08-18 19:54:52,949 [Process: 0] EPOCH 528:
2024-08-18 19:54:52,951 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:54,095 [Process: 0] Synchronize training processes
2024-08-18 19:54:54,095 [Process: 0] Evaluating...
2024-08-18 19:54:54,097 [Process: 0] EPOCH 529:
2024-08-18 19:54:54,099 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2467e-03, 1.0423e-03, 1.4912e-04,  ..., 3.0855e-03,
          8.3020e-04, 2.7638e-03],
         [2.2467e-03, 2.1096e-03, 3.1634e-04,  ..., 3.0855e-03,
          8.3020e-04, 2.7638e-03],
         [9.9326e-01, 1.0423e-03, 1.4912e-04,  ..., 9.9074e-01,
          8.3020e-04, 9.9171e-01],
         [2.2467e-03, 9.9581e-01, 9.9939e-01,  ..., 3.0855e-03,
          9.9751e-01, 2.7638e-03]],
        [[8.6609e-04, 6.4283e-04, 3.4166e-04,  ..., 1.3942e-03,
          2.2239e-03, 9.9931e-01],
         [8.6609e-04, 6.4283e-04, 3.4166e-04,  ..., 1.3942e-03,
          2.2239e-03, 2.3005e-04],
         [9.9740e-01, 6.4283e-04, 3.4166e-04,  ..., 9.9582e-01,
          9.9333e-01, 2.3005e-04],
         [8.6609e-04, 9.9807e-01, 9.9898e-01,  ..., 1.3942e-03,
          2.2239e-03, 2.3005e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 529:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7153e-01, 2.7507e-03, 2.1979e-03,  ..., 9.9940e-01,
          9.9895e-01, 7.4646e-04],
         [1.2484e-02, 2.7507e-03, 2.1979e-03,  ..., 1.9875e-04,
          3.3319e-04, 7.4646e-04],
         [9.1317e-03, 3.0456e-03, 2.1979e-03,  ..., 1.9875e-04,
          3.7887e-04, 7.4646e-04],
         [6.8512e-03, 9.9145e-01, 9.9341e-01,  ..., 1.9875e-04,
          3.3319e-04, 9.9776e-01]],
        [[9.5593e-01, 3.9593e-03, 5.4754e-03,  ..., 2.3729e-04,
          1.5302e-03, 4.8787e-05],
         [1.3814e-02, 3.9593e-03, 4.2952e-03,  ..., 2.3729e-04,
          1.5302e-03, 4.8787e-05],
         [1.3379e-02, 4.9203e-03, 4.2952e-03,  ..., 2.3729e-04,
          9.9541e-01, 9.9985e-01],
         [1.6881e-02, 9.8716e-01, 9.8593e-01,  ..., 9.9929e-01,
          1.5302e-03, 4.8787e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9714e-03, 3.7372e-04, 4.4894e-05,  ..., 4.7156e-03,
          7.0854e-04, 7.0707e-02],
         [1.9714e-03, 3.7372e-04, 4.4894e-05,  ..., 4.7156e-03,
          7.0854e-04, 2.0283e-02],
         [9.9409e-01, 3.7372e-04, 4.4894e-05,  ..., 9.8541e-01,
          7.0854e-04, 8.8598e-01],
         [1.9714e-03, 9.9888e-01, 9.9987e-01,  ..., 5.1610e-03,
          9.9787e-01, 2.3034e-02]],
        [[5.2784e-04, 1.9102e-04, 5.0279e-05,  ..., 4.8676e-03,
          1.8725e-03, 9.9807e-01],
         [5.2784e-04, 1.9102e-04, 5.0279e-05,  ..., 4.8676e-03,
          1.8725e-03, 6.4364e-04],
         [9.9842e-01, 1.9102e-04, 5.0279e-05,  ..., 9.8540e-01,
          9.9438e-01, 6.4364e-04],
         [5.2784e-04, 9.9943e-01, 9.9985e-01,  ..., 4.8676e-03,
          1.8725e-03, 6.4364e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 530:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:55,242 [Process: 0] Synchronize training processes
2024-08-18 19:54:55,242 [Process: 0] Evaluating...
2024-08-18 19:54:55,244 [Process: 0] EPOCH 530:
2024-08-18 19:54:55,245 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:56,391 [Process: 0] Synchronize training processes
2024-08-18 19:54:56,391 [Process: 0] Evaluating...
2024-08-18 19:54:56,393 [Process: 0] EPOCH 531:
2024-08-18 19:54:56,395 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9364e-01, 2.1525e-03, 5.3164e-03,  ..., 9.9740e-01,
          9.9510e-01, 1.6654e-03],
         [6.5678e-03, 2.1525e-03, 3.9482e-03,  ..., 6.8240e-04,
          1.5154e-03, 1.6654e-03],
         [9.3224e-02, 2.7062e-03, 4.5053e-03,  ..., 1.2351e-03,
          1.8707e-03, 1.6654e-03],
         [6.5678e-03, 9.9299e-01, 9.8623e-01,  ..., 6.8240e-04,
          1.5154e-03, 9.9500e-01]],
        [[9.9834e-01, 2.1525e-03, 2.8491e-03,  ..., 2.1037e-03,
          2.6058e-04, 2.0029e-04],
         [5.3572e-04, 2.1525e-03, 2.8491e-03,  ..., 3.4225e-03,
          2.6058e-04, 2.0029e-04],
         [5.9030e-04, 2.1525e-03, 3.6816e-03,  ..., 2.1037e-03,
          9.9922e-01, 9.9940e-01],
         [5.3572e-04, 9.9354e-01, 9.9062e-01,  ..., 9.9237e-01,
          2.6058e-04, 2.0029e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1175e-03, 1.8421e-04, 3.8111e-04,  ..., 4.9923e-03,
          5.6141e-02, 5.8672e-03],
         [3.1175e-03, 1.8421e-04, 3.8111e-04,  ..., 4.9923e-03,
          4.1233e-02, 5.4100e-03],
         [9.9065e-01, 1.8421e-04, 3.8111e-04,  ..., 9.8502e-01,
          3.3427e-01, 9.8331e-01],
         [3.1175e-03, 9.9945e-01, 9.9886e-01,  ..., 4.9923e-03,
          5.6836e-01, 5.4100e-03]],
        [[7.6450e-04, 2.2640e-04, 2.9157e-05,  ..., 7.8832e-03,
          8.4396e-03, 9.9135e-01],
         [7.6450e-04, 2.2640e-04, 2.7135e-05,  ..., 7.8832e-03,
          7.5827e-03, 2.5381e-03],
         [9.9771e-01, 2.2640e-04, 2.7135e-05,  ..., 9.7329e-01,
          9.7600e-01, 2.5381e-03],
         [7.6450e-04, 9.9932e-01, 9.9992e-01,  ..., 1.0948e-02,
          7.9792e-03, 3.5750e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 531:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.4219e-01, 1.2473e-03, 5.6145e-03,  ..., 9.9936e-01,
          9.9654e-01, 8.0201e-04],
         [9.1043e-03, 1.2473e-03, 3.2667e-03,  ..., 2.1487e-04,
          1.1530e-03, 8.0201e-04],
         [1.3960e-01, 1.2473e-03, 3.6612e-03,  ..., 2.1487e-04,
          1.1530e-03, 8.0201e-04],
         [9.1043e-03, 9.9626e-01, 9.8746e-01,  ..., 2.1487e-04,
          1.1530e-03, 9.9759e-01]],
        [[9.9792e-01, 2.2179e-03, 4.9316e-03,  ..., 8.8722e-04,
          1.3602e-03, 1.4905e-04],
         [6.9239e-04, 2.2179e-03, 4.3146e-03,  ..., 8.8722e-04,
          1.3602e-03, 1.4905e-04],
         [6.9239e-04, 2.5724e-03, 5.4324e-03,  ..., 8.8722e-04,
          9.9592e-01, 9.9955e-01],
         [6.9239e-04, 9.9299e-01, 9.8532e-01,  ..., 9.9734e-01,
          1.3602e-03, 1.4905e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0013e-02, 1.0650e-03, 1.6523e-04,  ..., 2.4969e-03,
          2.9196e-02, 2.2392e-03],
         [1.0013e-02, 1.3151e-03, 1.6523e-04,  ..., 2.4969e-03,
          2.6052e-02, 2.2392e-03],
         [9.6254e-01, 1.0650e-03, 1.6523e-04,  ..., 9.9251e-01,
          1.0138e-01, 9.9328e-01],
         [1.7436e-02, 9.9655e-01, 9.9950e-01,  ..., 2.4969e-03,
          8.4338e-01, 2.2392e-03]],
        [[3.6097e-03, 6.4132e-05, 2.7994e-04,  ..., 8.8804e-03,
          5.2399e-03, 9.9420e-01],
         [3.6097e-03, 6.4132e-05, 2.7994e-04,  ..., 6.6838e-03,
          4.3784e-03, 1.9328e-03],
         [9.8904e-01, 6.4132e-05, 2.7994e-04,  ..., 9.7775e-01,
          9.8600e-01, 1.9328e-03],
         [3.7421e-03, 9.9981e-01, 9.9916e-01,  ..., 6.6838e-03,
          4.3784e-03, 1.9328e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 532:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:57,539 [Process: 0] Synchronize training processes
2024-08-18 19:54:57,539 [Process: 0] Evaluating...
2024-08-18 19:54:57,545 [Process: 0] EPOCH 532:
2024-08-18 19:54:57,547 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.0759e-01, 1.9417e-03, 1.1145e-03,  ..., 9.9868e-01,
          9.5741e-01, 5.3873e-04],
         [2.0515e-02, 1.2091e-03, 1.1145e-03,  ..., 4.3743e-04,
          9.7532e-03, 5.3873e-04],
         [3.5138e-01, 1.2091e-03, 1.1145e-03,  ..., 4.4588e-04,
          1.2731e-02, 5.3873e-04],
         [2.0515e-02, 9.9564e-01, 9.9666e-01,  ..., 4.3743e-04,
          2.0103e-02, 9.9838e-01]],
        [[9.9829e-01, 2.4168e-03, 1.4602e-02,  ..., 2.5198e-03,
          4.0661e-04, 4.7684e-04],
         [5.6851e-04, 2.4168e-03, 6.8928e-03,  ..., 2.8535e-03,
          4.0661e-04, 4.7684e-04],
         [5.6851e-04, 2.4168e-03, 1.0547e-02,  ..., 2.5198e-03,
          9.9878e-01, 9.9857e-01],
         [5.6851e-04, 9.9275e-01, 9.6796e-01,  ..., 9.9211e-01,
          4.0661e-04, 4.7684e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0968e-03, 6.6261e-04, 1.9636e-04,  ..., 4.5500e-03,
          7.1452e-03, 1.0192e-02],
         [2.0968e-03, 1.2462e-03, 2.9982e-04,  ..., 4.5500e-03,
          5.9197e-03, 9.5103e-03],
         [9.9371e-01, 6.6261e-04, 1.9636e-04,  ..., 9.8635e-01,
          5.9197e-03, 9.6720e-01],
         [2.0968e-03, 9.9743e-01, 9.9931e-01,  ..., 4.5500e-03,
          9.8102e-01, 1.3098e-02]],
        [[6.3946e-04, 2.8835e-05, 7.8787e-06,  ..., 1.1128e-02,
          8.7540e-04, 9.9808e-01],
         [6.3946e-04, 2.8835e-05, 7.8787e-06,  ..., 1.0537e-02,
          8.7540e-04, 5.5277e-04],
         [9.9808e-01, 2.8835e-05, 7.8787e-06,  ..., 9.6310e-01,
          9.9737e-01, 5.5277e-04],
         [6.3946e-04, 9.9991e-01, 9.9998e-01,  ..., 1.5237e-02,
          8.7540e-04, 8.1460e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 533:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0587e-01, 3.7330e-03, 3.4340e-03,  ..., 9.9981e-01,
          9.8368e-01, 3.0321e-04],
         [3.5956e-03, 3.7330e-03, 3.4340e-03,  ..., 6.3809e-05,
          4.8600e-03, 3.0321e-04],
         [8.6942e-02, 3.7330e-03, 3.8634e-03,  ..., 6.3809e-05,
          5.8707e-03, 3.0321e-04],
         [3.5956e-03, 9.8880e-01, 9.8927e-01,  ..., 6.3809e-05,
          5.5857e-03, 9.9909e-01]],
        [[9.9980e-01, 3.1623e-03, 3.1908e-03,  ..., 8.9317e-04,
          1.0574e-03, 3.6260e-04],
         [6.8144e-05, 3.1623e-03, 3.1908e-03,  ..., 8.9317e-04,
          1.0574e-03, 3.6260e-04],
         [6.8144e-05, 3.2554e-03, 3.5210e-03,  ..., 8.9317e-04,
          9.9683e-01, 9.9891e-01],
         [6.8144e-05, 9.9042e-01, 9.9010e-01,  ..., 9.9732e-01,
          1.0574e-03, 3.6260e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:54:58,690 [Process: 0] Synchronize training processes
2024-08-18 19:54:58,691 [Process: 0] Evaluating...
2024-08-18 19:54:58,692 [Process: 0] EPOCH 533:
2024-08-18 19:54:58,695 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:54:59,841 [Process: 0] Synchronize training processes
2024-08-18 19:54:59,842 [Process: 0] Evaluating...
2024-08-18 19:54:59,843 [Process: 0] EPOCH 534:
2024-08-18 19:54:59,845 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4167e-03, 6.5842e-04, 1.5115e-04,  ..., 5.1954e-03,
          2.1523e-04, 2.1067e-03],
         [2.4167e-03, 6.5842e-04, 1.5115e-04,  ..., 5.1954e-03,
          2.1523e-04, 2.1067e-03],
         [9.9275e-01, 6.5842e-04, 1.5115e-04,  ..., 9.8441e-01,
          2.1523e-04, 9.9368e-01],
         [2.4167e-03, 9.9802e-01, 9.9955e-01,  ..., 5.1954e-03,
          9.9935e-01, 2.1067e-03]],
        [[1.8177e-03, 1.4462e-04, 3.5927e-04,  ..., 7.6311e-03,
          4.3285e-03, 9.9696e-01],
         [1.8177e-03, 1.4462e-04, 3.5927e-04,  ..., 7.6311e-03,
          3.4848e-03, 1.0107e-03],
         [9.9455e-01, 1.4462e-04, 3.5927e-04,  ..., 9.7453e-01,
          9.8870e-01, 1.0107e-03],
         [1.8177e-03, 9.9957e-01, 9.9892e-01,  ..., 1.0205e-02,
          3.4848e-03, 1.0178e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 534:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8531e-01, 1.8361e-03, 1.3459e-03,  ..., 9.9979e-01,
          6.2005e-02, 1.9051e-03],
         [2.3125e-03, 1.8361e-03, 1.3459e-03,  ..., 6.9343e-05,
          2.6316e-02, 1.9051e-03],
         [1.0069e-02, 1.8361e-03, 1.3459e-03,  ..., 6.9343e-05,
          4.6160e-02, 1.9051e-03],
         [2.3125e-03, 9.9449e-01, 9.9596e-01,  ..., 6.9343e-05,
          8.6552e-01, 9.9428e-01]],
        [[9.9867e-01, 3.3257e-03, 3.6893e-03,  ..., 8.9195e-04,
          4.3937e-04, 4.3574e-04],
         [4.4291e-04, 3.6556e-03, 4.4869e-03,  ..., 8.9195e-04,
          4.3937e-04, 4.3574e-04],
         [4.4291e-04, 3.3257e-03, 3.7702e-03,  ..., 8.9195e-04,
          9.9868e-01, 9.9869e-01],
         [4.4291e-04, 9.8969e-01, 9.8805e-01,  ..., 9.9732e-01,
          4.3937e-04, 4.3574e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6657e-03, 8.6013e-05, 1.1828e-04,  ..., 3.4593e-03,
          5.5066e-05, 3.1540e-03],
         [3.1104e-03, 8.6013e-05, 1.1828e-04,  ..., 3.1930e-03,
          5.5066e-05, 3.1540e-03],
         [9.8911e-01, 8.6013e-05, 1.1828e-04,  ..., 9.9015e-01,
          5.5066e-05, 9.9054e-01],
         [3.1104e-03, 9.9974e-01, 9.9965e-01,  ..., 3.1930e-03,
          9.9983e-01, 3.1540e-03]],
        [[3.0081e-03, 9.0125e-05, 1.1607e-04,  ..., 1.0427e-02,
          3.7897e-03, 9.9996e-01],
         [3.0081e-03, 9.0125e-05, 1.1607e-04,  ..., 1.0112e-02,
          3.7897e-03, 1.3570e-05],
         [9.9098e-01, 9.0125e-05, 1.1607e-04,  ..., 9.6509e-01,
          9.8817e-01, 1.3570e-05],
         [3.0081e-03, 9.9973e-01, 9.9965e-01,  ..., 1.4373e-02,
          4.2549e-03, 1.3570e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 535:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1648e-01, 2.2089e-03, 2.3463e-03,  ..., 9.9891e-01,
          7.1492e-02, 2.3140e-03],
         [1.8868e-02, 2.2089e-03, 2.3463e-03,  ..., 3.6352e-04,
          2.3263e-02, 5.2337e-03],
         [2.4578e-01, 2.8362e-03, 2.5102e-03,  ..., 3.6352e-04,
          3.3874e-02, 2.3959e-03],
         [1.8868e-02, 9.9275e-01, 9.9280e-01,  ..., 3.6352e-04,
          8.7137e-01, 9.9006e-01]],
        [[9.9964e-01, 4.0876e-03, 3.3953e-03,  ..., 1.1832e-03,
          3.0216e-04, 3.3994e-05],
         [1.1064e-04, 5.0465e-03, 3.3953e-03,  ..., 1.1832e-03,
          3.0216e-04, 3.3994e-05],
         [1.3565e-04, 5.1336e-03, 4.4816e-03,  ..., 1.1832e-03,
          9.9909e-01, 9.9990e-01],
         [1.1064e-04, 9.8573e-01, 9.8873e-01,  ..., 9.9645e-01,
          3.0216e-04, 3.3994e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:55:00,987 [Process: 0] Synchronize training processes
2024-08-18 19:55:00,988 [Process: 0] Evaluating...
2024-08-18 19:55:00,989 [Process: 0] EPOCH 535:
2024-08-18 19:55:00,991 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:02,134 [Process: 0] Synchronize training processes
2024-08-18 19:55:02,135 [Process: 0] Evaluating...
2024-08-18 19:55:02,136 [Process: 0] EPOCH 536:
2024-08-18 19:55:02,138 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8136e-03, 3.4797e-04, 1.2380e-04,  ..., 7.6426e-04,
          1.1055e-04, 6.5021e-03],
         [3.3455e-03, 3.4797e-04, 1.2380e-04,  ..., 7.6426e-04,
          1.1055e-04, 6.5021e-03],
         [9.8550e-01, 3.4797e-04, 1.2380e-04,  ..., 9.9771e-01,
          1.1055e-04, 9.7937e-01],
         [3.3455e-03, 9.9896e-01, 9.9963e-01,  ..., 7.6426e-04,
          9.9967e-01, 7.6281e-03]],
        [[7.1961e-04, 4.7503e-05, 4.1000e-04,  ..., 4.7867e-03,
          1.0890e-03, 9.9877e-01],
         [7.1961e-04, 4.7503e-05, 4.1000e-04,  ..., 4.7867e-03,
          1.0890e-03, 4.0999e-04],
         [9.9784e-01, 4.7503e-05, 4.1000e-04,  ..., 9.8564e-01,
          9.9673e-01, 4.0999e-04],
         [7.1961e-04, 9.9986e-01, 9.9877e-01,  ..., 4.7867e-03,
          1.0890e-03, 4.0999e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 536:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2277e-01, 2.0622e-03, 1.4753e-03,  ..., 9.9925e-01,
          7.9181e-01, 3.2728e-03],
         [9.0744e-03, 2.0622e-03, 1.4753e-03,  ..., 2.4993e-04,
          2.5545e-02, 5.1591e-03],
         [5.5471e-02, 2.1838e-03, 1.4753e-03,  ..., 2.4993e-04,
          4.8891e-02, 3.2728e-03],
         [1.2685e-02, 9.9369e-01, 9.9557e-01,  ..., 2.4993e-04,
          1.3375e-01, 9.8830e-01]],
        [[9.9918e-01, 3.9237e-03, 1.8436e-03,  ..., 1.6517e-03,
          1.3598e-04, 9.4802e-05],
         [2.6170e-04, 3.5860e-03, 1.8436e-03,  ..., 1.6517e-03,
          1.3598e-04, 9.4802e-05],
         [3.0045e-04, 4.5413e-03, 1.8436e-03,  ..., 1.6517e-03,
          9.9959e-01, 9.9972e-01],
         [2.6170e-04, 9.8795e-01, 9.9447e-01,  ..., 9.9504e-01,
          1.3598e-04, 9.4802e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5140e-02, 5.2250e-05, 1.7658e-04,  ..., 4.5834e-03,
          1.3424e-05, 7.5832e-04],
         [4.3831e-03, 5.2250e-05, 1.7658e-04,  ..., 4.5834e-03,
          1.3424e-05, 7.5832e-04],
         [9.7609e-01, 5.2250e-05, 1.7658e-04,  ..., 9.8625e-01,
          1.3424e-05, 9.9772e-01],
         [4.3831e-03, 9.9984e-01, 9.9947e-01,  ..., 4.5834e-03,
          9.9996e-01, 7.5832e-04]],
        [[2.7683e-04, 6.2793e-05, 6.9647e-04,  ..., 5.3106e-03,
          3.5715e-03, 9.9942e-01],
         [2.7683e-04, 6.2793e-05, 6.9647e-04,  ..., 4.5819e-03,
          3.0564e-03, 1.9237e-04],
         [9.9917e-01, 6.2793e-05, 6.9647e-04,  ..., 9.8553e-01,
          9.9032e-01, 1.9237e-04],
         [2.7683e-04, 9.9981e-01, 9.9791e-01,  ..., 4.5819e-03,
          3.0564e-03, 1.9237e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 537:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:03,284 [Process: 0] Synchronize training processes
2024-08-18 19:55:03,285 [Process: 0] Evaluating...
2024-08-18 19:55:03,286 [Process: 0] EPOCH 537:
2024-08-18 19:55:03,288 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:04,446 [Process: 0] Synchronize training processes
2024-08-18 19:55:04,446 [Process: 0] Evaluating...
2024-08-18 19:55:04,448 [Process: 0] EPOCH 538:
2024-08-18 19:55:04,450 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.3321e-01, 1.8620e-03, 3.3332e-03,  ..., 9.9736e-01,
          9.9645e-01, 6.6996e-03],
         [1.1252e-02, 1.8620e-03, 3.3332e-03,  ..., 8.8062e-04,
          1.1348e-03, 1.1497e-02],
         [1.4429e-01, 1.8620e-03, 3.3332e-03,  ..., 8.8062e-04,
          1.1348e-03, 6.6996e-03],
         [1.1252e-02, 9.9441e-01, 9.9000e-01,  ..., 8.8062e-04,
          1.2824e-03, 9.7510e-01]],
        [[9.9329e-01, 3.8522e-03, 1.4481e-03,  ..., 1.7570e-03,
          9.0517e-04, 5.0793e-04],
         [1.7382e-03, 3.8522e-03, 1.4481e-03,  ..., 1.3992e-03,
          9.0517e-04, 5.0793e-04],
         [3.2354e-03, 3.8522e-03, 1.4481e-03,  ..., 1.3992e-03,
          9.9728e-01, 9.9848e-01],
         [1.7382e-03, 9.8844e-01, 9.9566e-01,  ..., 9.9544e-01,
          9.0517e-04, 5.0793e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0254e-03, 9.5536e-05, 2.1310e-05,  ..., 1.5175e-03,
          2.3629e-05, 2.6903e-03],
         [5.0254e-03, 9.5536e-05, 2.1310e-05,  ..., 1.5175e-03,
          2.3629e-05, 2.6903e-03],
         [9.8492e-01, 9.5536e-05, 2.1310e-05,  ..., 9.9545e-01,
          2.3629e-05, 9.9193e-01],
         [5.0254e-03, 9.9971e-01, 9.9994e-01,  ..., 1.5175e-03,
          9.9993e-01, 2.6903e-03]],
        [[6.6771e-04, 8.1481e-05, 2.2287e-05,  ..., 2.5363e-03,
          1.7296e-03, 9.9979e-01],
         [6.6771e-04, 8.1481e-05, 2.2287e-05,  ..., 2.5363e-03,
          1.2715e-03, 6.8621e-05],
         [9.9800e-01, 8.1481e-05, 2.2287e-05,  ..., 9.9239e-01,
          9.9573e-01, 6.8621e-05],
         [6.6771e-04, 9.9976e-01, 9.9993e-01,  ..., 2.5363e-03,
          1.2715e-03, 6.8621e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 538:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4869e-01, 3.4998e-03, 2.2864e-03,  ..., 9.9897e-01,
          9.7121e-01, 1.9615e-04],
         [1.4523e-02, 3.7248e-03, 2.2864e-03,  ..., 3.4327e-04,
          7.0762e-03, 1.9615e-04],
         [4.2227e-01, 4.5567e-03, 2.2864e-03,  ..., 3.4327e-04,
          1.0614e-02, 1.9615e-04],
         [1.4523e-02, 9.8822e-01, 9.9314e-01,  ..., 3.4327e-04,
          1.1096e-02, 9.9941e-01]],
        [[9.7316e-01, 3.5461e-03, 2.2381e-03,  ..., 3.5956e-03,
          1.4522e-04, 3.2581e-04],
         [9.8511e-03, 2.5573e-03, 2.0728e-03,  ..., 3.1606e-03,
          1.4522e-04, 3.2581e-04],
         [1.2358e-02, 3.0039e-03, 2.0728e-03,  ..., 3.3602e-03,
          9.9956e-01, 9.9902e-01],
         [4.6282e-03, 9.9089e-01, 9.9362e-01,  ..., 9.8988e-01,
          1.4522e-04, 3.2581e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3319e-03, 1.3203e-05, 3.6973e-05,  ..., 5.5925e-03,
          1.4037e-05, 9.4373e-03],
         [3.3319e-03, 1.3203e-05, 3.6973e-05,  ..., 5.5925e-03,
          1.4037e-05, 7.2710e-03],
         [9.9000e-01, 1.3203e-05, 3.6973e-05,  ..., 9.8322e-01,
          1.4037e-05, 9.7602e-01],
         [3.3319e-03, 9.9996e-01, 9.9989e-01,  ..., 5.5925e-03,
          9.9996e-01, 7.2710e-03]],
        [[8.1662e-04, 1.2611e-03, 3.8410e-04,  ..., 1.2875e-03,
          5.0846e-03, 9.9996e-01],
         [8.1662e-04, 1.2611e-03, 3.8410e-04,  ..., 1.2875e-03,
          5.0846e-03, 1.1699e-05],
         [9.9755e-01, 1.2611e-03, 3.8410e-04,  ..., 9.9614e-01,
          9.8475e-01, 1.1699e-05],
         [8.1662e-04, 9.9622e-01, 9.9885e-01,  ..., 1.2875e-03,
          5.0846e-03, 1.1699e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 539:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:05,594 [Process: 0] Synchronize training processes
2024-08-18 19:55:05,594 [Process: 0] Evaluating...
2024-08-18 19:55:05,596 [Process: 0] EPOCH 539:
2024-08-18 19:55:05,598 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1462e-01, 5.0461e-03, 2.6700e-03,  ..., 9.9830e-01,
          9.9355e-01, 5.7591e-04],
         [3.3223e-02, 3.3406e-03, 3.0789e-03,  ..., 5.6553e-04,
          1.8096e-03, 5.7591e-04],
         [2.2488e-01, 4.3052e-03, 2.6700e-03,  ..., 5.6553e-04,
          2.8285e-03, 5.7591e-04],
         [2.7272e-02, 9.8731e-01, 9.9158e-01,  ..., 5.6553e-04,
          1.8096e-03, 9.9827e-01]],
        [[9.9891e-01, 3.3378e-03, 1.5797e-03,  ..., 5.6364e-03,
          4.1205e-04, 1.6550e-04],
         [3.2912e-04, 3.3378e-03, 1.5797e-03,  ..., 3.8132e-03,
          4.1205e-04, 1.6550e-04],
         [4.3436e-04, 3.4671e-03, 1.5797e-03,  ..., 5.6628e-03,
          9.9876e-01, 9.9950e-01],
         [3.2912e-04, 9.8986e-01, 9.9526e-01,  ..., 9.8489e-01,
          4.1205e-04, 1.6550e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7010e-03, 1.0022e-05, 7.0395e-05,  ..., 1.2829e-02,
          9.5693e-05, 3.1721e-03],
         [1.7010e-03, 1.0022e-05, 7.0395e-05,  ..., 1.2829e-02,
          9.5693e-05, 3.1721e-03],
         [9.9490e-01, 1.0022e-05, 7.0395e-05,  ..., 9.4887e-01,
          9.5693e-05, 9.9048e-01],
         [1.7010e-03, 9.9997e-01, 9.9979e-01,  ..., 2.5471e-02,
          9.9971e-01, 3.1721e-03]],
        [[1.4253e-03, 2.4287e-04, 8.9528e-06,  ..., 1.3887e-03,
          1.6001e-03, 9.9559e-01],
         [1.4253e-03, 2.4287e-04, 8.9528e-06,  ..., 1.3887e-03,
          1.6001e-03, 1.4333e-03],
         [9.9572e-01, 2.4287e-04, 8.9528e-06,  ..., 9.9583e-01,
          9.9520e-01, 1.4333e-03],
         [1.4253e-03, 9.9927e-01, 9.9997e-01,  ..., 1.3887e-03,
          1.6001e-03, 1.5428e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 540:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8649e-01, 3.4274e-03, 2.0192e-03,  ..., 9.9889e-01,
          9.9294e-01, 1.9230e-04],
         [1.5715e-03, 5.1325e-03, 2.0192e-03,  ..., 3.7047e-04,
          2.0087e-03, 1.9230e-04],
         [1.0363e-02, 3.5678e-03, 2.0192e-03,  ..., 3.7047e-04,
          3.0409e-03, 1.9230e-04],
         [1.5715e-03, 9.8787e-01, 9.9394e-01,  ..., 3.7047e-04,
          2.0087e-03, 9.9942e-01]],
        [[9.9915e-01, 1.0135e-02, 2.1264e-03,  ..., 4.9377e-04,
          7.8074e-04, 3.0109e-04],
         [2.8478e-04, 6.7904e-03, 2.0189e-03,  ..., 4.9377e-04,
          7.8074e-04, 3.0109e-04],
         [2.8478e-04, 1.0278e-02, 2.0189e-03,  ..., 4.9377e-04,
          9.9766e-01, 9.9910e-01],
         [2.8478e-04, 9.7280e-01, 9.9384e-01,  ..., 9.9852e-01,
          7.8074e-04, 3.0109e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:55:06,741 [Process: 0] Synchronize training processes
2024-08-18 19:55:06,742 [Process: 0] Evaluating...
2024-08-18 19:55:06,743 [Process: 0] EPOCH 540:
2024-08-18 19:55:06,745 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:07,905 [Process: 0] Synchronize training processes
2024-08-18 19:55:07,905 [Process: 0] Evaluating...
2024-08-18 19:55:07,907 [Process: 0] EPOCH 541:
2024-08-18 19:55:07,909 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.4342e-03, 9.1548e-05, 1.1462e-03,  ..., 3.2825e-03,
          1.7885e-04, 5.3666e-03],
         [6.0207e-03, 1.2375e-04, 1.5489e-03,  ..., 3.2825e-03,
          1.7885e-04, 5.3666e-03],
         [9.8152e-01, 9.1548e-05, 1.1462e-03,  ..., 9.9015e-01,
          1.7885e-04, 9.8155e-01],
         [6.0207e-03, 9.9969e-01, 9.9616e-01,  ..., 3.2825e-03,
          9.9946e-01, 7.7189e-03]],
        [[5.2933e-04, 1.4373e-04, 2.3291e-05,  ..., 2.3257e-03,
          9.3701e-04, 9.9987e-01],
         [5.2933e-04, 1.4373e-04, 2.3291e-05,  ..., 2.3257e-03,
          9.3701e-04, 4.3147e-05],
         [9.9841e-01, 1.4373e-04, 2.3291e-05,  ..., 9.9302e-01,
          9.9719e-01, 4.3147e-05],
         [5.2933e-04, 9.9957e-01, 9.9993e-01,  ..., 2.3257e-03,
          9.3701e-04, 4.3147e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 541:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8539e-01, 1.3746e-03, 1.1134e-03,  ..., 9.9242e-01,
          9.8961e-01, 5.8691e-04],
         [3.9022e-03, 1.4865e-03, 1.1134e-03,  ..., 1.7644e-03,
          2.4482e-03, 5.8691e-04],
         [6.8041e-03, 1.3746e-03, 1.1134e-03,  ..., 4.0491e-03,
          5.4980e-03, 5.8691e-04],
         [3.9022e-03, 9.9576e-01, 9.9666e-01,  ..., 1.7644e-03,
          2.4482e-03, 9.9824e-01]],
        [[9.9986e-01, 2.1791e-03, 7.3622e-04,  ..., 1.2667e-03,
          2.8450e-03, 1.8773e-04],
         [4.6212e-05, 2.1791e-03, 7.3622e-04,  ..., 1.2667e-03,
          2.8450e-03, 1.8773e-04],
         [4.6212e-05, 2.1791e-03, 7.3622e-04,  ..., 1.2667e-03,
          9.9147e-01, 9.9944e-01],
         [4.6212e-05, 9.9346e-01, 9.9779e-01,  ..., 9.9620e-01,
          2.8450e-03, 1.8773e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2901e-03, 4.5352e-05, 2.4062e-04,  ..., 1.1928e-03,
          1.3414e-05, 1.6556e-03],
         [3.0544e-03, 4.5352e-05, 2.4062e-04,  ..., 1.1928e-03,
          1.3414e-05, 1.6556e-03],
         [9.9060e-01, 4.5352e-05, 2.4062e-04,  ..., 9.9642e-01,
          1.3414e-05, 9.9503e-01],
         [3.0544e-03, 9.9986e-01, 9.9928e-01,  ..., 1.1928e-03,
          9.9996e-01, 1.6556e-03]],
        [[2.5432e-03, 3.7552e-04, 2.2049e-05,  ..., 4.6997e-03,
          3.5587e-03, 9.9973e-01],
         [2.5432e-03, 3.7552e-04, 2.2049e-05,  ..., 4.6997e-03,
          3.5587e-03, 9.0575e-05],
         [9.9237e-01, 3.7552e-04, 2.2049e-05,  ..., 9.8590e-01,
          9.8932e-01, 9.0575e-05],
         [2.5432e-03, 9.9887e-01, 9.9993e-01,  ..., 4.6997e-03,
          3.5587e-03, 9.0575e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 542:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.4916e-01, 3.5262e-03, 2.4787e-03,  ..., 9.9918e-01,
          9.9509e-01, 2.8987e-04],
         [2.7612e-02, 3.5262e-03, 2.4787e-03,  ..., 2.6079e-04,
          1.3881e-03, 2.8987e-04],
         [1.9874e-01, 4.6123e-03, 2.7045e-03,  ..., 2.9417e-04,
          2.0905e-03, 2.8987e-04],
         [2.4493e-02, 9.8834e-01, 9.9234e-01,  ..., 2.6079e-04,
          1.4327e-03, 9.9913e-01]],
        [[9.9862e-01, 2.0756e-03, 2.9162e-03,  ..., 5.6427e-03,
          9.8775e-04, 3.1508e-04],
         [4.4411e-04, 1.3979e-03, 2.8831e-03,  ..., 3.8997e-03,
          9.8775e-04, 3.1508e-04],
         [4.9483e-04, 1.3979e-03, 3.2363e-03,  ..., 4.6860e-03,
          9.9704e-01, 9.9905e-01],
         [4.4411e-04, 9.9513e-01, 9.9096e-01,  ..., 9.8577e-01,
          9.8775e-04, 3.1508e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:55:09,052 [Process: 0] Synchronize training processes
2024-08-18 19:55:09,052 [Process: 0] Evaluating...
2024-08-18 19:55:09,059 [Process: 0] EPOCH 542:
2024-08-18 19:55:09,060 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:10,207 [Process: 0] Synchronize training processes
2024-08-18 19:55:10,207 [Process: 0] Evaluating...
2024-08-18 19:55:10,209 [Process: 0] EPOCH 543:
2024-08-18 19:55:10,211 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.3055e-03, 4.7603e-04, 1.3296e-04,  ..., 2.0355e-03,
          1.0708e-03, 3.2520e-03],
         [5.3055e-03, 4.7603e-04, 1.3296e-04,  ..., 1.7569e-03,
          1.0708e-03, 3.2520e-03],
         [9.8408e-01, 4.7603e-04, 1.3296e-04,  ..., 9.9445e-01,
          1.0708e-03, 9.9024e-01],
         [5.3055e-03, 9.9857e-01, 9.9960e-01,  ..., 1.7569e-03,
          9.9679e-01, 3.2520e-03]],
        [[1.4967e-03, 3.4313e-04, 8.4819e-06,  ..., 5.5021e-03,
          1.1788e-03, 9.9804e-01],
         [1.4967e-03, 3.4313e-04, 8.4819e-06,  ..., 5.5021e-03,
          1.1788e-03, 5.7267e-04],
         [9.9551e-01, 3.4313e-04, 8.4819e-06,  ..., 9.8349e-01,
          9.9646e-01, 5.7267e-04],
         [1.4967e-03, 9.9897e-01, 9.9997e-01,  ..., 5.5021e-03,
          1.1788e-03, 8.1955e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 543:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6931e-01, 9.8746e-04, 2.6402e-03,  ..., 9.9880e-01,
          9.8874e-01, 1.9512e-03],
         [4.8988e-03, 9.8746e-04, 2.5638e-03,  ..., 3.9901e-04,
          2.6462e-03, 3.4836e-03],
         [2.0888e-02, 9.8746e-04, 3.2571e-03,  ..., 3.9901e-04,
          3.2342e-03, 1.9512e-03],
         [4.8988e-03, 9.9704e-01, 9.9154e-01,  ..., 3.9901e-04,
          5.3844e-03, 9.9261e-01]],
        [[9.9790e-01, 1.1919e-03, 1.3635e-03,  ..., 2.5817e-03,
          5.3796e-04, 1.1779e-04],
         [6.8570e-04, 1.1919e-03, 1.3635e-03,  ..., 2.5817e-03,
          5.3796e-04, 1.1779e-04],
         [7.2916e-04, 1.1919e-03, 1.5349e-03,  ..., 3.0014e-03,
          9.9839e-01, 9.9965e-01],
         [6.8570e-04, 9.9642e-01, 9.9574e-01,  ..., 9.9184e-01,
          5.3796e-04, 1.1779e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6613e-03, 2.6608e-05, 3.2074e-04,  ..., 1.7157e-03,
          7.7055e-04, 2.6684e-03],
         [2.6613e-03, 2.6608e-05, 3.2074e-04,  ..., 1.7157e-03,
          7.7055e-04, 2.6684e-03],
         [9.9202e-01, 2.6608e-05, 3.2074e-04,  ..., 9.9485e-01,
          7.7055e-04, 9.9199e-01],
         [2.6613e-03, 9.9992e-01, 9.9904e-01,  ..., 1.7157e-03,
          9.9769e-01, 2.6684e-03]],
        [[3.2376e-03, 2.8608e-04, 6.2297e-05,  ..., 1.9111e-03,
          9.1867e-04, 9.9693e-01],
         [3.2376e-03, 2.8608e-04, 6.2297e-05,  ..., 1.9111e-03,
          9.1867e-04, 8.0775e-04],
         [9.9029e-01, 2.8608e-04, 6.2297e-05,  ..., 9.9427e-01,
          9.9724e-01, 8.0775e-04],
         [3.2376e-03, 9.9914e-01, 9.9981e-01,  ..., 1.9111e-03,
          9.1867e-04, 1.4568e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 544:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:11,352 [Process: 0] Synchronize training processes
2024-08-18 19:55:11,352 [Process: 0] Evaluating...
2024-08-18 19:55:11,354 [Process: 0] EPOCH 544:
2024-08-18 19:55:11,356 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:12,501 [Process: 0] Synchronize training processes
2024-08-18 19:55:12,501 [Process: 0] Evaluating...
2024-08-18 19:55:12,503 [Process: 0] EPOCH 545:
2024-08-18 19:55:12,505 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8439e-01, 3.2287e-03, 1.9014e-03,  ..., 9.9948e-01,
          9.7051e-01, 1.0696e-04],
         [1.8466e-02, 3.8893e-03, 1.9014e-03,  ..., 1.7432e-04,
          6.5616e-03, 1.0696e-04],
         [7.0156e-02, 3.2287e-03, 1.9014e-03,  ..., 1.7432e-04,
          1.1919e-02, 1.0696e-04],
         [2.6991e-02, 9.8965e-01, 9.9430e-01,  ..., 1.7432e-04,
          1.1014e-02, 9.9968e-01]],
        [[9.9933e-01, 8.7973e-04, 6.7456e-03,  ..., 1.7903e-03,
          4.7714e-04, 1.9823e-04],
         [2.2259e-04, 8.7973e-04, 5.6918e-03,  ..., 1.7903e-03,
          4.7714e-04, 1.9823e-04],
         [2.2259e-04, 8.7973e-04, 6.2889e-03,  ..., 2.0634e-03,
          9.9857e-01, 9.9941e-01],
         [2.2259e-04, 9.9736e-01, 9.8127e-01,  ..., 9.9436e-01,
          4.7714e-04, 1.9823e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6523e-03, 5.7371e-05, 7.3552e-05,  ..., 1.5664e-03,
          4.6532e-05, 2.6250e-03],
         [1.6523e-03, 5.7371e-05, 7.3552e-05,  ..., 1.5664e-03,
          4.6532e-05, 2.6250e-03],
         [9.9504e-01, 5.7371e-05, 7.3552e-05,  ..., 9.9530e-01,
          4.6532e-05, 9.9212e-01],
         [1.6523e-03, 9.9983e-01, 9.9978e-01,  ..., 1.5664e-03,
          9.9986e-01, 2.6250e-03]],
        [[4.4133e-04, 9.2149e-05, 1.8448e-05,  ..., 6.2769e-03,
          2.5904e-03, 9.9999e-01],
         [4.4133e-04, 9.2149e-05, 1.8448e-05,  ..., 6.2769e-03,
          2.5904e-03, 3.0699e-06],
         [9.9868e-01, 9.2149e-05, 1.8448e-05,  ..., 9.8023e-01,
          9.9223e-01, 3.0699e-06],
         [4.4133e-04, 9.9972e-01, 9.9994e-01,  ..., 7.2176e-03,
          2.5904e-03, 3.0699e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 545:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7176e-01, 1.3907e-03, 2.1918e-03,  ..., 9.9905e-01,
          9.9500e-01, 1.6813e-03],
         [6.5169e-03, 1.3836e-03, 2.0140e-03,  ..., 3.1772e-04,
          1.4161e-03, 1.6813e-03],
         [1.5202e-02, 1.3836e-03, 2.0140e-03,  ..., 3.1772e-04,
          1.4161e-03, 1.6813e-03],
         [6.5169e-03, 9.9584e-01, 9.9378e-01,  ..., 3.1772e-04,
          2.1632e-03, 9.9496e-01]],
        [[9.9940e-01, 3.7424e-03, 3.1363e-03,  ..., 2.9606e-03,
          7.1756e-04, 2.6701e-04],
         [1.9889e-04, 4.4861e-03, 3.1363e-03,  ..., 2.9606e-03,
          7.1756e-04, 2.6701e-04],
         [1.9889e-04, 3.7424e-03, 3.2410e-03,  ..., 3.5576e-03,
          9.9785e-01, 9.9920e-01],
         [1.9889e-04, 9.8803e-01, 9.9049e-01,  ..., 9.9052e-01,
          7.1756e-04, 2.6701e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7831e-03, 1.6975e-04, 1.0049e-04,  ..., 5.9456e-03,
          1.4820e-04, 2.0925e-03],
         [5.7831e-03, 1.6975e-04, 1.0049e-04,  ..., 4.9521e-03,
          1.4820e-04, 2.0925e-03],
         [9.8099e-01, 1.6975e-04, 1.0049e-04,  ..., 9.8415e-01,
          1.4820e-04, 9.9372e-01],
         [7.4441e-03, 9.9949e-01, 9.9970e-01,  ..., 4.9521e-03,
          9.9956e-01, 2.0925e-03]],
        [[1.0646e-03, 7.4495e-05, 2.0135e-04,  ..., 3.0038e-03,
          2.7744e-03, 9.9971e-01],
         [1.0646e-03, 7.4495e-05, 2.0135e-04,  ..., 2.8539e-03,
          2.7744e-03, 9.5803e-05],
         [9.9681e-01, 7.4495e-05, 2.0135e-04,  ..., 9.9129e-01,
          9.9168e-01, 9.5803e-05],
         [1.0646e-03, 9.9978e-01, 9.9940e-01,  ..., 2.8539e-03,
          2.7744e-03, 9.5803e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 546:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:13,648 [Process: 0] Synchronize training processes
2024-08-18 19:55:13,648 [Process: 0] Evaluating...
2024-08-18 19:55:13,650 [Process: 0] EPOCH 546:
2024-08-18 19:55:13,652 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3949e-01, 1.7718e-03, 3.7241e-03,  ..., 9.9909e-01,
          9.9035e-01, 2.1976e-03],
         [9.5395e-03, 1.7718e-03, 2.8845e-03,  ..., 3.0397e-04,
          2.1584e-03, 2.1976e-03],
         [4.1420e-02, 1.7718e-03, 2.8845e-03,  ..., 3.0397e-04,
          2.1584e-03, 2.1976e-03],
         [9.5539e-03, 9.9468e-01, 9.9051e-01,  ..., 3.0397e-04,
          5.3297e-03, 9.9341e-01]],
        [[9.9965e-01, 1.6554e-03, 2.6055e-03,  ..., 1.4525e-03,
          2.5115e-04, 7.0185e-04],
         [1.1703e-04, 1.6554e-03, 2.6055e-03,  ..., 1.4525e-03,
          2.5115e-04, 7.0185e-04],
         [1.1703e-04, 1.6706e-03, 2.6055e-03,  ..., 1.5087e-03,
          9.9925e-01, 9.9789e-01],
         [1.1703e-04, 9.9502e-01, 9.9218e-01,  ..., 9.9559e-01,
          2.5115e-04, 7.0185e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.5592e-03, 3.5692e-04, 8.1813e-05,  ..., 3.6717e-03,
          2.7853e-04, 5.4622e-03],
         [4.5592e-03, 3.5692e-04, 8.1813e-05,  ..., 3.6717e-03,
          2.7853e-04, 5.4622e-03],
         [9.8617e-01, 3.5692e-04, 8.1813e-05,  ..., 9.8866e-01,
          2.7853e-04, 9.8361e-01],
         [4.7129e-03, 9.9893e-01, 9.9975e-01,  ..., 3.9966e-03,
          9.9916e-01, 5.4622e-03]],
        [[1.0558e-03, 7.3840e-05, 7.2445e-04,  ..., 1.0366e-02,
          1.1950e-03, 9.9875e-01],
         [1.0558e-03, 7.3840e-05, 7.2445e-04,  ..., 9.5411e-03,
          1.1950e-03, 4.0789e-04],
         [9.9683e-01, 7.3840e-05, 7.2445e-04,  ..., 9.6696e-01,
          9.9642e-01, 4.0789e-04],
         [1.0558e-03, 9.9978e-01, 9.9783e-01,  ..., 1.3132e-02,
          1.1950e-03, 4.3877e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 547:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4703e-01, 1.0216e-03, 7.0694e-04,  ..., 9.9966e-01,
          2.9866e-01, 3.2230e-03],
         [1.1681e-02, 1.0216e-03, 7.0694e-04,  ..., 1.1407e-04,
          1.6892e-02, 3.4827e-03],
         [2.9611e-02, 1.0216e-03, 7.0694e-04,  ..., 1.1407e-04,
          1.6892e-02, 4.0796e-03],
         [1.1681e-02, 9.9694e-01, 9.9788e-01,  ..., 1.1407e-04,
          6.6755e-01, 9.8921e-01]],
        [[9.9948e-01, 9.5138e-04, 1.5833e-03,  ..., 1.7538e-03,
          1.3319e-03, 2.3855e-03],
         [1.7217e-04, 9.5138e-04, 1.5833e-03,  ..., 1.7538e-03,
          1.3319e-03, 2.3855e-03],
         [1.7217e-04, 9.5138e-04, 1.8700e-03,  ..., 1.7538e-03,
          9.9600e-01, 9.9284e-01],
         [1.7217e-04, 9.9715e-01, 9.9496e-01,  ..., 9.9474e-01,
          1.3319e-03, 2.3855e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:55:14,795 [Process: 0] Synchronize training processes
2024-08-18 19:55:14,795 [Process: 0] Evaluating...
2024-08-18 19:55:14,797 [Process: 0] EPOCH 547:
2024-08-18 19:55:14,798 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:15,946 [Process: 0] Synchronize training processes
2024-08-18 19:55:15,947 [Process: 0] Evaluating...
2024-08-18 19:55:15,948 [Process: 0] EPOCH 548:
2024-08-18 19:55:15,950 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8204e-03, 7.9864e-06, 5.8659e-05,  ..., 4.2544e-03,
          5.6311e-04, 2.8503e-03],
         [1.8204e-03, 7.9864e-06, 5.8659e-05,  ..., 4.2544e-03,
          5.6311e-04, 2.8503e-03],
         [9.9454e-01, 7.9864e-06, 5.8659e-05,  ..., 9.8724e-01,
          5.6311e-04, 9.9145e-01],
         [1.8204e-03, 9.9998e-01, 9.9982e-01,  ..., 4.2544e-03,
          9.9831e-01, 2.8503e-03]],
        [[8.2177e-04, 5.8044e-04, 2.8996e-03,  ..., 6.6822e-03,
          1.1675e-03, 9.9857e-01],
         [8.2177e-04, 5.8044e-04, 2.7226e-03,  ..., 6.6822e-03,
          1.1675e-03, 4.5887e-04],
         [9.9753e-01, 5.8044e-04, 9.9166e-01,  ..., 9.7804e-01,
          9.9650e-01, 4.5887e-04],
         [8.2177e-04, 9.9826e-01, 2.7226e-03,  ..., 8.5913e-03,
          1.1675e-03, 5.1266e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 548:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8793e-01, 2.0581e-03, 1.0447e-03,  ..., 9.9410e-01,
          9.9746e-01, 1.4659e-03],
         [2.8652e-03, 2.0581e-03, 1.0447e-03,  ..., 1.9954e-03,
          6.7704e-04, 1.4659e-03],
         [6.3385e-03, 2.1674e-03, 1.0447e-03,  ..., 1.9500e-03,
          1.1873e-03, 1.4659e-03],
         [2.8652e-03, 9.9372e-01, 9.9687e-01,  ..., 1.9500e-03,
          6.7704e-04, 9.9560e-01]],
        [[9.9888e-01, 1.1911e-03, 1.1616e-03,  ..., 1.2540e-03,
          1.4607e-03, 3.0611e-03],
         [3.7272e-04, 1.1911e-03, 1.1616e-03,  ..., 1.3072e-03,
          1.4607e-03, 3.0611e-03],
         [3.7272e-04, 1.1911e-03, 1.1616e-03,  ..., 1.2540e-03,
          9.9562e-01, 9.9082e-01],
         [3.7272e-04, 9.9643e-01, 9.9652e-01,  ..., 9.9618e-01,
          1.4607e-03, 3.0611e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1413e-03, 1.0123e-05, 1.0600e-04,  ..., 2.2062e-03,
          4.2887e-05, 7.5320e-03],
         [7.1413e-03, 2.4570e-05, 1.0600e-04,  ..., 2.2062e-03,
          4.2887e-05, 7.5320e-03],
         [9.7677e-01, 1.0123e-05, 1.0600e-04,  ..., 9.9338e-01,
          4.2887e-05, 9.7534e-01],
         [8.9431e-03, 9.9996e-01, 9.9968e-01,  ..., 2.2062e-03,
          9.9987e-01, 9.5998e-03]],
        [[7.0532e-04, 4.5151e-05, 7.8736e-03,  ..., 2.2517e-03,
          1.2066e-03, 9.9861e-01],
         [7.0532e-04, 4.5151e-05, 7.1837e-03,  ..., 2.2517e-03,
          1.2066e-03, 4.3348e-04],
         [9.9788e-01, 4.5151e-05, 9.7716e-01,  ..., 9.9324e-01,
          9.9638e-01, 4.3348e-04],
         [7.0532e-04, 9.9986e-01, 7.7814e-03,  ..., 2.2517e-03,
          1.2066e-03, 5.2049e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 549:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6910e-01, 6.8356e-03, 1.4612e-03,  ..., 9.9886e-01,
          9.9142e-01, 1.4138e-03],
         [5.1726e-03, 4.0128e-03, 1.4612e-03,  ..., 3.2712e-04,
          2.2508e-03, 1.4138e-03],
         [2.0560e-02, 4.5801e-03, 1.4612e-03,  ..., 4.8514e-04,
          4.0768e-03, 1.4138e-03],
         [5.1726e-03, 9.8457e-01, 9.9562e-01,  ..., 3.2712e-04,
          2.2508e-03, 9.9576e-01]],
        [[9.9839e-01, 3.1720e-03, 2.8040e-03,  ..., 2.9870e-03,
          4.8973e-04, 1.2242e-04],
         [4.4313e-04, 2.0785e-03, 2.8040e-03,  ..., 2.9870e-03,
          4.8973e-04, 1.2242e-04],
         [7.2158e-04, 2.0785e-03, 3.5830e-03,  ..., 2.9870e-03,
          9.9853e-01, 9.9963e-01],
         [4.4313e-04, 9.9267e-01, 9.9081e-01,  ..., 9.9104e-01,
          4.8973e-04, 1.2242e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:55:17,085 [Process: 0] Synchronize training processes
2024-08-18 19:55:17,085 [Process: 0] Evaluating...
2024-08-18 19:55:17,087 [Process: 0] EPOCH 549:
2024-08-18 19:55:17,089 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:18,228 [Process: 0] Synchronize training processes
2024-08-18 19:55:18,229 [Process: 0] Evaluating...
2024-08-18 19:55:18,230 [Process: 0] EPOCH 550:
2024-08-18 19:55:18,232 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9692e-03, 7.6436e-05, 2.3340e-04,  ..., 1.1947e-03,
          1.4150e-04, 4.8108e-03],
         [1.9692e-03, 7.6436e-05, 2.3340e-04,  ..., 1.1947e-03,
          1.4150e-04, 4.8108e-03],
         [9.9409e-01, 7.6436e-05, 2.3340e-04,  ..., 9.9642e-01,
          1.4150e-04, 9.8427e-01],
         [1.9692e-03, 9.9977e-01, 9.9930e-01,  ..., 1.1947e-03,
          9.9958e-01, 6.1087e-03]],
        [[1.3838e-03, 1.2905e-04, 3.3486e-02,  ..., 1.3520e-02,
          9.6593e-04, 9.9988e-01],
         [1.3838e-03, 1.2905e-04, 3.3486e-02,  ..., 1.0131e-02,
          9.6593e-04, 3.9116e-05],
         [9.9585e-01, 1.2905e-04, 2.4267e-01,  ..., 9.6462e-01,
          9.9710e-01, 3.9116e-05],
         [1.3838e-03, 9.9961e-01, 6.9036e-01,  ..., 1.1733e-02,
          9.6593e-04, 3.9116e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 550:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9528e-01, 4.0831e-03, 2.8492e-03,  ..., 9.9771e-01,
          9.9844e-01, 1.3424e-03],
         [1.2522e-03, 4.0831e-03, 2.8492e-03,  ..., 9.8267e-04,
          4.9392e-04, 1.3424e-03],
         [2.2146e-03, 4.0831e-03, 3.3096e-03,  ..., 6.5295e-04,
          5.7624e-04, 1.3424e-03],
         [1.2522e-03, 9.8775e-01, 9.9099e-01,  ..., 6.5295e-04,
          4.9392e-04, 9.9597e-01]],
        [[9.9462e-01, 6.6580e-03, 4.2095e-03,  ..., 8.6020e-04,
          1.1797e-03, 7.1026e-05],
         [2.7308e-03, 5.5290e-03, 3.2908e-03,  ..., 8.6020e-04,
          1.1797e-03, 7.1026e-05],
         [1.3230e-03, 8.3511e-03, 3.5748e-03,  ..., 8.6020e-04,
          9.9646e-01, 9.9979e-01],
         [1.3230e-03, 9.7946e-01, 9.8892e-01,  ..., 9.9742e-01,
          1.1797e-03, 7.1026e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9231e-03, 8.0496e-05, 4.8921e-04,  ..., 2.2230e-03,
          4.8111e-05, 3.9149e-04],
         [2.9231e-03, 8.0496e-05, 4.8921e-04,  ..., 2.2230e-03,
          4.8111e-05, 3.9149e-04],
         [9.9123e-01, 8.0496e-05, 4.8921e-04,  ..., 9.9333e-01,
          4.8111e-05, 9.9883e-01],
         [2.9231e-03, 9.9976e-01, 9.9853e-01,  ..., 2.2230e-03,
          9.9986e-01, 3.9149e-04]],
        [[1.0502e-04, 4.2596e-04, 2.2870e-04,  ..., 5.2308e-03,
          1.5187e-03, 9.9991e-01],
         [1.0502e-04, 4.2596e-04, 2.2870e-04,  ..., 5.2308e-03,
          1.5187e-03, 2.8360e-05],
         [9.9968e-01, 4.2596e-04, 2.2870e-04,  ..., 9.8431e-01,
          9.9544e-01, 2.8360e-05],
         [1.0502e-04, 9.9872e-01, 9.9931e-01,  ..., 5.2308e-03,
          1.5187e-03, 2.8360e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 551:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:19,378 [Process: 0] Synchronize training processes
2024-08-18 19:55:19,378 [Process: 0] Evaluating...
2024-08-18 19:55:19,380 [Process: 0] EPOCH 551:
2024-08-18 19:55:19,382 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:20,525 [Process: 0] Synchronize training processes
2024-08-18 19:55:20,525 [Process: 0] Evaluating...
2024-08-18 19:55:20,532 [Process: 0] EPOCH 552:
2024-08-18 19:55:20,534 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8815e-01, 3.1268e-03, 4.2952e-03,  ..., 9.9910e-01,
          9.7171e-01, 1.5645e-03],
         [2.9480e-03, 3.1268e-03, 4.2952e-03,  ..., 2.8588e-04,
          5.8388e-03, 1.5645e-03],
         [5.9495e-03, 4.5282e-03, 4.9634e-03,  ..., 3.3136e-04,
          7.6840e-03, 1.5645e-03],
         [2.9480e-03, 9.8922e-01, 9.8645e-01,  ..., 2.8588e-04,
          1.4767e-02, 9.9531e-01]],
        [[9.9979e-01, 1.4081e-03, 1.8848e-03,  ..., 1.2458e-03,
          9.4049e-04, 3.4213e-04],
         [7.0820e-05, 1.1966e-03, 1.8848e-03,  ..., 1.2458e-03,
          9.4049e-04, 3.4213e-04],
         [7.0820e-05, 1.1966e-03, 1.8848e-03,  ..., 1.2458e-03,
          9.9718e-01, 9.9897e-01],
         [7.0820e-05, 9.9620e-01, 9.9435e-01,  ..., 9.9626e-01,
          9.4049e-04, 3.4213e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4385e-03, 7.6395e-06, 1.0982e-04,  ..., 4.0121e-03,
          2.6899e-03, 4.3713e-03],
         [4.9893e-03, 7.6395e-06, 1.0982e-04,  ..., 4.0121e-03,
          2.6899e-03, 4.3713e-03],
         [9.8458e-01, 7.6395e-06, 1.0982e-04,  ..., 9.8796e-01,
          2.6899e-03, 9.8603e-01],
         [4.9893e-03, 9.9998e-01, 9.9967e-01,  ..., 4.0121e-03,
          9.9193e-01, 5.2255e-03]],
        [[4.8155e-04, 1.2207e-04, 2.6759e-04,  ..., 3.2349e-03,
          1.5993e-03, 9.9984e-01],
         [4.8155e-04, 1.2207e-04, 2.6759e-04,  ..., 3.2349e-03,
          1.5993e-03, 5.4902e-05],
         [9.9856e-01, 1.2207e-04, 2.6759e-04,  ..., 9.9030e-01,
          9.9520e-01, 5.4902e-05],
         [4.8155e-04, 9.9963e-01, 9.9920e-01,  ..., 3.2349e-03,
          1.5993e-03, 5.4902e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 552:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7669e-01, 1.1559e-03, 1.0707e-03,  ..., 9.9904e-01,
          9.8599e-01, 3.1617e-05],
         [4.6379e-03, 1.1559e-03, 1.0625e-03,  ..., 3.1929e-04,
          3.6569e-03, 3.1617e-05],
         [1.3567e-02, 1.1559e-03, 1.0625e-03,  ..., 3.1929e-04,
          6.6922e-03, 3.1617e-05],
         [5.1084e-03, 9.9653e-01, 9.9680e-01,  ..., 3.1929e-04,
          3.6569e-03, 9.9991e-01]],
        [[9.9854e-01, 1.6335e-03, 1.2589e-03,  ..., 2.2168e-03,
          9.9744e-04, 2.5041e-04],
         [4.8644e-04, 1.6335e-03, 1.2589e-03,  ..., 2.2168e-03,
          9.9744e-04, 2.5041e-04],
         [4.8644e-04, 1.6335e-03, 1.2589e-03,  ..., 2.2168e-03,
          9.9701e-01, 9.9925e-01],
         [4.8644e-04, 9.9510e-01, 9.9622e-01,  ..., 9.9335e-01,
          9.9744e-04, 2.5041e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3021e-03, 9.3443e-05, 5.4535e-06,  ..., 4.2699e-03,
          3.0258e-05, 8.6341e-04],
         [1.3021e-03, 9.3443e-05, 5.4535e-06,  ..., 4.2699e-03,
          3.0258e-05, 8.6341e-04],
         [9.9609e-01, 9.3443e-05, 5.4535e-06,  ..., 9.8719e-01,
          3.0258e-05, 9.9741e-01],
         [1.3021e-03, 9.9972e-01, 9.9998e-01,  ..., 4.2699e-03,
          9.9991e-01, 8.6341e-04]],
        [[5.8086e-03, 3.8506e-04, 1.0608e-04,  ..., 6.3736e-03,
          3.4435e-03, 9.9997e-01],
         [5.8086e-03, 3.8506e-04, 1.0608e-04,  ..., 5.3751e-03,
          2.8122e-03, 1.1402e-05],
         [9.8097e-01, 3.8506e-04, 1.0608e-04,  ..., 9.8288e-01,
          9.9093e-01, 1.1402e-05],
         [7.4103e-03, 9.9884e-01, 9.9968e-01,  ..., 5.3751e-03,
          2.8122e-03, 1.1402e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 553:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:21,667 [Process: 0] Synchronize training processes
2024-08-18 19:55:21,668 [Process: 0] Evaluating...
2024-08-18 19:55:21,670 [Process: 0] EPOCH 553:
2024-08-18 19:55:21,672 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6858e-01, 2.2263e-03, 1.6857e-03,  ..., 9.9962e-01,
          9.9524e-01, 8.8541e-04],
         [6.5263e-03, 2.2263e-03, 1.6857e-03,  ..., 1.2536e-04,
          1.2037e-03, 8.8541e-04],
         [1.7023e-02, 2.2263e-03, 1.6857e-03,  ..., 1.2536e-04,
          2.3542e-03, 8.8541e-04],
         [7.8700e-03, 9.9332e-01, 9.9494e-01,  ..., 1.2536e-04,
          1.2037e-03, 9.9734e-01]],
        [[9.9964e-01, 1.0862e-03, 3.1079e-03,  ..., 8.2859e-04,
          1.8126e-04, 3.9003e-04],
         [9.1241e-05, 1.0862e-03, 3.6067e-03,  ..., 8.2859e-04,
          1.8126e-04, 3.9003e-04],
         [1.7950e-04, 1.0862e-03, 3.5117e-03,  ..., 8.2859e-04,
          9.9946e-01, 9.9883e-01],
         [9.1241e-05, 9.9674e-01, 9.8977e-01,  ..., 9.9751e-01,
          1.8126e-04, 3.9003e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3798e-03, 3.0752e-05, 2.4542e-05,  ..., 6.3995e-04,
          2.6538e-04, 1.0700e-03],
         [3.3798e-03, 3.0752e-05, 2.4542e-05,  ..., 6.3995e-04,
          2.6538e-04, 1.0700e-03],
         [9.8986e-01, 3.0752e-05, 2.4542e-05,  ..., 9.9808e-01,
          2.6538e-04, 9.9679e-01],
         [3.3798e-03, 9.9991e-01, 9.9993e-01,  ..., 6.3995e-04,
          9.9920e-01, 1.0700e-03]],
        [[6.2940e-04, 1.8175e-05, 2.5138e-05,  ..., 4.0446e-03,
          1.3805e-03, 9.9996e-01],
         [6.2940e-04, 1.8175e-05, 2.5138e-05,  ..., 3.9587e-03,
          1.3805e-03, 1.3964e-05],
         [9.9811e-01, 1.8175e-05, 2.5138e-05,  ..., 9.8804e-01,
          9.9586e-01, 1.3964e-05],
         [6.2940e-04, 9.9995e-01, 9.9992e-01,  ..., 3.9587e-03,
          1.3805e-03, 1.3964e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 554:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.4635e-01, 3.4866e-03, 1.1037e-03,  ..., 9.9939e-01,
          9.9579e-01, 3.0973e-03],
         [2.8858e-02, 2.7251e-03, 1.1037e-03,  ..., 2.0372e-04,
          1.3416e-03, 3.4845e-03],
         [1.4087e-01, 3.5241e-03, 1.1037e-03,  ..., 2.0372e-04,
          1.5264e-03, 3.0973e-03],
         [8.3917e-02, 9.9026e-01, 9.9669e-01,  ..., 2.0372e-04,
          1.3416e-03, 9.9032e-01]],
        [[9.9799e-01, 9.0342e-04, 1.0128e-03,  ..., 4.6933e-04,
          1.7042e-04, 4.3020e-04],
         [6.0562e-04, 9.0342e-04, 1.0128e-03,  ..., 4.6933e-04,
          1.7042e-04, 4.3020e-04],
         [7.9799e-04, 9.0342e-04, 1.0128e-03,  ..., 4.6933e-04,
          9.9949e-01, 9.9871e-01],
         [6.0562e-04, 9.9729e-01, 9.9696e-01,  ..., 9.9859e-01,
          1.7042e-04, 4.3020e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:55:22,821 [Process: 0] Synchronize training processes
2024-08-18 19:55:22,821 [Process: 0] Evaluating...
2024-08-18 19:55:22,823 [Process: 0] EPOCH 554:
2024-08-18 19:55:22,824 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:23,967 [Process: 0] Synchronize training processes
2024-08-18 19:55:23,968 [Process: 0] Evaluating...
2024-08-18 19:55:23,970 [Process: 0] EPOCH 555:
2024-08-18 19:55:23,971 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6388e-03, 2.4290e-05, 5.9172e-06,  ..., 2.8630e-03,
          1.7243e-04, 3.3213e-03],
         [3.6388e-03, 2.4290e-05, 5.9172e-06,  ..., 2.8630e-03,
          1.2373e-04, 3.3213e-03],
         [9.8908e-01, 2.4290e-05, 5.9172e-06,  ..., 9.9141e-01,
          1.2373e-04, 9.9004e-01],
         [3.6388e-03, 9.9993e-01, 9.9998e-01,  ..., 2.8630e-03,
          9.9958e-01, 3.3213e-03]],
        [[1.4555e-03, 5.5766e-04, 7.3970e-04,  ..., 3.7106e-03,
          4.8890e-03, 9.9986e-01],
         [1.4555e-03, 5.5766e-04, 7.3970e-04,  ..., 3.7106e-03,
          4.6793e-03, 4.5621e-05],
         [9.9563e-01, 5.5766e-04, 7.3970e-04,  ..., 9.8837e-01,
          9.8575e-01, 4.5621e-05],
         [1.4555e-03, 9.9833e-01, 9.9778e-01,  ..., 4.2096e-03,
          4.6793e-03, 4.5621e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 555:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.4892e-01, 1.1791e-03, 1.8980e-03,  ..., 9.9461e-01,
          9.9764e-01, 6.9152e-04],
         [3.9176e-02, 1.1791e-03, 1.8980e-03,  ..., 1.5096e-03,
          7.8751e-04, 6.9152e-04],
         [1.8976e-01, 1.1791e-03, 1.8980e-03,  ..., 2.3727e-03,
          7.8751e-04, 6.9152e-04],
         [1.2214e-01, 9.9646e-01, 9.9431e-01,  ..., 1.5096e-03,
          7.8751e-04, 9.9793e-01]],
        [[9.8980e-01, 3.3700e-04, 9.1225e-04,  ..., 7.1663e-04,
          9.2150e-04, 1.4974e-03],
         [2.0981e-03, 3.3700e-04, 9.1225e-04,  ..., 7.1663e-04,
          9.2150e-04, 1.4974e-03],
         [6.0058e-03, 3.3700e-04, 9.1225e-04,  ..., 7.1663e-04,
          9.9724e-01, 9.9551e-01],
         [2.0981e-03, 9.9899e-01, 9.9726e-01,  ..., 9.9785e-01,
          9.2150e-04, 1.4974e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4861e-03, 7.2377e-04, 3.3500e-05,  ..., 2.9747e-03,
          8.1785e-05, 1.8139e-03],
         [4.4861e-03, 7.2377e-04, 3.3500e-05,  ..., 2.9747e-03,
          8.1785e-05, 1.8139e-03],
         [9.8626e-01, 7.2377e-04, 3.3500e-05,  ..., 9.9108e-01,
          8.1785e-05, 9.9456e-01],
         [4.7688e-03, 9.9783e-01, 9.9990e-01,  ..., 2.9747e-03,
          9.9975e-01, 1.8139e-03]],
        [[6.5970e-04, 4.2161e-04, 3.1115e-04,  ..., 2.6733e-03,
          9.8477e-04, 9.9988e-01],
         [6.5970e-04, 4.2161e-04, 3.1115e-04,  ..., 2.6733e-03,
          9.8477e-04, 4.1655e-05],
         [9.9802e-01, 4.2161e-04, 3.1115e-04,  ..., 9.9198e-01,
          9.9705e-01, 4.1655e-05],
         [6.5970e-04, 9.9874e-01, 9.9907e-01,  ..., 2.6733e-03,
          9.8477e-04, 4.1655e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 556:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5252e-01, 1.9349e-03, 3.1450e-03,  ..., 9.9904e-01,
          9.7179e-01, 8.2487e-04],
         [5.0986e-03, 2.0078e-03, 3.1044e-03,  ..., 3.1978e-04,
          5.7500e-03, 8.2487e-04],
         [3.7283e-02, 1.9349e-03, 3.1044e-03,  ..., 3.1978e-04,
          1.4570e-02, 8.2487e-04],
         [5.0986e-03, 9.9412e-01, 9.9065e-01,  ..., 3.1978e-04,
          7.8861e-03, 9.9753e-01]],
        [[9.8538e-01, 4.6090e-03, 2.0523e-03,  ..., 9.2908e-04,
          6.5924e-04, 4.8953e-04],
         [4.8733e-03, 8.7318e-03, 2.0523e-03,  ..., 9.2908e-04,
          6.5924e-04, 4.8953e-04],
         [4.8733e-03, 6.2832e-03, 2.0523e-03,  ..., 9.2908e-04,
          9.9802e-01, 9.9853e-01],
         [4.8733e-03, 9.8038e-01, 9.9384e-01,  ..., 9.9721e-01,
          6.5924e-04, 4.8953e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:55:25,112 [Process: 0] Synchronize training processes
2024-08-18 19:55:25,113 [Process: 0] Evaluating...
2024-08-18 19:55:25,114 [Process: 0] EPOCH 556:
2024-08-18 19:55:25,116 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:26,264 [Process: 0] Synchronize training processes
2024-08-18 19:55:26,265 [Process: 0] Evaluating...
2024-08-18 19:55:26,267 [Process: 0] EPOCH 557:
2024-08-18 19:55:26,268 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0928e-03, 4.4654e-04, 6.5798e-04,  ..., 3.6424e-03,
          3.0982e-05, 1.7300e-03],
         [2.0928e-03, 5.1042e-04, 6.5798e-04,  ..., 3.6424e-03,
          3.0982e-05, 1.7300e-03],
         [9.9372e-01, 4.4654e-04, 6.5798e-04,  ..., 9.8907e-01,
          3.0982e-05, 9.9481e-01],
         [2.0928e-03, 9.9860e-01, 9.9803e-01,  ..., 3.6424e-03,
          9.9991e-01, 1.7300e-03]],
        [[1.1339e-03, 2.3625e-03, 9.2732e-05,  ..., 2.6037e-03,
          3.6432e-03, 9.9908e-01],
         [1.1339e-03, 2.3625e-03, 9.2732e-05,  ..., 2.6037e-03,
          3.4681e-03, 2.7944e-04],
         [9.9660e-01, 2.3625e-03, 9.2732e-05,  ..., 9.9219e-01,
          9.8942e-01, 2.7944e-04],
         [1.1339e-03, 9.9291e-01, 9.9972e-01,  ..., 2.6037e-03,
          3.4681e-03, 3.5972e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 557:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9181e-01, 1.9571e-03, 1.8491e-03,  ..., 9.9771e-01,
          9.6193e-01, 7.4620e-04],
         [2.3531e-03, 1.6495e-03, 1.8491e-03,  ..., 7.2051e-04,
          7.8806e-03, 7.4620e-04],
         [3.4810e-03, 1.6495e-03, 2.6723e-03,  ..., 8.4472e-04,
          7.8806e-03, 7.4620e-04],
         [2.3531e-03, 9.9474e-01, 9.9363e-01,  ..., 7.2051e-04,
          2.2307e-02, 9.9776e-01]],
        [[9.8652e-01, 1.9756e-03, 9.4409e-03,  ..., 7.8290e-04,
          3.2190e-04, 1.6899e-04],
         [6.0934e-03, 1.9756e-03, 6.5898e-03,  ..., 7.8290e-04,
          3.2190e-04, 1.6899e-04],
         [4.3692e-03, 2.2200e-03, 1.1391e-02,  ..., 7.8290e-04,
          9.9903e-01, 9.9949e-01],
         [3.0157e-03, 9.9383e-01, 9.7258e-01,  ..., 9.9765e-01,
          3.2190e-04, 1.6899e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2611e-03, 1.5549e-04, 5.4674e-04,  ..., 6.9433e-03,
          1.2996e-04, 1.9468e-03],
         [1.2611e-03, 1.8714e-04, 5.4674e-04,  ..., 6.9433e-03,
          1.2996e-04, 1.9468e-03],
         [9.9622e-01, 1.5549e-04, 5.4674e-04,  ..., 9.7821e-01,
          1.2996e-04, 9.9416e-01],
         [1.2611e-03, 9.9950e-01, 9.9836e-01,  ..., 7.9029e-03,
          9.9961e-01, 1.9468e-03]],
        [[1.9316e-04, 2.3438e-04, 2.5002e-04,  ..., 5.2343e-03,
          1.4405e-03, 9.9048e-01],
         [1.9316e-04, 2.3438e-04, 2.5002e-04,  ..., 4.1963e-03,
          1.4405e-03, 2.8799e-03],
         [9.9942e-01, 2.3438e-04, 2.5002e-04,  ..., 9.8637e-01,
          9.9568e-01, 2.8799e-03],
         [1.9316e-04, 9.9930e-01, 9.9925e-01,  ..., 4.1963e-03,
          1.4405e-03, 3.7651e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 558:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:27,411 [Process: 0] Synchronize training processes
2024-08-18 19:55:27,411 [Process: 0] Evaluating...
2024-08-18 19:55:27,413 [Process: 0] EPOCH 558:
2024-08-18 19:55:27,415 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:28,556 [Process: 0] Synchronize training processes
2024-08-18 19:55:28,556 [Process: 0] Evaluating...
2024-08-18 19:55:28,558 [Process: 0] EPOCH 559:
2024-08-18 19:55:28,560 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9806e-01, 2.1276e-02, 4.9817e-03,  ..., 9.9965e-01,
          2.0058e-01, 1.5461e-03],
         [5.9634e-04, 1.3912e-02, 4.9817e-03,  ..., 1.1717e-04,
          5.3826e-02, 1.5461e-03],
         [7.4534e-04, 2.8651e-02, 7.7634e-03,  ..., 1.1717e-04,
          1.1345e-01, 1.5461e-03],
         [5.9634e-04, 9.3616e-01, 9.8227e-01,  ..., 1.1717e-04,
          6.3214e-01, 9.9536e-01]],
        [[9.9618e-01, 5.1828e-03, 2.0053e-03,  ..., 5.9215e-03,
          1.3612e-03, 2.1906e-04],
         [1.0854e-03, 5.1828e-03, 2.0053e-03,  ..., 6.0785e-03,
          1.3612e-03, 2.1906e-04],
         [1.6469e-03, 8.1917e-03, 2.0195e-03,  ..., 7.5925e-03,
          9.9592e-01, 9.9934e-01],
         [1.0854e-03, 9.8144e-01, 9.9397e-01,  ..., 9.8041e-01,
          1.3612e-03, 2.1906e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3556e-03, 4.7864e-04, 1.2136e-03,  ..., 6.4968e-03,
          6.1046e-05, 1.8171e-03],
         [1.3556e-03, 4.7864e-04, 2.1731e-03,  ..., 6.4968e-03,
          6.1046e-05, 1.8171e-03],
         [9.9593e-01, 4.7864e-04, 1.2136e-03,  ..., 9.7955e-01,
          6.1046e-05, 9.9455e-01],
         [1.3556e-03, 9.9856e-01, 9.9540e-01,  ..., 7.4598e-03,
          9.9982e-01, 1.8171e-03]],
        [[4.1264e-04, 6.1629e-04, 8.1481e-05,  ..., 4.9645e-03,
          6.2312e-03, 9.9870e-01],
         [4.1264e-04, 6.1629e-04, 8.1481e-05,  ..., 4.9645e-03,
          3.7046e-03, 4.3276e-04],
         [9.9876e-01, 6.1629e-04, 8.1481e-05,  ..., 9.8511e-01,
          9.8636e-01, 4.3276e-04],
         [4.1264e-04, 9.9815e-01, 9.9976e-01,  ..., 4.9645e-03,
          3.7046e-03, 4.3276e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 559:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9845e-01, 3.6001e-03, 5.7788e-03,  ..., 9.9954e-01,
          9.7458e-01, 2.6106e-04],
         [4.9990e-04, 3.6001e-03, 5.3065e-03,  ..., 1.5252e-04,
          5.1065e-03, 2.6106e-04],
         [5.4582e-04, 4.3241e-03, 7.3494e-03,  ..., 1.5252e-04,
          6.9609e-03, 2.6106e-04],
         [4.9990e-04, 9.8848e-01, 9.8157e-01,  ..., 1.5252e-04,
          1.3352e-02, 9.9922e-01]],
        [[9.9894e-01, 4.8989e-03, 3.1412e-03,  ..., 3.0045e-03,
          5.5961e-04, 5.7859e-05],
         [4.9716e-04, 4.8989e-03, 3.1412e-03,  ..., 3.0045e-03,
          5.5961e-04, 5.7859e-05],
         [2.8140e-04, 6.6294e-03, 4.0032e-03,  ..., 3.1601e-03,
          9.9832e-01, 9.9983e-01],
         [2.8140e-04, 9.8357e-01, 9.8971e-01,  ..., 9.9083e-01,
          5.5961e-04, 5.7859e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6974e-04, 1.3924e-04, 2.9982e-04,  ..., 1.4012e-03,
          1.3017e-03, 1.6075e-03],
         [4.6974e-04, 1.3924e-04, 2.9982e-04,  ..., 1.4012e-03,
          1.3017e-03, 1.6075e-03],
         [9.9859e-01, 1.3924e-04, 2.9982e-04,  ..., 9.9580e-01,
          1.3017e-03, 9.9518e-01],
         [4.6974e-04, 9.9958e-01, 9.9910e-01,  ..., 1.4012e-03,
          9.9609e-01, 1.6075e-03]],
        [[2.1914e-03, 2.0333e-04, 6.0349e-04,  ..., 6.2069e-03,
          2.4900e-03, 9.9998e-01],
         [2.1914e-03, 2.0333e-04, 6.0349e-04,  ..., 6.2069e-03,
          2.2176e-03, 6.5291e-06],
         [9.9343e-01, 2.0333e-04, 6.0349e-04,  ..., 9.8052e-01,
          9.9307e-01, 6.5291e-06],
         [2.1914e-03, 9.9939e-01, 9.9819e-01,  ..., 7.0642e-03,
          2.2176e-03, 6.5291e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 560:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:29,703 [Process: 0] Synchronize training processes
2024-08-18 19:55:29,703 [Process: 0] Evaluating...
2024-08-18 19:55:29,705 [Process: 0] EPOCH 560:
2024-08-18 19:55:29,706 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9801e-01, 1.1657e-02, 7.2935e-03,  ..., 9.9893e-01,
          7.1922e-01, 3.5915e-04],
         [6.2110e-04, 1.0830e-02, 4.8875e-03,  ..., 3.5312e-04,
          2.2051e-02, 3.5915e-04],
         [7.4970e-04, 1.3226e-02, 7.1745e-03,  ..., 3.6075e-04,
          2.6300e-02, 3.5915e-04],
         [6.2110e-04, 9.6429e-01, 9.8064e-01,  ..., 3.5312e-04,
          2.3243e-01, 9.9892e-01]],
        [[9.9542e-01, 5.3747e-03, 8.4236e-03,  ..., 2.7852e-03,
          4.8202e-04, 4.1122e-04],
         [1.3658e-03, 8.0000e-03, 1.0033e-02,  ..., 2.7852e-03,
          4.8202e-04, 4.1122e-04],
         [1.8510e-03, 6.7361e-03, 1.1294e-02,  ..., 2.7852e-03,
          9.9855e-01, 9.9877e-01],
         [1.3658e-03, 9.7989e-01, 9.7025e-01,  ..., 9.9164e-01,
          4.8202e-04, 4.1122e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4685e-03, 3.4144e-04, 1.3252e-04,  ..., 1.1028e-03,
          1.7021e-02, 4.4939e-04],
         [1.4685e-03, 3.4144e-04, 1.3252e-04,  ..., 1.1028e-03,
          1.4278e-02, 4.4939e-04],
         [9.9559e-01, 3.4144e-04, 1.3252e-04,  ..., 9.9669e-01,
          1.4278e-02, 9.9865e-01],
         [1.4685e-03, 9.9898e-01, 9.9960e-01,  ..., 1.1028e-03,
          9.5442e-01, 4.4939e-04]],
        [[3.1126e-03, 1.1274e-03, 1.1284e-04,  ..., 1.2892e-02,
          8.2112e-03, 9.9991e-01],
         [3.1126e-03, 1.1274e-03, 1.1284e-04,  ..., 1.2892e-02,
          7.3947e-03, 3.0364e-05],
         [9.9066e-01, 1.1274e-03, 1.1284e-04,  ..., 9.4478e-01,
          9.7598e-01, 3.0364e-05],
         [3.1126e-03, 9.9662e-01, 9.9966e-01,  ..., 2.9440e-02,
          8.4103e-03, 3.0364e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 561:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.2449e-01, 2.2570e-03, 2.1969e-03,  ..., 9.9567e-01,
          4.4298e-03, 4.5603e-04],
         [1.4523e-02, 2.2570e-03, 2.1969e-03,  ..., 8.2003e-04,
          4.4298e-03, 4.5603e-04],
         [3.4647e-01, 2.2570e-03, 2.1969e-03,  ..., 2.6927e-03,
          4.5151e-03, 4.5603e-04],
         [1.4523e-02, 9.9323e-01, 9.9341e-01,  ..., 8.2003e-04,
          9.8663e-01, 9.9863e-01]],
        [[9.9710e-01, 2.5154e-03, 6.1093e-03,  ..., 1.2021e-03,
          2.1237e-04, 3.0297e-04],
         [9.6702e-04, 2.5233e-03, 6.1093e-03,  ..., 1.2663e-03,
          2.1237e-04, 3.0297e-04],
         [9.6702e-04, 2.5154e-03, 8.5693e-03,  ..., 1.2021e-03,
          9.9936e-01, 9.9909e-01],
         [9.6702e-04, 9.9245e-01, 9.7921e-01,  ..., 9.9633e-01,
          2.1237e-04, 3.0297e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 19:55:30,849 [Process: 0] Synchronize training processes
2024-08-18 19:55:30,849 [Process: 0] Evaluating...
2024-08-18 19:55:30,851 [Process: 0] EPOCH 561:
2024-08-18 19:55:30,853 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:31,999 [Process: 0] Synchronize training processes
2024-08-18 19:55:31,999 [Process: 0] Evaluating...
2024-08-18 19:55:32,005 [Process: 0] EPOCH 562:
2024-08-18 19:55:32,007 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.1145e-03, 9.3956e-05, 2.0037e-04,  ..., 3.3579e-03,
          1.6981e-03, 1.9026e-03],
         [5.1145e-03, 9.3956e-05, 2.0037e-04,  ..., 3.3579e-03,
          1.6981e-03, 1.9026e-03],
         [9.8466e-01, 9.3956e-05, 2.0037e-04,  ..., 9.8993e-01,
          1.6981e-03, 9.9429e-01],
         [5.1145e-03, 9.9972e-01, 9.9940e-01,  ..., 3.3579e-03,
          9.9491e-01, 1.9026e-03]],
        [[3.7538e-03, 2.1585e-05, 7.1908e-04,  ..., 9.6347e-03,
          2.2355e-03, 9.9940e-01],
         [3.7538e-03, 2.1585e-05, 7.1908e-04,  ..., 9.6347e-03,
          2.1857e-03, 2.0009e-04],
         [9.8874e-01, 2.1585e-05, 7.1908e-04,  ..., 9.6788e-01,
          9.9339e-01, 2.0009e-04],
         [3.7538e-03, 9.9994e-01, 9.9784e-01,  ..., 1.2846e-02,
          2.1857e-03, 2.0009e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 562:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9681e-01, 4.8605e-03, 6.8408e-03,  ..., 9.9300e-01,
          2.7138e-01, 3.6174e-03],
         [6.0020e-04, 4.6605e-03, 6.9814e-03,  ..., 1.7497e-03,
          3.7823e-02, 3.3291e-03],
         [1.9848e-03, 6.4517e-03, 1.4047e-02,  ..., 3.0519e-03,
          6.3942e-02, 3.7117e-03],
         [6.0020e-04, 9.8403e-01, 9.7213e-01,  ..., 2.2027e-03,
          6.2686e-01, 9.8934e-01]],
        [[9.8694e-01, 1.4466e-03, 1.2517e-03,  ..., 1.1654e-03,
          3.5784e-04, 1.1618e-04],
         [3.6424e-03, 1.4466e-03, 1.1246e-03,  ..., 1.1654e-03,
          3.5784e-04, 1.1618e-04],
         [4.9877e-03, 1.4466e-03, 1.1246e-03,  ..., 1.1654e-03,
          9.9893e-01, 9.9965e-01],
         [4.4324e-03, 9.9566e-01, 9.9650e-01,  ..., 9.9650e-01,
          3.5784e-04, 1.1618e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6601e-03, 3.1258e-05, 1.6943e-04,  ..., 1.1456e-03,
          1.4892e-03, 1.3364e-03],
         [2.6601e-03, 3.1258e-05, 1.6943e-04,  ..., 1.1456e-03,
          1.3819e-03, 1.3364e-03],
         [9.9202e-01, 3.1258e-05, 1.6943e-04,  ..., 9.9656e-01,
          1.3819e-03, 9.9599e-01],
         [2.6601e-03, 9.9991e-01, 9.9949e-01,  ..., 1.1456e-03,
          9.9575e-01, 1.3364e-03]],
        [[1.9915e-03, 7.5272e-05, 3.4111e-04,  ..., 5.7395e-03,
          2.6621e-03, 9.9948e-01],
         [1.9915e-03, 7.5272e-05, 3.4111e-04,  ..., 5.7395e-03,
          2.6621e-03, 1.7282e-04],
         [9.9403e-01, 7.5272e-05, 3.4111e-04,  ..., 9.8053e-01,
          9.9201e-01, 1.7282e-04],
         [1.9915e-03, 9.9977e-01, 9.9898e-01,  ..., 7.9960e-03,
          2.6621e-03, 1.7282e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 563:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8300e-01, 7.6118e-03, 2.8297e-03,  ..., 9.9893e-01,
          9.9538e-01, 5.3060e-03],
         [3.7900e-03, 5.8573e-03, 2.8297e-03,  ..., 3.1799e-04,
          1.5388e-03, 3.5507e-03],
         [9.4245e-03, 7.3278e-03, 2.8297e-03,  ..., 4.3523e-04,
          1.5388e-03, 4.6331e-03],
         [3.7900e-03, 9.7920e-01, 9.9151e-01,  ..., 3.1799e-04,
          1.5388e-03, 9.8651e-01]],
        [[9.9965e-01, 6.6869e-03, 1.3228e-03,  ..., 2.0252e-03,
          6.8493e-04, 1.3959e-03],
         [9.1047e-05, 7.8690e-03, 1.3228e-03,  ..., 2.0252e-03,
          6.8493e-04, 1.3959e-03],
         [1.6905e-04, 7.0763e-03, 1.3228e-03,  ..., 2.0252e-03,
          9.9795e-01, 9.9581e-01],
         [9.1047e-05, 9.7837e-01, 9.9603e-01,  ..., 9.9392e-01,
          6.8493e-04, 1.3959e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:55:33,153 [Process: 0] Synchronize training processes
2024-08-18 19:55:33,153 [Process: 0] Evaluating...
2024-08-18 19:55:33,155 [Process: 0] EPOCH 563:
2024-08-18 19:55:33,157 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:34,332 [Process: 0] Synchronize training processes
2024-08-18 19:55:34,332 [Process: 0] Evaluating...
2024-08-18 19:55:34,334 [Process: 0] EPOCH 564:
2024-08-18 19:55:34,336 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6407e-03, 3.3307e-04, 5.5863e-05,  ..., 2.4680e-03,
          1.8226e-04, 8.7617e-04],
         [3.6407e-03, 3.3307e-04, 5.5863e-05,  ..., 2.4680e-03,
          1.8226e-04, 8.7617e-04],
         [9.8908e-01, 3.3307e-04, 5.5863e-05,  ..., 9.9260e-01,
          1.8226e-04, 9.9737e-01],
         [3.6407e-03, 9.9900e-01, 9.9983e-01,  ..., 2.4680e-03,
          9.9945e-01, 8.7617e-04]],
        [[3.7255e-03, 4.2747e-05, 6.0177e-05,  ..., 8.9842e-03,
          2.9399e-03, 9.9989e-01],
         [3.7255e-03, 4.2747e-05, 6.0177e-05,  ..., 8.9842e-03,
          2.8537e-03, 3.5414e-05],
         [9.8882e-01, 4.2747e-05, 6.0177e-05,  ..., 9.6657e-01,
          9.9135e-01, 3.5414e-05],
         [3.7255e-03, 9.9987e-01, 9.9982e-01,  ..., 1.5466e-02,
          2.8537e-03, 3.5414e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 564:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8122e-01, 1.2384e-03, 3.0074e-03,  ..., 9.9984e-01,
          9.9388e-01, 1.0440e-03],
         [1.1077e-02, 1.2384e-03, 2.5801e-03,  ..., 5.2298e-05,
          1.9873e-03, 1.0440e-03],
         [4.4532e-03, 1.2384e-03, 2.5801e-03,  ..., 5.2298e-05,
          2.1464e-03, 1.0440e-03],
         [3.2485e-03, 9.9628e-01, 9.9183e-01,  ..., 5.2298e-05,
          1.9873e-03, 9.9687e-01]],
        [[9.9672e-01, 1.5882e-03, 2.1397e-03,  ..., 3.2494e-03,
          5.1800e-04, 3.8758e-04],
         [7.7420e-04, 1.5882e-03, 2.1397e-03,  ..., 3.2494e-03,
          5.1800e-04, 3.8758e-04],
         [1.7295e-03, 1.5882e-03, 2.1397e-03,  ..., 3.5679e-03,
          9.9845e-01, 9.9884e-01],
         [7.7420e-04, 9.9524e-01, 9.9358e-01,  ..., 9.8993e-01,
          5.1800e-04, 3.8758e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9752e-03, 6.6858e-04, 1.0791e-05,  ..., 5.4834e-03,
          1.0655e-03, 8.8175e-04],
         [3.9752e-03, 9.3601e-04, 1.0791e-05,  ..., 5.4834e-03,
          1.0655e-03, 8.8175e-04],
         [9.8807e-01, 6.6858e-04, 1.0791e-05,  ..., 9.8355e-01,
          1.0655e-03, 9.9735e-01],
         [3.9752e-03, 9.9773e-01, 9.9997e-01,  ..., 5.4834e-03,
          9.9680e-01, 8.8175e-04]],
        [[4.2254e-03, 2.2037e-04, 2.3872e-05,  ..., 8.6004e-03,
          1.0041e-03, 9.9983e-01],
         [4.2254e-03, 2.2037e-04, 2.3872e-05,  ..., 8.6004e-03,
          1.0041e-03, 5.5112e-05],
         [9.8732e-01, 2.2037e-04, 2.3872e-05,  ..., 9.6836e-01,
          9.9699e-01, 5.5112e-05],
         [4.2254e-03, 9.9934e-01, 9.9993e-01,  ..., 1.4443e-02,
          1.0041e-03, 5.5112e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 565:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:35,481 [Process: 0] Synchronize training processes
2024-08-18 19:55:35,481 [Process: 0] Evaluating...
2024-08-18 19:55:35,483 [Process: 0] EPOCH 565:
2024-08-18 19:55:35,485 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9548e-01, 8.5325e-04, 2.3321e-03,  ..., 9.9966e-01,
          9.8855e-01, 9.0777e-04],
         [1.6141e-03, 8.5325e-04, 2.3321e-03,  ..., 1.1407e-04,
          2.7018e-03, 9.0777e-04],
         [2.0783e-03, 8.5325e-04, 2.3321e-03,  ..., 1.1407e-04,
          2.8766e-03, 9.0777e-04],
         [8.3032e-04, 9.9744e-01, 9.9300e-01,  ..., 1.1407e-04,
          5.8689e-03, 9.9728e-01]],
        [[9.9863e-01, 1.1307e-03, 1.2594e-03,  ..., 1.5422e-03,
          2.8586e-04, 2.4905e-04],
         [4.1722e-04, 1.1307e-03, 1.2594e-03,  ..., 1.5422e-03,
          2.8586e-04, 2.4905e-04],
         [5.3425e-04, 1.1307e-03, 1.2594e-03,  ..., 1.5422e-03,
          9.9914e-01, 9.9925e-01],
         [4.1722e-04, 9.9661e-01, 9.9622e-01,  ..., 9.9537e-01,
          2.8586e-04, 2.4905e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6102e-04, 8.5891e-05, 7.1452e-06,  ..., 2.6659e-03,
          1.6879e-03, 3.7949e-03],
         [9.6102e-04, 8.5891e-05, 7.1452e-06,  ..., 2.6659e-03,
          8.5943e-04, 3.1334e-03],
         [9.9712e-01, 8.5891e-05, 7.1452e-06,  ..., 9.9200e-01,
          8.5943e-04, 9.8994e-01],
         [9.6102e-04, 9.9974e-01, 9.9998e-01,  ..., 2.6659e-03,
          9.9659e-01, 3.1334e-03]],
        [[1.1027e-03, 1.5711e-03, 2.6959e-05,  ..., 3.5900e-03,
          2.0640e-03, 9.9875e-01],
         [1.1027e-03, 1.2682e-03, 2.6959e-05,  ..., 3.5900e-03,
          2.0640e-03, 3.9293e-04],
         [9.9669e-01, 1.2682e-03, 2.6959e-05,  ..., 9.8923e-01,
          9.9381e-01, 3.9293e-04],
         [1.1027e-03, 9.9589e-01, 9.9992e-01,  ..., 3.5900e-03,
          2.0640e-03, 4.6713e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 566:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9817e-01, 4.2657e-03, 2.5977e-03,  ..., 9.9827e-01,
          7.5054e-01, 9.1157e-04],
         [2.7697e-04, 4.2657e-03, 2.0430e-03,  ..., 5.7618e-04,
          2.5728e-02, 9.1157e-04],
         [1.2758e-03, 5.8319e-03, 2.4437e-03,  ..., 5.7618e-04,
          3.8869e-02, 9.1157e-04],
         [2.7697e-04, 9.8564e-01, 9.9292e-01,  ..., 5.7618e-04,
          1.8487e-01, 9.9727e-01]],
        [[9.9904e-01, 3.4513e-03, 2.3102e-03,  ..., 6.3409e-04,
          9.4565e-05, 1.0987e-04],
         [3.2158e-04, 3.4513e-03, 2.3102e-03,  ..., 6.3409e-04,
          9.4565e-05, 1.0987e-04],
         [3.2158e-04, 4.5873e-03, 2.3102e-03,  ..., 6.3409e-04,
          9.9972e-01, 9.9967e-01],
         [3.2158e-04, 9.8851e-01, 9.9307e-01,  ..., 9.9810e-01,
          9.4565e-05, 1.0987e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4570e-03, 9.9078e-05, 7.5201e-06,  ..., 7.7072e-03,
          6.9282e-04, 1.0413e-03],
         [3.4570e-03, 9.9078e-05, 7.5201e-06,  ..., 7.7072e-03,
          6.9282e-04, 1.0413e-03],
         [9.8963e-01, 9.9078e-05, 7.5201e-06,  ..., 9.7476e-01,
          6.9282e-04, 9.9688e-01],
         [3.4570e-03, 9.9970e-01, 9.9998e-01,  ..., 9.8284e-03,
          9.9792e-01, 1.0413e-03]],
        [[2.1932e-03, 1.0056e-04, 7.0717e-06,  ..., 9.8821e-03,
          5.0233e-04, 9.9953e-01],
         [2.1932e-03, 1.0056e-04, 7.0717e-06,  ..., 9.8821e-03,
          5.0233e-04, 1.5221e-04],
         [9.9342e-01, 1.0056e-04, 7.0717e-06,  ..., 9.6529e-01,
          9.9849e-01, 1.5221e-04],
         [2.1932e-03, 9.9970e-01, 9.9998e-01,  ..., 1.4948e-02,
          5.0233e-04, 1.6996e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 567:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:36,629 [Process: 0] Synchronize training processes
2024-08-18 19:55:36,630 [Process: 0] Evaluating...
2024-08-18 19:55:36,631 [Process: 0] EPOCH 566:
2024-08-18 19:55:36,633 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:37,776 [Process: 0] Synchronize training processes
2024-08-18 19:55:37,776 [Process: 0] Evaluating...
2024-08-18 19:55:37,778 [Process: 0] EPOCH 567:
2024-08-18 19:55:37,780 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9754e-01, 2.1252e-03, 5.0327e-03,  ..., 9.9363e-01,
          9.2771e-01, 2.8828e-03],
         [7.1759e-04, 2.1252e-03, 3.5444e-03,  ..., 1.6487e-03,
          1.3773e-02, 2.8828e-03],
         [1.0284e-03, 2.1252e-03, 5.1114e-03,  ..., 3.0695e-03,
          1.7294e-02, 2.9129e-03],
         [7.1759e-04, 9.9362e-01, 9.8631e-01,  ..., 1.6487e-03,
          4.1223e-02, 9.9132e-01]],
        [[9.9847e-01, 1.1968e-03, 3.6193e-04,  ..., 1.7380e-03,
          1.7615e-03, 5.6356e-05],
         [4.6360e-04, 1.1968e-03, 3.6193e-04,  ..., 1.4260e-03,
          1.7615e-03, 5.6356e-05],
         [6.0417e-04, 1.1968e-03, 3.6193e-04,  ..., 1.4597e-03,
          9.9472e-01, 9.9983e-01],
         [4.6360e-04, 9.9641e-01, 9.9891e-01,  ..., 9.9538e-01,
          1.7615e-03, 5.6356e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.3319e-03, 2.6466e-04, 5.4347e-05,  ..., 6.4475e-03,
          5.0000e-04, 1.4320e-03],
         [6.3319e-03, 2.8321e-04, 5.4347e-05,  ..., 6.4475e-03,
          5.0000e-04, 1.4320e-03],
         [9.7982e-01, 2.6466e-04, 5.4347e-05,  ..., 9.7926e-01,
          5.0000e-04, 9.9570e-01],
         [7.5203e-03, 9.9919e-01, 9.9984e-01,  ..., 7.8447e-03,
          9.9850e-01, 1.4320e-03]],
        [[3.7328e-04, 1.4922e-03, 5.3322e-03,  ..., 4.7285e-03,
          4.0225e-03, 9.9966e-01],
         [3.7328e-04, 1.4922e-03, 3.5365e-03,  ..., 4.7285e-03,
          3.4798e-03, 1.0834e-04],
         [9.9888e-01, 1.4922e-03, 3.5365e-03,  ..., 9.8579e-01,
          9.8902e-01, 1.0834e-04],
         [3.7328e-04, 9.9552e-01, 9.8759e-01,  ..., 4.7548e-03,
          3.4798e-03, 1.1859e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 568:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.2439e-01, 2.5488e-03, 4.8962e-03,  ..., 9.9791e-01,
          9.9649e-01, 4.2932e-03],
         [1.5318e-01, 1.8956e-03, 4.9330e-03,  ..., 5.9157e-04,
          1.0431e-03, 4.1693e-03],
         [1.2773e-02, 2.3741e-03, 6.2395e-03,  ..., 9.0463e-04,
          1.0431e-03, 4.1693e-03],
         [9.6513e-03, 9.9318e-01, 9.8393e-01,  ..., 5.9157e-04,
          1.4239e-03, 9.8737e-01]],
        [[9.9922e-01, 1.6578e-03, 1.4870e-03,  ..., 1.2494e-03,
          1.0782e-03, 3.8193e-04],
         [2.8199e-04, 1.3513e-03, 1.4870e-03,  ..., 1.2494e-03,
          1.0782e-03, 3.8193e-04],
         [2.4930e-04, 1.6400e-03, 1.4870e-03,  ..., 1.2494e-03,
          9.9677e-01, 9.9885e-01],
         [2.4930e-04, 9.9535e-01, 9.9554e-01,  ..., 9.9625e-01,
          1.0782e-03, 3.8193e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:55:38,923 [Process: 0] Synchronize training processes
2024-08-18 19:55:38,923 [Process: 0] Evaluating...
2024-08-18 19:55:38,925 [Process: 0] EPOCH 568:
2024-08-18 19:55:38,927 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:40,099 [Process: 0] Synchronize training processes
2024-08-18 19:55:40,099 [Process: 0] Evaluating...
2024-08-18 19:55:40,101 [Process: 0] EPOCH 569:
2024-08-18 19:55:40,103 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0028e-03, 4.2166e-05, 1.7945e-05,  ..., 2.5121e-03,
          3.1484e-04, 4.1323e-03],
         [2.0028e-03, 4.2166e-05, 1.7945e-05,  ..., 2.5121e-03,
          3.1484e-04, 4.1323e-03],
         [9.9399e-01, 4.2166e-05, 1.7945e-05,  ..., 9.9246e-01,
          3.1484e-04, 9.8760e-01],
         [2.0028e-03, 9.9987e-01, 9.9995e-01,  ..., 2.5121e-03,
          9.9906e-01, 4.1323e-03]],
        [[5.9492e-03, 3.9191e-03, 2.7446e-05,  ..., 7.4768e-03,
          3.3077e-04, 9.9956e-01],
         [5.9492e-03, 3.9191e-03, 2.7446e-05,  ..., 7.4768e-03,
          3.3077e-04, 1.4645e-04],
         [9.7852e-01, 3.9191e-03, 2.7446e-05,  ..., 9.7536e-01,
          9.9901e-01, 1.4645e-04],
         [9.5791e-03, 9.8824e-01, 9.9992e-01,  ..., 9.6837e-03,
          3.3077e-04, 1.4645e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 569:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9723e-01, 7.5375e-04, 4.1178e-03,  ..., 9.9851e-01,
          9.7680e-01, 9.0057e-04],
         [7.0624e-04, 7.5375e-04, 4.1178e-03,  ..., 5.5065e-04,
          6.1768e-03, 9.0057e-04],
         [1.3531e-03, 8.1708e-04, 5.5738e-03,  ..., 4.7194e-04,
          1.0004e-02, 9.0057e-04],
         [7.0624e-04, 9.9768e-01, 9.8619e-01,  ..., 4.7194e-04,
          7.0209e-03, 9.9730e-01]],
        [[9.9842e-01, 1.0884e-03, 2.5414e-04,  ..., 5.3135e-04,
          1.9668e-03, 2.4846e-04],
         [5.2690e-04, 1.0884e-03, 2.5414e-04,  ..., 5.3135e-04,
          1.9668e-03, 2.4846e-04],
         [5.2690e-04, 1.0884e-03, 2.5414e-04,  ..., 5.3135e-04,
          9.9410e-01, 9.9925e-01],
         [5.2690e-04, 9.9673e-01, 9.9924e-01,  ..., 9.9841e-01,
          1.9668e-03, 2.4846e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5681e-03, 9.6201e-05, 7.5092e-05,  ..., 3.1068e-03,
          2.2362e-03, 1.5307e-03],
         [2.5681e-03, 9.6201e-05, 7.5092e-05,  ..., 3.1068e-03,
          2.2362e-03, 1.5307e-03],
         [9.9230e-01, 9.6201e-05, 7.5092e-05,  ..., 9.9068e-01,
          2.2362e-03, 9.9541e-01],
         [2.5681e-03, 9.9971e-01, 9.9977e-01,  ..., 3.1068e-03,
          9.9329e-01, 1.5307e-03]],
        [[9.1485e-04, 6.7869e-05, 1.1473e-03,  ..., 4.1332e-03,
          1.7445e-03, 9.9952e-01],
         [9.1485e-04, 6.7869e-05, 1.1473e-03,  ..., 4.1332e-03,
          1.7445e-03, 1.5870e-04],
         [9.9726e-01, 6.7869e-05, 1.1473e-03,  ..., 9.8687e-01,
          9.9477e-01, 1.5870e-04],
         [9.1485e-04, 9.9980e-01, 9.9656e-01,  ..., 4.8684e-03,
          1.7445e-03, 1.5870e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 570:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9772e-01, 2.6444e-03, 1.3127e-03,  ..., 9.9953e-01,
          9.7846e-01, 1.1720e-03],
         [7.5857e-04, 2.1102e-03, 1.2334e-03,  ..., 1.5803e-04,
          5.5070e-03, 1.1720e-03],
         [7.5857e-04, 2.3672e-03, 1.2334e-03,  ..., 1.5803e-04,
          9.5994e-03, 1.1720e-03],
         [7.5857e-04, 9.9288e-01, 9.9622e-01,  ..., 1.5803e-04,
          6.4359e-03, 9.9648e-01]],
        [[9.9730e-01, 1.5405e-03, 3.3541e-04,  ..., 2.3194e-03,
          1.8719e-03, 1.3406e-04],
         [8.7237e-04, 1.5405e-03, 3.3541e-04,  ..., 1.5371e-03,
          1.8719e-03, 1.3406e-04],
         [9.5698e-04, 2.0471e-03, 3.3541e-04,  ..., 1.7879e-03,
          9.9438e-01, 9.9960e-01],
         [8.7237e-04, 9.9487e-01, 9.9899e-01,  ..., 9.9436e-01,
          1.8719e-03, 1.3406e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:55:41,249 [Process: 0] Synchronize training processes
2024-08-18 19:55:41,250 [Process: 0] Evaluating...
2024-08-18 19:55:41,252 [Process: 0] EPOCH 570:
2024-08-18 19:55:41,254 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:42,395 [Process: 0] Synchronize training processes
2024-08-18 19:55:42,395 [Process: 0] Evaluating...
2024-08-18 19:55:42,397 [Process: 0] EPOCH 571:
2024-08-18 19:55:42,399 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3307e-03, 1.4114e-04, 3.2313e-05,  ..., 2.1926e-03,
          2.0867e-04, 2.6736e-03],
         [3.3307e-03, 1.4114e-04, 3.2313e-05,  ..., 2.1926e-03,
          2.0867e-04, 2.6736e-03],
         [9.9001e-01, 1.4114e-04, 3.2313e-05,  ..., 9.9342e-01,
          2.0867e-04, 9.9198e-01],
         [3.3307e-03, 9.9958e-01, 9.9990e-01,  ..., 2.1926e-03,
          9.9937e-01, 2.6736e-03]],
        [[4.8331e-04, 2.0069e-04, 5.8659e-05,  ..., 6.3649e-03,
          2.5637e-03, 9.9720e-01],
         [4.8331e-04, 2.0069e-04, 5.8659e-05,  ..., 6.3649e-03,
          2.5637e-03, 9.2794e-04],
         [9.9855e-01, 2.0069e-04, 5.8659e-05,  ..., 9.7992e-01,
          9.9231e-01, 9.2794e-04],
         [4.8331e-04, 9.9940e-01, 9.9982e-01,  ..., 7.3513e-03,
          2.5637e-03, 9.4741e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 571:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9924e-01, 4.8380e-03, 3.2440e-03,  ..., 9.3312e-01,
          9.8103e-01, 3.7351e-03],
         [2.5282e-04, 5.0206e-03, 6.9799e-03,  ..., 5.1605e-02,
          5.5475e-03, 3.7351e-03],
         [2.5282e-04, 6.2243e-03, 4.0275e-03,  ..., 9.7583e-03,
          7.8704e-03, 3.7351e-03],
         [2.5282e-04, 9.8392e-01, 9.8575e-01,  ..., 5.5204e-03,
          5.5475e-03, 9.8879e-01]],
        [[9.9778e-01, 1.5564e-03, 5.4241e-04,  ..., 2.0919e-03,
          1.2403e-03, 1.0160e-04],
         [6.9610e-04, 2.5227e-03, 5.4241e-04,  ..., 2.0919e-03,
          1.2403e-03, 1.0160e-04],
         [8.2338e-04, 1.7295e-03, 5.4241e-04,  ..., 2.0919e-03,
          9.9628e-01, 9.9970e-01],
         [6.9610e-04, 9.9419e-01, 9.9837e-01,  ..., 9.9372e-01,
          1.2403e-03, 1.0160e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6044e-03, 1.2018e-04, 1.1278e-05,  ..., 1.6908e-03,
          6.8459e-05, 3.2170e-03],
         [1.6044e-03, 1.2018e-04, 1.1278e-05,  ..., 1.6908e-03,
          5.7006e-05, 3.2170e-03],
         [9.9519e-01, 1.2018e-04, 1.1278e-05,  ..., 9.9493e-01,
          5.7006e-05, 9.9035e-01],
         [1.6044e-03, 9.9964e-01, 9.9997e-01,  ..., 1.6908e-03,
          9.9982e-01, 3.2170e-03]],
        [[1.5200e-03, 1.9485e-05, 1.1956e-03,  ..., 9.9755e-03,
          3.1010e-03, 9.9966e-01],
         [1.5200e-03, 1.9485e-05, 1.2885e-03,  ..., 7.9255e-03,
          3.1010e-03, 1.1327e-04],
         [9.9544e-01, 1.9485e-05, 1.1956e-03,  ..., 9.7409e-01,
          9.9070e-01, 1.1327e-04],
         [1.5200e-03, 9.9994e-01, 9.9632e-01,  ..., 8.0123e-03,
          3.1010e-03, 1.1327e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 572:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:43,537 [Process: 0] Synchronize training processes
2024-08-18 19:55:43,537 [Process: 0] Evaluating...
2024-08-18 19:55:43,543 [Process: 0] EPOCH 572:
2024-08-18 19:55:43,545 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5743e-01, 2.6937e-03, 2.5805e-03,  ..., 9.9982e-01,
          9.3844e-01, 3.6729e-03],
         [6.6262e-03, 2.6937e-03, 1.7875e-03,  ..., 6.1635e-05,
          1.1618e-02, 3.6729e-03],
         [3.0771e-02, 2.9543e-03, 1.9770e-03,  ..., 6.1635e-05,
          2.2275e-02, 3.6729e-03],
         [5.1756e-03, 9.9166e-01, 9.9365e-01,  ..., 6.1635e-05,
          2.7664e-02, 9.8898e-01]],
        [[9.9851e-01, 1.5707e-03, 1.1505e-04,  ..., 2.4822e-04,
          7.4103e-04, 1.1579e-04],
         [4.9729e-04, 1.5707e-03, 1.1505e-04,  ..., 2.4822e-04,
          7.4103e-04, 1.1579e-04],
         [4.9729e-04, 1.5707e-03, 1.1505e-04,  ..., 2.4822e-04,
          9.9778e-01, 9.9965e-01],
         [4.9729e-04, 9.9529e-01, 9.9965e-01,  ..., 9.9926e-01,
          7.4103e-04, 1.1579e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5053e-03, 1.7015e-05, 6.9892e-06,  ..., 1.9030e-03,
          1.0805e-03, 2.8809e-03],
         [1.5053e-03, 1.7015e-05, 6.9892e-06,  ..., 1.9030e-03,
          1.0805e-03, 2.8809e-03],
         [9.9548e-01, 1.7015e-05, 6.9892e-06,  ..., 9.9429e-01,
          1.0805e-03, 9.9136e-01],
         [1.5053e-03, 9.9995e-01, 9.9998e-01,  ..., 1.9030e-03,
          9.9676e-01, 2.8809e-03]],
        [[5.3611e-04, 3.9122e-04, 4.7714e-04,  ..., 4.4789e-03,
          1.5365e-03, 9.9986e-01],
         [5.3611e-04, 3.9122e-04, 4.7714e-04,  ..., 4.4789e-03,
          1.5365e-03, 4.6113e-05],
         [9.9839e-01, 3.9122e-04, 4.7714e-04,  ..., 9.8656e-01,
          9.9539e-01, 4.6113e-05],
         [5.3611e-04, 9.9883e-01, 9.9857e-01,  ..., 4.4789e-03,
          1.5365e-03, 4.6113e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 573:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5837e-03, 1.2612e-03, 1.6601e-03,  ..., 9.9976e-01,
          8.5398e-01, 1.6915e-02],
         [2.0743e-03, 1.2612e-03, 1.6601e-03,  ..., 8.1051e-05,
          1.8657e-02, 2.4474e-02],
         [9.9327e-01, 1.8464e-03, 1.6654e-03,  ..., 8.1051e-05,
          3.3446e-02, 3.9193e-02],
         [2.0743e-03, 9.9563e-01, 9.9501e-01,  ..., 8.1051e-05,
          9.3913e-02, 9.1942e-01]],
        [[9.9615e-01, 2.4176e-04, 3.6771e-04,  ..., 2.3805e-03,
          6.5190e-04, 3.9251e-04],
         [1.2820e-03, 2.4176e-04, 3.6771e-04,  ..., 2.3805e-03,
          6.5190e-04, 3.9251e-04],
         [1.2820e-03, 2.4176e-04, 3.6771e-04,  ..., 2.8415e-03,
          9.9804e-01, 9.9882e-01],
         [1.2820e-03, 9.9927e-01, 9.9890e-01,  ..., 9.9240e-01,
          6.5190e-04, 3.9251e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5749e-03, 8.8367e-05, 3.6645e-05,  ..., 4.1684e-03,
          2.7040e-04, 5.5078e-04],
         [1.5749e-03, 8.8367e-05, 3.6645e-05,  ..., 4.1684e-03,
          2.7040e-04, 5.5078e-04],
         [9.9528e-01, 8.8367e-05, 3.6645e-05,  ..., 9.8749e-01,
          2.7040e-04, 9.9835e-01],
         [1.5749e-03, 9.9973e-01, 9.9989e-01,  ..., 4.1684e-03,
          9.9919e-01, 5.5078e-04]],
        [[1.8233e-03, 5.9916e-04, 3.4224e-05,  ..., 4.3398e-03,
          1.5152e-03, 9.9898e-01],
         [1.8233e-03, 5.9916e-04, 3.4224e-05,  ..., 4.3398e-03,
          1.5152e-03, 3.4052e-04],
         [9.9453e-01, 5.9916e-04, 3.4224e-05,  ..., 9.8698e-01,
          9.9545e-01, 3.4052e-04],
         [1.8233e-03, 9.9820e-01, 9.9990e-01,  ..., 4.3398e-03,
          1.5152e-03, 3.4052e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 574:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:44,676 [Process: 0] Synchronize training processes
2024-08-18 19:55:44,677 [Process: 0] Evaluating...
2024-08-18 19:55:44,679 [Process: 0] EPOCH 573:
2024-08-18 19:55:44,681 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:45,812 [Process: 0] Synchronize training processes
2024-08-18 19:55:45,813 [Process: 0] Evaluating...
2024-08-18 19:55:45,814 [Process: 0] EPOCH 574:
2024-08-18 19:55:45,816 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9536e-03, 1.9065e-03, 8.3838e-04,  ..., 9.9962e-01,
          9.5125e-01, 8.5330e-04],
         [1.9536e-03, 1.9065e-03, 8.3838e-04,  ..., 1.2596e-04,
          9.4163e-03, 8.5330e-04],
         [9.9414e-01, 1.9065e-03, 8.6362e-04,  ..., 1.2596e-04,
          1.4415e-02, 8.5330e-04],
         [1.9536e-03, 9.9428e-01, 9.9746e-01,  ..., 1.2596e-04,
          2.4918e-02, 9.9744e-01]],
        [[9.9720e-01, 6.8928e-04, 7.8275e-04,  ..., 6.8089e-04,
          1.9673e-04, 3.9637e-04],
         [8.2293e-04, 6.8928e-04, 7.8275e-04,  ..., 6.8089e-04,
          1.9673e-04, 3.9637e-04],
         [1.1545e-03, 7.5413e-04, 7.8275e-04,  ..., 6.8089e-04,
          9.9941e-01, 9.9881e-01],
         [8.2293e-04, 9.9787e-01, 9.9765e-01,  ..., 9.9796e-01,
          1.9673e-04, 3.9637e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4544e-03, 3.7214e-04, 1.0521e-04,  ..., 1.5773e-03,
          8.0543e-04, 1.8541e-03],
         [4.4544e-03, 4.2200e-04, 1.0521e-04,  ..., 1.5773e-03,
          8.0543e-04, 1.8541e-03],
         [9.8636e-01, 3.7214e-04, 1.0521e-04,  ..., 9.9527e-01,
          8.0543e-04, 9.9444e-01],
         [4.7339e-03, 9.9883e-01, 9.9968e-01,  ..., 1.5773e-03,
          9.9758e-01, 1.8541e-03]],
        [[3.0436e-03, 8.3557e-05, 2.4613e-06,  ..., 3.0256e-03,
          1.3905e-03, 9.9955e-01],
         [3.0436e-03, 8.3557e-05, 2.4613e-06,  ..., 3.0256e-03,
          1.3905e-03, 1.3716e-04],
         [9.9087e-01, 8.3557e-05, 2.4613e-06,  ..., 9.9092e-01,
          9.9583e-01, 1.3716e-04],
         [3.0436e-03, 9.9975e-01, 9.9999e-01,  ..., 3.0256e-03,
          1.3905e-03, 1.7213e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 575:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9287e-02, 1.5253e-03, 8.0691e-04,  ..., 9.9279e-01,
          9.3251e-01, 3.1908e-03],
         [1.8751e-02, 1.5253e-03, 8.0691e-04,  ..., 2.4023e-03,
          1.1213e-02, 3.3115e-03],
         [8.6321e-01, 2.0340e-03, 8.6010e-04,  ..., 2.4023e-03,
          1.8229e-02, 3.6128e-03],
         [1.8751e-02, 9.9492e-01, 9.9753e-01,  ..., 2.4023e-03,
          3.8046e-02, 9.8988e-01]],
        [[9.9928e-01, 6.5415e-04, 7.8296e-04,  ..., 3.9232e-03,
          1.1905e-03, 9.4073e-05],
         [2.4090e-04, 6.5415e-04, 7.8296e-04,  ..., 3.1124e-03,
          1.1905e-03, 9.4073e-05],
         [2.4090e-04, 6.5415e-04, 7.8296e-04,  ..., 3.3562e-03,
          9.9643e-01, 9.9972e-01],
         [2.4090e-04, 9.9804e-01, 9.9765e-01,  ..., 9.8961e-01,
          1.1905e-03, 9.4073e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:55:46,954 [Process: 0] Synchronize training processes
2024-08-18 19:55:46,954 [Process: 0] Evaluating...
2024-08-18 19:55:46,956 [Process: 0] EPOCH 575:
2024-08-18 19:55:46,958 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:48,101 [Process: 0] Synchronize training processes
2024-08-18 19:55:48,101 [Process: 0] Evaluating...
2024-08-18 19:55:48,103 [Process: 0] EPOCH 576:
2024-08-18 19:55:48,105 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2563e-03, 3.1064e-04, 7.0305e-06,  ..., 3.0575e-03,
          2.7603e-04, 2.7518e-03],
         [2.2563e-03, 3.1064e-04, 7.0305e-06,  ..., 3.0575e-03,
          2.7603e-04, 2.7518e-03],
         [9.9323e-01, 3.1064e-04, 7.0305e-06,  ..., 9.9083e-01,
          2.7603e-04, 9.9174e-01],
         [2.2563e-03, 9.9907e-01, 9.9998e-01,  ..., 3.0575e-03,
          9.9917e-01, 2.7518e-03]],
        [[1.2826e-03, 9.8743e-05, 1.5761e-05,  ..., 7.5342e-03,
          3.6830e-03, 9.9978e-01],
         [1.2826e-03, 9.8743e-05, 1.5761e-05,  ..., 7.5342e-03,
          3.6830e-03, 7.1939e-05],
         [9.9615e-01, 9.8743e-05, 1.5761e-05,  ..., 9.7430e-01,
          9.8895e-01, 7.1939e-05],
         [1.2826e-03, 9.9970e-01, 9.9995e-01,  ..., 1.0632e-02,
          3.6830e-03, 7.1939e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 576:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8988e-01, 1.5493e-03, 3.6745e-04,  ..., 9.9884e-01,
          9.3738e-01, 4.0317e-04],
         [3.3745e-03, 1.5493e-03, 3.6745e-04,  ..., 3.8675e-04,
          9.6664e-03, 4.0317e-04],
         [3.3745e-03, 1.5493e-03, 3.6745e-04,  ..., 3.8675e-04,
          1.1654e-02, 4.0317e-04],
         [3.3745e-03, 9.9535e-01, 9.9890e-01,  ..., 3.8675e-04,
          4.1304e-02, 9.9879e-01]],
        [[9.9968e-01, 6.3343e-04, 1.4080e-03,  ..., 2.8979e-03,
          2.3522e-04, 6.2003e-03],
         [1.0612e-04, 6.3343e-04, 1.4080e-03,  ..., 2.9568e-03,
          2.3522e-04, 6.2003e-03],
         [1.0612e-04, 6.3343e-04, 1.9518e-03,  ..., 3.2304e-03,
          9.9929e-01, 9.8123e-01],
         [1.0612e-04, 9.9810e-01, 9.9523e-01,  ..., 9.9091e-01,
          2.3522e-04, 6.3712e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.5508e-03, 2.3015e-05, 1.8491e-05,  ..., 2.8891e-03,
          2.0000e-04, 2.1432e-03],
         [4.5508e-03, 2.3015e-05, 1.8491e-05,  ..., 2.8891e-03,
          2.0000e-04, 2.1432e-03],
         [9.8635e-01, 2.3015e-05, 1.8491e-05,  ..., 9.9133e-01,
          2.0000e-04, 9.9357e-01],
         [4.5508e-03, 9.9993e-01, 9.9994e-01,  ..., 2.8891e-03,
          9.9940e-01, 2.1432e-03]],
        [[2.2019e-03, 2.0632e-04, 2.5988e-04,  ..., 4.2856e-03,
          2.8550e-03, 9.9935e-01],
         [2.2019e-03, 2.0632e-04, 2.5988e-04,  ..., 4.2856e-03,
          2.8550e-03, 2.1519e-04],
         [9.9339e-01, 2.0632e-04, 2.5988e-04,  ..., 9.8714e-01,
          9.9143e-01, 2.1519e-04],
         [2.2019e-03, 9.9938e-01, 9.9922e-01,  ..., 4.2856e-03,
          2.8550e-03, 2.1519e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 577:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1797e-01, 4.7491e-03, 1.6179e-03,  ..., 9.9866e-01,
          9.3704e-01, 7.3324e-04],
         [1.9287e-02, 4.8732e-03, 1.6179e-03,  ..., 4.4667e-04,
          1.0913e-02, 7.3324e-04],
         [2.4250e-02, 6.6084e-03, 3.0609e-03,  ..., 4.4667e-04,
          1.3815e-02, 7.3324e-04],
         [3.8493e-02, 9.8377e-01, 9.9370e-01,  ..., 4.4667e-04,
          3.8227e-02, 9.9780e-01]],
        [[9.9802e-01, 4.1376e-04, 3.7415e-04,  ..., 2.3509e-03,
          1.6933e-04, 3.9365e-04],
         [5.6754e-04, 4.1376e-04, 3.7415e-04,  ..., 2.3509e-03,
          1.6933e-04, 3.9365e-04],
         [8.4805e-04, 4.1376e-04, 3.7415e-04,  ..., 3.1994e-03,
          9.9949e-01, 9.9882e-01],
         [5.6754e-04, 9.9876e-01, 9.9888e-01,  ..., 9.9210e-01,
          1.6933e-04, 3.9365e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:55:49,252 [Process: 0] Synchronize training processes
2024-08-18 19:55:49,252 [Process: 0] Evaluating...
2024-08-18 19:55:49,254 [Process: 0] EPOCH 577:
2024-08-18 19:55:49,256 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:50,401 [Process: 0] Synchronize training processes
2024-08-18 19:55:50,401 [Process: 0] Evaluating...
2024-08-18 19:55:50,403 [Process: 0] EPOCH 578:
2024-08-18 19:55:50,405 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1271e-03, 4.7124e-04, 1.4014e-05,  ..., 1.1278e-03,
          1.8912e-03, 2.6836e-03],
         [3.1271e-03, 4.7124e-04, 1.4014e-05,  ..., 1.1278e-03,
          1.8912e-03, 2.6836e-03],
         [9.9062e-01, 4.7124e-04, 1.4014e-05,  ..., 9.9662e-01,
          1.8912e-03, 9.9195e-01],
         [3.1271e-03, 9.9859e-01, 9.9996e-01,  ..., 1.1278e-03,
          9.9433e-01, 2.6836e-03]],
        [[3.1914e-03, 5.6273e-05, 9.1573e-04,  ..., 2.0742e-03,
          3.2509e-03, 9.9939e-01],
         [3.1914e-03, 5.6273e-05, 1.5166e-03,  ..., 2.0742e-03,
          2.9538e-03, 2.0254e-04],
         [9.9043e-01, 5.6273e-05, 9.1573e-04,  ..., 9.9378e-01,
          9.9084e-01, 2.0254e-04],
         [3.1914e-03, 9.9983e-01, 9.9665e-01,  ..., 2.0742e-03,
          2.9538e-03, 2.0254e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 578:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7164e-01, 2.7806e-03, 1.8066e-03,  ..., 9.9847e-01,
          8.6029e-01, 4.0327e-03],
         [6.9855e-03, 2.7806e-03, 1.8066e-03,  ..., 5.0374e-04,
          1.5904e-02, 2.5570e-03],
         [1.1930e-02, 4.1086e-03, 2.3188e-03,  ..., 5.0374e-04,
          1.6033e-02, 3.7852e-03],
         [9.4418e-03, 9.9033e-01, 9.9407e-01,  ..., 5.2736e-04,
          1.0777e-01, 9.8963e-01]],
        [[9.9849e-01, 1.2791e-03, 8.4659e-04,  ..., 2.2260e-03,
          1.3397e-04, 2.1225e-04],
         [4.5701e-04, 1.2791e-03, 8.4659e-04,  ..., 2.2260e-03,
          1.3397e-04, 2.1225e-04],
         [5.9950e-04, 1.9304e-03, 9.2577e-04,  ..., 2.5211e-03,
          9.9960e-01, 9.9936e-01],
         [4.5701e-04, 9.9551e-01, 9.9738e-01,  ..., 9.9303e-01,
          1.3397e-04, 2.1225e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0524e-03, 3.9227e-04, 6.1193e-04,  ..., 5.3267e-03,
          1.2600e-05, 3.1391e-03],
         [3.0524e-03, 3.9227e-04, 6.1193e-04,  ..., 5.3267e-03,
          1.2600e-05, 3.1391e-03],
         [9.9084e-01, 3.9227e-04, 6.1193e-04,  ..., 9.8309e-01,
          1.2600e-05, 9.9058e-01],
         [3.0524e-03, 9.9882e-01, 9.9816e-01,  ..., 6.2583e-03,
          9.9996e-01, 3.1391e-03]],
        [[1.4538e-03, 7.9824e-05, 4.8001e-04,  ..., 7.4459e-03,
          3.8390e-03, 9.9965e-01],
         [1.4538e-03, 7.9824e-05, 4.8001e-04,  ..., 7.4459e-03,
          3.8390e-03, 1.1509e-04],
         [9.9564e-01, 7.9824e-05, 4.8001e-04,  ..., 9.7536e-01,
          9.8848e-01, 1.1509e-04],
         [1.4538e-03, 9.9976e-01, 9.9856e-01,  ..., 9.7492e-03,
          3.8390e-03, 1.1509e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 579:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape:
2024-08-18 19:55:51,547 [Process: 0] Synchronize training processes
2024-08-18 19:55:51,547 [Process: 0] Evaluating...
2024-08-18 19:55:51,549 [Process: 0] EPOCH 579:
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9870e-01, 8.2752e-04, 1.9684e-03,  ..., 9.9832e-01,
          6.0893e-01, 7.6715e-03],
         [4.3224e-04, 8.2752e-04, 1.9684e-03,  ..., 5.3508e-04,
          3.2136e-02, 6.2811e-03],
         [4.3224e-04, 8.7646e-04, 2.2947e-03,  ..., 5.3508e-04,
          6.8600e-02, 8.8778e-03],
         [4.3224e-04, 9.9747e-01, 9.9377e-01,  ..., 6.1181e-04,
          2.9033e-01, 9.7717e-01]],
        [[9.8497e-01, 9.7757e-04, 9.4717e-04,  ..., 5.9891e-03,
          2.7565e-04, 1.2045e-03],
         [3.8014e-03, 9.7757e-04, 8.5032e-04,  ..., 8.9728e-03,
          2.7565e-04, 1.2045e-03],
         [4.9609e-03, 1.5778e-03, 8.9516e-04,  ..., 9.2111e-03,
          9.9917e-01, 9.9639e-01],
         [6.2723e-03, 9.9647e-01, 9.9731e-01,  ..., 9.7583e-01,
          2.7565e-04, 1.2045e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6061e-03, 1.1435e-04, 1.0944e-04,  ..., 1.9134e-03,
          1.0556e-03, 4.2438e-03],
         [1.6061e-03, 1.1435e-04, 1.0944e-04,  ..., 1.9134e-03,
          1.0556e-03, 4.2438e-03],
         [9.9518e-01, 1.1435e-04, 1.0944e-04,  ..., 9.9426e-01,
          1.0556e-03, 9.8727e-01],
         [1.6061e-03, 9.9966e-01, 9.9967e-01,  ..., 1.9134e-03,
          9.9683e-01, 4.2438e-03]],
        [[2.8473e-03, 4.2471e-04, 3.2627e-04,  ..., 7.4644e-03,
          2.5167e-03, 9.8935e-01],
         [2.8473e-03, 4.2471e-04, 3.2627e-04,  ..., 7.7004e-03,
          2.5167e-03, 3.2557e-03],
         [9.9146e-01, 4.2471e-04, 3.2627e-04,  ..., 9.7430e-01,
          9.9245e-01, 3.0796e-03],
         [2.8473e-03, 9.9873e-01, 9.9902e-01,  ..., 1.0536e-02,
          2.5167e-03, 4.3102e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 580:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9656e-01, 4.9558e-04, 2.3258e-03,  ..., 9.9057e-01,
          8.8108e-01, 3.6093e-03],
         [1.3277e-03, 4.9558e-04, 2.3258e-03,  ..., 2.4470e-03,
          1.4871e-02, 2.9805e-03],
         [1.0558e-03, 4.9558e-04, 3.1278e-03,  ..., 2.4470e-03,
          1.7744e-02, 4.8942e-03],
         [1.0558e-03, 9.9851e-01, 9.9222e-01,  ..., 4.5335e-03,
          8.6304e-02, 9.8852e-01]],
        [[9.9989e-01, 1.9113e-03, 6.6196e-04,  ..., 3.2142e-03,
          1.2215e-04, 8.1805e-05],
         [3.7629e-05, 1.9113e-03, 6.6196e-04,  ..., 3.2142e-03,
          1.2215e-04, 8.1805e-05],
         [3.7629e-05, 2.3478e-03, 6.6196e-04,  ..., 4.5013e-03,
          9.9963e-01, 9.9975e-01],
         [3.7629e-05, 9.9383e-01, 9.9801e-01,  ..., 9.8907e-01,
          1.2215e-04, 8.1805e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4679e-03, 2.5945e-05, 4.1336e-05,  ..., 2.6899e-03,
          9.8093e-05, 2.2435e-03],
         [3.4679e-03, 2.5945e-05, 4.1336e-05,  ..., 2.6899e-03,
          9.8093e-05, 2.2435e-03],
         [9.8955e-01, 2.5945e-05, 4.1336e-05,  ..., 9.9193e-01,
          9.8093e-05, 9.9327e-01],
         [3.5172e-03, 9.9992e-01, 9.9988e-01,  ..., 2.6899e-03,
          9.9971e-01, 2.2435e-03]],
        [[3.1055e-03, 2.2491e-05, 2.3766e-04,  ..., 2.6253e-03,
          2.6866e-03, 9.9989e-01],
         [3.1055e-03, 2.2491e-05, 2.3766e-04,  ..., 2.6253e-03,
          2.6866e-03, 3.6300e-05],
         [9.8995e-01, 2.2491e-05, 2.3766e-04,  ..., 9.9212e-01,
          9.9194e-01, 3.6300e-05],
         [3.8435e-03, 9.9993e-01, 9.9929e-01,  ..., 2.6253e-03,
          2.6866e-03, 3.6300e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 581:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:52,693 [Process: 0] Synchronize training processes
2024-08-18 19:55:52,693 [Process: 0] Evaluating...
2024-08-18 19:55:52,695 [Process: 0] EPOCH 580:
2024-08-18 19:55:52,697 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:53,837 [Process: 0] Synchronize training processes
2024-08-18 19:55:53,837 [Process: 0] Evaluating...
2024-08-18 19:55:53,839 [Process: 0] EPOCH 581:
2024-08-18 19:55:53,841 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9747e-01, 1.9692e-03, 5.3479e-04,  ..., 9.9870e-01,
          9.4028e-01, 3.1451e-03],
         [8.2993e-04, 1.9692e-03, 5.3479e-04,  ..., 4.3382e-04,
          9.2714e-03, 3.0872e-03],
         [8.6868e-04, 2.0325e-03, 5.3479e-04,  ..., 4.3382e-04,
          1.3637e-02, 3.1809e-03],
         [8.2993e-04, 9.9403e-01, 9.9840e-01,  ..., 4.3382e-04,
          3.6813e-02, 9.9059e-01]],
        [[9.9400e-01, 2.3667e-03, 1.4552e-03,  ..., 1.3715e-02,
          1.8378e-04, 1.6575e-04],
         [1.9290e-03, 2.3667e-03, 1.4552e-03,  ..., 7.2970e-03,
          1.8378e-04, 1.6575e-04],
         [1.9290e-03, 2.7741e-03, 1.4563e-03,  ..., 1.4522e-02,
          9.9945e-01, 9.9950e-01],
         [2.1391e-03, 9.9249e-01, 9.9563e-01,  ..., 9.6447e-01,
          1.8378e-04, 1.6575e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0559e-03, 1.6711e-04, 1.4204e-04,  ..., 4.9394e-03,
          7.6686e-04, 5.7450e-03],
         [2.0481e-03, 1.6711e-04, 2.4657e-04,  ..., 4.9394e-03,
          7.6686e-04, 5.7450e-03],
         [9.9385e-01, 1.6711e-04, 1.4204e-04,  ..., 9.8518e-01,
          7.6686e-04, 9.8182e-01],
         [2.0481e-03, 9.9950e-01, 9.9947e-01,  ..., 4.9394e-03,
          9.9770e-01, 6.6910e-03]],
        [[3.0257e-03, 3.5499e-05, 2.4343e-04,  ..., 2.6045e-03,
          2.4600e-03, 9.9986e-01],
         [3.0257e-03, 3.5499e-05, 2.4343e-04,  ..., 2.6045e-03,
          2.2320e-03, 4.8298e-05],
         [9.9092e-01, 3.5499e-05, 2.4343e-04,  ..., 9.9219e-01,
          9.9308e-01, 4.8298e-05],
         [3.0257e-03, 9.9989e-01, 9.9927e-01,  ..., 2.6045e-03,
          2.2320e-03, 4.8298e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 582:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8805e-01, 1.4310e-03, 2.9287e-03,  ..., 9.9900e-01,
          9.9330e-01, 1.8951e-03],
         [3.5178e-03, 1.4310e-03, 2.9115e-03,  ..., 3.3291e-04,
          1.8238e-03, 2.1999e-03],
         [3.7297e-03, 1.7889e-03, 3.9068e-03,  ..., 3.3291e-04,
          2.3527e-03, 1.8675e-03],
         [4.6983e-03, 9.9535e-01, 9.9025e-01,  ..., 3.3291e-04,
          2.5195e-03, 9.9404e-01]],
        [[9.9972e-01, 2.2111e-03, 1.0683e-03,  ..., 3.5177e-03,
          4.2404e-04, 2.2526e-04],
         [9.3409e-05, 2.2111e-03, 8.4807e-04,  ..., 2.9978e-03,
          4.2404e-04, 2.2526e-04],
         [9.3409e-05, 2.5410e-03, 8.4807e-04,  ..., 3.4411e-03,
          9.9873e-01, 9.9932e-01],
         [9.3409e-05, 9.9304e-01, 9.9724e-01,  ..., 9.9004e-01,
          4.2404e-04, 2.2526e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:55:54,988 [Process: 0] Synchronize training processes
2024-08-18 19:55:54,988 [Process: 0] Evaluating...
2024-08-18 19:55:54,994 [Process: 0] EPOCH 582:
2024-08-18 19:55:54,996 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:56,139 [Process: 0] Synchronize training processes
2024-08-18 19:55:56,139 [Process: 0] Evaluating...
2024-08-18 19:55:56,141 [Process: 0] EPOCH 583:
2024-08-18 19:55:56,143 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0144e-03, 1.3973e-04, 1.0223e-03,  ..., 2.6167e-03,
          1.2904e-02, 4.6535e-03],
         [5.0144e-03, 1.3973e-04, 1.0223e-03,  ..., 2.6167e-03,
          2.5081e-02, 3.9607e-03],
         [9.8496e-01, 1.3973e-04, 1.0223e-03,  ..., 9.9215e-01,
          1.5309e-02, 9.8743e-01],
         [5.0144e-03, 9.9958e-01, 9.9693e-01,  ..., 2.6167e-03,
          9.4671e-01, 3.9607e-03]],
        [[1.3394e-03, 7.7515e-04, 1.2890e-05,  ..., 6.9617e-03,
          3.2244e-03, 9.9989e-01],
         [1.3394e-03, 7.7515e-04, 1.2890e-05,  ..., 6.9617e-03,
          3.2244e-03, 3.6447e-05],
         [9.9598e-01, 7.7515e-04, 1.2890e-05,  ..., 9.7582e-01,
          9.9033e-01, 3.6447e-05],
         [1.3394e-03, 9.9767e-01, 9.9996e-01,  ..., 1.0253e-02,
          3.2244e-03, 3.6833e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 583:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8921e-01, 2.4011e-03, 1.0659e-03,  ..., 9.9735e-01,
          9.3851e-02, 2.3922e-03],
         [2.4385e-03, 1.2268e-03, 1.0659e-03,  ..., 8.8381e-04,
          2.7153e-02, 2.3922e-03],
         [5.9094e-03, 1.2268e-03, 1.1185e-03,  ..., 8.8381e-04,
          7.7390e-02, 2.8450e-03],
         [2.4385e-03, 9.9515e-01, 9.9675e-01,  ..., 8.8381e-04,
          8.0161e-01, 9.9237e-01]],
        [[9.9924e-01, 3.1596e-03, 1.6742e-03,  ..., 3.4913e-03,
          2.3719e-03, 2.2734e-04],
         [2.5449e-04, 2.3371e-03, 1.7920e-03,  ..., 2.9839e-03,
          2.3719e-03, 2.2734e-04],
         [2.5449e-04, 3.0831e-03, 1.6742e-03,  ..., 3.8502e-03,
          9.9288e-01, 9.9932e-01],
         [2.5449e-04, 9.9142e-01, 9.9486e-01,  ..., 9.8967e-01,
          2.3719e-03, 2.2734e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5212e-03, 1.1155e-03, 2.3168e-03,  ..., 4.3162e-03,
          1.5063e-04, 3.2805e-03],
         [2.5212e-03, 1.9321e-03, 5.3908e-03,  ..., 4.3162e-03,
          1.5063e-04, 3.2805e-03],
         [9.9244e-01, 1.1155e-03, 2.3168e-03,  ..., 9.8705e-01,
          1.5063e-04, 9.9016e-01],
         [2.5212e-03, 9.9584e-01, 9.8998e-01,  ..., 4.3162e-03,
          9.9955e-01, 3.2805e-03]],
        [[2.2221e-03, 3.4887e-04, 9.2750e-06,  ..., 1.8677e-03,
          3.1769e-03, 9.9993e-01],
         [2.2221e-03, 3.4887e-04, 9.2750e-06,  ..., 1.8677e-03,
          3.1769e-03, 2.4218e-05],
         [9.9330e-01, 3.4887e-04, 9.2750e-06,  ..., 9.9440e-01,
          9.9047e-01, 2.4218e-05],
         [2.2588e-03, 9.9895e-01, 9.9997e-01,  ..., 1.8677e-03,
          3.1769e-03, 2.4218e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 584:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9110e-01, 1.0555e-03, 1.5647e-03,  ..., 9.9568e-01,
          1.7810e-01, 2.4432e-03],
         [1.9462e-03, 1.0555e-03, 1.8501e-03,  ..., 1.5957e-03,
          3.0307e-02, 1.6600e-03],
         [5.0071e-03, 1.0555e-03, 1.6162e-03,  ..., 1.3628e-03,
          4.5043e-02, 1.7800e-03],
         [1.9462e-03, 9.9683e-01, 9.9497e-01,  ..., 1.3628e-03,
          7.4655e-01, 9.9412e-01]],
        [[9.9951e-01, 1.2969e-03, 1.7199e-03,  ..., 1.2845e-02,
          5.9991e-05, 6.3547e-04],
         [1.6357e-04, 1.2969e-03, 2.1628e-03,  ..., 9.5339e-03,
          5.9991e-05, 6.3547e-04],
         [1.6357e-04, 1.2969e-03, 1.9703e-03,  ..., 1.4707e-02,
          9.9982e-01, 9.9809e-01],
         [1.6357e-04, 9.9611e-01, 9.9415e-01,  ..., 9.6291e-01,
          5.9991e-05, 6.3547e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:55:57,303 [Process: 0] Synchronize training processes
2024-08-18 19:55:57,303 [Process: 0] Evaluating...
2024-08-18 19:55:57,305 [Process: 0] EPOCH 584:
2024-08-18 19:55:57,307 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:55:58,454 [Process: 0] Synchronize training processes
2024-08-18 19:55:58,454 [Process: 0] Evaluating...
2024-08-18 19:55:58,456 [Process: 0] EPOCH 585:
2024-08-18 19:55:58,458 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6110e-03, 6.0471e-04, 7.6324e-03,  ..., 2.7699e-03,
          3.6982e-05, 4.2001e-03],
         [2.6110e-03, 7.2772e-04, 6.0270e-03,  ..., 2.7699e-03,
          3.6982e-05, 3.6542e-03],
         [9.9217e-01, 6.0471e-04, 9.8031e-01,  ..., 9.9169e-01,
          3.6982e-05, 9.8849e-01],
         [2.6110e-03, 9.9806e-01, 6.0270e-03,  ..., 2.7699e-03,
          9.9989e-01, 3.6542e-03]],
        [[2.5683e-03, 7.2056e-04, 7.0483e-06,  ..., 3.4009e-03,
          1.3088e-03, 9.9413e-01],
         [2.5683e-03, 1.1840e-03, 7.0483e-06,  ..., 3.4009e-03,
          1.3088e-03, 1.7301e-03],
         [9.9230e-01, 7.2056e-04, 7.0483e-06,  ..., 9.8980e-01,
          9.9607e-01, 1.7301e-03],
         [2.5683e-03, 9.9737e-01, 9.9998e-01,  ..., 3.4009e-03,
          1.3088e-03, 2.4067e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 585:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8663e-01, 2.1227e-03, 1.9744e-03,  ..., 9.9699e-01,
          9.6310e-01, 3.0781e-03],
         [3.8983e-03, 2.1227e-03, 1.7949e-03,  ..., 9.7304e-04,
          6.7496e-03, 4.3482e-03],
         [6.3963e-03, 2.1227e-03, 1.7949e-03,  ..., 1.0679e-03,
          1.2011e-02, 3.0781e-03],
         [3.0771e-03, 9.9363e-01, 9.9444e-01,  ..., 9.7304e-04,
          1.8142e-02, 9.8950e-01]],
        [[9.9938e-01, 1.2237e-03, 1.3164e-03,  ..., 4.7769e-03,
          6.2041e-03, 9.5946e-04],
         [1.8599e-04, 2.3006e-03, 1.0793e-03,  ..., 3.2448e-03,
          6.2041e-03, 9.5946e-04],
         [2.4923e-04, 1.2237e-03, 1.0793e-03,  ..., 4.0597e-03,
          9.8139e-01, 9.9712e-01],
         [1.8599e-04, 9.9525e-01, 9.9652e-01,  ..., 9.8792e-01,
          6.2041e-03, 9.5946e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5968e-03, 1.4467e-03, 1.2838e-02,  ..., 2.6978e-03,
          3.5425e-05, 1.1239e-02],
         [2.5968e-03, 2.8106e-03, 4.6515e-01,  ..., 2.6978e-03,
          3.5425e-05, 9.8068e-03],
         [9.9221e-01, 1.4467e-03, 1.2838e-02,  ..., 9.9191e-01,
          3.5425e-05, 9.6586e-01],
         [2.5968e-03, 9.9430e-01, 5.0918e-01,  ..., 2.6978e-03,
          9.9989e-01, 1.3096e-02]],
        [[1.8987e-03, 2.9860e-04, 3.6922e-05,  ..., 4.2674e-03,
          4.6731e-04, 9.9931e-01],
         [1.8987e-03, 2.9860e-04, 3.6922e-05,  ..., 4.2674e-03,
          4.6731e-04, 2.2967e-04],
         [9.9430e-01, 2.9860e-04, 3.6922e-05,  ..., 9.8720e-01,
          9.9860e-01, 2.2967e-04],
         [1.8987e-03, 9.9910e-01, 9.9989e-01,  ..., 4.2674e-03,
          4.6731e-04, 2.2967e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 586:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:55:59,604 [Process: 0] Synchronize training processes
2024-08-18 19:55:59,604 [Process: 0] Evaluating...
2024-08-18 19:55:59,606 [Process: 0] EPOCH 586:
2024-08-18 19:55:59,608 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1057e-01, 2.7128e-03, 5.2451e-04,  ..., 9.9794e-01,
          8.3355e-01, 2.8549e-03],
         [1.4194e-02, 2.7128e-03, 5.2451e-04,  ..., 6.8733e-04,
          2.1259e-02, 2.9934e-03],
         [5.2598e-02, 2.7128e-03, 5.2451e-04,  ..., 6.8733e-04,
          3.6833e-02, 2.6501e-03],
         [2.2636e-02, 9.9186e-01, 9.9843e-01,  ..., 6.8733e-04,
          1.0836e-01, 9.9150e-01]],
        [[9.9890e-01, 1.3131e-03, 1.2188e-03,  ..., 1.5045e-02,
          2.9594e-04, 1.8957e-04],
         [3.6770e-04, 1.2291e-03, 1.1188e-03,  ..., 1.1158e-02,
          2.9594e-04, 1.8957e-04],
         [3.6770e-04, 1.2291e-03, 1.1188e-03,  ..., 1.3408e-02,
          9.9911e-01, 9.9943e-01],
         [3.6770e-04, 9.9623e-01, 9.9654e-01,  ..., 9.6039e-01,
          2.9594e-04, 1.8957e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8539e-03, 1.9364e-04, 3.2543e-03,  ..., 4.9853e-03,
          4.4495e-04, 5.1871e-04],
         [1.8539e-03, 1.9364e-04, 5.2286e-03,  ..., 4.9853e-03,
          4.4495e-04, 5.1871e-04],
         [9.9444e-01, 1.9364e-04, 3.2543e-03,  ..., 9.8283e-01,
          4.4495e-04, 9.9844e-01],
         [1.8539e-03, 9.9942e-01, 9.8826e-01,  ..., 7.1984e-03,
          9.9867e-01, 5.1871e-04]],
        [[3.7324e-03, 1.1335e-03, 1.8649e-05,  ..., 9.7213e-03,
          4.2459e-03, 9.9961e-01],
         [3.7324e-03, 1.6506e-03, 2.2999e-05,  ..., 8.2437e-03,
          4.0766e-03, 1.3112e-04],
         [9.8768e-01, 1.1335e-03, 1.8649e-05,  ..., 9.7319e-01,
          9.8760e-01, 1.3112e-04],
         [4.8595e-03, 9.9608e-01, 9.9994e-01,  ..., 8.8485e-03,
          4.0766e-03, 1.3112e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 587:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1155e-01, 1.1028e-03, 2.3573e-03,  ..., 9.8817e-01,
          9.9368e-01, 1.2608e-03],
         [1.4488e-02, 9.5418e-04, 2.1916e-03,  ..., 2.9725e-03,
          1.7654e-03, 1.5250e-03],
         [5.9474e-02, 9.6429e-04, 2.8880e-03,  ..., 5.8884e-03,
          2.7867e-03, 1.2608e-03],
         [1.4488e-02, 9.9698e-01, 9.9256e-01,  ..., 2.9725e-03,
          1.7654e-03, 9.9595e-01]],
        [[9.9948e-01, 1.2990e-03, 4.1609e-03,  ..., 5.8969e-03,
          1.5913e-03, 5.5867e-04],
         [1.7354e-04, 1.2990e-03, 3.4197e-03,  ..., 6.1811e-03,
          1.5913e-03, 5.5867e-04],
         [1.7354e-04, 1.2990e-03, 4.5132e-03,  ..., 5.7567e-03,
          9.9523e-01, 9.9832e-01],
         [1.7354e-04, 9.9610e-01, 9.8791e-01,  ..., 9.8217e-01,
          1.5913e-03, 5.5867e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2488e-03, 1.3646e-04, 4.4977e-03,  ..., 1.9815e-03,
          1.1584e-03, 9.2613e-03],
         [3.2488e-03, 2.2414e-04, 5.0670e-03,  ..., 1.9815e-03,
          1.1584e-03, 9.2613e-03],
         [9.9025e-01, 1.3646e-04, 4.4977e-03,  ..., 9.9406e-01,
          1.1584e-03, 9.6661e-01],
         [3.2488e-03, 9.9950e-01, 9.8594e-01,  ..., 1.9815e-03,
          9.9652e-01, 1.4865e-02]],
        [[2.7783e-03, 1.7395e-03, 1.2021e-04,  ..., 4.0520e-03,
          2.8606e-03, 9.9986e-01],
         [2.7783e-03, 1.7395e-03, 1.2021e-04,  ..., 4.0520e-03,
          2.8606e-03, 4.6413e-05],
         [9.9167e-01, 1.7395e-03, 1.2021e-04,  ..., 9.8784e-01,
          9.9142e-01, 4.6413e-05],
         [2.7783e-03, 9.9478e-01, 9.9964e-01,  ..., 4.0520e-03,
          2.8606e-03, 4.6413e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 588:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:00,751 [Process: 0] Synchronize training processes
2024-08-18 19:56:00,751 [Process: 0] Evaluating...
2024-08-18 19:56:00,753 [Process: 0] EPOCH 587:
2024-08-18 19:56:00,755 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:01,900 [Process: 0] Synchronize training processes
2024-08-18 19:56:01,901 [Process: 0] Evaluating...
2024-08-18 19:56:01,902 [Process: 0] EPOCH 588:
2024-08-18 19:56:01,904 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.0471e-01, 4.6387e-04, 2.4590e-03,  ..., 9.9700e-01,
          8.2028e-01, 1.3070e-03],
         [2.6490e-02, 4.6387e-04, 2.3147e-03,  ..., 1.2033e-03,
          2.2261e-02, 1.3070e-03],
         [1.2497e-01, 4.6387e-04, 2.3147e-03,  ..., 8.9966e-04,
          5.5938e-02, 1.3070e-03],
         [4.3829e-02, 9.9861e-01, 9.9291e-01,  ..., 8.9966e-04,
          1.0152e-01, 9.9608e-01]],
        [[9.9879e-01, 1.2029e-03, 2.2126e-03,  ..., 6.7052e-03,
          2.0494e-03, 1.0989e-04],
         [3.6605e-04, 1.6980e-03, 2.2126e-03,  ..., 5.0331e-03,
          2.0494e-03, 1.0989e-04],
         [4.7529e-04, 1.2029e-03, 2.2506e-03,  ..., 7.8173e-03,
          9.9385e-01, 9.9967e-01],
         [3.6605e-04, 9.9590e-01, 9.9332e-01,  ..., 9.8044e-01,
          2.0494e-03, 1.0989e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6376e-03, 2.6195e-03, 1.9692e-03,  ..., 2.3398e-03,
          1.9088e-03, 1.9522e-03],
         [4.0191e-03, 4.0029e-03, 1.9692e-03,  ..., 2.3398e-03,
          1.9088e-03, 1.8715e-03],
         [9.8732e-01, 2.6195e-03, 1.9692e-03,  ..., 9.9298e-01,
          1.9088e-03, 9.9430e-01],
         [4.0191e-03, 9.9076e-01, 9.9409e-01,  ..., 2.3398e-03,
          9.9427e-01, 1.8715e-03]],
        [[2.1839e-02, 1.8820e-04, 2.0009e-05,  ..., 2.8881e-03,
          5.5297e-03, 9.9920e-01],
         [1.6255e-02, 1.8820e-04, 2.0009e-05,  ..., 2.8881e-03,
          5.5297e-03, 2.6595e-04],
         [9.3012e-01, 1.8820e-04, 2.0009e-05,  ..., 9.9134e-01,
          9.8056e-01, 2.6595e-04],
         [3.1784e-02, 9.9944e-01, 9.9994e-01,  ..., 2.8881e-03,
          8.3796e-03, 2.6595e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 589:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9397e-01, 1.4115e-03, 2.1864e-03,  ..., 9.9043e-01,
          7.5370e-01, 7.3747e-04],
         [1.4978e-02, 1.4115e-03, 1.7696e-03,  ..., 2.8806e-03,
          2.5158e-02, 7.3747e-04],
         [7.6073e-02, 1.9760e-03, 2.4079e-03,  ..., 2.9679e-03,
          5.5587e-02, 7.3747e-04],
         [1.4978e-02, 9.9520e-01, 9.9364e-01,  ..., 3.7206e-03,
          1.6556e-01, 9.9779e-01]],
        [[9.9896e-01, 2.7592e-03, 3.6998e-03,  ..., 6.1701e-03,
          4.2661e-04, 1.4700e-03],
         [3.2114e-04, 2.7592e-03, 3.5726e-03,  ..., 5.9359e-03,
          4.2661e-04, 1.4700e-03],
         [4.0184e-04, 2.9314e-03, 3.9867e-03,  ..., 9.3130e-03,
          9.9872e-01, 9.9559e-01],
         [3.2114e-04, 9.9155e-01, 9.8874e-01,  ..., 9.7858e-01,
          4.2661e-04, 1.4700e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:56:03,044 [Process: 0] Synchronize training processes
2024-08-18 19:56:03,045 [Process: 0] Evaluating...
2024-08-18 19:56:03,046 [Process: 0] EPOCH 589:
2024-08-18 19:56:03,048 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:04,192 [Process: 0] Synchronize training processes
2024-08-18 19:56:04,192 [Process: 0] Evaluating...
2024-08-18 19:56:04,194 [Process: 0] EPOCH 590:
2024-08-18 19:56:04,196 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3809e-03, 4.3633e-04, 3.3871e-04,  ..., 1.3599e-03,
          8.7514e-05, 2.3538e-03],
         [1.3809e-03, 4.3927e-04, 5.7335e-04,  ..., 1.3599e-03,
          8.7514e-05, 2.3538e-03],
         [9.9586e-01, 4.3633e-04, 3.3871e-04,  ..., 9.9592e-01,
          8.7514e-05, 9.9294e-01],
         [1.3809e-03, 9.9869e-01, 9.9875e-01,  ..., 1.3599e-03,
          9.9974e-01, 2.3538e-03]],
        [[9.4421e-03, 3.3779e-05, 2.9438e-04,  ..., 4.5662e-03,
          3.1214e-03, 9.9930e-01],
         [9.9328e-03, 3.3779e-05, 3.0540e-04,  ..., 4.5662e-03,
          3.1214e-03, 2.2625e-04],
         [9.6253e-01, 3.3779e-05, 2.9438e-04,  ..., 9.8551e-01,
          9.9064e-01, 2.2625e-04],
         [1.8098e-02, 9.9990e-01, 9.9911e-01,  ..., 5.3560e-03,
          3.1214e-03, 2.5202e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 590:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1350e-01, 1.8356e-03, 5.5981e-04,  ..., 9.9617e-01,
          5.5722e-01, 7.2946e-04],
         [2.9539e-02, 1.6219e-03, 5.5981e-04,  ..., 1.2752e-03,
          3.4776e-02, 7.2946e-04],
         [1.1033e-01, 2.0971e-03, 5.5981e-04,  ..., 1.2752e-03,
          6.4762e-02, 7.2946e-04],
         [4.6635e-02, 9.9445e-01, 9.9832e-01,  ..., 1.2752e-03,
          3.4324e-01, 9.9781e-01]],
        [[9.8271e-01, 1.0717e-03, 4.3846e-03,  ..., 1.0597e-03,
          1.0203e-03, 4.3909e-04],
         [3.8821e-03, 1.0717e-03, 4.3846e-03,  ..., 1.0597e-03,
          1.0203e-03, 4.3909e-04],
         [5.7403e-03, 1.0717e-03, 6.0145e-03,  ..., 1.0597e-03,
          9.9694e-01, 9.9868e-01],
         [7.6662e-03, 9.9679e-01, 9.8522e-01,  ..., 9.9682e-01,
          1.0203e-03, 4.3909e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9843e-03, 5.8244e-05, 2.5259e-04,  ..., 6.0157e-04,
          4.2497e-04, 2.4545e-03],
         [1.9843e-03, 9.2521e-05, 2.9533e-04,  ..., 6.0157e-04,
          4.1161e-04, 2.4545e-03],
         [9.9405e-01, 5.8244e-05, 2.5259e-04,  ..., 9.9820e-01,
          4.1161e-04, 9.9264e-01],
         [1.9843e-03, 9.9979e-01, 9.9920e-01,  ..., 6.0157e-04,
          9.9875e-01, 2.4545e-03]],
        [[6.8974e-03, 1.2018e-04, 1.6956e-03,  ..., 1.4206e-03,
          3.2906e-03, 9.9878e-01],
         [5.1579e-03, 1.2018e-04, 1.8656e-03,  ..., 1.4206e-03,
          3.2906e-03, 3.9726e-04],
         [9.8279e-01, 1.2018e-04, 1.6956e-03,  ..., 9.9574e-01,
          9.9013e-01, 3.9726e-04],
         [5.1579e-03, 9.9964e-01, 9.9474e-01,  ..., 1.4206e-03,
          3.2906e-03, 4.2127e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 591:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.4479e-01, 1.3270e-03, 7.7151e-04,  ..., 9.9826e-01,
          5.8135e-01, 2.5932e-03],
         [3.0506e-02, 1.1951e-03, 7.7151e-04,  ..., 5.5515e-04,
          3.2750e-02, 2.5932e-03],
         [1.1269e-01, 1.2486e-03, 7.7151e-04,  ..., 6.2585e-04,
          7.7363e-02, 3.0369e-03],
         [1.1201e-01, 9.9623e-01, 9.9769e-01,  ..., 5.5515e-04,
          3.0853e-01, 9.9178e-01]],
        [[9.9939e-01, 1.4448e-03, 1.3397e-03,  ..., 6.6718e-03,
          2.0314e-04, 1.2469e-04],
         [2.0279e-04, 1.4448e-03, 1.3397e-03,  ..., 6.1126e-03,
          2.0314e-04, 1.2469e-04],
         [2.0279e-04, 1.4448e-03, 1.3397e-03,  ..., 8.7552e-03,
          9.9939e-01, 9.9963e-01],
         [2.0279e-04, 9.9567e-01, 9.9598e-01,  ..., 9.7846e-01,
          2.0314e-04, 1.2469e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:05,343 [Process: 0] Synchronize training processes
2024-08-18 19:56:05,343 [Process: 0] Evaluating...
2024-08-18 19:56:05,345 [Process: 0] EPOCH 591:
2024-08-18 19:56:05,347 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:06,496 [Process: 0] Synchronize training processes
2024-08-18 19:56:06,496 [Process: 0] Evaluating...
2024-08-18 19:56:06,502 [Process: 0] EPOCH 592:
2024-08-18 19:56:06,504 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3806e-03, 2.6849e-04, 2.3697e-04,  ..., 8.5894e-04,
          1.5014e-04, 1.1619e-03],
         [3.4032e-03, 2.6849e-04, 2.3697e-04,  ..., 8.5894e-04,
          1.5014e-04, 1.1619e-03],
         [9.8881e-01, 2.6849e-04, 2.3697e-04,  ..., 9.9742e-01,
          1.5014e-04, 9.9651e-01],
         [3.4032e-03, 9.9919e-01, 9.9929e-01,  ..., 8.5894e-04,
          9.9955e-01, 1.1619e-03]],
        [[2.4849e-03, 9.0722e-04, 4.5421e-05,  ..., 8.0455e-03,
          2.6036e-03, 9.9989e-01],
         [2.4849e-03, 9.0722e-04, 4.5421e-05,  ..., 8.0455e-03,
          2.6036e-03, 3.6583e-05],
         [9.9255e-01, 9.0722e-04, 4.5421e-05,  ..., 9.7108e-01,
          9.9219e-01, 3.6583e-05],
         [2.4849e-03, 9.9728e-01, 9.9986e-01,  ..., 1.2832e-02,
          2.6036e-03, 3.6583e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 592:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9981e-01, 5.0060e-04, 8.7235e-04,  ..., 9.9734e-01,
          9.7805e-01, 3.8854e-03],
         [6.6244e-02, 5.0060e-04, 8.7235e-04,  ..., 8.8606e-04,
          5.2534e-03, 3.5434e-03],
         [1.4789e-01, 5.0060e-04, 8.7235e-04,  ..., 8.8606e-04,
          7.2484e-03, 5.1264e-03],
         [3.8605e-01, 9.9850e-01, 9.9738e-01,  ..., 8.8606e-04,
          9.4527e-03, 9.8744e-01]],
        [[9.9454e-01, 1.3810e-03, 2.7722e-03,  ..., 4.9469e-04,
          1.5699e-04, 6.0730e-04],
         [1.7946e-03, 1.3810e-03, 2.1058e-03,  ..., 4.7109e-04,
          1.5699e-04, 6.0730e-04],
         [1.8691e-03, 1.4600e-03, 2.1058e-03,  ..., 4.7109e-04,
          9.9953e-01, 9.9818e-01],
         [1.7946e-03, 9.9578e-01, 9.9302e-01,  ..., 9.9856e-01,
          1.5699e-04, 6.0730e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6762e-03, 8.8660e-04, 1.2831e-04,  ..., 6.8431e-03,
          2.3023e-04, 4.5637e-03],
         [3.6762e-03, 8.8660e-04, 1.2831e-04,  ..., 6.8431e-03,
          2.3023e-04, 3.6326e-03],
         [9.8863e-01, 8.8660e-04, 1.2831e-04,  ..., 9.7736e-01,
          2.3023e-04, 9.8817e-01],
         [4.0182e-03, 9.9734e-01, 9.9962e-01,  ..., 8.9550e-03,
          9.9931e-01, 3.6326e-03]],
        [[1.4456e-03, 1.7729e-04, 9.6675e-05,  ..., 3.0767e-03,
          1.6603e-03, 9.9941e-01],
         [1.4456e-03, 1.7729e-04, 9.6675e-05,  ..., 3.0767e-03,
          1.6603e-03, 1.9658e-04],
         [9.9566e-01, 1.7729e-04, 9.6675e-05,  ..., 9.9077e-01,
          9.9502e-01, 1.9658e-04],
         [1.4456e-03, 9.9947e-01, 9.9971e-01,  ..., 3.0767e-03,
          1.6603e-03, 1.9658e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 593:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:56:07,648 [Process: 0] Synchronize training processes
2024-08-18 19:56:07,648 [Process: 0] Evaluating...
2024-08-18 19:56:07,650 [Process: 0] EPOCH 593:
2024-08-18 19:56:07,652 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1613e-01, 3.7069e-03, 1.3359e-03,  ..., 9.9810e-01,
          9.9405e-01, 5.9937e-03],
         [1.5900e-02, 3.7069e-03, 1.1969e-03,  ..., 5.9039e-04,
          1.6544e-03, 4.5398e-03],
         [5.0968e-02, 3.7308e-03, 1.1969e-03,  ..., 7.2228e-04,
          2.6459e-03, 6.7583e-03],
         [1.6999e-02, 9.8886e-01, 9.9627e-01,  ..., 5.9039e-04,
          1.6544e-03, 9.8271e-01]],
        [[9.9883e-01, 3.6573e-03, 7.7927e-04,  ..., 6.7222e-04,
          1.7130e-04, 3.0411e-04],
         [3.8932e-04, 4.1269e-03, 7.7927e-04,  ..., 6.7222e-04,
          1.7130e-04, 3.0411e-04],
         [3.8932e-04, 4.7259e-03, 7.7927e-04,  ..., 6.7222e-04,
          9.9949e-01, 9.9909e-01],
         [3.8932e-04, 9.8749e-01, 9.9766e-01,  ..., 9.9798e-01,
          1.7130e-04, 3.0411e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7022e-03, 9.8585e-04, 6.7983e-05,  ..., 1.3646e-03,
          1.1337e-03, 7.2822e-04],
         [1.7022e-03, 9.8585e-04, 6.7983e-05,  ..., 1.3646e-03,
          1.0578e-03, 7.2822e-04],
         [9.9489e-01, 9.8585e-04, 6.7983e-05,  ..., 9.9591e-01,
          1.0578e-03, 9.9782e-01],
         [1.7022e-03, 9.9704e-01, 9.9980e-01,  ..., 1.3646e-03,
          9.9675e-01, 7.2822e-04]],
        [[4.8219e-03, 2.6588e-04, 1.3102e-05,  ..., 1.2407e-02,
          3.2188e-03, 9.9805e-01],
         [4.8219e-03, 2.6588e-04, 1.3102e-05,  ..., 1.2407e-02,
          3.2188e-03, 6.2385e-04],
         [9.8455e-01, 2.6588e-04, 1.3102e-05,  ..., 9.4423e-01,
          9.9034e-01, 6.2385e-04],
         [5.8028e-03, 9.9920e-01, 9.9996e-01,  ..., 3.0954e-02,
          3.2188e-03, 7.0737e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 594:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1789e-01, 2.0521e-03, 1.9181e-03,  ..., 9.9862e-01,
          9.8844e-01, 1.1406e-02],
         [1.7968e-02, 2.0521e-03, 1.9181e-03,  ..., 4.5928e-04,
          2.4659e-03, 7.3627e-03],
         [1.4618e-01, 2.1629e-03, 1.9801e-03,  ..., 4.5928e-04,
          6.6293e-03, 1.1556e-02],
         [1.7968e-02, 9.9373e-01, 9.9418e-01,  ..., 4.5928e-04,
          2.4659e-03, 9.6968e-01]],
        [[9.9946e-01, 3.3999e-03, 1.4314e-03,  ..., 8.9138e-04,
          1.2799e-04, 6.8465e-05],
         [1.8039e-04, 3.3999e-03, 1.4314e-03,  ..., 8.9138e-04,
          1.2799e-04, 6.8465e-05],
         [1.8039e-04, 4.4248e-03, 1.6320e-03,  ..., 8.9138e-04,
          9.9962e-01, 9.9979e-01],
         [1.8039e-04, 9.8878e-01, 9.9551e-01,  ..., 9.9733e-01,
          1.2799e-04, 6.8465e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8334e-03, 3.0533e-04, 9.5849e-05,  ..., 4.8997e-03,
          6.0314e-03, 9.1187e-04],
         [1.8334e-03, 8.8680e-04, 9.5849e-05,  ..., 4.4619e-03,
          6.0314e-03, 9.1187e-04],
         [9.9450e-01, 3.0533e-04, 9.5849e-05,  ..., 9.8618e-01,
          6.0654e-03, 9.9726e-01],
         [1.8334e-03, 9.9850e-01, 9.9971e-01,  ..., 4.4619e-03,
          9.8187e-01, 9.1187e-04]],
        [[2.9892e-03, 2.7789e-04, 7.8500e-04,  ..., 4.4994e-03,
          2.4372e-03, 9.9666e-01],
         [2.9892e-03, 2.5052e-04, 7.8500e-04,  ..., 4.4994e-03,
          2.4372e-03, 1.1131e-03],
         [9.9103e-01, 2.5052e-04, 7.8500e-04,  ..., 9.8558e-01,
          9.9269e-01, 1.1131e-03],
         [2.9892e-03, 9.9922e-01, 9.9764e-01,  ..., 5.4231e-03,
          2.4372e-03, 1.1131e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 595:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:08,794 [Process: 0] Synchronize training processes
2024-08-18 19:56:08,795 [Process: 0] Evaluating...
2024-08-18 19:56:08,797 [Process: 0] EPOCH 594:
2024-08-18 19:56:08,798 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:09,943 [Process: 0] Synchronize training processes
2024-08-18 19:56:09,944 [Process: 0] Evaluating...
2024-08-18 19:56:09,945 [Process: 0] EPOCH 595:
2024-08-18 19:56:09,947 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5136e-01, 9.9298e-04, 8.9290e-04,  ..., 9.9752e-01,
          9.7727e-01, 4.4271e-03],
         [8.9128e-03, 9.9298e-04, 8.9290e-04,  ..., 6.2417e-04,
          5.2848e-03, 4.4271e-03],
         [3.1004e-02, 9.9298e-04, 8.9290e-04,  ..., 1.2299e-03,
          5.3140e-03, 7.0718e-03],
         [8.7215e-03, 9.9702e-01, 9.9732e-01,  ..., 6.2417e-04,
          1.2134e-02, 9.8407e-01]],
        [[9.9517e-01, 5.5836e-04, 1.6812e-03,  ..., 3.1672e-03,
          9.0741e-04, 2.4688e-04],
         [1.0761e-03, 5.5836e-04, 1.6812e-03,  ..., 3.0096e-03,
          9.0741e-04, 2.4688e-04],
         [2.6737e-03, 5.5836e-04, 1.6812e-03,  ..., 4.1239e-03,
          9.9728e-01, 9.9926e-01],
         [1.0761e-03, 9.9832e-01, 9.9496e-01,  ..., 9.8970e-01,
          9.0741e-04, 2.4688e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5337e-03, 7.9410e-05, 5.6413e-05,  ..., 3.5021e-03,
          4.9095e-02, 1.6932e-03],
         [2.5337e-03, 7.9410e-05, 5.6413e-05,  ..., 3.5021e-03,
          3.4418e-02, 1.5664e-03],
         [9.9240e-01, 7.9410e-05, 5.6413e-05,  ..., 9.8949e-01,
          1.7026e-01, 9.9517e-01],
         [2.5337e-03, 9.9976e-01, 9.9983e-01,  ..., 3.5021e-03,
          7.4623e-01, 1.5664e-03]],
        [[8.7148e-04, 1.6649e-04, 8.8948e-04,  ..., 7.2377e-03,
          2.0717e-03, 9.9928e-01],
         [8.7148e-04, 1.6649e-04, 8.8948e-04,  ..., 7.2377e-03,
          2.0717e-03, 2.4116e-04],
         [9.9739e-01, 1.6649e-04, 8.8948e-04,  ..., 9.7547e-01,
          9.9379e-01, 2.4116e-04],
         [8.7148e-04, 9.9950e-01, 9.9733e-01,  ..., 1.0056e-02,
          2.0717e-03, 2.4116e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 596:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8249e-01, 6.0459e-04, 3.9103e-04,  ..., 9.9924e-01,
          7.9963e-01, 2.5177e-03],
         [4.1918e-03, 6.0459e-04, 3.9103e-04,  ..., 2.5253e-04,
          2.1966e-02, 2.5177e-03],
         [9.1306e-03, 6.0459e-04, 3.9103e-04,  ..., 2.5253e-04,
          4.3264e-02, 2.8337e-03],
         [4.1918e-03, 9.9819e-01, 9.9883e-01,  ..., 2.5253e-04,
          1.3514e-01, 9.9213e-01]],
        [[9.9232e-01, 7.1075e-03, 1.1075e-03,  ..., 5.3098e-03,
          3.8700e-04, 2.6088e-04],
         [2.1538e-03, 5.3447e-03, 1.1075e-03,  ..., 5.1982e-03,
          3.8700e-04, 2.6088e-04],
         [3.3695e-03, 5.9862e-03, 1.1075e-03,  ..., 7.4084e-03,
          9.9884e-01, 9.9922e-01],
         [2.1538e-03, 9.8156e-01, 9.9668e-01,  ..., 9.8208e-01,
          3.8700e-04, 2.6088e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:56:11,092 [Process: 0] Synchronize training processes
2024-08-18 19:56:11,092 [Process: 0] Evaluating...
2024-08-18 19:56:11,094 [Process: 0] EPOCH 596:
2024-08-18 19:56:11,096 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0833e-03, 3.7175e-04, 1.5584e-04,  ..., 5.2611e-03,
          1.5147e-02, 6.0469e-04],
         [4.0833e-03, 3.7175e-04, 1.5584e-04,  ..., 5.2611e-03,
          9.3688e-03, 6.0469e-04],
         [9.8775e-01, 3.7175e-04, 1.5584e-04,  ..., 9.8338e-01,
          1.4068e-02, 9.9819e-01],
         [4.0833e-03, 9.9888e-01, 9.9953e-01,  ..., 6.0998e-03,
          9.6142e-01, 6.0469e-04]],
        [[2.1633e-03, 5.8827e-04, 4.1514e-05,  ..., 3.3340e-03,
          2.3825e-03, 9.9783e-01],
         [2.1633e-03, 5.8827e-04, 4.1514e-05,  ..., 3.3340e-03,
          2.3825e-03, 6.0143e-04],
         [9.9351e-01, 5.8827e-04, 4.1514e-05,  ..., 9.8892e-01,
          9.9285e-01, 6.0143e-04],
         [2.1633e-03, 9.9824e-01, 9.9988e-01,  ..., 4.4089e-03,
          2.3825e-03, 9.6821e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 597:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8826e-01, 1.0788e-03, 9.0449e-04,  ..., 9.9774e-01,
          2.6756e-01, 1.3416e-03],
         [8.6597e-02, 1.0788e-03, 9.0449e-04,  ..., 5.9927e-04,
          4.2958e-02, 1.3416e-03],
         [1.7626e-02, 1.1877e-03, 9.0449e-04,  ..., 1.0638e-03,
          9.7282e-02, 1.3416e-03],
         [7.5154e-03, 9.9665e-01, 9.9729e-01,  ..., 5.9927e-04,
          5.9220e-01, 9.9598e-01]],
        [[9.9834e-01, 2.0738e-02, 1.1010e-03,  ..., 9.4136e-04,
          5.2118e-04, 4.8806e-04],
         [5.5363e-04, 8.7326e-03, 1.1010e-03,  ..., 9.4136e-04,
          5.2118e-04, 4.8806e-04],
         [5.5363e-04, 1.2650e-02, 1.1010e-03,  ..., 9.4136e-04,
          9.9844e-01, 9.9854e-01],
         [5.5363e-04, 9.5788e-01, 9.9670e-01,  ..., 9.9718e-01,
          5.2118e-04, 4.8806e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1198e-02, 2.6114e-05, 2.5790e-05,  ..., 1.9788e-03,
          2.6312e-04, 3.8099e-03],
         [8.8568e-03, 2.6114e-05, 2.5790e-05,  ..., 1.9788e-03,
          2.6312e-04, 3.0929e-03],
         [9.6819e-01, 2.6114e-05, 2.5790e-05,  ..., 9.9406e-01,
          2.6312e-04, 9.9000e-01],
         [1.1759e-02, 9.9992e-01, 9.9992e-01,  ..., 1.9788e-03,
          9.9921e-01, 3.0929e-03]],
        [[4.3025e-03, 1.3481e-03, 1.6722e-05,  ..., 1.1599e-03,
          5.5380e-03, 9.9857e-01],
         [4.3025e-03, 1.3481e-03, 1.6722e-05,  ..., 1.1599e-03,
          4.1949e-03, 4.6662e-04],
         [9.8709e-01, 1.3481e-03, 1.6722e-05,  ..., 9.9652e-01,
          9.8607e-01, 4.6662e-04],
         [4.3025e-03, 9.9596e-01, 9.9995e-01,  ..., 1.1599e-03,
          4.1949e-03, 4.9485e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 598:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3536e-01, 2.5384e-03, 1.0872e-03,  ..., 9.9150e-01,
          6.2400e-01, 3.0084e-03],
         [2.0842e-01, 1.9602e-03, 1.0872e-03,  ..., 2.3546e-03,
          3.8949e-02, 3.0084e-03],
         [3.9764e-02, 2.1404e-03, 1.0872e-03,  ..., 3.1706e-03,
          9.2432e-02, 3.6224e-03],
         [1.6457e-02, 9.9336e-01, 9.9674e-01,  ..., 2.9741e-03,
          2.4462e-01, 9.9036e-01]],
        [[9.9975e-01, 3.4651e-03, 5.2767e-03,  ..., 5.4980e-04,
          4.2968e-04, 3.2203e-04],
         [8.1975e-05, 3.4651e-03, 7.3206e-03,  ..., 5.4980e-04,
          4.2968e-04, 3.2203e-04],
         [8.1975e-05, 4.7564e-03, 5.8287e-03,  ..., 5.4980e-04,
          9.9871e-01, 9.9903e-01],
         [8.1975e-05, 9.8831e-01, 9.8157e-01,  ..., 9.9835e-01,
          4.2968e-04, 3.2203e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:12,239 [Process: 0] Synchronize training processes
2024-08-18 19:56:12,240 [Process: 0] Evaluating...
2024-08-18 19:56:12,241 [Process: 0] EPOCH 597:
2024-08-18 19:56:12,243 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:13,385 [Process: 0] Synchronize training processes
2024-08-18 19:56:13,385 [Process: 0] Evaluating...
2024-08-18 19:56:13,387 [Process: 0] EPOCH 598:
2024-08-18 19:56:13,389 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5537e-03, 4.2073e-04, 1.8149e-03,  ..., 2.6602e-03,
          1.6530e-02, 1.8696e-03],
         [3.5537e-03, 4.2073e-04, 1.8149e-03,  ..., 2.6602e-03,
          1.2064e-02, 1.8696e-03],
         [9.8934e-01, 4.2073e-04, 1.8149e-03,  ..., 9.9202e-01,
          2.6042e-02, 9.9439e-01],
         [3.5537e-03, 9.9874e-01, 9.9456e-01,  ..., 2.6602e-03,
          9.4536e-01, 1.8696e-03]],
        [[1.1492e-03, 2.3265e-04, 1.8221e-06,  ..., 3.3224e-03,
          2.1065e-03, 9.8055e-01],
         [1.1492e-03, 2.3265e-04, 1.8221e-06,  ..., 3.3224e-03,
          2.1065e-03, 5.0993e-03],
         [9.9655e-01, 2.3265e-04, 1.8221e-06,  ..., 9.9003e-01,
          9.9368e-01, 5.0993e-03],
         [1.1492e-03, 9.9930e-01, 9.9999e-01,  ..., 3.3224e-03,
          2.1065e-03, 9.2563e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 599:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.6632e-01, 1.3676e-03, 2.2964e-03,  ..., 9.9959e-01,
          5.4079e-01, 3.1701e-03],
         [1.8012e-01, 1.4387e-03, 2.2964e-03,  ..., 1.3703e-04,
          4.1912e-02, 3.1701e-03],
         [4.0426e-02, 1.5442e-03, 3.2037e-03,  ..., 1.3703e-04,
          1.1156e-01, 4.8560e-03],
         [1.3133e-02, 9.9565e-01, 9.9220e-01,  ..., 1.3703e-04,
          3.0574e-01, 9.8880e-01]],
        [[9.9870e-01, 5.3683e-03, 4.2749e-03,  ..., 1.0560e-03,
          5.0118e-04, 8.0775e-05],
         [4.3465e-04, 5.3401e-03, 3.6003e-03,  ..., 1.0560e-03,
          5.0118e-04, 8.0775e-05],
         [4.3465e-04, 8.3975e-03, 4.1831e-03,  ..., 1.0560e-03,
          9.9850e-01, 9.9976e-01],
         [4.3465e-04, 9.8089e-01, 9.8794e-01,  ..., 9.9683e-01,
          5.0118e-04, 8.0775e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0139e-03, 8.0628e-06, 4.1313e-06,  ..., 2.1509e-03,
          1.9269e-02, 1.3628e-03],
         [3.1312e-03, 8.0628e-06, 4.1313e-06,  ..., 2.1509e-03,
          1.3734e-02, 1.3628e-03],
         [9.8972e-01, 8.0628e-06, 4.1313e-06,  ..., 9.9355e-01,
          9.4356e-01, 9.9591e-01],
         [3.1312e-03, 9.9998e-01, 9.9999e-01,  ..., 2.1509e-03,
          2.3436e-02, 1.3628e-03]],
        [[1.6176e-03, 8.9314e-04, 1.2697e-04,  ..., 3.1529e-03,
          6.3690e-03, 9.9980e-01],
         [1.6176e-03, 8.9314e-04, 1.2697e-04,  ..., 3.1529e-03,
          6.3690e-03, 6.6824e-05],
         [9.9515e-01, 8.9314e-04, 1.2697e-04,  ..., 9.9054e-01,
          9.7728e-01, 6.6824e-05],
         [1.6176e-03, 9.9732e-01, 9.9962e-01,  ..., 3.1529e-03,
          9.9809e-03, 6.6824e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 600:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:56:14,560 [Process: 0] Synchronize training processes
2024-08-18 19:56:14,561 [Process: 0] Evaluating...
2024-08-18 19:56:14,562 [Process: 0] EPOCH 599:
2024-08-18 19:56:14,564 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:15,709 [Process: 0] Synchronize training processes
2024-08-18 19:56:15,709 [Process: 0] Evaluating...
2024-08-18 19:56:15,711 [Process: 0] EPOCH 600:
2024-08-18 19:56:15,713 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.5581e-01, 5.3752e-04, 2.7128e-04,  ..., 9.9895e-01,
          5.4799e-01, 1.3628e-03],
         [2.3117e-01, 5.3752e-04, 2.7128e-04,  ..., 3.4963e-04,
          4.3447e-02, 1.3628e-03],
         [9.1539e-02, 5.3752e-04, 2.7128e-04,  ..., 3.4963e-04,
          1.4195e-01, 1.3628e-03],
         [2.1475e-02, 9.9839e-01, 9.9919e-01,  ..., 3.4963e-04,
          2.6662e-01, 9.9591e-01]],
        [[9.9954e-01, 7.4679e-04, 3.6115e-04,  ..., 2.7032e-03,
          4.3343e-04, 3.8673e-04],
         [1.5458e-04, 7.4679e-04, 3.6115e-04,  ..., 2.7032e-03,
          4.3343e-04, 3.8673e-04],
         [1.5458e-04, 7.4679e-04, 3.6115e-04,  ..., 2.7032e-03,
          9.9870e-01, 9.9884e-01],
         [1.5458e-04, 9.9776e-01, 9.9892e-01,  ..., 9.9189e-01,
          4.3343e-04, 3.8673e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9350e-03, 2.8737e-05, 9.7482e-04,  ..., 1.8563e-03,
          1.2523e-02, 1.4821e-03],
         [3.9350e-03, 2.8737e-05, 9.7482e-04,  ..., 1.8563e-03,
          9.6497e-03, 1.4821e-03],
         [9.8728e-01, 2.8737e-05, 9.7482e-04,  ..., 9.9443e-01,
          2.6118e-02, 9.9555e-01],
         [4.8495e-03, 9.9991e-01, 9.9708e-01,  ..., 1.8563e-03,
          9.5171e-01, 1.4821e-03]],
        [[1.0086e-03, 1.3355e-04, 1.1452e-04,  ..., 4.6179e-03,
          1.2351e-03, 9.9981e-01],
         [1.0086e-03, 1.3355e-04, 1.3220e-04,  ..., 4.6179e-03,
          1.2351e-03, 6.4601e-05],
         [9.9697e-01, 1.3355e-04, 1.1452e-04,  ..., 9.8477e-01,
          9.9629e-01, 6.4601e-05],
         [1.0086e-03, 9.9960e-01, 9.9964e-01,  ..., 5.9978e-03,
          1.2351e-03, 6.4601e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 601:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7984e-01, 2.3471e-03, 3.2464e-03,  ..., 9.9976e-01,
          9.9128e-01, 2.0521e-03],
         [3.9164e-01, 2.2578e-03, 3.2464e-03,  ..., 7.9685e-05,
          2.3203e-03, 2.0521e-03],
         [2.0452e-02, 2.3658e-03, 5.4237e-03,  ..., 7.9685e-05,
          4.0803e-03, 2.1588e-03],
         [8.0692e-03, 9.9303e-01, 9.8808e-01,  ..., 7.9685e-05,
          2.3203e-03, 9.9374e-01]],
        [[9.9748e-01, 1.8846e-03, 1.2535e-03,  ..., 4.1934e-03,
          1.6799e-04, 3.0483e-04],
         [8.6901e-04, 1.8846e-03, 1.2535e-03,  ..., 5.0507e-03,
          1.6799e-04, 3.0483e-04],
         [8.5013e-04, 2.5434e-03, 1.2535e-03,  ..., 5.6990e-03,
          9.9950e-01, 9.9909e-01],
         [8.0443e-04, 9.9369e-01, 9.9624e-01,  ..., 9.8506e-01,
          1.6799e-04, 3.0483e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6790e-03, 5.8033e-06, 2.6861e-03,  ..., 5.5519e-03,
          6.4994e-05, 1.5646e-03],
         [3.6790e-03, 5.8033e-06, 2.6861e-03,  ..., 5.5519e-03,
          6.4994e-05, 1.5646e-03],
         [9.8851e-01, 5.8033e-06, 2.6861e-03,  ..., 9.8242e-01,
          6.4994e-05, 9.9531e-01],
         [4.1301e-03, 9.9998e-01, 9.9194e-01,  ..., 6.4744e-03,
          9.9981e-01, 1.5646e-03]],
        [[1.8987e-03, 8.6569e-05, 7.2798e-04,  ..., 5.8271e-03,
          2.9555e-03, 9.9966e-01],
         [1.8987e-03, 8.6569e-05, 7.2798e-04,  ..., 5.8271e-03,
          2.9555e-03, 1.1466e-04],
         [9.9430e-01, 8.6569e-05, 7.2798e-04,  ..., 9.8188e-01,
          9.9113e-01, 1.1466e-04],
         [1.8987e-03, 9.9974e-01, 9.9782e-01,  ..., 6.4667e-03,
          2.9555e-03, 1.1466e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 602:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:16,857 [Process: 0] Synchronize training processes
2024-08-18 19:56:16,857 [Process: 0] Evaluating...
2024-08-18 19:56:16,859 [Process: 0] EPOCH 601:
2024-08-18 19:56:16,861 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:18,006 [Process: 0] Synchronize training processes
2024-08-18 19:56:18,006 [Process: 0] Evaluating...
2024-08-18 19:56:18,012 [Process: 0] EPOCH 602:
2024-08-18 19:56:18,014 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5598e-01, 2.3554e-03, 1.1049e-03,  ..., 9.9773e-01,
          9.1471e-01, 7.4200e-03],
         [1.4717e-02, 2.3554e-03, 1.1049e-03,  ..., 7.2854e-04,
          1.3849e-02, 7.1218e-03],
         [2.2682e-02, 3.5315e-03, 1.1049e-03,  ..., 8.1125e-04,
          4.4446e-02, 1.2080e-02],
         [6.6241e-03, 9.9176e-01, 9.9669e-01,  ..., 7.2854e-04,
          2.7000e-02, 9.7338e-01]],
        [[9.9927e-01, 2.2613e-03, 3.6199e-03,  ..., 1.4751e-03,
          2.1088e-04, 6.4229e-05],
         [2.4164e-04, 2.9645e-03, 3.1756e-03,  ..., 1.4751e-03,
          2.1088e-04, 6.4229e-05],
         [2.4164e-04, 2.4936e-03, 4.1699e-03,  ..., 1.6475e-03,
          9.9937e-01, 9.9981e-01],
         [2.4164e-04, 9.9228e-01, 9.8903e-01,  ..., 9.9540e-01,
          2.1088e-04, 6.4229e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4496e-03, 2.0492e-02, 2.5249e-04,  ..., 9.0241e-04,
          5.4364e-06, 1.9537e-03],
         [4.4075e-03, 2.0492e-02, 2.5249e-04,  ..., 9.0241e-04,
          5.4364e-06, 1.9537e-03],
         [9.8574e-01, 8.5568e-01, 2.5249e-04,  ..., 9.9729e-01,
          5.4364e-06, 9.9414e-01],
         [4.4075e-03, 1.0334e-01, 9.9924e-01,  ..., 9.0241e-04,
          9.9998e-01, 1.9537e-03]],
        [[2.7612e-03, 1.1138e-04, 8.9197e-06,  ..., 7.3854e-03,
          3.9508e-03, 9.9516e-01],
         [2.7612e-03, 1.1138e-04, 8.9197e-06,  ..., 7.1839e-03,
          3.9508e-03, 1.2467e-03],
         [9.9172e-01, 1.1138e-04, 8.9197e-06,  ..., 9.7644e-01,
          9.8774e-01, 1.2467e-03],
         [2.7612e-03, 9.9967e-01, 9.9997e-01,  ..., 8.9893e-03,
          4.3557e-03, 2.3447e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 603:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.3639e-01, 3.8764e-04, 4.9854e-04,  ..., 9.9982e-01,
          7.9328e-01, 8.1331e-03],
         [1.9170e-02, 3.8764e-04, 4.9854e-04,  ..., 6.0017e-05,
          2.6762e-02, 8.0851e-03],
         [4.2527e-01, 3.8764e-04, 4.9854e-04,  ..., 6.0017e-05,
          5.3261e-02, 1.2806e-02],
         [1.9170e-02, 9.9884e-01, 9.9850e-01,  ..., 6.0017e-05,
          1.2670e-01, 9.7098e-01]],
        [[9.9980e-01, 2.0561e-03, 8.8081e-04,  ..., 1.9491e-03,
          1.0567e-04, 3.4435e-04],
         [6.6136e-05, 2.0561e-03, 8.0668e-04,  ..., 1.4544e-03,
          1.0567e-04, 3.4435e-04],
         [6.6136e-05, 2.0561e-03, 8.0668e-04,  ..., 1.4544e-03,
          9.9968e-01, 9.9897e-01],
         [6.6136e-05, 9.9383e-01, 9.9751e-01,  ..., 9.9514e-01,
          1.0567e-04, 3.4435e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:56:19,158 [Process: 0] Synchronize training processes
2024-08-18 19:56:19,158 [Process: 0] Evaluating...
2024-08-18 19:56:19,160 [Process: 0] EPOCH 603:
2024-08-18 19:56:19,161 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8968e-03, 1.6202e-06, 1.0809e-04,  ..., 7.8934e-03,
          3.3413e-04, 1.0142e-03],
         [5.6245e-03, 1.6202e-06, 1.0809e-04,  ..., 7.8934e-03,
          3.3413e-04, 1.0142e-03],
         [9.8085e-01, 1.6202e-06, 1.0809e-04,  ..., 9.7356e-01,
          3.3413e-04, 9.9696e-01],
         [5.6245e-03, 1.0000e+00, 9.9968e-01,  ..., 1.0650e-02,
          9.9900e-01, 1.0142e-03]],
        [[1.5834e-03, 8.0024e-05, 3.8156e-05,  ..., 4.0985e-03,
          4.6053e-04, 9.9971e-01],
         [1.5834e-03, 8.0024e-05, 3.8156e-05,  ..., 3.5470e-03,
          4.6053e-04, 9.6188e-05],
         [9.9525e-01, 8.0024e-05, 3.8156e-05,  ..., 9.8881e-01,
          9.9862e-01, 9.6188e-05],
         [1.5834e-03, 9.9976e-01, 9.9989e-01,  ..., 3.5470e-03,
          4.6053e-04, 9.6188e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 604:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0858e-01, 3.0350e-03, 3.1598e-03,  ..., 9.9949e-01,
          7.4757e-01, 6.3914e-03],
         [4.6138e-03, 3.0350e-03, 2.8848e-03,  ..., 1.7158e-04,
          2.9435e-02, 5.4544e-03],
         [8.2193e-02, 3.0350e-03, 4.1099e-03,  ..., 1.7158e-04,
          5.6818e-02, 6.7099e-03],
         [4.6138e-03, 9.9090e-01, 9.8985e-01,  ..., 1.7158e-04,
          1.6618e-01, 9.8144e-01]],
        [[9.9930e-01, 1.3104e-03, 2.4437e-03,  ..., 3.3174e-03,
          4.1465e-04, 5.6116e-05],
         [2.3468e-04, 1.3104e-03, 2.4437e-03,  ..., 3.3174e-03,
          4.1465e-04, 5.6116e-05],
         [2.3468e-04, 1.3104e-03, 3.6059e-03,  ..., 4.1010e-03,
          9.9876e-01, 9.9983e-01],
         [2.3468e-04, 9.9607e-01, 9.9151e-01,  ..., 9.8926e-01,
          4.1465e-04, 5.6116e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5849e-03, 8.5669e-05, 2.4326e-05,  ..., 8.8644e-04,
          3.6933e-03, 1.7825e-03],
         [3.5849e-03, 8.5669e-05, 2.4326e-05,  ..., 8.8644e-04,
          3.6933e-03, 1.7825e-03],
         [9.8925e-01, 8.5669e-05, 2.4326e-05,  ..., 9.9734e-01,
          3.6933e-03, 9.9465e-01],
         [3.5849e-03, 9.9974e-01, 9.9993e-01,  ..., 8.8644e-04,
          9.8892e-01, 1.7825e-03]],
        [[4.6302e-03, 5.3446e-04, 8.7844e-06,  ..., 6.5880e-03,
          1.9715e-03, 9.9909e-01],
         [4.6302e-03, 4.4167e-04, 8.7844e-06,  ..., 4.9683e-03,
          1.9715e-03, 2.5477e-04],
         [9.8482e-01, 4.4167e-04, 8.7844e-06,  ..., 9.8348e-01,
          9.9409e-01, 2.5477e-04],
         [5.9241e-03, 9.9858e-01, 9.9997e-01,  ..., 4.9683e-03,
          1.9715e-03, 4.0490e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 605:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9547e-01, 4.7410e-04, 1.0635e-03,  ..., 9.9964e-01,
          4.4891e-01, 9.1739e-03],
         [1.0194e-03, 4.7410e-04, 1.0635e-03,  ..., 1.1925e-04,
          4.0638e-02, 9.1739e-03],
         [2.5630e-03, 4.7410e-04, 1.1609e-03,  ..., 1.1925e-04,
          8.9468e-02, 2.0597e-02],
         [9.5022e-04, 9.9858e-01, 9.9671e-01,  ..., 1.1925e-04,
          4.2098e-01, 9.6106e-01]],
        [[9.9954e-01, 7.4449e-04, 6.2650e-04,  ..., 2.2204e-03,
          5.2253e-04, 2.5075e-04],
         [1.5486e-04, 7.4449e-04, 6.2650e-04,  ..., 1.9624e-03,
          5.2253e-04, 2.5075e-04],
         [1.5486e-04, 7.4449e-04, 6.2650e-04,  ..., 3.0006e-03,
          9.9843e-01, 9.9925e-01],
         [1.5486e-04, 9.9777e-01, 9.9812e-01,  ..., 9.9282e-01,
          5.2253e-04, 2.5075e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:20,308 [Process: 0] Synchronize training processes
2024-08-18 19:56:20,308 [Process: 0] Evaluating...
2024-08-18 19:56:20,310 [Process: 0] EPOCH 604:
2024-08-18 19:56:20,312 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:21,456 [Process: 0] Synchronize training processes
2024-08-18 19:56:21,456 [Process: 0] Evaluating...
2024-08-18 19:56:21,458 [Process: 0] EPOCH 605:
2024-08-18 19:56:21,460 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3291e-02, 2.6131e-05, 4.3683e-04,  ..., 4.0575e-03,
          1.2166e-02, 1.1469e-03],
         [7.5255e-03, 2.6131e-05, 4.3683e-04,  ..., 3.5876e-03,
          1.0605e-02, 1.1469e-03],
         [9.7166e-01, 2.6131e-05, 4.3683e-04,  ..., 9.8877e-01,
          2.2921e-02, 9.9656e-01],
         [7.5255e-03, 9.9992e-01, 9.9869e-01,  ..., 3.5876e-03,
          9.5431e-01, 1.1469e-03]],
        [[3.0171e-03, 5.6553e-05, 1.6789e-05,  ..., 1.0440e-02,
          1.0977e-02, 9.9952e-01],
         [3.0171e-03, 5.6553e-05, 1.6789e-05,  ..., 7.6270e-03,
          9.8357e-03, 1.2625e-04],
         [9.9095e-01, 5.6553e-05, 1.6789e-05,  ..., 9.7414e-01,
          9.6546e-01, 1.2625e-04],
         [3.0171e-03, 9.9983e-01, 9.9995e-01,  ..., 7.7899e-03,
          1.3724e-02, 2.2715e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 606:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8712e-01, 1.0796e-03, 8.7148e-04,  ..., 9.9938e-01,
          8.6431e-01, 6.5905e-03],
         [5.9842e-03, 1.0796e-03, 8.7148e-04,  ..., 2.0766e-04,
          2.0691e-02, 5.1150e-03],
         [3.7661e-03, 1.0796e-03, 8.7148e-04,  ..., 2.0766e-04,
          5.1782e-02, 8.6139e-03],
         [3.1263e-03, 9.9676e-01, 9.9739e-01,  ..., 2.0766e-04,
          6.3220e-02, 9.7968e-01]],
        [[9.9953e-01, 2.2761e-03, 5.9745e-04,  ..., 4.1965e-03,
          1.9011e-03, 3.7528e-04],
         [1.5800e-04, 2.2761e-03, 6.0077e-04,  ..., 4.1965e-03,
          1.9011e-03, 3.7528e-04],
         [1.5800e-04, 2.9172e-03, 5.9745e-04,  ..., 7.5574e-03,
          9.9430e-01, 9.9887e-01],
         [1.5800e-04, 9.9253e-01, 9.9820e-01,  ..., 9.8405e-01,
          1.9011e-03, 3.7528e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0776e-03, 2.0206e-05, 5.3295e-04,  ..., 1.5803e-03,
          2.3599e-02, 1.1306e-03],
         [1.0776e-03, 2.0206e-05, 5.3295e-04,  ..., 1.5803e-03,
          2.2517e-02, 1.1306e-03],
         [9.9677e-01, 2.0206e-05, 5.3295e-04,  ..., 9.9526e-01,
          9.2766e-02, 9.9661e-01],
         [1.0776e-03, 9.9994e-01, 9.9840e-01,  ..., 1.5803e-03,
          8.6112e-01, 1.1306e-03]],
        [[8.0691e-03, 1.1264e-04, 2.9711e-05,  ..., 5.0998e-03,
          2.2250e-03, 9.9906e-01],
         [8.0691e-03, 1.1264e-04, 2.9711e-05,  ..., 5.0998e-03,
          2.2250e-03, 2.8991e-04],
         [9.7281e-01, 1.1264e-04, 2.9711e-05,  ..., 9.8470e-01,
          9.9332e-01, 2.8991e-04],
         [1.1054e-02, 9.9966e-01, 9.9991e-01,  ..., 5.0998e-03,
          2.2250e-03, 3.6118e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 607:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:56:22,605 [Process: 0] Synchronize training processes
2024-08-18 19:56:22,605 [Process: 0] Evaluating...
2024-08-18 19:56:22,607 [Process: 0] EPOCH 606:
2024-08-18 19:56:22,609 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:23,754 [Process: 0] Synchronize training processes
2024-08-18 19:56:23,754 [Process: 0] Evaluating...
2024-08-18 19:56:23,756 [Process: 0] EPOCH 607:
2024-08-18 19:56:23,758 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5749e-01, 5.1559e-03, 3.1551e-03,  ..., 9.9901e-01,
          5.9945e-01, 3.1231e-03],
         [1.8725e-02, 5.1559e-03, 3.1551e-03,  ..., 3.2934e-04,
          4.0822e-02, 3.1231e-03],
         [1.7758e-02, 8.2120e-03, 3.6527e-03,  ..., 3.2934e-04,
          1.4638e-01, 3.6983e-03],
         [6.0305e-03, 9.8148e-01, 9.9004e-01,  ..., 3.2934e-04,
          2.1335e-01, 9.9006e-01]],
        [[9.9710e-01, 1.6354e-03, 1.9020e-03,  ..., 4.7930e-03,
          3.6183e-04, 2.0583e-04],
         [8.9962e-04, 1.2727e-03, 1.9020e-03,  ..., 4.7930e-03,
          3.6183e-04, 2.0583e-04],
         [8.9962e-04, 1.5535e-03, 1.9020e-03,  ..., 9.9350e-03,
          9.9891e-01, 9.9938e-01],
         [1.1049e-03, 9.9554e-01, 9.9429e-01,  ..., 9.8048e-01,
          3.6183e-04, 2.0583e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7194e-03, 1.3340e-04, 9.4568e-05,  ..., 3.1314e-03,
          2.0269e-02, 2.0680e-03],
         [3.9279e-03, 1.3340e-04, 9.4568e-05,  ..., 3.1314e-03,
          2.0269e-02, 1.9632e-03],
         [9.8642e-01, 1.3340e-04, 9.4568e-05,  ..., 9.9061e-01,
          6.6206e-02, 9.9401e-01],
         [3.9279e-03, 9.9960e-01, 9.9972e-01,  ..., 3.1314e-03,
          8.9326e-01, 1.9632e-03]],
        [[3.0349e-03, 3.9414e-05, 1.5859e-04,  ..., 5.0866e-03,
          1.8827e-03, 9.9987e-01],
         [3.0349e-03, 3.9414e-05, 1.5859e-04,  ..., 5.0866e-03,
          1.8827e-03, 4.2320e-05],
         [9.9090e-01, 3.9414e-05, 1.5859e-04,  ..., 9.8429e-01,
          9.9435e-01, 4.2320e-05],
         [3.0349e-03, 9.9988e-01, 9.9952e-01,  ..., 5.5335e-03,
          1.8827e-03, 4.8652e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 608:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6461e-01, 2.3073e-03, 4.3602e-04,  ..., 9.9425e-01,
          8.0580e-01, 7.9085e-03],
         [5.4881e-03, 2.3073e-03, 4.3602e-04,  ..., 1.9027e-03,
          2.4491e-02, 7.9085e-03],
         [2.4411e-02, 2.3073e-03, 4.3602e-04,  ..., 1.5564e-03,
          4.8789e-02, 1.2130e-02],
         [5.4881e-03, 9.9308e-01, 9.9869e-01,  ..., 2.2859e-03,
          1.2092e-01, 9.7205e-01]],
        [[9.9845e-01, 6.3855e-04, 1.4567e-03,  ..., 2.4302e-03,
          6.5198e-04, 5.9306e-05],
         [4.7143e-04, 6.3855e-04, 1.4567e-03,  ..., 2.4302e-03,
          6.5198e-04, 5.9306e-05],
         [6.0309e-04, 6.3855e-04, 1.5980e-03,  ..., 3.5309e-03,
          9.9804e-01, 9.9982e-01],
         [4.7143e-04, 9.9808e-01, 9.9549e-01,  ..., 9.9161e-01,
          6.5198e-04, 5.9306e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5486e-03, 3.0863e-04, 8.8374e-04,  ..., 8.9644e-03,
          3.6300e-03, 1.6049e-03],
         [2.1475e-03, 3.0863e-04, 8.8374e-04,  ..., 8.9644e-03,
          3.6300e-03, 1.6049e-03],
         [9.9316e-01, 3.0863e-04, 8.8374e-04,  ..., 9.6889e-01,
          3.6300e-03, 9.9519e-01],
         [2.1475e-03, 9.9907e-01, 9.9735e-01,  ..., 1.3177e-02,
          9.8911e-01, 1.6049e-03]],
        [[5.1710e-03, 3.3319e-04, 2.3552e-04,  ..., 4.6503e-03,
          5.1629e-03, 9.9956e-01],
         [5.1710e-03, 3.3319e-04, 2.3552e-04,  ..., 3.3053e-03,
          5.1629e-03, 1.2836e-04],
         [9.8449e-01, 3.3319e-04, 2.3552e-04,  ..., 9.8874e-01,
          9.8434e-01, 1.2836e-04],
         [5.1710e-03, 9.9900e-01, 9.9929e-01,  ..., 3.3053e-03,
          5.3305e-03, 1.7992e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 609:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:24,905 [Process: 0] Synchronize training processes
2024-08-18 19:56:24,905 [Process: 0] Evaluating...
2024-08-18 19:56:24,907 [Process: 0] EPOCH 608:
2024-08-18 19:56:24,909 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:26,054 [Process: 0] Synchronize training processes
2024-08-18 19:56:26,054 [Process: 0] Evaluating...
2024-08-18 19:56:26,056 [Process: 0] EPOCH 609:
2024-08-18 19:56:26,058 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.3369e-01, 1.7899e-03, 1.6074e-03,  ..., 9.9911e-01,
          4.6280e-01, 1.3676e-03],
         [1.9517e-02, 1.7899e-03, 1.6074e-03,  ..., 2.9509e-04,
          4.4376e-02, 1.3676e-03],
         [3.2728e-01, 1.7911e-03, 2.6397e-03,  ..., 2.9509e-04,
          1.0767e-01, 1.4221e-03],
         [1.9517e-02, 9.9463e-01, 9.9415e-01,  ..., 2.9509e-04,
          3.8515e-01, 9.9584e-01]],
        [[9.9979e-01, 6.6672e-04, 3.0433e-03,  ..., 1.0828e-03,
          8.2989e-05, 6.2635e-04],
         [6.8897e-05, 6.6672e-04, 3.0433e-03,  ..., 1.0828e-03,
          8.2989e-05, 6.2635e-04],
         [6.8897e-05, 6.6672e-04, 3.3570e-03,  ..., 1.0828e-03,
          9.9975e-01, 9.9812e-01],
         [6.8897e-05, 9.9800e-01, 9.9056e-01,  ..., 9.9675e-01,
          8.2989e-05, 6.2635e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.8561e-03, 2.8549e-04, 3.1128e-04,  ..., 5.2975e-03,
          7.3392e-04, 2.9705e-03],
         [4.7624e-03, 2.8549e-04, 3.1128e-04,  ..., 5.2975e-03,
          7.3392e-04, 2.9705e-03],
         [9.8562e-01, 2.8549e-04, 3.1128e-04,  ..., 9.8319e-01,
          7.3392e-04, 9.9109e-01],
         [4.7624e-03, 9.9914e-01, 9.9907e-01,  ..., 6.2169e-03,
          9.9780e-01, 2.9705e-03]],
        [[1.0557e-02, 2.1734e-04, 6.7475e-05,  ..., 2.9325e-03,
          3.6379e-03, 9.9935e-01],
         [1.0557e-02, 2.1734e-04, 6.7475e-05,  ..., 2.5055e-03,
          3.6379e-03, 2.1567e-04],
         [9.6167e-01, 2.1734e-04, 6.7475e-05,  ..., 9.9206e-01,
          9.8909e-01, 2.1567e-04],
         [1.7213e-02, 9.9935e-01, 9.9980e-01,  ..., 2.5055e-03,
          3.6379e-03, 2.1567e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 610:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3829e-01, 1.3783e-03, 7.2617e-04,  ..., 9.9312e-01,
          9.7619e-01, 1.0462e-02],
         [5.0915e-03, 1.2805e-03, 7.2617e-04,  ..., 2.9379e-03,
          4.5938e-03, 5.7758e-03],
         [5.1525e-02, 1.2805e-03, 7.2617e-04,  ..., 1.9701e-03,
          1.4623e-02, 8.8790e-03],
         [5.0915e-03, 9.9606e-01, 9.9782e-01,  ..., 1.9701e-03,
          4.5938e-03, 9.7488e-01]],
        [[9.9973e-01, 2.3911e-03, 8.1653e-04,  ..., 2.5215e-03,
          3.4229e-04, 5.2391e-04],
         [7.7099e-05, 3.2309e-03, 7.4397e-04,  ..., 2.5215e-03,
          3.4229e-04, 5.2391e-04],
         [1.1968e-04, 2.3657e-03, 7.4397e-04,  ..., 3.4825e-03,
          9.9897e-01, 9.9843e-01],
         [7.7099e-05, 9.9201e-01, 9.9770e-01,  ..., 9.9147e-01,
          3.4229e-04, 5.2391e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:56:27,205 [Process: 0] Synchronize training processes
2024-08-18 19:56:27,205 [Process: 0] Evaluating...
2024-08-18 19:56:27,207 [Process: 0] EPOCH 610:
2024-08-18 19:56:27,209 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0788e-03, 4.1113e-04, 3.7915e-05,  ..., 3.2682e-03,
          1.1463e-03, 2.0571e-03],
         [3.0788e-03, 4.1113e-04, 3.7915e-05,  ..., 3.2682e-03,
          1.1463e-03, 2.0571e-03],
         [9.9076e-01, 4.1113e-04, 3.7915e-05,  ..., 9.9020e-01,
          1.1463e-03, 9.9383e-01],
         [3.0788e-03, 9.9877e-01, 9.9989e-01,  ..., 3.2682e-03,
          9.9656e-01, 2.0571e-03]],
        [[1.1414e-02, 5.7989e-05, 1.5104e-05,  ..., 4.4392e-03,
          8.5791e-04, 9.9974e-01],
         [8.1188e-03, 5.7989e-05, 1.5104e-05,  ..., 3.0036e-03,
          8.5791e-04, 8.5407e-05],
         [9.7133e-01, 5.7989e-05, 1.5104e-05,  ..., 9.8955e-01,
          9.9743e-01, 8.5407e-05],
         [9.1323e-03, 9.9983e-01, 9.9995e-01,  ..., 3.0036e-03,
          8.5791e-04, 8.6436e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 611:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6691e-01, 3.3944e-04, 3.7518e-03,  ..., 9.9846e-01,
          9.6945e-01, 7.4888e-03],
         [6.6983e-03, 3.3944e-04, 3.3168e-03,  ..., 5.1407e-04,
          6.6385e-03, 5.1718e-03],
         [1.9696e-02, 3.3944e-04, 3.8189e-03,  ..., 5.1407e-04,
          1.7272e-02, 6.8040e-03],
         [6.6983e-03, 9.9898e-01, 9.8911e-01,  ..., 5.1407e-04,
          6.6385e-03, 9.8054e-01]],
        [[9.9950e-01, 7.4193e-04, 1.6524e-03,  ..., 1.7043e-03,
          2.9655e-04, 1.5417e-04],
         [1.6627e-04, 7.2598e-04, 1.6524e-03,  ..., 1.7043e-03,
          2.9655e-04, 1.5417e-04],
         [1.6627e-04, 7.3622e-04, 1.9759e-03,  ..., 1.7043e-03,
          9.9911e-01, 9.9954e-01],
         [1.6627e-04, 9.9780e-01, 9.9472e-01,  ..., 9.9489e-01,
          2.9655e-04, 1.5417e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.7348e-03, 9.2328e-05, 1.3225e-04,  ..., 1.9655e-03,
          1.4526e-03, 2.8104e-03],
         [6.1516e-03, 9.2328e-05, 1.3225e-04,  ..., 1.9655e-03,
          1.4526e-03, 2.8104e-03],
         [9.7996e-01, 9.2328e-05, 1.3225e-04,  ..., 9.9410e-01,
          1.4526e-03, 9.9157e-01],
         [6.1516e-03, 9.9972e-01, 9.9960e-01,  ..., 1.9655e-03,
          9.9564e-01, 2.8104e-03]],
        [[3.1066e-03, 3.8422e-04, 1.3525e-04,  ..., 3.3070e-03,
          3.0819e-03, 9.8872e-01],
         [3.1066e-03, 3.8422e-04, 1.3525e-04,  ..., 3.3070e-03,
          3.0819e-03, 2.7274e-03],
         [9.9068e-01, 3.8422e-04, 1.3525e-04,  ..., 9.9008e-01,
          9.9075e-01, 2.7274e-03],
         [3.1066e-03, 9.9885e-01, 9.9959e-01,  ..., 3.3070e-03,
          3.0819e-03, 5.8239e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 612:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9902e-01, 2.3208e-03, 1.3628e-03,  ..., 9.9975e-01,
          9.9492e-01, 2.5507e-03],
         [5.5630e-04, 2.1732e-03, 1.3628e-03,  ..., 8.3423e-05,
          1.3971e-03, 2.7614e-03],
         [2.2219e-04, 2.5087e-03, 1.3628e-03,  ..., 8.3423e-05,
          2.2884e-03, 2.5723e-03],
         [2.0471e-04, 9.9300e-01, 9.9591e-01,  ..., 8.3423e-05,
          1.3971e-03, 9.9212e-01]],
        [[9.9894e-01, 1.6389e-03, 3.2151e-03,  ..., 7.8824e-04,
          7.9512e-05, 2.5618e-04],
         [3.5463e-04, 1.6389e-03, 2.3164e-03,  ..., 7.8824e-04,
          7.9512e-05, 2.5618e-04],
         [3.5463e-04, 2.1683e-03, 2.5902e-03,  ..., 7.9258e-04,
          9.9976e-01, 9.9923e-01],
         [3.5463e-04, 9.9455e-01, 9.9188e-01,  ..., 9.9763e-01,
          7.9512e-05, 2.5618e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:28,351 [Process: 0] Synchronize training processes
2024-08-18 19:56:28,351 [Process: 0] Evaluating...
2024-08-18 19:56:28,353 [Process: 0] EPOCH 611:
2024-08-18 19:56:28,355 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:29,497 [Process: 0] Synchronize training processes
2024-08-18 19:56:29,498 [Process: 0] Evaluating...
2024-08-18 19:56:29,504 [Process: 0] EPOCH 612:
2024-08-18 19:56:29,506 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4328e-03, 1.0550e-04, 5.7498e-04,  ..., 8.2196e-04,
          4.5137e-03, 1.6542e-03],
         [3.4328e-03, 1.0550e-04, 5.7498e-04,  ..., 8.2196e-04,
          4.5137e-03, 1.6542e-03],
         [9.8970e-01, 1.0550e-04, 5.7498e-04,  ..., 9.9753e-01,
          4.7668e-03, 9.9504e-01],
         [3.4328e-03, 9.9968e-01, 9.9828e-01,  ..., 8.2196e-04,
          9.8621e-01, 1.6542e-03]],
        [[2.9435e-04, 1.1420e-04, 3.1009e-04,  ..., 1.3064e-03,
          1.5999e-03, 9.9976e-01],
         [2.9435e-04, 1.1420e-04, 3.1009e-04,  ..., 1.3064e-03,
          1.5999e-03, 7.9057e-05],
         [9.9912e-01, 1.1420e-04, 3.1009e-04,  ..., 9.9608e-01,
          9.9520e-01, 7.9057e-05],
         [2.9435e-04, 9.9966e-01, 9.9907e-01,  ..., 1.3064e-03,
          1.5999e-03, 7.9057e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 613:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8208e-01, 3.1776e-03, 1.8072e-03,  ..., 9.9194e-01,
          9.5876e-01, 2.8139e-03],
         [1.4142e-02, 2.8348e-03, 1.8072e-03,  ..., 2.0469e-03,
          6.4959e-03, 2.8139e-03],
         [1.8896e-03, 4.1909e-03, 1.8072e-03,  ..., 3.9662e-03,
          2.8244e-02, 3.5893e-03],
         [1.8896e-03, 9.8980e-01, 9.9458e-01,  ..., 2.0469e-03,
          6.4959e-03, 9.9078e-01]],
        [[9.9332e-01, 2.8149e-03, 1.2498e-03,  ..., 1.5261e-03,
          6.1982e-04, 2.9974e-04],
         [1.5281e-03, 2.8149e-03, 1.2498e-03,  ..., 1.5261e-03,
          6.1982e-04, 2.9974e-04],
         [3.6235e-03, 3.2875e-03, 1.2498e-03,  ..., 1.9585e-03,
          9.9814e-01, 9.9910e-01],
         [1.5281e-03, 9.9108e-01, 9.9625e-01,  ..., 9.9499e-01,
          6.1982e-04, 2.9974e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0020e-03, 1.5047e-05, 2.2644e-03,  ..., 1.6897e-03,
          7.7028e-05, 2.2989e-03],
         [2.5914e-03, 1.5047e-05, 2.2644e-03,  ..., 1.6897e-03,
          7.7028e-05, 2.2989e-03],
         [9.9082e-01, 1.5047e-05, 2.2644e-03,  ..., 9.9493e-01,
          7.7028e-05, 9.9310e-01],
         [2.5914e-03, 9.9995e-01, 9.9321e-01,  ..., 1.6897e-03,
          9.9977e-01, 2.2989e-03]],
        [[1.7440e-02, 4.2962e-05, 1.2166e-04,  ..., 2.7772e-03,
          3.7185e-03, 9.9830e-01],
         [1.4695e-02, 4.2962e-05, 1.2166e-04,  ..., 2.7772e-03,
          3.7185e-03, 4.8072e-04],
         [9.4118e-01, 4.2962e-05, 1.2166e-04,  ..., 9.9167e-01,
          9.8884e-01, 4.8072e-04],
         [2.6687e-02, 9.9987e-01, 9.9963e-01,  ..., 2.7772e-03,
          3.7185e-03, 7.3912e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 614:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9938e-01, 1.6368e-03, 4.2277e-03,  ..., 9.9798e-01,
          9.8911e-01, 2.8687e-03],
         [1.4937e-04, 1.6368e-03, 2.9951e-03,  ..., 6.7269e-04,
          2.6080e-03, 2.6575e-03],
         [3.1614e-04, 1.6368e-03, 2.9951e-03,  ..., 6.7269e-04,
          5.6726e-03, 2.6575e-03],
         [1.4937e-04, 9.9509e-01, 9.8978e-01,  ..., 6.7269e-04,
          2.6080e-03, 9.9182e-01]],
        [[9.9861e-01, 8.1273e-04, 5.7383e-04,  ..., 4.1252e-03,
          1.3348e-04, 1.0541e-04],
         [4.6429e-04, 8.1273e-04, 5.7383e-04,  ..., 5.8756e-03,
          1.3348e-04, 1.0541e-04],
         [4.6429e-04, 8.1273e-04, 5.7383e-04,  ..., 5.4855e-03,
          9.9960e-01, 9.9968e-01],
         [4.6429e-04, 9.9756e-01, 9.9828e-01,  ..., 9.8451e-01,
          1.3348e-04, 1.0541e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:30,650 [Process: 0] Synchronize training processes
2024-08-18 19:56:30,651 [Process: 0] Evaluating...
2024-08-18 19:56:30,652 [Process: 0] EPOCH 613:
2024-08-18 19:56:30,654 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:31,798 [Process: 0] Synchronize training processes
2024-08-18 19:56:31,799 [Process: 0] Evaluating...
2024-08-18 19:56:31,800 [Process: 0] EPOCH 614:
2024-08-18 19:56:31,802 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.8280e-03, 2.3825e-04, 3.0183e-04,  ..., 1.7816e-03,
          7.6836e-04, 9.4079e-03],
         [4.8280e-03, 2.3825e-04, 2.7346e-04,  ..., 1.7816e-03,
          7.6836e-04, 9.4079e-03],
         [9.8552e-01, 2.3825e-04, 2.7346e-04,  ..., 9.9466e-01,
          7.6836e-04, 9.6741e-01],
         [4.8280e-03, 9.9929e-01, 9.9915e-01,  ..., 1.7816e-03,
          9.9769e-01, 1.3769e-02]],
        [[1.2102e-03, 1.0660e-04, 9.3530e-04,  ..., 2.5035e-03,
          2.3253e-03, 9.9873e-01],
         [1.2102e-03, 1.0660e-04, 1.6132e-03,  ..., 2.5035e-03,
          2.3253e-03, 3.9225e-04],
         [9.9637e-01, 1.0660e-04, 9.3530e-04,  ..., 9.9249e-01,
          9.9302e-01, 3.9225e-04],
         [1.2102e-03, 9.9968e-01, 9.9652e-01,  ..., 2.5035e-03,
          2.3253e-03, 4.8109e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 615:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9955e-01, 1.1948e-03, 2.7531e-03,  ..., 9.9969e-01,
          9.7591e-01, 4.6894e-04],
         [1.2449e-04, 1.1948e-03, 1.9791e-03,  ..., 1.0412e-04,
          5.7006e-03, 4.6894e-04],
         [2.0403e-04, 1.1948e-03, 1.9791e-03,  ..., 1.0412e-04,
          1.0572e-02, 4.6894e-04],
         [1.2449e-04, 9.9642e-01, 9.9329e-01,  ..., 1.0412e-04,
          7.8173e-03, 9.9859e-01]],
        [[9.9955e-01, 1.7701e-03, 2.0106e-03,  ..., 2.1549e-03,
          6.4323e-04, 7.1903e-04],
         [1.1706e-04, 1.7701e-03, 2.0106e-03,  ..., 2.1549e-03,
          6.4323e-04, 7.1903e-04],
         [2.1969e-04, 1.7701e-03, 2.0106e-03,  ..., 2.1549e-03,
          9.9807e-01, 9.9784e-01],
         [1.1706e-04, 9.9469e-01, 9.9397e-01,  ..., 9.9354e-01,
          6.4323e-04, 7.1903e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5094e-03, 2.4241e-04, 1.0780e-03,  ..., 3.8147e-03,
          3.4750e-05, 6.4953e-03],
         [2.5094e-03, 2.4241e-04, 1.1791e-03,  ..., 3.8147e-03,
          3.4750e-05, 4.5701e-03],
         [9.9247e-01, 2.4241e-04, 1.0780e-03,  ..., 9.8856e-01,
          3.4750e-05, 9.8436e-01],
         [2.5094e-03, 9.9927e-01, 9.9666e-01,  ..., 3.8147e-03,
          9.9990e-01, 4.5701e-03]],
        [[5.4987e-03, 8.6903e-05, 5.0924e-04,  ..., 2.5912e-03,
          3.4143e-03, 9.9929e-01],
         [5.4987e-03, 8.6903e-05, 5.0924e-04,  ..., 2.5912e-03,
          3.4143e-03, 2.3813e-04],
         [9.8194e-01, 8.6903e-05, 5.0924e-04,  ..., 9.9223e-01,
          9.8976e-01, 2.3813e-04],
         [7.0658e-03, 9.9974e-01, 9.9847e-01,  ..., 2.5912e-03,
          3.4143e-03, 2.3813e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 616:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:32,947 [Process: 0] Synchronize training processes
2024-08-18 19:56:32,947 [Process: 0] Evaluating...
2024-08-18 19:56:32,949 [Process: 0] EPOCH 615:
2024-08-18 19:56:32,951 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:34,095 [Process: 0] Synchronize training processes
2024-08-18 19:56:34,096 [Process: 0] Evaluating...
2024-08-18 19:56:34,097 [Process: 0] EPOCH 616:
2024-08-18 19:56:34,099 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9721e-01, 7.1299e-04, 1.2113e-03,  ..., 9.9936e-01,
          5.7540e-01, 3.1680e-04],
         [3.7082e-04, 7.1299e-04, 1.2113e-03,  ..., 2.0812e-04,
          4.4502e-02, 3.1680e-04],
         [2.0499e-03, 7.1299e-04, 1.2113e-03,  ..., 2.2143e-04,
          1.3129e-01, 3.1680e-04],
         [3.7082e-04, 9.9786e-01, 9.9637e-01,  ..., 2.0812e-04,
          2.4881e-01, 9.9905e-01]],
        [[9.9740e-01, 8.3820e-03, 2.6644e-02,  ..., 7.9739e-04,
          2.2650e-04, 3.4277e-05],
         [6.2180e-04, 5.3733e-03, 1.1771e-02,  ..., 7.9739e-04,
          2.2650e-04, 3.4277e-05],
         [1.3602e-03, 5.3733e-03, 2.4070e-02,  ..., 7.9739e-04,
          9.9932e-01, 9.9990e-01],
         [6.2180e-04, 9.8087e-01, 9.3752e-01,  ..., 9.9761e-01,
          2.2650e-04, 3.4277e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.1885e-03, 5.8441e-05, 3.5105e-05,  ..., 1.6903e-02,
          2.9828e-04, 2.2869e-03],
         [5.0824e-03, 5.8441e-05, 3.5105e-05,  ..., 1.4849e-02,
          2.9828e-04, 2.2869e-03],
         [9.8365e-01, 5.8441e-05, 3.5105e-05,  ..., 9.3999e-01,
          2.9828e-04, 9.9314e-01],
         [5.0824e-03, 9.9982e-01, 9.9989e-01,  ..., 2.8260e-02,
          9.9911e-01, 2.2869e-03]],
        [[6.8680e-04, 7.4056e-05, 3.0868e-04,  ..., 1.2277e-02,
          8.6333e-03, 9.9750e-01],
         [6.8680e-04, 7.4056e-05, 3.0868e-04,  ..., 1.2277e-02,
          8.6333e-03, 6.5594e-04],
         [9.9794e-01, 7.4056e-05, 3.0868e-04,  ..., 9.5578e-01,
          9.7149e-01, 6.5594e-04],
         [6.8680e-04, 9.9978e-01, 9.9907e-01,  ..., 1.9664e-02,
          1.1245e-02, 1.1914e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 617:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8570e-01, 2.4116e-03, 2.9100e-03,  ..., 9.9954e-01,
          8.1651e-01, 1.9967e-03],
         [3.2617e-03, 1.9427e-03, 2.9100e-03,  ..., 1.5224e-04,
          2.7192e-02, 1.9967e-03],
         [8.1391e-03, 1.9427e-03, 3.2393e-03,  ..., 1.5224e-04,
          7.2372e-02, 2.1799e-03],
         [2.8997e-03, 9.9370e-01, 9.9094e-01,  ..., 1.5224e-04,
          8.3925e-02, 9.9383e-01]],
        [[9.9935e-01, 1.9910e-03, 7.5380e-04,  ..., 1.4482e-03,
          1.7010e-04, 2.2083e-04],
         [2.1574e-04, 1.9910e-03, 7.5380e-04,  ..., 1.4482e-03,
          1.7010e-04, 2.2083e-04],
         [2.1574e-04, 1.9910e-03, 7.5380e-04,  ..., 1.4482e-03,
          9.9949e-01, 9.9934e-01],
         [2.1574e-04, 9.9403e-01, 9.9774e-01,  ..., 9.9566e-01,
          1.7010e-04, 2.2083e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1133e-03, 7.0647e-05, 2.4663e-05,  ..., 2.5248e-03,
          1.1939e-02, 2.2693e-03],
         [3.1133e-03, 7.0647e-05, 2.4663e-05,  ..., 2.5248e-03,
          9.3718e-03, 2.2693e-03],
         [9.9066e-01, 7.0647e-05, 2.4663e-05,  ..., 9.9243e-01,
          1.2911e-02, 9.9319e-01],
         [3.1133e-03, 9.9979e-01, 9.9993e-01,  ..., 2.5248e-03,
          9.6578e-01, 2.2693e-03]],
        [[2.2958e-03, 1.4014e-03, 1.5463e-04,  ..., 1.6286e-03,
          2.2909e-03, 9.9846e-01],
         [2.2958e-03, 1.4014e-03, 1.5463e-04,  ..., 1.6286e-03,
          2.2909e-03, 4.7204e-04],
         [9.9311e-01, 1.4014e-03, 1.5463e-04,  ..., 9.9511e-01,
          9.9313e-01, 4.7204e-04],
         [2.2958e-03, 9.9580e-01, 9.9954e-01,  ..., 1.6286e-03,
          2.2909e-03, 5.9937e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:35,247 [Process: 0] Synchronize training processes
2024-08-18 19:56:35,247 [Process: 0] Evaluating...
2024-08-18 19:56:35,249 [Process: 0] EPOCH 617:
2024-08-18 19:56:35,251 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 618:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7337e-01, 1.3453e-03, 4.8575e-03,  ..., 9.8879e-01,
          6.9020e-01, 1.0047e-03],
         [6.5016e-03, 1.3453e-03, 4.8575e-03,  ..., 6.6162e-03,
          3.5101e-02, 1.0047e-03],
         [1.3625e-02, 1.4674e-03, 1.0105e-02,  ..., 2.2968e-03,
          1.2266e-01, 1.0047e-03],
         [6.5016e-03, 9.9584e-01, 9.8018e-01,  ..., 2.2968e-03,
          1.5204e-01, 9.9699e-01]],
        [[9.8784e-01, 4.7085e-03, 1.6069e-03,  ..., 7.8522e-04,
          3.9966e-04, 8.6168e-04],
         [6.6606e-03, 2.3998e-03, 1.6069e-03,  ..., 7.8522e-04,
          3.9966e-04, 8.6168e-04],
         [3.3017e-03, 2.8545e-03, 1.7124e-03,  ..., 7.8522e-04,
          9.9880e-01, 9.9741e-01],
         [2.1928e-03, 9.9004e-01, 9.9507e-01,  ..., 9.9764e-01,
          3.9966e-04, 8.6168e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3322e-03, 5.6830e-04, 7.1754e-05,  ..., 3.7824e-03,
          6.0776e-02, 1.1081e-03],
         [2.3322e-03, 5.6830e-04, 7.1754e-05,  ..., 3.7471e-03,
          3.1237e-02, 1.0295e-03],
         [9.9300e-01, 5.6830e-04, 7.1754e-05,  ..., 9.8872e-01,
          1.0384e-01, 9.9683e-01],
         [2.3322e-03, 9.9830e-01, 9.9978e-01,  ..., 3.7471e-03,
          8.0415e-01, 1.0295e-03]],
        [[9.1092e-04, 5.1593e-05, 2.6675e-04,  ..., 1.2854e-03,
          2.9773e-03, 9.9977e-01],
         [9.1092e-04, 5.1593e-05, 2.6675e-04,  ..., 1.2854e-03,
          2.9773e-03, 7.7841e-05],
         [9.9727e-01, 5.1593e-05, 2.6675e-04,  ..., 9.9614e-01,
          9.9107e-01, 7.7841e-05],
         [9.1092e-04, 9.9985e-01, 9.9920e-01,  ..., 1.2854e-03,
          2.9773e-03, 7.7841e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 619:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7251e-01, 4.3835e-03, 1.3058e-03,  ..., 9.9890e-01,
          7.3711e-01, 1.8510e-03],
         [6.2433e-02, 3.8591e-03, 1.3058e-03,  ..., 3.6815e-04,
          3.0289e-02, 1.3432e-03],
         [4.9314e-02, 3.8591e-03, 1.3058e-03,  ..., 3.6815e-04,
          1.4673e-01, 1.3432e-03],
         [1.5743e-02, 9.8790e-01, 9.9608e-01,  ..., 3.6815e-04,
          8.5868e-02, 9.9546e-01]],
        [[9.9986e-01, 1.8820e-03, 1.6499e-03,  ..., 1.4852e-03,
          9.1164e-04, 1.6252e-03],
         [4.8018e-05, 1.8820e-03, 1.6499e-03,  ..., 1.4852e-03,
          9.1164e-04, 1.6252e-03],
         [4.8018e-05, 1.8820e-03, 1.7146e-03,  ..., 1.4852e-03,
          9.9727e-01, 9.9512e-01],
         [4.8018e-05, 9.9435e-01, 9.9499e-01,  ..., 9.9554e-01,
          9.1164e-04, 1.6252e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:36,395 [Process: 0] Synchronize training processes
2024-08-18 19:56:36,395 [Process: 0] Evaluating...
2024-08-18 19:56:36,397 [Process: 0] EPOCH 618:
2024-08-18 19:56:36,399 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:37,534 [Process: 0] Synchronize training processes
2024-08-18 19:56:37,534 [Process: 0] Evaluating...
2024-08-18 19:56:37,536 [Process: 0] EPOCH 619:
2024-08-18 19:56:37,538 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7966e-03, 1.0671e-04, 1.8028e-04,  ..., 1.9942e-03,
          4.2265e-02, 9.7351e-04],
         [5.7966e-03, 1.0671e-04, 1.8028e-04,  ..., 1.9942e-03,
          3.5396e-02, 9.7351e-04],
         [9.8242e-01, 1.0671e-04, 1.8028e-04,  ..., 9.9402e-01,
          1.6377e-01, 9.9708e-01],
         [5.9902e-03, 9.9968e-01, 9.9946e-01,  ..., 1.9942e-03,
          7.5857e-01, 9.7351e-04]],
        [[7.2214e-03, 5.2003e-03, 1.7478e-04,  ..., 3.3107e-03,
          3.7489e-03, 9.9985e-01],
         [7.2214e-03, 4.4683e-03, 1.7478e-04,  ..., 3.3107e-03,
          3.7489e-03, 5.1533e-05],
         [9.7524e-01, 4.4683e-03, 1.7478e-04,  ..., 9.9007e-01,
          9.8874e-01, 5.1533e-05],
         [1.0314e-02, 9.8586e-01, 9.9948e-01,  ..., 3.3107e-03,
          3.7600e-03, 5.1533e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 620:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7027e-01, 8.1250e-03, 3.7202e-04,  ..., 9.9937e-01,
          9.2924e-01, 2.9229e-03],
         [1.2416e-01, 6.8853e-03, 3.7202e-04,  ..., 1.8155e-04,
          1.2073e-02, 2.5450e-03],
         [2.7857e-03, 1.1104e-02, 3.7202e-04,  ..., 2.7083e-04,
          4.1653e-02, 2.5450e-03],
         [2.7857e-03, 9.7389e-01, 9.9888e-01,  ..., 1.8155e-04,
          1.7032e-02, 9.9199e-01]],
        [[9.9926e-01, 1.5200e-03, 3.6082e-03,  ..., 8.0395e-04,
          2.5309e-04, 8.2966e-05],
         [2.4723e-04, 1.5200e-03, 3.6082e-03,  ..., 8.0395e-04,
          2.5309e-04, 8.2966e-05],
         [2.4723e-04, 1.5257e-03, 3.7608e-03,  ..., 8.0395e-04,
          9.9924e-01, 9.9975e-01],
         [2.4723e-04, 9.9543e-01, 9.8902e-01,  ..., 9.9759e-01,
          2.5309e-04, 8.2966e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1349e-03, 6.5936e-05, 7.1218e-06,  ..., 2.5665e-03,
          3.7649e-02, 2.3905e-03],
         [3.1349e-03, 6.5936e-05, 7.1218e-06,  ..., 2.5665e-03,
          2.7941e-02, 2.3905e-03],
         [9.9060e-01, 6.5936e-05, 7.1218e-06,  ..., 9.9230e-01,
          1.0417e-01, 9.9283e-01],
         [3.1349e-03, 9.9980e-01, 9.9998e-01,  ..., 2.5665e-03,
          8.3024e-01, 2.3905e-03]],
        [[2.1897e-03, 3.1766e-03, 1.5141e-04,  ..., 2.1790e-03,
          1.0795e-03, 9.9677e-01],
         [2.1897e-03, 3.1766e-03, 1.5141e-04,  ..., 2.1790e-03,
          1.0795e-03, 9.2995e-04],
         [9.9343e-01, 3.1766e-03, 1.5141e-04,  ..., 9.9346e-01,
          9.9676e-01, 9.2995e-04],
         [2.1897e-03, 9.9047e-01, 9.9955e-01,  ..., 2.1790e-03,
          1.0795e-03, 1.3661e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 621:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2726e-01, 9.3647e-04, 3.2068e-03,  ..., 9.9926e-01,
          9.9116e-01, 2.9614e-03],
         [6.7535e-02, 9.3647e-04, 3.2068e-03,  ..., 2.3099e-04,
          2.1387e-03, 2.9614e-03],
         [2.6032e-03, 9.3647e-04, 4.9461e-03,  ..., 2.8167e-04,
          2.1387e-03, 2.9614e-03],
         [2.6032e-03, 9.9719e-01, 9.8864e-01,  ..., 2.3099e-04,
          4.5665e-03, 9.9112e-01]],
        [[9.9544e-01, 7.0963e-04, 1.1393e-03,  ..., 2.9272e-03,
          1.4280e-04, 3.8593e-04],
         [1.0328e-03, 7.0963e-04, 1.1393e-03,  ..., 2.3075e-03,
          1.4280e-04, 3.8593e-04],
         [2.4957e-03, 7.0963e-04, 1.1393e-03,  ..., 2.8051e-03,
          9.9957e-01, 9.9884e-01],
         [1.0328e-03, 9.9787e-01, 9.9658e-01,  ..., 9.9196e-01,
          1.4280e-04, 3.8593e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:38,671 [Process: 0] Synchronize training processes
2024-08-18 19:56:38,671 [Process: 0] Evaluating...
2024-08-18 19:56:38,673 [Process: 0] EPOCH 620:
2024-08-18 19:56:38,675 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:39,805 [Process: 0] Synchronize training processes
2024-08-18 19:56:39,806 [Process: 0] Evaluating...
2024-08-18 19:56:39,807 [Process: 0] EPOCH 621:
2024-08-18 19:56:39,809 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8810e-03, 4.4627e-06, 1.1925e-03,  ..., 6.1189e-04,
          9.8851e-03, 6.0275e-04],
         [7.0686e-03, 4.4627e-06, 1.1925e-03,  ..., 6.1189e-04,
          6.9477e-03, 6.0275e-04],
         [9.7598e-01, 4.4627e-06, 1.1925e-03,  ..., 9.9816e-01,
          1.1619e-02, 9.9819e-01],
         [7.0686e-03, 9.9999e-01, 9.9642e-01,  ..., 6.1189e-04,
          9.7155e-01, 6.0275e-04]],
        [[4.3129e-03, 4.9244e-04, 2.3784e-05,  ..., 6.0739e-03,
          2.6398e-03, 9.9988e-01],
         [4.3129e-03, 4.9244e-04, 2.3784e-05,  ..., 6.0739e-03,
          1.7767e-03, 3.9662e-05],
         [9.8606e-01, 4.9244e-04, 2.3784e-05,  ..., 9.7953e-01,
          9.9381e-01, 3.9662e-05],
         [5.3126e-03, 9.9852e-01, 9.9993e-01,  ..., 8.3212e-03,
          1.7767e-03, 4.1960e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 622:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2413e-01, 2.6788e-04, 2.6663e-03,  ..., 9.9853e-01,
          9.4845e-01, 1.5342e-03],
         [7.3928e-02, 2.6310e-04, 2.4560e-03,  ..., 4.8928e-04,
          9.6075e-03, 1.5342e-03],
         [9.6965e-04, 2.6310e-04, 2.4560e-03,  ..., 4.8928e-04,
          1.5766e-02, 1.6305e-03],
         [9.6965e-04, 9.9921e-01, 9.9242e-01,  ..., 4.8928e-04,
          2.6177e-02, 9.9530e-01]],
        [[9.9285e-01, 1.9051e-03, 2.2349e-03,  ..., 1.0059e-02,
          3.7153e-04, 1.4500e-04],
         [1.7656e-03, 1.9051e-03, 2.2349e-03,  ..., 8.5786e-03,
          3.7153e-04, 1.4500e-04],
         [3.6190e-03, 2.1182e-03, 2.3411e-03,  ..., 9.9512e-03,
          9.9889e-01, 9.9956e-01],
         [1.7656e-03, 9.9407e-01, 9.9319e-01,  ..., 9.7141e-01,
          3.7153e-04, 1.4500e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2625e-03, 8.2719e-05, 1.1120e-04,  ..., 7.4320e-03,
          1.2924e-03, 9.1152e-04],
         [5.7512e-03, 8.2719e-05, 1.1120e-04,  ..., 5.0960e-03,
          1.2924e-03, 9.1152e-04],
         [9.7923e-01, 8.2719e-05, 1.1120e-04,  ..., 9.8238e-01,
          1.2924e-03, 9.9727e-01],
         [5.7512e-03, 9.9975e-01, 9.9967e-01,  ..., 5.0960e-03,
          9.9612e-01, 9.1152e-04]],
        [[1.1101e-02, 9.3997e-04, 1.1865e-04,  ..., 4.0842e-03,
          1.6361e-03, 9.9961e-01],
         [1.1101e-02, 9.3997e-04, 1.1865e-04,  ..., 3.4889e-03,
          1.6361e-03, 1.2308e-04],
         [9.5860e-01, 9.3997e-04, 1.1865e-04,  ..., 9.8894e-01,
          9.9509e-01, 1.2308e-04],
         [1.9201e-02, 9.9718e-01, 9.9964e-01,  ..., 3.4889e-03,
          1.6361e-03, 1.4174e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 623:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:40,954 [Process: 0] Synchronize training processes
2024-08-18 19:56:40,954 [Process: 0] Evaluating...
2024-08-18 19:56:40,961 [Process: 0] EPOCH 622:
2024-08-18 19:56:40,962 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:42,106 [Process: 0] Synchronize training processes
2024-08-18 19:56:42,106 [Process: 0] Evaluating...
2024-08-18 19:56:42,108 [Process: 0] EPOCH 623:
2024-08-18 19:56:42,109 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.4324e-01, 7.0559e-04, 1.1169e-03,  ..., 9.9597e-01,
          8.8609e-01, 5.3652e-04],
         [1.5077e-01, 7.0559e-04, 1.1169e-03,  ..., 1.1355e-03,
          1.7247e-02, 5.3652e-04],
         [2.9910e-03, 7.0559e-04, 1.1169e-03,  ..., 1.7633e-03,
          5.6580e-02, 5.3652e-04],
         [2.9910e-03, 9.9788e-01, 9.9665e-01,  ..., 1.1355e-03,
          4.0083e-02, 9.9839e-01]],
        [[9.9796e-01, 1.5704e-02, 1.4932e-03,  ..., 1.3177e-02,
          4.4698e-04, 6.4418e-03],
         [5.4841e-04, 6.3382e-03, 1.4932e-03,  ..., 1.0331e-02,
          4.4698e-04, 4.2843e-03],
         [9.4807e-04, 7.9578e-03, 1.4932e-03,  ..., 2.1694e-02,
          9.9866e-01, 9.8499e-01],
         [5.4841e-04, 9.7000e-01, 9.9552e-01,  ..., 9.5480e-01,
          4.4698e-04, 4.2843e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1072e-03, 1.8648e-04, 3.2839e-05,  ..., 2.8453e-03,
          2.4641e-03, 1.0682e-03],
         [1.1072e-03, 2.4624e-04, 3.2839e-05,  ..., 2.8453e-03,
          2.4641e-03, 1.0682e-03],
         [9.9668e-01, 1.8648e-04, 3.2839e-05,  ..., 9.9146e-01,
          2.4641e-03, 9.9680e-01],
         [1.1072e-03, 9.9938e-01, 9.9990e-01,  ..., 2.8453e-03,
          9.9261e-01, 1.0682e-03]],
        [[5.0168e-03, 3.8287e-05, 9.7442e-05,  ..., 2.6761e-03,
          4.8891e-03, 9.9988e-01],
         [5.0168e-03, 3.8287e-05, 9.7442e-05,  ..., 2.6761e-03,
          3.9385e-03, 4.0942e-05],
         [9.8495e-01, 3.8287e-05, 9.7442e-05,  ..., 9.9197e-01,
          9.8723e-01, 4.0942e-05],
         [5.0168e-03, 9.9989e-01, 9.9971e-01,  ..., 2.6761e-03,
          3.9385e-03, 4.0942e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 624:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9041e-01, 1.4090e-03, 1.0797e-03,  ..., 9.9878e-01,
          2.0306e-01, 1.5923e-03],
         [2.5053e-03, 1.4090e-03, 1.0797e-03,  ..., 3.8729e-04,
          3.6099e-02, 1.5923e-03],
         [4.5748e-03, 1.4090e-03, 1.1107e-03,  ..., 4.4399e-04,
          8.7810e-02, 1.5923e-03],
         [2.5053e-03, 9.9577e-01, 9.9673e-01,  ..., 3.8729e-04,
          6.7303e-01, 9.9522e-01]],
        [[9.9187e-01, 2.5855e-03, 8.0928e-04,  ..., 7.7007e-03,
          2.2441e-04, 6.0707e-05],
         [2.8147e-03, 1.8209e-03, 8.0928e-04,  ..., 5.7420e-03,
          2.2441e-04, 6.0707e-05],
         [2.5432e-03, 2.4460e-03, 8.0928e-04,  ..., 8.6152e-03,
          9.9933e-01, 9.9982e-01],
         [2.7769e-03, 9.9315e-01, 9.9757e-01,  ..., 9.7794e-01,
          2.2441e-04, 6.0707e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1565e-04, 4.0428e-04, 6.6236e-05,  ..., 2.2974e-03,
          9.2870e-04, 2.1348e-03],
         [7.1565e-04, 4.0428e-04, 6.6236e-05,  ..., 2.2974e-03,
          9.2870e-04, 1.8328e-03],
         [9.9785e-01, 4.0428e-04, 6.6236e-05,  ..., 9.9311e-01,
          9.2870e-04, 9.9420e-01],
         [7.1565e-04, 9.9879e-01, 9.9980e-01,  ..., 2.2974e-03,
          9.9721e-01, 1.8328e-03]],
        [[5.9061e-03, 9.7774e-06, 4.1505e-05,  ..., 1.3419e-03,
          7.1255e-03, 9.9977e-01],
         [5.9061e-03, 9.7774e-06, 4.1505e-05,  ..., 1.3419e-03,
          7.1255e-03, 7.8150e-05],
         [9.8122e-01, 9.7774e-06, 4.1505e-05,  ..., 9.9597e-01,
          9.7605e-01, 7.8150e-05],
         [6.9723e-03, 9.9997e-01, 9.9988e-01,  ..., 1.3419e-03,
          9.7021e-03, 7.8150e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:43,252 [Process: 0] Synchronize training processes
2024-08-18 19:56:43,253 [Process: 0] Evaluating...
2024-08-18 19:56:43,254 [Process: 0] EPOCH 624:
2024-08-18 19:56:43,256 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 625:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6791e-01, 3.9932e-04, 8.5438e-04,  ..., 9.9877e-01,
          9.0579e-01, 3.6499e-03],
         [6.7790e-03, 3.9932e-04, 8.5438e-04,  ..., 4.1046e-04,
          1.4369e-02, 2.6477e-03],
         [2.0672e-02, 3.9932e-04, 8.5438e-04,  ..., 4.1046e-04,
          2.2575e-02, 3.3592e-03],
         [4.6415e-03, 9.9880e-01, 9.9744e-01,  ..., 4.1046e-04,
          5.7269e-02, 9.9034e-01]],
        [[9.8774e-01, 2.8761e-03, 2.9787e-03,  ..., 2.2814e-02,
          2.9661e-04, 1.0594e-04],
         [3.3271e-03, 2.8761e-03, 2.9787e-03,  ..., 1.2538e-02,
          2.9661e-04, 1.0594e-04],
         [5.3742e-03, 3.8112e-03, 3.2953e-03,  ..., 2.1890e-02,
          9.9911e-01, 9.9968e-01],
         [3.5591e-03, 9.9044e-01, 9.9075e-01,  ..., 9.4276e-01,
          2.9661e-04, 1.0594e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2819e-03, 1.0990e-05, 1.6384e-04,  ..., 2.3070e-03,
          4.0747e-04, 4.3691e-03],
         [2.2270e-03, 1.0990e-05, 1.6384e-04,  ..., 2.3070e-03,
          4.0747e-04, 2.8113e-03],
         [9.9226e-01, 1.0990e-05, 1.6384e-04,  ..., 9.9308e-01,
          4.0747e-04, 9.9001e-01],
         [2.2270e-03, 9.9997e-01, 9.9951e-01,  ..., 2.3070e-03,
          9.9878e-01, 2.8113e-03]],
        [[4.2663e-03, 4.6391e-06, 3.0158e-05,  ..., 2.6885e-03,
          2.7188e-03, 9.9906e-01],
         [4.2663e-03, 4.6391e-06, 3.0158e-05,  ..., 2.6885e-03,
          2.7188e-03, 2.9922e-04],
         [9.8720e-01, 4.6391e-06, 3.0158e-05,  ..., 9.9193e-01,
          9.9184e-01, 2.9922e-04],
         [4.2663e-03, 9.9999e-01, 9.9991e-01,  ..., 2.6885e-03,
          2.7188e-03, 3.4155e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 626:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8731e-01, 1.7094e-03, 3.8684e-03,  ..., 9.9717e-01,
          9.4635e-01, 2.9497e-03],
         [2.1590e-02, 1.7094e-03, 3.2140e-03,  ..., 8.3206e-04,
          7.9852e-03, 2.9497e-03],
         [7.6951e-01, 1.7094e-03, 3.8854e-03,  ..., 1.1691e-03,
          3.7681e-02, 4.5343e-03],
         [2.1590e-02, 9.9487e-01, 9.8903e-01,  ..., 8.3206e-04,
          7.9852e-03, 9.8957e-01]],
        [[9.9484e-01, 4.3563e-04, 1.7185e-03,  ..., 7.1101e-03,
          1.3915e-03, 2.7178e-04],
         [1.5317e-03, 4.3563e-04, 1.7185e-03,  ..., 5.6399e-03,
          1.3915e-03, 2.7178e-04],
         [2.1004e-03, 4.3563e-04, 1.9070e-03,  ..., 1.1244e-02,
          9.9583e-01, 9.9918e-01],
         [1.5317e-03, 9.9869e-01, 9.9466e-01,  ..., 9.7601e-01,
          1.3915e-03, 2.7178e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:44,398 [Process: 0] Synchronize training processes
2024-08-18 19:56:44,398 [Process: 0] Evaluating...
2024-08-18 19:56:44,400 [Process: 0] EPOCH 625:
2024-08-18 19:56:44,401 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:45,544 [Process: 0] Synchronize training processes
2024-08-18 19:56:45,544 [Process: 0] Evaluating...
2024-08-18 19:56:45,546 [Process: 0] EPOCH 626:
2024-08-18 19:56:45,548 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3653e-03, 6.0186e-06, 2.0604e-05,  ..., 1.9190e-03,
          1.6540e-05, 1.9212e-03],
         [2.3653e-03, 6.0186e-06, 2.0604e-05,  ..., 1.9190e-03,
          1.6540e-05, 1.9212e-03],
         [9.9290e-01, 6.0186e-06, 2.0604e-05,  ..., 9.9424e-01,
          1.6540e-05, 9.9424e-01],
         [2.3653e-03, 9.9998e-01, 9.9994e-01,  ..., 1.9190e-03,
          9.9995e-01, 1.9212e-03]],
        [[5.0877e-03, 3.7892e-04, 2.5374e-04,  ..., 4.7327e-03,
          1.5615e-03, 9.9981e-01],
         [5.0877e-03, 3.7892e-04, 2.5374e-04,  ..., 4.7327e-03,
          1.5615e-03, 6.2172e-05],
         [9.8327e-01, 3.7892e-04, 2.5374e-04,  ..., 9.8580e-01,
          9.9532e-01, 6.2172e-05],
         [6.5522e-03, 9.9886e-01, 9.9924e-01,  ..., 4.7327e-03,
          1.5615e-03, 6.2172e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 627:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.1129e-01, 1.6395e-03, 9.8980e-04,  ..., 9.9754e-01,
          9.4845e-01, 1.2522e-03],
         [2.4936e-02, 1.6395e-03, 9.8980e-04,  ..., 7.8873e-04,
          9.2090e-03, 1.2522e-03],
         [4.3884e-01, 1.9930e-03, 9.8980e-04,  ..., 8.8489e-04,
          3.1071e-02, 1.2522e-03],
         [2.4936e-02, 9.9473e-01, 9.9703e-01,  ..., 7.8873e-04,
          1.1267e-02, 9.9624e-01]],
        [[9.9869e-01, 1.6625e-03, 3.1797e-03,  ..., 2.1511e-02,
          2.7649e-04, 2.7119e-04],
         [4.3529e-04, 1.6625e-03, 1.8740e-03,  ..., 1.4090e-02,
          2.7649e-04, 2.7119e-04],
         [4.3529e-04, 1.6949e-03, 2.8457e-03,  ..., 3.0741e-02,
          9.9917e-01, 9.9919e-01],
         [4.3529e-04, 9.9498e-01, 9.9210e-01,  ..., 9.3366e-01,
          2.7649e-04, 2.7119e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8209e-03, 1.1578e-04, 3.8750e-05,  ..., 3.3191e-03,
          9.6948e-06, 9.0839e-04],
         [2.8209e-03, 1.1578e-04, 3.8750e-05,  ..., 3.3191e-03,
          9.6948e-06, 9.0839e-04],
         [9.9154e-01, 1.1578e-04, 3.8750e-05,  ..., 9.9004e-01,
          9.6948e-06, 9.9727e-01],
         [2.8209e-03, 9.9965e-01, 9.9988e-01,  ..., 3.3191e-03,
          9.9997e-01, 9.0839e-04]],
        [[2.8187e-03, 6.0612e-05, 3.3003e-05,  ..., 5.9407e-04,
          1.7776e-03, 9.9938e-01],
         [2.8187e-03, 6.0612e-05, 3.3003e-05,  ..., 5.9407e-04,
          1.7776e-03, 1.8725e-04],
         [9.9154e-01, 6.0612e-05, 3.3003e-05,  ..., 9.9822e-01,
          9.9467e-01, 1.8725e-04],
         [2.8187e-03, 9.9982e-01, 9.9990e-01,  ..., 5.9407e-04,
          1.7776e-03, 2.4155e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 628:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9769e-01, 1.9747e-03, 1.0801e-03,  ..., 9.9764e-01,
          9.7446e-01, 2.1651e-03],
         [6.1038e-04, 2.1664e-03, 1.0801e-03,  ..., 7.3313e-04,
          5.6763e-03, 1.7255e-03],
         [1.0933e-03, 1.9747e-03, 1.0801e-03,  ..., 8.9617e-04,
          1.4185e-02, 1.9410e-03],
         [6.1038e-04, 9.9388e-01, 9.9676e-01,  ..., 7.3313e-04,
          5.6763e-03, 9.9417e-01]],
        [[9.9978e-01, 3.5976e-03, 1.3976e-03,  ..., 3.9935e-03,
          2.8710e-04, 1.1567e-04],
         [7.5012e-05, 3.3576e-03, 1.3976e-03,  ..., 3.9935e-03,
          2.8710e-04, 1.1567e-04],
         [7.5012e-05, 3.6235e-03, 1.3976e-03,  ..., 5.5553e-03,
          9.9914e-01, 9.9965e-01],
         [7.5012e-05, 9.8942e-01, 9.9581e-01,  ..., 9.8646e-01,
          2.8710e-04, 1.1567e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:46,693 [Process: 0] Synchronize training processes
2024-08-18 19:56:46,694 [Process: 0] Evaluating...
2024-08-18 19:56:46,696 [Process: 0] EPOCH 627:
2024-08-18 19:56:46,698 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:47,844 [Process: 0] Synchronize training processes
2024-08-18 19:56:47,844 [Process: 0] Evaluating...
2024-08-18 19:56:47,846 [Process: 0] EPOCH 628:
2024-08-18 19:56:47,848 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.5298e-03, 1.8744e-04, 9.9500e-05,  ..., 6.3368e-03,
          1.6646e-05, 4.8165e-03],
         [5.7295e-03, 1.8744e-04, 9.9500e-05,  ..., 5.9320e-03,
          1.6646e-05, 4.1557e-03],
         [9.8001e-01, 1.8744e-04, 9.9500e-05,  ..., 9.8180e-01,
          1.6646e-05, 9.8687e-01],
         [5.7295e-03, 9.9944e-01, 9.9970e-01,  ..., 5.9320e-03,
          9.9995e-01, 4.1557e-03]],
        [[4.1057e-03, 1.8898e-03, 2.1314e-05,  ..., 1.0944e-02,
          2.1416e-03, 9.9956e-01],
         [4.1057e-03, 2.1284e-03, 2.1314e-05,  ..., 7.4689e-03,
          2.1416e-03, 1.4716e-04],
         [9.8768e-01, 1.8898e-03, 2.1314e-05,  ..., 9.7412e-01,
          9.9358e-01, 1.4716e-04],
         [4.1057e-03, 9.9409e-01, 9.9994e-01,  ..., 7.4689e-03,
          2.1416e-03, 1.4716e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 629:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9653e-01, 1.1550e-03, 2.5167e-03,  ..., 9.9912e-01,
          9.7728e-01, 2.6748e-03],
         [9.1526e-04, 1.1550e-03, 2.5167e-03,  ..., 2.9243e-04,
          5.0806e-03, 2.6748e-03],
         [1.6439e-03, 1.1550e-03, 2.5167e-03,  ..., 2.9243e-04,
          1.2120e-02, 3.4283e-03],
         [9.1526e-04, 9.9654e-01, 9.9245e-01,  ..., 2.9243e-04,
          5.5178e-03, 9.9122e-01]],
        [[9.9976e-01, 2.2406e-03, 1.3717e-02,  ..., 1.9962e-02,
          2.2610e-04, 2.1929e-03],
         [7.8954e-05, 2.2406e-03, 6.4092e-03,  ..., 1.1367e-02,
          2.2610e-04, 2.1929e-03],
         [7.8954e-05, 2.6493e-03, 9.6789e-03,  ..., 2.1596e-02,
          9.9932e-01, 9.9342e-01],
         [7.8954e-05, 9.9287e-01, 9.7020e-01,  ..., 9.4707e-01,
          2.2610e-04, 2.1929e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.3794e-04, 4.1131e-06, 3.9102e-04,  ..., 4.8227e-03,
          1.2855e-03, 2.5274e-03],
         [6.3794e-04, 4.1131e-06, 3.9102e-04,  ..., 3.9045e-03,
          1.2855e-03, 2.2321e-03],
         [9.9809e-01, 4.1131e-06, 3.9102e-04,  ..., 9.8737e-01,
          1.2855e-03, 9.9301e-01],
         [6.3794e-04, 9.9999e-01, 9.9883e-01,  ..., 3.9045e-03,
          9.9614e-01, 2.2321e-03]],
        [[6.2020e-03, 1.6949e-04, 9.8153e-05,  ..., 7.1687e-04,
          1.2364e-03, 9.9906e-01],
         [6.2020e-03, 1.6949e-04, 9.8153e-05,  ..., 7.1687e-04,
          1.2364e-03, 2.9456e-04],
         [9.7856e-01, 1.6949e-04, 9.8153e-05,  ..., 9.9785e-01,
          9.9629e-01, 2.9456e-04],
         [9.0347e-03, 9.9949e-01, 9.9971e-01,  ..., 7.1687e-04,
          1.2364e-03, 3.4918e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 630:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:48,992 [Process: 0] Synchronize training processes
2024-08-18 19:56:48,992 [Process: 0] Evaluating...
2024-08-18 19:56:48,994 [Process: 0] EPOCH 629:
2024-08-18 19:56:48,996 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:50,138 [Process: 0] Synchronize training processes
2024-08-18 19:56:50,139 [Process: 0] Evaluating...
2024-08-18 19:56:50,141 [Process: 0] EPOCH 630:
2024-08-18 19:56:50,143 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9978e-01, 1.5578e-03, 3.4225e-03,  ..., 9.9979e-01,
          8.2075e-01, 6.3022e-04],
         [8.2335e-05, 1.5578e-03, 2.8970e-03,  ..., 6.9399e-05,
          2.1360e-02, 6.3022e-04],
         [6.7749e-05, 1.5578e-03, 3.2017e-03,  ..., 6.9399e-05,
          1.0976e-01, 6.3022e-04],
         [6.7749e-05, 9.9533e-01, 9.9048e-01,  ..., 6.9399e-05,
          4.8124e-02, 9.9811e-01]],
        [[9.9915e-01, 3.5843e-03, 4.8213e-03,  ..., 5.3594e-03,
          8.1202e-04, 6.2996e-04],
         [2.8478e-04, 2.4018e-03, 3.3497e-03,  ..., 5.3594e-03,
          8.1202e-04, 6.2996e-04],
         [2.8478e-04, 2.4018e-03, 3.5161e-03,  ..., 8.2513e-03,
          9.9756e-01, 9.9811e-01],
         [2.8478e-04, 9.9161e-01, 9.8831e-01,  ..., 9.8103e-01,
          8.1202e-04, 6.2996e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3349e-03, 3.0889e-04, 1.9389e-05,  ..., 5.5843e-04,
          2.0407e-04, 1.3222e-03],
         [1.3349e-03, 3.0889e-04, 1.9389e-05,  ..., 5.5843e-04,
          2.0407e-04, 1.3222e-03],
         [9.9600e-01, 3.0889e-04, 1.9389e-05,  ..., 9.9832e-01,
          2.0407e-04, 9.9603e-01],
         [1.3349e-03, 9.9907e-01, 9.9994e-01,  ..., 5.5843e-04,
          9.9939e-01, 1.3222e-03]],
        [[5.8714e-03, 2.5618e-04, 3.2807e-05,  ..., 3.1720e-03,
          1.0246e-03, 9.8407e-01],
         [5.4352e-03, 2.5618e-04, 3.2807e-05,  ..., 3.1720e-03,
          1.0246e-03, 3.6166e-03],
         [9.8326e-01, 2.5618e-04, 3.2807e-05,  ..., 9.9048e-01,
          9.9693e-01, 3.6166e-03],
         [5.4352e-03, 9.9923e-01, 9.9990e-01,  ..., 3.1720e-03,
          1.0246e-03, 8.6962e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 631:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9894e-01, 2.7302e-03, 3.8699e-03,  ..., 9.9498e-01,
          9.4902e-01, 9.6005e-04],
         [5.0872e-04, 2.7302e-03, 2.9999e-03,  ..., 1.6225e-03,
          1.0269e-02, 9.6005e-04],
         [2.7810e-04, 2.7302e-03, 3.6496e-03,  ..., 1.6225e-03,
          1.9395e-02, 1.0807e-03],
         [2.7810e-04, 9.9181e-01, 9.8948e-01,  ..., 1.7754e-03,
          2.1317e-02, 9.9700e-01]],
        [[9.9816e-01, 2.0384e-03, 1.5286e-03,  ..., 1.9593e-02,
          7.4350e-04, 3.8004e-04],
         [6.1146e-04, 2.0384e-03, 1.5286e-03,  ..., 9.7711e-03,
          7.4350e-04, 3.8004e-04],
         [6.1481e-04, 2.0384e-03, 1.6356e-03,  ..., 1.7849e-02,
          9.9777e-01, 9.9886e-01],
         [6.1146e-04, 9.9388e-01, 9.9531e-01,  ..., 9.5279e-01,
          7.4350e-04, 3.8004e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6538e-04, 1.2096e-04, 1.0360e-05,  ..., 5.2583e-03,
          1.5377e-05, 3.2654e-03],
         [8.6538e-04, 1.2096e-04, 1.0360e-05,  ..., 4.5306e-03,
          1.5377e-05, 3.2654e-03],
         [9.9740e-01, 1.2096e-04, 1.0360e-05,  ..., 9.8568e-01,
          1.5377e-05, 9.9020e-01],
         [8.6538e-04, 9.9964e-01, 9.9997e-01,  ..., 4.5306e-03,
          9.9995e-01, 3.2654e-03]],
        [[9.5238e-04, 7.4471e-05, 4.7894e-06,  ..., 1.2617e-03,
          2.0689e-03, 9.9942e-01],
         [9.5238e-04, 7.4471e-05, 4.7894e-06,  ..., 1.2617e-03,
          2.0689e-03, 1.8573e-04],
         [9.9714e-01, 7.4471e-05, 4.7894e-06,  ..., 9.9621e-01,
          9.9379e-01, 1.8573e-04],
         [9.5238e-04, 9.9978e-01, 9.9999e-01,  ..., 1.2617e-03,
          2.0689e-03, 2.0787e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:51,289 [Process: 0] Synchronize training processes
2024-08-18 19:56:51,289 [Process: 0] Evaluating...
2024-08-18 19:56:51,291 [Process: 0] EPOCH 631:
2024-08-18 19:56:51,293 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 632:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9918e-01, 1.0066e-03, 4.6218e-03,  ..., 9.9797e-01,
          9.3136e-01, 4.7256e-04],
         [3.2853e-04, 1.0066e-03, 4.6218e-03,  ..., 6.5530e-04,
          1.1869e-02, 4.7256e-04],
         [2.4485e-04, 1.0066e-03, 5.1232e-03,  ..., 7.2012e-04,
          3.4320e-02, 4.7256e-04],
         [2.4485e-04, 9.9698e-01, 9.8563e-01,  ..., 6.5530e-04,
          2.2455e-02, 9.9858e-01]],
        [[9.9929e-01, 1.7582e-03, 3.8945e-03,  ..., 1.4638e-02,
          4.0319e-04, 2.7278e-04],
         [2.3521e-04, 1.7582e-03, 2.3959e-03,  ..., 9.7466e-03,
          4.0319e-04, 2.7278e-04],
         [2.3521e-04, 1.7582e-03, 2.8909e-03,  ..., 1.6809e-02,
          9.9879e-01, 9.9918e-01],
         [2.3521e-04, 9.9473e-01, 9.9082e-01,  ..., 9.5881e-01,
          4.0319e-04, 2.7278e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3203e-03, 4.2455e-04, 7.0563e-06,  ..., 1.1322e-03,
          5.1327e-03, 3.2671e-03],
         [1.2748e-03, 4.2455e-04, 7.0563e-06,  ..., 1.1322e-03,
          5.1327e-03, 2.7526e-03],
         [9.9613e-01, 4.2455e-04, 7.0563e-06,  ..., 9.9660e-01,
          5.1327e-03, 9.9123e-01],
         [1.2748e-03, 9.9873e-01, 9.9998e-01,  ..., 1.1322e-03,
          9.8460e-01, 2.7526e-03]],
        [[3.1846e-04, 2.3211e-05, 5.6033e-04,  ..., 6.0615e-03,
          4.2080e-03, 9.9976e-01],
         [3.1846e-04, 2.3211e-05, 5.6033e-04,  ..., 6.0615e-03,
          4.2080e-03, 7.9383e-05],
         [9.9904e-01, 2.3211e-05, 5.6033e-04,  ..., 9.7949e-01,
          9.8738e-01, 7.9383e-05],
         [3.1846e-04, 9.9993e-01, 9.9832e-01,  ..., 8.3908e-03,
          4.2080e-03, 7.9383e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 633:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9988e-01, 2.9957e-03, 8.4888e-03,  ..., 9.9943e-01,
          9.7128e-01, 6.4053e-04],
         [4.0433e-05, 2.9957e-03, 5.7863e-03,  ..., 1.8836e-04,
          5.9880e-03, 6.4053e-04],
         [4.0433e-05, 3.3458e-03, 6.7602e-03,  ..., 1.8836e-04,
          1.1495e-02, 6.4053e-04],
         [4.0433e-05, 9.9066e-01, 9.7896e-01,  ..., 1.8836e-04,
          1.1242e-02, 9.9808e-01]],
        [[9.9923e-01, 1.0920e-02, 2.3033e-03,  ..., 8.5397e-03,
          1.8841e-04, 5.7981e-05],
         [2.5805e-04, 4.5909e-03, 2.3033e-03,  ..., 6.3965e-03,
          1.8841e-04, 5.7981e-05],
         [2.5805e-04, 5.6074e-03, 2.3033e-03,  ..., 1.0139e-02,
          9.9943e-01, 9.9983e-01],
         [2.5805e-04, 9.7888e-01, 9.9309e-01,  ..., 9.7492e-01,
          1.8841e-04, 5.7981e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:52,439 [Process: 0] Synchronize training processes
2024-08-18 19:56:52,439 [Process: 0] Evaluating...
2024-08-18 19:56:52,445 [Process: 0] EPOCH 632:
2024-08-18 19:56:52,447 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:53,590 [Process: 0] Synchronize training processes
2024-08-18 19:56:53,590 [Process: 0] Evaluating...
2024-08-18 19:56:53,592 [Process: 0] EPOCH 633:
2024-08-18 19:56:53,594 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0845e-03, 1.4359e-04, 4.2918e-05,  ..., 2.7754e-03,
          4.0843e-04, 1.7251e-03],
         [2.9445e-03, 1.4359e-04, 4.2918e-05,  ..., 2.7754e-03,
          4.0843e-04, 1.6685e-03],
         [9.9103e-01, 1.4359e-04, 4.2918e-05,  ..., 9.9167e-01,
          4.0843e-04, 9.9494e-01],
         [2.9445e-03, 9.9957e-01, 9.9987e-01,  ..., 2.7754e-03,
          9.9877e-01, 1.6685e-03]],
        [[1.3915e-03, 1.3228e-04, 4.8523e-05,  ..., 1.9314e-03,
          1.8294e-03, 9.9987e-01],
         [1.3915e-03, 1.3228e-04, 4.8523e-05,  ..., 1.9314e-03,
          1.8294e-03, 4.2257e-05],
         [9.9583e-01, 1.3228e-04, 4.8523e-05,  ..., 9.9421e-01,
          9.9451e-01, 4.2257e-05],
         [1.3915e-03, 9.9960e-01, 9.9985e-01,  ..., 1.9314e-03,
          1.8294e-03, 4.2257e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 634:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9817e-01, 1.1421e-03, 7.6586e-03,  ..., 9.9866e-01,
          8.7990e-01, 1.8090e-03],
         [8.5812e-04, 1.1421e-03, 3.7820e-03,  ..., 4.4623e-04,
          1.7788e-02, 1.8090e-03],
         [4.8636e-04, 1.1421e-03, 4.1557e-03,  ..., 4.4623e-04,
          5.0762e-02, 1.8090e-03],
         [4.8636e-04, 9.9657e-01, 9.8440e-01,  ..., 4.4623e-04,
          5.1552e-02, 9.9457e-01]],
        [[9.9644e-01, 5.6694e-04, 1.1423e-03,  ..., 1.0378e-02,
          5.2785e-04, 3.3499e-03],
         [9.9158e-04, 5.6694e-04, 9.6536e-04,  ..., 7.8344e-03,
          5.2785e-04, 3.3499e-03],
         [1.5767e-03, 5.6694e-04, 9.6536e-04,  ..., 1.0973e-02,
          9.9842e-01, 9.8995e-01],
         [9.9158e-04, 9.9830e-01, 9.9693e-01,  ..., 9.7082e-01,
          5.2785e-04, 3.3499e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4436e-03, 7.4172e-06, 3.1497e-05,  ..., 2.6767e-03,
          2.0549e-03, 4.5707e-03],
         [2.4436e-03, 7.4172e-06, 3.1497e-05,  ..., 2.6767e-03,
          2.0549e-03, 3.9973e-03],
         [9.9267e-01, 7.4172e-06, 3.1497e-05,  ..., 9.9197e-01,
          2.0549e-03, 9.8743e-01],
         [2.4436e-03, 9.9998e-01, 9.9991e-01,  ..., 2.6767e-03,
          9.9384e-01, 3.9973e-03]],
        [[1.1018e-03, 9.5679e-04, 1.9324e-04,  ..., 5.5001e-04,
          4.8264e-03, 9.9998e-01],
         [1.1018e-03, 9.5679e-04, 1.9324e-04,  ..., 5.5001e-04,
          3.9722e-03, 7.3843e-06],
         [9.9669e-01, 9.5679e-04, 1.9324e-04,  ..., 9.9835e-01,
          9.8723e-01, 7.3843e-06],
         [1.1018e-03, 9.9713e-01, 9.9942e-01,  ..., 5.5001e-04,
          3.9722e-03, 7.3843e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 635:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9513e-01, 3.3087e-03, 2.8915e-03,  ..., 9.9876e-01,
          9.2700e-01, 8.7794e-04],
         [3.0066e-03, 3.3087e-03, 2.8915e-03,  ..., 3.9403e-04,
          1.1032e-02, 8.7794e-04],
         [9.3347e-04, 4.2208e-03, 3.9185e-03,  ..., 4.4915e-04,
          4.9300e-02, 8.7794e-04],
         [9.3347e-04, 9.8916e-01, 9.9030e-01,  ..., 3.9403e-04,
          1.2672e-02, 9.9737e-01]],
        [[9.9920e-01, 1.9142e-03, 1.2611e-03,  ..., 2.7953e-03,
          2.5978e-04, 9.0260e-04],
         [2.6626e-04, 1.4817e-03, 1.2611e-03,  ..., 2.7953e-03,
          2.5978e-04, 9.0260e-04],
         [2.6626e-04, 1.4817e-03, 1.2611e-03,  ..., 3.7704e-03,
          9.9922e-01, 9.9729e-01],
         [2.6626e-04, 9.9512e-01, 9.9622e-01,  ..., 9.9064e-01,
          2.5978e-04, 9.0260e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:54,740 [Process: 0] Synchronize training processes
2024-08-18 19:56:54,740 [Process: 0] Evaluating...
2024-08-18 19:56:54,742 [Process: 0] EPOCH 634:
2024-08-18 19:56:54,744 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:55,889 [Process: 0] Synchronize training processes
2024-08-18 19:56:55,889 [Process: 0] Evaluating...
2024-08-18 19:56:55,891 [Process: 0] EPOCH 635:
2024-08-18 19:56:55,893 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2737e-03, 5.9330e-04, 3.9384e-05,  ..., 4.8596e-03,
          1.1493e-03, 1.3453e-03],
         [2.1628e-03, 5.9330e-04, 3.9384e-05,  ..., 4.2753e-03,
          1.1493e-03, 1.3453e-03],
         [9.9340e-01, 5.9330e-04, 3.9384e-05,  ..., 9.8659e-01,
          1.1493e-03, 9.9596e-01],
         [2.1628e-03, 9.9822e-01, 9.9988e-01,  ..., 4.2753e-03,
          9.9655e-01, 1.3453e-03]],
        [[2.3396e-03, 1.7165e-05, 2.4036e-04,  ..., 4.8672e-03,
          1.9707e-03, 9.9995e-01],
         [2.3396e-03, 1.7165e-05, 2.4036e-04,  ..., 4.8672e-03,
          1.9707e-03, 1.7901e-05],
         [9.9298e-01, 1.7165e-05, 2.4036e-04,  ..., 9.8540e-01,
          9.9409e-01, 1.7901e-05],
         [2.3396e-03, 9.9995e-01, 9.9928e-01,  ..., 4.8672e-03,
          1.9707e-03, 1.7901e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 636:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9931e-01, 1.4003e-03, 8.0576e-04,  ..., 9.9881e-01,
          9.4643e-01, 6.0359e-04],
         [2.2833e-04, 1.4003e-03, 8.0576e-04,  ..., 3.9664e-04,
          9.5619e-03, 6.0359e-04],
         [2.2833e-04, 1.4003e-03, 8.0576e-04,  ..., 3.9664e-04,
          2.5106e-02, 6.0359e-04],
         [2.2833e-04, 9.9580e-01, 9.9758e-01,  ..., 3.9664e-04,
          1.8903e-02, 9.9819e-01]],
        [[9.9904e-01, 1.5824e-03, 2.1982e-03,  ..., 1.9294e-02,
          3.4451e-04, 1.6734e-04],
         [3.1932e-04, 1.5824e-03, 2.1982e-03,  ..., 1.2925e-02,
          3.4451e-04, 1.6734e-04],
         [3.1932e-04, 1.6239e-03, 2.1982e-03,  ..., 2.8159e-02,
          9.9897e-01, 9.9950e-01],
         [3.1932e-04, 9.9521e-01, 9.9341e-01,  ..., 9.3962e-01,
          3.4451e-04, 1.6734e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8798e-03, 1.0889e-05, 1.9538e-03,  ..., 1.9904e-03,
          8.5145e-05, 1.0841e-02],
         [1.4593e-03, 1.0889e-05, 1.9538e-03,  ..., 1.9904e-03,
          8.5145e-05, 7.5000e-03],
         [9.9520e-01, 1.0889e-05, 1.9538e-03,  ..., 9.9403e-01,
          8.5145e-05, 9.7362e-01],
         [1.4593e-03, 9.9997e-01, 9.9414e-01,  ..., 1.9904e-03,
          9.9974e-01, 8.0428e-03]],
        [[3.0100e-03, 3.2917e-03, 1.9641e-04,  ..., 9.7288e-03,
          4.3172e-03, 9.9950e-01],
         [3.0100e-03, 3.2917e-03, 1.9641e-04,  ..., 7.3862e-03,
          4.3172e-03, 1.6728e-04],
         [9.9097e-01, 3.2917e-03, 1.9641e-04,  ..., 9.7479e-01,
          9.8671e-01, 1.6728e-04],
         [3.0100e-03, 9.9012e-01, 9.9941e-01,  ..., 8.0903e-03,
          4.6580e-03, 1.6728e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 637:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:57,035 [Process: 0] Synchronize training processes
2024-08-18 19:56:57,036 [Process: 0] Evaluating...
2024-08-18 19:56:57,038 [Process: 0] EPOCH 636:
2024-08-18 19:56:57,040 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:56:58,187 [Process: 0] Synchronize training processes
2024-08-18 19:56:58,187 [Process: 0] Evaluating...
2024-08-18 19:56:58,189 [Process: 0] EPOCH 637:
2024-08-18 19:56:58,191 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9928e-01, 2.2151e-03, 1.2955e-03,  ..., 9.9518e-01,
          8.7640e-01, 1.4749e-03],
         [2.4035e-04, 2.0463e-03, 1.1244e-03,  ..., 1.6057e-03,
          1.9100e-02, 1.1768e-03],
         [2.4035e-04, 2.0463e-03, 1.1244e-03,  ..., 1.6057e-03,
          5.5320e-02, 1.1768e-03],
         [2.4035e-04, 9.9369e-01, 9.9646e-01,  ..., 1.6057e-03,
          4.9181e-02, 9.9617e-01]],
        [[9.9906e-01, 3.9589e-03, 4.0462e-03,  ..., 8.9691e-04,
          6.7454e-04, 6.0569e-04],
         [2.6324e-04, 2.2814e-03, 3.3595e-03,  ..., 8.9691e-04,
          6.7454e-04, 6.0569e-04],
         [4.0971e-04, 2.5544e-03, 3.3595e-03,  ..., 8.9691e-04,
          9.9798e-01, 9.9818e-01],
         [2.6324e-04, 9.9121e-01, 9.8923e-01,  ..., 9.9731e-01,
          6.7454e-04, 6.0569e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6812e-03, 1.3735e-04, 2.0571e-05,  ..., 5.3563e-03,
          3.2190e-05, 8.7793e-04],
         [1.6812e-03, 1.3735e-04, 2.0571e-05,  ..., 3.9959e-03,
          3.2190e-05, 8.7793e-04],
         [9.9496e-01, 1.3735e-04, 2.0571e-05,  ..., 9.8665e-01,
          3.2190e-05, 9.9737e-01],
         [1.6812e-03, 9.9959e-01, 9.9994e-01,  ..., 3.9959e-03,
          9.9990e-01, 8.7793e-04]],
        [[1.1157e-03, 3.4444e-03, 8.9313e-04,  ..., 3.6063e-03,
          3.6146e-03, 9.9975e-01],
         [1.1157e-03, 3.4444e-03, 8.9313e-04,  ..., 3.6063e-03,
          3.6146e-03, 8.4700e-05],
         [9.9665e-01, 3.4444e-03, 8.9313e-04,  ..., 9.8918e-01,
          9.8916e-01, 8.4700e-05],
         [1.1157e-03, 9.8967e-01, 9.9732e-01,  ..., 3.6063e-03,
          3.6146e-03, 8.4700e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 638:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8640e-01, 7.8105e-04, 3.4910e-03,  ..., 9.9809e-01,
          9.5721e-01, 5.7289e-04],
         [1.0722e-02, 7.8105e-04, 3.4227e-03,  ..., 6.3506e-04,
          6.6101e-03, 5.7289e-04],
         [1.4411e-03, 7.8105e-04, 3.6009e-03,  ..., 6.3506e-04,
          2.9572e-02, 5.7289e-04],
         [1.4411e-03, 9.9766e-01, 9.8949e-01,  ..., 6.3506e-04,
          6.6101e-03, 9.9828e-01]],
        [[9.9961e-01, 7.4522e-03, 1.9019e-03,  ..., 3.0438e-03,
          4.1346e-04, 3.3473e-04],
         [1.1201e-04, 5.2284e-03, 1.9019e-03,  ..., 3.0438e-03,
          4.1346e-04, 3.3473e-04],
         [1.6699e-04, 7.7117e-03, 1.9626e-03,  ..., 3.0984e-03,
          9.9876e-01, 9.9900e-01],
         [1.1201e-04, 9.7961e-01, 9.9423e-01,  ..., 9.9081e-01,
          4.1346e-04, 3.3473e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2655e-03, 4.9681e-05, 1.1514e-04,  ..., 5.6068e-03,
          1.8802e-05, 6.7946e-03],
         [2.2655e-03, 4.9681e-05, 1.1514e-04,  ..., 5.3866e-03,
          1.8802e-05, 4.9848e-03],
         [9.9320e-01, 4.9681e-05, 1.1514e-04,  ..., 9.8362e-01,
          1.8802e-05, 9.8324e-01],
         [2.2655e-03, 9.9985e-01, 9.9965e-01,  ..., 5.3866e-03,
          9.9994e-01, 4.9848e-03]],
        [[9.6600e-04, 1.6564e-04, 5.4798e-05,  ..., 2.5615e-03,
          3.8454e-04, 9.9940e-01],
         [9.6600e-04, 1.6564e-04, 5.4798e-05,  ..., 2.5615e-03,
          3.8454e-04, 2.0112e-04],
         [9.9710e-01, 1.6564e-04, 5.4798e-05,  ..., 9.9232e-01,
          9.9885e-01, 2.0112e-04],
         [9.6600e-04, 9.9950e-01, 9.9984e-01,  ..., 2.5615e-03,
          3.8454e-04, 2.0112e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:56:59,333 [Process: 0] Synchronize training processes
2024-08-18 19:56:59,334 [Process: 0] Evaluating...
2024-08-18 19:56:59,335 [Process: 0] EPOCH 638:
2024-08-18 19:56:59,337 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 639:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9996e-01, 1.2770e-03, 2.4972e-03,  ..., 9.9389e-01,
          9.0335e-01, 6.3779e-04],
         [1.2548e-05, 1.7012e-03, 2.0265e-03,  ..., 1.4805e-03,
          1.5775e-02, 6.3779e-04],
         [1.2548e-05, 1.2770e-03, 2.4632e-03,  ..., 3.1446e-03,
          2.7928e-02, 6.3779e-04],
         [1.2548e-05, 9.9574e-01, 9.9301e-01,  ..., 1.4805e-03,
          5.2952e-02, 9.9809e-01]],
        [[9.9953e-01, 1.9458e-03, 7.6452e-04,  ..., 4.4779e-03,
          4.6905e-04, 1.8170e-04],
         [1.5698e-04, 1.9458e-03, 7.6452e-04,  ..., 3.6794e-03,
          4.6905e-04, 1.8170e-04],
         [1.5698e-04, 1.9458e-03, 7.6452e-04,  ..., 6.0091e-03,
          9.9859e-01, 9.9945e-01],
         [1.5698e-04, 9.9416e-01, 9.9771e-01,  ..., 9.8583e-01,
          4.6905e-04, 1.8170e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3707e-03, 8.9193e-04, 1.5462e-04,  ..., 2.4540e-03,
          3.6885e-04, 1.7119e-03],
         [1.6831e-03, 8.9193e-04, 1.5462e-04,  ..., 2.2963e-03,
          3.6885e-04, 1.7119e-03],
         [9.9426e-01, 8.9193e-04, 1.5462e-04,  ..., 9.9295e-01,
          3.6885e-04, 9.9486e-01],
         [1.6831e-03, 9.9732e-01, 9.9954e-01,  ..., 2.2963e-03,
          9.9889e-01, 1.7119e-03]],
        [[1.3371e-03, 3.7966e-04, 1.0869e-05,  ..., 2.9160e-03,
          3.5722e-04, 9.9630e-01],
         [1.3371e-03, 3.7966e-04, 1.0869e-05,  ..., 2.9160e-03,
          3.5722e-04, 1.0968e-03],
         [9.9599e-01, 3.7966e-04, 1.0869e-05,  ..., 9.9125e-01,
          9.9893e-01, 1.0968e-03],
         [1.3371e-03, 9.9886e-01, 9.9997e-01,  ..., 2.9160e-03,
          3.5722e-04, 1.5111e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 640:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9978e-01, 2.1045e-03, 9.5599e-04,  ..., 9.9913e-01,
          9.6431e-01, 4.7198e-04],
         [7.2388e-05, 1.7698e-03, 9.5599e-04,  ..., 2.9020e-04,
          7.2892e-03, 4.7198e-04],
         [7.2388e-05, 2.1668e-03, 9.5599e-04,  ..., 2.9020e-04,
          1.1292e-02, 4.7198e-04],
         [7.2388e-05, 9.9396e-01, 9.9713e-01,  ..., 2.9020e-04,
          1.7109e-02, 9.9858e-01]],
        [[9.9841e-01, 2.3105e-03, 1.7106e-03,  ..., 5.0663e-03,
          5.2481e-05, 1.2675e-04],
         [5.2960e-04, 1.6214e-03, 1.7106e-03,  ..., 3.6648e-03,
          5.2481e-05, 1.2675e-04],
         [5.2960e-04, 1.6214e-03, 1.7106e-03,  ..., 4.6188e-03,
          9.9984e-01, 9.9962e-01],
         [5.2960e-04, 9.9445e-01, 9.9487e-01,  ..., 9.8665e-01,
          5.2481e-05, 1.2675e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:57:00,481 [Process: 0] Synchronize training processes
2024-08-18 19:57:00,481 [Process: 0] Evaluating...
2024-08-18 19:57:00,483 [Process: 0] EPOCH 639:
2024-08-18 19:57:00,485 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:01,630 [Process: 0] Synchronize training processes
2024-08-18 19:57:01,630 [Process: 0] Evaluating...
2024-08-18 19:57:01,632 [Process: 0] EPOCH 640:
2024-08-18 19:57:01,633 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.5618e-04, 1.0004e-03, 1.0529e-05,  ..., 2.7113e-03,
          2.8378e-04, 2.1073e-03],
         [6.5618e-04, 1.0004e-03, 1.0529e-05,  ..., 2.7113e-03,
          2.0805e-04, 1.5715e-03],
         [9.9803e-01, 1.0004e-03, 1.0529e-05,  ..., 9.9187e-01,
          2.0805e-04, 9.9475e-01],
         [6.5618e-04, 9.9700e-01, 9.9997e-01,  ..., 2.7113e-03,
          9.9930e-01, 1.5715e-03]],
        [[4.6338e-03, 1.4699e-04, 3.4429e-04,  ..., 2.6202e-03,
          1.9398e-03, 9.9953e-01],
         [4.6338e-03, 1.4699e-04, 3.4429e-04,  ..., 2.6202e-03,
          1.9398e-03, 1.5593e-04],
         [9.8353e-01, 1.4699e-04, 3.4429e-04,  ..., 9.9214e-01,
          9.9418e-01, 1.5593e-04],
         [7.2007e-03, 9.9956e-01, 9.9897e-01,  ..., 2.6202e-03,
          1.9398e-03, 1.5593e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 641:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9960e-01, 1.7349e-03, 1.9308e-03,  ..., 9.9990e-01,
          9.8979e-01, 4.9117e-03],
         [1.3219e-04, 1.6493e-03, 1.9308e-03,  ..., 3.3636e-05,
          2.2696e-03, 2.5769e-03],
         [1.3219e-04, 1.6493e-03, 2.4026e-03,  ..., 3.3636e-05,
          5.6666e-03, 2.7066e-03],
         [1.3219e-04, 9.9497e-01, 9.9374e-01,  ..., 3.3636e-05,
          2.2696e-03, 9.8980e-01]],
        [[9.9867e-01, 9.5122e-04, 4.2380e-04,  ..., 3.5477e-03,
          5.5645e-05, 1.5413e-04],
         [4.4194e-04, 9.5122e-04, 4.2380e-04,  ..., 3.9670e-03,
          5.5645e-05, 1.5413e-04],
         [4.4194e-04, 1.0255e-03, 4.2380e-04,  ..., 4.6240e-03,
          9.9983e-01, 9.9954e-01],
         [4.4194e-04, 9.9707e-01, 9.9873e-01,  ..., 9.8786e-01,
          5.5645e-05, 1.5413e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7695e-04, 2.0466e-04, 6.4718e-05,  ..., 2.2672e-03,
          1.1065e-03, 6.2005e-03],
         [8.7695e-04, 2.0466e-04, 6.4718e-05,  ..., 2.2672e-03,
          1.1065e-03, 2.5916e-03],
         [9.9737e-01, 2.0466e-04, 6.4718e-05,  ..., 9.9320e-01,
          1.1065e-03, 9.8862e-01],
         [8.7695e-04, 9.9939e-01, 9.9981e-01,  ..., 2.2672e-03,
          9.9668e-01, 2.5916e-03]],
        [[4.4160e-04, 1.1252e-03, 1.4070e-04,  ..., 1.5460e-02,
          2.0402e-03, 9.9722e-01],
         [4.4160e-04, 1.1252e-03, 1.4070e-04,  ..., 1.3320e-02,
          2.0402e-03, 9.2037e-04],
         [9.9868e-01, 1.1252e-03, 1.4070e-04,  ..., 9.4688e-01,
          9.9388e-01, 9.2037e-04],
         [4.4160e-04, 9.9662e-01, 9.9958e-01,  ..., 2.4335e-02,
          2.0402e-03, 9.4053e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 642:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9963e-01, 3.6356e-03, 1.0763e-03,  ..., 9.9975e-01,
          9.7705e-01, 2.2226e-04],
         [1.2193e-04, 3.6356e-03, 1.0763e-03,  ..., 8.2406e-05,
          4.1860e-03, 2.2226e-04],
         [1.3026e-04, 3.8828e-03, 1.0763e-03,  ..., 8.2406e-05,
          1.4579e-02, 2.2226e-04],
         [1.2193e-04, 9.8885e-01, 9.9677e-01,  ..., 8.2406e-05,
          4.1860e-03, 9.9933e-01]],
        [[9.9886e-01, 1.1470e-03, 6.8983e-03,  ..., 9.7123e-03,
          9.5222e-04, 1.8159e-05],
         [3.7856e-04, 1.1470e-03, 3.3016e-03,  ..., 5.4032e-03,
          9.5222e-04, 1.8159e-05],
         [3.7856e-04, 1.3421e-03, 4.7635e-03,  ..., 1.0705e-02,
          9.9714e-01, 9.9995e-01],
         [3.7856e-04, 9.9636e-01, 9.8504e-01,  ..., 9.7418e-01,
          9.5222e-04, 1.8159e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:57:02,776 [Process: 0] Synchronize training processes
2024-08-18 19:57:02,776 [Process: 0] Evaluating...
2024-08-18 19:57:02,778 [Process: 0] EPOCH 641:
2024-08-18 19:57:02,780 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:03,922 [Process: 0] Synchronize training processes
2024-08-18 19:57:03,923 [Process: 0] Evaluating...
2024-08-18 19:57:03,930 [Process: 0] EPOCH 642:
2024-08-18 19:57:03,931 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0950e-03, 5.3537e-05, 1.0719e-04,  ..., 1.7527e-03,
          8.1001e-05, 8.3427e-04],
         [1.0869e-03, 5.3537e-05, 1.0719e-04,  ..., 1.7527e-03,
          8.1001e-05, 8.3427e-04],
         [9.9673e-01, 5.3537e-05, 1.0719e-04,  ..., 9.9474e-01,
          8.1001e-05, 9.9750e-01],
         [1.0869e-03, 9.9984e-01, 9.9968e-01,  ..., 1.7527e-03,
          9.9976e-01, 8.3427e-04]],
        [[8.7120e-04, 3.5288e-04, 2.0596e-05,  ..., 1.9019e-03,
          4.9512e-03, 9.9949e-01],
         [8.7120e-04, 3.5288e-04, 2.0596e-05,  ..., 1.9019e-03,
          4.1900e-03, 1.6927e-04],
         [9.9739e-01, 3.5288e-04, 2.0596e-05,  ..., 9.9429e-01,
          9.8667e-01, 1.6927e-04],
         [8.7120e-04, 9.9894e-01, 9.9994e-01,  ..., 1.9019e-03,
          4.1900e-03, 1.6927e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 643:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9637e-01, 3.4103e-04, 1.4850e-03,  ..., 9.9879e-01,
          9.7586e-01, 1.0634e-03],
         [1.2087e-03, 3.4103e-04, 1.4850e-03,  ..., 3.7219e-04,
          4.0994e-03, 1.0634e-03],
         [1.2087e-03, 3.4103e-04, 1.4850e-03,  ..., 4.6430e-04,
          1.5939e-02, 1.0634e-03],
         [1.2087e-03, 9.9898e-01, 9.9554e-01,  ..., 3.7219e-04,
          4.0994e-03, 9.9681e-01]],
        [[9.9967e-01, 6.9048e-04, 9.6039e-04,  ..., 3.5199e-03,
          2.3041e-04, 8.0673e-05],
         [1.0986e-04, 6.9048e-04, 9.6039e-04,  ..., 3.5199e-03,
          2.3041e-04, 8.0673e-05],
         [1.0986e-04, 6.9048e-04, 9.6039e-04,  ..., 4.0822e-03,
          9.9931e-01, 9.9976e-01],
         [1.0986e-04, 9.9793e-01, 9.9712e-01,  ..., 9.8888e-01,
          2.3041e-04, 8.0673e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0450e-03, 7.5038e-06, 1.4354e-04,  ..., 2.0404e-03,
          7.7704e-05, 1.3327e-03],
         [1.0450e-03, 7.5038e-06, 1.4354e-04,  ..., 2.0404e-03,
          7.7704e-05, 1.3327e-03],
         [9.9686e-01, 7.5038e-06, 1.4354e-04,  ..., 9.9388e-01,
          7.7704e-05, 9.9600e-01],
         [1.0450e-03, 9.9998e-01, 9.9957e-01,  ..., 2.0404e-03,
          9.9977e-01, 1.3327e-03]],
        [[2.7334e-03, 1.4303e-04, 1.8353e-05,  ..., 9.6771e-03,
          2.9705e-03, 9.9709e-01],
         [2.7334e-03, 1.4303e-04, 1.8353e-05,  ..., 8.6888e-03,
          2.1092e-03, 7.7726e-04],
         [9.9180e-01, 1.4303e-04, 1.8353e-05,  ..., 9.6935e-01,
          9.9281e-01, 7.7726e-04],
         [2.7334e-03, 9.9957e-01, 9.9994e-01,  ..., 1.2283e-02,
          2.1092e-03, 1.3528e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 644:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:05,078 [Process: 0] Synchronize training processes
2024-08-18 19:57:05,079 [Process: 0] Evaluating...
2024-08-18 19:57:05,081 [Process: 0] EPOCH 643:
2024-08-18 19:57:05,082 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:06,226 [Process: 0] Synchronize training processes
2024-08-18 19:57:06,226 [Process: 0] Evaluating...
2024-08-18 19:57:06,228 [Process: 0] EPOCH 644:
2024-08-18 19:57:06,230 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9850e-01, 1.6214e-03, 1.3739e-03,  ..., 9.9989e-01,
          8.9404e-01, 6.9070e-04],
         [5.3140e-04, 1.6214e-03, 1.4852e-03,  ..., 3.5361e-05,
          1.1438e-02, 6.9070e-04],
         [4.8399e-04, 1.6214e-03, 1.3777e-03,  ..., 3.5361e-05,
          8.3081e-02, 6.9070e-04],
         [4.8399e-04, 9.9514e-01, 9.9576e-01,  ..., 3.5361e-05,
          1.1438e-02, 9.9793e-01]],
        [[9.9775e-01, 1.0843e-03, 2.0588e-03,  ..., 2.5318e-03,
          4.3243e-04, 1.9932e-04],
         [7.4492e-04, 1.0843e-03, 2.0588e-03,  ..., 2.5318e-03,
          4.3243e-04, 1.9932e-04],
         [7.5996e-04, 1.0941e-03, 2.1569e-03,  ..., 3.2728e-03,
          9.9870e-01, 9.9940e-01],
         [7.4492e-04, 9.9674e-01, 9.9373e-01,  ..., 9.9166e-01,
          4.3243e-04, 1.9932e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7833e-03, 5.9956e-06, 5.3080e-06,  ..., 2.3079e-03,
          2.5998e-04, 1.4694e-03],
         [1.7833e-03, 5.9956e-06, 5.3080e-06,  ..., 2.3079e-03,
          2.5998e-04, 1.4694e-03],
         [9.9465e-01, 5.9956e-06, 5.3080e-06,  ..., 9.9308e-01,
          2.5998e-04, 9.9559e-01],
         [1.7833e-03, 9.9998e-01, 9.9998e-01,  ..., 2.3079e-03,
          9.9922e-01, 1.4694e-03]],
        [[9.1620e-03, 5.1543e-05, 9.1648e-05,  ..., 3.8467e-02,
          8.8399e-04, 9.9995e-01],
         [8.0580e-03, 5.1543e-05, 9.1648e-05,  ..., 2.2985e-02,
          8.8399e-04, 1.6053e-05],
         [9.7128e-01, 5.1543e-05, 9.1648e-05,  ..., 8.8718e-01,
          9.9735e-01, 1.6053e-05],
         [1.1505e-02, 9.9985e-01, 9.9973e-01,  ..., 5.1366e-02,
          8.8399e-04, 1.6053e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 645:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9967e-01, 1.0341e-03, 7.1195e-04,  ..., 9.9969e-01,
          9.8962e-01, 1.0808e-03],
         [1.1149e-04, 1.0341e-03, 7.1195e-04,  ..., 1.0184e-04,
          1.6789e-03, 1.0808e-03],
         [1.1149e-04, 1.0341e-03, 7.1195e-04,  ..., 1.0184e-04,
          7.0250e-03, 1.0808e-03],
         [1.1149e-04, 9.9690e-01, 9.9786e-01,  ..., 1.0184e-04,
          1.6789e-03, 9.9676e-01]],
        [[9.9812e-01, 1.6187e-03, 1.6652e-03,  ..., 1.0907e-03,
          5.6003e-04, 1.0253e-04],
         [6.2668e-04, 1.6187e-03, 1.6652e-03,  ..., 1.0907e-03,
          5.6003e-04, 1.0253e-04],
         [6.2668e-04, 1.6187e-03, 1.6657e-03,  ..., 1.0907e-03,
          9.9832e-01, 9.9969e-01],
         [6.2668e-04, 9.9514e-01, 9.9500e-01,  ..., 9.9673e-01,
          5.6003e-04, 1.0253e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:57:07,372 [Process: 0] Synchronize training processes
2024-08-18 19:57:07,372 [Process: 0] Evaluating...
2024-08-18 19:57:07,374 [Process: 0] EPOCH 645:
2024-08-18 19:57:07,376 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1340e-03, 5.4685e-07, 6.8649e-04,  ..., 6.9901e-04,
          1.5598e-05, 9.5155e-04],
         [1.7488e-03, 5.4685e-07, 6.8649e-04,  ..., 6.9901e-04,
          1.5598e-05, 9.5155e-04],
         [9.9437e-01, 5.4685e-07, 6.8649e-04,  ..., 9.9790e-01,
          1.5598e-05, 9.9715e-01],
         [1.7488e-03, 1.0000e+00, 9.9794e-01,  ..., 6.9901e-04,
          9.9995e-01, 9.5155e-04]],
        [[1.6279e-03, 4.0121e-03, 4.2339e-04,  ..., 5.0324e-03,
          4.5489e-03, 9.9997e-01],
         [1.6279e-03, 4.0121e-03, 4.2339e-04,  ..., 5.0324e-03,
          4.1407e-03, 9.1682e-06],
         [9.9512e-01, 4.0121e-03, 4.2339e-04,  ..., 9.8490e-01,
          9.8717e-01, 9.1682e-06],
         [1.6279e-03, 9.8796e-01, 9.9873e-01,  ..., 5.0324e-03,
          4.1407e-03, 9.1682e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 646:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9871e-01, 3.9147e-03, 1.5863e-03,  ..., 9.9865e-01,
          9.7637e-01, 2.4944e-03],
         [3.5490e-04, 3.9147e-03, 1.5863e-03,  ..., 4.5122e-04,
          4.4681e-03, 2.4944e-03],
         [5.7724e-04, 5.0459e-03, 1.5863e-03,  ..., 4.5122e-04,
          1.4690e-02, 3.6652e-03],
         [3.5490e-04, 9.8712e-01, 9.9524e-01,  ..., 4.5122e-04,
          4.4681e-03, 9.9135e-01]],
        [[9.9691e-01, 9.9815e-04, 4.9938e-03,  ..., 1.9524e-03,
          3.2728e-04, 2.9336e-05],
         [9.3251e-04, 9.9815e-04, 3.0986e-03,  ..., 1.9524e-03,
          3.2728e-04, 2.9336e-05],
         [9.3251e-04, 9.9815e-04, 3.5012e-03,  ..., 2.1751e-03,
          9.9902e-01, 9.9991e-01],
         [1.2240e-03, 9.9701e-01, 9.8841e-01,  ..., 9.9392e-01,
          3.2728e-04, 2.9336e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5122e-03, 9.0157e-05, 2.6322e-05,  ..., 1.5068e-03,
          2.4569e-04, 2.1210e-03],
         [1.4682e-03, 9.0157e-05, 2.6322e-05,  ..., 1.5068e-03,
          2.4569e-04, 2.1210e-03],
         [9.9555e-01, 9.0157e-05, 2.6322e-05,  ..., 9.9548e-01,
          2.4569e-04, 9.9364e-01],
         [1.4682e-03, 9.9973e-01, 9.9992e-01,  ..., 1.5068e-03,
          9.9926e-01, 2.1210e-03]],
        [[8.5250e-04, 2.2474e-04, 3.2463e-04,  ..., 6.0889e-03,
          4.0801e-04, 9.9484e-01],
         [8.5250e-04, 2.2474e-04, 2.8820e-04,  ..., 6.0889e-03,
          4.0801e-04, 1.2993e-03],
         [9.9744e-01, 2.2474e-04, 2.8820e-04,  ..., 9.7907e-01,
          9.9878e-01, 1.2993e-03],
         [8.5250e-04, 9.9933e-01, 9.9910e-01,  ..., 8.7499e-03,
          4.0801e-04, 2.5578e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 647:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-18 19:57:08,518 [Process: 0] Synchronize training processes
2024-08-18 19:57:08,519 [Process: 0] Evaluating...
2024-08-18 19:57:08,520 [Process: 0] EPOCH 646:
2024-08-18 19:57:08,522 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:09,668 [Process: 0] Synchronize training processes
2024-08-18 19:57:09,668 [Process: 0] Evaluating...
2024-08-18 19:57:09,670 [Process: 0] EPOCH 647:
2024-08-18 19:57:09,672 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9936e-01, 3.7726e-03, 5.1345e-04,  ..., 9.9961e-01,
          9.3089e-01, 1.1542e-03],
         [2.1247e-04, 3.7726e-03, 5.1345e-04,  ..., 1.2927e-04,
          1.0364e-02, 1.1542e-03],
         [2.1247e-04, 5.2315e-03, 5.1345e-04,  ..., 1.2927e-04,
          4.5681e-02, 1.1542e-03],
         [2.1247e-04, 9.8722e-01, 9.9846e-01,  ..., 1.2927e-04,
          1.3065e-02, 9.9654e-01]],
        [[9.9838e-01, 3.6607e-03, 3.8783e-04,  ..., 9.1307e-03,
          2.3754e-04, 1.8703e-04],
         [5.0569e-04, 3.6413e-03, 3.8783e-04,  ..., 7.1173e-03,
          2.3754e-04, 1.8703e-04],
         [6.0744e-04, 3.9528e-03, 3.8783e-04,  ..., 1.0546e-02,
          9.9929e-01, 9.9944e-01],
         [5.0569e-04, 9.8875e-01, 9.9884e-01,  ..., 9.7321e-01,
          2.3754e-04, 1.8703e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6283e-04, 1.5083e-04, 1.3901e-05,  ..., 2.5928e-03,
          3.3150e-05, 4.5010e-03],
         [8.6283e-04, 1.5083e-04, 1.3901e-05,  ..., 2.5928e-03,
          3.3150e-05, 4.5010e-03],
         [9.9741e-01, 1.5083e-04, 1.3901e-05,  ..., 9.9222e-01,
          3.3150e-05, 9.8548e-01],
         [8.6283e-04, 9.9955e-01, 9.9996e-01,  ..., 2.5928e-03,
          9.9990e-01, 5.5228e-03]],
        [[2.3011e-03, 7.7467e-04, 2.9910e-05,  ..., 4.0247e-03,
          9.8790e-04, 9.9990e-01],
         [2.3011e-03, 7.7467e-04, 2.9910e-05,  ..., 4.0247e-03,
          9.8790e-04, 3.3511e-05],
         [9.9310e-01, 7.7467e-04, 2.9910e-05,  ..., 9.8793e-01,
          9.9704e-01, 3.3511e-05],
         [2.3011e-03, 9.9768e-01, 9.9991e-01,  ..., 4.0247e-03,
          9.8790e-04, 3.3511e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 648:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9783e-01, 3.9896e-03, 7.9763e-04,  ..., 9.9922e-01,
          9.8999e-01, 1.1194e-03],
         [6.4500e-04, 4.8761e-03, 7.9763e-04,  ..., 2.5851e-04,
          2.1561e-03, 1.1194e-03],
         [8.7740e-04, 4.2071e-03, 7.9763e-04,  ..., 2.5851e-04,
          5.6975e-03, 1.1194e-03],
         [6.4500e-04, 9.8693e-01, 9.9761e-01,  ..., 2.5851e-04,
          2.1561e-03, 9.9664e-01]],
        [[9.9858e-01, 1.1575e-03, 1.1681e-03,  ..., 4.4428e-03,
          4.4396e-05, 2.0345e-04],
         [4.7438e-04, 1.1796e-03, 1.1681e-03,  ..., 4.4428e-03,
          4.4396e-05, 2.0345e-04],
         [4.7438e-04, 1.1575e-03, 1.2079e-03,  ..., 7.9439e-03,
          9.9987e-01, 9.9939e-01],
         [4.7438e-04, 9.9651e-01, 9.9646e-01,  ..., 9.8317e-01,
          4.4396e-05, 2.0345e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1836e-04, 7.1696e-04, 1.4178e-06,  ..., 1.3854e-03,
          1.9154e-04, 3.6736e-03],
         [7.1836e-04, 7.1696e-04, 1.4178e-06,  ..., 1.3854e-03,
          1.9154e-04, 2.4312e-03],
         [9.9784e-01, 7.1696e-04, 1.4178e-06,  ..., 9.9584e-01,
          1.9154e-04, 9.9146e-01],
         [7.1836e-04, 9.9785e-01, 1.0000e+00,  ..., 1.3854e-03,
          9.9943e-01, 2.4312e-03]],
        [[8.2036e-03, 3.2792e-04, 5.9225e-05,  ..., 2.3878e-03,
          2.7138e-03, 9.9940e-01],
         [8.2036e-03, 3.2792e-04, 5.9225e-05,  ..., 2.3878e-03,
          2.7138e-03, 1.9045e-04],
         [9.7195e-01, 3.2792e-04, 5.9225e-05,  ..., 9.9284e-01,
          9.9186e-01, 1.9045e-04],
         [1.1639e-02, 9.9902e-01, 9.9982e-01,  ..., 2.3878e-03,
          2.7138e-03, 2.1792e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 649:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:10,817 [Process: 0] Synchronize training processes
2024-08-18 19:57:10,817 [Process: 0] Evaluating...
2024-08-18 19:57:10,819 [Process: 0] EPOCH 648:
2024-08-18 19:57:10,821 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:11,965 [Process: 0] Synchronize training processes
2024-08-18 19:57:11,966 [Process: 0] Evaluating...
2024-08-18 19:57:11,968 [Process: 0] EPOCH 649:
2024-08-18 19:57:11,969 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9894e-01, 5.1112e-04, 7.3160e-03,  ..., 9.9939e-01,
          9.8213e-01, 2.1109e-03],
         [3.5407e-04, 5.1112e-04, 5.1558e-03,  ..., 2.0300e-04,
          3.5105e-03, 2.1109e-03],
         [3.5407e-04, 5.1112e-04, 8.2417e-03,  ..., 2.0300e-04,
          1.0851e-02, 2.1109e-03],
         [3.5407e-04, 9.9847e-01, 9.7929e-01,  ..., 2.0300e-04,
          3.5105e-03, 9.9367e-01]],
        [[9.6612e-01, 1.1050e-03, 2.0451e-03,  ..., 4.5268e-03,
          2.8000e-04, 1.0447e-04],
         [7.9517e-03, 1.1050e-03, 2.0451e-03,  ..., 5.3014e-03,
          2.8000e-04, 1.0447e-04],
         [1.8039e-02, 1.1050e-03, 2.0451e-03,  ..., 5.6013e-03,
          9.9916e-01, 9.9969e-01],
         [7.8847e-03, 9.9669e-01, 9.9386e-01,  ..., 9.8457e-01,
          2.8000e-04, 1.0447e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9843e-03, 2.3926e-05, 9.4170e-06,  ..., 2.9155e-03,
          6.2891e-05, 1.8517e-03],
         [2.7110e-03, 2.3926e-05, 9.4170e-06,  ..., 2.9155e-03,
          6.2891e-05, 1.8517e-03],
         [9.9159e-01, 2.3926e-05, 9.4170e-06,  ..., 9.9125e-01,
          6.2891e-05, 9.9445e-01],
         [2.7110e-03, 9.9993e-01, 9.9997e-01,  ..., 2.9155e-03,
          9.9981e-01, 1.8517e-03]],
        [[5.5481e-03, 1.1927e-04, 7.6695e-05,  ..., 2.3911e-03,
          1.8054e-03, 9.9990e-01],
         [5.5481e-03, 1.1927e-04, 7.6695e-05,  ..., 2.3911e-03,
          1.8054e-03, 3.4208e-05],
         [9.8110e-01, 1.1927e-04, 7.6695e-05,  ..., 9.9283e-01,
          9.9458e-01, 3.4208e-05],
         [7.8009e-03, 9.9964e-01, 9.9977e-01,  ..., 2.3911e-03,
          1.8054e-03, 3.4208e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 650:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9974e-01, 2.7760e-03, 9.3714e-04,  ..., 9.9853e-01,
          9.6514e-01, 1.1842e-03],
         [8.7613e-05, 2.7475e-03, 9.0868e-04,  ..., 4.3553e-04,
          6.7703e-03, 1.1842e-03],
         [8.7613e-05, 3.2488e-03, 9.0868e-04,  ..., 5.9888e-04,
          2.0240e-02, 1.1842e-03],
         [8.7613e-05, 9.9123e-01, 9.9725e-01,  ..., 4.3553e-04,
          7.8485e-03, 9.9645e-01]],
        [[9.9948e-01, 2.3483e-03, 3.6923e-03,  ..., 1.9090e-03,
          4.4173e-05, 9.4142e-04],
         [1.5315e-04, 3.5976e-03, 3.6923e-03,  ..., 1.9090e-03,
          4.4173e-05, 9.4142e-04],
         [2.1166e-04, 2.3483e-03, 3.6923e-03,  ..., 2.2397e-03,
          9.9987e-01, 9.9718e-01],
         [1.5315e-04, 9.9171e-01, 9.8892e-01,  ..., 9.9394e-01,
          4.4173e-05, 9.4142e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 19:57:13,113 [Process: 0] Synchronize training processes
2024-08-18 19:57:13,114 [Process: 0] Evaluating...
2024-08-18 19:57:13,115 [Process: 0] EPOCH 650:
2024-08-18 19:57:13,117 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:14,261 [Process: 0] Synchronize training processes
2024-08-18 19:57:14,261 [Process: 0] Evaluating...
2024-08-18 19:57:14,263 [Process: 0] EPOCH 651:
2024-08-18 19:57:14,265 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0035e-03, 2.0318e-05, 3.2131e-04,  ..., 5.1721e-03,
          9.8779e-04, 7.4249e-04],
         [1.0035e-03, 2.0318e-05, 3.2653e-04,  ..., 4.2096e-03,
          9.8779e-04, 7.4249e-04],
         [9.9699e-01, 2.0318e-05, 3.2131e-04,  ..., 9.8641e-01,
          9.8779e-04, 9.9777e-01],
         [1.0035e-03, 9.9994e-01, 9.9903e-01,  ..., 4.2096e-03,
          9.9704e-01, 7.4249e-04]],
        [[2.4418e-03, 1.9425e-04, 6.0555e-04,  ..., 2.9011e-03,
          8.2950e-04, 9.9531e-01],
         [2.4418e-03, 1.9425e-04, 6.0555e-04,  ..., 2.9011e-03,
          8.2950e-04, 1.0846e-03],
         [9.9267e-01, 1.9425e-04, 6.0555e-04,  ..., 9.9130e-01,
          9.9751e-01, 1.0846e-03],
         [2.4418e-03, 9.9942e-01, 9.9818e-01,  ..., 2.9011e-03,
          8.2950e-04, 2.5180e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 651:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9951e-01, 3.4253e-03, 7.6507e-04,  ..., 9.9731e-01,
          9.7775e-01, 1.2596e-03],
         [1.6408e-04, 2.6262e-03, 7.6507e-04,  ..., 8.6294e-04,
          3.0446e-03, 1.2596e-03],
         [1.6408e-04, 3.3608e-03, 7.6507e-04,  ..., 9.6305e-04,
          1.6163e-02, 1.2596e-03],
         [1.6408e-04, 9.9059e-01, 9.9770e-01,  ..., 8.6294e-04,
          3.0446e-03, 9.9622e-01]],
        [[9.9952e-01, 1.6463e-03, 1.6135e-03,  ..., 2.5447e-03,
          1.8044e-04, 1.5328e-05],
         [1.6103e-04, 1.6463e-03, 1.6135e-03,  ..., 2.4608e-03,
          1.8044e-04, 1.5328e-05],
         [1.6103e-04, 1.6463e-03, 1.6135e-03,  ..., 2.6333e-03,
          9.9946e-01, 9.9995e-01],
         [1.6103e-04, 9.9506e-01, 9.9516e-01,  ..., 9.9236e-01,
          1.8044e-04, 1.5328e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1724e-03, 7.8311e-06, 9.1877e-05,  ..., 2.0094e-03,
          1.5903e-04, 2.2885e-03],
         [4.1724e-03, 7.8311e-06, 9.1877e-05,  ..., 2.0094e-03,
          1.5903e-04, 2.2885e-03],
         [9.8648e-01, 7.8311e-06, 9.1877e-05,  ..., 9.9397e-01,
          1.5903e-04, 9.9313e-01],
         [5.1769e-03, 9.9998e-01, 9.9972e-01,  ..., 2.0094e-03,
          9.9952e-01, 2.2885e-03]],
        [[4.7853e-03, 3.1960e-03, 2.0193e-04,  ..., 8.0762e-03,
          7.9314e-04, 9.9832e-01],
         [4.7853e-03, 3.1960e-03, 3.0153e-04,  ..., 7.5751e-03,
          7.9314e-04, 5.5912e-04],
         [9.8545e-01, 3.1960e-03, 2.0193e-04,  ..., 9.7479e-01,
          9.9762e-01, 5.5912e-04],
         [4.9757e-03, 9.9041e-01, 9.9929e-01,  ..., 9.5570e-03,
          7.9314e-04, 5.5912e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 652:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9750e-01, 2.2006e-03, 4.8003e-03,  ..., 9.9871e-01,
          9.8476e-01, 1.9116e-03],
         [6.0576e-04, 2.2006e-03, 4.0749e-03,  ..., 4.0347e-04,
          3.0996e-03, 1.9116e-03],
         [1.2916e-03, 2.3731e-03, 3.9566e-03,  ..., 4.8676e-04,
          9.0417e-03, 1.9116e-03],
         [6.0576e-04, 9.9323e-01, 9.8717e-01,  ..., 4.0347e-04,
          3.0996e-03, 9.9427e-01]],
        [[9.9873e-01, 2.1149e-03, 2.3160e-03,  ..., 3.8953e-03,
          2.9169e-03, 3.2815e-04],
         [4.2278e-04, 1.9297e-03, 2.3160e-03,  ..., 3.8953e-03,
          2.9169e-03, 3.2815e-04],
         [4.2278e-04, 2.5999e-03, 3.2490e-03,  ..., 5.3585e-03,
          9.9125e-01, 9.9902e-01],
         [4.2278e-04, 9.9336e-01, 9.9212e-01,  ..., 9.8685e-01,
          2.9169e-03, 3.2815e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:57:15,430 [Process: 0] Synchronize training processes
2024-08-18 19:57:15,430 [Process: 0] Evaluating...
2024-08-18 19:57:15,437 [Process: 0] EPOCH 652:
2024-08-18 19:57:15,439 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5382e-03, 5.8043e-05, 1.4041e-05,  ..., 2.7585e-03,
          5.1922e-03, 3.6928e-03],
         [2.5382e-03, 5.8043e-05, 1.4041e-05,  ..., 2.7585e-03,
          3.9367e-03, 3.6928e-03],
         [9.9239e-01, 5.8043e-05, 1.4041e-05,  ..., 9.9172e-01,
          3.9367e-03, 9.8756e-01],
         [2.5382e-03, 9.9983e-01, 9.9996e-01,  ..., 2.7585e-03,
          9.8693e-01, 5.0513e-03]],
        [[5.9595e-03, 2.5033e-04, 3.9600e-05,  ..., 2.7728e-03,
          2.4509e-03, 9.9988e-01],
         [5.9595e-03, 2.5033e-04, 3.9600e-05,  ..., 2.7728e-03,
          2.4509e-03, 3.9618e-05],
         [9.8043e-01, 2.5033e-04, 3.9600e-05,  ..., 9.9168e-01,
          9.9265e-01, 3.9618e-05],
         [7.6557e-03, 9.9925e-01, 9.9988e-01,  ..., 2.7728e-03,
          2.4509e-03, 3.9618e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 653:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9965e-01, 4.0502e-03, 1.0359e-03,  ..., 9.9920e-01,
          9.8050e-01, 9.7080e-04],
         [1.1660e-04, 2.5645e-03, 1.0359e-03,  ..., 2.6762e-04,
          4.6281e-03, 9.7080e-04],
         [1.1660e-04, 2.6035e-03, 1.0359e-03,  ..., 2.6762e-04,
          8.0854e-03, 9.7080e-04],
         [1.1660e-04, 9.9078e-01, 9.9689e-01,  ..., 2.6762e-04,
          6.7898e-03, 9.9709e-01]],
        [[9.9734e-01, 3.7859e-03, 1.9817e-03,  ..., 2.1858e-02,
          2.1807e-04, 3.9600e-04],
         [8.8779e-04, 5.0859e-03, 1.9817e-03,  ..., 9.8478e-03,
          2.1807e-04, 3.9600e-04],
         [8.8779e-04, 4.3712e-03, 1.9817e-03,  ..., 1.8504e-02,
          9.9935e-01, 9.9881e-01],
         [8.8779e-04, 9.8676e-01, 9.9405e-01,  ..., 9.4979e-01,
          2.1807e-04, 3.9600e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2275e-03, 1.8858e-05, 2.9769e-05,  ..., 2.8196e-03,
          1.7092e-04, 3.6247e-03],
         [3.0238e-03, 1.8858e-05, 2.9769e-05,  ..., 2.3934e-03,
          1.7092e-04, 3.6247e-03],
         [9.9072e-01, 1.8858e-05, 2.9769e-05,  ..., 9.9239e-01,
          1.7092e-04, 9.8913e-01],
         [3.0238e-03, 9.9994e-01, 9.9991e-01,  ..., 2.3934e-03,
          9.9949e-01, 3.6247e-03]],
        [[4.1805e-03, 8.8953e-05, 1.5123e-05,  ..., 2.2656e-03,
          7.0363e-04, 9.9300e-01],
         [4.1805e-03, 8.8953e-05, 1.5123e-05,  ..., 2.2656e-03,
          7.0363e-04, 1.6533e-03],
         [9.8735e-01, 8.8953e-05, 1.5123e-05,  ..., 9.9320e-01,
          9.9789e-01, 1.6533e-03],
         [4.2853e-03, 9.9973e-01, 9.9995e-01,  ..., 2.2656e-03,
          7.0363e-04, 3.6898e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 654:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:16,587 [Process: 0] Synchronize training processes
2024-08-18 19:57:16,587 [Process: 0] Evaluating...
2024-08-18 19:57:16,589 [Process: 0] EPOCH 653:
2024-08-18 19:57:16,591 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:17,735 [Process: 0] Synchronize training processes
2024-08-18 19:57:17,736 [Process: 0] Evaluating...
2024-08-18 19:57:17,738 [Process: 0] EPOCH 654:
2024-08-18 19:57:17,740 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9388e-01, 6.9273e-04, 1.2941e-03,  ..., 9.9569e-01,
          9.8132e-01, 3.3023e-04],
         [1.3235e-03, 6.9010e-04, 1.2913e-03,  ..., 1.4365e-03,
          4.2884e-03, 3.3023e-04],
         [3.4760e-03, 6.9010e-04, 1.2913e-03,  ..., 1.4365e-03,
          1.0105e-02, 3.3023e-04],
         [1.3235e-03, 9.9793e-01, 9.9612e-01,  ..., 1.4365e-03,
          4.2884e-03, 9.9901e-01]],
        [[9.9951e-01, 2.1719e-03, 9.7111e-03,  ..., 3.5865e-03,
          2.5005e-04, 2.9110e-04],
         [1.6307e-04, 2.1719e-03, 3.5235e-03,  ..., 3.4012e-03,
          2.5005e-04, 2.9110e-04],
         [1.6307e-04, 2.1719e-03, 5.2370e-03,  ..., 4.2242e-03,
          9.9925e-01, 9.9913e-01],
         [1.6307e-04, 9.9348e-01, 9.8153e-01,  ..., 9.8879e-01,
          2.5005e-04, 2.9110e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7823e-03, 7.6505e-05, 1.7351e-05,  ..., 2.6250e-03,
          1.5700e-03, 1.1762e-03],
         [1.8280e-03, 7.6505e-05, 1.7351e-05,  ..., 2.4098e-03,
          1.1842e-03, 1.1762e-03],
         [9.9356e-01, 7.6505e-05, 1.7351e-05,  ..., 9.9256e-01,
          1.1842e-03, 9.9647e-01],
         [1.8280e-03, 9.9977e-01, 9.9995e-01,  ..., 2.4098e-03,
          9.9606e-01, 1.1762e-03]],
        [[3.5662e-03, 4.2476e-04, 2.8775e-04,  ..., 6.1681e-04,
          9.5305e-04, 9.6994e-01],
         [3.5662e-03, 4.2476e-04, 2.8775e-04,  ..., 6.1681e-04,
          9.5305e-04, 8.8110e-03],
         [9.8824e-01, 4.2476e-04, 2.8775e-04,  ..., 9.9815e-01,
          9.9714e-01, 7.7203e-03],
         [4.6290e-03, 9.9873e-01, 9.9914e-01,  ..., 6.1681e-04,
          9.5305e-04, 1.3528e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 655:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9881e-01, 1.4434e-03, 4.0759e-04,  ..., 9.9167e-01,
          9.8069e-01, 2.0560e-03],
         [3.9695e-04, 1.4434e-03, 4.0759e-04,  ..., 2.1558e-03,
          3.6434e-03, 2.0560e-03],
         [3.9695e-04, 1.5137e-03, 4.0759e-04,  ..., 4.0227e-03,
          1.2027e-02, 2.6601e-03],
         [3.9695e-04, 9.9560e-01, 9.9878e-01,  ..., 2.1558e-03,
          3.6434e-03, 9.9323e-01]],
        [[9.9870e-01, 2.5540e-03, 2.4952e-03,  ..., 1.1198e-02,
          1.3191e-04, 8.2150e-05],
         [3.6963e-04, 2.0431e-03, 2.0123e-03,  ..., 5.9276e-03,
          1.3191e-04, 8.2150e-05],
         [5.6535e-04, 2.0431e-03, 2.1789e-03,  ..., 9.5068e-03,
          9.9960e-01, 9.9975e-01],
         [3.6963e-04, 9.9336e-01, 9.9331e-01,  ..., 9.7337e-01,
          1.3191e-04, 8.2150e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1374e-03, 4.1825e-04, 2.3591e-05,  ..., 2.0596e-03,
          9.9647e-05, 6.4059e-03],
         [1.1374e-03, 4.1825e-04, 2.3591e-05,  ..., 2.0596e-03,
          9.9647e-05, 4.5384e-03],
         [9.9659e-01, 4.1825e-04, 2.3591e-05,  ..., 9.9382e-01,
          9.9647e-05, 9.8452e-01],
         [1.1374e-03, 9.9875e-01, 9.9993e-01,  ..., 2.0596e-03,
          9.9970e-01, 4.5384e-03]],
        [[3.2470e-03, 2.3168e-04, 3.8968e-04,  ..., 3.6159e-03,
          8.8619e-04, 9.9893e-01],
         [3.2470e-03, 2.3168e-04, 3.8968e-04,  ..., 3.6159e-03,
          8.8619e-04, 3.4493e-04],
         [9.8980e-01, 2.3168e-04, 3.8968e-04,  ..., 9.8915e-01,
          9.9734e-01, 3.4493e-04],
         [3.7098e-03, 9.9931e-01, 9.9883e-01,  ..., 3.6159e-03,
          8.8619e-04, 3.7962e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 656:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:18,884 [Process: 0] Synchronize training processes
2024-08-18 19:57:18,884 [Process: 0] Evaluating...
2024-08-18 19:57:18,886 [Process: 0] EPOCH 655:
2024-08-18 19:57:18,888 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:20,032 [Process: 0] Synchronize training processes
2024-08-18 19:57:20,032 [Process: 0] Evaluating...
2024-08-18 19:57:20,034 [Process: 0] EPOCH 656:
2024-08-18 19:57:20,036 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9955e-01, 5.2550e-04, 5.8314e-04,  ..., 9.9692e-01,
          9.8663e-01, 1.0543e-02],
         [1.5832e-04, 5.2550e-04, 5.8314e-04,  ..., 9.5979e-04,
          2.0383e-03, 6.2434e-03],
         [1.5408e-04, 5.2550e-04, 5.8314e-04,  ..., 1.1602e-03,
          9.2981e-03, 1.1597e-02],
         [1.3913e-04, 9.9842e-01, 9.9825e-01,  ..., 9.5979e-04,
          2.0383e-03, 9.7162e-01]],
        [[9.9767e-01, 4.7037e-03, 1.0579e-03,  ..., 1.4848e-02,
          1.6006e-04, 1.3417e-04],
         [7.5842e-04, 4.1327e-03, 1.0579e-03,  ..., 6.0104e-03,
          1.6006e-04, 1.3417e-04],
         [7.5842e-04, 4.4290e-03, 1.0579e-03,  ..., 8.9459e-03,
          9.9952e-01, 9.9960e-01],
         [8.1600e-04, 9.8673e-01, 9.9683e-01,  ..., 9.7020e-01,
          1.6006e-04, 1.3417e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4513e-03, 1.1839e-05, 2.0240e-05,  ..., 4.6060e-03,
          2.3998e-03, 2.2347e-03],
         [3.7574e-03, 1.1839e-05, 2.0240e-05,  ..., 3.6719e-03,
          2.3998e-03, 2.2347e-03],
         [9.8703e-01, 1.1839e-05, 2.0240e-05,  ..., 9.8805e-01,
          2.3998e-03, 9.9330e-01],
         [3.7574e-03, 9.9996e-01, 9.9994e-01,  ..., 3.6719e-03,
          9.9280e-01, 2.2347e-03]],
        [[1.3741e-03, 8.5114e-05, 2.4372e-04,  ..., 8.9688e-04,
          4.0435e-03, 9.9976e-01],
         [1.3741e-03, 8.5114e-05, 2.4372e-04,  ..., 8.9688e-04,
          3.8786e-03, 7.8660e-05],
         [9.9588e-01, 8.5114e-05, 2.4372e-04,  ..., 9.9731e-01,
          9.8820e-01, 7.8660e-05],
         [1.3741e-03, 9.9974e-01, 9.9927e-01,  ..., 8.9688e-04,
          3.8786e-03, 7.8660e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 657:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9965e-01, 1.7475e-03, 3.7758e-03,  ..., 9.9926e-01,
          9.9516e-01, 2.7939e-04],
         [1.1560e-04, 1.7475e-03, 2.4290e-03,  ..., 2.4778e-04,
          1.2956e-03, 2.7939e-04],
         [1.1560e-04, 1.7475e-03, 2.7785e-03,  ..., 2.4778e-04,
          2.2454e-03, 2.7939e-04],
         [1.1560e-04, 9.9476e-01, 9.9102e-01,  ..., 2.4778e-04,
          1.2956e-03, 9.9916e-01]],
        [[9.9965e-01, 4.5177e-04, 4.2536e-03,  ..., 3.1737e-03,
          8.3508e-04, 4.0035e-05],
         [1.1674e-04, 4.5177e-04, 3.8267e-03,  ..., 2.4929e-03,
          8.3508e-04, 4.0035e-05],
         [1.1674e-04, 4.5177e-04, 6.0327e-03,  ..., 3.1180e-03,
          9.9749e-01, 9.9988e-01],
         [1.1674e-04, 9.9864e-01, 9.8589e-01,  ..., 9.9122e-01,
          8.3508e-04, 4.0035e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
2024-08-18 19:57:21,180 [Process: 0] Synchronize training processes
2024-08-18 19:57:21,180 [Process: 0] Evaluating...
2024-08-18 19:57:21,182 [Process: 0] EPOCH 657:
2024-08-18 19:57:21,184 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9766e-03, 1.6237e-04, 1.1325e-05,  ..., 2.1503e-03,
          1.4324e-03, 3.4488e-03],
         [1.9766e-03, 1.6237e-04, 1.1325e-05,  ..., 2.1503e-03,
          1.4324e-03, 2.5440e-03],
         [9.9407e-01, 1.6237e-04, 1.1325e-05,  ..., 9.9355e-01,
          1.4324e-03, 9.9146e-01],
         [1.9766e-03, 9.9951e-01, 9.9997e-01,  ..., 2.1503e-03,
          9.9570e-01, 2.5440e-03]],
        [[7.1513e-03, 5.0655e-04, 1.3078e-04,  ..., 1.3630e-03,
          4.7635e-03, 9.9846e-01],
         [6.2251e-03, 6.4511e-04, 1.3078e-04,  ..., 1.3630e-03,
          4.3233e-03, 5.1329e-04],
         [9.7985e-01, 5.0655e-04, 1.3078e-04,  ..., 9.9591e-01,
          9.8659e-01, 5.1329e-04],
         [6.7712e-03, 9.9834e-01, 9.9961e-01,  ..., 1.3630e-03,
          4.3233e-03, 5.1329e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 658:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9785e-01, 4.4893e-03, 4.2393e-03,  ..., 9.9985e-01,
          9.9482e-01, 4.5012e-04],
         [7.1546e-04, 3.5663e-03, 3.3334e-03,  ..., 5.0179e-05,
          1.0909e-03, 4.5012e-04],
         [7.1546e-04, 4.1886e-03, 3.6943e-03,  ..., 5.0179e-05,
          3.0021e-03, 4.5012e-04],
         [7.1546e-04, 9.8776e-01, 9.8873e-01,  ..., 5.0179e-05,
          1.0909e-03, 9.9865e-01]],
        [[9.9958e-01, 3.0595e-03, 2.1355e-03,  ..., 1.7168e-03,
          3.0485e-04, 1.9339e-04],
         [1.2647e-04, 3.0595e-03, 2.1355e-03,  ..., 1.7168e-03,
          3.0485e-04, 1.9339e-04],
         [1.6268e-04, 3.5489e-03, 2.4878e-03,  ..., 1.7168e-03,
          9.9909e-01, 9.9942e-01],
         [1.2647e-04, 9.9033e-01, 9.9324e-01,  ..., 9.9485e-01,
          3.0485e-04, 1.9339e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3771e-03, 2.6240e-05, 5.6677e-05,  ..., 3.6864e-03,
          2.2875e-04, 3.5493e-03],
         [2.0938e-03, 2.6240e-05, 5.6677e-05,  ..., 3.6705e-03,
          2.2875e-04, 3.0394e-03],
         [9.9244e-01, 2.6240e-05, 5.6677e-05,  ..., 9.8897e-01,
          2.2875e-04, 9.9037e-01],
         [2.0938e-03, 9.9992e-01, 9.9983e-01,  ..., 3.6705e-03,
          9.9931e-01, 3.0394e-03]],
        [[3.4216e-03, 9.3325e-05, 1.2222e-04,  ..., 7.8762e-03,
          1.8538e-03, 9.9957e-01],
         [3.4216e-03, 9.3325e-05, 1.2222e-04,  ..., 7.8762e-03,
          1.8538e-03, 1.4178e-04],
         [9.8974e-01, 9.3325e-05, 1.2222e-04,  ..., 9.7358e-01,
          9.9444e-01, 1.4178e-04],
         [3.4216e-03, 9.9972e-01, 9.9963e-01,  ..., 1.0671e-02,
          1.8538e-03, 1.4178e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 659:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9720e-01, 1.7511e-03, 5.2214e-03,  ..., 9.9953e-01,
          9.9290e-01, 1.0664e-03],
         [9.3192e-04, 1.4347e-03, 9.1082e-03,  ..., 1.5806e-04,
          1.7277e-03, 1.0664e-03],
         [9.3492e-04, 1.4347e-03, 6.0314e-03,  ..., 1.5806e-04,
          3.6452e-03, 1.0664e-03],
         [9.3192e-04, 9.9538e-01, 9.7964e-01,  ..., 1.5806e-04,
          1.7277e-03, 9.9680e-01]],
        [[9.9852e-01, 6.6398e-04, 1.5927e-03,  ..., 2.8526e-03,
          1.1993e-04, 1.4399e-03],
         [4.8053e-04, 6.6398e-04, 1.5927e-03,  ..., 2.6575e-03,
          1.1993e-04, 1.4399e-03],
         [4.8053e-04, 6.6398e-04, 1.5927e-03,  ..., 2.8291e-03,
          9.9964e-01, 9.9568e-01],
         [5.1421e-04, 9.9801e-01, 9.9522e-01,  ..., 9.9166e-01,
          1.1993e-04, 1.4399e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:57:22,328 [Process: 0] Synchronize training processes
2024-08-18 19:57:22,328 [Process: 0] Evaluating...
2024-08-18 19:57:22,330 [Process: 0] EPOCH 658:
2024-08-18 19:57:22,331 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:23,471 [Process: 0] Synchronize training processes
2024-08-18 19:57:23,472 [Process: 0] Evaluating...
2024-08-18 19:57:23,473 [Process: 0] EPOCH 659:
2024-08-18 19:57:23,475 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.5181e-04, 2.4339e-05, 3.4048e-05,  ..., 1.1139e-03,
          6.0174e-05, 3.8453e-04],
         [6.5181e-04, 2.4339e-05, 3.4048e-05,  ..., 1.1139e-03,
          6.0174e-05, 3.8453e-04],
         [9.9804e-01, 2.4339e-05, 3.4048e-05,  ..., 9.9666e-01,
          6.0174e-05, 9.9885e-01],
         [6.5181e-04, 9.9993e-01, 9.9990e-01,  ..., 1.1139e-03,
          9.9982e-01, 3.8453e-04]],
        [[1.3533e-03, 6.1003e-05, 9.4092e-05,  ..., 1.9553e-03,
          2.9318e-03, 9.9965e-01],
         [1.3533e-03, 6.1003e-05, 1.0201e-04,  ..., 1.9553e-03,
          2.9318e-03, 1.1816e-04],
         [9.9594e-01, 6.1003e-05, 9.4092e-05,  ..., 9.9413e-01,
          9.9120e-01, 1.1816e-04],
         [1.3533e-03, 9.9982e-01, 9.9971e-01,  ..., 1.9553e-03,
          2.9318e-03, 1.1816e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 660:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9978e-01, 8.0362e-04, 1.4904e-03,  ..., 9.9980e-01,
          9.6524e-01, 4.4953e-03],
         [7.4933e-05, 8.0362e-04, 1.4904e-03,  ..., 6.4625e-05,
          5.7457e-03, 4.4953e-03],
         [7.4933e-05, 8.0362e-04, 1.5571e-03,  ..., 7.1733e-05,
          2.3270e-02, 5.1083e-03],
         [7.4933e-05, 9.9759e-01, 9.9546e-01,  ..., 6.4625e-05,
          5.7457e-03, 9.8590e-01]],
        [[9.9913e-01, 7.1810e-04, 3.4903e-03,  ..., 1.3896e-03,
          4.6648e-04, 7.3504e-05],
         [2.9059e-04, 7.1810e-04, 3.9079e-03,  ..., 1.3896e-03,
          4.6648e-04, 7.3504e-05],
         [2.9059e-04, 7.1810e-04, 4.2412e-03,  ..., 1.4324e-03,
          9.9860e-01, 9.9978e-01],
         [2.9059e-04, 9.9785e-01, 9.8836e-01,  ..., 9.9579e-01,
          4.6648e-04, 7.3504e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.4780e-04, 9.3214e-06, 7.2967e-05,  ..., 1.5167e-03,
          3.3594e-05, 2.3435e-03],
         [7.4780e-04, 9.3214e-06, 7.2967e-05,  ..., 1.5167e-03,
          3.3594e-05, 2.3435e-03],
         [9.9776e-01, 9.3214e-06, 7.2967e-05,  ..., 9.9545e-01,
          3.3594e-05, 9.9297e-01],
         [7.4780e-04, 9.9997e-01, 9.9978e-01,  ..., 1.5167e-03,
          9.9990e-01, 2.3435e-03]],
        [[2.9733e-03, 4.0594e-04, 1.3204e-05,  ..., 2.7975e-03,
          3.4165e-03, 9.9984e-01],
         [2.9733e-03, 4.0594e-04, 1.3204e-05,  ..., 2.7975e-03,
          3.2462e-03, 5.3601e-05],
         [9.9108e-01, 4.0594e-04, 1.3204e-05,  ..., 9.9161e-01,
          9.9009e-01, 5.3601e-05],
         [2.9733e-03, 9.9878e-01, 9.9996e-01,  ..., 2.7975e-03,
          3.2462e-03, 5.3601e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 661:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:57:24,615 [Process: 0] Synchronize training processes
2024-08-18 19:57:24,615 [Process: 0] Evaluating...
2024-08-18 19:57:24,617 [Process: 0] EPOCH 660:
2024-08-18 19:57:24,619 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:25,762 [Process: 0] Synchronize training processes
2024-08-18 19:57:25,762 [Process: 0] Evaluating...
2024-08-18 19:57:25,764 [Process: 0] EPOCH 661:
2024-08-18 19:57:25,766 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9952e-01, 1.2892e-03, 9.6153e-04,  ..., 9.9571e-01,
          9.9183e-01, 3.8371e-03],
         [1.7102e-04, 1.2892e-03, 9.6153e-04,  ..., 1.5549e-03,
          1.6143e-03, 4.3778e-03],
         [1.6045e-04, 1.2892e-03, 9.6153e-04,  ..., 1.3681e-03,
          4.9423e-03, 4.1671e-03],
         [1.4805e-04, 9.9613e-01, 9.9712e-01,  ..., 1.3681e-03,
          1.6143e-03, 9.8762e-01]],
        [[9.9977e-01, 9.3618e-04, 6.6981e-03,  ..., 2.3312e-03,
          5.5728e-04, 2.5915e-04],
         [7.5947e-05, 9.3618e-04, 4.3214e-03,  ..., 2.0151e-03,
          5.5728e-04, 2.5915e-04],
         [7.5947e-05, 9.3618e-04, 6.2274e-03,  ..., 2.0827e-03,
          9.9833e-01, 9.9922e-01],
         [7.5947e-05, 9.9719e-01, 9.8275e-01,  ..., 9.9357e-01,
          5.5728e-04, 2.5915e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3459e-03, 6.0643e-05, 6.0658e-05,  ..., 1.3323e-03,
          1.8521e-04, 1.0512e-03],
         [3.9829e-03, 6.0643e-05, 1.1518e-04,  ..., 1.3323e-03,
          1.8521e-04, 1.0512e-03],
         [9.8769e-01, 6.0643e-05, 6.0658e-05,  ..., 9.9600e-01,
          1.8521e-04, 9.9685e-01],
         [3.9829e-03, 9.9982e-01, 9.9976e-01,  ..., 1.3323e-03,
          9.9944e-01, 1.0512e-03]],
        [[3.8495e-03, 9.7609e-05, 3.6917e-05,  ..., 3.5487e-03,
          2.5953e-03, 9.9888e-01],
         [3.8495e-03, 9.7609e-05, 3.6917e-05,  ..., 3.5487e-03,
          2.5953e-03, 3.7289e-04],
         [9.8838e-01, 9.7609e-05, 3.6917e-05,  ..., 9.8935e-01,
          9.9221e-01, 3.7289e-04],
         [3.9219e-03, 9.9971e-01, 9.9989e-01,  ..., 3.5487e-03,
          2.5953e-03, 3.7289e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 662:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9833e-01, 6.0205e-03, 3.1455e-03,  ..., 9.9860e-01,
          9.9231e-01, 1.0788e-03],
         [5.5511e-04, 3.2588e-03, 2.9125e-03,  ..., 4.6805e-04,
          1.7110e-03, 1.0788e-03],
         [5.5511e-04, 3.7026e-03, 3.5017e-03,  ..., 4.6805e-04,
          4.2713e-03, 1.0788e-03],
         [5.5511e-04, 9.8702e-01, 9.9044e-01,  ..., 4.6805e-04,
          1.7110e-03, 9.9676e-01]],
        [[9.9851e-01, 2.6569e-03, 3.4759e-03,  ..., 5.3064e-04,
          5.0063e-05, 1.6914e-04],
         [4.0310e-04, 2.3731e-03, 3.5890e-03,  ..., 5.3064e-04,
          5.0063e-05, 1.6914e-04],
         [6.8528e-04, 2.3731e-03, 4.4108e-03,  ..., 5.3064e-04,
          9.9985e-01, 9.9949e-01],
         [4.0310e-04, 9.9260e-01, 9.8852e-01,  ..., 9.9841e-01,
          5.0063e-05, 1.6914e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0058e-03, 1.6825e-04, 1.7557e-04,  ..., 2.0911e-03,
          1.1708e-03, 1.5176e-03],
         [2.0058e-03, 1.6825e-04, 1.7557e-04,  ..., 2.0911e-03,
          1.1708e-03, 1.5176e-03],
         [9.9398e-01, 1.6825e-04, 1.7557e-04,  ..., 9.9373e-01,
          1.1708e-03, 9.9545e-01],
         [2.0058e-03, 9.9950e-01, 9.9947e-01,  ..., 2.0911e-03,
          9.9649e-01, 1.5176e-03]],
        [[1.4007e-03, 3.9613e-04, 2.3314e-04,  ..., 3.9740e-03,
          1.1369e-03, 9.9903e-01],
         [1.4007e-03, 3.9613e-04, 2.3314e-04,  ..., 3.9740e-03,
          1.1369e-03, 3.2473e-04],
         [9.9580e-01, 3.9613e-04, 2.3314e-04,  ..., 9.8778e-01,
          9.9659e-01, 3.2473e-04],
         [1.4007e-03, 9.9881e-01, 9.9930e-01,  ..., 4.2710e-03,
          1.1369e-03, 3.2473e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 663:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:26,909 [Process: 0] Synchronize training processes
2024-08-18 19:57:26,909 [Process: 0] Evaluating...
2024-08-18 19:57:26,916 [Process: 0] EPOCH 662:
2024-08-18 19:57:26,918 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:28,064 [Process: 0] Synchronize training processes
2024-08-18 19:57:28,065 [Process: 0] Evaluating...
2024-08-18 19:57:28,067 [Process: 0] EPOCH 663:
2024-08-18 19:57:28,068 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9883e-01, 4.9244e-04, 1.4977e-03,  ..., 9.9877e-01,
          9.8228e-01, 1.2053e-03],
         [3.9000e-04, 4.9244e-04, 1.4977e-03,  ..., 4.1026e-04,
          3.5149e-03, 1.2053e-03],
         [3.9000e-04, 4.9244e-04, 1.4977e-03,  ..., 4.1026e-04,
          1.0367e-02, 1.2053e-03],
         [3.9000e-04, 9.9852e-01, 9.9551e-01,  ..., 4.1026e-04,
          3.8356e-03, 9.9638e-01]],
        [[9.9711e-01, 3.2691e-03, 8.0446e-04,  ..., 2.6230e-03,
          4.7769e-04, 1.5995e-04],
         [9.6244e-04, 2.2663e-03, 8.0446e-04,  ..., 2.3537e-03,
          4.7769e-04, 1.5995e-04],
         [9.6244e-04, 2.2663e-03, 8.0446e-04,  ..., 2.3725e-03,
          9.9857e-01, 9.9952e-01],
         [9.6244e-04, 9.9220e-01, 9.9759e-01,  ..., 9.9265e-01,
          4.7769e-04, 1.5995e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2552e-03, 1.4005e-04, 3.0580e-05,  ..., 6.3069e-03,
          7.5177e-04, 9.3132e-04],
         [9.9885e-04, 1.4005e-04, 3.0580e-05,  ..., 6.3069e-03,
          7.5177e-04, 9.3132e-04],
         [9.9675e-01, 1.4005e-04, 3.0580e-05,  ..., 9.7978e-01,
          7.5177e-04, 9.9721e-01],
         [9.9885e-04, 9.9958e-01, 9.9991e-01,  ..., 7.6020e-03,
          9.9774e-01, 9.3132e-04]],
        [[2.9979e-03, 9.5513e-04, 4.6061e-05,  ..., 1.1139e-03,
          1.4381e-03, 9.9952e-01],
         [2.9979e-03, 9.5513e-04, 4.6061e-05,  ..., 1.1139e-03,
          1.4381e-03, 1.4604e-04],
         [9.9069e-01, 9.5513e-04, 4.6061e-05,  ..., 9.9666e-01,
          9.9569e-01, 1.4604e-04],
         [3.3111e-03, 9.9713e-01, 9.9986e-01,  ..., 1.1139e-03,
          1.4381e-03, 1.8935e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 664:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9909e-01, 3.0455e-04, 2.3841e-03,  ..., 9.9670e-01,
          9.9466e-01, 2.2830e-03],
         [4.5327e-04, 3.0455e-04, 2.4609e-03,  ..., 1.0992e-03,
          1.2934e-03, 1.6930e-03],
         [2.2968e-04, 3.0455e-04, 2.3841e-03,  ..., 1.0992e-03,
          2.7533e-03, 1.6930e-03],
         [2.2930e-04, 9.9909e-01, 9.9277e-01,  ..., 1.0992e-03,
          1.2934e-03, 9.9433e-01]],
        [[9.9937e-01, 1.5895e-03, 6.2488e-03,  ..., 2.1370e-03,
          6.5217e-04, 3.1138e-04],
         [1.9463e-04, 1.3915e-03, 3.8104e-03,  ..., 2.1370e-03,
          6.5217e-04, 3.1138e-04],
         [2.4525e-04, 1.3915e-03, 5.0322e-03,  ..., 2.2587e-03,
          9.9804e-01, 9.9907e-01],
         [1.9463e-04, 9.9563e-01, 9.8491e-01,  ..., 9.9347e-01,
          6.5217e-04, 3.1138e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:57:29,211 [Process: 0] Synchronize training processes
2024-08-18 19:57:29,211 [Process: 0] Evaluating...
2024-08-18 19:57:29,213 [Process: 0] EPOCH 664:
2024-08-18 19:57:29,215 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5652e-03, 1.3653e-04, 5.6320e-04,  ..., 8.8625e-04,
          1.7507e-04, 1.4321e-03],
         [1.5652e-03, 1.3653e-04, 5.6320e-04,  ..., 8.8625e-04,
          1.7507e-04, 1.4321e-03],
         [9.9530e-01, 1.3653e-04, 5.6320e-04,  ..., 9.9734e-01,
          1.7507e-04, 9.9570e-01],
         [1.5652e-03, 9.9959e-01, 9.9831e-01,  ..., 8.8625e-04,
          9.9947e-01, 1.4321e-03]],
        [[1.1205e-03, 4.9335e-05, 1.0493e-03,  ..., 4.5323e-03,
          6.8384e-03, 9.9983e-01],
         [1.1205e-03, 4.9335e-05, 1.0493e-03,  ..., 4.5323e-03,
          3.7438e-03, 5.5170e-05],
         [9.9664e-01, 4.9335e-05, 1.0493e-03,  ..., 9.8551e-01,
          9.8567e-01, 5.5170e-05],
         [1.1205e-03, 9.9985e-01, 9.9685e-01,  ..., 5.4251e-03,
          3.7438e-03, 5.5170e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 665:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9943e-01, 1.9678e-03, 4.2440e-03,  ..., 9.9904e-01,
          9.9384e-01, 5.3884e-04],
         [1.8814e-04, 1.7185e-03, 4.2440e-03,  ..., 3.2023e-04,
          9.9738e-04, 5.3884e-04],
         [1.9605e-04, 1.7185e-03, 6.6683e-03,  ..., 3.2023e-04,
          4.1610e-03, 5.3884e-04],
         [1.8814e-04, 9.9460e-01, 9.8484e-01,  ..., 3.2023e-04,
          9.9738e-04, 9.9838e-01]],
        [[9.9928e-01, 9.4506e-04, 8.0516e-04,  ..., 1.2362e-03,
          1.8969e-04, 1.3214e-04],
         [2.1898e-04, 9.4506e-04, 8.0516e-04,  ..., 1.2362e-03,
          1.8969e-04, 1.3214e-04],
         [2.8660e-04, 9.4506e-04, 8.0516e-04,  ..., 1.2362e-03,
          9.9943e-01, 9.9960e-01],
         [2.1898e-04, 9.9716e-01, 9.9758e-01,  ..., 9.9629e-01,
          1.8969e-04, 1.3214e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2310e-03, 2.8009e-05, 3.5150e-04,  ..., 4.7021e-03,
          3.0168e-04, 4.9233e-03],
         [1.2310e-03, 2.8009e-05, 3.5150e-04,  ..., 4.6416e-03,
          3.0168e-04, 4.8132e-03],
         [9.9631e-01, 2.8009e-05, 3.5150e-04,  ..., 9.8601e-01,
          3.0168e-04, 9.8545e-01],
         [1.2310e-03, 9.9992e-01, 9.9895e-01,  ..., 4.6416e-03,
          9.9909e-01, 4.8132e-03]],
        [[5.9526e-03, 5.4245e-05, 1.9514e-04,  ..., 3.5930e-03,
          2.5943e-03, 9.9990e-01],
         [5.9526e-03, 5.4245e-05, 1.9514e-04,  ..., 3.5930e-03,
          2.5943e-03, 3.4837e-05],
         [9.7950e-01, 5.4245e-05, 1.9514e-04,  ..., 9.8922e-01,
          9.9222e-01, 3.4837e-05],
         [8.5901e-03, 9.9984e-01, 9.9941e-01,  ..., 3.5930e-03,
          2.5943e-03, 3.4837e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 666:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9945e-01, 5.8361e-04, 1.2595e-03,  ..., 9.9855e-01,
          9.6858e-01, 1.2532e-03],
         [1.8282e-04, 5.8361e-04, 1.2595e-03,  ..., 4.5940e-04,
          4.9260e-03, 1.2532e-03],
         [1.8282e-04, 5.8361e-04, 1.2595e-03,  ..., 5.2860e-04,
          2.1564e-02, 1.2532e-03],
         [1.8282e-04, 9.9825e-01, 9.9622e-01,  ..., 4.5940e-04,
          4.9260e-03, 9.9624e-01]],
        [[9.9961e-01, 2.6582e-03, 2.8535e-03,  ..., 2.3803e-03,
          2.0319e-04, 2.4048e-04],
         [1.3107e-04, 2.6582e-03, 4.5214e-03,  ..., 2.3803e-03,
          2.0319e-04, 2.4048e-04],
         [1.3107e-04, 2.7505e-03, 2.8535e-03,  ..., 2.7090e-03,
          9.9939e-01, 9.9928e-01],
         [1.3107e-04, 9.9193e-01, 9.8977e-01,  ..., 9.9253e-01,
          2.0319e-04, 2.4048e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:57:30,359 [Process: 0] Synchronize training processes
2024-08-18 19:57:30,359 [Process: 0] Evaluating...
2024-08-18 19:57:30,361 [Process: 0] EPOCH 665:
2024-08-18 19:57:30,363 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:31,506 [Process: 0] Synchronize training processes
2024-08-18 19:57:31,506 [Process: 0] Evaluating...
2024-08-18 19:57:31,508 [Process: 0] EPOCH 666:
2024-08-18 19:57:31,510 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1230e-03, 1.1068e-05, 5.1235e-04,  ..., 8.7962e-04,
          4.9317e-04, 3.5173e-03],
         [1.1230e-03, 1.1878e-05, 5.1235e-04,  ..., 8.7962e-04,
          4.9317e-04, 2.4096e-03],
         [9.9663e-01, 1.1068e-05, 5.1235e-04,  ..., 9.9736e-01,
          4.9317e-04, 9.9166e-01],
         [1.1230e-03, 9.9997e-01, 9.9846e-01,  ..., 8.7962e-04,
          9.9852e-01, 2.4096e-03]],
        [[5.6115e-04, 1.7083e-05, 1.5006e-04,  ..., 3.6808e-03,
          7.7259e-03, 9.9849e-01],
         [5.6115e-04, 1.7083e-05, 1.5006e-04,  ..., 3.6808e-03,
          7.3802e-03, 4.2662e-04],
         [9.9832e-01, 1.7083e-05, 1.5006e-04,  ..., 9.8896e-01,
          9.7539e-01, 4.2662e-04],
         [5.6115e-04, 9.9995e-01, 9.9955e-01,  ..., 3.6808e-03,
          9.5084e-03, 6.5983e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 667:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9870e-01, 3.6305e-04, 3.5155e-03,  ..., 9.9957e-01,
          9.9375e-01, 2.0180e-03],
         [5.6063e-04, 3.6305e-04, 3.9390e-03,  ..., 1.4456e-04,
          1.6203e-03, 3.0258e-03],
         [3.6834e-04, 3.6305e-04, 3.5155e-03,  ..., 1.4456e-04,
          3.0131e-03, 1.8878e-03],
         [3.6834e-04, 9.9891e-01, 9.8903e-01,  ..., 1.4456e-04,
          1.6203e-03, 9.9307e-01]],
        [[9.8938e-01, 1.2389e-03, 9.1246e-04,  ..., 6.7546e-03,
          3.6680e-04, 1.8417e-04],
         [2.2526e-03, 1.2740e-03, 9.1246e-04,  ..., 7.1278e-03,
          3.6680e-04, 1.8417e-04],
         [2.2526e-03, 1.2389e-03, 9.3705e-04,  ..., 6.0216e-03,
          9.9890e-01, 9.9945e-01],
         [6.1149e-03, 9.9625e-01, 9.9724e-01,  ..., 9.8010e-01,
          3.6680e-04, 1.8417e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5138e-03, 4.9048e-04, 1.8564e-04,  ..., 1.1924e-03,
          1.3122e-03, 3.6794e-03],
         [2.5138e-03, 4.9048e-04, 1.8564e-04,  ..., 1.1924e-03,
          1.3122e-03, 2.7770e-03],
         [9.9246e-01, 4.9048e-04, 1.8564e-04,  ..., 9.9642e-01,
          1.3122e-03, 9.9077e-01],
         [2.5138e-03, 9.9853e-01, 9.9944e-01,  ..., 1.1924e-03,
          9.9606e-01, 2.7770e-03]],
        [[5.3576e-03, 2.8654e-05, 3.6168e-05,  ..., 2.0852e-03,
          1.3504e-02, 9.9992e-01],
         [5.3576e-03, 2.8654e-05, 3.6168e-05,  ..., 2.0852e-03,
          7.8293e-03, 2.5487e-05],
         [9.8126e-01, 2.8654e-05, 3.6168e-05,  ..., 9.9374e-01,
          9.7084e-01, 2.5487e-05],
         [8.0274e-03, 9.9991e-01, 9.9989e-01,  ..., 2.0852e-03,
          7.8293e-03, 2.5487e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 668:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:57:32,653 [Process: 0] Synchronize training processes
2024-08-18 19:57:32,654 [Process: 0] Evaluating...
2024-08-18 19:57:32,655 [Process: 0] EPOCH 667:
2024-08-18 19:57:32,658 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:33,801 [Process: 0] Synchronize training processes
2024-08-18 19:57:33,801 [Process: 0] Evaluating...
2024-08-18 19:57:33,803 [Process: 0] EPOCH 668:
2024-08-18 19:57:33,805 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9450e-01, 3.1207e-03, 2.3885e-03,  ..., 9.9146e-01,
          9.0596e-01, 1.0457e-03],
         [2.9710e-03, 4.8481e-03, 2.5841e-03,  ..., 2.5518e-03,
          1.3694e-02, 1.0457e-03],
         [1.2644e-03, 3.2021e-03, 2.3885e-03,  ..., 2.8018e-03,
          4.3586e-02, 1.1714e-03],
         [1.2644e-03, 9.8883e-01, 9.9264e-01,  ..., 3.1865e-03,
          3.6762e-02, 9.9674e-01]],
        [[9.9903e-01, 2.5557e-03, 6.7080e-03,  ..., 1.4819e-03,
          4.5367e-04, 4.5650e-04],
         [2.7792e-04, 2.4607e-03, 5.6248e-03,  ..., 1.4819e-03,
          4.5367e-04, 4.5650e-04],
         [4.0979e-04, 2.4848e-03, 5.5114e-03,  ..., 1.4819e-03,
          9.9864e-01, 9.9863e-01],
         [2.7792e-04, 9.9250e-01, 9.8216e-01,  ..., 9.9555e-01,
          4.5367e-04, 4.5650e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5829e-03, 3.0151e-05, 3.2415e-05,  ..., 2.4411e-03,
          6.3850e-05, 1.6583e-03],
         [2.5829e-03, 3.0151e-05, 3.2415e-05,  ..., 2.4411e-03,
          6.3850e-05, 1.6583e-03],
         [9.9225e-01, 3.0151e-05, 3.2415e-05,  ..., 9.9268e-01,
          6.3850e-05, 9.9502e-01],
         [2.5829e-03, 9.9991e-01, 9.9990e-01,  ..., 2.4411e-03,
          9.9981e-01, 1.6583e-03]],
        [[1.3522e-03, 8.2078e-04, 1.5728e-04,  ..., 4.1770e-03,
          8.6780e-04, 9.9816e-01],
         [1.3522e-03, 8.2078e-04, 1.5728e-04,  ..., 4.1770e-03,
          8.6780e-04, 5.0192e-04],
         [9.9594e-01, 8.2078e-04, 1.5728e-04,  ..., 9.8747e-01,
          9.9740e-01, 5.0192e-04],
         [1.3522e-03, 9.9754e-01, 9.9953e-01,  ..., 4.1770e-03,
          8.6780e-04, 8.3627e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 669:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9709e-01, 2.8616e-03, 2.0546e-03,  ..., 9.9914e-01,
          9.9197e-01, 6.3646e-04],
         [9.7107e-04, 2.6485e-03, 2.0546e-03,  ..., 2.5146e-04,
          1.8449e-03, 6.3646e-04],
         [9.7107e-04, 3.1262e-03, 2.0546e-03,  ..., 3.6084e-04,
          4.3371e-03, 6.3646e-04],
         [9.7107e-04, 9.9136e-01, 9.9384e-01,  ..., 2.5146e-04,
          1.8449e-03, 9.9809e-01]],
        [[9.9850e-01, 9.6132e-04, 2.4290e-03,  ..., 1.8236e-03,
          7.2864e-05, 2.8715e-04],
         [4.9949e-04, 9.6132e-04, 2.2365e-03,  ..., 1.6488e-03,
          7.2864e-05, 2.8715e-04],
         [4.9949e-04, 9.6132e-04, 2.6199e-03,  ..., 1.6488e-03,
          9.9978e-01, 9.9914e-01],
         [4.9949e-04, 9.9712e-01, 9.9271e-01,  ..., 9.9488e-01,
          7.2864e-05, 2.8715e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3831e-03, 2.2942e-04, 1.4631e-04,  ..., 5.6052e-03,
          4.0869e-05, 2.7904e-03],
         [1.3831e-03, 2.2942e-04, 1.4631e-04,  ..., 4.7428e-03,
          4.0869e-05, 2.7904e-03],
         [9.9585e-01, 2.2942e-04, 1.4631e-04,  ..., 9.8491e-01,
          4.0869e-05, 9.9163e-01],
         [1.3831e-03, 9.9931e-01, 9.9956e-01,  ..., 4.7428e-03,
          9.9988e-01, 2.7904e-03]],
        [[1.0808e-03, 1.0258e-05, 4.0329e-05,  ..., 4.6012e-03,
          1.0686e-03, 9.9933e-01],
         [1.0808e-03, 1.0258e-05, 4.0329e-05,  ..., 4.6012e-03,
          1.0686e-03, 2.0739e-04],
         [9.9676e-01, 1.0258e-05, 4.0329e-05,  ..., 9.8607e-01,
          9.9679e-01, 2.0739e-04],
         [1.0808e-03, 9.9997e-01, 9.9988e-01,  ..., 4.7309e-03,
          1.0686e-03, 2.5559e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 670:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:34,949 [Process: 0] Synchronize training processes
2024-08-18 19:57:34,950 [Process: 0] Evaluating...
2024-08-18 19:57:34,952 [Process: 0] EPOCH 669:
2024-08-18 19:57:34,953 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:36,098 [Process: 0] Synchronize training processes
2024-08-18 19:57:36,098 [Process: 0] Evaluating...
2024-08-18 19:57:36,100 [Process: 0] EPOCH 670:
2024-08-18 19:57:36,102 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9979e-01, 1.7104e-03, 7.5018e-04,  ..., 9.9950e-01,
          9.5295e-01, 1.0830e-03],
         [5.9763e-05, 1.5406e-03, 7.5018e-04,  ..., 1.6641e-04,
          9.2989e-03, 1.0830e-03],
         [8.6243e-05, 1.8239e-03, 7.5018e-04,  ..., 1.6641e-04,
          1.9747e-02, 1.0830e-03],
         [5.9763e-05, 9.9493e-01, 9.9775e-01,  ..., 1.6641e-04,
          1.8003e-02, 9.9675e-01]],
        [[9.9719e-01, 1.1410e-03, 1.0495e-03,  ..., 1.0324e-03,
          8.4565e-04, 7.2252e-04],
         [6.3804e-04, 1.1410e-03, 1.0495e-03,  ..., 1.0324e-03,
          8.4565e-04, 7.2252e-04],
         [1.5369e-03, 1.1410e-03, 1.0495e-03,  ..., 1.0324e-03,
          9.9746e-01, 9.9783e-01],
         [6.3804e-04, 9.9658e-01, 9.9685e-01,  ..., 9.9690e-01,
          8.4565e-04, 7.2252e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.8883e-04, 3.7130e-05, 1.3636e-03,  ..., 3.9403e-03,
          2.9225e-05, 5.4241e-03],
         [4.8883e-04, 3.7130e-05, 1.3636e-03,  ..., 3.9403e-03,
          2.9225e-05, 4.6997e-03],
         [9.9853e-01, 3.7130e-05, 1.3636e-03,  ..., 9.8748e-01,
          2.9225e-05, 9.8518e-01],
         [4.8883e-04, 9.9989e-01, 9.9591e-01,  ..., 4.6396e-03,
          9.9991e-01, 4.6997e-03]],
        [[6.4308e-03, 5.2063e-04, 2.4847e-05,  ..., 2.8872e-03,
          2.5885e-03, 9.9768e-01],
         [6.4308e-03, 5.2063e-04, 2.4847e-05,  ..., 2.8872e-03,
          2.5885e-03, 6.1268e-04],
         [9.7787e-01, 5.2063e-04, 2.4847e-05,  ..., 9.9134e-01,
          9.9223e-01, 6.1268e-04],
         [9.2695e-03, 9.9844e-01, 9.9993e-01,  ..., 2.8872e-03,
          2.5885e-03, 1.0967e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 671:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9818e-01, 1.5111e-03, 2.4307e-03,  ..., 9.9771e-01,
          9.8616e-01, 1.1460e-03],
         [6.0578e-04, 2.0431e-03, 2.6385e-03,  ..., 7.2660e-04,
          3.0895e-03, 1.1460e-03],
         [6.0578e-04, 1.4819e-03, 2.4973e-03,  ..., 7.2660e-04,
          6.7568e-03, 1.5284e-03],
         [6.0578e-04, 9.9496e-01, 9.9243e-01,  ..., 8.4111e-04,
          3.9947e-03, 9.9618e-01]],
        [[9.9448e-01, 1.6607e-03, 1.6110e-03,  ..., 2.0907e-03,
          6.4110e-04, 2.1632e-04],
         [1.8330e-03, 1.7010e-03, 2.0018e-03,  ..., 1.8470e-03,
          6.4110e-04, 2.1632e-04],
         [1.7647e-03, 1.6607e-03, 1.6110e-03,  ..., 2.0695e-03,
          9.9808e-01, 9.9935e-01],
         [1.9269e-03, 9.9498e-01, 9.9478e-01,  ..., 9.9399e-01,
          6.4110e-04, 2.1632e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
2024-08-18 19:57:37,245 [Process: 0] Synchronize training processes
2024-08-18 19:57:37,245 [Process: 0] Evaluating...
2024-08-18 19:57:37,247 [Process: 0] EPOCH 671:
2024-08-18 19:57:37,248 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5084e-03, 4.0902e-05, 1.3688e-04,  ..., 5.5726e-03,
          2.1393e-05, 5.4742e-04],
         [1.5084e-03, 4.0902e-05, 1.3688e-04,  ..., 5.5726e-03,
          2.1393e-05, 5.4742e-04],
         [9.9547e-01, 4.0902e-05, 1.3688e-04,  ..., 9.8179e-01,
          2.1393e-05, 9.9836e-01],
         [1.5084e-03, 9.9988e-01, 9.9959e-01,  ..., 7.0681e-03,
          9.9994e-01, 5.4742e-04]],
        [[1.7754e-03, 1.2457e-04, 7.1716e-04,  ..., 5.1555e-03,
          9.6337e-04, 9.9756e-01],
         [1.7754e-03, 1.2457e-04, 1.0382e-03,  ..., 5.1555e-03,
          9.6337e-04, 6.9877e-04],
         [9.9467e-01, 1.2457e-04, 7.1716e-04,  ..., 9.8420e-01,
          9.9711e-01, 6.9877e-04],
         [1.7754e-03, 9.9963e-01, 9.9753e-01,  ..., 5.4901e-03,
          9.6337e-04, 1.0409e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 672:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9840e-01, 6.1859e-04, 1.9991e-03,  ..., 9.9943e-01,
          9.8475e-01, 5.1375e-04],
         [5.1688e-04, 6.1859e-04, 1.3336e-03,  ..., 1.9098e-04,
          2.5835e-03, 5.1375e-04],
         [5.6503e-04, 6.1859e-04, 1.3336e-03,  ..., 1.9098e-04,
          1.0084e-02, 5.1375e-04],
         [5.1688e-04, 9.9814e-01, 9.9533e-01,  ..., 1.9098e-04,
          2.5835e-03, 9.9846e-01]],
        [[9.8546e-01, 1.0594e-03, 8.8282e-03,  ..., 2.3563e-03,
          4.9109e-04, 4.3798e-05],
         [6.8387e-03, 1.0594e-03, 3.3676e-03,  ..., 2.3563e-03,
          4.9109e-04, 4.3798e-05],
         [4.0422e-03, 1.0594e-03, 3.3676e-03,  ..., 2.4471e-03,
          9.9853e-01, 9.9987e-01],
         [3.6592e-03, 9.9682e-01, 9.8444e-01,  ..., 9.9284e-01,
          4.9109e-04, 4.3798e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1861e-03, 1.0734e-04, 7.9441e-05,  ..., 1.8142e-03,
          2.4781e-04, 2.3918e-03],
         [2.4934e-03, 1.9260e-04, 7.9441e-05,  ..., 1.8142e-03,
          1.8112e-04, 2.3918e-03],
         [9.9183e-01, 1.0734e-04, 7.9441e-05,  ..., 9.9456e-01,
          1.8112e-04, 9.9282e-01],
         [2.4934e-03, 9.9959e-01, 9.9976e-01,  ..., 1.8142e-03,
          9.9939e-01, 2.3918e-03]],
        [[1.2785e-03, 2.7993e-04, 4.7686e-05,  ..., 3.9562e-03,
          2.4038e-03, 9.9957e-01],
         [1.2785e-03, 2.7993e-04, 4.7686e-05,  ..., 3.9562e-03,
          2.3976e-03, 1.3261e-04],
         [9.9616e-01, 2.7993e-04, 4.7686e-05,  ..., 9.8799e-01,
          9.9280e-01, 1.3261e-04],
         [1.2785e-03, 9.9916e-01, 9.9986e-01,  ..., 4.0938e-03,
          2.3976e-03, 1.6412e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 673:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9973e-01, 5.2236e-03, 5.1780e-04,  ..., 9.9981e-01,
          9.7125e-01, 1.8803e-03],
         [9.1476e-05, 2.2880e-03, 5.1780e-04,  ..., 6.3692e-05,
          6.1528e-03, 1.8803e-03],
         [9.1476e-05, 2.3955e-03, 5.1780e-04,  ..., 6.3692e-05,
          1.3509e-02, 1.8803e-03],
         [9.1476e-05, 9.9009e-01, 9.9845e-01,  ..., 6.3692e-05,
          9.0922e-03, 9.9436e-01]],
        [[9.9791e-01, 1.3551e-03, 1.1859e-03,  ..., 6.2109e-04,
          1.0266e-04, 8.0069e-04],
         [5.1900e-04, 1.6547e-03, 1.1859e-03,  ..., 6.2109e-04,
          1.0266e-04, 8.0069e-04],
         [1.0551e-03, 1.3551e-03, 1.1859e-03,  ..., 6.2109e-04,
          9.9969e-01, 9.9760e-01],
         [5.1900e-04, 9.9564e-01, 9.9644e-01,  ..., 9.9814e-01,
          1.0266e-04, 8.0069e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:57:38,390 [Process: 0] Synchronize training processes
2024-08-18 19:57:38,390 [Process: 0] Evaluating...
2024-08-18 19:57:38,396 [Process: 0] EPOCH 672:
2024-08-18 19:57:38,398 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:39,540 [Process: 0] Synchronize training processes
2024-08-18 19:57:39,540 [Process: 0] Evaluating...
2024-08-18 19:57:39,542 [Process: 0] EPOCH 673:
2024-08-18 19:57:39,544 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7967e-03, 1.7245e-04, 5.0805e-06,  ..., 4.2736e-03,
          2.4247e-04, 3.1506e-03],
         [2.7967e-03, 1.7245e-04, 5.0805e-06,  ..., 3.9661e-03,
          1.9404e-04, 1.7511e-03],
         [9.9161e-01, 1.7245e-04, 5.0805e-06,  ..., 9.8779e-01,
          1.9404e-04, 9.9335e-01],
         [2.7967e-03, 9.9948e-01, 9.9998e-01,  ..., 3.9661e-03,
          9.9937e-01, 1.7511e-03]],
        [[2.7835e-03, 3.1837e-03, 3.5343e-04,  ..., 1.6093e-03,
          2.4528e-03, 9.9988e-01],
         [2.7835e-03, 3.1165e-03, 3.5343e-04,  ..., 1.6093e-03,
          2.4528e-03, 3.8417e-05],
         [9.9165e-01, 3.1165e-03, 3.5343e-04,  ..., 9.9517e-01,
          9.9264e-01, 3.8417e-05],
         [2.7835e-03, 9.9058e-01, 9.9894e-01,  ..., 1.6093e-03,
          2.4528e-03, 3.8417e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 674:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9932e-01, 9.2926e-04, 4.3266e-03,  ..., 9.9939e-01,
          9.9442e-01, 1.3883e-03],
         [1.9708e-04, 9.2926e-04, 4.3403e-03,  ..., 1.6091e-04,
          1.0347e-03, 1.3883e-03],
         [2.8300e-04, 9.2926e-04, 6.2391e-03,  ..., 2.8855e-04,
          3.5111e-03, 1.3883e-03],
         [1.9708e-04, 9.9721e-01, 9.8509e-01,  ..., 1.6091e-04,
          1.0347e-03, 9.9583e-01]],
        [[9.9853e-01, 1.5269e-03, 1.2740e-03,  ..., 9.3886e-04,
          1.0280e-04, 5.8842e-05],
         [3.7844e-04, 1.5269e-03, 1.2740e-03,  ..., 1.0085e-03,
          1.0280e-04, 5.8842e-05],
         [7.1404e-04, 1.5269e-03, 1.2740e-03,  ..., 9.3886e-04,
          9.9969e-01, 9.9982e-01],
         [3.7844e-04, 9.9542e-01, 9.9618e-01,  ..., 9.9711e-01,
          1.0280e-04, 5.8842e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2273e-03, 7.7027e-05, 1.2445e-05,  ..., 3.0806e-03,
          6.5478e-05, 3.3686e-03],
         [1.2273e-03, 7.7027e-05, 1.2445e-05,  ..., 3.0806e-03,
          6.5478e-05, 2.4666e-03],
         [9.9632e-01, 7.7027e-05, 1.2445e-05,  ..., 9.9038e-01,
          6.5478e-05, 9.9170e-01],
         [1.2273e-03, 9.9977e-01, 9.9996e-01,  ..., 3.4605e-03,
          9.9980e-01, 2.4666e-03]],
        [[2.8480e-03, 1.6070e-03, 1.5567e-05,  ..., 3.6146e-03,
          1.9710e-03, 9.9892e-01],
         [2.8480e-03, 1.6070e-03, 1.5567e-05,  ..., 3.6146e-03,
          1.9710e-03, 3.5456e-04],
         [9.9116e-01, 1.6070e-03, 1.5567e-05,  ..., 9.8894e-01,
          9.9409e-01, 3.2436e-04],
         [3.1476e-03, 9.9518e-01, 9.9995e-01,  ..., 3.8292e-03,
          1.9710e-03, 3.9970e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 675:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-18 19:57:40,688 [Process: 0] Synchronize training processes
2024-08-18 19:57:40,688 [Process: 0] Evaluating...
2024-08-18 19:57:40,690 [Process: 0] EPOCH 674:
2024-08-18 19:57:40,692 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:41,835 [Process: 0] Synchronize training processes
2024-08-18 19:57:41,835 [Process: 0] Evaluating...
2024-08-18 19:57:41,837 [Process: 0] EPOCH 675:
2024-08-18 19:57:41,839 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[9.9664e-01, 1.3786e-03, 2.3902e-03,  ..., 9.8778e-01,
          9.9841e-01, 2.8101e-04],
         [1.1216e-03, 1.3786e-03, 2.1985e-03,  ..., 3.4614e-03,
          4.9903e-04, 2.8101e-04],
         [1.1216e-03, 1.4597e-03, 2.1985e-03,  ..., 5.2954e-03,
          5.9176e-04, 2.8101e-04],
         [1.1216e-03, 9.9578e-01, 9.9321e-01,  ..., 3.4614e-03,
          4.9903e-04, 9.9916e-01]],
        [[9.9843e-01, 2.0438e-03, 5.0683e-03,  ..., 1.0798e-03,
          1.9466e-03, 3.3728e-04],
         [5.2445e-04, 2.0438e-03, 5.9032e-03,  ..., 1.0798e-03,
          1.9466e-03, 3.3728e-04],
         [5.2445e-04, 2.0438e-03, 5.6854e-03,  ..., 1.0798e-03,
          9.9416e-01, 9.9899e-01],
         [5.2445e-04, 9.9387e-01, 9.8334e-01,  ..., 9.9676e-01,
          1.9466e-03, 3.3728e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1778e-02, 1.7168e-05, 3.4448e-05,  ..., 7.1531e-03,
          1.0243e-04, 2.0650e-03],
         [1.0110e-02, 1.7168e-05, 3.4448e-05,  ..., 5.8146e-03,
          1.0243e-04, 2.0650e-03],
         [9.6299e-01, 1.7168e-05, 3.4448e-05,  ..., 9.8062e-01,
          1.0243e-04, 9.9380e-01],
         [1.5120e-02, 9.9995e-01, 9.9990e-01,  ..., 6.4127e-03,
          9.9969e-01, 2.0650e-03]],
        [[2.3354e-03, 3.9653e-04, 2.8254e-04,  ..., 5.0611e-03,
          2.6776e-03, 9.9943e-01],
         [2.3354e-03, 3.9653e-04, 2.8254e-04,  ..., 5.0611e-03,
          1.8582e-03, 1.8295e-04],
         [9.9299e-01, 3.9653e-04, 2.8254e-04,  ..., 9.8432e-01,
          9.9361e-01, 1.8295e-04],
         [2.3354e-03, 9.9881e-01, 9.9915e-01,  ..., 5.5565e-03,
          1.8582e-03, 2.0720e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 676:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9871e-01, 2.5741e-03, 1.3086e-03,  ..., 9.9792e-01,
          9.8884e-01, 2.4464e-04],
         [4.2953e-04, 1.5145e-03, 1.3086e-03,  ..., 6.9265e-04,
          2.4999e-03, 2.4464e-04],
         [4.2953e-04, 1.5145e-03, 1.3086e-03,  ..., 6.9265e-04,
          5.1716e-03, 2.4464e-04],
         [4.2953e-04, 9.9440e-01, 9.9607e-01,  ..., 6.9265e-04,
          3.4928e-03, 9.9927e-01]],
        [[9.9818e-01, 5.9848e-04, 1.6941e-03,  ..., 7.4708e-04,
          2.4437e-03, 4.4012e-04],
         [6.0714e-04, 5.9848e-04, 1.2693e-03,  ..., 7.4708e-04,
          2.4437e-03, 4.4012e-04],
         [6.0714e-04, 5.9848e-04, 1.3500e-03,  ..., 7.4708e-04,
          9.9267e-01, 9.9868e-01],
         [6.0714e-04, 9.9820e-01, 9.9569e-01,  ..., 9.9776e-01,
          2.4437e-03, 4.4012e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1687e-03, 1.1145e-05, 7.0723e-05,  ..., 2.9112e-03,
          3.5263e-04, 6.2474e-04],
         [2.5264e-03, 1.1145e-05, 7.0723e-05,  ..., 2.2648e-03,
          3.5263e-04, 6.2474e-04],
         [9.9178e-01, 1.1145e-05, 7.0723e-05,  ..., 9.9256e-01,
          3.5263e-04, 9.9813e-01],
         [2.5264e-03, 9.9997e-01, 9.9979e-01,  ..., 2.2648e-03,
          9.9894e-01, 6.2474e-04]],
        [[3.3555e-03, 1.1115e-04, 9.8946e-05,  ..., 5.7378e-03,
          9.6117e-04, 9.9956e-01],
         [3.3555e-03, 1.1115e-04, 9.8946e-05,  ..., 5.7378e-03,
          9.6117e-04, 1.4777e-04],
         [9.8965e-01, 1.1115e-04, 9.8946e-05,  ..., 9.8253e-01,
          9.9712e-01, 1.4777e-04],
         [3.6394e-03, 9.9967e-01, 9.9970e-01,  ..., 5.9913e-03,
          9.6117e-04, 1.4777e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 677:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:42,985 [Process: 0] Synchronize training processes
2024-08-18 19:57:42,986 [Process: 0] Evaluating...
2024-08-18 19:57:42,988 [Process: 0] EPOCH 676:
2024-08-18 19:57:42,989 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:44,132 [Process: 0] Synchronize training processes
2024-08-18 19:57:44,132 [Process: 0] Evaluating...
2024-08-18 19:57:44,134 [Process: 0] EPOCH 677:
2024-08-18 19:57:44,136 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9941e-01, 1.3588e-03, 2.6730e-03,  ..., 9.9905e-01,
          9.9618e-01, 9.7748e-04],
         [1.9443e-04, 1.0690e-03, 1.1869e-03,  ..., 2.8099e-04,
          7.3108e-04, 9.7748e-04],
         [2.0043e-04, 1.0690e-03, 1.1869e-03,  ..., 3.8830e-04,
          2.3627e-03, 9.7815e-04],
         [1.9443e-04, 9.9650e-01, 9.9495e-01,  ..., 2.8099e-04,
          7.3108e-04, 9.9707e-01]],
        [[9.9777e-01, 3.4687e-03, 3.8439e-04,  ..., 8.8645e-04,
          1.7841e-04, 1.1787e-04],
         [7.2678e-04, 2.9157e-03, 3.8439e-04,  ..., 8.8645e-04,
          1.7841e-04, 1.1787e-04],
         [7.7320e-04, 3.0106e-03, 3.8439e-04,  ..., 8.8645e-04,
          9.9946e-01, 9.9965e-01],
         [7.2678e-04, 9.9061e-01, 9.9885e-01,  ..., 9.9734e-01,
          1.7841e-04, 1.1787e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1871e-04, 7.1927e-05, 4.5496e-05,  ..., 2.2702e-03,
          6.8983e-05, 1.1077e-03],
         [9.1871e-04, 7.1927e-05, 4.5496e-05,  ..., 1.9689e-03,
          4.5864e-05, 1.1077e-03],
         [9.9724e-01, 7.1927e-05, 4.5496e-05,  ..., 9.9379e-01,
          4.5864e-05, 9.9668e-01],
         [9.1871e-04, 9.9978e-01, 9.9986e-01,  ..., 1.9689e-03,
          9.9984e-01, 1.1077e-03]],
        [[2.8829e-03, 1.1356e-03, 9.0757e-04,  ..., 4.3683e-03,
          6.2180e-03, 9.9873e-01],
         [2.8829e-03, 1.1356e-03, 9.0757e-04,  ..., 4.3683e-03,
          6.2180e-03, 3.6628e-04],
         [9.9135e-01, 1.1356e-03, 9.0757e-04,  ..., 9.8670e-01,
          9.7781e-01, 3.6628e-04],
         [2.8829e-03, 9.9659e-01, 9.9728e-01,  ..., 4.5609e-03,
          9.7500e-03, 5.3746e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 678:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9952e-01, 2.6997e-03, 9.0297e-04,  ..., 9.9740e-01,
          9.9830e-01, 4.8231e-04],
         [1.6152e-04, 1.9090e-03, 9.0297e-04,  ..., 8.3870e-04,
          5.6659e-04, 4.8231e-04],
         [1.6152e-04, 1.9090e-03, 9.0297e-04,  ..., 9.2082e-04,
          5.6659e-04, 4.8231e-04],
         [1.6152e-04, 9.9348e-01, 9.9729e-01,  ..., 8.3870e-04,
          5.6659e-04, 9.9855e-01]],
        [[9.9877e-01, 4.1970e-03, 1.9508e-03,  ..., 4.1490e-03,
          1.5262e-04, 1.9988e-04],
         [4.0973e-04, 3.3863e-03, 1.9508e-03,  ..., 2.4495e-03,
          1.5262e-04, 1.9988e-04],
         [4.1291e-04, 3.4722e-03, 1.9508e-03,  ..., 2.8874e-03,
          9.9954e-01, 9.9940e-01],
         [4.0973e-04, 9.8894e-01, 9.9415e-01,  ..., 9.9051e-01,
          1.5262e-04, 1.9988e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7270e-03, 4.6691e-06, 5.1884e-05,  ..., 6.5675e-03,
          1.8271e-05, 1.7085e-03],
         [1.7270e-03, 4.6691e-06, 5.1884e-05,  ..., 6.5675e-03,
          1.8271e-05, 1.2889e-03],
         [9.9482e-01, 4.6691e-06, 5.1884e-05,  ..., 9.7908e-01,
          1.8271e-05, 9.9571e-01],
         [1.7270e-03, 9.9999e-01, 9.9984e-01,  ..., 7.7821e-03,
          9.9995e-01, 1.2889e-03]],
        [[4.5386e-03, 2.2574e-04, 5.4520e-05,  ..., 3.9293e-03,
          1.3298e-03, 9.9876e-01],
         [4.5386e-03, 2.2574e-04, 5.4520e-05,  ..., 3.9293e-03,
          1.3298e-03, 3.9333e-04],
         [9.8493e-01, 2.2574e-04, 5.4520e-05,  ..., 9.8821e-01,
          9.9601e-01, 3.9333e-04],
         [5.9969e-03, 9.9932e-01, 9.9984e-01,  ..., 3.9293e-03,
          1.3298e-03, 4.4858e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:57:45,278 [Process: 0] Synchronize training processes
2024-08-18 19:57:45,278 [Process: 0] Evaluating...
2024-08-18 19:57:45,280 [Process: 0] EPOCH 678:
2024-08-18 19:57:45,282 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 679:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9964e-01, 4.4750e-03, 8.8009e-04,  ..., 9.9329e-01,
          9.9864e-01, 5.0093e-04],
         [9.0706e-05, 6.3986e-03, 8.8009e-04,  ..., 1.6539e-03,
          4.2404e-04, 5.0093e-04],
         [1.8245e-04, 4.9735e-03, 8.8009e-04,  ..., 3.4060e-03,
          5.1040e-04, 5.0093e-04],
         [9.0706e-05, 9.8415e-01, 9.9736e-01,  ..., 1.6539e-03,
          4.2404e-04, 9.9850e-01]],
        [[9.9896e-01, 1.0008e-03, 2.4732e-03,  ..., 1.3774e-03,
          4.3478e-05, 1.8680e-04],
         [2.9300e-04, 8.7723e-04, 2.4732e-03,  ..., 1.6190e-03,
          4.3478e-05, 1.8680e-04],
         [4.5278e-04, 8.9220e-04, 2.4732e-03,  ..., 1.3774e-03,
          9.9987e-01, 9.9944e-01],
         [2.9300e-04, 9.9723e-01, 9.9258e-01,  ..., 9.9563e-01,
          4.3478e-05, 1.8680e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5550e-03, 3.3337e-04, 3.3667e-06,  ..., 1.4445e-03,
          1.9606e-03, 9.0274e-04],
         [2.1151e-03, 3.3337e-04, 3.3667e-06,  ..., 1.4445e-03,
          1.9606e-03, 9.0274e-04],
         [9.9221e-01, 3.3337e-04, 3.3667e-06,  ..., 9.9567e-01,
          1.9606e-03, 9.9729e-01],
         [2.1151e-03, 9.9900e-01, 9.9999e-01,  ..., 1.4445e-03,
          9.9412e-01, 9.0274e-04]],
        [[2.3752e-03, 3.8022e-04, 8.8393e-05,  ..., 4.2531e-03,
          2.1479e-03, 9.9150e-01],
         [2.3752e-03, 3.8022e-04, 8.8393e-05,  ..., 4.2531e-03,
          2.1479e-03, 1.9316e-03],
         [9.9279e-01, 3.8022e-04, 8.8393e-05,  ..., 9.8724e-01,
          9.9356e-01, 1.9316e-03],
         [2.4563e-03, 9.9886e-01, 9.9973e-01,  ..., 4.2531e-03,
          2.1479e-03, 4.6335e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 680:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9859e-01, 5.7587e-04, 2.6034e-03,  ..., 9.9673e-01,
          9.8289e-01, 1.6377e-03],
         [4.1968e-04, 5.7587e-04, 2.6034e-03,  ..., 1.0885e-03,
          2.4424e-03, 1.6377e-03],
         [5.7170e-04, 5.7587e-04, 2.8288e-03,  ..., 1.0885e-03,
          1.2222e-02, 1.6377e-03],
         [4.1968e-04, 9.9827e-01, 9.9196e-01,  ..., 1.0885e-03,
          2.4424e-03, 9.9509e-01]],
        [[9.9740e-01, 1.2012e-03, 5.7512e-04,  ..., 8.7962e-03,
          1.0844e-03, 1.5495e-03],
         [8.5360e-04, 1.2029e-03, 5.7512e-04,  ..., 6.0301e-03,
          1.0844e-03, 1.1956e-03],
         [8.9047e-04, 1.2012e-03, 5.7512e-04,  ..., 8.1605e-03,
          9.9675e-01, 9.9606e-01],
         [8.5360e-04, 9.9639e-01, 9.9827e-01,  ..., 9.7701e-01,
          1.0844e-03, 1.1956e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:57:46,427 [Process: 0] Synchronize training processes
2024-08-18 19:57:46,428 [Process: 0] Evaluating...
2024-08-18 19:57:46,430 [Process: 0] EPOCH 679:
2024-08-18 19:57:46,431 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:47,576 [Process: 0] Synchronize training processes
2024-08-18 19:57:47,576 [Process: 0] Evaluating...
2024-08-18 19:57:47,578 [Process: 0] EPOCH 680:
2024-08-18 19:57:47,580 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3683e-04, 1.6029e-05, 2.8236e-05,  ..., 2.7848e-03,
          5.0116e-04, 2.3796e-03],
         [3.3683e-04, 1.6029e-05, 2.8236e-05,  ..., 2.7848e-03,
          5.0116e-04, 2.3796e-03],
         [9.9899e-01, 1.6029e-05, 2.8236e-05,  ..., 9.9165e-01,
          5.0116e-04, 9.9286e-01],
         [3.3683e-04, 9.9995e-01, 9.9992e-01,  ..., 2.7848e-03,
          9.9850e-01, 2.3796e-03]],
        [[1.0674e-03, 2.6961e-03, 7.8993e-05,  ..., 3.0718e-03,
          8.6275e-04, 9.9800e-01],
         [1.0674e-03, 2.6961e-03, 7.8993e-05,  ..., 3.0718e-03,
          8.6275e-04, 5.8380e-04],
         [9.9680e-01, 2.6961e-03, 7.8993e-05,  ..., 9.9078e-01,
          9.9741e-01, 5.8380e-04],
         [1.0674e-03, 9.9191e-01, 9.9976e-01,  ..., 3.0718e-03,
          8.6275e-04, 8.3464e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 681:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9952e-01, 2.3629e-03, 3.0904e-03,  ..., 9.9911e-01,
          9.9869e-01, 1.4131e-03],
         [1.6128e-04, 1.8259e-03, 3.9306e-03,  ..., 2.9553e-04,
          2.9176e-04, 1.4131e-03],
         [1.6128e-04, 1.8259e-03, 3.0904e-03,  ..., 2.9553e-04,
          7.2989e-04, 1.4131e-03],
         [1.6128e-04, 9.9399e-01, 9.8989e-01,  ..., 2.9553e-04,
          2.9176e-04, 9.9576e-01]],
        [[9.9758e-01, 2.3209e-03, 1.1713e-03,  ..., 1.8108e-03,
          3.6932e-04, 5.9376e-05],
         [8.0559e-04, 1.7349e-03, 1.1713e-03,  ..., 1.4953e-03,
          3.6932e-04, 5.9376e-05],
         [8.0559e-04, 1.7349e-03, 1.1713e-03,  ..., 1.5350e-03,
          9.9889e-01, 9.9982e-01],
         [8.0559e-04, 9.9421e-01, 9.9649e-01,  ..., 9.9516e-01,
          3.6932e-04, 5.9376e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.3606e-04, 6.2161e-05, 1.3181e-05,  ..., 2.8424e-03,
          5.3455e-04, 1.2108e-03],
         [8.3606e-04, 6.2161e-05, 1.3181e-05,  ..., 2.8424e-03,
          5.0129e-04, 1.2108e-03],
         [9.9749e-01, 6.2161e-05, 1.3181e-05,  ..., 9.9147e-01,
          5.0129e-04, 9.9637e-01],
         [8.3606e-04, 9.9981e-01, 9.9996e-01,  ..., 2.8424e-03,
          9.9846e-01, 1.2108e-03]],
        [[4.3209e-03, 3.6386e-04, 1.7251e-04,  ..., 1.5032e-03,
          7.0772e-04, 9.9952e-01],
         [4.3209e-03, 3.6386e-04, 1.7793e-04,  ..., 1.5032e-03,
          7.0772e-04, 1.5918e-04],
         [9.8527e-01, 3.6386e-04, 1.7251e-04,  ..., 9.9549e-01,
          9.9788e-01, 1.5918e-04],
         [6.0926e-03, 9.9891e-01, 9.9948e-01,  ..., 1.5032e-03,
          7.0772e-04, 1.5918e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 682:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9879e-01, 1.1487e-03, 9.1555e-04,  ..., 9.9935e-01,
          9.9629e-01, 4.0506e-04],
         [4.6248e-04, 1.1487e-03, 9.1555e-04,  ..., 2.1630e-04,
          8.8481e-04, 4.0506e-04],
         [3.7540e-04, 1.1487e-03, 9.1555e-04,  ..., 2.1630e-04,
          1.9417e-03, 4.0506e-04],
         [3.7540e-04, 9.9655e-01, 9.9725e-01,  ..., 2.1630e-04,
          8.8481e-04, 9.9878e-01]],
        [[9.9758e-01, 1.5712e-03, 2.3890e-03,  ..., 1.4653e-03,
          1.8307e-04, 2.2524e-04],
         [6.3002e-04, 1.4279e-03, 2.3890e-03,  ..., 1.2090e-03,
          1.8307e-04, 2.2524e-04],
         [1.1609e-03, 1.4279e-03, 2.3890e-03,  ..., 1.2090e-03,
          9.9945e-01, 9.9932e-01],
         [6.3002e-04, 9.9557e-01, 9.9283e-01,  ..., 9.9612e-01,
          1.8307e-04, 2.2524e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:57:48,721 [Process: 0] Synchronize training processes
2024-08-18 19:57:48,721 [Process: 0] Evaluating...
2024-08-18 19:57:48,723 [Process: 0] EPOCH 681:
2024-08-18 19:57:48,725 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:49,855 [Process: 0] Synchronize training processes
2024-08-18 19:57:49,856 [Process: 0] Evaluating...
2024-08-18 19:57:49,862 [Process: 0] EPOCH 682:
2024-08-18 19:57:49,864 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9677e-04, 1.0930e-05, 3.3564e-05,  ..., 1.3053e-03,
          3.4361e-04, 8.5954e-04],
         [6.9677e-04, 1.0930e-05, 3.3564e-05,  ..., 1.3053e-03,
          3.4361e-04, 8.5954e-04],
         [9.9791e-01, 1.0930e-05, 3.3564e-05,  ..., 9.9608e-01,
          3.4361e-04, 9.9742e-01],
         [6.9677e-04, 9.9997e-01, 9.9990e-01,  ..., 1.3053e-03,
          9.9897e-01, 8.5954e-04]],
        [[1.5929e-02, 6.6605e-04, 4.5752e-05,  ..., 3.1245e-03,
          2.6247e-03, 9.9841e-01],
         [1.3718e-02, 6.6605e-04, 4.5752e-05,  ..., 3.1245e-03,
          2.6247e-03, 4.8089e-04],
         [9.3809e-01, 6.6605e-04, 4.5752e-05,  ..., 9.9063e-01,
          9.9213e-01, 4.8089e-04],
         [3.2264e-02, 9.9800e-01, 9.9986e-01,  ..., 3.1245e-03,
          2.6247e-03, 6.2827e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 683:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8539e-01, 2.0942e-03, 5.3231e-04,  ..., 9.9955e-01,
          9.8850e-01, 5.1253e-04],
         [2.1247e-03, 2.0942e-03, 5.3231e-04,  ..., 1.3854e-04,
          2.5856e-03, 5.1253e-04],
         [1.0359e-02, 2.3083e-03, 5.3231e-04,  ..., 1.7350e-04,
          2.5856e-03, 5.1253e-04],
         [2.1247e-03, 9.9350e-01, 9.9840e-01,  ..., 1.3854e-04,
          6.3274e-03, 9.9846e-01]],
        [[9.8955e-01, 1.1370e-03, 3.3061e-03,  ..., 5.9077e-04,
          5.5099e-04, 2.3073e-04],
         [3.0239e-03, 1.1370e-03, 4.0688e-03,  ..., 5.9077e-04,
          5.5099e-04, 2.3073e-04],
         [4.3977e-03, 1.1370e-03, 3.0429e-03,  ..., 5.9077e-04,
          9.9835e-01, 9.9931e-01],
         [3.0239e-03, 9.9659e-01, 9.8958e-01,  ..., 9.9823e-01,
          5.5099e-04, 2.3073e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0652e-03, 1.1430e-04, 6.4024e-06,  ..., 4.0236e-03,
          2.6909e-05, 6.2534e-04],
         [5.0362e-03, 1.1430e-04, 6.4024e-06,  ..., 4.0236e-03,
          2.6909e-05, 6.1973e-04],
         [9.8086e-01, 1.1430e-04, 6.4024e-06,  ..., 9.8793e-01,
          2.6909e-05, 9.9814e-01],
         [5.0362e-03, 9.9966e-01, 9.9998e-01,  ..., 4.0236e-03,
          9.9992e-01, 6.1973e-04]],
        [[2.7460e-03, 1.4728e-03, 1.6897e-04,  ..., 1.9299e-03,
          1.1524e-03, 9.9973e-01],
         [2.7460e-03, 1.4728e-03, 1.6897e-04,  ..., 1.9299e-03,
          1.1524e-03, 8.9629e-05],
         [9.9069e-01, 1.4728e-03, 1.6897e-04,  ..., 9.9421e-01,
          9.9654e-01, 8.9629e-05],
         [3.8165e-03, 9.9558e-01, 9.9949e-01,  ..., 1.9299e-03,
          1.1524e-03, 8.9629e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 684:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:51,008 [Process: 0] Synchronize training processes
2024-08-18 19:57:51,008 [Process: 0] Evaluating...
2024-08-18 19:57:51,010 [Process: 0] EPOCH 683:
2024-08-18 19:57:51,012 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:52,158 [Process: 0] Synchronize training processes
2024-08-18 19:57:52,159 [Process: 0] Evaluating...
2024-08-18 19:57:52,160 [Process: 0] EPOCH 684:
2024-08-18 19:57:52,162 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9904e-01, 1.0252e-03, 6.5517e-03,  ..., 9.9956e-01,
          9.8076e-01, 4.3478e-04],
         [2.8997e-04, 1.0252e-03, 5.0358e-03,  ..., 1.4728e-04,
          4.5572e-03, 4.3478e-04],
         [3.7988e-04, 1.0252e-03, 5.7719e-03,  ..., 1.4728e-04,
          1.0127e-02, 4.3478e-04],
         [2.8997e-04, 9.9692e-01, 9.8264e-01,  ..., 1.4728e-04,
          4.5572e-03, 9.9870e-01]],
        [[9.9934e-01, 1.1738e-03, 2.9760e-03,  ..., 3.8948e-03,
          3.3345e-04, 9.7836e-04],
         [1.9748e-04, 1.2234e-03, 2.1589e-03,  ..., 3.1980e-03,
          3.3345e-04, 9.7836e-04],
         [1.9748e-04, 1.1738e-03, 2.1589e-03,  ..., 2.7382e-03,
          9.9900e-01, 9.9707e-01],
         [2.6614e-04, 9.9643e-01, 9.9271e-01,  ..., 9.9017e-01,
          3.3345e-04, 9.7836e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6734e-03, 8.3831e-05, 2.5142e-04,  ..., 2.7170e-03,
          2.9783e-04, 1.2413e-03],
         [1.6734e-03, 8.3831e-05, 2.5142e-04,  ..., 2.2177e-03,
          2.9783e-04, 9.0239e-04],
         [9.9498e-01, 8.3831e-05, 2.5142e-04,  ..., 9.9285e-01,
          2.9783e-04, 9.9695e-01],
         [1.6734e-03, 9.9975e-01, 9.9925e-01,  ..., 2.2177e-03,
          9.9911e-01, 9.0239e-04]],
        [[4.1691e-03, 1.2228e-04, 5.1880e-04,  ..., 1.0222e-02,
          8.8137e-04, 9.9828e-01],
         [4.1691e-03, 1.2228e-04, 5.1880e-04,  ..., 6.5750e-03,
          8.8137e-04, 5.6678e-04],
         [9.8719e-01, 1.2228e-04, 5.1880e-04,  ..., 9.7656e-01,
          9.9736e-01, 5.6678e-04],
         [4.4730e-03, 9.9963e-01, 9.9844e-01,  ..., 6.6475e-03,
          8.8137e-04, 5.8818e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 685:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9948e-01, 3.8841e-03, 7.0523e-04,  ..., 9.7904e-01,
          9.9559e-01, 1.2948e-04],
         [1.2054e-04, 2.6947e-03, 7.0523e-04,  ..., 3.7809e-03,
          7.3935e-04, 1.2948e-04],
         [2.8313e-04, 3.0200e-03, 7.0523e-04,  ..., 1.3398e-02,
          2.9273e-03, 1.2948e-04],
         [1.2054e-04, 9.9040e-01, 9.9788e-01,  ..., 3.7809e-03,
          7.3935e-04, 9.9961e-01]],
        [[9.9928e-01, 1.6866e-03, 9.5831e-04,  ..., 1.9214e-03,
          8.9876e-05, 7.5670e-05],
         [2.4153e-04, 1.4723e-03, 9.5831e-04,  ..., 1.9214e-03,
          8.9876e-05, 7.5670e-05],
         [2.4153e-04, 1.5106e-03, 9.5831e-04,  ..., 2.2348e-03,
          9.9973e-01, 9.9977e-01],
         [2.4153e-04, 9.9533e-01, 9.9713e-01,  ..., 9.9392e-01,
          8.9876e-05, 7.5670e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2311e-03, 2.2585e-04, 2.2478e-06,  ..., 2.0557e-03,
          4.7678e-04, 2.0423e-03],
         [2.2311e-03, 2.2585e-04, 2.2478e-06,  ..., 2.0557e-03,
          4.7678e-04, 2.0423e-03],
         [9.9331e-01, 2.2585e-04, 2.2478e-06,  ..., 9.9383e-01,
          4.7678e-04, 9.9387e-01],
         [2.2311e-03, 9.9932e-01, 9.9999e-01,  ..., 2.0557e-03,
          9.9857e-01, 2.0423e-03]],
        [[8.4266e-03, 5.1876e-05, 1.0165e-04,  ..., 4.8409e-03,
          1.9966e-03, 9.9198e-01],
         [6.9165e-03, 5.1876e-05, 1.1185e-04,  ..., 4.8409e-03,
          1.9966e-03, 2.2730e-03],
         [9.7651e-01, 5.1876e-05, 1.0165e-04,  ..., 9.8413e-01,
          9.9401e-01, 2.2730e-03],
         [8.1516e-03, 9.9984e-01, 9.9968e-01,  ..., 6.1872e-03,
          1.9966e-03, 3.4779e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:57:53,309 [Process: 0] Synchronize training processes
2024-08-18 19:57:53,309 [Process: 0] Evaluating...
2024-08-18 19:57:53,311 [Process: 0] EPOCH 685:
2024-08-18 19:57:53,313 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 686:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9991e-01, 1.4429e-03, 5.3192e-04,  ..., 9.9844e-01,
          9.7962e-01, 7.2101e-04],
         [3.1607e-05, 1.4405e-03, 5.3192e-04,  ..., 4.6985e-04,
          2.8209e-03, 7.2101e-04],
         [3.1607e-05, 1.4405e-03, 5.3192e-04,  ..., 6.2256e-04,
          1.4735e-02, 7.2101e-04],
         [3.1607e-05, 9.9568e-01, 9.9840e-01,  ..., 4.6985e-04,
          2.8209e-03, 9.9784e-01]],
        [[9.9983e-01, 4.9021e-03, 4.6125e-03,  ..., 5.1264e-03,
          9.4758e-05, 1.2419e-04],
         [5.6797e-05, 4.2564e-03, 2.8872e-03,  ..., 2.8915e-03,
          9.4758e-05, 1.2419e-04],
         [5.6797e-05, 4.3642e-03, 2.9340e-03,  ..., 3.4538e-03,
          9.9972e-01, 9.9963e-01],
         [5.6797e-05, 9.8648e-01, 9.8957e-01,  ..., 9.8853e-01,
          9.4758e-05, 1.2419e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.0886e-04, 6.0418e-04, 2.1861e-05,  ..., 5.6139e-03,
          2.4386e-05, 3.5949e-03],
         [6.0886e-04, 6.0418e-04, 2.1861e-05,  ..., 5.6139e-03,
          2.4386e-05, 3.5438e-03],
         [9.9817e-01, 6.0418e-04, 2.1861e-05,  ..., 9.8208e-01,
          2.4386e-05, 9.8932e-01],
         [6.0886e-04, 9.9819e-01, 9.9993e-01,  ..., 6.6964e-03,
          9.9993e-01, 3.5438e-03]],
        [[5.0062e-04, 1.6520e-03, 6.7313e-05,  ..., 1.0591e-03,
          1.1462e-03, 9.9793e-01],
         [5.0062e-04, 1.6520e-03, 6.7313e-05,  ..., 1.0591e-03,
          1.1462e-03, 5.8062e-04],
         [9.9850e-01, 1.6520e-03, 6.7313e-05,  ..., 9.9682e-01,
          9.9656e-01, 5.8062e-04],
         [5.0062e-04, 9.9504e-01, 9.9980e-01,  ..., 1.0591e-03,
          1.1462e-03, 9.0718e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 687:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9879e-01, 6.2760e-04, 6.1862e-04,  ..., 9.9983e-01,
          9.9286e-01, 4.1373e-04],
         [3.8319e-04, 6.2760e-04, 6.1862e-04,  ..., 5.5941e-05,
          9.2396e-04, 4.1373e-04],
         [4.4224e-04, 6.2760e-04, 6.1862e-04,  ..., 5.5941e-05,
          5.2934e-03, 4.1373e-04],
         [3.8319e-04, 9.9812e-01, 9.9814e-01,  ..., 5.5941e-05,
          9.2396e-04, 9.9876e-01]],
        [[9.9056e-01, 1.0427e-03, 9.4891e-04,  ..., 2.1991e-03,
          2.9017e-04, 3.0468e-04],
         [3.4092e-03, 1.0427e-03, 9.4891e-04,  ..., 2.1991e-03,
          2.9017e-04, 3.0468e-04],
         [3.6503e-03, 1.0427e-03, 9.4891e-04,  ..., 2.2285e-03,
          9.9913e-01, 9.9909e-01],
         [2.3767e-03, 9.9687e-01, 9.9715e-01,  ..., 9.9337e-01,
          2.9017e-04, 3.0468e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:57:54,455 [Process: 0] Synchronize training processes
2024-08-18 19:57:54,455 [Process: 0] Evaluating...
2024-08-18 19:57:54,457 [Process: 0] EPOCH 686:
2024-08-18 19:57:54,459 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:55,597 [Process: 0] Synchronize training processes
2024-08-18 19:57:55,598 [Process: 0] Evaluating...
2024-08-18 19:57:55,599 [Process: 0] EPOCH 687:
2024-08-18 19:57:55,601 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.7625e-03, 1.3274e-05, 2.5900e-04,  ..., 1.3591e-03,
          4.7072e-05, 3.2752e-03],
         [3.2233e-03, 1.3274e-05, 2.5900e-04,  ..., 1.3591e-03,
          4.7072e-05, 3.2752e-03],
         [9.8679e-01, 1.3274e-05, 2.5900e-04,  ..., 9.9592e-01,
          4.7072e-05, 9.9017e-01],
         [3.2233e-03, 9.9996e-01, 9.9922e-01,  ..., 1.3591e-03,
          9.9986e-01, 3.2752e-03]],
        [[2.6533e-03, 1.8083e-04, 1.2307e-04,  ..., 1.0834e-02,
          1.6849e-03, 9.9920e-01],
         [2.6533e-03, 1.8083e-04, 1.2307e-04,  ..., 8.5444e-03,
          1.6849e-03, 2.4843e-04],
         [9.9204e-01, 1.8083e-04, 1.2307e-04,  ..., 9.6836e-01,
          9.9495e-01, 2.4843e-04],
         [2.6533e-03, 9.9946e-01, 9.9963e-01,  ..., 1.2264e-02,
          1.6849e-03, 3.0664e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 688:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9983e-01, 1.5483e-03, 5.9712e-03,  ..., 9.9989e-01,
          9.8132e-01, 6.4409e-04],
         [5.8300e-05, 1.5483e-03, 7.0151e-03,  ..., 3.6864e-05,
          3.4019e-03, 6.4409e-04],
         [5.8300e-05, 1.6001e-03, 1.0412e-02,  ..., 3.6864e-05,
          1.1872e-02, 6.4409e-04],
         [5.8300e-05, 9.9530e-01, 9.7660e-01,  ..., 3.6864e-05,
          3.4019e-03, 9.9807e-01]],
        [[9.9652e-01, 1.3665e-03, 1.8683e-03,  ..., 1.9806e-03,
          2.3602e-04, 1.5724e-04],
         [1.0099e-03, 9.3272e-04, 1.5547e-03,  ..., 1.5691e-03,
          2.3602e-04, 1.5724e-04],
         [1.4631e-03, 9.3272e-04, 1.5547e-03,  ..., 1.7877e-03,
          9.9929e-01, 9.9953e-01],
         [1.0099e-03, 9.9677e-01, 9.9502e-01,  ..., 9.9466e-01,
          2.3602e-04, 1.5724e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2111e-03, 3.0396e-03, 2.2531e-05,  ..., 2.6743e-03,
          4.5551e-04, 1.5129e-03],
         [2.2111e-03, 1.1001e-02, 2.2531e-05,  ..., 2.6743e-03,
          4.5551e-04, 1.3332e-03],
         [9.9337e-01, 3.0396e-03, 2.2531e-05,  ..., 9.9198e-01,
          4.5551e-04, 9.9582e-01],
         [2.2111e-03, 9.8292e-01, 9.9993e-01,  ..., 2.6743e-03,
          9.9863e-01, 1.3332e-03]],
        [[4.4971e-03, 3.0929e-04, 6.5940e-04,  ..., 1.8538e-03,
          1.4414e-03, 9.9996e-01],
         [4.4971e-03, 3.0929e-04, 6.5940e-04,  ..., 1.8538e-03,
          1.4414e-03, 1.2522e-05],
         [9.8505e-01, 3.0929e-04, 6.5940e-04,  ..., 9.9444e-01,
          9.9568e-01, 1.2522e-05],
         [5.9534e-03, 9.9907e-01, 9.9802e-01,  ..., 1.8538e-03,
          1.4414e-03, 1.2522e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 689:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9862e-01, 5.0635e-04, 1.5331e-03,  ..., 9.9858e-01,
          9.9790e-01, 5.3455e-04],
         [4.3502e-04, 5.0635e-04, 1.5331e-03,  ..., 4.7350e-04,
          6.2195e-04, 5.3455e-04],
         [5.1268e-04, 5.0635e-04, 1.7112e-03,  ..., 4.7350e-04,
          8.6042e-04, 5.3455e-04],
         [4.3502e-04, 9.9848e-01, 9.9522e-01,  ..., 4.7350e-04,
          6.2195e-04, 9.9840e-01]],
        [[9.9776e-01, 8.6693e-04, 5.3828e-03,  ..., 1.4364e-03,
          1.1142e-04, 1.7708e-03],
         [6.2576e-04, 8.6693e-04, 3.3617e-03,  ..., 1.4364e-03,
          1.1142e-04, 1.7708e-03],
         [9.9057e-04, 8.6693e-04, 3.6779e-03,  ..., 1.4364e-03,
          9.9967e-01, 9.9469e-01],
         [6.2576e-04, 9.9740e-01, 9.8758e-01,  ..., 9.9569e-01,
          1.1142e-04, 1.7708e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:57:56,747 [Process: 0] Synchronize training processes
2024-08-18 19:57:56,747 [Process: 0] Evaluating...
2024-08-18 19:57:56,749 [Process: 0] EPOCH 688:
2024-08-18 19:57:56,750 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:57,894 [Process: 0] Synchronize training processes
2024-08-18 19:57:57,894 [Process: 0] Evaluating...
2024-08-18 19:57:57,896 [Process: 0] EPOCH 689:
2024-08-18 19:57:57,898 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3560e-04, 5.8832e-05, 8.4256e-05,  ..., 1.4590e-03,
          7.8096e-05, 5.0906e-04],
         [5.8851e-04, 7.2012e-05, 8.4256e-05,  ..., 1.4590e-03,
          7.8096e-05, 5.0906e-04],
         [9.9809e-01, 5.8832e-05, 8.4256e-05,  ..., 9.9562e-01,
          7.8096e-05, 9.9847e-01],
         [5.8851e-04, 9.9981e-01, 9.9975e-01,  ..., 1.4590e-03,
          9.9977e-01, 5.0906e-04]],
        [[1.0980e-03, 4.2861e-05, 3.3898e-04,  ..., 1.2041e-02,
          2.4666e-03, 9.9944e-01],
         [1.0980e-03, 4.2861e-05, 3.3898e-04,  ..., 8.9751e-03,
          2.4666e-03, 1.8385e-04],
         [9.9671e-01, 4.2861e-05, 3.3898e-04,  ..., 9.6522e-01,
          9.9260e-01, 1.8385e-04],
         [1.0980e-03, 9.9987e-01, 9.9898e-01,  ..., 1.3759e-02,
          2.4666e-03, 1.8954e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 690:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9971e-01, 1.4129e-03, 1.0061e-03,  ..., 9.9732e-01,
          9.9476e-01, 1.1381e-02],
         [9.7858e-05, 1.0308e-03, 1.0061e-03,  ..., 8.9302e-04,
          1.1444e-03, 7.8986e-03],
         [9.7858e-05, 1.0308e-03, 1.0061e-03,  ..., 8.9302e-04,
          2.9500e-03, 1.4789e-02],
         [9.7858e-05, 9.9653e-01, 9.9698e-01,  ..., 8.9302e-04,
          1.1444e-03, 9.6593e-01]],
        [[9.9723e-01, 1.3746e-03, 1.5410e-03,  ..., 1.6426e-03,
          7.4035e-04, 1.1845e-04],
         [8.8978e-04, 1.3746e-03, 1.5410e-03,  ..., 1.6220e-03,
          7.4035e-04, 1.1845e-04],
         [9.8942e-04, 1.3746e-03, 1.5410e-03,  ..., 1.6220e-03,
          9.9778e-01, 9.9964e-01],
         [8.8978e-04, 9.9588e-01, 9.9538e-01,  ..., 9.9511e-01,
          7.4035e-04, 1.1845e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6827e-03, 4.8980e-05, 2.5426e-04,  ..., 6.1964e-03,
          7.2195e-05, 2.3417e-03],
         [1.6827e-03, 4.8980e-05, 4.8723e-04,  ..., 4.4834e-03,
          7.2195e-05, 2.3417e-03],
         [9.9495e-01, 4.8980e-05, 2.5426e-04,  ..., 9.8484e-01,
          7.2195e-05, 9.9297e-01],
         [1.6827e-03, 9.9985e-01, 9.9900e-01,  ..., 4.4834e-03,
          9.9978e-01, 2.3417e-03]],
        [[8.1728e-03, 7.4895e-04, 1.4638e-04,  ..., 5.4291e-03,
          2.2202e-03, 9.9104e-01],
         [8.1728e-03, 7.4895e-04, 1.4638e-04,  ..., 5.4291e-03,
          2.2202e-03, 2.4795e-03],
         [9.7058e-01, 7.4895e-04, 1.4638e-04,  ..., 9.8219e-01,
          9.9334e-01, 2.4795e-03],
         [1.3076e-02, 9.9775e-01, 9.9956e-01,  ..., 6.9517e-03,
          2.2202e-03, 4.0048e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 691:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:57:59,043 [Process: 0] Synchronize training processes
2024-08-18 19:57:59,044 [Process: 0] Evaluating...
2024-08-18 19:57:59,045 [Process: 0] EPOCH 690:
2024-08-18 19:57:59,047 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:00,191 [Process: 0] Synchronize training processes
2024-08-18 19:58:00,191 [Process: 0] Evaluating...
2024-08-18 19:58:00,193 [Process: 0] EPOCH 691:
2024-08-18 19:58:00,195 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9844e-01, 3.0439e-03, 3.4273e-03,  ..., 9.9852e-01,
          9.9705e-01, 1.5309e-03],
         [6.9401e-04, 2.3458e-03, 3.4273e-03,  ..., 4.9184e-04,
          6.8584e-04, 1.5309e-03],
         [5.0601e-04, 2.6640e-03, 3.4406e-03,  ..., 4.9184e-04,
          1.5772e-03, 1.5309e-03],
         [3.6257e-04, 9.9195e-01, 9.8970e-01,  ..., 4.9184e-04,
          6.8584e-04, 9.9541e-01]],
        [[9.9392e-01, 1.9889e-03, 5.2455e-04,  ..., 3.9503e-03,
          4.6460e-04, 5.4337e-04],
         [1.4076e-03, 9.5691e-04, 5.2455e-04,  ..., 2.1813e-03,
          4.6460e-04, 5.4337e-04],
         [3.2670e-03, 9.5691e-04, 5.2455e-04,  ..., 2.4421e-03,
          9.9861e-01, 9.9837e-01],
         [1.4076e-03, 9.9610e-01, 9.9843e-01,  ..., 9.9143e-01,
          4.6460e-04, 5.4337e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2671e-03, 2.4713e-05, 2.2108e-06,  ..., 4.8344e-03,
          1.6655e-04, 7.8374e-04],
         [2.4317e-03, 2.4713e-05, 2.2108e-06,  ..., 4.8344e-03,
          1.6655e-04, 6.7930e-04],
         [9.8987e-01, 2.4713e-05, 2.2108e-06,  ..., 9.8495e-01,
          1.6655e-04, 9.9786e-01],
         [2.4317e-03, 9.9993e-01, 9.9999e-01,  ..., 5.3828e-03,
          9.9950e-01, 6.7930e-04]],
        [[9.5434e-04, 7.2131e-05, 1.1104e-04,  ..., 4.7917e-03,
          4.1011e-03, 9.9990e-01],
         [9.5434e-04, 7.2131e-05, 1.1104e-04,  ..., 3.6947e-03,
          4.1011e-03, 3.4956e-05],
         [9.9714e-01, 7.2131e-05, 1.1104e-04,  ..., 9.8782e-01,
          9.8770e-01, 3.4956e-05],
         [9.5434e-04, 9.9978e-01, 9.9967e-01,  ..., 3.6947e-03,
          4.1011e-03, 3.4956e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 692:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9944e-01, 3.3276e-04, 1.6070e-03,  ..., 9.9907e-01,
          9.8009e-01, 2.2724e-04],
         [1.8553e-04, 3.3276e-04, 1.3288e-03,  ..., 1.8928e-04,
          4.3949e-03, 2.2724e-04],
         [1.8553e-04, 3.3276e-04, 1.8321e-03,  ..., 5.5565e-04,
          8.9259e-03, 2.2724e-04],
         [1.8553e-04, 9.9900e-01, 9.9523e-01,  ..., 1.8928e-04,
          6.5903e-03, 9.9932e-01]],
        [[9.9736e-01, 4.3490e-03, 4.2594e-03,  ..., 1.6446e-03,
          1.2697e-03, 8.6817e-05],
         [8.3522e-04, 3.2813e-03, 2.5903e-03,  ..., 1.6446e-03,
          1.2697e-03, 8.6817e-05],
         [9.6932e-04, 3.8134e-03, 3.3315e-03,  ..., 1.7284e-03,
          9.9619e-01, 9.9974e-01],
         [8.3522e-04, 9.8856e-01, 9.8982e-01,  ..., 9.9498e-01,
          1.2697e-03, 8.6817e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6419e-03, 1.5054e-05, 4.2299e-04,  ..., 4.1199e-03,
          4.7696e-05, 4.7123e-03],
         [1.6419e-03, 1.5054e-05, 8.5122e-04,  ..., 4.1199e-03,
          4.7696e-05, 3.2402e-03],
         [9.9507e-01, 1.5054e-05, 4.2299e-04,  ..., 9.8764e-01,
          4.7696e-05, 9.8881e-01],
         [1.6419e-03, 9.9995e-01, 9.9830e-01,  ..., 4.1199e-03,
          9.9986e-01, 3.2402e-03]],
        [[5.5925e-03, 2.7657e-04, 3.6837e-05,  ..., 1.9731e-03,
          9.6328e-03, 9.9926e-01],
         [5.1584e-03, 2.7657e-04, 3.6837e-05,  ..., 1.9731e-03,
          8.1993e-03, 2.4773e-04],
         [9.8409e-01, 2.7657e-04, 3.6837e-05,  ..., 9.9408e-01,
          9.7159e-01, 2.4773e-04],
         [5.1584e-03, 9.9917e-01, 9.9989e-01,  ..., 1.9731e-03,
          1.0574e-02, 2.4773e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:01,340 [Process: 0] Synchronize training processes
2024-08-18 19:58:01,340 [Process: 0] Evaluating...
2024-08-18 19:58:01,346 [Process: 0] EPOCH 692:
2024-08-18 19:58:01,348 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 693:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9366e-01, 4.4686e-04, 7.9809e-04,  ..., 9.9958e-01,
          9.7215e-01, 1.6823e-04],
         [1.3706e-03, 3.8158e-04, 7.9809e-04,  ..., 1.4027e-04,
          3.5531e-03, 1.6823e-04],
         [3.6022e-03, 3.8158e-04, 7.9809e-04,  ..., 1.4027e-04,
          2.0741e-02, 1.6823e-04],
         [1.3706e-03, 9.9879e-01, 9.9761e-01,  ..., 1.4027e-04,
          3.5531e-03, 9.9950e-01]],
        [[9.9925e-01, 4.0372e-04, 5.6088e-03,  ..., 8.9055e-04,
          1.4930e-04, 6.6147e-04],
         [2.4947e-04, 4.0372e-04, 4.6449e-03,  ..., 8.9055e-04,
          1.4930e-04, 6.6147e-04],
         [2.4947e-04, 4.0372e-04, 5.4461e-03,  ..., 8.9055e-04,
          9.9955e-01, 9.9802e-01],
         [2.4947e-04, 9.9879e-01, 9.8430e-01,  ..., 9.9733e-01,
          1.4930e-04, 6.6147e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1292e-04, 4.8177e-05, 2.2055e-05,  ..., 6.5977e-04,
          8.0415e-05, 1.0896e-03],
         [8.1292e-04, 4.8177e-05, 2.2055e-05,  ..., 6.5977e-04,
          8.0415e-05, 1.0896e-03],
         [9.9756e-01, 4.8177e-05, 2.2055e-05,  ..., 9.9802e-01,
          8.0415e-05, 9.9673e-01],
         [8.1292e-04, 9.9986e-01, 9.9993e-01,  ..., 6.5977e-04,
          9.9976e-01, 1.0896e-03]],
        [[1.3744e-02, 2.4379e-04, 4.4573e-05,  ..., 2.8844e-03,
          2.2924e-03, 9.9930e-01],
         [1.3744e-02, 2.4379e-04, 4.4573e-05,  ..., 2.8844e-03,
          2.2924e-03, 2.3334e-04],
         [9.3601e-01, 2.4379e-04, 4.4573e-05,  ..., 9.9073e-01,
          9.9312e-01, 2.3334e-04],
         [3.6498e-02, 9.9927e-01, 9.9987e-01,  ..., 3.5053e-03,
          2.2924e-03, 2.3334e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 694:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9883e-01, 1.8101e-03, 8.5039e-04,  ..., 9.9974e-01,
          9.7020e-01, 5.3545e-04],
         [3.0699e-04, 1.8101e-03, 8.5039e-04,  ..., 8.5223e-05,
          4.7353e-03, 5.3545e-04],
         [5.5361e-04, 1.8101e-03, 8.5039e-04,  ..., 8.5223e-05,
          2.0328e-02, 5.3545e-04],
         [3.0699e-04, 9.9457e-01, 9.9745e-01,  ..., 8.5223e-05,
          4.7353e-03, 9.9839e-01]],
        [[9.9498e-01, 5.9540e-03, 2.0425e-03,  ..., 6.5767e-03,
          4.7544e-04, 4.0207e-04],
         [1.2015e-03, 3.0368e-03, 2.4984e-03,  ..., 9.1859e-03,
          4.7544e-04, 4.0207e-04],
         [2.6152e-03, 3.2065e-03, 2.0425e-03,  ..., 6.9150e-03,
          9.9857e-01, 9.9879e-01],
         [1.2015e-03, 9.8780e-01, 9.9342e-01,  ..., 9.7732e-01,
          4.7544e-04, 4.0207e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:02,492 [Process: 0] Synchronize training processes
2024-08-18 19:58:02,492 [Process: 0] Evaluating...
2024-08-18 19:58:02,494 [Process: 0] EPOCH 693:
2024-08-18 19:58:02,496 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:03,638 [Process: 0] Synchronize training processes
2024-08-18 19:58:03,639 [Process: 0] Evaluating...
2024-08-18 19:58:03,641 [Process: 0] EPOCH 694:
2024-08-18 19:58:03,642 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9456e-03, 1.4851e-03, 9.6791e-06,  ..., 1.8698e-03,
          2.3657e-05, 3.8010e-03],
         [1.9456e-03, 1.4851e-03, 9.6791e-06,  ..., 1.8698e-03,
          2.1317e-05, 3.2978e-03],
         [9.9416e-01, 1.4851e-03, 9.6791e-06,  ..., 9.9439e-01,
          2.1317e-05, 9.8960e-01],
         [1.9456e-03, 9.9554e-01, 9.9997e-01,  ..., 1.8698e-03,
          9.9993e-01, 3.2978e-03]],
        [[3.1445e-03, 7.2323e-04, 5.8351e-05,  ..., 9.2512e-03,
          1.3456e-03, 9.9751e-01],
         [3.1445e-03, 7.2323e-04, 5.8351e-05,  ..., 7.9632e-03,
          1.3456e-03, 8.2564e-04],
         [9.9057e-01, 7.2323e-04, 5.8351e-05,  ..., 9.7191e-01,
          9.9596e-01, 8.2564e-04],
         [3.1457e-03, 9.9783e-01, 9.9982e-01,  ..., 1.0877e-02,
          1.3456e-03, 8.3453e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 695:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9441e-01, 4.6979e-04, 1.1807e-03,  ..., 9.9917e-01,
          9.9058e-01, 7.7038e-04],
         [2.0374e-03, 4.6979e-04, 1.2932e-03,  ..., 2.4151e-04,
          2.3082e-03, 7.7038e-04],
         [2.1763e-03, 4.6979e-04, 1.1807e-03,  ..., 3.4546e-04,
          4.8060e-03, 7.7038e-04],
         [1.3759e-03, 9.9859e-01, 9.9635e-01,  ..., 2.4151e-04,
          2.3082e-03, 9.9769e-01]],
        [[9.9773e-01, 4.8363e-04, 1.3227e-03,  ..., 1.6499e-03,
          1.4861e-03, 1.2604e-05],
         [5.2264e-04, 4.8363e-04, 1.3227e-03,  ..., 1.4508e-03,
          1.4861e-03, 1.2604e-05],
         [1.2204e-03, 4.8363e-04, 1.3227e-03,  ..., 1.4508e-03,
          9.9554e-01, 9.9996e-01],
         [5.2264e-04, 9.9855e-01, 9.9603e-01,  ..., 9.9545e-01,
          1.4861e-03, 1.2604e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2373e-03, 5.1234e-06, 8.7937e-05,  ..., 2.1798e-03,
          7.8731e-04, 4.4170e-02],
         [1.2373e-03, 5.1234e-06, 8.7937e-05,  ..., 2.1798e-03,
          7.8731e-04, 1.1453e-02],
         [9.9629e-01, 5.1234e-06, 8.7937e-05,  ..., 9.9337e-01,
          7.8731e-04, 9.3292e-01],
         [1.2373e-03, 9.9998e-01, 9.9974e-01,  ..., 2.2658e-03,
          9.9764e-01, 1.1453e-02]],
        [[1.2228e-03, 4.7647e-05, 1.5084e-05,  ..., 3.4172e-03,
          1.1807e-03, 9.9996e-01],
         [1.2228e-03, 4.7647e-05, 1.5084e-05,  ..., 3.4172e-03,
          1.1807e-03, 1.2915e-05],
         [9.9633e-01, 4.7647e-05, 1.5084e-05,  ..., 9.8957e-01,
          9.9646e-01, 1.2915e-05],
         [1.2228e-03, 9.9986e-01, 9.9995e-01,  ..., 3.5989e-03,
          1.1807e-03, 1.2915e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 696:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9942e-01, 7.3656e-04, 4.0901e-03,  ..., 9.9771e-01,
          9.8939e-01, 3.4647e-03],
         [1.9354e-04, 6.9027e-04, 2.4519e-03,  ..., 1.0112e-03,
          2.6085e-03, 3.4647e-03],
         [1.9354e-04, 6.9027e-04, 2.8884e-03,  ..., 6.4160e-04,
          5.3975e-03, 4.4845e-03],
         [1.9354e-04, 9.9788e-01, 9.9057e-01,  ..., 6.4160e-04,
          2.6085e-03, 9.8859e-01]],
        [[9.9960e-01, 4.1689e-03, 1.0641e-03,  ..., 2.1867e-03,
          1.4015e-05, 5.3393e-04],
         [1.3176e-04, 2.6462e-03, 1.0641e-03,  ..., 2.1867e-03,
          1.4015e-05, 5.3393e-04],
         [1.3176e-04, 2.7323e-03, 1.0641e-03,  ..., 2.3682e-03,
          9.9996e-01, 9.9840e-01],
         [1.3176e-04, 9.9045e-01, 9.9681e-01,  ..., 9.9326e-01,
          1.4015e-05, 5.3393e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:04,789 [Process: 0] Synchronize training processes
2024-08-18 19:58:04,789 [Process: 0] Evaluating...
2024-08-18 19:58:04,791 [Process: 0] EPOCH 695:
2024-08-18 19:58:04,793 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:05,941 [Process: 0] Synchronize training processes
2024-08-18 19:58:05,941 [Process: 0] Evaluating...
2024-08-18 19:58:05,943 [Process: 0] EPOCH 696:
2024-08-18 19:58:05,945 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7816e-03, 2.8312e-04, 2.0423e-04,  ..., 1.0160e-03,
          1.8757e-04, 6.4338e-03],
         [4.7816e-03, 3.5174e-04, 2.0423e-04,  ..., 1.0160e-03,
          1.8757e-04, 4.6574e-03],
         [9.8365e-01, 2.8312e-04, 2.0423e-04,  ..., 9.9695e-01,
          1.8757e-04, 9.8425e-01],
         [6.7883e-03, 9.9908e-01, 9.9939e-01,  ..., 1.0160e-03,
          9.9944e-01, 4.6574e-03]],
        [[1.3019e-03, 1.4725e-04, 4.5838e-05,  ..., 2.7875e-03,
          1.2150e-03, 9.9972e-01],
         [1.3019e-03, 1.4725e-04, 4.5838e-05,  ..., 2.7875e-03,
          1.2150e-03, 9.3278e-05],
         [9.9609e-01, 1.4725e-04, 4.5838e-05,  ..., 9.9112e-01,
          9.9635e-01, 9.3278e-05],
         [1.3019e-03, 9.9956e-01, 9.9986e-01,  ..., 3.3021e-03,
          1.2150e-03, 9.3278e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 697:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9893e-01, 4.9297e-03, 1.4039e-03,  ..., 9.9933e-01,
          9.9778e-01, 7.0260e-04],
         [3.2396e-04, 4.4513e-03, 1.4039e-03,  ..., 2.2182e-04,
          5.2445e-04, 7.0260e-04],
         [4.2101e-04, 3.8584e-03, 1.4058e-03,  ..., 2.2182e-04,
          1.1680e-03, 7.0260e-04],
         [3.2396e-04, 9.8676e-01, 9.9579e-01,  ..., 2.2182e-04,
          5.2445e-04, 9.9789e-01]],
        [[9.9742e-01, 1.5282e-03, 1.7610e-03,  ..., 3.1957e-03,
          1.3454e-03, 1.3306e-04],
         [8.6113e-04, 1.5845e-03, 1.8585e-03,  ..., 2.7294e-03,
          1.3454e-03, 1.3306e-04],
         [8.6113e-04, 1.5282e-03, 1.7610e-03,  ..., 3.3348e-03,
          9.9596e-01, 9.9960e-01],
         [8.6113e-04, 9.9536e-01, 9.9462e-01,  ..., 9.9074e-01,
          1.3454e-03, 1.3306e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3877e-03, 5.7845e-05, 2.5138e-04,  ..., 3.1783e-03,
          3.7309e-04, 1.2902e-03],
         [1.3877e-03, 5.7845e-05, 2.5138e-04,  ..., 3.1783e-03,
          3.1770e-04, 1.2902e-03],
         [9.9584e-01, 5.7845e-05, 2.5138e-04,  ..., 9.9046e-01,
          3.1770e-04, 9.9613e-01],
         [1.3877e-03, 9.9983e-01, 9.9925e-01,  ..., 3.1783e-03,
          9.9899e-01, 1.2902e-03]],
        [[1.9624e-03, 2.2497e-05, 5.2867e-05,  ..., 9.1371e-03,
          7.5181e-04, 9.9989e-01],
         [1.9624e-03, 2.2497e-05, 5.2867e-05,  ..., 8.1657e-03,
          7.5181e-04, 3.6602e-05],
         [9.9411e-01, 2.2497e-05, 5.2867e-05,  ..., 9.6995e-01,
          9.9774e-01, 3.6602e-05],
         [1.9624e-03, 9.9993e-01, 9.9984e-01,  ..., 1.2747e-02,
          7.5181e-04, 3.6602e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 698:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:07,088 [Process: 0] Synchronize training processes
2024-08-18 19:58:07,088 [Process: 0] Evaluating...
2024-08-18 19:58:07,090 [Process: 0] EPOCH 697:
2024-08-18 19:58:07,092 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:08,221 [Process: 0] Synchronize training processes
2024-08-18 19:58:08,222 [Process: 0] Evaluating...
2024-08-18 19:58:08,224 [Process: 0] EPOCH 698:
2024-08-18 19:58:08,225 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9362e-01, 1.4155e-03, 1.6485e-03,  ..., 9.9988e-01,
          9.8757e-01, 9.7990e-04],
         [2.1812e-03, 1.1702e-03, 1.3288e-03,  ..., 3.8611e-05,
          2.7538e-03, 9.7990e-04],
         [2.7635e-03, 1.1702e-03, 1.3288e-03,  ..., 3.8611e-05,
          6.9249e-03, 9.7990e-04],
         [1.4334e-03, 9.9624e-01, 9.9569e-01,  ..., 3.8611e-05,
          2.7538e-03, 9.9706e-01]],
        [[9.9961e-01, 1.0196e-03, 2.1895e-03,  ..., 1.5359e-02,
          4.6011e-04, 2.9375e-04],
         [1.0965e-04, 1.0196e-03, 2.1895e-03,  ..., 6.9259e-03,
          4.6011e-04, 2.9375e-04],
         [1.6661e-04, 1.0196e-03, 2.1895e-03,  ..., 1.2994e-02,
          9.9862e-01, 9.9912e-01],
         [1.0965e-04, 9.9694e-01, 9.9343e-01,  ..., 9.6472e-01,
          4.6011e-04, 2.9375e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9305e-03, 4.6685e-04, 1.0207e-04,  ..., 1.6851e-03,
          1.0064e-04, 1.7536e-03],
         [1.4298e-03, 3.3601e-04, 1.0207e-04,  ..., 1.6851e-03,
          1.0064e-04, 1.1725e-03],
         [9.9521e-01, 3.3601e-04, 1.0207e-04,  ..., 9.9494e-01,
          1.0064e-04, 9.9590e-01],
         [1.4298e-03, 9.9886e-01, 9.9969e-01,  ..., 1.6851e-03,
          9.9970e-01, 1.1725e-03]],
        [[2.7091e-03, 1.4559e-04, 4.1629e-05,  ..., 1.0556e-03,
          8.2158e-04, 9.9908e-01],
         [2.7091e-03, 1.4559e-04, 4.1629e-05,  ..., 1.0556e-03,
          8.2158e-04, 3.0728e-04],
         [9.9187e-01, 1.4559e-04, 4.1629e-05,  ..., 9.9683e-01,
          9.9754e-01, 3.0728e-04],
         [2.7091e-03, 9.9956e-01, 9.9988e-01,  ..., 1.0556e-03,
          8.2158e-04, 3.0728e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 699:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9972e-01, 9.9650e-04, 2.3691e-03,  ..., 9.9927e-01,
          9.9066e-01, 5.6747e-04],
         [9.4751e-05, 9.9650e-04, 2.3691e-03,  ..., 2.4289e-04,
          2.2895e-03, 5.6747e-04],
         [9.4751e-05, 9.9650e-04, 2.3691e-03,  ..., 2.4289e-04,
          4.7660e-03, 5.6747e-04],
         [9.4751e-05, 9.9701e-01, 9.9289e-01,  ..., 2.4289e-04,
          2.2895e-03, 9.9830e-01]],
        [[9.9888e-01, 4.4997e-04, 2.1915e-03,  ..., 4.3747e-03,
          4.8558e-04, 7.3765e-04],
         [3.3666e-04, 4.4997e-04, 1.5274e-03,  ..., 2.8495e-03,
          4.8558e-04, 7.3765e-04],
         [4.4569e-04, 4.4997e-04, 1.7455e-03,  ..., 4.3230e-03,
          9.9854e-01, 9.9779e-01],
         [3.3666e-04, 9.9865e-01, 9.9454e-01,  ..., 9.8845e-01,
          4.8558e-04, 7.3765e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6780e-03, 7.5766e-05, 1.3418e-06,  ..., 1.3372e-03,
          2.4696e-04, 1.2726e-03],
         [1.1847e-03, 7.5766e-05, 1.3418e-06,  ..., 1.2959e-03,
          1.9932e-04, 1.2726e-03],
         [9.9595e-01, 7.5766e-05, 1.3418e-06,  ..., 9.9607e-01,
          1.9932e-04, 9.9618e-01],
         [1.1847e-03, 9.9977e-01, 1.0000e+00,  ..., 1.2959e-03,
          9.9935e-01, 1.2726e-03]],
        [[4.0679e-03, 1.9646e-04, 2.2686e-04,  ..., 2.8814e-03,
          2.5602e-03, 9.9991e-01],
         [4.0679e-03, 1.9646e-04, 2.2686e-04,  ..., 2.8814e-03,
          2.5602e-03, 3.0240e-05],
         [9.8780e-01, 1.9646e-04, 2.2686e-04,  ..., 9.9136e-01,
          9.9232e-01, 3.0240e-05],
         [4.0679e-03, 9.9941e-01, 9.9932e-01,  ..., 2.8814e-03,
          2.5602e-03, 3.0240e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:09,372 [Process: 0] Synchronize training processes
2024-08-18 19:58:09,372 [Process: 0] Evaluating...
2024-08-18 19:58:09,374 [Process: 0] EPOCH 699:
2024-08-18 19:58:09,376 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 700:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9640e-01, 1.7182e-03, 2.0637e-03,  ..., 9.9972e-01,
          9.9714e-01, 4.1115e-04],
         [1.0211e-03, 1.2259e-03, 2.0637e-03,  ..., 9.2607e-05,
          6.9171e-04, 4.1115e-04],
         [1.5542e-03, 1.2259e-03, 2.0637e-03,  ..., 9.2607e-05,
          1.4750e-03, 4.1115e-04],
         [1.0211e-03, 9.9583e-01, 9.9381e-01,  ..., 9.2607e-05,
          6.9171e-04, 9.9877e-01]],
        [[9.9954e-01, 5.6918e-04, 3.2806e-03,  ..., 2.1778e-03,
          4.3023e-04, 3.9224e-04],
         [1.5423e-04, 5.6918e-04, 2.3911e-03,  ..., 1.2497e-03,
          4.3023e-04, 3.9224e-04],
         [1.5423e-04, 5.6918e-04, 2.3911e-03,  ..., 1.3492e-03,
          9.9871e-01, 9.9882e-01],
         [1.5423e-04, 9.9829e-01, 9.9194e-01,  ..., 9.9522e-01,
          4.3023e-04, 3.9224e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2822e-03, 9.0535e-04, 3.8969e-05,  ..., 4.4623e-03,
          7.8467e-04, 3.6966e-03],
         [1.2822e-03, 9.0535e-04, 3.8969e-05,  ..., 3.5157e-03,
          7.8467e-04, 1.4027e-03],
         [9.9615e-01, 9.0535e-04, 3.8969e-05,  ..., 9.8851e-01,
          7.8467e-04, 9.9350e-01],
         [1.2822e-03, 9.9728e-01, 9.9988e-01,  ..., 3.5157e-03,
          9.9765e-01, 1.4027e-03]],
        [[2.5767e-03, 6.5388e-04, 4.6446e-05,  ..., 3.0429e-03,
          6.5735e-04, 9.9748e-01],
         [2.5767e-03, 6.5388e-04, 4.6446e-05,  ..., 3.0429e-03,
          6.5735e-04, 7.1803e-04],
         [9.9187e-01, 6.5388e-04, 4.6446e-05,  ..., 9.9066e-01,
          9.9803e-01, 7.1803e-04],
         [2.9747e-03, 9.9804e-01, 9.9986e-01,  ..., 3.2582e-03,
          6.5735e-04, 1.0876e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 701:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9634e-01, 2.2526e-03, 2.4703e-03,  ..., 9.9976e-01,
          9.3227e-01, 2.9729e-04],
         [9.0555e-04, 1.9968e-03, 2.1802e-03,  ..., 6.9452e-05,
          1.1303e-02, 2.9729e-04],
         [1.8501e-03, 1.9968e-03, 2.1802e-03,  ..., 9.7969e-05,
          2.7973e-02, 2.9729e-04],
         [9.0555e-04, 9.9375e-01, 9.9317e-01,  ..., 6.9452e-05,
          2.8450e-02, 9.9911e-01]],
        [[9.9910e-01, 3.6722e-03, 8.7459e-03,  ..., 4.0695e-03,
          9.1332e-05, 3.9477e-04],
         [2.5018e-04, 2.2208e-03, 4.1383e-03,  ..., 2.3066e-03,
          9.1332e-05, 3.9477e-04],
         [3.9793e-04, 2.2319e-03, 5.4136e-03,  ..., 3.6951e-03,
          9.9973e-01, 9.9882e-01],
         [2.5018e-04, 9.9188e-01, 9.8170e-01,  ..., 9.8993e-01,
          9.1332e-05, 3.9477e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:10,535 [Process: 0] Synchronize training processes
2024-08-18 19:58:10,535 [Process: 0] Evaluating...
2024-08-18 19:58:10,537 [Process: 0] EPOCH 700:
2024-08-18 19:58:10,539 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:11,684 [Process: 0] Synchronize training processes
2024-08-18 19:58:11,684 [Process: 0] Evaluating...
2024-08-18 19:58:11,686 [Process: 0] EPOCH 701:
2024-08-18 19:58:11,688 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:12,831 [Process: 0] Synchronize training processes
2024-08-18 19:58:12,831 [Process: 0] Evaluating...
2024-08-18 19:58:12,838 [Process: 0] EPOCH 702:
2024-08-18 19:58:12,840 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:13,983 [Process: 0] Synchronize training processes
2024-08-18 19:58:13,984 [Process: 0] Evaluating...
2024-08-18 19:58:13,986 [Process: 0] EPOCH 703:
2024-08-18 19:58:13,988 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7401e-03, 9.3621e-06, 8.7318e-05,  ..., 4.5452e-03,
          2.4720e-05, 2.4993e-03],
         [1.7401e-03, 9.3621e-06, 8.7318e-05,  ..., 3.7308e-03,
          2.4720e-05, 1.8190e-03],
         [9.9478e-01, 9.3621e-06, 8.7318e-05,  ..., 9.8799e-01,
          2.4720e-05, 9.9386e-01],
         [1.7401e-03, 9.9997e-01, 9.9974e-01,  ..., 3.7308e-03,
          9.9993e-01, 1.8190e-03]],
        [[1.7513e-03, 1.0928e-03, 2.2221e-05,  ..., 5.3353e-03,
          1.1223e-03, 9.9998e-01],
         [1.7513e-03, 1.0928e-03, 2.2221e-05,  ..., 5.2448e-03,
          1.1223e-03, 5.1809e-06],
         [9.9472e-01, 1.0928e-03, 2.2221e-05,  ..., 9.8391e-01,
          9.9663e-01, 5.1809e-06],
         [1.7799e-03, 9.9672e-01, 9.9993e-01,  ..., 5.5110e-03,
          1.1223e-03, 5.1809e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 702:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9773e-01, 6.4807e-04, 1.3329e-03,  ..., 9.9960e-01,
          9.9008e-01, 2.1141e-04],
         [5.0145e-04, 6.3467e-04, 1.3026e-03,  ..., 1.3212e-04,
          2.5677e-03, 2.1141e-04],
         [1.2678e-03, 6.3467e-04, 1.4819e-03,  ..., 1.3212e-04,
          3.3230e-03, 2.1141e-04],
         [5.0145e-04, 9.9808e-01, 9.9588e-01,  ..., 1.3212e-04,
          4.0308e-03, 9.9937e-01]],
        [[9.9893e-01, 2.9246e-03, 2.4577e-03,  ..., 3.6234e-03,
          2.4558e-04, 1.7939e-05],
         [3.5702e-04, 2.9246e-03, 2.4577e-03,  ..., 1.8824e-03,
          2.4558e-04, 1.7939e-05],
         [3.5702e-04, 3.0350e-03, 2.6436e-03,  ..., 2.3349e-03,
          9.9926e-01, 9.9995e-01],
         [3.5702e-04, 9.9112e-01, 9.9244e-01,  ..., 9.9216e-01,
          2.4558e-04, 1.7939e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4735e-04, 2.7094e-06, 9.3642e-05,  ..., 1.3149e-03,
          2.4600e-05, 5.3999e-03],
         [9.4735e-04, 2.7094e-06, 9.3642e-05,  ..., 1.3149e-03,
          2.4600e-05, 2.4718e-03],
         [9.9716e-01, 2.7094e-06, 9.3642e-05,  ..., 9.9606e-01,
          2.4600e-05, 9.8966e-01],
         [9.4735e-04, 9.9999e-01, 9.9972e-01,  ..., 1.3149e-03,
          9.9993e-01, 2.4718e-03]],
        [[3.9054e-03, 5.5415e-03, 6.3490e-04,  ..., 7.6006e-03,
          5.2144e-03, 9.9944e-01],
         [3.9054e-03, 5.5415e-03, 6.3490e-04,  ..., 6.2700e-03,
          5.2144e-03, 1.8639e-04],
         [9.8624e-01, 6.5975e-03, 6.3490e-04,  ..., 9.7833e-01,
          9.8271e-01, 1.8639e-04],
         [5.9537e-03, 9.8232e-01, 9.9810e-01,  ..., 7.7971e-03,
          6.8590e-03, 1.8639e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 703:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9868e-01, 2.1560e-03, 2.2329e-03,  ..., 9.9995e-01,
          9.9619e-01, 5.6238e-04],
         [4.8569e-04, 2.0977e-03, 2.2329e-03,  ..., 1.7326e-05,
          1.1082e-03, 5.6238e-04],
         [4.1568e-04, 2.2021e-03, 2.2329e-03,  ..., 1.7326e-05,
          1.5912e-03, 5.6238e-04],
         [4.1568e-04, 9.9354e-01, 9.9330e-01,  ..., 1.7326e-05,
          1.1082e-03, 9.9831e-01]],
        [[9.9940e-01, 1.1648e-03, 4.1261e-03,  ..., 4.3716e-03,
          3.5936e-05, 4.6429e-04],
         [1.9896e-04, 1.1648e-03, 4.8121e-03,  ..., 3.8284e-03,
          3.5936e-05, 4.6429e-04],
         [1.9896e-04, 1.1648e-03, 4.3165e-03,  ..., 5.5468e-03,
          9.9989e-01, 9.9861e-01],
         [1.9896e-04, 9.9651e-01, 9.8675e-01,  ..., 9.8625e-01,
          3.5936e-05, 4.6429e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:15,136 [Process: 0] Synchronize training processes
2024-08-18 19:58:15,136 [Process: 0] Evaluating...
2024-08-18 19:58:15,138 [Process: 0] EPOCH 704:
2024-08-18 19:58:15,140 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:16,288 [Process: 0] Synchronize training processes
2024-08-18 19:58:16,288 [Process: 0] Evaluating...
2024-08-18 19:58:16,290 [Process: 0] EPOCH 705:
2024-08-18 19:58:16,291 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1450e-03, 4.7332e-04, 4.0821e-05,  ..., 1.0343e-02,
          4.8620e-04, 1.0122e-03],
         [1.1450e-03, 4.7332e-04, 4.0821e-05,  ..., 6.1476e-03,
          4.8620e-04, 6.7519e-04],
         [9.9657e-01, 4.7332e-04, 4.0821e-05,  ..., 9.7736e-01,
          4.8620e-04, 9.9764e-01],
         [1.1450e-03, 9.9858e-01, 9.9988e-01,  ..., 6.1476e-03,
          9.9854e-01, 6.7519e-04]],
        [[1.0742e-03, 1.7369e-04, 2.4221e-04,  ..., 3.5991e-03,
          6.4523e-04, 9.9980e-01],
         [1.0742e-03, 1.7369e-04, 2.4221e-04,  ..., 3.5991e-03,
          6.4523e-04, 6.6314e-05],
         [9.9678e-01, 1.7369e-04, 2.4221e-04,  ..., 9.8885e-01,
          9.9806e-01, 6.6314e-05],
         [1.0742e-03, 9.9948e-01, 9.9927e-01,  ..., 3.9531e-03,
          6.4523e-04, 6.6314e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 704:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9517e-01, 1.7578e-03, 1.7892e-03,  ..., 9.9931e-01,
          9.8990e-01, 1.9652e-03],
         [1.1348e-03, 1.0602e-03, 1.7892e-03,  ..., 2.3017e-04,
          2.2825e-03, 1.8810e-03],
         [2.5585e-03, 1.0602e-03, 1.7892e-03,  ..., 2.3017e-04,
          5.0780e-03, 2.1464e-03],
         [1.1348e-03, 9.9612e-01, 9.9463e-01,  ..., 2.3017e-04,
          2.7353e-03, 9.9401e-01]],
        [[9.9639e-01, 3.5634e-04, 1.8785e-03,  ..., 1.8240e-03,
          2.2038e-04, 3.3429e-04],
         [1.1127e-03, 3.5634e-04, 1.8785e-03,  ..., 1.8240e-03,
          2.2038e-04, 3.3429e-04],
         [1.3818e-03, 3.5634e-04, 2.1279e-03,  ..., 2.2245e-03,
          9.9934e-01, 9.9900e-01],
         [1.1127e-03, 9.9893e-01, 9.9412e-01,  ..., 9.9413e-01,
          2.2038e-04, 3.3429e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2275e-03, 1.8293e-05, 1.1473e-04,  ..., 8.0878e-04,
          4.4646e-04, 9.4284e-03],
         [5.3740e-03, 1.8293e-05, 1.1473e-04,  ..., 8.0878e-04,
          4.4646e-04, 3.0066e-03],
         [9.8002e-01, 1.8293e-05, 1.1473e-04,  ..., 9.9757e-01,
          4.4646e-04, 9.8456e-01],
         [5.3740e-03, 9.9995e-01, 9.9966e-01,  ..., 8.0878e-04,
          9.9866e-01, 3.0066e-03]],
        [[4.4677e-03, 2.9943e-04, 1.4021e-03,  ..., 5.1604e-03,
          2.1106e-03, 9.9603e-01],
         [4.4677e-03, 2.9943e-04, 1.9984e-03,  ..., 4.2014e-03,
          2.1106e-03, 1.1952e-03],
         [9.8303e-01, 2.9943e-04, 1.4021e-03,  ..., 9.8644e-01,
          9.9367e-01, 1.1952e-03],
         [8.0322e-03, 9.9910e-01, 9.9520e-01,  ..., 4.2014e-03,
          2.1106e-03, 1.5779e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 705:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:17,435 [Process: 0] Synchronize training processes
2024-08-18 19:58:17,435 [Process: 0] Evaluating...
2024-08-18 19:58:17,437 [Process: 0] EPOCH 706:
2024-08-18 19:58:17,438 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9581e-01, 2.1841e-03, 1.6713e-03,  ..., 9.9647e-01,
          9.9856e-01, 1.1908e-03],
         [1.6967e-03, 2.6426e-03, 1.6713e-03,  ..., 9.6783e-04,
          4.1773e-04, 1.2434e-03],
         [1.5315e-03, 2.5909e-03, 1.6713e-03,  ..., 1.5933e-03,
          6.0610e-04, 1.1908e-03],
         [9.6295e-04, 9.9258e-01, 9.9499e-01,  ..., 9.6783e-04,
          4.1773e-04, 9.9637e-01]],
        [[9.9936e-01, 3.2417e-03, 2.8969e-03,  ..., 2.2740e-03,
          7.8498e-04, 3.2546e-05],
         [1.9451e-04, 3.2417e-03, 2.1354e-03,  ..., 2.2740e-03,
          7.8498e-04, 3.2546e-05],
         [2.4753e-04, 4.3284e-03, 2.3805e-03,  ..., 2.2740e-03,
          9.9765e-01, 9.9990e-01],
         [1.9451e-04, 9.8919e-01, 9.9259e-01,  ..., 9.9318e-01,
          7.8498e-04, 3.2546e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2275e-03, 9.0802e-06, 8.8545e-06,  ..., 3.6870e-03,
          1.8530e-04, 2.2607e-03],
         [1.5518e-03, 9.0802e-06, 8.8545e-06,  ..., 3.6870e-03,
          1.8530e-04, 1.9344e-03],
         [9.9467e-01, 9.0802e-06, 8.8545e-06,  ..., 9.8894e-01,
          1.8530e-04, 9.9387e-01],
         [1.5518e-03, 9.9997e-01, 9.9997e-01,  ..., 3.6870e-03,
          9.9944e-01, 1.9344e-03]],
        [[2.8298e-03, 1.1138e-03, 2.9878e-04,  ..., 1.2448e-03,
          1.1533e-03, 9.9995e-01],
         [2.8298e-03, 9.7319e-04, 2.9878e-04,  ..., 1.2448e-03,
          1.1533e-03, 1.7094e-05],
         [9.9151e-01, 9.7319e-04, 2.9878e-04,  ..., 9.9627e-01,
          9.9654e-01, 1.7094e-05],
         [2.8298e-03, 9.9694e-01, 9.9910e-01,  ..., 1.2448e-03,
          1.1533e-03, 1.7094e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 706:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9838e-01, 2.0311e-03, 1.3465e-03,  ..., 9.9943e-01,
          9.9857e-01, 2.2055e-03],
         [4.4375e-04, 2.0311e-03, 1.3465e-03,  ..., 1.8860e-04,
          4.7562e-04, 2.2055e-03],
         [7.3094e-04, 2.2389e-03, 1.3465e-03,  ..., 1.8860e-04,
          4.7562e-04, 2.4827e-03],
         [4.4375e-04, 9.9370e-01, 9.9596e-01,  ..., 1.8860e-04,
          4.7562e-04, 9.9311e-01]],
        [[9.9809e-01, 9.9545e-04, 1.1522e-03,  ..., 1.6199e-03,
          3.7406e-04, 1.1255e-04],
         [5.3729e-04, 9.9545e-04, 1.1861e-03,  ..., 1.6199e-03,
          3.7406e-04, 1.1255e-04],
         [8.3316e-04, 9.9545e-04, 1.1522e-03,  ..., 1.9500e-03,
          9.9888e-01, 9.9966e-01],
         [5.3729e-04, 9.9701e-01, 9.9651e-01,  ..., 9.9481e-01,
          3.7406e-04, 1.1255e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.3601e-03, 3.0563e-05, 3.0981e-05,  ..., 2.7926e-03,
          6.9876e-05, 1.1533e-03],
         [3.3013e-03, 3.0563e-05, 3.0981e-05,  ..., 2.7926e-03,
          6.9876e-05, 1.1533e-03],
         [9.8804e-01, 3.0563e-05, 3.0981e-05,  ..., 9.9162e-01,
          6.9876e-05, 9.9654e-01],
         [3.3013e-03, 9.9991e-01, 9.9991e-01,  ..., 2.7926e-03,
          9.9979e-01, 1.1533e-03]],
        [[2.9228e-03, 5.4801e-04, 6.5834e-04,  ..., 8.7170e-03,
          1.0052e-03, 9.9989e-01],
         [2.9228e-03, 5.6681e-04, 6.5834e-04,  ..., 8.4183e-03,
          1.0052e-03, 3.6433e-05],
         [9.9067e-01, 5.4801e-04, 6.5834e-04,  ..., 9.6887e-01,
          9.9698e-01, 3.6433e-05],
         [3.4838e-03, 9.9834e-01, 9.9803e-01,  ..., 1.3994e-02,
          1.0052e-03, 3.6433e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 707:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9987e-01, 1.5144e-03, 1.3714e-03,  ..., 9.9892e-01,
          9.9481e-01, 1.2880e-03],
         [4.4777e-05, 1.5144e-03, 1.5550e-03,  ..., 2.9100e-04,
          1.4146e-03, 1.2880e-03],
         [4.4777e-05, 1.5144e-03, 1.3714e-03,  ..., 4.9470e-04,
          2.3615e-03, 1.5361e-03],
         [4.4777e-05, 9.9546e-01, 9.9570e-01,  ..., 2.9100e-04,
          1.4146e-03, 9.9589e-01]],
        [[9.9817e-01, 1.2491e-03, 2.1434e-03,  ..., 1.2987e-03,
          2.0331e-04, 5.7008e-04],
         [5.3976e-04, 1.1888e-03, 2.1409e-03,  ..., 1.2987e-03,
          2.0331e-04, 5.7008e-04],
         [7.4960e-04, 1.2576e-03, 2.2832e-03,  ..., 1.2987e-03,
          9.9939e-01, 9.9829e-01],
         [5.3976e-04, 9.9630e-01, 9.9343e-01,  ..., 9.9610e-01,
          2.0331e-04, 5.7008e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4117e-03, 4.7497e-05, 4.7799e-05,  ..., 2.4000e-03,
          3.9698e-04, 1.1629e-02],
         [1.1090e-03, 4.7497e-05, 4.7799e-05,  ..., 2.3329e-03,
          3.9698e-04, 3.9984e-03],
         [9.9637e-01, 4.7497e-05, 4.7799e-05,  ..., 9.9293e-01,
          3.9698e-04, 9.8037e-01],
         [1.1090e-03, 9.9986e-01, 9.9986e-01,  ..., 2.3329e-03,
          9.9881e-01, 3.9984e-03]],
        [[1.1681e-03, 1.1508e-03, 3.9283e-05,  ..., 6.6973e-03,
          1.4206e-03, 9.9991e-01],
         [1.1681e-03, 1.1508e-03, 3.9283e-05,  ..., 6.6973e-03,
          1.4206e-03, 3.0399e-05],
         [9.9650e-01, 1.1508e-03, 3.9283e-05,  ..., 9.7736e-01,
          9.9574e-01, 3.0399e-05],
         [1.1681e-03, 9.9655e-01, 9.9988e-01,  ..., 9.2449e-03,
          1.4206e-03, 3.0399e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 708:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9769e-01, 5.8722e-04, 2.8267e-03,  ..., 9.9959e-01,
          9.9909e-01, 7.7818e-04],
         [1.1041e-03, 5.8722e-04, 2.9833e-03,  ..., 1.3695e-04,
          3.0167e-04, 7.7818e-04],
         [6.0063e-04, 5.8722e-04, 3.0841e-03,  ..., 1.3695e-04,
          3.0167e-04, 7.7818e-04],
         [6.0063e-04, 9.9824e-01, 9.9111e-01,  ..., 1.3695e-04,
          3.0167e-04, 9.9767e-01]],
        [[9.9478e-01, 6.2878e-03, 9.2258e-04,  ..., 1.1423e-03,
          6.6647e-05, 3.6655e-04],
         [1.4967e-03, 3.5024e-03, 9.2258e-04,  ..., 1.1423e-03,
          6.6647e-05, 3.6655e-04],
         [2.2287e-03, 3.5966e-03, 9.2258e-04,  ..., 1.1423e-03,
          9.9980e-01, 9.9890e-01],
         [1.4967e-03, 9.8661e-01, 9.9723e-01,  ..., 9.9657e-01,
          6.6647e-05, 3.6655e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:18,581 [Process: 0] Synchronize training processes
2024-08-18 19:58:18,581 [Process: 0] Evaluating...
2024-08-18 19:58:18,583 [Process: 0] EPOCH 707:
2024-08-18 19:58:18,585 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:19,729 [Process: 0] Synchronize training processes
2024-08-18 19:58:19,729 [Process: 0] Evaluating...
2024-08-18 19:58:19,731 [Process: 0] EPOCH 708:
2024-08-18 19:58:19,733 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3173e-03, 5.0801e-05, 2.4274e-05,  ..., 1.5701e-03,
          5.2088e-04, 1.2529e-03],
         [1.6886e-03, 5.0801e-05, 2.4274e-05,  ..., 1.5701e-03,
          5.2088e-04, 1.2529e-03],
         [9.9331e-01, 5.0801e-05, 2.4274e-05,  ..., 9.9529e-01,
          5.2088e-04, 9.9624e-01],
         [1.6886e-03, 9.9985e-01, 9.9993e-01,  ..., 1.5701e-03,
          9.9844e-01, 1.2529e-03]],
        [[7.2123e-03, 1.1534e-04, 1.8075e-04,  ..., 4.9586e-03,
          1.5439e-03, 9.9914e-01],
         [7.2123e-03, 1.1534e-04, 1.8075e-04,  ..., 4.8639e-03,
          1.5439e-03, 2.7621e-04],
         [9.7109e-01, 1.1534e-04, 1.8075e-04,  ..., 9.8531e-01,
          9.9537e-01, 2.7621e-04],
         [1.4490e-02, 9.9965e-01, 9.9946e-01,  ..., 4.8639e-03,
          1.5439e-03, 3.0515e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 709:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9878e-01, 3.5543e-03, 6.5742e-04,  ..., 9.9921e-01,
          9.8224e-01, 3.8611e-04],
         [3.2125e-04, 4.0137e-03, 5.3631e-04,  ..., 2.6172e-04,
          3.5853e-03, 3.8611e-04],
         [5.7956e-04, 3.6321e-03, 5.3631e-04,  ..., 2.6172e-04,
          1.0593e-02, 3.8611e-04],
         [3.2125e-04, 9.8880e-01, 9.9827e-01,  ..., 2.6172e-04,
          3.5853e-03, 9.9884e-01]],
        [[9.8555e-01, 1.4985e-03, 2.7102e-03,  ..., 4.4229e-03,
          1.8149e-04, 6.5691e-04],
         [4.8532e-03, 1.4985e-03, 2.7102e-03,  ..., 3.4181e-03,
          1.8149e-04, 6.5691e-04],
         [6.3596e-03, 1.4985e-03, 2.8460e-03,  ..., 3.2660e-03,
          9.9946e-01, 9.9803e-01],
         [3.2383e-03, 9.9550e-01, 9.9173e-01,  ..., 9.8889e-01,
          1.8149e-04, 6.5691e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5837e-03, 1.3272e-04, 7.7363e-05,  ..., 2.4456e-03,
          2.5512e-03, 4.0450e-03],
         [1.3641e-03, 1.3272e-04, 7.7363e-05,  ..., 2.0429e-03,
          1.8646e-03, 3.2632e-03],
         [9.9569e-01, 1.3272e-04, 7.7363e-05,  ..., 9.9347e-01,
          1.8646e-03, 9.8943e-01],
         [1.3641e-03, 9.9960e-01, 9.9977e-01,  ..., 2.0429e-03,
          9.9372e-01, 3.2632e-03]],
        [[2.1333e-03, 1.8185e-04, 3.2509e-04,  ..., 3.7534e-03,
          1.7300e-03, 9.9869e-01],
         [2.1333e-03, 1.8185e-04, 3.2509e-04,  ..., 3.7534e-03,
          1.7300e-03, 3.5677e-04],
         [9.9360e-01, 1.8185e-04, 3.2509e-04,  ..., 9.8874e-01,
          9.9481e-01, 3.5677e-04],
         [2.1333e-03, 9.9945e-01, 9.9902e-01,  ..., 3.7534e-03,
          1.7300e-03, 5.9358e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 710:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9975e-01, 1.7037e-03, 1.8226e-03,  ..., 9.9702e-01,
          9.9266e-01, 9.5944e-04],
         [8.4560e-05, 1.3625e-03, 1.8226e-03,  ..., 6.5475e-04,
          1.9219e-03, 9.5944e-04],
         [8.4560e-05, 1.3723e-03, 1.8226e-03,  ..., 1.6711e-03,
          2.3595e-03, 9.5944e-04],
         [8.4560e-05, 9.9556e-01, 9.9453e-01,  ..., 6.5475e-04,
          3.0543e-03, 9.9712e-01]],
        [[9.9910e-01, 4.1336e-04, 7.7287e-03,  ..., 1.8184e-03,
          2.2506e-04, 2.6469e-05],
         [2.0018e-04, 4.1336e-04, 5.7700e-03,  ..., 1.4268e-03,
          2.2506e-04, 2.6469e-05],
         [5.0319e-04, 4.1336e-04, 5.5648e-03,  ..., 1.5082e-03,
          9.9932e-01, 9.9992e-01],
         [2.0018e-04, 9.9876e-01, 9.8094e-01,  ..., 9.9525e-01,
          2.2506e-04, 2.6469e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:20,876 [Process: 0] Synchronize training processes
2024-08-18 19:58:20,877 [Process: 0] Evaluating...
2024-08-18 19:58:20,879 [Process: 0] EPOCH 709:
2024-08-18 19:58:20,881 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:22,015 [Process: 0] Synchronize training processes
2024-08-18 19:58:22,015 [Process: 0] Evaluating...
2024-08-18 19:58:22,017 [Process: 0] EPOCH 710:
2024-08-18 19:58:22,018 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8279e-03, 7.0888e-04, 1.0553e-04,  ..., 3.4705e-03,
          1.4609e-04, 1.3369e-03],
         [1.8279e-03, 7.0888e-04, 1.0553e-04,  ..., 3.4705e-03,
          1.0276e-04, 1.3369e-03],
         [9.9452e-01, 7.0888e-04, 1.0553e-04,  ..., 9.8883e-01,
          1.0276e-04, 9.9599e-01],
         [1.8279e-03, 9.9787e-01, 9.9968e-01,  ..., 4.2256e-03,
          9.9965e-01, 1.3369e-03]],
        [[2.5037e-03, 4.3901e-05, 5.0683e-05,  ..., 3.5320e-03,
          2.6836e-03, 9.9860e-01],
         [2.5037e-03, 4.3901e-05, 5.0683e-05,  ..., 3.5320e-03,
          2.5148e-03, 4.6219e-04],
         [9.9249e-01, 4.3901e-05, 5.0683e-05,  ..., 9.8939e-01,
          9.9229e-01, 4.6219e-04],
         [2.5037e-03, 9.9987e-01, 9.9985e-01,  ..., 3.5469e-03,
          2.5148e-03, 4.7969e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 711:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9925e-01, 4.3307e-03, 8.9179e-04,  ..., 9.9979e-01,
          9.9866e-01, 2.5833e-04],
         [2.8578e-04, 3.0790e-03, 8.9179e-04,  ..., 7.0114e-05,
          3.9942e-04, 2.5833e-04],
         [2.3384e-04, 3.5899e-03, 8.9179e-04,  ..., 7.0114e-05,
          5.3981e-04, 2.5833e-04],
         [2.3384e-04, 9.8900e-01, 9.9732e-01,  ..., 7.0114e-05,
          3.9942e-04, 9.9923e-01]],
        [[9.9813e-01, 4.6680e-03, 2.1695e-03,  ..., 5.0873e-03,
          1.8830e-04, 1.9309e-05],
         [4.3480e-04, 5.7080e-03, 1.5468e-03,  ..., 3.2883e-03,
          1.8830e-04, 1.9309e-05],
         [9.9581e-04, 6.1540e-03, 1.5468e-03,  ..., 3.9977e-03,
          9.9944e-01, 9.9994e-01],
         [4.3480e-04, 9.8347e-01, 9.9474e-01,  ..., 9.8763e-01,
          1.8830e-04, 1.9309e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7905e-03, 3.2375e-03, 1.0928e-04,  ..., 3.3964e-03,
          6.3512e-05, 1.9390e-03],
         [1.2046e-03, 3.2858e-03, 1.0928e-04,  ..., 3.3964e-03,
          6.3512e-05, 1.9390e-03],
         [9.9580e-01, 3.2375e-03, 1.0928e-04,  ..., 9.8981e-01,
          6.3512e-05, 9.9418e-01],
         [1.2046e-03, 9.9024e-01, 9.9967e-01,  ..., 3.3964e-03,
          9.9981e-01, 1.9390e-03]],
        [[1.2583e-03, 4.2400e-04, 1.2929e-04,  ..., 2.4162e-03,
          2.8884e-03, 9.9975e-01],
         [1.2583e-03, 4.2400e-04, 1.2929e-04,  ..., 2.4162e-03,
          2.8884e-03, 8.4664e-05],
         [9.9623e-01, 4.2400e-04, 1.2929e-04,  ..., 9.9275e-01,
          9.9133e-01, 8.4664e-05],
         [1.2583e-03, 9.9873e-01, 9.9961e-01,  ..., 2.4162e-03,
          2.8884e-03, 8.4664e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 712:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:23,164 [Process: 0] Synchronize training processes
2024-08-18 19:58:23,164 [Process: 0] Evaluating...
2024-08-18 19:58:23,166 [Process: 0] EPOCH 711:
2024-08-18 19:58:23,167 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:24,308 [Process: 0] Synchronize training processes
2024-08-18 19:58:24,308 [Process: 0] Evaluating...
2024-08-18 19:58:24,315 [Process: 0] EPOCH 712:
2024-08-18 19:58:24,317 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9944e-01, 1.1565e-03, 8.8723e-04,  ..., 9.9625e-01,
          9.9729e-01, 1.3889e-03],
         [1.4172e-04, 1.1565e-03, 7.9625e-04,  ..., 8.1576e-04,
          8.0357e-04, 1.5490e-03],
         [2.8006e-04, 1.1565e-03, 7.9625e-04,  ..., 2.1198e-03,
          8.0357e-04, 1.3889e-03],
         [1.4172e-04, 9.9653e-01, 9.9752e-01,  ..., 8.1576e-04,
          1.1050e-03, 9.9567e-01]],
        [[9.9804e-01, 2.4692e-03, 1.3289e-03,  ..., 1.5884e-03,
          5.8144e-05, 5.4301e-05],
         [5.4628e-04, 2.4692e-03, 1.5452e-03,  ..., 1.5884e-03,
          5.8144e-05, 5.4301e-05],
         [8.7042e-04, 2.4692e-03, 1.3289e-03,  ..., 1.7958e-03,
          9.9983e-01, 9.9984e-01],
         [5.4628e-04, 9.9259e-01, 9.9580e-01,  ..., 9.9503e-01,
          5.8144e-05, 5.4301e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1723e-03, 6.2684e-04, 3.8294e-04,  ..., 1.8191e-03,
          6.9712e-05, 1.0298e-02],
         [2.6101e-03, 6.2684e-04, 4.8322e-04,  ..., 1.8191e-03,
          6.9712e-05, 4.2652e-03],
         [9.9061e-01, 6.2684e-04, 3.8294e-04,  ..., 9.9454e-01,
          6.9712e-05, 9.8117e-01],
         [2.6101e-03, 9.9812e-01, 9.9875e-01,  ..., 1.8191e-03,
          9.9979e-01, 4.2652e-03]],
        [[1.1216e-03, 4.9776e-03, 2.4468e-04,  ..., 4.2163e-03,
          2.6819e-03, 9.9983e-01],
         [1.1216e-03, 4.9776e-03, 2.4468e-04,  ..., 4.2163e-03,
          2.6819e-03, 5.6681e-05],
         [9.9664e-01, 4.9776e-03, 2.4468e-04,  ..., 9.8735e-01,
          9.9195e-01, 5.6681e-05],
         [1.1216e-03, 9.8507e-01, 9.9927e-01,  ..., 4.2163e-03,
          2.6819e-03, 5.6681e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 713:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9629e-01, 3.9450e-03, 1.1736e-03,  ..., 9.9676e-01,
          9.9907e-01, 1.5422e-03],
         [1.0826e-03, 2.9619e-03, 1.1736e-03,  ..., 1.2811e-03,
          3.0448e-04, 1.5422e-03],
         [1.5970e-03, 3.3477e-03, 1.1827e-03,  ..., 9.8078e-04,
          3.2413e-04, 1.5422e-03],
         [1.0300e-03, 9.8975e-01, 9.9647e-01,  ..., 9.8078e-04,
          3.0448e-04, 9.9537e-01]],
        [[9.9969e-01, 1.2138e-03, 3.6284e-03,  ..., 7.9200e-03,
          6.6067e-05, 1.3525e-04],
         [1.0400e-04, 1.2138e-03, 1.8673e-03,  ..., 3.5135e-03,
          6.6067e-05, 1.3525e-04],
         [1.0400e-04, 1.2138e-03, 1.8673e-03,  ..., 5.2404e-03,
          9.9980e-01, 9.9959e-01],
         [1.0400e-04, 9.9636e-01, 9.9264e-01,  ..., 9.8333e-01,
          6.6067e-05, 1.3525e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5423e-03, 7.8005e-05, 6.2606e-04,  ..., 3.0466e-03,
          4.1898e-06, 4.5534e-03],
         [1.5423e-03, 7.8005e-05, 6.8165e-04,  ..., 2.6333e-03,
          4.1898e-06, 1.8641e-03],
         [9.9537e-01, 7.8005e-05, 6.2606e-04,  ..., 9.9169e-01,
          4.1898e-06, 9.9172e-01],
         [1.5423e-03, 9.9977e-01, 9.9807e-01,  ..., 2.6333e-03,
          9.9999e-01, 1.8641e-03]],
        [[1.2455e-02, 1.5120e-04, 3.3618e-04,  ..., 2.3331e-03,
          4.1954e-03, 9.9914e-01],
         [1.1807e-02, 1.5120e-04, 3.3618e-04,  ..., 2.3331e-03,
          4.1954e-03, 2.5036e-04],
         [9.5204e-01, 1.5120e-04, 3.3618e-04,  ..., 9.9300e-01,
          9.8741e-01, 2.5036e-04],
         [2.3695e-02, 9.9955e-01, 9.9899e-01,  ..., 2.3331e-03,
          4.1954e-03, 3.5867e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:25,461 [Process: 0] Synchronize training processes
2024-08-18 19:58:25,461 [Process: 0] Evaluating...
2024-08-18 19:58:25,463 [Process: 0] EPOCH 713:
2024-08-18 19:58:25,464 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 714:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9898e-01, 2.2711e-03, 1.8425e-03,  ..., 9.9733e-01,
          9.9744e-01, 8.8803e-04],
         [2.0392e-04, 2.0099e-03, 1.8425e-03,  ..., 7.4253e-04,
          7.4924e-04, 8.8803e-04],
         [6.1432e-04, 2.3809e-03, 1.8425e-03,  ..., 1.1804e-03,
          1.0600e-03, 8.8803e-04],
         [1.9737e-04, 9.9334e-01, 9.9447e-01,  ..., 7.4253e-04,
          7.4924e-04, 9.9734e-01]],
        [[9.9626e-01, 1.4886e-03, 1.6173e-03,  ..., 7.5089e-04,
          1.5170e-04, 2.0365e-04],
         [9.6461e-04, 1.1996e-03, 1.6173e-03,  ..., 7.5089e-04,
          1.5170e-04, 2.0365e-04],
         [1.8145e-03, 1.1996e-03, 1.6173e-03,  ..., 7.5089e-04,
          9.9954e-01, 9.9939e-01],
         [9.6461e-04, 9.9611e-01, 9.9515e-01,  ..., 9.9775e-01,
          1.5170e-04, 2.0365e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4982e-04, 3.5772e-04, 4.0644e-04,  ..., 1.0234e-03,
          2.5203e-04, 1.3528e-03],
         [5.4982e-04, 3.5772e-04, 4.1661e-04,  ..., 1.0234e-03,
          2.5203e-04, 1.2387e-03],
         [9.9835e-01, 3.5772e-04, 4.0644e-04,  ..., 9.9693e-01,
          2.5203e-04, 9.9617e-01],
         [5.4982e-04, 9.9893e-01, 9.9877e-01,  ..., 1.0234e-03,
          9.9924e-01, 1.2387e-03]],
        [[1.4528e-03, 1.4963e-04, 3.8000e-05,  ..., 3.6937e-03,
          2.2923e-03, 9.9967e-01],
         [1.4528e-03, 1.4963e-04, 3.8000e-05,  ..., 3.6937e-03,
          2.2923e-03, 9.6951e-05],
         [9.9564e-01, 1.4963e-04, 3.8000e-05,  ..., 9.8892e-01,
          9.9312e-01, 9.6951e-05],
         [1.4528e-03, 9.9955e-01, 9.9989e-01,  ..., 3.6937e-03,
          2.2923e-03, 1.3993e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 715:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8995e-01, 4.9727e-04, 1.7892e-03,  ..., 9.9937e-01,
          9.9831e-01, 1.1227e-03],
         [2.6072e-03, 4.9727e-04, 1.2325e-03,  ..., 1.9984e-04,
          5.2197e-04, 1.1227e-03],
         [5.0739e-03, 4.9727e-04, 1.2325e-03,  ..., 2.3503e-04,
          6.5085e-04, 1.1227e-03],
         [2.3735e-03, 9.9851e-01, 9.9575e-01,  ..., 1.9984e-04,
          5.2197e-04, 9.9663e-01]],
        [[9.9848e-01, 2.1744e-03, 5.6375e-03,  ..., 6.8777e-04,
          5.5526e-04, 1.1172e-05],
         [3.6771e-04, 2.1744e-03, 2.8207e-03,  ..., 6.8777e-04,
          5.5526e-04, 1.1172e-05],
         [7.8317e-04, 2.1744e-03, 3.0933e-03,  ..., 6.8777e-04,
          9.9833e-01, 9.9997e-01],
         [3.6771e-04, 9.9348e-01, 9.8845e-01,  ..., 9.9794e-01,
          5.5526e-04, 1.1172e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:26,609 [Process: 0] Synchronize training processes
2024-08-18 19:58:26,609 [Process: 0] Evaluating...
2024-08-18 19:58:26,611 [Process: 0] EPOCH 714:
2024-08-18 19:58:26,612 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:27,754 [Process: 0] Synchronize training processes
2024-08-18 19:58:27,754 [Process: 0] Evaluating...
2024-08-18 19:58:27,756 [Process: 0] EPOCH 715:
2024-08-18 19:58:27,758 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9891e-03, 8.9525e-04, 1.1609e-04,  ..., 2.5074e-03,
          1.6235e-04, 1.8615e-03],
         [1.8976e-03, 8.9525e-04, 1.1609e-04,  ..., 2.5074e-03,
          1.3935e-04, 1.8615e-03],
         [9.9322e-01, 8.9525e-04, 1.1609e-04,  ..., 9.9248e-01,
          1.3935e-04, 9.9442e-01],
         [1.8976e-03, 9.9731e-01, 9.9965e-01,  ..., 2.5074e-03,
          9.9956e-01, 1.8615e-03]],
        [[6.7845e-04, 5.9018e-05, 3.9970e-04,  ..., 1.4762e-03,
          1.0086e-03, 9.9589e-01],
         [6.7845e-04, 5.9018e-05, 3.9970e-04,  ..., 1.4762e-03,
          1.0086e-03, 1.1189e-03],
         [9.9796e-01, 5.9018e-05, 3.9970e-04,  ..., 9.9557e-01,
          9.9697e-01, 1.1189e-03],
         [6.7845e-04, 9.9982e-01, 9.9880e-01,  ..., 1.4762e-03,
          1.0086e-03, 1.8717e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 716:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9721e-01, 1.4186e-03, 9.1136e-04,  ..., 9.9854e-01,
          9.9666e-01, 1.3228e-03],
         [6.5005e-04, 1.8493e-03, 7.5107e-04,  ..., 3.7959e-04,
          9.5397e-04, 1.3228e-03],
         [1.4881e-03, 1.4186e-03, 7.5107e-04,  ..., 6.9911e-04,
          1.4303e-03, 1.3228e-03],
         [6.5005e-04, 9.9531e-01, 9.9759e-01,  ..., 3.7959e-04,
          9.5397e-04, 9.9603e-01]],
        [[9.9888e-01, 3.5269e-03, 1.0122e-03,  ..., 2.8739e-03,
          9.4785e-05, 5.6185e-05],
         [2.6813e-04, 1.7176e-03, 7.7628e-04,  ..., 2.8739e-03,
          9.4785e-05, 5.6185e-05],
         [5.8747e-04, 1.7273e-03, 7.7628e-04,  ..., 3.7774e-03,
          9.9972e-01, 9.9983e-01],
         [2.6813e-04, 9.9303e-01, 9.9744e-01,  ..., 9.9047e-01,
          9.4785e-05, 5.6185e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6888e-03, 1.1299e-03, 8.1546e-05,  ..., 5.4300e-03,
          2.9342e-05, 2.5357e-03],
         [3.6888e-03, 1.1299e-03, 8.1546e-05,  ..., 5.4300e-03,
          2.9342e-05, 2.5357e-03],
         [9.8893e-01, 1.1299e-03, 8.1546e-05,  ..., 9.8254e-01,
          2.9342e-05, 9.9239e-01],
         [3.6888e-03, 9.9661e-01, 9.9976e-01,  ..., 6.6007e-03,
          9.9991e-01, 2.5357e-03]],
        [[1.0279e-02, 2.8261e-04, 1.7542e-03,  ..., 1.2743e-03,
          2.7732e-03, 9.9982e-01],
         [1.0279e-02, 2.8261e-04, 1.7542e-03,  ..., 1.2743e-03,
          2.7732e-03, 6.0244e-05],
         [9.5034e-01, 2.8261e-04, 1.7542e-03,  ..., 9.9618e-01,
          9.9168e-01, 6.0244e-05],
         [2.9105e-02, 9.9915e-01, 9.9474e-01,  ..., 1.2743e-03,
          2.7732e-03, 6.0244e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 717:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9839e-01, 1.1383e-03, 1.9989e-03,  ..., 9.9772e-01,
          9.9661e-01, 6.6782e-04],
         [4.2209e-04, 1.1383e-03, 1.9989e-03,  ..., 6.8625e-04,
          9.1959e-04, 6.6782e-04],
         [7.6405e-04, 1.1383e-03, 1.9989e-03,  ..., 9.0967e-04,
          1.5558e-03, 6.6782e-04],
         [4.2209e-04, 9.9659e-01, 9.9400e-01,  ..., 6.8625e-04,
          9.1959e-04, 9.9800e-01]],
        [[9.9949e-01, 9.5506e-04, 2.1551e-03,  ..., 5.1348e-04,
          1.7900e-04, 2.7900e-04],
         [1.7089e-04, 9.3500e-04, 3.1081e-03,  ..., 5.1348e-04,
          1.7900e-04, 2.7900e-04],
         [1.7089e-04, 9.3500e-04, 2.2267e-03,  ..., 5.1348e-04,
          9.9946e-01, 9.9916e-01],
         [1.7089e-04, 9.9717e-01, 9.9251e-01,  ..., 9.9846e-01,
          1.7900e-04, 2.7900e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:28,900 [Process: 0] Synchronize training processes
2024-08-18 19:58:28,900 [Process: 0] Evaluating...
2024-08-18 19:58:28,902 [Process: 0] EPOCH 716:
2024-08-18 19:58:28,904 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:30,046 [Process: 0] Synchronize training processes
2024-08-18 19:58:30,047 [Process: 0] Evaluating...
2024-08-18 19:58:30,049 [Process: 0] EPOCH 717:
2024-08-18 19:58:30,050 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6383e-03, 1.8616e-04, 9.9053e-05,  ..., 1.0444e-02,
          1.9500e-04, 8.7837e-03],
         [2.6399e-03, 1.8616e-04, 9.9053e-05,  ..., 6.4128e-03,
          1.9500e-04, 7.6385e-03],
         [9.9008e-01, 1.8616e-04, 9.9053e-05,  ..., 9.7673e-01,
          1.9500e-04, 9.7436e-01],
         [2.6399e-03, 9.9944e-01, 9.9970e-01,  ..., 6.4128e-03,
          9.9942e-01, 9.2145e-03]],
        [[3.9364e-03, 1.8974e-04, 1.2143e-04,  ..., 4.3083e-03,
          1.0378e-03, 9.9796e-01],
         [3.9364e-03, 1.8974e-04, 1.2143e-04,  ..., 4.3083e-03,
          1.0378e-03, 5.5105e-04],
         [9.8708e-01, 1.8974e-04, 1.2143e-04,  ..., 9.8708e-01,
          9.9689e-01, 5.5105e-04],
         [5.0475e-03, 9.9943e-01, 9.9964e-01,  ..., 4.3083e-03,
          1.0378e-03, 9.3957e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 718:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9962e-01, 1.3262e-03, 4.1639e-04,  ..., 9.9938e-01,
          9.9555e-01, 2.2544e-03],
         [1.2512e-04, 1.3262e-03, 4.1639e-04,  ..., 2.0652e-04,
          1.3217e-03, 2.2544e-03],
         [1.2512e-04, 1.3262e-03, 4.1639e-04,  ..., 2.0652e-04,
          1.8090e-03, 3.2904e-03],
         [1.2512e-04, 9.9602e-01, 9.9875e-01,  ..., 2.0652e-04,
          1.3217e-03, 9.9220e-01]],
        [[9.9965e-01, 1.1720e-03, 5.1522e-03,  ..., 1.2370e-03,
          2.0019e-04, 3.1894e-04],
         [1.1723e-04, 1.0309e-03, 3.7125e-03,  ..., 1.2370e-03,
          2.0019e-04, 3.1894e-04],
         [1.1723e-04, 1.0309e-03, 4.2104e-03,  ..., 1.3490e-03,
          9.9940e-01, 9.9904e-01],
         [1.1723e-04, 9.9677e-01, 9.8692e-01,  ..., 9.9618e-01,
          2.0019e-04, 3.1894e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.2619e-03, 7.4882e-03, 1.5844e-04,  ..., 1.9922e-03,
          9.9554e-06, 4.5543e-03],
         [4.2619e-03, 7.4882e-03, 1.5844e-04,  ..., 1.9922e-03,
          9.2547e-06, 3.0351e-03],
         [9.8721e-01, 7.4882e-03, 1.5844e-04,  ..., 9.9402e-01,
          9.2547e-06, 9.8938e-01],
         [4.2619e-03, 9.7754e-01, 9.9952e-01,  ..., 1.9922e-03,
          9.9997e-01, 3.0351e-03]],
        [[3.5481e-03, 2.0754e-04, 2.8378e-04,  ..., 1.2623e-03,
          4.3319e-03, 9.9986e-01],
         [3.5481e-03, 2.0754e-04, 2.8378e-04,  ..., 1.2623e-03,
          4.3319e-03, 4.5655e-05],
         [9.8936e-01, 2.0754e-04, 2.8378e-04,  ..., 9.9621e-01,
          9.8496e-01, 4.5655e-05],
         [3.5481e-03, 9.9938e-01, 9.9915e-01,  ..., 1.2623e-03,
          6.3726e-03, 4.8831e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 719:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:31,194 [Process: 0] Synchronize training processes
2024-08-18 19:58:31,194 [Process: 0] Evaluating...
2024-08-18 19:58:31,196 [Process: 0] EPOCH 718:
2024-08-18 19:58:31,198 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:32,343 [Process: 0] Synchronize training processes
2024-08-18 19:58:32,344 [Process: 0] Evaluating...
2024-08-18 19:58:32,345 [Process: 0] EPOCH 719:
2024-08-18 19:58:32,347 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9544e-01, 7.5456e-04, 1.4266e-03,  ..., 9.9635e-01,
          9.9579e-01, 3.9081e-04],
         [7.5401e-04, 7.5456e-04, 1.4266e-03,  ..., 9.6609e-04,
          1.2368e-03, 3.9081e-04],
         [3.0500e-03, 7.5456e-04, 1.4266e-03,  ..., 9.6609e-04,
          1.6178e-03, 3.9081e-04],
         [7.5401e-04, 9.9774e-01, 9.9572e-01,  ..., 1.7216e-03,
          1.3580e-03, 9.9883e-01]],
        [[9.9922e-01, 1.5117e-03, 9.5193e-04,  ..., 7.8738e-04,
          6.6546e-05, 7.7032e-05],
         [2.6084e-04, 1.5117e-03, 9.5193e-04,  ..., 7.8738e-04,
          6.6546e-05, 7.7032e-05],
         [2.6084e-04, 1.6803e-03, 9.5193e-04,  ..., 7.8738e-04,
          9.9980e-01, 9.9977e-01],
         [2.6084e-04, 9.9530e-01, 9.9714e-01,  ..., 9.9764e-01,
          6.6546e-05, 7.7032e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2751e-03, 9.2028e-04, 5.0651e-05,  ..., 3.0473e-03,
          3.9918e-05, 2.5119e-03],
         [1.0018e-03, 1.6829e-03, 5.0651e-05,  ..., 3.0473e-03,
          3.9918e-05, 1.5209e-03],
         [9.9672e-01, 9.2028e-04, 5.0651e-05,  ..., 9.9086e-01,
          3.9918e-05, 9.9445e-01],
         [1.0018e-03, 9.9648e-01, 9.9985e-01,  ..., 3.0473e-03,
          9.9988e-01, 1.5209e-03]],
        [[5.6102e-03, 3.7284e-04, 6.0884e-05,  ..., 3.2300e-03,
          1.4850e-03, 9.8648e-01],
         [5.6102e-03, 3.7284e-04, 6.0884e-05,  ..., 3.2300e-03,
          1.4850e-03, 3.2079e-03],
         [9.8002e-01, 3.7284e-04, 6.0884e-05,  ..., 9.9031e-01,
          9.9555e-01, 3.2079e-03],
         [8.7630e-03, 9.9888e-01, 9.9982e-01,  ..., 3.2300e-03,
          1.4850e-03, 7.1087e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 720:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9963e-01, 7.0891e-04, 4.0729e-03,  ..., 9.9433e-01,
          9.7514e-01, 2.8088e-04],
         [1.0612e-04, 7.0891e-04, 2.7593e-03,  ..., 1.4522e-03,
          4.3982e-03, 2.8088e-04],
         [1.5589e-04, 7.0891e-04, 3.6101e-03,  ..., 2.7673e-03,
          7.8353e-03, 2.8088e-04],
         [1.0612e-04, 9.9787e-01, 9.8956e-01,  ..., 1.4522e-03,
          1.2628e-02, 9.9916e-01]],
        [[9.8550e-01, 2.2695e-03, 6.1113e-03,  ..., 3.7309e-03,
          4.5763e-05, 1.3483e-04],
         [4.6829e-03, 1.8190e-03, 3.6820e-03,  ..., 2.5905e-03,
          4.5763e-05, 1.3483e-04],
         [4.7650e-03, 2.1152e-03, 6.3440e-03,  ..., 3.4242e-03,
          9.9986e-01, 9.9960e-01],
         [5.0472e-03, 9.9380e-01, 9.8386e-01,  ..., 9.9025e-01,
          4.5763e-05, 1.3483e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6066e-03, 1.2753e-04, 8.3369e-04,  ..., 2.6522e-03,
          1.1418e-05, 1.7113e-03],
         [4.8497e-03, 1.7030e-04, 8.3369e-04,  ..., 2.6522e-03,
          1.1418e-05, 1.7113e-03],
         [9.8069e-01, 1.2753e-04, 8.3369e-04,  ..., 9.9204e-01,
          1.1418e-05, 9.9487e-01],
         [4.8497e-03, 9.9957e-01, 9.9750e-01,  ..., 2.6522e-03,
          9.9997e-01, 1.7113e-03]],
        [[6.2220e-03, 2.0003e-03, 2.7559e-04,  ..., 6.4548e-03,
          9.7473e-04, 9.9974e-01],
         [6.2220e-03, 2.0003e-03, 2.7559e-04,  ..., 6.4548e-03,
          9.7473e-04, 8.6252e-05],
         [9.7961e-01, 2.0003e-03, 2.7559e-04,  ..., 9.7970e-01,
          9.9708e-01, 8.6252e-05],
         [7.9428e-03, 9.9400e-01, 9.9917e-01,  ..., 7.3907e-03,
          9.7473e-04, 8.6252e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 721:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:33,488 [Process: 0] Synchronize training processes
2024-08-18 19:58:33,488 [Process: 0] Evaluating...
2024-08-18 19:58:33,490 [Process: 0] EPOCH 720:
2024-08-18 19:58:33,492 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9995e-01, 1.1769e-03, 1.2129e-03,  ..., 9.9684e-01,
          9.9097e-01, 6.5049e-04],
         [1.5156e-05, 1.1769e-03, 1.2129e-03,  ..., 8.5925e-04,
          2.1157e-03, 6.5049e-04],
         [2.1881e-05, 1.1769e-03, 1.2129e-03,  ..., 1.4394e-03,
          4.4486e-03, 6.5049e-04],
         [1.5156e-05, 9.9647e-01, 9.9636e-01,  ..., 8.5925e-04,
          2.4633e-03, 9.9805e-01]],
        [[9.9985e-01, 1.4006e-03, 2.6567e-03,  ..., 2.6455e-03,
          1.3082e-04, 5.6196e-05],
         [4.1781e-05, 1.2928e-03, 2.6567e-03,  ..., 2.3268e-03,
          1.3082e-04, 5.6196e-05],
         [7.0180e-05, 1.2928e-03, 3.2860e-03,  ..., 3.2013e-03,
          9.9961e-01, 9.9983e-01],
         [4.1781e-05, 9.9601e-01, 9.9140e-01,  ..., 9.9183e-01,
          1.3082e-04, 5.6196e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.4449e-04, 1.0283e-03, 2.9317e-04,  ..., 4.0178e-03,
          3.3742e-05, 1.9763e-03],
         [7.4449e-04, 1.0283e-03, 2.9317e-04,  ..., 3.3593e-03,
          3.3742e-05, 1.9763e-03],
         [9.9777e-01, 1.0283e-03, 2.9317e-04,  ..., 9.8926e-01,
          3.3742e-05, 9.9407e-01],
         [7.4449e-04, 9.9692e-01, 9.9912e-01,  ..., 3.3593e-03,
          9.9990e-01, 1.9763e-03]],
        [[9.4053e-04, 8.1796e-04, 3.0087e-04,  ..., 8.6276e-03,
          3.9429e-03, 9.9935e-01],
         [9.4053e-04, 8.1796e-04, 3.0087e-04,  ..., 5.7413e-03,
          3.9429e-03, 2.1743e-04],
         [9.9718e-01, 8.1796e-04, 3.0087e-04,  ..., 9.7989e-01,
          9.8722e-01, 2.1743e-04],
         [9.4053e-04, 9.9755e-01, 9.9910e-01,  ..., 5.7413e-03,
          4.8993e-03, 2.1743e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 722:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9971e-01, 1.3350e-03, 1.7552e-03,  ..., 9.9930e-01,
          9.4458e-01, 1.5006e-03],
         [6.1135e-05, 1.3350e-03, 1.7552e-03,  ..., 1.9314e-04,
          8.1972e-03, 1.5006e-03],
         [1.6869e-04, 1.3350e-03, 2.1116e-03,  ..., 3.1840e-04,
          1.3285e-02, 1.8914e-03],
         [6.1135e-05, 9.9599e-01, 9.9438e-01,  ..., 1.9314e-04,
          3.3933e-02, 9.9511e-01]],
        [[9.9873e-01, 1.2028e-03, 1.1417e-03,  ..., 6.9885e-04,
          1.9575e-04, 7.5141e-04],
         [3.9304e-04, 1.2028e-03, 1.1417e-03,  ..., 6.9885e-04,
          1.9575e-04, 7.5141e-04],
         [3.9304e-04, 1.2028e-03, 1.1417e-03,  ..., 7.2878e-04,
          9.9941e-01, 9.9775e-01],
         [4.8378e-04, 9.9639e-01, 9.9657e-01,  ..., 9.9787e-01,
          1.9575e-04, 7.5141e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:34,631 [Process: 0] Synchronize training processes
2024-08-18 19:58:34,631 [Process: 0] Evaluating...
2024-08-18 19:58:34,633 [Process: 0] EPOCH 721:
2024-08-18 19:58:34,635 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:35,780 [Process: 0] Synchronize training processes
2024-08-18 19:58:35,780 [Process: 0] Evaluating...
2024-08-18 19:58:35,787 [Process: 0] EPOCH 722:
2024-08-18 19:58:35,789 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4617e-03, 1.3176e-04, 1.6067e-04,  ..., 2.1706e-03,
          8.8047e-05, 1.5863e-03],
         [4.0123e-03, 1.3176e-04, 1.6067e-04,  ..., 2.1706e-03,
          8.8047e-05, 1.5863e-03],
         [9.8651e-01, 1.3176e-04, 1.6067e-04,  ..., 9.9349e-01,
          8.8047e-05, 9.9524e-01],
         [4.0123e-03, 9.9960e-01, 9.9952e-01,  ..., 2.1706e-03,
          9.9974e-01, 1.5863e-03]],
        [[3.9890e-03, 3.1250e-04, 1.0644e-04,  ..., 2.4755e-03,
          1.5625e-03, 9.9995e-01],
         [3.9890e-03, 3.1250e-04, 1.0644e-04,  ..., 2.4755e-03,
          1.5625e-03, 1.6270e-05],
         [9.8623e-01, 3.1250e-04, 1.0644e-04,  ..., 9.9257e-01,
          9.9531e-01, 1.6270e-05],
         [5.7884e-03, 9.9906e-01, 9.9968e-01,  ..., 2.4755e-03,
          1.5625e-03, 1.6270e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 723:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9911e-01, 3.8637e-04, 1.0438e-03,  ..., 9.9964e-01,
          9.2089e-01, 8.6357e-04],
         [1.5088e-04, 3.8637e-04, 1.0438e-03,  ..., 1.1868e-04,
          9.6155e-03, 8.6357e-04],
         [5.8470e-04, 3.8637e-04, 1.0438e-03,  ..., 1.1868e-04,
          1.3758e-02, 8.6357e-04],
         [1.5088e-04, 9.9884e-01, 9.9687e-01,  ..., 1.1868e-04,
          5.5733e-02, 9.9741e-01]],
        [[9.8952e-01, 1.0597e-03, 5.7449e-04,  ..., 2.2332e-03,
          3.9692e-04, 2.1854e-04],
         [2.4769e-03, 1.0597e-03, 5.7449e-04,  ..., 2.2332e-03,
          3.9692e-04, 2.1854e-04],
         [5.5216e-03, 1.0597e-03, 5.7449e-04,  ..., 2.2332e-03,
          9.9881e-01, 9.9934e-01],
         [2.4769e-03, 9.9682e-01, 9.9828e-01,  ..., 9.9330e-01,
          3.9692e-04, 2.1854e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6209e-03, 9.5747e-06, 4.2934e-05,  ..., 4.2263e-03,
          2.2284e-05, 3.1783e-03],
         [1.6209e-03, 9.5747e-06, 4.2934e-05,  ..., 4.2263e-03,
          2.2284e-05, 3.1783e-03],
         [9.9514e-01, 9.5747e-06, 4.2934e-05,  ..., 9.8732e-01,
          2.2284e-05, 9.9047e-01],
         [1.6209e-03, 9.9997e-01, 9.9987e-01,  ..., 4.2263e-03,
          9.9993e-01, 3.1783e-03]],
        [[4.3184e-03, 1.0704e-03, 2.3255e-04,  ..., 2.3320e-03,
          2.3108e-03, 9.9953e-01],
         [4.3184e-03, 1.0704e-03, 2.3255e-04,  ..., 2.3320e-03,
          2.3108e-03, 1.3971e-04],
         [9.8569e-01, 1.0704e-03, 2.3255e-04,  ..., 9.9300e-01,
          9.9307e-01, 1.3971e-04],
         [5.6715e-03, 9.9679e-01, 9.9930e-01,  ..., 2.3320e-03,
          2.3108e-03, 1.9116e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 724:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9674e-01, 1.4871e-03, 2.3338e-03,  ..., 9.9857e-01,
          9.4576e-01, 8.4731e-04],
         [1.3498e-03, 1.5004e-03, 2.3338e-03,  ..., 4.7643e-04,
          8.6065e-03, 8.4731e-04],
         [9.5306e-04, 1.6503e-03, 2.3338e-03,  ..., 4.7643e-04,
          2.7698e-02, 8.4731e-04],
         [9.5306e-04, 9.9536e-01, 9.9300e-01,  ..., 4.7643e-04,
          1.7933e-02, 9.9746e-01]],
        [[9.9440e-01, 1.7547e-03, 6.2885e-04,  ..., 2.4193e-03,
          2.5554e-04, 2.4380e-04],
         [1.3160e-03, 1.7547e-03, 5.5180e-04,  ..., 2.1958e-03,
          2.5554e-04, 2.4380e-04],
         [2.9728e-03, 1.7547e-03, 5.5180e-04,  ..., 2.8227e-03,
          9.9923e-01, 9.9927e-01],
         [1.3160e-03, 9.9474e-01, 9.9827e-01,  ..., 9.9256e-01,
          2.5554e-04, 2.4380e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:36,934 [Process: 0] Synchronize training processes
2024-08-18 19:58:36,934 [Process: 0] Evaluating...
2024-08-18 19:58:36,936 [Process: 0] EPOCH 723:
2024-08-18 19:58:36,938 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:38,093 [Process: 0] Synchronize training processes
2024-08-18 19:58:38,094 [Process: 0] Evaluating...
2024-08-18 19:58:38,095 [Process: 0] EPOCH 724:
2024-08-18 19:58:38,097 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1421e-03, 1.7139e-04, 1.9577e-05,  ..., 2.5686e-03,
          3.0281e-05, 2.0725e-03],
         [2.1421e-03, 1.7555e-04, 1.9577e-05,  ..., 2.4500e-03,
          3.0281e-05, 2.0725e-03],
         [9.9357e-01, 1.7139e-04, 1.9577e-05,  ..., 9.9253e-01,
          3.0281e-05, 9.9378e-01],
         [2.1421e-03, 9.9948e-01, 9.9994e-01,  ..., 2.4500e-03,
          9.9991e-01, 2.0725e-03]],
        [[1.1150e-03, 9.3715e-04, 4.3132e-04,  ..., 2.9285e-03,
          1.6688e-03, 9.9852e-01],
         [1.1150e-03, 9.3715e-04, 4.3132e-04,  ..., 2.9285e-03,
          1.6688e-03, 4.9250e-04],
         [9.9665e-01, 9.3715e-04, 4.3132e-04,  ..., 9.9121e-01,
          9.9499e-01, 4.9250e-04],
         [1.1150e-03, 9.9719e-01, 9.9871e-01,  ..., 2.9285e-03,
          1.6688e-03, 4.9250e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 725:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9975e-01, 9.6538e-04, 8.3497e-04,  ..., 9.9878e-01,
          9.7635e-01, 5.3931e-04],
         [8.1976e-05, 9.6538e-04, 8.3497e-04,  ..., 3.2617e-04,
          4.0222e-03, 5.3931e-04],
         [8.7426e-05, 9.6538e-04, 8.3497e-04,  ..., 5.7102e-04,
          4.6666e-03, 5.5182e-04],
         [8.1976e-05, 9.9710e-01, 9.9750e-01,  ..., 3.2617e-04,
          1.4960e-02, 9.9837e-01]],
        [[9.9972e-01, 2.0612e-03, 2.1644e-03,  ..., 1.0415e-03,
          1.4572e-04, 2.8803e-03],
         [9.4556e-05, 2.2680e-03, 2.1644e-03,  ..., 1.0415e-03,
          1.4572e-04, 2.8803e-03],
         [9.4556e-05, 2.0612e-03, 2.1644e-03,  ..., 1.0415e-03,
          9.9956e-01, 9.9060e-01],
         [9.4556e-05, 9.9361e-01, 9.9351e-01,  ..., 9.9688e-01,
          1.4572e-04, 3.6348e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9610e-03, 2.4698e-05, 3.0161e-04,  ..., 6.9217e-03,
          3.3091e-05, 2.1079e-03],
         [1.9610e-03, 2.4698e-05, 3.0161e-04,  ..., 6.9217e-03,
          2.7982e-05, 2.1079e-03],
         [9.9412e-01, 2.4698e-05, 3.0161e-04,  ..., 9.7706e-01,
          2.7982e-05, 9.9368e-01],
         [1.9610e-03, 9.9993e-01, 9.9910e-01,  ..., 9.0979e-03,
          9.9991e-01, 2.1079e-03]],
        [[1.8454e-03, 2.8813e-04, 2.8669e-04,  ..., 3.3476e-03,
          1.9340e-03, 9.9668e-01],
         [1.8454e-03, 2.8813e-04, 2.8669e-04,  ..., 3.3476e-03,
          1.9340e-03, 9.8967e-04],
         [9.9446e-01, 2.8813e-04, 2.8669e-04,  ..., 9.8984e-01,
          9.9420e-01, 9.8967e-04],
         [1.8454e-03, 9.9914e-01, 9.9914e-01,  ..., 3.4669e-03,
          1.9340e-03, 1.3378e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 726:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:39,242 [Process: 0] Synchronize training processes
2024-08-18 19:58:39,242 [Process: 0] Evaluating...
2024-08-18 19:58:39,244 [Process: 0] EPOCH 725:
2024-08-18 19:58:39,246 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:40,391 [Process: 0] Synchronize training processes
2024-08-18 19:58:40,391 [Process: 0] Evaluating...
2024-08-18 19:58:40,393 [Process: 0] EPOCH 726:
2024-08-18 19:58:40,395 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9989e-01, 1.0494e-03, 2.1547e-03,  ..., 9.9990e-01,
          9.9301e-01, 4.6429e-03],
         [3.8188e-05, 1.0494e-03, 2.7669e-03,  ..., 3.3450e-05,
          1.3779e-03, 4.9705e-03],
         [3.8188e-05, 1.0494e-03, 2.1328e-03,  ..., 3.3450e-05,
          4.2365e-03, 4.6747e-03],
         [3.8188e-05, 9.9685e-01, 9.9295e-01,  ..., 3.3450e-05,
          1.3779e-03, 9.8571e-01]],
        [[9.9510e-01, 8.3299e-04, 6.7587e-03,  ..., 1.6878e-03,
          3.1346e-04, 8.6492e-05],
         [1.0150e-03, 8.3299e-04, 3.1167e-03,  ..., 1.5824e-03,
          3.1346e-04, 8.6492e-05],
         [2.8664e-03, 8.3299e-04, 3.3469e-03,  ..., 2.0860e-03,
          9.9906e-01, 9.9974e-01],
         [1.0150e-03, 9.9750e-01, 9.8678e-01,  ..., 9.9464e-01,
          3.1346e-04, 8.6492e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7409e-03, 5.4583e-06, 1.9501e-03,  ..., 3.0522e-03,
          1.4499e-05, 3.1501e-03],
         [1.6656e-03, 5.4583e-06, 1.9501e-03,  ..., 3.0522e-03,
          1.4499e-05, 3.1501e-03],
         [9.9493e-01, 5.4583e-06, 1.9501e-03,  ..., 9.9084e-01,
          1.4499e-05, 9.9055e-01],
         [1.6656e-03, 9.9998e-01, 9.9415e-01,  ..., 3.0522e-03,
          9.9996e-01, 3.1501e-03]],
        [[4.0148e-03, 2.3940e-04, 3.5637e-04,  ..., 2.9613e-03,
          3.0199e-03, 9.9988e-01],
         [4.0148e-03, 2.3940e-04, 3.5637e-04,  ..., 2.9613e-03,
          2.3440e-03, 3.3326e-05],
         [9.8666e-01, 2.3940e-04, 3.5637e-04,  ..., 9.9112e-01,
          9.9229e-01, 3.3326e-05],
         [5.3130e-03, 9.9928e-01, 9.9893e-01,  ..., 2.9613e-03,
          2.3440e-03, 5.0812e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 727:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9988e-01, 1.5990e-03, 2.0996e-03,  ..., 9.9830e-01,
          9.6642e-01, 6.3445e-04],
         [3.3942e-05, 1.5990e-03, 1.2683e-03,  ..., 4.9705e-04,
          4.9422e-03, 6.3445e-04],
         [5.0485e-05, 1.5990e-03, 1.2801e-03,  ..., 7.0969e-04,
          8.0297e-03, 6.3445e-04],
         [3.3942e-05, 9.9520e-01, 9.9535e-01,  ..., 4.9705e-04,
          2.0608e-02, 9.9810e-01]],
        [[9.9961e-01, 1.3145e-03, 1.0804e-03,  ..., 3.6380e-03,
          5.4040e-04, 2.6144e-04],
         [1.2978e-04, 1.3145e-03, 9.3179e-04,  ..., 3.4098e-03,
          5.4040e-04, 2.6144e-04],
         [1.2978e-04, 1.3145e-03, 9.3179e-04,  ..., 4.7669e-03,
          9.9838e-01, 9.9922e-01],
         [1.2978e-04, 9.9606e-01, 9.9706e-01,  ..., 9.8819e-01,
          5.4040e-04, 2.6144e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6349e-03, 1.6514e-05, 1.5793e-04,  ..., 6.0881e-03,
          4.2683e-06, 2.7896e-03],
         [2.5987e-03, 1.6514e-05, 1.5793e-04,  ..., 5.5683e-03,
          4.2683e-06, 2.1643e-03],
         [9.9117e-01, 1.6514e-05, 1.5793e-04,  ..., 9.8278e-01,
          4.2683e-06, 9.9288e-01],
         [2.5987e-03, 9.9995e-01, 9.9953e-01,  ..., 5.5683e-03,
          9.9999e-01, 2.1643e-03]],
        [[1.5165e-03, 5.6945e-04, 3.1591e-04,  ..., 3.2570e-03,
          2.3976e-03, 9.9997e-01],
         [1.5165e-03, 5.6945e-04, 3.1591e-04,  ..., 3.2570e-03,
          2.3976e-03, 1.1055e-05],
         [9.9545e-01, 5.6945e-04, 3.1591e-04,  ..., 9.8941e-01,
          9.9281e-01, 1.1055e-05],
         [1.5165e-03, 9.9829e-01, 9.9905e-01,  ..., 4.0787e-03,
          2.3976e-03, 1.1646e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 728:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:41,538 [Process: 0] Synchronize training processes
2024-08-18 19:58:41,538 [Process: 0] Evaluating...
2024-08-18 19:58:41,540 [Process: 0] EPOCH 727:
2024-08-18 19:58:41,542 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9950e-01, 1.5121e-03, 1.5702e-03,  ..., 9.9980e-01,
          9.9747e-01, 7.8273e-04],
         [1.5506e-04, 1.5121e-03, 2.3120e-03,  ..., 6.1314e-05,
          6.8548e-04, 7.8273e-04],
         [1.8554e-04, 1.5121e-03, 1.5702e-03,  ..., 7.3152e-05,
          1.1585e-03, 7.8273e-04],
         [1.5506e-04, 9.9546e-01, 9.9455e-01,  ..., 6.1314e-05,
          6.8548e-04, 9.9765e-01]],
        [[9.9780e-01, 9.1088e-04, 2.0359e-03,  ..., 3.4594e-03,
          6.6934e-05, 4.4723e-04],
         [6.8904e-04, 9.1088e-04, 2.3430e-03,  ..., 3.4594e-03,
          6.6934e-05, 4.4723e-04],
         [8.2617e-04, 9.1088e-04, 2.6534e-03,  ..., 4.3363e-03,
          9.9980e-01, 9.9866e-01],
         [6.8904e-04, 9.9727e-01, 9.9297e-01,  ..., 9.8874e-01,
          6.6934e-05, 4.4723e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2295e-04, 7.3036e-05, 4.9111e-05,  ..., 6.1346e-03,
          7.4312e-05, 4.7611e-03],
         [9.2295e-04, 7.3036e-05, 4.9111e-05,  ..., 6.1346e-03,
          7.4312e-05, 2.6937e-03],
         [9.9723e-01, 7.3036e-05, 4.9111e-05,  ..., 9.7953e-01,
          7.4312e-05, 9.8985e-01],
         [9.2295e-04, 9.9978e-01, 9.9985e-01,  ..., 8.2056e-03,
          9.9978e-01, 2.6937e-03]],
        [[2.4811e-03, 9.5810e-04, 2.0902e-04,  ..., 1.6225e-03,
          2.8017e-03, 9.9761e-01],
         [2.4811e-03, 1.2528e-03, 2.0902e-04,  ..., 1.6225e-03,
          2.7569e-03, 5.2080e-04],
         [9.9256e-01, 9.5810e-04, 2.0902e-04,  ..., 9.9513e-01,
          9.9168e-01, 5.2080e-04],
         [2.4811e-03, 9.9683e-01, 9.9937e-01,  ..., 1.6225e-03,
          2.7569e-03, 1.3489e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 729:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9819e-01, 2.3039e-03, 9.7699e-04,  ..., 9.9883e-01,
          9.9731e-01, 5.2555e-04],
         [6.0316e-04, 1.7656e-03, 9.7699e-04,  ..., 3.8830e-04,
          8.0851e-04, 5.2555e-04],
         [6.0316e-04, 1.9306e-03, 9.7699e-04,  ..., 3.8854e-04,
          1.0560e-03, 5.2555e-04],
         [6.0316e-04, 9.9400e-01, 9.9707e-01,  ..., 3.8830e-04,
          8.2444e-04, 9.9842e-01]],
        [[9.9368e-01, 2.3177e-03, 1.5834e-03,  ..., 1.5273e-03,
          1.6370e-04, 3.8649e-04],
         [1.3261e-03, 2.0915e-03, 1.3715e-03,  ..., 1.5273e-03,
          1.6370e-04, 3.8649e-04],
         [1.3261e-03, 2.0915e-03, 1.3715e-03,  ..., 2.0392e-03,
          9.9951e-01, 9.9884e-01],
         [3.6727e-03, 9.9350e-01, 9.9567e-01,  ..., 9.9491e-01,
          1.6370e-04, 3.8649e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:42,694 [Process: 0] Synchronize training processes
2024-08-18 19:58:42,694 [Process: 0] Evaluating...
2024-08-18 19:58:42,696 [Process: 0] EPOCH 728:
2024-08-18 19:58:42,698 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:43,845 [Process: 0] Synchronize training processes
2024-08-18 19:58:43,845 [Process: 0] Evaluating...
2024-08-18 19:58:43,847 [Process: 0] EPOCH 729:
2024-08-18 19:58:43,849 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3495e-03, 5.1986e-04, 2.8719e-05,  ..., 8.3518e-03,
          6.2875e-05, 6.0411e-04],
         [1.3495e-03, 5.1986e-04, 2.8719e-05,  ..., 8.3518e-03,
          6.2875e-05, 5.4144e-04],
         [9.9595e-01, 5.1986e-04, 2.8719e-05,  ..., 9.7147e-01,
          6.2875e-05, 9.9831e-01],
         [1.3495e-03, 9.9844e-01, 9.9991e-01,  ..., 1.1828e-02,
          9.9981e-01, 5.4144e-04]],
        [[9.5533e-03, 1.1872e-03, 1.3289e-03,  ..., 2.3641e-03,
          1.6891e-03, 9.9960e-01],
         [9.5533e-03, 1.1872e-03, 1.3289e-03,  ..., 2.3641e-03,
          1.6891e-03, 1.2564e-04],
         [9.6216e-01, 1.1872e-03, 1.3289e-03,  ..., 9.9291e-01,
          9.9493e-01, 1.2564e-04],
         [1.8732e-02, 9.9644e-01, 9.9601e-01,  ..., 2.3641e-03,
          1.6891e-03, 1.5097e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 730:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9355e-01, 1.5881e-03, 3.0072e-03,  ..., 9.9936e-01,
          9.7789e-01, 8.6133e-04],
         [2.9923e-03, 1.5881e-03, 2.9602e-03,  ..., 2.1345e-04,
          4.4562e-03, 8.6133e-04],
         [2.0418e-03, 1.9315e-03, 4.0026e-03,  ..., 2.1345e-04,
          9.3192e-03, 8.6133e-04],
         [1.4171e-03, 9.9489e-01, 9.9003e-01,  ..., 2.1345e-04,
          8.3359e-03, 9.9742e-01]],
        [[9.9960e-01, 1.2125e-03, 3.1122e-03,  ..., 8.6407e-04,
          2.3623e-04, 8.0784e-05],
         [1.3431e-04, 1.2125e-03, 1.4482e-03,  ..., 8.6407e-04,
          2.3623e-04, 8.0784e-05],
         [1.3431e-04, 1.4464e-03, 1.6014e-03,  ..., 8.6407e-04,
          9.9929e-01, 9.9976e-01],
         [1.3431e-04, 9.9613e-01, 9.9384e-01,  ..., 9.9741e-01,
          2.3623e-04, 8.0784e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5299e-03, 2.4703e-04, 2.1153e-03,  ..., 1.5849e-03,
          4.1120e-04, 1.7290e-03],
         [1.5299e-03, 2.4703e-04, 2.1153e-03,  ..., 1.5849e-03,
          4.1120e-04, 1.3273e-03],
         [9.9541e-01, 2.4703e-04, 2.1153e-03,  ..., 9.9525e-01,
          4.1120e-04, 9.9562e-01],
         [1.5299e-03, 9.9926e-01, 9.9365e-01,  ..., 1.5849e-03,
          9.9877e-01, 1.3273e-03]],
        [[1.7170e-03, 6.8711e-03, 1.9620e-05,  ..., 2.2803e-03,
          1.7286e-03, 9.9984e-01],
         [1.7170e-03, 8.2120e-03, 1.9620e-05,  ..., 2.2803e-03,
          1.7286e-03, 5.3538e-05],
         [9.9485e-01, 6.8711e-03, 1.9620e-05,  ..., 9.9316e-01,
          9.9481e-01, 5.3538e-05],
         [1.7170e-03, 9.7805e-01, 9.9994e-01,  ..., 2.2803e-03,
          1.7286e-03, 5.3538e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 731:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9962e-01, 1.7711e-03, 1.2337e-03,  ..., 9.9983e-01,
          9.9118e-01, 4.7922e-03],
         [1.5800e-04, 1.5260e-03, 1.2337e-03,  ..., 5.6962e-05,
          1.7687e-03, 3.5413e-03],
         [1.1656e-04, 1.9985e-03, 1.2337e-03,  ..., 5.6962e-05,
          5.2792e-03, 5.9058e-03],
         [1.0826e-04, 9.9470e-01, 9.9630e-01,  ..., 5.6962e-05,
          1.7687e-03, 9.8576e-01]],
        [[9.9874e-01, 9.2435e-04, 2.0960e-03,  ..., 3.6599e-03,
          4.4291e-04, 2.2549e-04],
         [4.1850e-04, 9.2435e-04, 1.4658e-03,  ..., 3.6722e-03,
          4.4291e-04, 2.2549e-04],
         [4.1850e-04, 9.2435e-04, 1.4658e-03,  ..., 3.8286e-03,
          9.9867e-01, 9.9932e-01],
         [4.1850e-04, 9.9723e-01, 9.9497e-01,  ..., 9.8884e-01,
          4.4291e-04, 2.2549e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:44,989 [Process: 0] Synchronize training processes
2024-08-18 19:58:44,990 [Process: 0] Evaluating...
2024-08-18 19:58:44,991 [Process: 0] EPOCH 730:
2024-08-18 19:58:44,993 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:46,137 [Process: 0] Synchronize training processes
2024-08-18 19:58:46,137 [Process: 0] Evaluating...
2024-08-18 19:58:46,139 [Process: 0] EPOCH 731:
2024-08-18 19:58:46,141 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0166e-03, 9.8136e-05, 4.4133e-04,  ..., 1.6707e-03,
          8.0308e-05, 2.9566e-03],
         [3.0166e-03, 1.5726e-04, 4.4133e-04,  ..., 1.6707e-03,
          7.4558e-05, 2.6094e-03],
         [9.9095e-01, 9.8136e-05, 4.4133e-04,  ..., 9.9499e-01,
          7.4558e-05, 9.9182e-01],
         [3.0166e-03, 9.9965e-01, 9.9868e-01,  ..., 1.6707e-03,
          9.9977e-01, 2.6094e-03]],
        [[9.9308e-04, 1.8848e-04, 3.4919e-04,  ..., 5.2996e-03,
          4.1106e-03, 9.9966e-01],
         [9.9308e-04, 1.8848e-04, 3.4919e-04,  ..., 4.8592e-03,
          4.1106e-03, 1.0813e-04],
         [9.9702e-01, 1.8848e-04, 3.4919e-04,  ..., 9.8498e-01,
          9.8695e-01, 1.0813e-04],
         [9.9308e-04, 9.9943e-01, 9.9895e-01,  ..., 4.8592e-03,
          4.8267e-03, 1.2205e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 732:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9293e-01, 9.8289e-04, 3.4039e-03,  ..., 9.8873e-01,
          9.9335e-01, 1.6534e-03],
         [1.5045e-03, 9.8289e-04, 3.4039e-03,  ..., 4.6007e-03,
          1.5326e-03, 1.6534e-03],
         [4.0655e-03, 9.8289e-04, 4.3907e-03,  ..., 3.6891e-03,
          3.5886e-03, 1.6534e-03],
         [1.5045e-03, 9.9705e-01, 9.8880e-01,  ..., 2.9836e-03,
          1.5326e-03, 9.9504e-01]],
        [[9.9664e-01, 4.7940e-04, 6.4730e-04,  ..., 8.6698e-04,
          4.9380e-05, 2.6415e-04],
         [1.1597e-03, 4.7940e-04, 6.1274e-04,  ..., 8.6698e-04,
          4.9380e-05, 2.6415e-04],
         [1.0990e-03, 4.7940e-04, 6.1274e-04,  ..., 8.6698e-04,
          9.9985e-01, 9.9921e-01],
         [1.0990e-03, 9.9856e-01, 9.9813e-01,  ..., 9.9740e-01,
          4.9380e-05, 2.6415e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1212e-03, 4.6485e-04, 1.6017e-04,  ..., 8.1001e-04,
          3.4719e-06, 1.0949e-03],
         [4.0022e-03, 4.6485e-04, 1.6017e-04,  ..., 8.1001e-04,
          3.4719e-06, 1.0949e-03],
         [9.8787e-01, 4.6485e-04, 1.6017e-04,  ..., 9.9757e-01,
          3.4719e-06, 9.9672e-01],
         [4.0022e-03, 9.9861e-01, 9.9952e-01,  ..., 8.1001e-04,
          9.9999e-01, 1.0949e-03]],
        [[8.1659e-04, 5.3788e-04, 2.2639e-05,  ..., 3.9837e-03,
          1.8811e-03, 9.9907e-01],
         [8.1659e-04, 5.3788e-04, 2.2639e-05,  ..., 3.9837e-03,
          1.8811e-03, 2.7027e-04],
         [9.9755e-01, 5.3788e-04, 2.2639e-05,  ..., 9.8787e-01,
          9.9436e-01, 2.7027e-04],
         [8.1659e-04, 9.9839e-01, 9.9993e-01,  ..., 4.1609e-03,
          1.8811e-03, 3.9325e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 733:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:47,283 [Process: 0] Synchronize training processes
2024-08-18 19:58:47,283 [Process: 0] Evaluating...
2024-08-18 19:58:47,290 [Process: 0] EPOCH 732:
2024-08-18 19:58:47,292 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:48,437 [Process: 0] Synchronize training processes
2024-08-18 19:58:48,438 [Process: 0] Evaluating...
2024-08-18 19:58:48,439 [Process: 0] EPOCH 733:
2024-08-18 19:58:48,441 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9875e-01, 2.0877e-03, 6.3883e-04,  ..., 9.9952e-01,
          9.9549e-01, 1.6165e-03],
         [3.0309e-04, 1.6329e-03, 5.5961e-04,  ..., 1.5833e-04,
          1.1957e-03, 1.6165e-03],
         [6.4611e-04, 1.6329e-03, 5.5961e-04,  ..., 1.5860e-04,
          2.0571e-03, 1.6165e-03],
         [3.0309e-04, 9.9465e-01, 9.9824e-01,  ..., 1.5833e-04,
          1.2615e-03, 9.9515e-01]],
        [[9.8408e-01, 2.5004e-03, 2.2169e-03,  ..., 1.6476e-03,
          1.1855e-03, 5.4125e-04],
         [5.8574e-03, 2.8494e-03, 1.5539e-03,  ..., 1.6476e-03,
          1.1855e-03, 5.4125e-04],
         [5.9632e-03, 2.5561e-03, 1.4269e-03,  ..., 1.6476e-03,
          9.9644e-01, 9.9838e-01],
         [4.0991e-03, 9.9209e-01, 9.9480e-01,  ..., 9.9506e-01,
          1.1855e-03, 5.4125e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2181e-03, 8.5952e-05, 6.1175e-05,  ..., 2.1436e-03,
          9.6812e-04, 2.4232e-03],
         [1.2181e-03, 8.5952e-05, 6.1175e-05,  ..., 2.1436e-03,
          3.8868e-04, 1.9396e-03],
         [9.9635e-01, 8.5952e-05, 6.1175e-05,  ..., 9.9357e-01,
          3.8868e-04, 9.9370e-01],
         [1.2181e-03, 9.9974e-01, 9.9982e-01,  ..., 2.1436e-03,
          9.9825e-01, 1.9396e-03]],
        [[3.9391e-02, 1.8331e-03, 3.2643e-05,  ..., 1.6682e-03,
          2.1704e-03, 9.9986e-01],
         [1.9030e-02, 1.8331e-03, 3.2643e-05,  ..., 1.6682e-03,
          2.1704e-03, 4.4716e-05],
         [9.0316e-01, 1.8331e-03, 3.2643e-05,  ..., 9.9500e-01,
          9.9349e-01, 4.4716e-05],
         [3.8418e-02, 9.9450e-01, 9.9990e-01,  ..., 1.6682e-03,
          2.1704e-03, 5.0405e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 734:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9931e-01, 6.0554e-04, 3.5680e-03,  ..., 9.9830e-01,
          9.9922e-01, 9.4634e-04],
         [2.5442e-04, 6.0554e-04, 3.2937e-03,  ..., 5.6535e-04,
          2.5939e-04, 9.4634e-04],
         [2.1674e-04, 6.0554e-04, 5.0523e-03,  ..., 5.6535e-04,
          2.5939e-04, 9.4634e-04],
         [2.1674e-04, 9.9818e-01, 9.8809e-01,  ..., 5.6535e-04,
          2.5939e-04, 9.9716e-01]],
        [[9.5315e-01, 8.2680e-03, 2.1111e-03,  ..., 7.8210e-04,
          5.4013e-04, 1.7102e-04],
         [8.8748e-03, 6.5346e-03, 2.1111e-03,  ..., 7.8210e-04,
          5.4013e-04, 1.7102e-04],
         [1.5967e-02, 7.6868e-03, 2.1111e-03,  ..., 8.0690e-04,
          9.9838e-01, 9.9949e-01],
         [2.2006e-02, 9.7751e-01, 9.9367e-01,  ..., 9.9763e-01,
          5.4013e-04, 1.7102e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2330e-03, 8.3093e-05, 1.5405e-05,  ..., 1.5489e-03,
          1.3037e-05, 3.4483e-03],
         [2.4731e-03, 8.3093e-05, 1.5405e-05,  ..., 1.5489e-03,
          1.3037e-05, 3.2358e-03],
         [9.9182e-01, 8.3093e-05, 1.5405e-05,  ..., 9.9535e-01,
          1.3037e-05, 9.9008e-01],
         [2.4731e-03, 9.9975e-01, 9.9995e-01,  ..., 1.5489e-03,
          9.9996e-01, 3.2358e-03]],
        [[2.4101e-03, 5.5430e-04, 4.1756e-05,  ..., 4.6216e-03,
          2.3894e-03, 9.9961e-01],
         [2.4101e-03, 5.5430e-04, 4.1756e-05,  ..., 4.6216e-03,
          2.3894e-03, 1.1307e-04],
         [9.9277e-01, 5.5430e-04, 4.1756e-05,  ..., 9.8470e-01,
          9.9283e-01, 1.1307e-04],
         [2.4101e-03, 9.9834e-01, 9.9987e-01,  ..., 6.0562e-03,
          2.3894e-03, 1.6767e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 735:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:49,590 [Process: 0] Synchronize training processes
2024-08-18 19:58:49,590 [Process: 0] Evaluating...
2024-08-18 19:58:49,592 [Process: 0] EPOCH 734:
2024-08-18 19:58:49,594 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:50,738 [Process: 0] Synchronize training processes
2024-08-18 19:58:50,738 [Process: 0] Evaluating...
2024-08-18 19:58:50,740 [Process: 0] EPOCH 735:
2024-08-18 19:58:50,742 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:51,886 [Process: 0] Synchronize training processes
2024-08-18 19:58:51,887 [Process: 0] Evaluating...
2024-08-18 19:58:51,888 [Process: 0] EPOCH 736:
2024-08-18 19:58:51,890 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9796e-01, 1.3733e-03, 1.3240e-03,  ..., 9.9049e-01,
          9.7570e-01, 4.1485e-04],
         [4.6394e-04, 1.3733e-03, 1.1774e-03,  ..., 1.8913e-03,
          5.5628e-03, 4.1485e-04],
         [1.1398e-03, 1.3733e-03, 1.1774e-03,  ..., 5.7291e-03,
          9.2100e-03, 4.1485e-04],
         [4.3208e-04, 9.9588e-01, 9.9632e-01,  ..., 1.8913e-03,
          9.5293e-03, 9.9876e-01]],
        [[9.9903e-01, 7.6164e-04, 1.7349e-03,  ..., 8.8396e-04,
          6.0781e-04, 9.4347e-05],
         [3.2314e-04, 7.6164e-04, 2.7565e-03,  ..., 8.8396e-04,
          6.0781e-04, 9.4347e-05],
         [3.2314e-04, 7.6164e-04, 1.7349e-03,  ..., 8.8396e-04,
          9.9818e-01, 9.9972e-01],
         [3.2314e-04, 9.9772e-01, 9.9377e-01,  ..., 9.9735e-01,
          6.0781e-04, 9.4347e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3696e-03, 3.5042e-05, 1.4376e-05,  ..., 4.4068e-03,
          4.1832e-06, 4.6862e-03],
         [1.3696e-03, 3.5042e-05, 1.4376e-05,  ..., 4.4068e-03,
          4.1832e-06, 4.6862e-03],
         [9.9589e-01, 3.5042e-05, 1.4376e-05,  ..., 9.8678e-01,
          4.1832e-06, 9.8588e-01],
         [1.3696e-03, 9.9989e-01, 9.9996e-01,  ..., 4.4068e-03,
          9.9999e-01, 4.7483e-03]],
        [[2.7801e-03, 2.5519e-04, 4.9621e-04,  ..., 4.1741e-03,
          3.6454e-03, 9.9943e-01],
         [2.7801e-03, 2.5519e-04, 4.9621e-04,  ..., 4.1741e-03,
          2.9285e-03, 1.8987e-04],
         [9.9166e-01, 2.5519e-04, 4.9621e-04,  ..., 9.8748e-01,
          9.9050e-01, 1.8987e-04],
         [2.7801e-03, 9.9923e-01, 9.9851e-01,  ..., 4.1741e-03,
          2.9285e-03, 1.8987e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 736:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9775e-01, 1.3726e-03, 1.8458e-03,  ..., 9.9970e-01,
          9.9267e-01, 3.5843e-04],
         [1.0704e-03, 1.3052e-03, 1.8458e-03,  ..., 9.8585e-05,
          2.0405e-03, 3.5843e-04],
         [5.8842e-04, 1.3052e-03, 1.8458e-03,  ..., 9.8585e-05,
          2.9811e-03, 3.5843e-04],
         [5.8842e-04, 9.9602e-01, 9.9446e-01,  ..., 9.8585e-05,
          2.3067e-03, 9.9892e-01]],
        [[9.8906e-01, 2.2738e-03, 8.5133e-04,  ..., 1.4607e-03,
          1.8633e-03, 9.4030e-05],
         [2.6452e-03, 1.5810e-03, 8.5133e-04,  ..., 1.2510e-03,
          1.8633e-03, 9.4030e-05],
         [5.6461e-03, 1.6623e-03, 8.5133e-04,  ..., 1.6133e-03,
          9.9441e-01, 9.9972e-01],
         [2.6452e-03, 9.9448e-01, 9.9745e-01,  ..., 9.9568e-01,
          1.8633e-03, 9.4030e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:53,035 [Process: 0] Synchronize training processes
2024-08-18 19:58:53,035 [Process: 0] Evaluating...
2024-08-18 19:58:53,037 [Process: 0] EPOCH 737:
2024-08-18 19:58:53,039 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:54,186 [Process: 0] Synchronize training processes
2024-08-18 19:58:54,187 [Process: 0] Evaluating...
2024-08-18 19:58:54,189 [Process: 0] EPOCH 738:
2024-08-18 19:58:54,190 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2510e-03, 4.2840e-05, 9.3808e-04,  ..., 3.6895e-03,
          2.7514e-06, 7.4257e-03],
         [1.2510e-03, 4.2840e-05, 9.3808e-04,  ..., 3.6895e-03,
          2.7514e-06, 3.4525e-03],
         [9.9625e-01, 4.2840e-05, 9.3808e-04,  ..., 9.8849e-01,
          2.7514e-06, 9.8567e-01],
         [1.2510e-03, 9.9987e-01, 9.9719e-01,  ..., 4.1347e-03,
          9.9999e-01, 3.4525e-03]],
        [[9.5323e-04, 1.9521e-03, 2.2226e-04,  ..., 2.8828e-03,
          3.1268e-03, 9.9998e-01],
         [9.5323e-04, 1.0038e-03, 2.2226e-04,  ..., 2.8828e-03,
          3.1268e-03, 7.4589e-06],
         [9.9714e-01, 1.0038e-03, 2.2226e-04,  ..., 9.9135e-01,
          9.9062e-01, 7.4589e-06],
         [9.5323e-04, 9.9604e-01, 9.9933e-01,  ..., 2.8828e-03,
          3.1268e-03, 7.4589e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 737:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9613e-01, 1.7778e-03, 9.1847e-04,  ..., 9.9902e-01,
          9.6712e-01, 2.0248e-03],
         [9.2820e-04, 1.7778e-03, 9.1847e-04,  ..., 3.2759e-04,
          5.1306e-03, 2.0248e-03],
         [2.1410e-03, 1.7778e-03, 9.1847e-04,  ..., 3.2759e-04,
          9.2946e-03, 2.6953e-03],
         [8.0243e-04, 9.9467e-01, 9.9724e-01,  ..., 3.2759e-04,
          1.8453e-02, 9.9326e-01]],
        [[9.9942e-01, 2.9533e-03, 2.3937e-03,  ..., 9.5253e-04,
          1.2063e-03, 2.5649e-04],
         [1.9220e-04, 4.4705e-03, 2.1134e-03,  ..., 9.5253e-04,
          1.2063e-03, 2.5649e-04],
         [1.9220e-04, 3.2685e-03, 2.2770e-03,  ..., 9.5253e-04,
          9.9638e-01, 9.9923e-01],
         [1.9220e-04, 9.8931e-01, 9.9322e-01,  ..., 9.9714e-01,
          1.2063e-03, 2.5649e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9739e-03, 1.5703e-04, 2.4261e-04,  ..., 1.8249e-03,
          5.8169e-05, 5.8175e-03],
         [2.9739e-03, 4.6855e-04, 4.1487e-04,  ..., 1.8249e-03,
          5.8169e-05, 5.8054e-03],
         [9.9108e-01, 1.5703e-04, 2.4261e-04,  ..., 9.9453e-01,
          5.8169e-05, 9.8216e-01],
         [2.9739e-03, 9.9922e-01, 9.9910e-01,  ..., 1.8249e-03,
          9.9983e-01, 6.2174e-03]],
        [[6.8716e-03, 1.9876e-04, 4.5373e-05,  ..., 1.9331e-03,
          3.4869e-03, 9.9226e-01],
         [6.8716e-03, 1.9876e-04, 4.5373e-05,  ..., 1.9331e-03,
          3.4869e-03, 1.3924e-03],
         [9.7519e-01, 1.9876e-04, 4.5373e-05,  ..., 9.9420e-01,
          9.8939e-01, 1.3924e-03],
         [1.1071e-02, 9.9940e-01, 9.9986e-01,  ..., 1.9331e-03,
          3.6394e-03, 4.9589e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 738:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9515e-01, 1.1511e-03, 1.2851e-03,  ..., 9.9898e-01,
          9.8707e-01, 6.3481e-04],
         [3.5989e-03, 1.1511e-03, 1.2851e-03,  ..., 3.3905e-04,
          3.4082e-03, 6.3481e-04],
         [6.2801e-04, 1.1792e-03, 1.2851e-03,  ..., 3.3905e-04,
          6.1089e-03, 6.3481e-04],
         [6.2801e-04, 9.9652e-01, 9.9614e-01,  ..., 3.3905e-04,
          3.4082e-03, 9.9810e-01]],
        [[9.9949e-01, 9.3932e-04, 8.3892e-04,  ..., 1.6012e-03,
          8.4468e-04, 3.9485e-04],
         [1.7027e-04, 9.3932e-04, 8.3892e-04,  ..., 1.6012e-03,
          8.4468e-04, 3.9485e-04],
         [1.7027e-04, 9.3932e-04, 8.3892e-04,  ..., 1.6012e-03,
          9.9747e-01, 9.9882e-01],
         [1.7027e-04, 9.9718e-01, 9.9748e-01,  ..., 9.9520e-01,
          8.4468e-04, 3.9485e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:58:55,333 [Process: 0] Synchronize training processes
2024-08-18 19:58:55,333 [Process: 0] Evaluating...
2024-08-18 19:58:55,335 [Process: 0] EPOCH 739:
2024-08-18 19:58:55,337 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:56,482 [Process: 0] Synchronize training processes
2024-08-18 19:58:56,482 [Process: 0] Evaluating...
2024-08-18 19:58:56,484 [Process: 0] EPOCH 740:
2024-08-18 19:58:56,486 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0708e-03, 4.5383e-04, 2.2738e-04,  ..., 3.9853e-03,
          3.1731e-05, 1.2591e-02],
         [1.9540e-03, 4.5383e-04, 2.2738e-04,  ..., 3.9853e-03,
          3.1731e-05, 7.2308e-03],
         [9.9402e-01, 4.5383e-04, 2.2738e-04,  ..., 9.8804e-01,
          3.1731e-05, 9.7295e-01],
         [1.9540e-03, 9.9864e-01, 9.9932e-01,  ..., 3.9853e-03,
          9.9990e-01, 7.2308e-03]],
        [[2.1495e-03, 1.5389e-04, 7.2252e-05,  ..., 3.9804e-03,
          3.2076e-03, 9.9997e-01],
         [2.1495e-03, 1.5389e-04, 7.2252e-05,  ..., 3.9804e-03,
          3.2076e-03, 1.0226e-05],
         [9.9355e-01, 1.5389e-04, 7.2252e-05,  ..., 9.8806e-01,
          9.8987e-01, 1.0226e-05],
         [2.1495e-03, 9.9954e-01, 9.9978e-01,  ..., 3.9804e-03,
          3.7197e-03, 1.0226e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 739:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9842e-01, 9.5578e-04, 1.4075e-03,  ..., 9.9940e-01,
          9.9593e-01, 2.3200e-04],
         [4.8124e-04, 9.5578e-04, 1.0492e-03,  ..., 2.0002e-04,
          1.0476e-03, 2.3200e-04],
         [6.1551e-04, 9.5578e-04, 1.0492e-03,  ..., 2.0002e-04,
          1.9706e-03, 2.3200e-04],
         [4.8124e-04, 9.9713e-01, 9.9649e-01,  ..., 2.0002e-04,
          1.0476e-03, 9.9930e-01]],
        [[9.9295e-01, 5.1269e-03, 7.9239e-03,  ..., 1.2973e-03,
          7.9479e-05, 3.6938e-04],
         [1.7246e-03, 4.7744e-03, 5.2106e-03,  ..., 1.2973e-03,
          7.9479e-05, 3.6938e-04],
         [1.7246e-03, 6.4845e-03, 8.3155e-03,  ..., 1.3893e-03,
          9.9976e-01, 9.9889e-01],
         [3.6051e-03, 9.8361e-01, 9.7855e-01,  ..., 9.9602e-01,
          7.9479e-05, 3.6938e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0026e-03, 9.7527e-05, 6.4031e-04,  ..., 4.8791e-03,
          8.9657e-05, 1.8023e-03],
         [2.0026e-03, 1.5738e-04, 6.8691e-04,  ..., 4.8791e-03,
          8.9657e-05, 1.8023e-03],
         [9.9399e-01, 9.7527e-05, 6.4031e-04,  ..., 9.8512e-01,
          8.9657e-05, 9.9459e-01],
         [2.0026e-03, 9.9965e-01, 9.9803e-01,  ..., 5.1180e-03,
          9.9973e-01, 1.8023e-03]],
        [[1.5204e-03, 5.0668e-04, 3.2331e-05,  ..., 6.7181e-03,
          2.6504e-03, 9.9986e-01],
         [1.5204e-03, 5.0668e-04, 3.2331e-05,  ..., 6.7181e-03,
          2.6504e-03, 4.1777e-05],
         [9.9544e-01, 5.0668e-04, 3.2331e-05,  ..., 9.7374e-01,
          9.9205e-01, 4.1777e-05],
         [1.5204e-03, 9.9848e-01, 9.9990e-01,  ..., 1.2819e-02,
          2.6504e-03, 5.9800e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 740:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:57,630 [Process: 0] Synchronize training processes
2024-08-18 19:58:57,630 [Process: 0] Evaluating...
2024-08-18 19:58:57,632 [Process: 0] EPOCH 741:
2024-08-18 19:58:57,634 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9898e-01, 3.7991e-03, 1.7432e-03,  ..., 9.9942e-01,
          9.9644e-01, 6.6979e-04],
         [2.8811e-04, 6.1370e-03, 1.7432e-03,  ..., 1.9078e-04,
          1.0222e-03, 6.6979e-04],
         [4.4583e-04, 4.4323e-03, 1.7432e-03,  ..., 2.0062e-04,
          1.5152e-03, 6.6979e-04],
         [2.8811e-04, 9.8563e-01, 9.9477e-01,  ..., 1.9078e-04,
          1.0222e-03, 9.9799e-01]],
        [[9.9684e-01, 8.2800e-04, 9.0833e-04,  ..., 2.6182e-03,
          1.8102e-04, 1.5750e-04],
         [5.8341e-04, 8.2800e-04, 9.0833e-04,  ..., 1.9131e-03,
          1.8102e-04, 1.5750e-04],
         [1.9983e-03, 8.5385e-04, 9.0833e-04,  ..., 2.2301e-03,
          9.9946e-01, 9.9953e-01],
         [5.8341e-04, 9.9749e-01, 9.9728e-01,  ..., 9.9324e-01,
          1.8102e-04, 1.5750e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3280e-03, 1.1437e-04, 2.2273e-04,  ..., 4.0542e-03,
          3.9773e-05, 4.7967e-04],
         [4.3280e-03, 1.1437e-04, 2.2273e-04,  ..., 4.0542e-03,
          3.9773e-05, 4.7967e-04],
         [9.8702e-01, 1.1437e-04, 2.2273e-04,  ..., 9.8750e-01,
          3.9773e-05, 9.9856e-01],
         [4.3280e-03, 9.9966e-01, 9.9933e-01,  ..., 4.3893e-03,
          9.9988e-01, 4.7967e-04]],
        [[8.6543e-04, 9.0602e-05, 3.1078e-04,  ..., 1.8839e-03,
          3.0016e-03, 9.9841e-01],
         [8.6543e-04, 9.0602e-05, 3.1078e-04,  ..., 1.8839e-03,
          3.0016e-03, 3.4798e-04],
         [9.9740e-01, 9.0602e-05, 3.1078e-04,  ..., 9.9435e-01,
          9.9100e-01, 3.4798e-04],
         [8.6543e-04, 9.9973e-01, 9.9907e-01,  ..., 1.8839e-03,
          3.0016e-03, 8.9289e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 741:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9842e-01, 9.8338e-04, 1.4418e-03,  ..., 9.9975e-01,
          9.9024e-01, 9.9391e-04],
         [6.1232e-04, 9.8338e-04, 1.4418e-03,  ..., 8.2093e-05,
          1.3168e-03, 9.9391e-04],
         [4.8549e-04, 1.1011e-03, 1.4418e-03,  ..., 8.2093e-05,
          7.1228e-03, 9.9391e-04],
         [4.8549e-04, 9.9693e-01, 9.9567e-01,  ..., 8.2093e-05,
          1.3168e-03, 9.9702e-01]],
        [[9.9900e-01, 1.9202e-03, 1.4270e-03,  ..., 2.0787e-03,
          9.9058e-04, 2.5094e-04],
         [3.0584e-04, 1.8790e-03, 1.4270e-03,  ..., 2.2842e-03,
          9.9058e-04, 2.5094e-04],
         [3.9100e-04, 1.8790e-03, 1.4270e-03,  ..., 2.0440e-03,
          9.9703e-01, 9.9925e-01],
         [3.0584e-04, 9.9432e-01, 9.9572e-01,  ..., 9.9359e-01,
          9.9058e-04, 2.5094e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9220e-03, 1.8984e-04, 6.2456e-05,  ..., 2.6678e-03,
          9.2165e-06, 1.3306e-02],
         [3.5555e-03, 1.8984e-04, 6.2456e-05,  ..., 2.6678e-03,
          9.2165e-06, 8.7811e-03],
         [9.8897e-01, 1.8984e-04, 6.2456e-05,  ..., 9.9200e-01,
          9.2165e-06, 9.6616e-01],
         [3.5555e-03, 9.9943e-01, 9.9981e-01,  ..., 2.6678e-03,
          9.9997e-01, 1.1755e-02]],
        [[3.3057e-04, 2.6810e-03, 1.9520e-05,  ..., 1.1010e-03,
          3.8245e-03, 9.9956e-01],
         [3.3057e-04, 2.6810e-03, 1.9520e-05,  ..., 1.1010e-03,
          3.8245e-03, 1.4597e-04],
         [9.9901e-01, 2.6810e-03, 1.9520e-05,  ..., 9.9670e-01,
          9.8735e-01, 1.4597e-04],
         [3.3057e-04, 9.9196e-01, 9.9994e-01,  ..., 1.1010e-03,
          5.0007e-03, 1.4597e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 742:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:58,780 [Process: 0] Synchronize training processes
2024-08-18 19:58:58,780 [Process: 0] Evaluating...
2024-08-18 19:58:58,787 [Process: 0] EPOCH 742:
2024-08-18 19:58:58,788 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:58:59,932 [Process: 0] Synchronize training processes
2024-08-18 19:58:59,932 [Process: 0] Evaluating...
2024-08-18 19:58:59,934 [Process: 0] EPOCH 743:
2024-08-18 19:58:59,936 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9664e-01, 1.1151e-03, 3.9475e-03,  ..., 9.9544e-01,
          9.7556e-01, 3.8019e-04],
         [7.5241e-04, 1.1151e-03, 1.9886e-03,  ..., 1.7497e-03,
          4.9532e-03, 3.8019e-04],
         [1.8599e-03, 1.1151e-03, 2.2369e-03,  ..., 1.4039e-03,
          8.6042e-03, 3.8019e-04],
         [7.5241e-04, 9.9665e-01, 9.9183e-01,  ..., 1.4039e-03,
          1.0883e-02, 9.9886e-01]],
        [[9.9982e-01, 2.4366e-03, 7.7964e-04,  ..., 5.4690e-04,
          8.0806e-04, 2.8140e-04],
         [5.8498e-05, 4.5163e-03, 7.7964e-04,  ..., 5.4690e-04,
          8.0806e-04, 2.8140e-04],
         [5.8498e-05, 3.1344e-03, 7.7964e-04,  ..., 5.4690e-04,
          9.9758e-01, 9.9916e-01],
         [5.8498e-05, 9.8991e-01, 9.9766e-01,  ..., 9.9836e-01,
          8.0806e-04, 2.8140e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8671e-03, 5.0044e-04, 4.1813e-04,  ..., 2.9437e-03,
          7.2211e-04, 2.9126e-03],
         [2.8671e-03, 5.0044e-04, 4.1813e-04,  ..., 2.9437e-03,
          7.2211e-04, 2.9126e-03],
         [9.9140e-01, 5.0044e-04, 4.1813e-04,  ..., 9.9056e-01,
          7.2211e-04, 9.9126e-01],
         [2.8671e-03, 9.9850e-01, 9.9875e-01,  ..., 3.5524e-03,
          9.9783e-01, 2.9126e-03]],
        [[2.7949e-03, 9.0424e-04, 5.6705e-05,  ..., 3.4239e-03,
          2.0501e-03, 9.9892e-01],
         [2.7949e-03, 9.0424e-04, 5.6705e-05,  ..., 3.4239e-03,
          2.0501e-03, 3.3300e-04],
         [9.9124e-01, 9.0424e-04, 5.6705e-05,  ..., 9.8973e-01,
          9.9385e-01, 3.3300e-04],
         [3.1672e-03, 9.9729e-01, 9.9983e-01,  ..., 3.4239e-03,
          2.0501e-03, 4.1586e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 743:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9864e-01, 1.6257e-03, 9.1981e-04,  ..., 9.9981e-01,
          9.9062e-01, 8.7596e-04],
         [4.9675e-04, 1.5772e-03, 9.1981e-04,  ..., 6.4101e-05,
          1.3926e-03, 8.7596e-04],
         [5.0942e-04, 2.4806e-03, 9.1981e-04,  ..., 6.4101e-05,
          6.5934e-03, 8.7596e-04],
         [3.5163e-04, 9.9432e-01, 9.9724e-01,  ..., 6.4101e-05,
          1.3926e-03, 9.9737e-01]],
        [[9.9450e-01, 1.7330e-03, 1.5890e-03,  ..., 5.2244e-03,
          2.4829e-04, 6.8961e-05],
         [1.2026e-03, 3.0641e-03, 1.5890e-03,  ..., 3.7172e-03,
          2.4829e-04, 6.8961e-05],
         [3.0987e-03, 1.7330e-03, 1.7451e-03,  ..., 5.7066e-03,
          9.9926e-01, 9.9979e-01],
         [1.2026e-03, 9.9347e-01, 9.9508e-01,  ..., 9.8535e-01,
          2.4829e-04, 6.8961e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:59:01,079 [Process: 0] Synchronize training processes
2024-08-18 19:59:01,080 [Process: 0] Evaluating...
2024-08-18 19:59:01,081 [Process: 0] EPOCH 744:
2024-08-18 19:59:01,084 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:02,232 [Process: 0] Synchronize training processes
2024-08-18 19:59:02,232 [Process: 0] Evaluating...
2024-08-18 19:59:02,234 [Process: 0] EPOCH 745:
2024-08-18 19:59:02,236 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1738e-03, 7.3975e-04, 4.1914e-04,  ..., 4.6107e-03,
          6.3546e-06, 2.8882e-03],
         [4.1738e-03, 7.3975e-04, 4.1914e-04,  ..., 4.6107e-03,
          6.3546e-06, 2.8882e-03],
         [9.8748e-01, 7.3975e-04, 4.1914e-04,  ..., 9.8617e-01,
          6.3546e-06, 9.9134e-01],
         [4.1738e-03, 9.9778e-01, 9.9874e-01,  ..., 4.6107e-03,
          9.9998e-01, 2.8882e-03]],
        [[5.6180e-03, 4.2128e-04, 9.1497e-05,  ..., 3.5814e-03,
          7.4398e-03, 9.9874e-01],
         [5.4126e-03, 5.0652e-04, 9.1497e-05,  ..., 3.5814e-03,
          7.4398e-03, 3.2010e-04],
         [9.8323e-01, 4.2128e-04, 9.1497e-05,  ..., 9.8926e-01,
          9.7270e-01, 3.2010e-04],
         [5.7376e-03, 9.9865e-01, 9.9973e-01,  ..., 3.5814e-03,
          1.2423e-02, 6.2237e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 744:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9969e-01, 7.8444e-04, 4.6997e-04,  ..., 9.9974e-01,
          9.9580e-01, 1.4962e-03],
         [1.0378e-04, 6.0222e-04, 4.6997e-04,  ..., 8.8063e-05,
          1.1420e-03, 1.4962e-03],
         [1.0378e-04, 6.0222e-04, 4.6997e-04,  ..., 8.8063e-05,
          1.9208e-03, 1.8327e-03],
         [1.0378e-04, 9.9801e-01, 9.9859e-01,  ..., 8.8063e-05,
          1.1420e-03, 9.9517e-01]],
        [[9.9850e-01, 1.0374e-03, 1.8079e-03,  ..., 1.3057e-03,
          2.4877e-04, 4.7245e-05],
         [5.0013e-04, 1.3305e-03, 1.2911e-03,  ..., 1.3057e-03,
          2.4877e-04, 4.7245e-05],
         [5.0013e-04, 1.0374e-03, 1.3569e-03,  ..., 1.3219e-03,
          9.9925e-01, 9.9986e-01],
         [5.0013e-04, 9.9659e-01, 9.9554e-01,  ..., 9.9607e-01,
          2.4877e-04, 4.7245e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.5188e-03, 2.3102e-05, 1.5842e-03,  ..., 2.1481e-03,
          5.9498e-04, 3.1911e-03],
         [4.5188e-03, 2.3102e-05, 1.8153e-03,  ..., 2.1481e-03,
          5.9498e-04, 3.1911e-03],
         [9.8644e-01, 2.3102e-05, 1.5842e-03,  ..., 9.9356e-01,
          5.9498e-04, 9.9043e-01],
         [4.5188e-03, 9.9993e-01, 9.9502e-01,  ..., 2.1481e-03,
          9.9822e-01, 3.1911e-03]],
        [[9.4919e-04, 1.8949e-04, 6.0757e-05,  ..., 3.1860e-03,
          1.7176e-03, 9.9979e-01],
         [9.4919e-04, 1.8949e-04, 6.0757e-05,  ..., 3.1860e-03,
          1.7176e-03, 5.1382e-05],
         [9.9715e-01, 1.8949e-04, 6.0757e-05,  ..., 9.9027e-01,
          9.9485e-01, 5.1382e-05],
         [9.4919e-04, 9.9943e-01, 9.9982e-01,  ..., 3.3573e-03,
          1.7176e-03, 1.0322e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 745:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9615e-01, 4.7917e-04, 2.6821e-03,  ..., 9.9988e-01,
          9.3682e-01, 1.6653e-03],
         [1.8951e-03, 4.7917e-04, 2.6821e-03,  ..., 4.0241e-05,
          1.1530e-02, 1.6653e-03],
         [9.7705e-04, 4.7917e-04, 3.1951e-03,  ..., 4.0241e-05,
          2.1566e-02, 1.8013e-03],
         [9.7705e-04, 9.9856e-01, 9.9144e-01,  ..., 4.0241e-05,
          3.0083e-02, 9.9487e-01]],
        [[9.9868e-01, 2.4901e-03, 6.8900e-04,  ..., 9.9307e-04,
          9.4780e-04, 8.0446e-05],
         [4.4075e-04, 2.4462e-03, 6.8900e-04,  ..., 9.9307e-04,
          9.4780e-04, 8.0446e-05],
         [4.4075e-04, 2.4462e-03, 6.8900e-04,  ..., 9.9307e-04,
          9.9716e-01, 9.9976e-01],
         [4.4075e-04, 9.9262e-01, 9.9793e-01,  ..., 9.9702e-01,
          9.4780e-04, 8.0446e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:59:03,381 [Process: 0] Synchronize training processes
2024-08-18 19:59:03,381 [Process: 0] Evaluating...
2024-08-18 19:59:03,383 [Process: 0] EPOCH 746:
2024-08-18 19:59:03,385 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:04,529 [Process: 0] Synchronize training processes
2024-08-18 19:59:04,529 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1739e-03, 4.8027e-05, 1.0223e-04,  ..., 2.1508e-03,
          1.8390e-05, 1.7786e-03],
         [2.1739e-03, 4.8027e-05, 1.0223e-04,  ..., 2.1508e-03,
          1.8390e-05, 1.3851e-03],
         [9.9348e-01, 4.8027e-05, 1.0223e-04,  ..., 9.9355e-01,
          1.8390e-05, 9.9545e-01],
         [2.1739e-03, 9.9986e-01, 9.9969e-01,  ..., 2.1508e-03,
          9.9994e-01, 1.3851e-03]],
        [[1.5003e-03, 1.8935e-04, 1.2591e-04,  ..., 1.7023e-03,
          2.6120e-03, 9.9242e-01],
         [1.5003e-03, 1.8935e-04, 1.2591e-04,  ..., 1.7023e-03,
          2.6120e-03, 2.0323e-03],
         [9.9550e-01, 1.8935e-04, 1.2591e-04,  ..., 9.9489e-01,
          9.9216e-01, 2.0323e-03],
         [1.5003e-03, 9.9943e-01, 9.9962e-01,  ..., 1.7023e-03,
          2.6120e-03, 3.5197e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 746:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9962e-01, 2.5839e-03, 4.2370e-04,  ..., 9.9916e-01,
          9.9732e-01, 1.3086e-03],
         [1.4566e-04, 2.2713e-03, 4.2370e-04,  ..., 2.3132e-04,
          7.0866e-04, 1.3086e-03],
         [1.1505e-04, 2.7361e-03, 4.2370e-04,  ..., 3.7467e-04,
          1.2635e-03, 1.3086e-03],
         [1.1505e-04, 9.9241e-01, 9.9873e-01,  ..., 2.3132e-04,
          7.0866e-04, 9.9607e-01]],
        [[9.9972e-01, 1.5991e-03, 3.7713e-03,  ..., 4.8028e-04,
          3.4382e-04, 5.3671e-04],
         [9.4747e-05, 1.5991e-03, 3.2856e-03,  ..., 4.8028e-04,
          3.4382e-04, 5.3671e-04],
         [9.4747e-05, 1.7035e-03, 5.2325e-03,  ..., 4.8028e-04,
          9.9897e-01, 9.9839e-01],
         [9.4747e-05, 9.9510e-01, 9.8771e-01,  ..., 9.9856e-01,
          3.4382e-04, 5.3671e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6849e-03, 9.1753e-05, 2.2025e-05,  ..., 1.2122e-03,
          1.2699e-05, 1.6382e-03],
         [2.6849e-03, 9.1753e-05, 2.2025e-05,  ..., 1.2122e-03,
          1.2699e-05, 1.6382e-03],
         [9.9195e-01, 9.1753e-05, 2.2025e-05,  ..., 9.9636e-01,
          1.2699e-05, 9.9509e-01],
         [2.6849e-03, 9.9972e-01, 9.9993e-01,  ..., 1.2122e-03,
          9.9996e-01, 1.6382e-03]],
        [[3.8209e-03, 8.7541e-04, 3.9262e-04,  ..., 3.6744e-03,
          2.9849e-03, 9.9966e-01],
         [3.8209e-03, 8.7541e-04, 4.2800e-04,  ..., 3.6744e-03,
          2.9849e-03, 9.1293e-05],
         [9.8825e-01, 8.7541e-04, 3.9262e-04,  ..., 9.8861e-01,
          9.9105e-01, 9.1293e-05],
         [4.1131e-03, 9.9737e-01, 9.9879e-01,  ..., 4.0412e-03,
          2.9849e-03, 1.5273e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 747:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:04,531 [Process: 0] EPOCH 747:
2024-08-18 19:59:04,533 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:05,677 [Process: 0] Synchronize training processes
2024-08-18 19:59:05,677 [Process: 0] Evaluating...
2024-08-18 19:59:05,679 [Process: 0] EPOCH 748:
2024-08-18 19:59:05,681 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9965e-01, 8.6030e-04, 2.7423e-03,  ..., 9.9917e-01,
          9.8494e-01, 5.9065e-04],
         [1.0581e-04, 8.6030e-04, 2.0934e-03,  ..., 2.7498e-04,
          3.2250e-03, 5.9065e-04],
         [1.3953e-04, 8.6030e-04, 3.0838e-03,  ..., 2.7498e-04,
          6.8012e-03, 5.9065e-04],
         [1.0581e-04, 9.9742e-01, 9.9208e-01,  ..., 2.7498e-04,
          5.0356e-03, 9.9823e-01]],
        [[9.9610e-01, 4.3216e-03, 6.5051e-04,  ..., 1.4983e-03,
          2.8786e-04, 2.1331e-04],
         [1.1385e-03, 6.9844e-03, 6.5051e-04,  ..., 1.5769e-03,
          2.8786e-04, 2.1331e-04],
         [1.6214e-03, 5.3736e-03, 6.6397e-04,  ..., 1.4983e-03,
          9.9914e-01, 9.9936e-01],
         [1.1385e-03, 9.8332e-01, 9.9804e-01,  ..., 9.9543e-01,
          2.8786e-04, 2.1331e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5389e-03, 1.7660e-03, 3.1457e-04,  ..., 2.1277e-03,
          1.6736e-05, 3.2523e-03],
         [2.5389e-03, 1.7660e-03, 3.1457e-04,  ..., 2.1277e-03,
          1.6736e-05, 3.2523e-03],
         [9.9238e-01, 1.7660e-03, 3.1457e-04,  ..., 9.9362e-01,
          1.6736e-05, 9.9024e-01],
         [2.5389e-03, 9.9470e-01, 9.9906e-01,  ..., 2.1277e-03,
          9.9995e-01, 3.2523e-03]],
        [[2.4789e-03, 6.7408e-04, 1.1676e-04,  ..., 8.6839e-04,
          4.9076e-03, 9.9979e-01],
         [2.4789e-03, 7.4746e-04, 1.1676e-04,  ..., 8.6839e-04,
          4.9076e-03, 6.9029e-05],
         [9.9247e-01, 6.7408e-04, 1.1676e-04,  ..., 9.9739e-01,
          9.8396e-01, 6.9029e-05],
         [2.5700e-03, 9.9790e-01, 9.9965e-01,  ..., 8.6839e-04,
          6.2254e-03, 7.6903e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 748:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9570e-01, 5.8095e-04, 2.3067e-03,  ..., 9.9956e-01,
          9.9599e-01, 2.5779e-04],
         [1.1502e-03, 5.8095e-04, 2.0911e-03,  ..., 1.4605e-04,
          1.0687e-03, 2.5779e-04],
         [1.9969e-03, 5.8095e-04, 2.5577e-03,  ..., 1.4605e-04,
          1.8776e-03, 2.5779e-04],
         [1.1502e-03, 9.9826e-01, 9.9304e-01,  ..., 1.4605e-04,
          1.0687e-03, 9.9923e-01]],
        [[9.9884e-01, 3.9112e-03, 2.0024e-04,  ..., 3.2042e-03,
          9.5101e-05, 2.4222e-04],
         [3.1001e-04, 3.0304e-03, 2.0024e-04,  ..., 3.5075e-03,
          9.5101e-05, 2.4222e-04],
         [5.4344e-04, 3.9857e-03, 2.0024e-04,  ..., 4.5272e-03,
          9.9971e-01, 9.9927e-01],
         [3.1001e-04, 9.8907e-01, 9.9940e-01,  ..., 9.8876e-01,
          9.5101e-05, 2.4222e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9487e-03, 1.1152e-04, 2.9622e-04,  ..., 2.9408e-03,
          2.3299e-04, 2.6522e-03],
         [4.1191e-03, 1.1152e-04, 2.9622e-04,  ..., 2.9408e-03,
          2.3299e-04, 2.6522e-03],
         [9.8681e-01, 1.1152e-04, 2.9622e-04,  ..., 9.9118e-01,
          2.3299e-04, 9.9204e-01],
         [4.1191e-03, 9.9967e-01, 9.9911e-01,  ..., 2.9408e-03,
          9.9930e-01, 2.6522e-03]],
        [[1.9887e-03, 2.2029e-04, 1.0360e-04,  ..., 3.0897e-03,
          4.8531e-03, 9.9990e-01],
         [1.9887e-03, 2.2029e-04, 1.0360e-04,  ..., 3.0897e-03,
          4.7652e-03, 3.2154e-05],
         [9.9403e-01, 2.2029e-04, 1.0360e-04,  ..., 9.9073e-01,
          9.8540e-01, 3.2154e-05],
         [1.9887e-03, 9.9934e-01, 9.9969e-01,  ..., 3.0897e-03,
          4.9820e-03, 3.2154e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:59:06,822 [Process: 0] Synchronize training processes
2024-08-18 19:59:06,822 [Process: 0] Evaluating...
2024-08-18 19:59:06,824 [Process: 0] EPOCH 749:
2024-08-18 19:59:06,826 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:07,971 [Process: 0] Synchronize training processes
2024-08-18 19:59:07,971 [Process: 0] Evaluating...
2024-08-18 19:59:07,973 [Process: 0] EPOCH 750:
2024-08-18 19:59:07,975 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 749:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9574e-01, 1.8004e-03, 1.7575e-03,  ..., 9.9962e-01,
          9.9528e-01, 1.0043e-03],
         [1.6826e-03, 1.8004e-03, 1.1282e-03,  ..., 1.2825e-04,
          1.2619e-03, 1.0043e-03],
         [1.2907e-03, 2.0455e-03, 1.1282e-03,  ..., 1.2825e-04,
          2.1978e-03, 1.0043e-03],
         [1.2907e-03, 9.9435e-01, 9.9599e-01,  ..., 1.2825e-04,
          1.2619e-03, 9.9699e-01]],
        [[9.9747e-01, 1.6540e-03, 9.5597e-04,  ..., 7.3443e-04,
          6.5247e-04, 6.8761e-04],
         [8.4488e-04, 1.6540e-03, 9.5597e-04,  ..., 7.3443e-04,
          6.5247e-04, 6.8761e-04],
         [8.4488e-04, 2.4033e-03, 9.5597e-04,  ..., 7.3443e-04,
          9.9804e-01, 9.9794e-01],
         [8.4488e-04, 9.9429e-01, 9.9713e-01,  ..., 9.9780e-01,
          6.5247e-04, 6.8761e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5366e-03, 1.9823e-05, 2.1888e-06,  ..., 2.9230e-03,
          1.6571e-05, 2.9687e-03],
         [2.5366e-03, 1.9823e-05, 2.1888e-06,  ..., 2.9230e-03,
          1.6571e-05, 2.9687e-03],
         [9.9239e-01, 1.9823e-05, 2.1888e-06,  ..., 9.9115e-01,
          1.6571e-05, 9.9109e-01],
         [2.5366e-03, 9.9994e-01, 9.9999e-01,  ..., 3.0053e-03,
          9.9995e-01, 2.9687e-03]],
        [[1.2508e-03, 6.1017e-04, 1.6777e-03,  ..., 1.2443e-03,
          2.6506e-03, 9.9958e-01],
         [1.2508e-03, 6.1017e-04, 1.6777e-03,  ..., 1.2443e-03,
          2.6506e-03, 1.4031e-04],
         [9.9625e-01, 6.1017e-04, 1.6777e-03,  ..., 9.9627e-01,
          9.9139e-01, 1.4031e-04],
         [1.2508e-03, 9.9817e-01, 9.9497e-01,  ..., 1.2443e-03,
          3.3091e-03, 1.4031e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 750:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8554e-01, 4.1692e-03, 2.3300e-03,  ..., 9.9915e-01,
          9.9474e-01, 8.2249e-04],
         [2.9207e-03, 1.9789e-03, 2.3422e-03,  ..., 2.0938e-04,
          1.4583e-03, 8.2249e-04],
         [8.8140e-03, 2.1322e-03, 2.5307e-03,  ..., 4.2824e-04,
          1.7554e-03, 8.2249e-04],
         [2.7210e-03, 9.9172e-01, 9.9280e-01,  ..., 2.0938e-04,
          2.0432e-03, 9.9753e-01]],
        [[9.8941e-01, 1.3813e-03, 1.2403e-03,  ..., 8.7175e-04,
          3.8471e-04, 1.6261e-04],
         [2.3338e-03, 1.3813e-03, 1.2403e-03,  ..., 8.7175e-04,
          3.8471e-04, 1.6261e-04],
         [5.9201e-03, 2.0382e-03, 1.2403e-03,  ..., 8.7175e-04,
          9.9885e-01, 9.9951e-01],
         [2.3338e-03, 9.9520e-01, 9.9628e-01,  ..., 9.9738e-01,
          3.8471e-04, 1.6261e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:59:09,118 [Process: 0] Synchronize training processes
2024-08-18 19:59:09,118 [Process: 0] Evaluating...
2024-08-18 19:59:09,120 [Process: 0] EPOCH 751:
2024-08-18 19:59:09,122 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:10,269 [Process: 0] Synchronize training processes
2024-08-18 19:59:10,269 [Process: 0] Evaluating...
2024-08-18 19:59:10,275 [Process: 0] EPOCH 752:
2024-08-18 19:59:10,277 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9082e-03, 3.0016e-05, 5.1128e-05,  ..., 2.0022e-03,
          1.8933e-05, 3.6536e-03],
         [3.7923e-03, 3.0016e-05, 5.1128e-05,  ..., 2.0022e-03,
          1.8933e-05, 3.6536e-03],
         [9.8851e-01, 3.0016e-05, 5.1128e-05,  ..., 9.9399e-01,
          1.8933e-05, 9.8904e-01],
         [3.7923e-03, 9.9991e-01, 9.9985e-01,  ..., 2.0022e-03,
          9.9994e-01, 3.6536e-03]],
        [[5.6024e-04, 3.1857e-03, 4.4428e-03,  ..., 1.9407e-03,
          1.6248e-03, 9.9966e-01],
         [5.6024e-04, 3.1857e-03, 1.9482e-03,  ..., 1.9407e-03,
          1.6248e-03, 8.2374e-05],
         [9.9832e-01, 3.1857e-03, 1.9482e-03,  ..., 9.9418e-01,
          9.9513e-01, 8.2374e-05],
         [5.6024e-04, 9.9044e-01, 9.9166e-01,  ..., 1.9407e-03,
          1.6248e-03, 1.7159e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 751:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9920e-01, 1.6368e-03, 1.5331e-03,  ..., 9.9958e-01,
          9.8136e-01, 3.8810e-03],
         [2.6816e-04, 1.6368e-03, 1.5331e-03,  ..., 1.4119e-04,
          3.6531e-03, 3.3187e-03],
         [2.6816e-04, 2.6744e-03, 1.6986e-03,  ..., 1.4119e-04,
          1.0911e-02, 6.2378e-03],
         [2.6816e-04, 9.9405e-01, 9.9524e-01,  ..., 1.4119e-04,
          4.0771e-03, 9.8656e-01]],
        [[9.9947e-01, 1.6069e-03, 1.5179e-03,  ..., 8.1472e-04,
          7.7521e-05, 2.3525e-04],
         [1.7508e-04, 1.6069e-03, 1.8620e-03,  ..., 8.1472e-04,
          7.7521e-05, 2.3525e-04],
         [1.8371e-04, 1.6069e-03, 1.8458e-03,  ..., 8.1472e-04,
          9.9977e-01, 9.9929e-01],
         [1.7508e-04, 9.9518e-01, 9.9477e-01,  ..., 9.9756e-01,
          7.7521e-05, 2.3525e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3618e-03, 3.9512e-05, 6.4695e-05,  ..., 1.6001e-03,
          9.4874e-06, 3.9053e-03],
         [2.3618e-03, 3.9512e-05, 6.4695e-05,  ..., 1.6001e-03,
          9.4874e-06, 3.9053e-03],
         [9.9291e-01, 3.9512e-05, 6.4695e-05,  ..., 9.9520e-01,
          9.4874e-06, 9.8828e-01],
         [2.3618e-03, 9.9988e-01, 9.9981e-01,  ..., 1.6001e-03,
          9.9997e-01, 3.9053e-03]],
        [[3.9798e-03, 3.8571e-04, 1.1805e-04,  ..., 6.0292e-03,
          1.0196e-02, 9.9993e-01],
         [3.9798e-03, 3.4905e-04, 1.1805e-04,  ..., 4.7688e-03,
          9.1550e-03, 2.1911e-05],
         [9.8806e-01, 3.4905e-04, 1.1805e-04,  ..., 9.8443e-01,
          9.6684e-01, 2.1911e-05],
         [3.9798e-03, 9.9892e-01, 9.9965e-01,  ..., 4.7688e-03,
          1.3806e-02, 2.1911e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 752:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9802e-01, 1.1605e-03, 9.2391e-04,  ..., 9.9906e-01,
          9.9343e-01, 5.6580e-04],
         [6.4345e-04, 1.1605e-03, 1.0178e-03,  ..., 3.1405e-04,
          1.6527e-03, 5.6580e-04],
         [6.9757e-04, 1.1605e-03, 9.2391e-04,  ..., 3.1405e-04,
          3.2636e-03, 5.6580e-04],
         [6.4345e-04, 9.9652e-01, 9.9713e-01,  ..., 3.1405e-04,
          1.6527e-03, 9.9830e-01]],
        [[9.9856e-01, 1.9852e-03, 2.0405e-03,  ..., 4.8869e-04,
          3.0651e-04, 6.0585e-05],
         [4.8030e-04, 1.9852e-03, 2.1769e-03,  ..., 4.8869e-04,
          3.0651e-04, 6.0585e-05],
         [4.8030e-04, 2.1935e-03, 2.2917e-03,  ..., 4.8869e-04,
          9.9908e-01, 9.9982e-01],
         [4.8030e-04, 9.9384e-01, 9.9349e-01,  ..., 9.9853e-01,
          3.0651e-04, 6.0585e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:59:11,420 [Process: 0] Synchronize training processes
2024-08-18 19:59:11,420 [Process: 0] Evaluating...
2024-08-18 19:59:11,422 [Process: 0] EPOCH 753:
2024-08-18 19:59:11,424 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0247e-03, 3.1291e-05, 1.0686e-04,  ..., 2.8017e-03,
          1.1073e-05, 1.7362e-03],
         [1.0247e-03, 3.1291e-05, 1.0686e-04,  ..., 2.8017e-03,
          1.1073e-05, 1.7362e-03],
         [9.9693e-01, 3.1291e-05, 1.0686e-04,  ..., 9.9159e-01,
          1.1073e-05, 9.9479e-01],
         [1.0247e-03, 9.9991e-01, 9.9968e-01,  ..., 2.8017e-03,
          9.9997e-01, 1.7362e-03]],
        [[2.3510e-03, 2.9259e-04, 2.9437e-05,  ..., 7.7005e-04,
          3.6609e-03, 9.9892e-01],
         [2.3510e-03, 2.9259e-04, 2.9437e-05,  ..., 7.7005e-04,
          3.6609e-03, 2.8321e-04],
         [9.9295e-01, 2.9259e-04, 2.9437e-05,  ..., 9.9769e-01,
          9.8902e-01, 2.8321e-04],
         [2.3510e-03, 9.9912e-01, 9.9991e-01,  ..., 7.7005e-04,
          3.6609e-03, 5.1199e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 753:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9972e-01, 5.6798e-03, 2.0841e-03,  ..., 9.9975e-01,
          9.8887e-01, 1.3673e-03],
         [9.4339e-05, 4.4697e-03, 1.5595e-03,  ..., 8.1983e-05,
          2.1661e-03, 1.1584e-03],
         [9.4339e-05, 8.7260e-03, 1.6939e-03,  ..., 8.1983e-05,
          2.4273e-03, 1.4330e-03],
         [9.4339e-05, 9.8112e-01, 9.9466e-01,  ..., 8.1983e-05,
          6.5383e-03, 9.9604e-01]],
        [[9.9860e-01, 9.1361e-04, 1.8252e-03,  ..., 9.0377e-04,
          4.2813e-04, 2.8813e-05],
         [4.6618e-04, 9.1361e-04, 1.8252e-03,  ..., 9.0377e-04,
          4.2813e-04, 2.8813e-05],
         [4.6618e-04, 1.2605e-03, 2.5248e-03,  ..., 9.0377e-04,
          9.9872e-01, 9.9991e-01],
         [4.6618e-04, 9.9691e-01, 9.9382e-01,  ..., 9.9729e-01,
          4.2813e-04, 2.8813e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1453e-02, 5.8752e-05, 1.7170e-04,  ..., 3.0160e-03,
          9.4678e-05, 1.1106e-03],
         [7.1548e-03, 5.8752e-05, 1.7170e-04,  ..., 3.0160e-03,
          9.4678e-05, 1.1106e-03],
         [9.7424e-01, 5.8752e-05, 1.7170e-04,  ..., 9.9095e-01,
          9.4678e-05, 9.9667e-01],
         [7.1548e-03, 9.9982e-01, 9.9948e-01,  ..., 3.0160e-03,
          9.9972e-01, 1.1106e-03]],
        [[1.7972e-03, 3.3400e-05, 1.1165e-04,  ..., 1.6494e-03,
          3.4590e-03, 9.9972e-01],
         [1.7972e-03, 3.3400e-05, 1.1165e-04,  ..., 1.6494e-03,
          3.4590e-03, 7.8770e-05],
         [9.9461e-01, 3.3400e-05, 1.1165e-04,  ..., 9.9505e-01,
          9.8922e-01, 7.8770e-05],
         [1.7972e-03, 9.9990e-01, 9.9967e-01,  ..., 1.6494e-03,
          3.8639e-03, 1.2219e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 754:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-18 19:59:12,567 [Process: 0] Synchronize training processes
2024-08-18 19:59:12,567 [Process: 0] Evaluating...
2024-08-18 19:59:12,569 [Process: 0] EPOCH 754:
2024-08-18 19:59:12,570 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:13,713 [Process: 0] Synchronize training processes
2024-08-18 19:59:13,713 [Process: 0] Evaluating...
2024-08-18 19:59:13,715 [Process: 0] EPOCH 755:
2024-08-18 19:59:13,717 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9884e-01, 1.8559e-03, 3.3099e-03,  ..., 9.9988e-01,
          9.9456e-01, 1.1318e-03],
         [4.2632e-04, 1.8559e-03, 2.4664e-03,  ..., 3.9861e-05,
          1.2656e-03, 1.1318e-03],
         [3.6752e-04, 1.9870e-03, 2.9424e-03,  ..., 3.9861e-05,
          2.9131e-03, 1.4062e-03],
         [3.6546e-04, 9.9430e-01, 9.9128e-01,  ..., 3.9861e-05,
          1.2656e-03, 9.9633e-01]],
        [[9.5742e-01, 9.6765e-04, 9.2503e-03,  ..., 1.7278e-03,
          6.5276e-04, 1.0526e-04],
         [1.0369e-02, 9.6765e-04, 6.0696e-03,  ..., 1.7278e-03,
          6.5276e-04, 1.0526e-04],
         [1.5039e-02, 9.6765e-04, 8.6132e-03,  ..., 2.7240e-03,
          9.9804e-01, 9.9968e-01],
         [1.7170e-02, 9.9710e-01, 9.7607e-01,  ..., 9.9382e-01,
          6.5276e-04, 1.0526e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7991e-03, 1.2963e-04, 1.1981e-04,  ..., 5.2945e-03,
          7.2866e-05, 9.3525e-04],
         [1.7991e-03, 1.2963e-04, 1.1981e-04,  ..., 5.2945e-03,
          7.2866e-05, 9.3525e-04],
         [9.9460e-01, 1.2963e-04, 1.1981e-04,  ..., 9.8183e-01,
          7.2866e-05, 9.9719e-01],
         [1.7991e-03, 9.9961e-01, 9.9964e-01,  ..., 7.5829e-03,
          9.9978e-01, 9.3525e-04]],
        [[8.6400e-04, 6.9777e-04, 4.1176e-04,  ..., 1.6321e-03,
          1.4175e-03, 9.9985e-01],
         [8.6400e-04, 1.6691e-04, 4.1176e-04,  ..., 1.6321e-03,
          1.4175e-03, 4.8578e-05],
         [9.9741e-01, 1.6691e-04, 4.1176e-04,  ..., 9.9510e-01,
          9.9575e-01, 4.8578e-05],
         [8.6400e-04, 9.9897e-01, 9.9876e-01,  ..., 1.6321e-03,
          1.4175e-03, 5.3712e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 755:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9867e-01, 1.3464e-03, 6.4711e-03,  ..., 9.9951e-01,
          9.8263e-01, 1.1450e-03],
         [4.0995e-04, 1.3464e-03, 4.5648e-03,  ..., 1.1427e-04,
          3.7809e-03, 1.1450e-03],
         [5.1224e-04, 1.4098e-03, 1.0372e-02,  ..., 2.6455e-04,
          4.0067e-03, 1.1450e-03],
         [4.0995e-04, 9.9590e-01, 9.7859e-01,  ..., 1.1427e-04,
          9.5808e-03, 9.9657e-01]],
        [[9.9909e-01, 2.3923e-04, 1.1948e-03,  ..., 3.3221e-04,
          2.8348e-04, 1.6165e-03],
         [2.6494e-04, 2.3923e-04, 1.1948e-03,  ..., 3.3221e-04,
          2.8348e-04, 1.6165e-03],
         [3.7723e-04, 2.3923e-04, 1.1948e-03,  ..., 3.3221e-04,
          9.9915e-01, 9.9515e-01],
         [2.6494e-04, 9.9928e-01, 9.9642e-01,  ..., 9.9900e-01,
          2.8348e-04, 1.6165e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.2068e-04, 2.9829e-05, 4.0201e-05,  ..., 6.7700e-03,
          3.3073e-04, 1.5741e-03],
         [8.2068e-04, 2.9829e-05, 4.0201e-05,  ..., 6.4738e-03,
          3.3073e-04, 1.4656e-03],
         [9.9754e-01, 2.9829e-05, 4.0201e-05,  ..., 9.7874e-01,
          3.3073e-04, 9.9549e-01],
         [8.2068e-04, 9.9991e-01, 9.9988e-01,  ..., 8.0158e-03,
          9.9901e-01, 1.4656e-03]],
        [[2.8295e-03, 3.2261e-04, 4.1332e-05,  ..., 2.1954e-03,
          1.1417e-03, 9.9993e-01],
         [2.8295e-03, 3.2261e-04, 4.1332e-05,  ..., 2.1954e-03,
          1.1417e-03, 2.4652e-05],
         [9.9088e-01, 3.2261e-04, 4.1332e-05,  ..., 9.9341e-01,
          9.9657e-01, 2.4652e-05],
         [3.4566e-03, 9.9903e-01, 9.9988e-01,  ..., 2.1954e-03,
          1.1417e-03, 2.4652e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 756:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:14,949 [Process: 0] Synchronize training processes
2024-08-18 19:59:14,950 [Process: 0] Evaluating...
2024-08-18 19:59:14,951 [Process: 0] EPOCH 756:
2024-08-18 19:59:14,953 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:16,094 [Process: 0] Synchronize training processes
2024-08-18 19:59:16,094 [Process: 0] Evaluating...
2024-08-18 19:59:16,096 [Process: 0] EPOCH 757:
2024-08-18 19:59:16,098 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9626e-01, 7.8511e-04, 1.4941e-03,  ..., 9.9705e-01,
          9.9455e-01, 1.1994e-03],
         [1.2019e-03, 6.3195e-04, 1.4941e-03,  ..., 7.5233e-04,
          1.6278e-03, 1.1994e-03],
         [1.3376e-03, 6.3195e-04, 1.5739e-03,  ..., 1.4404e-03,
          1.7364e-03, 1.4365e-03],
         [1.2019e-03, 9.9795e-01, 9.9544e-01,  ..., 7.5233e-04,
          2.0808e-03, 9.9616e-01]],
        [[9.9881e-01, 1.2739e-03, 6.9570e-04,  ..., 1.5201e-03,
          1.2645e-04, 1.7215e-04],
         [3.8005e-04, 1.2739e-03, 6.9570e-04,  ..., 1.5201e-03,
          1.2645e-04, 1.7215e-04],
         [4.2549e-04, 1.2739e-03, 6.9570e-04,  ..., 1.5201e-03,
          9.9962e-01, 9.9948e-01],
         [3.8005e-04, 9.9618e-01, 9.9791e-01,  ..., 9.9544e-01,
          1.2645e-04, 1.7215e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2661e-03, 5.5786e-05, 4.7871e-05,  ..., 2.5191e-03,
          1.6324e-05, 5.3308e-03],
         [1.2661e-03, 5.5786e-05, 4.7871e-05,  ..., 2.5191e-03,
          1.6324e-05, 3.5970e-03],
         [9.9620e-01, 5.5786e-05, 4.7871e-05,  ..., 9.9244e-01,
          1.6324e-05, 9.8748e-01],
         [1.2661e-03, 9.9983e-01, 9.9986e-01,  ..., 2.5191e-03,
          9.9995e-01, 3.5970e-03]],
        [[5.5110e-04, 1.0781e-03, 7.6627e-04,  ..., 1.2380e-03,
          1.6659e-02, 9.9993e-01],
         [5.5110e-04, 1.0781e-03, 7.6627e-04,  ..., 1.2380e-03,
          1.2364e-02, 2.2406e-05],
         [9.9835e-01, 1.0781e-03, 7.6627e-04,  ..., 9.9629e-01,
          9.4801e-01, 2.2406e-05],
         [5.5110e-04, 9.9677e-01, 9.9770e-01,  ..., 1.2380e-03,
          2.2964e-02, 2.3015e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 757:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8856e-01, 6.6962e-04, 7.5912e-04,  ..., 9.9973e-01,
          9.8744e-01, 1.6287e-03],
         [1.8840e-03, 6.6962e-04, 7.5912e-04,  ..., 9.0799e-05,
          2.7121e-03, 1.3929e-03],
         [7.6730e-03, 7.2951e-04, 8.1649e-04,  ..., 9.0799e-05,
          6.7259e-03, 1.8461e-03],
         [1.8840e-03, 9.9793e-01, 9.9767e-01,  ..., 9.0799e-05,
          3.1188e-03, 9.9513e-01]],
        [[9.9907e-01, 1.5532e-03, 2.1478e-03,  ..., 2.6599e-03,
          5.8098e-04, 3.8211e-05],
         [2.7438e-04, 1.5532e-03, 2.1478e-03,  ..., 2.6599e-03,
          5.8098e-04, 3.8211e-05],
         [3.7906e-04, 1.5532e-03, 2.9950e-03,  ..., 2.7635e-03,
          9.9826e-01, 9.9989e-01],
         [2.7438e-04, 9.9534e-01, 9.9271e-01,  ..., 9.9192e-01,
          5.8098e-04, 3.8211e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:59:17,244 [Process: 0] Synchronize training processes
2024-08-18 19:59:17,244 [Process: 0] Evaluating...
2024-08-18 19:59:17,246 [Process: 0] EPOCH 758:
2024-08-18 19:59:17,247 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:18,393 [Process: 0] Synchronize training processes
2024-08-18 19:59:18,394 [Process: 0] Evaluating...
2024-08-18 19:59:18,395 [Process: 0] EPOCH 759:
2024-08-18 19:59:18,397 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0263e-03, 3.1308e-04, 5.3711e-05,  ..., 1.9694e-03,
          8.1170e-05, 2.4271e-03],
         [1.0263e-03, 3.1308e-04, 5.3711e-05,  ..., 1.9694e-03,
          8.1170e-05, 2.4271e-03],
         [9.9692e-01, 3.1308e-04, 5.3711e-05,  ..., 9.9409e-01,
          8.1170e-05, 9.9272e-01],
         [1.0263e-03, 9.9906e-01, 9.9984e-01,  ..., 1.9694e-03,
          9.9976e-01, 2.4271e-03]],
        [[1.9313e-03, 1.4359e-03, 1.5593e-04,  ..., 9.1521e-04,
          8.6589e-04, 9.9977e-01],
         [1.9313e-03, 1.4359e-03, 1.1471e-04,  ..., 9.1521e-04,
          8.6589e-04, 7.3617e-05],
         [9.9421e-01, 1.4359e-03, 1.1471e-04,  ..., 9.9725e-01,
          9.9740e-01, 7.3617e-05],
         [1.9313e-03, 9.9569e-01, 9.9961e-01,  ..., 9.1521e-04,
          8.6589e-04, 8.5282e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 758:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9951e-01, 1.6812e-03, 3.7606e-04,  ..., 9.9953e-01,
          9.8153e-01, 4.3861e-04],
         [1.3433e-04, 1.6359e-03, 3.7606e-04,  ..., 1.5588e-04,
          4.2146e-03, 4.3861e-04],
         [2.2064e-04, 2.0329e-03, 3.7606e-04,  ..., 1.5588e-04,
          9.5680e-03, 4.3861e-04],
         [1.3433e-04, 9.9465e-01, 9.9887e-01,  ..., 1.5588e-04,
          4.6863e-03, 9.9868e-01]],
        [[9.9964e-01, 1.8140e-03, 5.8179e-03,  ..., 1.2184e-03,
          1.4197e-04, 8.9420e-04],
         [1.2077e-04, 1.2641e-03, 7.7433e-03,  ..., 1.2184e-03,
          1.4197e-04, 8.9420e-04],
         [1.2077e-04, 1.5208e-03, 1.0965e-02,  ..., 1.2184e-03,
          9.9957e-01, 9.9732e-01],
         [1.2077e-04, 9.9540e-01, 9.7547e-01,  ..., 9.9634e-01,
          1.4197e-04, 8.9420e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4984e-03, 1.4263e-04, 9.3207e-05,  ..., 3.4029e-03,
          1.8253e-03, 1.2412e-03],
         [1.4984e-03, 1.4263e-04, 9.3207e-05,  ..., 3.4029e-03,
          1.2370e-03, 1.2412e-03],
         [9.9550e-01, 1.4263e-04, 9.3207e-05,  ..., 9.8979e-01,
          1.2370e-03, 9.9628e-01],
         [1.4984e-03, 9.9957e-01, 9.9972e-01,  ..., 3.4029e-03,
          9.9570e-01, 1.2412e-03]],
        [[1.3973e-03, 1.9735e-04, 2.1555e-05,  ..., 4.2902e-03,
          7.1323e-04, 9.9950e-01],
         [1.3973e-03, 1.9735e-04, 2.1555e-05,  ..., 4.2902e-03,
          7.1323e-04, 1.2288e-04],
         [9.9581e-01, 1.9735e-04, 2.1555e-05,  ..., 9.8713e-01,
          9.9786e-01, 1.2288e-04],
         [1.3973e-03, 9.9941e-01, 9.9994e-01,  ..., 4.2902e-03,
          7.1323e-04, 2.5202e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 759:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9260e-01, 9.1460e-04, 8.2921e-04,  ..., 9.9966e-01,
          9.9981e-01, 3.9288e-04],
         [3.5777e-03, 9.1460e-04, 8.2921e-04,  ..., 1.0561e-04,
          6.2763e-05, 3.9288e-04],
         [2.0070e-03, 9.1460e-04, 8.3098e-04,  ..., 1.3260e-04,
          6.2763e-05, 3.9288e-04],
         [1.8134e-03, 9.9726e-01, 9.9751e-01,  ..., 1.0561e-04,
          6.2763e-05, 9.9882e-01]],
        [[9.9979e-01, 5.1752e-04, 1.8436e-03,  ..., 1.0020e-03,
          1.3534e-04, 1.5065e-03],
         [7.0432e-05, 5.1752e-04, 1.2728e-03,  ..., 1.0020e-03,
          1.3534e-04, 1.5065e-03],
         [7.0432e-05, 5.1752e-04, 1.5221e-03,  ..., 1.0020e-03,
          9.9959e-01, 9.9548e-01],
         [7.0432e-05, 9.9845e-01, 9.9536e-01,  ..., 9.9699e-01,
          1.3534e-04, 1.5065e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:59:19,546 [Process: 0] Synchronize training processes
2024-08-18 19:59:19,547 [Process: 0] Evaluating...
2024-08-18 19:59:19,548 [Process: 0] EPOCH 760:
2024-08-18 19:59:19,550 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3306e-02, 5.9511e-05, 2.9120e-05,  ..., 2.7511e-03,
          5.3249e-04, 3.8405e-03],
         [7.6438e-03, 5.9511e-05, 2.9120e-05,  ..., 2.7511e-03,
          5.3249e-04, 2.8859e-03],
         [9.7093e-01, 5.9511e-05, 2.9120e-05,  ..., 9.9175e-01,
          5.3249e-04, 9.9039e-01],
         [8.1158e-03, 9.9982e-01, 9.9991e-01,  ..., 2.7511e-03,
          9.9840e-01, 2.8859e-03]],
        [[2.4211e-03, 4.1968e-04, 3.6960e-05,  ..., 1.7826e-03,
          3.1207e-03, 9.9995e-01],
         [2.4211e-03, 4.1968e-04, 3.6960e-05,  ..., 1.7826e-03,
          3.1207e-03, 1.7804e-05],
         [9.9274e-01, 4.1968e-04, 3.6960e-05,  ..., 9.9465e-01,
          9.9064e-01, 1.7804e-05],
         [2.4211e-03, 9.9874e-01, 9.9989e-01,  ..., 1.7826e-03,
          3.1207e-03, 1.7804e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 760:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9896e-01, 3.1393e-03, 2.7585e-03,  ..., 9.9959e-01,
          9.9786e-01, 8.7933e-04],
         [2.7374e-04, 3.4813e-03, 2.7585e-03,  ..., 1.4097e-04,
          6.7575e-04, 8.7933e-04],
         [4.9391e-04, 3.3466e-03, 3.1965e-03,  ..., 1.3598e-04,
          7.8412e-04, 8.7933e-04],
         [2.7374e-04, 9.9003e-01, 9.9129e-01,  ..., 1.3598e-04,
          6.7575e-04, 9.9736e-01]],
        [[9.9874e-01, 1.8433e-03, 1.7748e-03,  ..., 6.8603e-04,
          9.6948e-05, 2.1469e-04],
         [4.2107e-04, 2.0578e-03, 2.2143e-03,  ..., 6.8603e-04,
          9.6948e-05, 2.1469e-04],
         [4.2107e-04, 1.8433e-03, 1.7748e-03,  ..., 6.9406e-04,
          9.9971e-01, 9.9936e-01],
         [4.2107e-04, 9.9426e-01, 9.9424e-01,  ..., 9.9793e-01,
          9.6948e-05, 2.1469e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1555e-03, 8.6557e-05, 5.6955e-06,  ..., 2.5711e-03,
          1.2818e-04, 1.1016e-03],
         [2.1555e-03, 8.6557e-05, 5.6955e-06,  ..., 2.5711e-03,
          1.2818e-04, 1.1016e-03],
         [9.9353e-01, 8.6557e-05, 5.6955e-06,  ..., 9.9229e-01,
          1.2818e-04, 9.9670e-01],
         [2.1555e-03, 9.9974e-01, 9.9998e-01,  ..., 2.5711e-03,
          9.9962e-01, 1.1016e-03]],
        [[1.6027e-03, 2.7280e-04, 2.3283e-04,  ..., 4.0771e-03,
          1.3362e-03, 9.9998e-01],
         [1.6027e-03, 2.7280e-04, 2.3283e-04,  ..., 4.0771e-03,
          1.3362e-03, 7.7908e-06],
         [9.9519e-01, 2.7280e-04, 2.3283e-04,  ..., 9.8756e-01,
          9.9599e-01, 7.7908e-06],
         [1.6027e-03, 9.9918e-01, 9.9930e-01,  ..., 4.2870e-03,
          1.3362e-03, 7.7908e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 761:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:20,699 [Process: 0] Synchronize training processes
2024-08-18 19:59:20,699 [Process: 0] Evaluating...
2024-08-18 19:59:20,701 [Process: 0] EPOCH 761:
2024-08-18 19:59:20,703 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:21,847 [Process: 0] Synchronize training processes
2024-08-18 19:59:21,848 [Process: 0] Evaluating...
2024-08-18 19:59:21,854 [Process: 0] EPOCH 762:
2024-08-18 19:59:21,856 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8619e-01, 1.3207e-03, 3.1681e-03,  ..., 9.9937e-01,
          9.9833e-01, 1.2481e-03],
         [5.3388e-03, 1.3207e-03, 2.0446e-03,  ..., 2.1049e-04,
          4.4477e-04, 1.1844e-03],
         [5.1248e-03, 1.3470e-03, 2.7535e-03,  ..., 2.1049e-04,
          7.7671e-04, 1.1844e-03],
         [3.3514e-03, 9.9601e-01, 9.9203e-01,  ..., 2.1172e-04,
          4.4477e-04, 9.9638e-01]],
        [[9.9855e-01, 1.5106e-03, 1.2278e-03,  ..., 1.1906e-03,
          7.4246e-04, 4.4575e-05],
         [4.4715e-04, 1.5106e-03, 1.2278e-03,  ..., 1.1906e-03,
          7.4246e-04, 4.4575e-05],
         [5.5931e-04, 2.1617e-03, 1.2278e-03,  ..., 1.2979e-03,
          9.9777e-01, 9.9987e-01],
         [4.4715e-04, 9.9482e-01, 9.9632e-01,  ..., 9.9632e-01,
          7.4246e-04, 4.4575e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7472e-03, 4.0953e-04, 6.3583e-04,  ..., 5.0769e-03,
          2.2972e-05, 5.1019e-04],
         [4.7472e-03, 4.0953e-04, 6.3583e-04,  ..., 5.0769e-03,
          2.2193e-05, 5.1019e-04],
         [9.8576e-01, 4.0953e-04, 6.3583e-04,  ..., 9.8411e-01,
          2.2193e-05, 9.9847e-01],
         [4.7472e-03, 9.9877e-01, 9.9809e-01,  ..., 5.7407e-03,
          9.9993e-01, 5.1019e-04]],
        [[9.9368e-04, 3.6319e-04, 1.9842e-05,  ..., 3.1523e-03,
          2.7212e-03, 9.9990e-01],
         [9.9368e-04, 3.6319e-04, 1.9842e-05,  ..., 3.1523e-03,
          2.7212e-03, 3.1348e-05],
         [9.9702e-01, 3.6319e-04, 1.9842e-05,  ..., 9.9054e-01,
          9.9151e-01, 3.1348e-05],
         [9.9368e-04, 9.9891e-01, 9.9994e-01,  ..., 3.1523e-03,
          3.0518e-03, 3.8529e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 762:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9862e-01, 2.5182e-03, 2.0024e-03,  ..., 9.9886e-01,
          9.9773e-01, 2.2409e-03],
         [4.5874e-04, 2.5182e-03, 1.5160e-03,  ..., 3.7946e-04,
          6.2354e-04, 1.8621e-03],
         [4.5874e-04, 2.8786e-03, 1.8508e-03,  ..., 3.7946e-04,
          1.0195e-03, 3.2530e-03],
         [4.5874e-04, 9.9208e-01, 9.9463e-01,  ..., 3.7946e-04,
          6.2354e-04, 9.9264e-01]],
        [[9.9801e-01, 6.3023e-04, 3.3588e-03,  ..., 1.8437e-03,
          5.5900e-05, 7.7238e-04],
         [6.5667e-04, 6.3023e-04, 3.6121e-03,  ..., 1.8437e-03,
          5.5900e-05, 7.7238e-04],
         [6.7223e-04, 6.3023e-04, 4.8523e-03,  ..., 2.0916e-03,
          9.9983e-01, 9.9768e-01],
         [6.5667e-04, 9.9811e-01, 9.8818e-01,  ..., 9.9422e-01,
          5.5900e-05, 7.7238e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8878e-03, 9.6340e-05, 8.1846e-05,  ..., 2.4952e-03,
          5.7374e-04, 1.1425e-03],
         [1.8730e-03, 9.6340e-05, 8.1846e-05,  ..., 2.4952e-03,
          5.7374e-04, 1.1425e-03],
         [9.9437e-01, 9.6340e-05, 8.1846e-05,  ..., 9.9251e-01,
          5.7374e-04, 9.9657e-01],
         [1.8730e-03, 9.9971e-01, 9.9975e-01,  ..., 2.4952e-03,
          9.9828e-01, 1.1425e-03]],
        [[6.4192e-04, 6.9191e-05, 4.6183e-05,  ..., 1.6482e-03,
          2.8733e-03, 9.9927e-01],
         [6.4192e-04, 6.9191e-05, 4.6183e-05,  ..., 1.6482e-03,
          2.8733e-03, 2.0949e-04],
         [9.9807e-01, 6.9191e-05, 4.6183e-05,  ..., 9.9506e-01,
          9.9066e-01, 2.0949e-04],
         [6.4192e-04, 9.9979e-01, 9.9986e-01,  ..., 1.6482e-03,
          3.5917e-03, 3.0764e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 763:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:23,001 [Process: 0] Synchronize training processes
2024-08-18 19:59:23,001 [Process: 0] Evaluating...
2024-08-18 19:59:23,003 [Process: 0] EPOCH 763:
2024-08-18 19:59:23,004 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:24,150 [Process: 0] Synchronize training processes
2024-08-18 19:59:24,150 [Process: 0] Evaluating...
2024-08-18 19:59:24,152 [Process: 0] EPOCH 764:
2024-08-18 19:59:24,153 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9838e-01, 1.4799e-03, 7.3149e-04,  ..., 9.9974e-01,
          9.8783e-01, 8.3640e-04],
         [7.4149e-04, 1.4799e-03, 7.3149e-04,  ..., 8.5551e-05,
          2.9521e-03, 8.3640e-04],
         [4.4109e-04, 1.4799e-03, 7.3149e-04,  ..., 8.5551e-05,
          5.9377e-03, 8.3640e-04],
         [4.4109e-04, 9.9556e-01, 9.9781e-01,  ..., 8.5551e-05,
          3.2810e-03, 9.9749e-01]],
        [[9.9870e-01, 2.7254e-03, 2.1560e-03,  ..., 3.1889e-04,
          3.3166e-04, 3.3351e-04],
         [4.3410e-04, 2.7254e-03, 2.1560e-03,  ..., 3.1889e-04,
          3.3166e-04, 3.3351e-04],
         [4.3410e-04, 4.1048e-03, 2.7176e-03,  ..., 3.1889e-04,
          9.9901e-01, 9.9900e-01],
         [4.3410e-04, 9.9044e-01, 9.9297e-01,  ..., 9.9904e-01,
          3.3166e-04, 3.3351e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1952e-03, 6.3289e-05, 3.5765e-04,  ..., 1.1200e-03,
          1.0486e-03, 2.3810e-03],
         [2.1952e-03, 9.2219e-05, 3.5765e-04,  ..., 1.1200e-03,
          4.0387e-04, 2.0822e-03],
         [9.9341e-01, 6.3289e-05, 3.5765e-04,  ..., 9.9664e-01,
          4.0387e-04, 9.9345e-01],
         [2.1952e-03, 9.9978e-01, 9.9893e-01,  ..., 1.1200e-03,
          9.9814e-01, 2.0822e-03]],
        [[1.2953e-03, 6.3546e-05, 4.1674e-05,  ..., 4.0476e-03,
          2.6323e-03, 9.9961e-01],
         [1.2953e-03, 6.3546e-05, 4.1674e-05,  ..., 4.0476e-03,
          2.6323e-03, 1.2748e-04],
         [9.9611e-01, 6.3546e-05, 4.1674e-05,  ..., 9.8774e-01,
          9.9210e-01, 1.2748e-04],
         [1.2953e-03, 9.9981e-01, 9.9987e-01,  ..., 4.1672e-03,
          2.6323e-03, 1.3080e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 764:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9262e-01, 4.3723e-03, 9.8333e-04,  ..., 9.9076e-01,
          9.9670e-01, 3.3686e-03],
         [1.5690e-03, 3.6011e-03, 9.3634e-04,  ..., 2.4627e-03,
          9.5977e-04, 3.3686e-03],
         [4.2418e-03, 5.2027e-03, 1.0649e-03,  ..., 4.1427e-03,
          1.3797e-03, 5.2179e-03],
         [1.5690e-03, 9.8682e-01, 9.9702e-01,  ..., 2.6337e-03,
          9.5977e-04, 9.8804e-01]],
        [[9.9910e-01, 7.3999e-04, 8.0971e-04,  ..., 1.9079e-03,
          1.8463e-03, 1.9250e-04],
         [2.9903e-04, 7.3999e-04, 8.0971e-04,  ..., 1.9079e-03,
          1.8463e-03, 1.9250e-04],
         [2.9903e-04, 7.3999e-04, 8.0971e-04,  ..., 2.1395e-03,
          9.9446e-01, 9.9942e-01],
         [2.9903e-04, 9.9778e-01, 9.9757e-01,  ..., 9.9404e-01,
          1.8463e-03, 1.9250e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:59:25,300 [Process: 0] Synchronize training processes
2024-08-18 19:59:25,300 [Process: 0] Evaluating...
2024-08-18 19:59:25,302 [Process: 0] EPOCH 765:
2024-08-18 19:59:25,304 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:26,449 [Process: 0] Synchronize training processes
2024-08-18 19:59:26,449 [Process: 0] Evaluating...
2024-08-18 19:59:26,451 [Process: 0] EPOCH 766:
2024-08-18 19:59:26,453 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1775e-03, 6.9623e-05, 7.0913e-05,  ..., 2.7115e-03,
          5.3639e-05, 1.5293e-03],
         [2.1775e-03, 6.9623e-05, 7.0913e-05,  ..., 2.7115e-03,
          5.3639e-05, 1.5293e-03],
         [9.9347e-01, 6.9623e-05, 7.0913e-05,  ..., 9.9187e-01,
          5.3639e-05, 9.9541e-01],
         [2.1775e-03, 9.9979e-01, 9.9979e-01,  ..., 2.7115e-03,
          9.9984e-01, 1.5293e-03]],
        [[1.0383e-03, 5.2262e-04, 1.0155e-05,  ..., 1.0928e-03,
          2.1964e-03, 9.9983e-01],
         [1.0383e-03, 5.2262e-04, 1.0155e-05,  ..., 1.0928e-03,
          2.1964e-03, 4.9750e-05],
         [9.9689e-01, 5.2262e-04, 1.0155e-05,  ..., 9.9672e-01,
          9.9341e-01, 4.9750e-05],
         [1.0383e-03, 9.9843e-01, 9.9997e-01,  ..., 1.0928e-03,
          2.1964e-03, 6.9198e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 765:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9628e-01, 1.0753e-03, 1.7590e-03,  ..., 9.9834e-01,
          9.9576e-01, 8.4757e-04],
         [8.7195e-04, 1.0753e-03, 1.7590e-03,  ..., 4.8456e-04,
          1.0697e-03, 8.4757e-04],
         [1.9711e-03, 1.0753e-03, 2.7802e-03,  ..., 6.9554e-04,
          2.1029e-03, 8.4757e-04],
         [8.7195e-04, 9.9677e-01, 9.9370e-01,  ..., 4.8456e-04,
          1.0697e-03, 9.9746e-01]],
        [[9.9468e-01, 1.4380e-03, 2.9902e-03,  ..., 1.1183e-03,
          3.2020e-04, 6.1130e-04],
         [1.3705e-03, 1.5194e-03, 3.2573e-03,  ..., 1.0609e-03,
          3.2020e-04, 6.1130e-04],
         [2.5777e-03, 1.4380e-03, 4.2777e-03,  ..., 1.0609e-03,
          9.9904e-01, 9.9817e-01],
         [1.3705e-03, 9.9560e-01, 9.8947e-01,  ..., 9.9676e-01,
          3.2020e-04, 6.1130e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7647e-03, 2.5161e-05, 3.9239e-05,  ..., 3.0033e-03,
          7.3418e-05, 2.6486e-03],
         [1.7647e-03, 2.5161e-05, 3.9239e-05,  ..., 3.0033e-03,
          7.3418e-05, 2.6486e-03],
         [9.9471e-01, 2.5161e-05, 3.9239e-05,  ..., 9.9099e-01,
          7.3418e-05, 9.9205e-01],
         [1.7647e-03, 9.9992e-01, 9.9988e-01,  ..., 3.0033e-03,
          9.9978e-01, 2.6486e-03]],
        [[6.6423e-04, 7.3795e-04, 8.7014e-04,  ..., 5.4144e-03,
          3.6940e-03, 9.9868e-01],
         [6.6423e-04, 7.3795e-04, 8.7014e-04,  ..., 5.4144e-03,
          3.6940e-03, 4.0688e-04],
         [9.9801e-01, 7.3795e-04, 8.7014e-04,  ..., 9.8270e-01,
          9.8824e-01, 4.0688e-04],
         [6.6423e-04, 9.9779e-01, 9.9739e-01,  ..., 6.4698e-03,
          4.3750e-03, 5.0160e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 766:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9176e-01, 1.6048e-03, 1.8424e-03,  ..., 9.9793e-01,
          9.4328e-01, 4.9112e-04],
         [1.5354e-03, 1.1961e-03, 1.6659e-03,  ..., 5.0486e-04,
          8.6246e-03, 4.9112e-04],
         [5.1647e-03, 1.5871e-03, 1.6659e-03,  ..., 1.0560e-03,
          2.9159e-02, 4.9112e-04],
         [1.5354e-03, 9.9561e-01, 9.9483e-01,  ..., 5.0486e-04,
          1.8933e-02, 9.9853e-01]],
        [[9.9867e-01, 7.5938e-04, 2.1189e-03,  ..., 8.0789e-03,
          1.5851e-04, 3.1733e-04],
         [4.2934e-04, 7.5938e-04, 1.0463e-03,  ..., 4.0521e-03,
          1.5851e-04, 3.1733e-04],
         [4.7495e-04, 7.5938e-04, 1.0586e-03,  ..., 8.1020e-03,
          9.9952e-01, 9.9905e-01],
         [4.2934e-04, 9.9772e-01, 9.9578e-01,  ..., 9.7977e-01,
          1.5851e-04, 3.1733e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:59:27,597 [Process: 0] Synchronize training processes
2024-08-18 19:59:27,597 [Process: 0] Evaluating...
2024-08-18 19:59:27,599 [Process: 0] EPOCH 767:
2024-08-18 19:59:27,601 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.3687e-04, 1.0913e-04, 1.2870e-03,  ..., 1.5281e-03,
          1.8142e-05, 4.4179e-04],
         [5.3687e-04, 1.0913e-04, 1.2870e-03,  ..., 1.5281e-03,
          1.8142e-05, 4.4179e-04],
         [9.9839e-01, 1.0913e-04, 1.2870e-03,  ..., 9.9542e-01,
          1.8142e-05, 9.9867e-01],
         [5.3687e-04, 9.9967e-01, 9.9614e-01,  ..., 1.5281e-03,
          9.9995e-01, 4.4179e-04]],
        [[2.3345e-03, 4.9264e-05, 3.2121e-04,  ..., 3.1442e-03,
          5.5479e-03, 9.8981e-01],
         [2.3345e-03, 4.9264e-05, 3.2121e-04,  ..., 3.1442e-03,
          5.5479e-03, 2.3313e-03],
         [9.9300e-01, 4.9264e-05, 3.2121e-04,  ..., 9.9057e-01,
          9.8059e-01, 2.3313e-03],
         [2.3345e-03, 9.9985e-01, 9.9904e-01,  ..., 3.1442e-03,
          8.3139e-03, 5.5276e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 767:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9828e-01, 2.4229e-03, 1.1950e-03,  ..., 9.9968e-01,
          9.8757e-01, 4.2315e-04],
         [4.2722e-04, 1.7432e-03, 1.3600e-03,  ..., 8.8707e-05,
          2.8279e-03, 4.2315e-04],
         [8.6079e-04, 2.3688e-03, 1.2508e-03,  ..., 1.4598e-04,
          3.5462e-03, 4.2315e-04],
         [4.2722e-04, 9.9347e-01, 9.9619e-01,  ..., 8.8707e-05,
          6.0515e-03, 9.9873e-01]],
        [[9.9984e-01, 2.5875e-03, 4.0083e-04,  ..., 4.7860e-04,
          1.4746e-04, 1.2993e-04],
         [5.1828e-05, 2.5875e-03, 4.0083e-04,  ..., 4.7860e-04,
          1.4746e-04, 1.2993e-04],
         [5.1828e-05, 3.1339e-03, 4.0083e-04,  ..., 4.7860e-04,
          9.9956e-01, 9.9961e-01],
         [5.1828e-05, 9.9169e-01, 9.9880e-01,  ..., 9.9856e-01,
          1.4746e-04, 1.2993e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4172e-03, 1.7577e-04, 1.9215e-04,  ..., 1.8608e-03,
          1.4848e-05, 2.5077e-03],
         [2.4172e-03, 1.7577e-04, 2.4203e-04,  ..., 1.8608e-03,
          1.4848e-05, 2.5077e-03],
         [9.9269e-01, 1.7577e-04, 1.9215e-04,  ..., 9.9442e-01,
          1.4848e-05, 9.9248e-01],
         [2.4739e-03, 9.9947e-01, 9.9937e-01,  ..., 1.8608e-03,
          9.9996e-01, 2.5077e-03]],
        [[1.3451e-03, 1.4391e-04, 8.6904e-05,  ..., 2.7224e-03,
          2.5956e-03, 9.9993e-01],
         [1.3451e-03, 1.4391e-04, 8.6904e-05,  ..., 2.7224e-03,
          2.5956e-03, 2.2603e-05],
         [9.9596e-01, 1.4391e-04, 8.6904e-05,  ..., 9.9183e-01,
          9.9221e-01, 2.2603e-05],
         [1.3451e-03, 9.9957e-01, 9.9974e-01,  ..., 2.7224e-03,
          2.5956e-03, 2.2603e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 768:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:28,772 [Process: 0] Synchronize training processes
2024-08-18 19:59:28,772 [Process: 0] Evaluating...
2024-08-18 19:59:28,774 [Process: 0] EPOCH 768:
2024-08-18 19:59:28,775 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:29,920 [Process: 0] Synchronize training processes
2024-08-18 19:59:29,920 [Process: 0] Evaluating...
2024-08-18 19:59:29,922 [Process: 0] EPOCH 769:
2024-08-18 19:59:29,924 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9864e-01, 5.1833e-04, 2.7899e-03,  ..., 9.9965e-01,
          9.8533e-01, 7.9515e-04],
         [4.0752e-04, 5.1833e-04, 1.6557e-03,  ..., 1.1660e-04,
          3.0081e-03, 7.9515e-04],
         [5.4498e-04, 5.1833e-04, 1.8713e-03,  ..., 1.1660e-04,
          5.9312e-03, 7.9515e-04],
         [4.0752e-04, 9.9845e-01, 9.9368e-01,  ..., 1.1660e-04,
          5.7292e-03, 9.9761e-01]],
        [[9.9958e-01, 1.8987e-03, 1.2939e-03,  ..., 4.8203e-04,
          1.1147e-04, 1.9054e-04],
         [1.4130e-04, 1.8987e-03, 1.2246e-03,  ..., 4.8203e-04,
          1.1147e-04, 1.9054e-04],
         [1.4130e-04, 2.5089e-03, 1.2246e-03,  ..., 4.8203e-04,
          9.9967e-01, 9.9943e-01],
         [1.4130e-04, 9.9369e-01, 9.9626e-01,  ..., 9.9855e-01,
          1.1147e-04, 1.9054e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4168e-03, 1.7187e-04, 5.9415e-05,  ..., 1.0139e-03,
          1.0284e-02, 2.3065e-03],
         [4.4168e-03, 2.3029e-04, 5.9415e-05,  ..., 1.0139e-03,
          7.6856e-03, 2.3065e-03],
         [9.8622e-01, 1.7187e-04, 5.9415e-05,  ..., 9.9696e-01,
          1.9548e-02, 9.9308e-01],
         [4.9439e-03, 9.9943e-01, 9.9982e-01,  ..., 1.0139e-03,
          9.6248e-01, 2.3065e-03]],
        [[5.7323e-04, 8.1903e-05, 3.2201e-04,  ..., 3.1511e-03,
          4.0227e-03, 9.9997e-01],
         [5.7323e-04, 8.1903e-05, 3.2201e-04,  ..., 3.1511e-03,
          4.0227e-03, 1.1437e-05],
         [9.9828e-01, 8.1903e-05, 3.2201e-04,  ..., 9.9055e-01,
          9.8772e-01, 1.1437e-05],
         [5.7323e-04, 9.9975e-01, 9.9903e-01,  ..., 3.1511e-03,
          4.2356e-03, 1.1437e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 769:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9400e-01, 1.8429e-03, 1.0639e-03,  ..., 9.9774e-01,
          9.9206e-01, 5.4971e-04],
         [1.0333e-03, 1.8429e-03, 1.0639e-03,  ..., 6.6727e-04,
          1.5547e-03, 5.4971e-04],
         [3.9308e-03, 1.8429e-03, 1.0639e-03,  ..., 9.2097e-04,
          4.8342e-03, 5.4971e-04],
         [1.0333e-03, 9.9447e-01, 9.9681e-01,  ..., 6.6727e-04,
          1.5547e-03, 9.9835e-01]],
        [[9.9890e-01, 2.6554e-03, 1.6705e-03,  ..., 9.0354e-04,
          2.9339e-04, 3.4762e-04],
         [3.6809e-04, 2.6554e-03, 1.6705e-03,  ..., 9.0354e-04,
          2.9339e-04, 3.4762e-04],
         [3.6809e-04, 4.0958e-03, 2.0730e-03,  ..., 9.0354e-04,
          9.9912e-01, 9.9896e-01],
         [3.6809e-04, 9.9059e-01, 9.9459e-01,  ..., 9.9729e-01,
          2.9339e-04, 3.4762e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2312e-03, 3.8711e-04, 2.4575e-05,  ..., 1.8203e-03,
          4.4329e-05, 1.7260e-03],
         [2.2312e-03, 3.8711e-04, 2.4575e-05,  ..., 1.8203e-03,
          4.4329e-05, 1.7260e-03],
         [9.9331e-01, 3.8711e-04, 2.4575e-05,  ..., 9.9454e-01,
          4.4329e-05, 9.9482e-01],
         [2.2312e-03, 9.9884e-01, 9.9993e-01,  ..., 1.8203e-03,
          9.9987e-01, 1.7260e-03]],
        [[1.3510e-03, 2.7319e-04, 3.2046e-05,  ..., 8.8857e-03,
          3.1207e-03, 9.9982e-01],
         [1.3510e-03, 2.7319e-04, 3.2046e-05,  ..., 6.8147e-03,
          3.1207e-03, 5.4077e-05],
         [9.9595e-01, 2.7319e-04, 3.2046e-05,  ..., 9.7673e-01,
          9.9064e-01, 5.4077e-05],
         [1.3510e-03, 9.9918e-01, 9.9990e-01,  ..., 7.5726e-03,
          3.1207e-03, 7.1207e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 770:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:31,066 [Process: 0] Synchronize training processes
2024-08-18 19:59:31,066 [Process: 0] Evaluating...
2024-08-18 19:59:31,068 [Process: 0] EPOCH 770:
2024-08-18 19:59:31,070 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:59:32,215 [Process: 0] Synchronize training processes
2024-08-18 19:59:32,216 [Process: 0] Evaluating...
2024-08-18 19:59:32,218 [Process: 0] EPOCH 771:
2024-08-18 19:59:32,219 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9810e-01, 1.2139e-03, 1.2644e-03,  ..., 9.9940e-01,
          9.9432e-01, 8.6157e-04],
         [4.6772e-04, 1.2139e-03, 1.2644e-03,  ..., 1.8223e-04,
          1.5080e-03, 8.6157e-04],
         [9.9525e-04, 1.2139e-03, 1.2644e-03,  ..., 2.3465e-04,
          1.5080e-03, 8.9898e-04],
         [4.3799e-04, 9.9636e-01, 9.9621e-01,  ..., 1.8223e-04,
          2.6661e-03, 9.9738e-01]],
        [[9.9232e-01, 4.8430e-04, 1.3142e-03,  ..., 1.9826e-03,
          8.7899e-05, 9.5815e-04],
         [2.1316e-03, 4.8430e-04, 1.3142e-03,  ..., 1.5036e-03,
          8.7899e-05, 9.5815e-04],
         [2.1316e-03, 4.8430e-04, 1.3142e-03,  ..., 2.7439e-03,
          9.9974e-01, 9.9713e-01],
         [3.4194e-03, 9.9855e-01, 9.9606e-01,  ..., 9.9377e-01,
          8.7899e-05, 9.5815e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2588e-04, 7.8624e-04, 1.2276e-04,  ..., 1.1978e-03,
          1.1393e-04, 2.1241e-03],
         [3.2588e-04, 7.8624e-04, 1.2276e-04,  ..., 1.1978e-03,
          1.1393e-04, 2.1241e-03],
         [9.9902e-01, 7.8624e-04, 1.2276e-04,  ..., 9.9641e-01,
          1.1393e-04, 9.9363e-01],
         [3.2588e-04, 9.9764e-01, 9.9963e-01,  ..., 1.1978e-03,
          9.9966e-01, 2.1241e-03]],
        [[3.4141e-03, 8.7537e-04, 1.1450e-04,  ..., 4.5347e-03,
          1.6470e-03, 9.9987e-01],
         [3.4141e-03, 8.7537e-04, 1.1450e-04,  ..., 4.5347e-03,
          1.6470e-03, 3.6490e-05],
         [9.8976e-01, 8.7537e-04, 1.1450e-04,  ..., 9.8572e-01,
          9.9506e-01, 3.6490e-05],
         [3.4141e-03, 9.9737e-01, 9.9966e-01,  ..., 5.2147e-03,
          1.6470e-03, 5.5631e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 771:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9950e-01, 6.4524e-04, 1.7560e-03,  ..., 9.9788e-01,
          9.9932e-01, 3.4039e-04],
         [2.1071e-04, 6.4524e-04, 1.2071e-03,  ..., 4.7946e-04,
          2.2782e-04, 3.4039e-04],
         [1.4535e-04, 6.4524e-04, 1.7315e-03,  ..., 1.1628e-03,
          2.2782e-04, 3.4039e-04],
         [1.4535e-04, 9.9806e-01, 9.9531e-01,  ..., 4.7946e-04,
          2.2782e-04, 9.9898e-01]],
        [[9.9937e-01, 1.6656e-03, 6.2421e-04,  ..., 4.1571e-03,
          1.7556e-04, 2.9262e-04],
         [1.9639e-04, 1.6656e-03, 6.2421e-04,  ..., 4.1571e-03,
          1.7556e-04, 2.9262e-04],
         [2.3515e-04, 2.0946e-03, 6.2421e-04,  ..., 6.7208e-03,
          9.9947e-01, 9.9912e-01],
         [1.9639e-04, 9.9457e-01, 9.9813e-01,  ..., 9.8496e-01,
          1.7556e-04, 2.9262e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:59:33,363 [Process: 0] Synchronize training processes
2024-08-18 19:59:33,363 [Process: 0] Evaluating...
2024-08-18 19:59:33,370 [Process: 0] EPOCH 772:
2024-08-18 19:59:33,371 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 179, in train_one_epoch
    for i, batch in enumerate(self.train_loader):
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in __getitem__
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in <listcomp>
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 55, in is_yellow
    return (color[0] > 1 - tolerance and color[1] > 1 - tolerance and color[2] < tolerance)
KeyboardInterrupt
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7286e-03, 2.0819e-04, 2.1594e-04,  ..., 1.4321e-03,
          6.9095e-05, 1.1303e-03],
         [1.7286e-03, 2.0819e-04, 2.1594e-04,  ..., 1.4321e-03,
          6.9095e-05, 1.1303e-03],
         [9.9481e-01, 2.0819e-04, 2.1594e-04,  ..., 9.9570e-01,
          6.9095e-05, 9.9661e-01],
         [1.7286e-03, 9.9938e-01, 9.9935e-01,  ..., 1.4321e-03,
          9.9979e-01, 1.1303e-03]],
        [[6.4363e-04, 8.7477e-04, 1.4627e-04,  ..., 7.8835e-03,
          7.2215e-04, 9.9949e-01],
         [6.4363e-04, 8.7477e-04, 1.4627e-04,  ..., 6.5212e-03,
          7.2215e-04, 1.6858e-04],
         [9.9807e-01, 8.7477e-04, 1.4627e-04,  ..., 9.7797e-01,
          9.9783e-01, 1.6858e-04],
         [6.4363e-04, 9.9738e-01, 9.9956e-01,  ..., 7.6289e-03,
          7.2215e-04, 1.6858e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 772:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True