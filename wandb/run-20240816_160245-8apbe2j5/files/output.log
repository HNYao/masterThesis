2024-08-16 16:02:49,940 [Worker 0] Is distributed: False
2024-08-16 16:02:49,940 [Process: 0] Starting training
2024-08-16 16:02:49,940 [Process: 0] EPOCH 1:
2024-08-16 16:02:49,943 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.3799e-01, 1.1446e-01, 2.5000e-01,  ..., 4.3354e-01,
          2.0620e-01, 4.5928e-01],
         [2.3799e-01, 1.1446e-01, 2.5000e-01,  ..., 3.0070e-01,
          2.0620e-01, 1.8024e-01],
         [2.8603e-01, 6.5663e-01, 2.5000e-01,  ..., 1.3288e-01,
          3.8139e-01, 1.8024e-01],
         [2.3799e-01, 1.1446e-01, 2.5000e-01,  ..., 1.3288e-01,
          2.0620e-01, 1.8024e-01]],
        [[1.6186e-01, 4.9629e-01, 1.0041e-05,  ..., 2.4907e-01,
          3.8768e-01, 2.1944e-01],
         [1.5479e-01, 1.4618e-01, 3.8744e-04,  ..., 4.6661e-01,
          3.1204e-01, 3.4169e-01],
         [5.2856e-01, 2.2366e-01, 9.9488e-01,  ..., 1.1604e-01,
          1.5014e-01, 2.1944e-01],
         [1.5479e-01, 1.3387e-01, 4.7246e-03,  ..., 1.6828e-01,
          1.5014e-01, 2.1944e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:02:52,501 [Process: 0] Synchronize training processes
2024-08-16 16:02:52,501 [Process: 0] Evaluating...
2024-08-16 16:02:52,509 [Process: 0] EPOCH 2:
2024-08-16 16:02:52,511 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.0740e-04, 2.4399e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.7247e-01, 2.6357e-01],
         [7.0740e-04, 2.4399e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.6195e-01, 2.4472e-01],
         [9.9788e-01, 2.4399e-01, 2.5000e-01,  ..., 2.5000e-01,
          1.8905e-01, 2.0772e-01],
         [7.0740e-04, 2.6802e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.7653e-01, 2.8400e-01]],
        [[1.3078e-01, 2.5878e-01, 1.9645e-01,  ..., 2.7516e-01,
          3.1338e-01, 2.6207e-01],
         [1.3078e-01, 2.4718e-01, 1.9645e-01,  ..., 2.5371e-01,
          2.3409e-01, 2.6891e-01],
         [6.0766e-01, 2.2208e-01, 4.1066e-01,  ..., 2.1362e-01,
          1.6569e-01, 1.9657e-01],
         [1.3078e-01, 2.7195e-01, 1.9645e-01,  ..., 2.5751e-01,
          2.8684e-01, 2.7245e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2876, 0.2337, 0.2367,  ..., 0.3057, 0.2500, 0.2977],
         [0.3578, 0.2142, 0.2308,  ..., 0.3111, 0.2500, 0.3343],
         [0.1749, 0.2375, 0.2151,  ..., 0.1916, 0.2500, 0.1840],
         [0.1797, 0.3146, 0.3174,  ..., 0.1916, 0.2500, 0.1840]],
        [[0.2701, 0.2375, 0.2399,  ..., 0.2268, 0.2382, 0.2750],
         [0.3099, 0.2615, 0.2291,  ..., 0.2299, 0.2402, 0.3067],
         [0.2100, 0.2246, 0.2174,  ..., 0.1992, 0.2085, 0.2168],
         [0.2100, 0.2764, 0.3135,  ..., 0.3441, 0.3131, 0.2016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:02:54,417 [Process: 0] Synchronize training processes
2024-08-16 16:02:54,417 [Process: 0] Evaluating...
2024-08-16 16:02:54,419 [Process: 0] EPOCH 3:
2024-08-16 16:02:54,421 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3543, 0.2270, 0.2351,  ..., 0.3240, 0.2354, 0.2797],
         [0.3824, 0.2253, 0.2273,  ..., 0.3922, 0.2594, 0.2913],
         [0.1317, 0.2253, 0.2170,  ..., 0.1419, 0.2206, 0.2145],
         [0.1317, 0.3223, 0.3206,  ..., 0.1419, 0.2846, 0.2145]],
        [[0.1302, 0.2570, 0.2603,  ..., 0.2132, 0.2209, 0.2302],
         [0.1302, 0.2523, 0.2498,  ..., 0.2132, 0.2166, 0.2194],
         [0.6093, 0.2459, 0.2379,  ..., 0.2132, 0.2172, 0.2077],
         [0.1302, 0.2447, 0.2520,  ..., 0.3603, 0.3454, 0.3428]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2180, 0.1954, 0.2136,  ..., 0.3281, 0.2162, 0.2228],
         [0.2264, 0.2026, 0.2282,  ..., 0.2776, 0.2299, 0.2449],
         [0.2079, 0.1856, 0.2036,  ..., 0.1971, 0.2165, 0.2046],
         [0.3477, 0.4163, 0.3546,  ..., 0.1971, 0.3374, 0.3276]],
        [[0.2531, 0.2207, 0.2117,  ..., 0.2587, 0.2089, 0.2922],
         [0.2490, 0.2322, 0.2240,  ..., 0.2660, 0.2144, 0.2514],
         [0.2490, 0.2150, 0.2128,  ..., 0.2328, 0.1935, 0.2282],
         [0.2490, 0.3321, 0.3515,  ..., 0.2425, 0.3832, 0.2282]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:02:56,331 [Process: 0] Synchronize training processes
2024-08-16 16:02:56,332 [Process: 0] Evaluating...
2024-08-16 16:02:56,334 [Process: 0] EPOCH 4:
2024-08-16 16:02:56,335 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1548, 0.2793, 0.3269,  ..., 0.2193, 0.2923, 0.2416],
         [0.1548, 0.2435, 0.2481,  ..., 0.2360, 0.2614, 0.2085],
         [0.5356, 0.2386, 0.2125,  ..., 0.2157, 0.2232, 0.3621],
         [0.1548, 0.2386, 0.2125,  ..., 0.3290, 0.2232, 0.1877]],
        [[0.3187, 0.2142, 0.2177,  ..., 0.2500, 0.1799, 0.2067],
         [0.2682, 0.2307, 0.2353,  ..., 0.2500, 0.1894, 0.2313],
         [0.2065, 0.2375, 0.2177,  ..., 0.2500, 0.2080, 0.2239],
         [0.2065, 0.3177, 0.3294,  ..., 0.2500, 0.4227, 0.3381]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1794, 0.1608, 0.1713,  ..., 0.2833, 0.2362, 0.2494],
         [0.1794, 0.1666, 0.1713,  ..., 0.2654, 0.2551, 0.2685],
         [0.1794, 0.1608, 0.1713,  ..., 0.2256, 0.2362, 0.2411],
         [0.4617, 0.5119, 0.4862,  ..., 0.2256, 0.2725, 0.2411]],
        [[0.2747, 0.1204, 0.1828,  ..., 0.3055, 0.2820, 0.2895],
         [0.2585, 0.1338, 0.1859,  ..., 0.2707, 0.2652, 0.2554],
         [0.2334, 0.6482, 0.1828,  ..., 0.2119, 0.2313, 0.2630],
         [0.2334, 0.0976, 0.4485,  ..., 0.2119, 0.2215, 0.1921]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:02:58,264 [Process: 0] Synchronize training processes
2024-08-16 16:02:58,265 [Process: 0] Evaluating...
2024-08-16 16:02:58,267 [Process: 0] EPOCH 5:
2024-08-16 16:02:58,269 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2578, 0.2307, 0.2571,  ..., 0.2487, 0.2470, 0.2306],
         [0.2632, 0.2307, 0.2530,  ..., 0.2573, 0.2591, 0.2247],
         [0.2395, 0.3080, 0.2489,  ..., 0.2325, 0.2470, 0.2028],
         [0.2395, 0.2307, 0.2409,  ..., 0.2615, 0.2470, 0.3418]],
        [[0.2500, 0.2011, 0.1679,  ..., 0.1844, 0.1715, 0.0898],
         [0.2500, 0.1920, 0.1675,  ..., 0.1844, 0.1727, 0.0897],
         [0.2500, 0.4420, 0.1521,  ..., 0.4468, 0.1715, 0.0897],
         [0.2500, 0.1649, 0.5126,  ..., 0.1844, 0.4844, 0.7308]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1738, 0.2485, 0.1919,  ..., 0.2500, 0.2402, 0.2500],
         [0.1738, 0.2485, 0.1863,  ..., 0.2500, 0.2402, 0.2500],
         [0.1738, 0.2545, 0.1745,  ..., 0.2500, 0.2795, 0.2500],
         [0.4785, 0.2485, 0.4472,  ..., 0.2500, 0.2402, 0.2500]],
        [[0.2461, 0.2050, 0.1614,  ..., 0.2490, 0.1786, 0.2110],
         [0.2461, 0.2050, 0.1536,  ..., 0.2536, 0.1786, 0.2062],
         [0.2616, 0.2050, 0.1406,  ..., 0.2715, 0.1786, 0.1920],
         [0.2461, 0.3850, 0.5443,  ..., 0.2259, 0.4641, 0.3907]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:00,268 [Process: 0] Synchronize training processes
2024-08-16 16:03:00,268 [Process: 0] Evaluating...
2024-08-16 16:03:00,270 [Process: 0] EPOCH 6:
2024-08-16 16:03:00,272 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1419, 0.1905, 0.1526,  ..., 0.1842, 0.2104, 0.1965],
         [0.1290, 0.1794, 0.1526,  ..., 0.1842, 0.2148, 0.1918],
         [0.1277, 0.1772, 0.1526,  ..., 0.1842, 0.2013, 0.1918],
         [0.6014, 0.4529, 0.5423,  ..., 0.4475, 0.3735, 0.4199]],
        [[0.1650, 0.2370, 0.2036,  ..., 0.2298, 0.2522, 0.2470],
         [0.1576, 0.2455, 0.1930,  ..., 0.2449, 0.2493, 0.2452],
         [0.1576, 0.2805, 0.1929,  ..., 0.2956, 0.2493, 0.2450],
         [0.5199, 0.2370, 0.4105,  ..., 0.2298, 0.2493, 0.2628]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1585, 0.1452, 0.1353,  ..., 0.2560, 0.2489, 0.2604],
         [0.1585, 0.1452, 0.1353,  ..., 0.2552, 0.2533, 0.2716],
         [0.1585, 0.1452, 0.1486,  ..., 0.2444, 0.2489, 0.2340],
         [0.5246, 0.5644, 0.5807,  ..., 0.2444, 0.2489, 0.2340]],
        [[0.1735, 0.1677, 0.1555,  ..., 0.2418, 0.1984, 0.1726],
         [0.1735, 0.1640, 0.1555,  ..., 0.2582, 0.1984, 0.1726],
         [0.1735, 0.1567, 0.1555,  ..., 0.2582, 0.1984, 0.1726],
         [0.4796, 0.5117, 0.5335,  ..., 0.2418, 0.4048, 0.4822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:02,280 [Process: 0] Synchronize training processes
2024-08-16 16:03:02,281 [Process: 0] Evaluating...
2024-08-16 16:03:02,283 [Process: 0] EPOCH 7:
2024-08-16 16:03:02,285 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1761, 0.1487, 0.1466,  ..., 0.1870, 0.2510, 0.1317],
         [0.1761, 0.1488, 0.1466,  ..., 0.1870, 0.2497, 0.1317],
         [0.1761, 0.1487, 0.1466,  ..., 0.1870, 0.2497, 0.1317],
         [0.4716, 0.5538, 0.5601,  ..., 0.4390, 0.2497, 0.6050]],
        [[0.1297, 0.1584, 0.1960,  ..., 0.2778, 0.2500, 0.1506],
         [0.1332, 0.1584, 0.1960,  ..., 0.2561, 0.2500, 0.1496],
         [0.1227, 0.1584, 0.1960,  ..., 0.2355, 0.2500, 0.1473],
         [0.6144, 0.5248, 0.4120,  ..., 0.2306, 0.2500, 0.5525]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1767, 0.1592, 0.1520,  ..., 0.1708, 0.2500, 0.2500],
         [0.1767, 0.1592, 0.1539,  ..., 0.1740, 0.2500, 0.2500],
         [0.1767, 0.1592, 0.1519,  ..., 0.1680, 0.2500, 0.2500],
         [0.4700, 0.5224, 0.5422,  ..., 0.4872, 0.2500, 0.2500]],
        [[0.1595, 0.1668, 0.1540,  ..., 0.1584, 0.1792, 0.1717],
         [0.1595, 0.1668, 0.1542,  ..., 0.1584, 0.1792, 0.1717],
         [0.1595, 0.1668, 0.1540,  ..., 0.1584, 0.1792, 0.1717],
         [0.5215, 0.4997, 0.5378,  ..., 0.5247, 0.4625, 0.4850]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:04,235 [Process: 0] Synchronize training processes
2024-08-16 16:03:04,236 [Process: 0] Evaluating...
2024-08-16 16:03:04,238 [Process: 0] EPOCH 8:
2024-08-16 16:03:04,240 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2090, 0.1457, 0.1698,  ..., 0.1332, 0.1790, 0.1434],
         [0.2090, 0.1457, 0.1733,  ..., 0.1351, 0.1790, 0.1463],
         [0.2090, 0.1457, 0.1698,  ..., 0.1332, 0.1790, 0.1434],
         [0.3730, 0.5630, 0.4870,  ..., 0.5985, 0.4631, 0.5668]],
        [[0.1492, 0.1921, 0.1638,  ..., 0.2353, 0.2500, 0.1439],
         [0.1527, 0.1921, 0.1646,  ..., 0.2172, 0.2500, 0.1445],
         [0.1492, 0.1921, 0.1638,  ..., 0.3302, 0.2500, 0.1439],
         [0.5489, 0.4236, 0.5078,  ..., 0.2172, 0.2500, 0.5677]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1579, 0.1679, 0.1636,  ..., 0.1572, 0.2500, 0.2500],
         [0.1579, 0.1682, 0.1636,  ..., 0.1572, 0.2500, 0.2500],
         [0.1579, 0.1679, 0.1636,  ..., 0.1572, 0.2500, 0.2500],
         [0.5262, 0.4960, 0.5092,  ..., 0.5283, 0.2500, 0.2500]],
        [[0.1654, 0.1662, 0.1655,  ..., 0.1521, 0.1499, 0.1761],
         [0.1654, 0.1662, 0.1664,  ..., 0.1523, 0.1499, 0.1761],
         [0.1654, 0.1662, 0.1655,  ..., 0.1521, 0.1499, 0.1761],
         [0.5039, 0.5013, 0.5027,  ..., 0.5436, 0.5504, 0.4716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:06,284 [Process: 0] Synchronize training processes
2024-08-16 16:03:06,285 [Process: 0] Evaluating...
2024-08-16 16:03:06,287 [Process: 0] EPOCH 9:
2024-08-16 16:03:06,289 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.8367e-01, 1.5522e-01, 1.7845e-01,  ..., 1.7865e-01,
          2.5000e-01, 1.4558e-01],
         [1.8696e-01, 1.6085e-01, 1.7890e-01,  ..., 1.8026e-01,
          2.5000e-01, 1.5397e-01],
         [1.7948e-01, 1.4936e-01, 1.7539e-01,  ..., 1.6987e-01,
          2.5000e-01, 1.4558e-01],
         [4.4990e-01, 5.3457e-01, 4.6726e-01,  ..., 4.7122e-01,
          2.5000e-01, 5.5486e-01]],
        [[1.9064e-01, 1.5814e-01, 1.3297e-01,  ..., 5.0305e-04,
          1.9655e-01, 1.3585e-01],
         [1.9076e-01, 1.6572e-01, 1.3661e-01,  ..., 5.0305e-04,
          1.9687e-01, 1.3926e-01],
         [1.9064e-01, 1.5644e-01, 1.3297e-01,  ..., 9.9818e-01,
          1.9655e-01, 1.3585e-01],
         [4.2796e-01, 5.1970e-01, 5.9745e-01,  ..., 8.1166e-04,
          4.1003e-01, 5.8903e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1567, 0.1766, 0.1638,  ..., 0.1514, 0.2500, 0.2528],
         [0.1567, 0.1766, 0.1638,  ..., 0.1514, 0.2500, 0.2491],
         [0.1567, 0.1766, 0.1638,  ..., 0.1514, 0.2500, 0.2491],
         [0.5300, 0.4703, 0.5086,  ..., 0.5459, 0.2500, 0.2491]],
        [[0.1394, 0.1682, 0.1821,  ..., 0.1457, 0.1752, 0.1646],
         [0.1394, 0.1682, 0.1821,  ..., 0.1457, 0.1752, 0.1646],
         [0.1394, 0.1682, 0.1821,  ..., 0.1457, 0.1752, 0.1646],
         [0.5817, 0.4953, 0.4538,  ..., 0.5630, 0.4745, 0.5062]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:08,363 [Process: 0] Synchronize training processes
2024-08-16 16:03:08,363 [Process: 0] Evaluating...
2024-08-16 16:03:08,365 [Process: 0] EPOCH 10:
2024-08-16 16:03:08,367 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1985, 0.1969, 0.1645,  ..., 0.2429, 0.1784, 0.1671],
         [0.1985, 0.1969, 0.1645,  ..., 0.2429, 0.1784, 0.1671],
         [0.1985, 0.1969, 0.1645,  ..., 0.2429, 0.1784, 0.1671],
         [0.4045, 0.4092, 0.5065,  ..., 0.2713, 0.4649, 0.4986]],
        [[0.1908, 0.2071, 0.1753,  ..., 0.0210, 0.1680, 0.1717],
         [0.1908, 0.2071, 0.1753,  ..., 0.0210, 0.1680, 0.1717],
         [0.1908, 0.2071, 0.1753,  ..., 0.9370, 0.1680, 0.1717],
         [0.4276, 0.3788, 0.4742,  ..., 0.0210, 0.4960, 0.4848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1577, 0.1616, 0.1517,  ..., 0.1653, 0.2500, 0.2500],
         [0.1577, 0.1616, 0.1517,  ..., 0.1653, 0.2500, 0.2500],
         [0.1577, 0.1616, 0.1517,  ..., 0.1653, 0.2500, 0.2500],
         [0.5268, 0.5152, 0.5449,  ..., 0.5042, 0.2500, 0.2500]],
        [[0.1588, 0.1656, 0.1619,  ..., 0.1500, 0.1739, 0.1421],
         [0.1588, 0.1656, 0.1619,  ..., 0.1500, 0.1739, 0.1421],
         [0.1588, 0.1656, 0.1619,  ..., 0.1500, 0.1739, 0.1421],
         [0.5237, 0.5031, 0.5144,  ..., 0.5499, 0.4783, 0.5737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:10,392 [Process: 0] Synchronize training processes
2024-08-16 16:03:10,392 [Process: 0] Evaluating...
2024-08-16 16:03:10,394 [Process: 0] EPOCH 11:
2024-08-16 16:03:10,396 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1654, 0.1675, 0.1483,  ..., 0.1734, 0.2500, 0.1516],
         [0.1654, 0.1675, 0.1483,  ..., 0.1734, 0.2500, 0.1516],
         [0.1654, 0.1675, 0.1483,  ..., 0.1734, 0.2500, 0.1516],
         [0.5039, 0.4974, 0.5550,  ..., 0.4799, 0.2500, 0.5453]],
        [[0.1535, 0.1836, 0.1524,  ..., 0.0086, 0.1803, 0.1713],
         [0.1535, 0.1836, 0.1524,  ..., 0.0086, 0.1803, 0.1713],
         [0.1535, 0.1836, 0.1524,  ..., 0.9743, 0.1803, 0.1713],
         [0.5394, 0.4491, 0.5427,  ..., 0.0086, 0.4592, 0.4862]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1681, 0.1468, 0.1685,  ..., 0.1691, 0.2500, 0.2500],
         [0.1681, 0.1468, 0.1685,  ..., 0.1691, 0.2500, 0.2500],
         [0.1681, 0.1468, 0.1685,  ..., 0.1691, 0.2500, 0.2500],
         [0.4956, 0.5595, 0.4946,  ..., 0.4928, 0.2500, 0.2500]],
        [[0.1535, 0.1385, 0.1771,  ..., 0.1638, 0.1811, 0.1809],
         [0.1535, 0.1385, 0.1771,  ..., 0.1638, 0.1811, 0.1809],
         [0.1535, 0.1385, 0.1771,  ..., 0.1638, 0.1811, 0.1809],
         [0.5395, 0.5845, 0.4687,  ..., 0.5085, 0.4566, 0.4573]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:12,353 [Process: 0] Synchronize training processes
2024-08-16 16:03:12,353 [Process: 0] Evaluating...
2024-08-16 16:03:12,362 [Process: 0] EPOCH 12:
2024-08-16 16:03:12,364 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1372, 0.1405, 0.1600,  ..., 0.1684, 0.2500, 0.1477],
         [0.1372, 0.1405, 0.1600,  ..., 0.1684, 0.2500, 0.1477],
         [0.1372, 0.1405, 0.1600,  ..., 0.1684, 0.2500, 0.1477],
         [0.5884, 0.5785, 0.5199,  ..., 0.4947, 0.2500, 0.5569]],
        [[0.1365, 0.1464, 0.1444,  ..., 0.0015, 0.1676, 0.1267],
         [0.1365, 0.1464, 0.1444,  ..., 0.0015, 0.1676, 0.1267],
         [0.1365, 0.1464, 0.1444,  ..., 0.9956, 0.1676, 0.1267],
         [0.5906, 0.5609, 0.5669,  ..., 0.0015, 0.4971, 0.6198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1455, 0.1518, 0.1587,  ..., 0.1211, 0.2500, 0.2500],
         [0.1455, 0.1518, 0.1587,  ..., 0.1211, 0.2500, 0.2500],
         [0.1455, 0.1518, 0.1587,  ..., 0.1211, 0.2500, 0.2500],
         [0.5634, 0.5445, 0.5238,  ..., 0.6366, 0.2500, 0.2500]],
        [[0.1517, 0.1515, 0.1639,  ..., 0.2500, 0.1378, 0.1398],
         [0.1517, 0.1515, 0.1639,  ..., 0.2500, 0.1359, 0.1398],
         [0.1517, 0.1515, 0.1639,  ..., 0.2500, 0.1359, 0.1398],
         [0.5450, 0.5454, 0.5084,  ..., 0.2500, 0.5904, 0.5805]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:14,376 [Process: 0] Synchronize training processes
2024-08-16 16:03:14,376 [Process: 0] Evaluating...
2024-08-16 16:03:14,378 [Process: 0] EPOCH 13:
2024-08-16 16:03:14,380 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1993e-01, 1.5989e-01, 1.6069e-01,  ..., 1.5946e-01,
          2.5000e-01, 1.3904e-01],
         [1.1993e-01, 1.5989e-01, 1.6069e-01,  ..., 1.5946e-01,
          2.5000e-01, 1.3904e-01],
         [1.1993e-01, 1.5989e-01, 1.6069e-01,  ..., 1.5946e-01,
          2.5000e-01, 1.3904e-01],
         [6.4020e-01, 5.2032e-01, 5.1794e-01,  ..., 5.2163e-01,
          2.5000e-01, 5.8288e-01]],
        [[1.8731e-01, 1.4639e-01, 1.5065e-01,  ..., 1.5922e-04,
          1.5174e-01, 1.5180e-01],
         [1.8228e-01, 1.4639e-01, 1.5065e-01,  ..., 1.5922e-04,
          1.5174e-01, 1.5180e-01],
         [1.8228e-01, 1.4639e-01, 1.5065e-01,  ..., 9.9952e-01,
          1.5174e-01, 1.5180e-01],
         [4.4812e-01, 5.6084e-01, 5.4805e-01,  ..., 1.5922e-04,
          5.4479e-01, 5.4460e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1372, 0.1583, 0.1496,  ..., 0.1441, 0.2500, 0.2500],
         [0.1372, 0.1583, 0.1496,  ..., 0.1441, 0.2500, 0.2500],
         [0.1372, 0.1583, 0.1496,  ..., 0.1441, 0.2500, 0.2500],
         [0.5884, 0.5251, 0.5513,  ..., 0.5678, 0.2500, 0.2500]],
        [[0.1345, 0.1380, 0.1634,  ..., 0.2500, 0.1892, 0.1314],
         [0.1330, 0.1380, 0.1634,  ..., 0.2500, 0.1863, 0.1313],
         [0.1330, 0.1380, 0.1634,  ..., 0.2500, 0.1863, 0.1313],
         [0.5995, 0.5860, 0.5098,  ..., 0.2500, 0.4382, 0.6060]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:16,369 [Process: 0] Synchronize training processes
2024-08-16 16:03:16,370 [Process: 0] Evaluating...
2024-08-16 16:03:16,372 [Process: 0] EPOCH 14:
2024-08-16 16:03:16,374 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1776, 0.1873, 0.1514,  ..., 0.1574, 0.2500, 0.1444],
         [0.1741, 0.1873, 0.1514,  ..., 0.1574, 0.2500, 0.1444],
         [0.1741, 0.1873, 0.1514,  ..., 0.1574, 0.2500, 0.1444],
         [0.4742, 0.4380, 0.5459,  ..., 0.5279, 0.2500, 0.5667]],
        [[0.1296, 0.1617, 0.1869,  ..., 0.0015, 0.1339, 0.1715],
         [0.1296, 0.1617, 0.1869,  ..., 0.0015, 0.1339, 0.1715],
         [0.1296, 0.1617, 0.1869,  ..., 0.9954, 0.1339, 0.1715],
         [0.6112, 0.5150, 0.4394,  ..., 0.0015, 0.5982, 0.4856]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1321, 0.1541, 0.1450,  ..., 0.1463, 0.2500, 0.2500],
         [0.1321, 0.1524, 0.1450,  ..., 0.1463, 0.2500, 0.2500],
         [0.1321, 0.1524, 0.1450,  ..., 0.1463, 0.2500, 0.2500],
         [0.6038, 0.5412, 0.5649,  ..., 0.5611, 0.2500, 0.2500]],
        [[0.1409, 0.1438, 0.1482,  ..., 0.2500, 0.1549, 0.1540],
         [0.1409, 0.1438, 0.1482,  ..., 0.2500, 0.1549, 0.1534],
         [0.1409, 0.1438, 0.1482,  ..., 0.2500, 0.1549, 0.1534],
         [0.5774, 0.5687, 0.5554,  ..., 0.2500, 0.5354, 0.5391]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:18,392 [Process: 0] Synchronize training processes
2024-08-16 16:03:18,393 [Process: 0] Evaluating...
2024-08-16 16:03:18,395 [Process: 0] EPOCH 15:
2024-08-16 16:03:18,397 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1597, 0.1660, 0.1515,  ..., 0.1508, 0.2500, 0.1706],
         [0.1597, 0.1660, 0.1515,  ..., 0.1508, 0.2500, 0.1706],
         [0.1597, 0.1660, 0.1515,  ..., 0.1508, 0.2500, 0.1706],
         [0.5210, 0.5021, 0.5454,  ..., 0.5475, 0.2500, 0.4883]],
        [[0.1591, 0.1478, 0.1683,  ..., 0.0060, 0.1405, 0.1707],
         [0.1591, 0.1478, 0.1683,  ..., 0.0060, 0.1405, 0.1707],
         [0.1591, 0.1478, 0.1683,  ..., 0.9821, 0.1405, 0.1707],
         [0.5228, 0.5565, 0.4952,  ..., 0.0060, 0.5786, 0.4879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1718, 0.1442, 0.1542,  ..., 0.1560, 0.1562, 0.1542],
         [0.1718, 0.1442, 0.1542,  ..., 0.1560, 0.1554, 0.1542],
         [0.1718, 0.1442, 0.1542,  ..., 0.1560, 0.1552, 0.1542],
         [0.4845, 0.5675, 0.5375,  ..., 0.5320, 0.5332, 0.5374]],
        [[0.1512, 0.1514, 0.1674,  ..., 0.2500, 0.1492, 0.1854],
         [0.1512, 0.1514, 0.1674,  ..., 0.2500, 0.1492, 0.1854],
         [0.1512, 0.1514, 0.1674,  ..., 0.2500, 0.1492, 0.1854],
         [0.5464, 0.5459, 0.4977,  ..., 0.2500, 0.5525, 0.4439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:20,380 [Process: 0] Synchronize training processes
2024-08-16 16:03:20,381 [Process: 0] Evaluating...
2024-08-16 16:03:20,383 [Process: 0] EPOCH 16:
2024-08-16 16:03:20,384 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1598, 0.1363, 0.1503,  ..., 0.1435, 0.2096, 0.1501],
         [0.1598, 0.1363, 0.1503,  ..., 0.1435, 0.2096, 0.1501],
         [0.1598, 0.1363, 0.1503,  ..., 0.1435, 0.2096, 0.1501],
         [0.5205, 0.5910, 0.5492,  ..., 0.5694, 0.3712, 0.5496]],
        [[0.1731, 0.1626, 0.1539,  ..., 0.0017, 0.1757, 0.1693],
         [0.1731, 0.1626, 0.1539,  ..., 0.0017, 0.1757, 0.1693],
         [0.1731, 0.1626, 0.1539,  ..., 0.9950, 0.1757, 0.1693],
         [0.4806, 0.5123, 0.5383,  ..., 0.0017, 0.4729, 0.4920]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1508, 0.1624, 0.1521,  ..., 0.1717, 0.1568, 0.1631],
         [0.1508, 0.1624, 0.1521,  ..., 0.1717, 0.1568, 0.1631],
         [0.1508, 0.1624, 0.1521,  ..., 0.1717, 0.1568, 0.1631],
         [0.5477, 0.5127, 0.5437,  ..., 0.4849, 0.5297, 0.5108]],
        [[0.1744, 0.1786, 0.1511,  ..., 0.2500, 0.1647, 0.1352],
         [0.1744, 0.1786, 0.1511,  ..., 0.2500, 0.1647, 0.1352],
         [0.1744, 0.1786, 0.1511,  ..., 0.2500, 0.1647, 0.1352],
         [0.4767, 0.4641, 0.5468,  ..., 0.2500, 0.5058, 0.5944]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:22,308 [Process: 0] Synchronize training processes
2024-08-16 16:03:22,309 [Process: 0] Evaluating...
2024-08-16 16:03:22,311 [Process: 0] EPOCH 17:
2024-08-16 16:03:22,313 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1518, 0.1468, 0.1564,  ..., 0.2184, 0.1534, 0.1499],
         [0.1518, 0.1468, 0.1564,  ..., 0.2184, 0.1534, 0.1499],
         [0.1518, 0.1468, 0.1564,  ..., 0.2184, 0.1534, 0.1499],
         [0.5447, 0.5596, 0.5308,  ..., 0.3448, 0.5397, 0.5502]],
        [[0.1668, 0.1712, 0.1623,  ..., 0.0036, 0.1687, 0.1499],
         [0.1668, 0.1712, 0.1623,  ..., 0.0036, 0.1687, 0.1499],
         [0.1668, 0.1712, 0.1623,  ..., 0.9891, 0.1687, 0.1499],
         [0.4997, 0.4864, 0.5130,  ..., 0.0036, 0.4938, 0.5502]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1688, 0.1663, 0.1450,  ..., 0.1698, 0.1784, 0.1886],
         [0.1688, 0.1663, 0.1450,  ..., 0.1698, 0.1784, 0.1886],
         [0.1688, 0.1663, 0.1450,  ..., 0.1698, 0.1784, 0.1886],
         [0.4937, 0.5012, 0.5649,  ..., 0.4906, 0.4648, 0.4343]],
        [[0.1603, 0.1785, 0.1421,  ..., 0.2500, 0.1528, 0.1472],
         [0.1603, 0.1785, 0.1421,  ..., 0.2500, 0.1528, 0.1472],
         [0.1603, 0.1785, 0.1421,  ..., 0.2500, 0.1528, 0.1472],
         [0.5190, 0.4646, 0.5737,  ..., 0.2500, 0.5415, 0.5584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:24,223 [Process: 0] Synchronize training processes
2024-08-16 16:03:24,224 [Process: 0] Evaluating...
2024-08-16 16:03:24,226 [Process: 0] EPOCH 18:
2024-08-16 16:03:24,227 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1748, 0.1382, 0.1513,  ..., 0.2446, 0.1489, 0.2500],
         [0.1748, 0.1382, 0.1513,  ..., 0.2446, 0.1489, 0.2500],
         [0.1748, 0.1382, 0.1513,  ..., 0.2446, 0.1489, 0.2500],
         [0.4756, 0.5855, 0.5462,  ..., 0.2662, 0.5533, 0.2500]],
        [[0.1652, 0.1603, 0.1500,  ..., 0.0087, 0.1558, 0.1699],
         [0.1652, 0.1603, 0.1500,  ..., 0.0087, 0.1558, 0.1699],
         [0.1652, 0.1603, 0.1500,  ..., 0.9739, 0.1558, 0.1699],
         [0.5045, 0.5192, 0.5500,  ..., 0.0087, 0.5326, 0.4902]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1361, 0.1424, 0.1238,  ..., 0.1398, 0.1188, 0.1300],
         [0.1361, 0.1424, 0.1238,  ..., 0.1398, 0.1188, 0.1300],
         [0.1361, 0.1424, 0.1238,  ..., 0.1398, 0.1188, 0.1300],
         [0.5918, 0.5729, 0.6285,  ..., 0.5805, 0.6435, 0.6101]],
        [[0.1610, 0.1269, 0.1308,  ..., 0.2500, 0.1419, 0.1453],
         [0.1610, 0.1269, 0.1308,  ..., 0.2500, 0.1419, 0.1453],
         [0.1610, 0.1269, 0.1308,  ..., 0.2500, 0.1419, 0.1453],
         [0.5171, 0.6192, 0.6075,  ..., 0.2500, 0.5743, 0.5640]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:26,152 [Process: 0] Synchronize training processes
2024-08-16 16:03:26,152 [Process: 0] Evaluating...
2024-08-16 16:03:26,154 [Process: 0] EPOCH 19:
2024-08-16 16:03:26,156 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1543, 0.1579, 0.1412,  ..., 0.2407, 0.1328, 0.2500],
         [0.1543, 0.1579, 0.1412,  ..., 0.2407, 0.1328, 0.2500],
         [0.1543, 0.1579, 0.1412,  ..., 0.2407, 0.1328, 0.2500],
         [0.5370, 0.5263, 0.5765,  ..., 0.2780, 0.6016, 0.2500]],
        [[0.1459, 0.1437, 0.1682,  ..., 0.0052, 0.1506, 0.1411],
         [0.1459, 0.1437, 0.1682,  ..., 0.0052, 0.1506, 0.1411],
         [0.1459, 0.1437, 0.1682,  ..., 0.9844, 0.1506, 0.1411],
         [0.5622, 0.5688, 0.4954,  ..., 0.0052, 0.5481, 0.5768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1383, 0.1544, 0.1304,  ..., 0.1303, 0.1424, 0.1271],
         [0.1383, 0.1544, 0.1304,  ..., 0.1303, 0.1424, 0.1271],
         [0.1383, 0.1544, 0.1304,  ..., 0.1303, 0.1424, 0.1271],
         [0.5851, 0.5368, 0.6087,  ..., 0.6091, 0.5728, 0.6188]],
        [[0.1368, 0.1417, 0.1452,  ..., 0.2500, 0.1451, 0.1409],
         [0.1368, 0.1417, 0.1452,  ..., 0.2500, 0.1451, 0.1409],
         [0.1368, 0.1417, 0.1452,  ..., 0.2500, 0.1451, 0.1409],
         [0.5897, 0.5748, 0.5645,  ..., 0.2500, 0.5646, 0.5773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:28,146 [Process: 0] Synchronize training processes
2024-08-16 16:03:28,146 [Process: 0] Evaluating...
2024-08-16 16:03:28,148 [Process: 0] EPOCH 20:
2024-08-16 16:03:28,150 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1405, 0.1479, 0.1562,  ..., 0.2500, 0.1446, 0.2500],
         [0.1405, 0.1479, 0.1562,  ..., 0.2500, 0.1446, 0.2500],
         [0.1405, 0.1479, 0.1562,  ..., 0.2500, 0.1446, 0.2500],
         [0.5785, 0.5563, 0.5314,  ..., 0.2500, 0.5661, 0.2500]],
        [[0.1610, 0.1473, 0.1352,  ..., 0.0168, 0.1358, 0.1376],
         [0.1610, 0.1473, 0.1352,  ..., 0.0168, 0.1358, 0.1376],
         [0.1610, 0.1473, 0.1352,  ..., 0.9496, 0.1358, 0.1376],
         [0.5171, 0.5580, 0.5944,  ..., 0.0168, 0.5925, 0.5871]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1353, 0.1233, 0.1431,  ..., 0.1413, 0.1487, 0.1374],
         [0.1353, 0.1233, 0.1431,  ..., 0.1413, 0.1487, 0.1374],
         [0.1353, 0.1233, 0.1431,  ..., 0.1413, 0.1487, 0.1374],
         [0.5942, 0.6302, 0.5707,  ..., 0.5761, 0.5538, 0.5878]],
        [[0.1487, 0.1477, 0.1563,  ..., 0.2500, 0.1327, 0.1417],
         [0.1487, 0.1477, 0.1563,  ..., 0.2500, 0.1327, 0.1417],
         [0.1487, 0.1477, 0.1563,  ..., 0.2500, 0.1327, 0.1417],
         [0.5540, 0.5569, 0.5310,  ..., 0.2500, 0.6018, 0.5749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:30,230 [Process: 0] Synchronize training processes
2024-08-16 16:03:30,230 [Process: 0] Evaluating...
2024-08-16 16:03:30,232 [Process: 0] EPOCH 21:
2024-08-16 16:03:30,234 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1589, 0.1423, 0.1454,  ..., 0.2500, 0.1589, 0.2500],
         [0.1589, 0.1423, 0.1454,  ..., 0.2500, 0.1589, 0.2500],
         [0.1589, 0.1423, 0.1454,  ..., 0.2500, 0.1589, 0.2500],
         [0.5233, 0.5732, 0.5638,  ..., 0.2500, 0.5232, 0.2500]],
        [[0.1572, 0.1635, 0.1574,  ..., 0.0027, 0.1568, 0.1442],
         [0.1572, 0.1635, 0.1574,  ..., 0.0027, 0.1568, 0.1442],
         [0.1572, 0.1635, 0.1574,  ..., 0.9919, 0.1568, 0.1442],
         [0.5283, 0.5094, 0.5279,  ..., 0.0027, 0.5296, 0.5673]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1325, 0.1460, 0.1488,  ..., 0.1444, 0.1587, 0.1365],
         [0.1325, 0.1460, 0.1488,  ..., 0.1444, 0.1587, 0.1365],
         [0.1325, 0.1460, 0.1488,  ..., 0.1444, 0.1587, 0.1365],
         [0.6024, 0.5621, 0.5535,  ..., 0.5668, 0.5238, 0.5904]],
        [[0.1385, 0.1309, 0.1405,  ..., 0.2500, 0.1468, 0.1458],
         [0.1385, 0.1309, 0.1405,  ..., 0.2500, 0.1468, 0.1458],
         [0.1385, 0.1309, 0.1405,  ..., 0.2500, 0.1468, 0.1458],
         [0.5845, 0.6072, 0.5786,  ..., 0.2500, 0.5595, 0.5627]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:32,216 [Process: 0] Synchronize training processes
2024-08-16 16:03:32,216 [Process: 0] Evaluating...
2024-08-16 16:03:32,224 [Process: 0] EPOCH 22:
2024-08-16 16:03:32,226 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1482, 0.1428, 0.1358,  ..., 0.2500, 0.1348, 0.2500],
         [0.1482, 0.1428, 0.1358,  ..., 0.2500, 0.1348, 0.2500],
         [0.1482, 0.1428, 0.1358,  ..., 0.2500, 0.1348, 0.2500],
         [0.5554, 0.5716, 0.5927,  ..., 0.2500, 0.5957, 0.2500]],
        [[0.1556, 0.1347, 0.1462,  ..., 0.0024, 0.1561, 0.1327],
         [0.1556, 0.1347, 0.1462,  ..., 0.0024, 0.1561, 0.1327],
         [0.1556, 0.1347, 0.1462,  ..., 0.9929, 0.1561, 0.1327],
         [0.5333, 0.5960, 0.5614,  ..., 0.0024, 0.5317, 0.6018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1392, 0.1358, 0.1281,  ..., 0.1343, 0.1482, 0.1458],
         [0.1392, 0.1358, 0.1281,  ..., 0.1343, 0.1482, 0.1458],
         [0.1392, 0.1358, 0.1281,  ..., 0.1343, 0.1482, 0.1458],
         [0.5823, 0.5927, 0.6156,  ..., 0.5970, 0.5553, 0.5626]],
        [[0.1337, 0.1539, 0.1392,  ..., 0.2500, 0.1460, 0.1519],
         [0.1337, 0.1539, 0.1392,  ..., 0.2500, 0.1460, 0.1519],
         [0.1337, 0.1539, 0.1392,  ..., 0.2500, 0.1460, 0.1519],
         [0.5988, 0.5382, 0.5824,  ..., 0.2500, 0.5620, 0.5444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:34,228 [Process: 0] Synchronize training processes
2024-08-16 16:03:34,228 [Process: 0] Evaluating...
2024-08-16 16:03:34,230 [Process: 0] EPOCH 23:
2024-08-16 16:03:34,232 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1256, 0.1392, 0.1415,  ..., 0.2500, 0.1478, 0.2500],
         [0.1256, 0.1392, 0.1415,  ..., 0.2500, 0.1478, 0.2500],
         [0.1256, 0.1392, 0.1415,  ..., 0.2500, 0.1478, 0.2500],
         [0.6231, 0.5824, 0.5756,  ..., 0.2500, 0.5565, 0.2500]],
        [[0.1394, 0.1450, 0.1426,  ..., 0.0410, 0.1433, 0.1356],
         [0.1394, 0.1450, 0.1426,  ..., 0.0410, 0.1433, 0.1356],
         [0.1394, 0.1450, 0.1426,  ..., 0.8770, 0.1433, 0.1356],
         [0.5819, 0.5650, 0.5721,  ..., 0.0410, 0.5700, 0.5933]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1519, 0.1409, 0.1295,  ..., 0.1322, 0.1658, 0.1445],
         [0.1519, 0.1409, 0.1295,  ..., 0.1322, 0.1658, 0.1445],
         [0.1519, 0.1409, 0.1295,  ..., 0.1322, 0.1658, 0.1445],
         [0.5444, 0.5772, 0.6116,  ..., 0.6033, 0.5027, 0.5666]],
        [[0.1539, 0.1432, 0.1382,  ..., 0.2500, 0.1352, 0.1566],
         [0.1539, 0.1432, 0.1382,  ..., 0.2500, 0.1352, 0.1566],
         [0.1539, 0.1432, 0.1382,  ..., 0.2500, 0.1352, 0.1566],
         [0.5383, 0.5703, 0.5854,  ..., 0.2500, 0.5943, 0.5302]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:36,187 [Process: 0] Synchronize training processes
2024-08-16 16:03:36,187 [Process: 0] Evaluating...
2024-08-16 16:03:36,189 [Process: 0] EPOCH 24:
2024-08-16 16:03:36,191 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1407, 0.1427, 0.1540,  ..., 0.2500, 0.1378, 0.2500],
         [0.1407, 0.1427, 0.1540,  ..., 0.2500, 0.1378, 0.2500],
         [0.1407, 0.1427, 0.1540,  ..., 0.2500, 0.1378, 0.2500],
         [0.5780, 0.5718, 0.5379,  ..., 0.2500, 0.5867, 0.2500]],
        [[0.1446, 0.1417, 0.1272,  ..., 0.0212, 0.1397, 0.1440],
         [0.1446, 0.1417, 0.1272,  ..., 0.0212, 0.1397, 0.1440],
         [0.1446, 0.1417, 0.1272,  ..., 0.9364, 0.1397, 0.1440],
         [0.5662, 0.5750, 0.6183,  ..., 0.0212, 0.5810, 0.5681]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1333, 0.1338, 0.1479,  ..., 0.1394, 0.1210, 0.1477],
         [0.1333, 0.1338, 0.1479,  ..., 0.1394, 0.1210, 0.1477],
         [0.1333, 0.1338, 0.1479,  ..., 0.1394, 0.1210, 0.1477],
         [0.6000, 0.5985, 0.5564,  ..., 0.5818, 0.6369, 0.5568]],
        [[0.1331, 0.1281, 0.1433,  ..., 0.2500, 0.1358, 0.1349],
         [0.1331, 0.1281, 0.1433,  ..., 0.2500, 0.1358, 0.1349],
         [0.1331, 0.1281, 0.1433,  ..., 0.2500, 0.1358, 0.1349],
         [0.6008, 0.6157, 0.5701,  ..., 0.2500, 0.5927, 0.5952]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:38,203 [Process: 0] Synchronize training processes
2024-08-16 16:03:38,203 [Process: 0] Evaluating...
2024-08-16 16:03:38,205 [Process: 0] EPOCH 25:
2024-08-16 16:03:38,207 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1403, 0.1463, 0.1356,  ..., 0.2500, 0.1289, 0.2500],
         [0.1403, 0.1463, 0.1356,  ..., 0.2500, 0.1289, 0.2500],
         [0.1403, 0.1463, 0.1356,  ..., 0.2500, 0.1289, 0.2500],
         [0.5790, 0.5610, 0.5932,  ..., 0.2500, 0.6132, 0.2500]],
        [[0.1340, 0.1333, 0.1289,  ..., 0.0215, 0.1370, 0.1454],
         [0.1340, 0.1333, 0.1289,  ..., 0.0215, 0.1370, 0.1454],
         [0.1340, 0.1333, 0.1289,  ..., 0.9355, 0.1370, 0.1454],
         [0.5979, 0.6000, 0.6134,  ..., 0.0215, 0.5891, 0.5638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1315, 0.1303, 0.1331,  ..., 0.1294, 0.1291, 0.1375],
         [0.1315, 0.1303, 0.1331,  ..., 0.1294, 0.1291, 0.1375],
         [0.1315, 0.1303, 0.1331,  ..., 0.1294, 0.1291, 0.1375],
         [0.6056, 0.6090, 0.6007,  ..., 0.6119, 0.6128, 0.5876]],
        [[0.1398, 0.1408, 0.1291,  ..., 0.2500, 0.1295, 0.1361],
         [0.1398, 0.1408, 0.1291,  ..., 0.2500, 0.1295, 0.1361],
         [0.1398, 0.1408, 0.1291,  ..., 0.2500, 0.1295, 0.1361],
         [0.5806, 0.5776, 0.6126,  ..., 0.2500, 0.6115, 0.5916]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:40,167 [Process: 0] Synchronize training processes
2024-08-16 16:03:40,167 [Process: 0] Evaluating...
2024-08-16 16:03:40,169 [Process: 0] EPOCH 26:
2024-08-16 16:03:40,171 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1345, 0.1301, 0.1345,  ..., 0.2500, 0.1319, 0.2500],
         [0.1345, 0.1301, 0.1345,  ..., 0.2500, 0.1319, 0.2500],
         [0.1345, 0.1301, 0.1345,  ..., 0.2500, 0.1319, 0.2500],
         [0.5965, 0.6098, 0.5966,  ..., 0.2500, 0.6042, 0.2500]],
        [[0.1327, 0.1409, 0.1393,  ..., 0.0054, 0.1293, 0.1414],
         [0.1327, 0.1409, 0.1393,  ..., 0.0054, 0.1293, 0.1414],
         [0.1327, 0.1409, 0.1393,  ..., 0.9839, 0.1293, 0.1414],
         [0.6019, 0.5772, 0.5822,  ..., 0.0054, 0.6122, 0.5757]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1318, 0.1382, 0.1331,  ..., 0.1375, 0.1313, 0.1276],
         [0.1318, 0.1382, 0.1331,  ..., 0.1375, 0.1313, 0.1276],
         [0.1318, 0.1382, 0.1331,  ..., 0.1375, 0.1313, 0.1276],
         [0.6047, 0.5854, 0.6008,  ..., 0.5875, 0.6062, 0.6171]],
        [[0.1298, 0.1251, 0.1363,  ..., 0.2500, 0.1458, 0.1285],
         [0.1298, 0.1251, 0.1363,  ..., 0.2500, 0.1458, 0.1285],
         [0.1298, 0.1251, 0.1363,  ..., 0.2500, 0.1458, 0.1285],
         [0.6106, 0.6246, 0.5912,  ..., 0.2500, 0.5625, 0.6146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:42,173 [Process: 0] Synchronize training processes
2024-08-16 16:03:42,173 [Process: 0] Evaluating...
2024-08-16 16:03:42,175 [Process: 0] EPOCH 27:
2024-08-16 16:03:42,177 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1355, 0.1295, 0.1321,  ..., 0.2500, 0.1434, 0.2500],
         [0.1355, 0.1295, 0.1321,  ..., 0.2500, 0.1434, 0.2500],
         [0.1355, 0.1295, 0.1321,  ..., 0.2500, 0.1434, 0.2500],
         [0.5935, 0.6116, 0.6037,  ..., 0.2500, 0.5699, 0.2500]],
        [[0.1418, 0.1366, 0.1271,  ..., 0.0434, 0.1287, 0.1316],
         [0.1418, 0.1366, 0.1271,  ..., 0.0434, 0.1287, 0.1316],
         [0.1418, 0.1366, 0.1271,  ..., 0.8699, 0.1287, 0.1316],
         [0.5745, 0.5903, 0.6187,  ..., 0.0434, 0.6138, 0.6051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1139, 0.1261, 0.1284,  ..., 0.1318, 0.1233, 0.1277],
         [0.1139, 0.1261, 0.1284,  ..., 0.1318, 0.1233, 0.1277],
         [0.1139, 0.1261, 0.1284,  ..., 0.1318, 0.1233, 0.1277],
         [0.6582, 0.6218, 0.6147,  ..., 0.6047, 0.6300, 0.6168]],
        [[0.1259, 0.1292, 0.1359,  ..., 0.2500, 0.1286, 0.1382],
         [0.1259, 0.1292, 0.1359,  ..., 0.2500, 0.1286, 0.1382],
         [0.1259, 0.1292, 0.1359,  ..., 0.2500, 0.1286, 0.1382],
         [0.6222, 0.6124, 0.5923,  ..., 0.2500, 0.6141, 0.5855]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:44,258 [Process: 0] Synchronize training processes
2024-08-16 16:03:44,258 [Process: 0] Evaluating...
2024-08-16 16:03:44,260 [Process: 0] EPOCH 28:
2024-08-16 16:03:44,262 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1329, 0.1198, 0.1231,  ..., 0.2500, 0.1247, 0.2500],
         [0.1329, 0.1198, 0.1231,  ..., 0.2500, 0.1247, 0.2500],
         [0.1329, 0.1198, 0.1231,  ..., 0.2500, 0.1247, 0.2500],
         [0.6014, 0.6407, 0.6306,  ..., 0.2500, 0.6260, 0.2500]],
        [[0.1357, 0.1301, 0.1358,  ..., 0.0070, 0.1241, 0.1239],
         [0.1357, 0.1301, 0.1358,  ..., 0.0070, 0.1241, 0.1239],
         [0.1357, 0.1301, 0.1358,  ..., 0.9791, 0.1241, 0.1239],
         [0.5929, 0.6098, 0.5926,  ..., 0.0070, 0.6278, 0.6282]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1212, 0.1191, 0.1253,  ..., 0.1218, 0.1215, 0.1264],
         [0.1212, 0.1191, 0.1253,  ..., 0.1218, 0.1215, 0.1264],
         [0.1212, 0.1191, 0.1253,  ..., 0.1218, 0.1215, 0.1264],
         [0.6365, 0.6427, 0.6242,  ..., 0.6347, 0.6354, 0.6208]],
        [[0.1351, 0.1319, 0.1384,  ..., 0.2500, 0.1290, 0.1276],
         [0.1351, 0.1319, 0.1384,  ..., 0.2500, 0.1290, 0.1276],
         [0.1351, 0.1319, 0.1384,  ..., 0.2500, 0.1290, 0.1276],
         [0.5948, 0.6044, 0.5847,  ..., 0.2500, 0.6129, 0.6172]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:46,360 [Process: 0] Synchronize training processes
2024-08-16 16:03:46,360 [Process: 0] Evaluating...
2024-08-16 16:03:46,362 [Process: 0] EPOCH 29:
2024-08-16 16:03:46,364 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2683e-01, 1.2846e-01, 1.2812e-01,  ..., 1.6177e-01,
          1.3121e-01, 2.5000e-01],
         [1.2683e-01, 1.2846e-01, 1.2812e-01,  ..., 1.6177e-01,
          1.3121e-01, 2.5000e-01],
         [1.2683e-01, 1.2846e-01, 1.2812e-01,  ..., 1.6177e-01,
          1.3121e-01, 2.5000e-01],
         [6.1952e-01, 6.1463e-01, 6.1563e-01,  ..., 5.1468e-01,
          6.0637e-01, 2.5000e-01]],
        [[1.2574e-01, 1.2702e-01, 1.3047e-01,  ..., 8.2150e-04,
          1.2786e-01, 1.2882e-01],
         [1.2574e-01, 1.2702e-01, 1.3047e-01,  ..., 8.2150e-04,
          1.2786e-01, 1.2882e-01],
         [1.2574e-01, 1.2702e-01, 1.3047e-01,  ..., 9.9754e-01,
          1.2786e-01, 1.2882e-01],
         [6.2279e-01, 6.1894e-01, 6.0858e-01,  ..., 8.2150e-04,
          6.1642e-01, 6.1354e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1333, 0.1270, 0.1177,  ..., 0.1268, 0.1182, 0.1301],
         [0.1333, 0.1270, 0.1177,  ..., 0.1268, 0.1182, 0.1301],
         [0.1333, 0.1270, 0.1177,  ..., 0.1268, 0.1182, 0.1301],
         [0.6000, 0.6191, 0.6469,  ..., 0.6196, 0.6454, 0.6097]],
        [[0.1249, 0.1158, 0.1346,  ..., 0.2500, 0.1209, 0.1363],
         [0.1249, 0.1158, 0.1346,  ..., 0.2500, 0.1209, 0.1363],
         [0.1249, 0.1158, 0.1346,  ..., 0.2500, 0.1209, 0.1363],
         [0.6253, 0.6527, 0.5961,  ..., 0.2500, 0.6372, 0.5911]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:48,461 [Process: 0] Synchronize training processes
2024-08-16 16:03:48,461 [Process: 0] Evaluating...
2024-08-16 16:03:48,463 [Process: 0] EPOCH 30:
2024-08-16 16:03:48,465 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1372, 0.1231, 0.1342,  ..., 0.1271, 0.1376, 0.2500],
         [0.1372, 0.1231, 0.1342,  ..., 0.1271, 0.1376, 0.2500],
         [0.1372, 0.1231, 0.1342,  ..., 0.1271, 0.1376, 0.2500],
         [0.5883, 0.6306, 0.5974,  ..., 0.6186, 0.5872, 0.2500]],
        [[0.1283, 0.1276, 0.1277,  ..., 0.0030, 0.1404, 0.1409],
         [0.1283, 0.1276, 0.1277,  ..., 0.0030, 0.1404, 0.1409],
         [0.1283, 0.1276, 0.1277,  ..., 0.9909, 0.1404, 0.1409],
         [0.6151, 0.6172, 0.6168,  ..., 0.0030, 0.5789, 0.5773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1214, 0.1168, 0.1169,  ..., 0.1264, 0.1207, 0.1253],
         [0.1214, 0.1168, 0.1169,  ..., 0.1264, 0.1207, 0.1253],
         [0.1214, 0.1168, 0.1169,  ..., 0.1264, 0.1207, 0.1253],
         [0.6358, 0.6496, 0.6492,  ..., 0.6207, 0.6378, 0.6240]],
        [[0.1207, 0.1376, 0.1282,  ..., 0.2500, 0.1194, 0.1281],
         [0.1207, 0.1376, 0.1282,  ..., 0.2500, 0.1194, 0.1281],
         [0.1207, 0.1376, 0.1282,  ..., 0.2500, 0.1194, 0.1281],
         [0.6380, 0.5873, 0.6155,  ..., 0.2500, 0.6417, 0.6158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:50,542 [Process: 0] Synchronize training processes
2024-08-16 16:03:50,543 [Process: 0] Evaluating...
2024-08-16 16:03:50,544 [Process: 0] EPOCH 31:
2024-08-16 16:03:50,546 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2851e-01, 1.2654e-01, 1.2737e-01,  ..., 1.4010e-01,
          1.2302e-01, 2.5000e-01],
         [1.2851e-01, 1.2654e-01, 1.2737e-01,  ..., 1.4010e-01,
          1.2302e-01, 2.5000e-01],
         [1.2851e-01, 1.2654e-01, 1.2737e-01,  ..., 1.4010e-01,
          1.2302e-01, 2.5000e-01],
         [6.1446e-01, 6.2039e-01, 6.1788e-01,  ..., 5.7971e-01,
          6.3095e-01, 2.5000e-01]],
        [[1.2664e-01, 1.2354e-01, 1.3336e-01,  ..., 2.2338e-04,
          1.3420e-01, 1.2692e-01],
         [1.2664e-01, 1.2354e-01, 1.3336e-01,  ..., 2.2338e-04,
          1.3420e-01, 1.2692e-01],
         [1.2664e-01, 1.2354e-01, 1.3336e-01,  ..., 9.9933e-01,
          1.3420e-01, 1.2692e-01],
         [6.2008e-01, 6.2939e-01, 5.9992e-01,  ..., 2.2338e-04,
          5.9741e-01, 6.1923e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1230, 0.1128, 0.1268,  ..., 0.1282, 0.1242, 0.1235],
         [0.1230, 0.1128, 0.1268,  ..., 0.1282, 0.1242, 0.1235],
         [0.1230, 0.1128, 0.1268,  ..., 0.1282, 0.1242, 0.1235],
         [0.6311, 0.6617, 0.6196,  ..., 0.6153, 0.6275, 0.6296]],
        [[0.1260, 0.1233, 0.1274,  ..., 0.2500, 0.1298, 0.1288],
         [0.1260, 0.1233, 0.1274,  ..., 0.2500, 0.1298, 0.1288],
         [0.1260, 0.1233, 0.1274,  ..., 0.2500, 0.1298, 0.1288],
         [0.6221, 0.6301, 0.6177,  ..., 0.2500, 0.6105, 0.6135]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:52,628 [Process: 0] Synchronize training processes
2024-08-16 16:03:52,629 [Process: 0] Evaluating...
2024-08-16 16:03:52,637 [Process: 0] EPOCH 32:
2024-08-16 16:03:52,639 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1351, 0.1348, 0.1351,  ..., 0.1265, 0.1323, 0.2500],
         [0.1351, 0.1348, 0.1351,  ..., 0.1265, 0.1323, 0.2500],
         [0.1351, 0.1348, 0.1351,  ..., 0.1265, 0.1323, 0.2500],
         [0.5948, 0.5956, 0.5946,  ..., 0.6205, 0.6030, 0.2500]],
        [[0.1351, 0.1337, 0.1245,  ..., 0.0022, 0.1336, 0.1388],
         [0.1351, 0.1337, 0.1245,  ..., 0.0022, 0.1336, 0.1388],
         [0.1351, 0.1337, 0.1245,  ..., 0.9935, 0.1336, 0.1388],
         [0.5948, 0.5989, 0.6266,  ..., 0.0022, 0.5991, 0.5837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1258, 0.1318, 0.1322,  ..., 0.1289, 0.1265, 0.1181],
         [0.1258, 0.1318, 0.1322,  ..., 0.1289, 0.1265, 0.1181],
         [0.1258, 0.1318, 0.1322,  ..., 0.1289, 0.1265, 0.1181],
         [0.6226, 0.6045, 0.6035,  ..., 0.6132, 0.6204, 0.6457]],
        [[0.1400, 0.1318, 0.1316,  ..., 0.2500, 0.1249, 0.1349],
         [0.1400, 0.1318, 0.1316,  ..., 0.2500, 0.1249, 0.1349],
         [0.1400, 0.1318, 0.1316,  ..., 0.2500, 0.1249, 0.1349],
         [0.5800, 0.6047, 0.6051,  ..., 0.2500, 0.6252, 0.5952]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:54,641 [Process: 0] Synchronize training processes
2024-08-16 16:03:54,641 [Process: 0] Evaluating...
2024-08-16 16:03:54,643 [Process: 0] EPOCH 33:
2024-08-16 16:03:54,645 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1239, 0.1222, 0.1279,  ..., 0.2500, 0.1304, 0.2500],
         [0.1239, 0.1222, 0.1279,  ..., 0.2500, 0.1304, 0.2500],
         [0.1239, 0.1222, 0.1279,  ..., 0.2500, 0.1304, 0.2500],
         [0.6284, 0.6335, 0.6162,  ..., 0.2500, 0.6088, 0.2500]],
        [[0.1228, 0.1222, 0.1279,  ..., 0.0045, 0.1363, 0.1283],
         [0.1228, 0.1222, 0.1279,  ..., 0.0045, 0.1363, 0.1283],
         [0.1228, 0.1222, 0.1279,  ..., 0.9866, 0.1363, 0.1283],
         [0.6315, 0.6335, 0.6164,  ..., 0.0045, 0.5912, 0.6152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1193, 0.1213, 0.1136,  ..., 0.1166, 0.1270, 0.1218],
         [0.1193, 0.1213, 0.1136,  ..., 0.1166, 0.1270, 0.1218],
         [0.1193, 0.1213, 0.1136,  ..., 0.1166, 0.1270, 0.1218],
         [0.6422, 0.6362, 0.6591,  ..., 0.6502, 0.6189, 0.6345]],
        [[0.1316, 0.1221, 0.1323,  ..., 0.2500, 0.1141, 0.1276],
         [0.1316, 0.1221, 0.1323,  ..., 0.2500, 0.1141, 0.1276],
         [0.1316, 0.1221, 0.1323,  ..., 0.2500, 0.1141, 0.1276],
         [0.6052, 0.6338, 0.6032,  ..., 0.2500, 0.6578, 0.6173]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:56,635 [Process: 0] Synchronize training processes
2024-08-16 16:03:56,635 [Process: 0] Evaluating...
2024-08-16 16:03:56,637 [Process: 0] EPOCH 34:
2024-08-16 16:03:56,639 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1368, 0.1151, 0.1204,  ..., 0.2500, 0.1261, 0.2500],
         [0.1368, 0.1151, 0.1204,  ..., 0.2500, 0.1261, 0.2500],
         [0.1368, 0.1151, 0.1204,  ..., 0.2500, 0.1261, 0.2500],
         [0.5895, 0.6546, 0.6389,  ..., 0.2500, 0.6216, 0.2500]],
        [[0.1157, 0.1218, 0.1224,  ..., 0.0034, 0.1155, 0.1261],
         [0.1157, 0.1218, 0.1224,  ..., 0.0034, 0.1155, 0.1261],
         [0.1157, 0.1218, 0.1224,  ..., 0.9898, 0.1155, 0.1261],
         [0.6528, 0.6345, 0.6328,  ..., 0.0034, 0.6535, 0.6218]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1236, 0.1259, 0.1203,  ..., 0.1132, 0.1212, 0.1185],
         [0.1236, 0.1259, 0.1203,  ..., 0.1132, 0.1212, 0.1185],
         [0.1236, 0.1259, 0.1203,  ..., 0.1132, 0.1212, 0.1185],
         [0.6293, 0.6222, 0.6392,  ..., 0.6603, 0.6365, 0.6446]],
        [[0.1169, 0.1135, 0.1255,  ..., 0.2500, 0.1230, 0.1264],
         [0.1169, 0.1135, 0.1255,  ..., 0.2500, 0.1230, 0.1264],
         [0.1169, 0.1135, 0.1255,  ..., 0.2500, 0.1230, 0.1264],
         [0.6493, 0.6594, 0.6235,  ..., 0.2500, 0.6310, 0.6208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:03:58,729 [Process: 0] Synchronize training processes
2024-08-16 16:03:58,730 [Process: 0] Evaluating...
2024-08-16 16:03:58,732 [Process: 0] EPOCH 35:
2024-08-16 16:03:58,734 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.5000e-01, 1.1167e-01, 2.5000e-01,  ..., 2.5000e-01,
          1.2937e-01, 2.5000e-01],
         [2.5000e-01, 1.1167e-01, 2.5000e-01,  ..., 2.5000e-01,
          1.2937e-01, 2.5000e-01],
         [2.5000e-01, 1.1167e-01, 2.5000e-01,  ..., 2.5000e-01,
          1.2937e-01, 2.5000e-01],
         [2.5000e-01, 6.6500e-01, 2.5000e-01,  ..., 2.5000e-01,
          6.1188e-01, 2.5000e-01]],
        [[1.1343e-01, 1.2088e-01, 1.1837e-01,  ..., 7.1210e-04,
          1.1815e-01, 1.1031e-01],
         [1.1343e-01, 1.2088e-01, 1.1837e-01,  ..., 7.1210e-04,
          1.1815e-01, 1.1031e-01],
         [1.1343e-01, 1.2088e-01, 1.1837e-01,  ..., 9.9786e-01,
          1.1815e-01, 1.1031e-01],
         [6.5972e-01, 6.3736e-01, 6.4490e-01,  ..., 7.1210e-04,
          6.4556e-01, 6.6908e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1184, 0.1144, 0.1155,  ..., 0.1155, 0.1314, 0.1245],
         [0.1184, 0.1144, 0.1155,  ..., 0.1155, 0.1314, 0.1245],
         [0.1184, 0.1144, 0.1155,  ..., 0.1155, 0.1314, 0.1245],
         [0.6449, 0.6567, 0.6535,  ..., 0.6536, 0.6057, 0.6264]],
        [[0.1223, 0.1227, 0.1183,  ..., 0.2500, 0.1225, 0.1231],
         [0.1223, 0.1227, 0.1183,  ..., 0.2500, 0.1225, 0.1231],
         [0.1223, 0.1227, 0.1183,  ..., 0.2500, 0.1225, 0.1231],
         [0.6332, 0.6318, 0.6452,  ..., 0.2500, 0.6324, 0.6308]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:00,782 [Process: 0] Synchronize training processes
2024-08-16 16:04:00,782 [Process: 0] Evaluating...
2024-08-16 16:04:00,784 [Process: 0] EPOCH 36:
2024-08-16 16:04:00,786 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.5000e-01, 1.0910e-01, 2.5000e-01,  ..., 2.5000e-01,
          1.0834e-01, 2.5000e-01],
         [2.5000e-01, 1.0910e-01, 2.5000e-01,  ..., 2.5000e-01,
          1.0834e-01, 2.5000e-01],
         [2.5000e-01, 1.0910e-01, 2.5000e-01,  ..., 2.5000e-01,
          1.0834e-01, 2.5000e-01],
         [2.5000e-01, 6.7271e-01, 2.5000e-01,  ..., 2.5000e-01,
          6.7497e-01, 2.5000e-01]],
        [[1.1650e-01, 1.1471e-01, 1.1821e-01,  ..., 4.0996e-04,
          1.2336e-01, 1.0405e-01],
         [1.1650e-01, 1.1471e-01, 1.1821e-01,  ..., 4.0996e-04,
          1.2336e-01, 1.0405e-01],
         [1.1650e-01, 1.1471e-01, 1.1821e-01,  ..., 9.9877e-01,
          1.2336e-01, 1.0405e-01],
         [6.5051e-01, 6.5587e-01, 6.4537e-01,  ..., 4.0996e-04,
          6.2992e-01, 6.8786e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1252, 0.1249, 0.1147,  ..., 0.1225, 0.1198, 0.1083],
         [0.1252, 0.1249, 0.1147,  ..., 0.1225, 0.1198, 0.1083],
         [0.1252, 0.1249, 0.1147,  ..., 0.1225, 0.1198, 0.1083],
         [0.6243, 0.6254, 0.6558,  ..., 0.6325, 0.6407, 0.6750]],
        [[0.1173, 0.1206, 0.1151,  ..., 0.2500, 0.1225, 0.1141],
         [0.1173, 0.1206, 0.1151,  ..., 0.2500, 0.1225, 0.1141],
         [0.1173, 0.1206, 0.1151,  ..., 0.2500, 0.1225, 0.1141],
         [0.6481, 0.6383, 0.6546,  ..., 0.2500, 0.6325, 0.6577]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:02,769 [Process: 0] Synchronize training processes
2024-08-16 16:04:02,770 [Process: 0] Evaluating...
2024-08-16 16:04:02,772 [Process: 0] EPOCH 37:
2024-08-16 16:04:02,774 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1147, 0.2500,  ..., 0.2500, 0.1137, 0.2500],
         [0.2500, 0.1147, 0.2500,  ..., 0.2500, 0.1137, 0.2500],
         [0.2500, 0.1147, 0.2500,  ..., 0.2500, 0.1137, 0.2500],
         [0.2500, 0.6558, 0.2500,  ..., 0.2500, 0.6589, 0.2500]],
        [[0.1173, 0.1129, 0.1182,  ..., 0.0062, 0.1092, 0.1204],
         [0.1173, 0.1129, 0.1182,  ..., 0.0062, 0.1092, 0.1204],
         [0.1173, 0.1129, 0.1182,  ..., 0.9813, 0.1092, 0.1204],
         [0.6480, 0.6614, 0.6455,  ..., 0.0062, 0.6723, 0.6388]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1196, 0.1134, 0.1191,  ..., 0.1086, 0.1205, 0.1075],
         [0.1196, 0.1134, 0.1191,  ..., 0.1086, 0.1205, 0.1075],
         [0.1196, 0.1134, 0.1191,  ..., 0.1086, 0.1205, 0.1075],
         [0.6411, 0.6599, 0.6426,  ..., 0.6742, 0.6384, 0.6774]],
        [[0.1132, 0.1155, 0.1155,  ..., 0.2500, 0.1214, 0.1255],
         [0.1132, 0.1155, 0.1155,  ..., 0.2500, 0.1214, 0.1255],
         [0.1132, 0.1155, 0.1155,  ..., 0.2500, 0.1214, 0.1255],
         [0.6603, 0.6534, 0.6536,  ..., 0.2500, 0.6357, 0.6234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:04,757 [Process: 0] Synchronize training processes
2024-08-16 16:04:04,758 [Process: 0] Evaluating...
2024-08-16 16:04:04,760 [Process: 0] EPOCH 38:
2024-08-16 16:04:04,762 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1086, 0.2500,  ..., 0.2500, 0.1115, 0.2500],
         [0.2500, 0.1086, 0.2500,  ..., 0.2500, 0.1115, 0.2500],
         [0.2500, 0.1086, 0.2500,  ..., 0.2500, 0.1115, 0.2500],
         [0.2500, 0.6742, 0.2500,  ..., 0.2500, 0.6655, 0.2500]],
        [[0.1090, 0.1116, 0.1140,  ..., 0.0420, 0.1126, 0.1142],
         [0.1090, 0.1116, 0.1140,  ..., 0.0420, 0.1126, 0.1142],
         [0.1090, 0.1116, 0.1140,  ..., 0.8739, 0.1126, 0.1142],
         [0.6730, 0.6651, 0.6579,  ..., 0.0420, 0.6621, 0.6575]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1140, 0.1143, 0.1165,  ..., 0.1174, 0.1160, 0.1102],
         [0.1140, 0.1143, 0.1165,  ..., 0.1174, 0.1160, 0.1102],
         [0.1140, 0.1143, 0.1165,  ..., 0.1174, 0.1160, 0.1102],
         [0.6581, 0.6572, 0.6506,  ..., 0.6478, 0.6519, 0.6694]],
        [[0.1077, 0.1090, 0.1016,  ..., 0.2500, 0.1108, 0.1128],
         [0.1077, 0.1090, 0.1016,  ..., 0.2500, 0.1108, 0.1128],
         [0.1077, 0.1090, 0.1016,  ..., 0.2500, 0.1108, 0.1128],
         [0.6768, 0.6730, 0.6953,  ..., 0.2500, 0.6677, 0.6617]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:06,835 [Process: 0] Synchronize training processes
2024-08-16 16:04:06,836 [Process: 0] Evaluating...
2024-08-16 16:04:06,839 [Process: 0] EPOCH 39:
2024-08-16 16:04:06,841 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1178, 0.2500,  ..., 0.2500, 0.1117, 0.2500],
         [0.2500, 0.1178, 0.2500,  ..., 0.2500, 0.1117, 0.2500],
         [0.2500, 0.1178, 0.2500,  ..., 0.2500, 0.1117, 0.2500],
         [0.2500, 0.6466, 0.2500,  ..., 0.2500, 0.6649, 0.2500]],
        [[0.1121, 0.1107, 0.1098,  ..., 0.0018, 0.1122, 0.1106],
         [0.1121, 0.1107, 0.1098,  ..., 0.0018, 0.1122, 0.1106],
         [0.1121, 0.1107, 0.1098,  ..., 0.9946, 0.1122, 0.1106],
         [0.6638, 0.6680, 0.6705,  ..., 0.0018, 0.6635, 0.6681]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1127, 0.1180, 0.1083,  ..., 0.1092, 0.1126, 0.1170],
         [0.1127, 0.1180, 0.1083,  ..., 0.1092, 0.1126, 0.1170],
         [0.1127, 0.1180, 0.1083,  ..., 0.1092, 0.1126, 0.1170],
         [0.6618, 0.6461, 0.6751,  ..., 0.6723, 0.6621, 0.6490]],
        [[0.1147, 0.1133, 0.1170,  ..., 0.2500, 0.1162, 0.1046],
         [0.1147, 0.1133, 0.1170,  ..., 0.2500, 0.1162, 0.1046],
         [0.1147, 0.1133, 0.1170,  ..., 0.2500, 0.1162, 0.1046],
         [0.6559, 0.6600, 0.6490,  ..., 0.2500, 0.6514, 0.6862]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:08,862 [Process: 0] Synchronize training processes
2024-08-16 16:04:08,862 [Process: 0] Evaluating...
2024-08-16 16:04:08,864 [Process: 0] EPOCH 40:
2024-08-16 16:04:08,866 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1199, 0.2500,  ..., 0.1079, 0.1123, 0.2500],
         [0.2500, 0.1199, 0.2500,  ..., 0.1079, 0.1123, 0.2500],
         [0.2500, 0.1199, 0.2500,  ..., 0.1079, 0.1123, 0.2500],
         [0.2500, 0.6404, 0.2500,  ..., 0.6762, 0.6630, 0.2500]],
        [[0.1150, 0.1133, 0.1169,  ..., 0.0015, 0.1135, 0.1153],
         [0.1150, 0.1133, 0.1169,  ..., 0.0015, 0.1135, 0.1153],
         [0.1150, 0.1133, 0.1169,  ..., 0.9956, 0.1135, 0.1153],
         [0.6550, 0.6600, 0.6494,  ..., 0.0015, 0.6595, 0.6540]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1083, 0.1071, 0.1077,  ..., 0.1059, 0.1126, 0.1204],
         [0.1083, 0.1071, 0.1077,  ..., 0.1059, 0.1126, 0.1204],
         [0.1083, 0.1071, 0.1077,  ..., 0.1059, 0.1126, 0.1204],
         [0.6752, 0.6788, 0.6769,  ..., 0.6822, 0.6622, 0.6387]],
        [[0.1102, 0.1130, 0.1187,  ..., 0.2500, 0.1086, 0.1135],
         [0.1102, 0.1130, 0.1187,  ..., 0.2500, 0.1086, 0.1135],
         [0.1102, 0.1130, 0.1187,  ..., 0.2500, 0.1086, 0.1135],
         [0.6693, 0.6609, 0.6440,  ..., 0.2500, 0.6742, 0.6596]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:10,825 [Process: 0] Synchronize training processes
2024-08-16 16:04:10,826 [Process: 0] Evaluating...
2024-08-16 16:04:10,828 [Process: 0] EPOCH 41:
2024-08-16 16:04:10,830 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.5000e-01, 1.0447e-01, 1.0773e-01,  ..., 1.1116e-01,
          1.1569e-01, 2.5000e-01],
         [2.5000e-01, 1.0447e-01, 1.0773e-01,  ..., 1.1116e-01,
          1.1569e-01, 2.5000e-01],
         [2.5000e-01, 1.0447e-01, 1.0773e-01,  ..., 1.1116e-01,
          1.1569e-01, 2.5000e-01],
         [2.5000e-01, 6.8659e-01, 6.7680e-01,  ..., 6.6652e-01,
          6.5294e-01, 2.5000e-01]],
        [[1.1859e-01, 1.1109e-01, 1.0816e-01,  ..., 9.1809e-04,
          1.0954e-01, 1.0904e-01],
         [1.1859e-01, 1.1109e-01, 1.0816e-01,  ..., 9.1809e-04,
          1.0954e-01, 1.0904e-01],
         [1.1859e-01, 1.1109e-01, 1.0816e-01,  ..., 9.9725e-01,
          1.0954e-01, 1.0904e-01],
         [6.4422e-01, 6.6672e-01, 6.7552e-01,  ..., 9.1809e-04,
          6.7139e-01, 6.7288e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1183, 0.1081, 0.1114,  ..., 0.1045, 0.1119, 0.1123],
         [0.1183, 0.1081, 0.1114,  ..., 0.1045, 0.1119, 0.1123],
         [0.1183, 0.1081, 0.1114,  ..., 0.1045, 0.1119, 0.1123],
         [0.6452, 0.6758, 0.6659,  ..., 0.6866, 0.6644, 0.6632]],
        [[0.1063, 0.1120, 0.1146,  ..., 0.2500, 0.1122, 0.1071],
         [0.1063, 0.1120, 0.1146,  ..., 0.2500, 0.1122, 0.1071],
         [0.1063, 0.1120, 0.1146,  ..., 0.2500, 0.1122, 0.1071],
         [0.6810, 0.6639, 0.6561,  ..., 0.2500, 0.6635, 0.6786]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:12,809 [Process: 0] Synchronize training processes
2024-08-16 16:04:12,809 [Process: 0] Evaluating...
2024-08-16 16:04:12,817 [Process: 0] EPOCH 42:
2024-08-16 16:04:12,819 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1127, 0.1086,  ..., 0.1182, 0.1135, 0.2500],
         [0.2500, 0.1127, 0.1086,  ..., 0.1182, 0.1135, 0.2500],
         [0.2500, 0.1127, 0.1086,  ..., 0.1182, 0.1135, 0.2500],
         [0.2500, 0.6618, 0.6741,  ..., 0.6454, 0.6595, 0.2500]],
        [[0.1219, 0.1180, 0.1202,  ..., 0.0049, 0.1096, 0.1144],
         [0.1219, 0.1180, 0.1202,  ..., 0.0049, 0.1096, 0.1144],
         [0.1219, 0.1180, 0.1202,  ..., 0.9852, 0.1096, 0.1144],
         [0.6343, 0.6459, 0.6393,  ..., 0.0049, 0.6712, 0.6569]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1070, 0.1037, 0.1044,  ..., 0.1071, 0.1087, 0.1057],
         [0.1070, 0.1037, 0.1044,  ..., 0.1071, 0.1087, 0.1057],
         [0.1070, 0.1037, 0.1044,  ..., 0.1071, 0.1087, 0.1057],
         [0.6790, 0.6890, 0.6868,  ..., 0.6787, 0.6739, 0.6830]],
        [[0.1027, 0.1101, 0.1006,  ..., 0.2500, 0.1085, 0.1098],
         [0.1027, 0.1101, 0.1006,  ..., 0.2500, 0.1085, 0.1098],
         [0.1027, 0.1101, 0.1006,  ..., 0.2500, 0.1085, 0.1098],
         [0.6919, 0.6698, 0.6981,  ..., 0.2500, 0.6744, 0.6707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:14,872 [Process: 0] Synchronize training processes
2024-08-16 16:04:14,872 [Process: 0] Evaluating...
2024-08-16 16:04:14,874 [Process: 0] EPOCH 43:
2024-08-16 16:04:14,876 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1087, 0.1211, 0.1156,  ..., 0.1214, 0.1153, 0.1167],
         [0.1087, 0.1211, 0.1156,  ..., 0.1214, 0.1153, 0.1167],
         [0.1087, 0.1211, 0.1156,  ..., 0.1214, 0.1153, 0.1167],
         [0.6739, 0.6368, 0.6531,  ..., 0.6359, 0.6540, 0.6499]],
        [[0.1149, 0.1188, 0.1261,  ..., 0.0013, 0.1151, 0.1252],
         [0.1149, 0.1188, 0.1261,  ..., 0.0013, 0.1151, 0.1252],
         [0.1149, 0.1188, 0.1261,  ..., 0.9962, 0.1151, 0.1252],
         [0.6552, 0.6435, 0.6217,  ..., 0.0013, 0.6548, 0.6245]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1069, 0.1032, 0.1067,  ..., 0.1084, 0.1009, 0.1037],
         [0.1069, 0.1032, 0.1067,  ..., 0.1084, 0.1009, 0.1037],
         [0.1069, 0.1032, 0.1067,  ..., 0.1084, 0.1009, 0.1037],
         [0.6793, 0.6903, 0.6798,  ..., 0.6748, 0.6973, 0.6890]],
        [[0.1086, 0.1015, 0.1008,  ..., 0.2500, 0.1074, 0.1003],
         [0.1086, 0.1015, 0.1008,  ..., 0.2500, 0.1074, 0.1003],
         [0.1086, 0.1015, 0.1008,  ..., 0.2500, 0.1074, 0.1003],
         [0.6742, 0.6954, 0.6975,  ..., 0.2500, 0.6777, 0.6992]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:16,947 [Process: 0] Synchronize training processes
2024-08-16 16:04:16,948 [Process: 0] Evaluating...
2024-08-16 16:04:16,950 [Process: 0] EPOCH 44:
2024-08-16 16:04:16,951 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1165, 0.1099, 0.1172,  ..., 0.1135, 0.1116, 0.1174],
         [0.1165, 0.1099, 0.1172,  ..., 0.1135, 0.1116, 0.1174],
         [0.1165, 0.1099, 0.1172,  ..., 0.1135, 0.1116, 0.1174],
         [0.6504, 0.6704, 0.6484,  ..., 0.6594, 0.6651, 0.6479]],
        [[0.1054, 0.1119, 0.1070,  ..., 0.0026, 0.1129, 0.1115],
         [0.1054, 0.1119, 0.1070,  ..., 0.0026, 0.1129, 0.1115],
         [0.1054, 0.1119, 0.1070,  ..., 0.9923, 0.1129, 0.1115],
         [0.6838, 0.6643, 0.6790,  ..., 0.0026, 0.6612, 0.6654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1026, 0.1043, 0.1063,  ..., 0.1024, 0.0999, 0.1004],
         [0.1026, 0.1043, 0.1063,  ..., 0.1024, 0.0999, 0.1004],
         [0.1026, 0.1043, 0.1063,  ..., 0.1024, 0.0999, 0.1004],
         [0.6922, 0.6872, 0.6810,  ..., 0.6929, 0.7004, 0.6987]],
        [[0.1036, 0.1083, 0.0999,  ..., 0.2439, 0.1005, 0.1024],
         [0.1036, 0.1083, 0.0999,  ..., 0.2439, 0.1005, 0.1024],
         [0.1036, 0.1083, 0.0999,  ..., 0.2683, 0.1005, 0.1024],
         [0.6893, 0.6752, 0.7002,  ..., 0.2439, 0.6985, 0.6927]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:18,879 [Process: 0] Synchronize training processes
2024-08-16 16:04:18,879 [Process: 0] Evaluating...
2024-08-16 16:04:18,881 [Process: 0] EPOCH 45:
2024-08-16 16:04:18,883 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1633e-01, 1.1552e-01, 1.1193e-01,  ..., 1.2128e-01,
          1.2032e-01, 1.1140e-01],
         [1.1633e-01, 1.1552e-01, 1.1193e-01,  ..., 1.2128e-01,
          1.2032e-01, 1.1140e-01],
         [1.1633e-01, 1.1552e-01, 1.1193e-01,  ..., 1.2128e-01,
          1.2032e-01, 1.1140e-01],
         [6.5102e-01, 6.5344e-01, 6.6422e-01,  ..., 6.3617e-01,
          6.3905e-01, 6.6579e-01]],
        [[1.1096e-01, 1.1711e-01, 1.1058e-01,  ..., 7.1342e-04,
          1.1548e-01, 1.1229e-01],
         [1.1096e-01, 1.1711e-01, 1.1058e-01,  ..., 7.1342e-04,
          1.1548e-01, 1.1229e-01],
         [1.1096e-01, 1.1711e-01, 1.1058e-01,  ..., 9.9786e-01,
          1.1548e-01, 1.1229e-01],
         [6.6713e-01, 6.4868e-01, 6.6827e-01,  ..., 7.1342e-04,
          6.5357e-01, 6.6313e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0988, 0.0915, 0.0972,  ..., 0.0981, 0.1052, 0.0974],
         [0.0988, 0.0915, 0.0972,  ..., 0.0981, 0.1052, 0.0974],
         [0.0988, 0.0915, 0.0972,  ..., 0.0981, 0.1052, 0.0974],
         [0.7037, 0.7255, 0.7084,  ..., 0.7057, 0.6845, 0.7077]],
        [[0.0980, 0.1003, 0.1028,  ..., 0.2500, 0.1024, 0.0968],
         [0.0980, 0.1003, 0.1028,  ..., 0.2500, 0.1024, 0.0968],
         [0.0980, 0.1003, 0.1028,  ..., 0.2500, 0.1024, 0.0968],
         [0.7060, 0.6991, 0.6915,  ..., 0.2500, 0.6929, 0.7095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:20,805 [Process: 0] Synchronize training processes
2024-08-16 16:04:20,806 [Process: 0] Evaluating...
2024-08-16 16:04:20,808 [Process: 0] EPOCH 46:
2024-08-16 16:04:20,809 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1130, 0.1151, 0.1075,  ..., 0.1118, 0.1079, 0.1096],
         [0.1130, 0.1151, 0.1075,  ..., 0.1118, 0.1079, 0.1096],
         [0.1130, 0.1151, 0.1075,  ..., 0.1118, 0.1079, 0.1096],
         [0.6611, 0.6547, 0.6775,  ..., 0.6645, 0.6762, 0.6712]],
        [[0.1109, 0.1063, 0.1079,  ..., 0.0015, 0.1094, 0.1086],
         [0.1109, 0.1063, 0.1079,  ..., 0.0015, 0.1094, 0.1086],
         [0.1109, 0.1063, 0.1079,  ..., 0.9956, 0.1094, 0.1086],
         [0.6674, 0.6812, 0.6762,  ..., 0.0015, 0.6717, 0.6743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0936, 0.1015, 0.1019,  ..., 0.0964, 0.0990, 0.1021],
         [0.0936, 0.1015, 0.1019,  ..., 0.0964, 0.0990, 0.1021],
         [0.0936, 0.1015, 0.1019,  ..., 0.0964, 0.0990, 0.1021],
         [0.7192, 0.6954, 0.6944,  ..., 0.7107, 0.7031, 0.6938]],
        [[0.1039, 0.1043, 0.0907,  ..., 0.2500, 0.1065, 0.0958],
         [0.1039, 0.1043, 0.0907,  ..., 0.2500, 0.1065, 0.0958],
         [0.1039, 0.1043, 0.0907,  ..., 0.2500, 0.1065, 0.0958],
         [0.6883, 0.6870, 0.7280,  ..., 0.2500, 0.6806, 0.7126]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:22,725 [Process: 0] Synchronize training processes
2024-08-16 16:04:22,725 [Process: 0] Evaluating...
2024-08-16 16:04:22,727 [Process: 0] EPOCH 47:
2024-08-16 16:04:22,729 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1130, 0.1141, 0.1076,  ..., 0.1077, 0.1144, 0.1067],
         [0.1130, 0.1141, 0.1076,  ..., 0.1077, 0.1144, 0.1067],
         [0.1130, 0.1141, 0.1076,  ..., 0.1077, 0.1144, 0.1067],
         [0.6611, 0.6578, 0.6772,  ..., 0.6770, 0.6567, 0.6799]],
        [[0.1087, 0.1107, 0.1053,  ..., 0.0012, 0.1083, 0.1063],
         [0.1087, 0.1107, 0.1053,  ..., 0.0012, 0.1083, 0.1063],
         [0.1087, 0.1107, 0.1053,  ..., 0.9965, 0.1083, 0.1063],
         [0.6738, 0.6679, 0.6840,  ..., 0.0012, 0.6751, 0.6811]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1007, 0.0954, 0.0967,  ..., 0.0979, 0.0999, 0.0975],
         [0.1007, 0.0954, 0.0967,  ..., 0.0979, 0.0999, 0.0975],
         [0.1007, 0.0954, 0.0967,  ..., 0.0979, 0.0999, 0.0975],
         [0.6980, 0.7138, 0.7098,  ..., 0.7063, 0.7002, 0.7074]],
        [[0.0991, 0.0991, 0.1031,  ..., 0.2500, 0.1025, 0.0969],
         [0.0991, 0.0991, 0.1031,  ..., 0.2500, 0.1025, 0.0969],
         [0.0991, 0.0991, 0.1031,  ..., 0.2500, 0.1025, 0.0969],
         [0.7028, 0.7027, 0.6906,  ..., 0.2500, 0.6925, 0.7094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:24,635 [Process: 0] Synchronize training processes
2024-08-16 16:04:24,636 [Process: 0] Evaluating...
2024-08-16 16:04:24,638 [Process: 0] EPOCH 48:
2024-08-16 16:04:24,640 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0130e-01, 1.0866e-01, 1.0919e-01,  ..., 1.0543e-01,
          1.0167e-01, 1.0511e-01],
         [1.0130e-01, 1.0866e-01, 1.0919e-01,  ..., 1.0543e-01,
          1.0167e-01, 1.0511e-01],
         [1.0130e-01, 1.0866e-01, 1.0919e-01,  ..., 1.0543e-01,
          1.0167e-01, 1.0511e-01],
         [6.9610e-01, 6.7401e-01, 6.7244e-01,  ..., 6.8370e-01,
          6.9500e-01, 6.8468e-01]],
        [[1.0296e-01, 1.0518e-01, 1.1162e-01,  ..., 8.4231e-04,
          1.0903e-01, 1.0684e-01],
         [1.0296e-01, 1.0518e-01, 1.1162e-01,  ..., 8.4231e-04,
          1.0903e-01, 1.0684e-01],
         [1.0296e-01, 1.0518e-01, 1.1162e-01,  ..., 9.9747e-01,
          1.0903e-01, 1.0684e-01],
         [6.9111e-01, 6.8447e-01, 6.6513e-01,  ..., 8.4231e-04,
          6.7292e-01, 6.7948e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1017, 0.0905, 0.0924,  ..., 0.0958, 0.1003, 0.0985],
         [0.1017, 0.0905, 0.0924,  ..., 0.0958, 0.1003, 0.0985],
         [0.1017, 0.0905, 0.0924,  ..., 0.0958, 0.1003, 0.0985],
         [0.6950, 0.7285, 0.7227,  ..., 0.7127, 0.6992, 0.7044]],
        [[0.0955, 0.0945, 0.0901,  ..., 0.2500, 0.0961, 0.0971],
         [0.0955, 0.0945, 0.0901,  ..., 0.2500, 0.0961, 0.0971],
         [0.0955, 0.0945, 0.0901,  ..., 0.2500, 0.0961, 0.0971],
         [0.7136, 0.7164, 0.7296,  ..., 0.2500, 0.7116, 0.7088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:26,583 [Process: 0] Synchronize training processes
2024-08-16 16:04:26,583 [Process: 0] Evaluating...
2024-08-16 16:04:26,585 [Process: 0] EPOCH 49:
2024-08-16 16:04:26,587 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0754e-01, 1.0472e-01, 1.0702e-01,  ..., 1.0263e-01,
          1.0629e-01, 1.0282e-01],
         [1.0754e-01, 1.0472e-01, 1.0702e-01,  ..., 1.0263e-01,
          1.0629e-01, 1.0282e-01],
         [1.0754e-01, 1.0472e-01, 1.0702e-01,  ..., 1.0263e-01,
          1.0629e-01, 1.0282e-01],
         [6.7737e-01, 6.8585e-01, 6.7894e-01,  ..., 6.9212e-01,
          6.8112e-01, 6.9153e-01]],
        [[1.0095e-01, 1.0639e-01, 1.0002e-01,  ..., 9.7243e-05,
          1.0634e-01, 1.0491e-01],
         [1.0095e-01, 1.0639e-01, 1.0002e-01,  ..., 9.7243e-05,
          1.0634e-01, 1.0491e-01],
         [1.0095e-01, 1.0639e-01, 1.0002e-01,  ..., 9.9971e-01,
          1.0634e-01, 1.0491e-01],
         [6.9714e-01, 6.8082e-01, 6.9994e-01,  ..., 9.7243e-05,
          6.8099e-01, 6.8526e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1028, 0.0923, 0.0930,  ..., 0.0967, 0.0938, 0.0923],
         [0.1028, 0.0923, 0.0930,  ..., 0.0967, 0.0938, 0.0923],
         [0.1028, 0.0923, 0.0930,  ..., 0.0967, 0.0938, 0.0923],
         [0.6915, 0.7232, 0.7211,  ..., 0.7098, 0.7187, 0.7230]],
        [[0.0960, 0.0946, 0.0962,  ..., 0.2500, 0.0910, 0.0909],
         [0.0960, 0.0946, 0.0962,  ..., 0.2500, 0.0910, 0.0909],
         [0.0960, 0.0946, 0.0962,  ..., 0.2500, 0.0910, 0.0909],
         [0.7120, 0.7161, 0.7115,  ..., 0.2500, 0.7270, 0.7274]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:28,572 [Process: 0] Synchronize training processes
2024-08-16 16:04:28,572 [Process: 0] Evaluating...
2024-08-16 16:04:28,574 [Process: 0] EPOCH 50:
2024-08-16 16:04:28,576 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.6971e-02, 1.0510e-01, 1.0222e-01,  ..., 9.9416e-02,
          1.0308e-01, 1.0007e-01],
         [9.6971e-02, 1.0510e-01, 1.0222e-01,  ..., 9.9416e-02,
          1.0308e-01, 1.0007e-01],
         [9.6971e-02, 1.0510e-01, 1.0222e-01,  ..., 9.9416e-02,
          1.0308e-01, 1.0007e-01],
         [7.0909e-01, 6.8470e-01, 6.9335e-01,  ..., 7.0175e-01,
          6.9075e-01, 6.9979e-01]],
        [[1.0247e-01, 9.7754e-02, 1.0430e-01,  ..., 4.8862e-04,
          1.0350e-01, 1.0012e-01],
         [1.0247e-01, 9.7754e-02, 1.0430e-01,  ..., 4.8862e-04,
          1.0350e-01, 1.0012e-01],
         [1.0247e-01, 9.7754e-02, 1.0430e-01,  ..., 9.9853e-01,
          1.0350e-01, 1.0012e-01],
         [6.9258e-01, 7.0674e-01, 6.8711e-01,  ..., 4.8862e-04,
          6.8950e-01, 6.9965e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0988, 0.0954, 0.0909,  ..., 0.0957, 0.0930, 0.0911],
         [0.0988, 0.0954, 0.0909,  ..., 0.0957, 0.0930, 0.0911],
         [0.0988, 0.0954, 0.0909,  ..., 0.0957, 0.0930, 0.0911],
         [0.7036, 0.7139, 0.7274,  ..., 0.7128, 0.7209, 0.7267]],
        [[0.0991, 0.0891, 0.0903,  ..., 0.2500, 0.0921, 0.0919],
         [0.0991, 0.0891, 0.0903,  ..., 0.2500, 0.0921, 0.0919],
         [0.0991, 0.0891, 0.0903,  ..., 0.2500, 0.0921, 0.0919],
         [0.7027, 0.7326, 0.7290,  ..., 0.2500, 0.7236, 0.7242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:30,513 [Process: 0] Synchronize training processes
2024-08-16 16:04:30,514 [Process: 0] Evaluating...
2024-08-16 16:04:30,515 [Process: 0] EPOCH 51:
2024-08-16 16:04:30,517 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1015, 0.1054, 0.1039,  ..., 0.1029, 0.0993, 0.1018],
         [0.1015, 0.1054, 0.1039,  ..., 0.1029, 0.0993, 0.1018],
         [0.1015, 0.1054, 0.1039,  ..., 0.1029, 0.0993, 0.1018],
         [0.6955, 0.6839, 0.6883,  ..., 0.6913, 0.7020, 0.6947]],
        [[0.1009, 0.0990, 0.1015,  ..., 0.0012, 0.0988, 0.0988],
         [0.1009, 0.0990, 0.1015,  ..., 0.0012, 0.0988, 0.0988],
         [0.1009, 0.0990, 0.1015,  ..., 0.9963, 0.0988, 0.0988],
         [0.6973, 0.7030, 0.6954,  ..., 0.0012, 0.7037, 0.7035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0941, 0.0877, 0.0898,  ..., 0.0894, 0.0889, 0.0909],
         [0.0941, 0.0877, 0.0898,  ..., 0.0894, 0.0889, 0.0909],
         [0.0941, 0.0877, 0.0898,  ..., 0.0894, 0.0889, 0.0909],
         [0.7176, 0.7368, 0.7307,  ..., 0.7318, 0.7334, 0.7274]],
        [[0.0917, 0.0961, 0.0901,  ..., 0.2500, 0.0836, 0.0946],
         [0.0917, 0.0961, 0.0901,  ..., 0.2500, 0.0836, 0.0946],
         [0.0917, 0.0961, 0.0901,  ..., 0.2500, 0.0836, 0.0946],
         [0.7248, 0.7116, 0.7298,  ..., 0.2500, 0.7492, 0.7162]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:32,505 [Process: 0] Synchronize training processes
2024-08-16 16:04:32,506 [Process: 0] Evaluating...
2024-08-16 16:04:32,514 [Process: 0] EPOCH 52:
2024-08-16 16:04:32,516 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0958, 0.0947, 0.0969,  ..., 0.0964, 0.0965, 0.0976],
         [0.0958, 0.0947, 0.0969,  ..., 0.0964, 0.0965, 0.0976],
         [0.0958, 0.0947, 0.0969,  ..., 0.0964, 0.0965, 0.0976],
         [0.7126, 0.7158, 0.7092,  ..., 0.7109, 0.7105, 0.7073]],
        [[0.1009, 0.1055, 0.0938,  ..., 0.0088, 0.1011, 0.0988],
         [0.1009, 0.1055, 0.0938,  ..., 0.0088, 0.1011, 0.0988],
         [0.1009, 0.1055, 0.0938,  ..., 0.9736, 0.1011, 0.0988],
         [0.6973, 0.6836, 0.7187,  ..., 0.0088, 0.6966, 0.7036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0848, 0.0940, 0.0825,  ..., 0.0846, 0.0936, 0.0850],
         [0.0848, 0.0940, 0.0825,  ..., 0.0846, 0.0936, 0.0850],
         [0.0848, 0.0940, 0.0825,  ..., 0.0846, 0.0936, 0.0850],
         [0.7456, 0.7180, 0.7525,  ..., 0.7463, 0.7192, 0.7450]],
        [[0.0873, 0.0876, 0.0851,  ..., 0.2500, 0.0951, 0.0890],
         [0.0873, 0.0876, 0.0851,  ..., 0.2500, 0.0951, 0.0890],
         [0.0873, 0.0876, 0.0851,  ..., 0.2500, 0.0951, 0.0890],
         [0.7382, 0.7373, 0.7447,  ..., 0.2500, 0.7147, 0.7331]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:34,510 [Process: 0] Synchronize training processes
2024-08-16 16:04:34,510 [Process: 0] Evaluating...
2024-08-16 16:04:34,512 [Process: 0] EPOCH 53:
2024-08-16 16:04:34,514 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0931, 0.0965, 0.1015,  ..., 0.0981, 0.0983, 0.0985],
         [0.0931, 0.0965, 0.1015,  ..., 0.0981, 0.0983, 0.0985],
         [0.0931, 0.0965, 0.1015,  ..., 0.0981, 0.0983, 0.0985],
         [0.7207, 0.7105, 0.6955,  ..., 0.7056, 0.7052, 0.7044]],
        [[0.0968, 0.0970, 0.1007,  ..., 0.0030, 0.0942, 0.0998],
         [0.0968, 0.0970, 0.1007,  ..., 0.0030, 0.0942, 0.0998],
         [0.0968, 0.0970, 0.1007,  ..., 0.9910, 0.0942, 0.0998],
         [0.7095, 0.7089, 0.6978,  ..., 0.0030, 0.7173, 0.7005]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0855, 0.0840, 0.0860,  ..., 0.0900, 0.0852, 0.0821],
         [0.0855, 0.0840, 0.0860,  ..., 0.0904, 0.0852, 0.0821],
         [0.0855, 0.0840, 0.0860,  ..., 0.0900, 0.0852, 0.0821],
         [0.7434, 0.7479, 0.7420,  ..., 0.7295, 0.7444, 0.7537]],
        [[0.0911, 0.0882, 0.0911,  ..., 0.2311, 0.0880, 0.0820],
         [0.0920, 0.0882, 0.0911,  ..., 0.2311, 0.0891, 0.0820],
         [0.0911, 0.0882, 0.0911,  ..., 0.3067, 0.0880, 0.0820],
         [0.7257, 0.7354, 0.7267,  ..., 0.2311, 0.7349, 0.7539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:36,597 [Process: 0] Synchronize training processes
2024-08-16 16:04:36,598 [Process: 0] Evaluating...
2024-08-16 16:04:36,600 [Process: 0] EPOCH 54:
2024-08-16 16:04:36,602 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0014e-01, 9.4338e-02, 1.0602e-01,  ..., 9.2444e-02,
          9.8578e-02, 1.0230e-01],
         [1.0014e-01, 9.4338e-02, 1.0602e-01,  ..., 9.2444e-02,
          9.8578e-02, 1.0230e-01],
         [1.0014e-01, 9.4338e-02, 1.0602e-01,  ..., 9.2444e-02,
          9.8578e-02, 1.0230e-01],
         [6.9959e-01, 7.1698e-01, 6.8193e-01,  ..., 7.2267e-01,
          7.0427e-01, 6.9310e-01]],
        [[9.4856e-02, 9.6493e-02, 9.6645e-02,  ..., 7.3116e-04,
          9.4557e-02, 9.1844e-02],
         [9.4856e-02, 9.6493e-02, 9.6645e-02,  ..., 7.3116e-04,
          9.4557e-02, 9.1844e-02],
         [9.4856e-02, 9.6493e-02, 9.6645e-02,  ..., 9.9781e-01,
          9.4557e-02, 9.1844e-02],
         [7.1543e-01, 7.1052e-01, 7.1007e-01,  ..., 7.3116e-04,
          7.1633e-01, 7.2447e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0923, 0.0816, 0.0927,  ..., 0.0883, 0.0883, 0.0922],
         [0.0923, 0.0816, 0.0927,  ..., 0.0883, 0.0883, 0.0922],
         [0.0923, 0.0816, 0.0927,  ..., 0.0883, 0.0883, 0.0922],
         [0.7230, 0.7552, 0.7218,  ..., 0.7352, 0.7352, 0.7235]],
        [[0.0840, 0.0840, 0.0926,  ..., 0.2500, 0.0874, 0.0827],
         [0.0840, 0.0840, 0.0926,  ..., 0.2500, 0.0874, 0.0827],
         [0.0840, 0.0840, 0.0926,  ..., 0.2500, 0.0874, 0.0827],
         [0.7481, 0.7481, 0.7221,  ..., 0.2500, 0.7377, 0.7519]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:38,672 [Process: 0] Synchronize training processes
2024-08-16 16:04:38,673 [Process: 0] Evaluating...
2024-08-16 16:04:38,675 [Process: 0] EPOCH 55:
2024-08-16 16:04:38,677 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0990, 0.0988, 0.0982,  ..., 0.0971, 0.0971, 0.1033],
         [0.0990, 0.0988, 0.0982,  ..., 0.0971, 0.0971, 0.1033],
         [0.0990, 0.0988, 0.0982,  ..., 0.0971, 0.0971, 0.1033],
         [0.7029, 0.7035, 0.7054,  ..., 0.7087, 0.7087, 0.6902]],
        [[0.0975, 0.0967, 0.0946,  ..., 0.0047, 0.0934, 0.0943],
         [0.0975, 0.0967, 0.0946,  ..., 0.0047, 0.0934, 0.0943],
         [0.0975, 0.0967, 0.0946,  ..., 0.9859, 0.0934, 0.0943],
         [0.7075, 0.7100, 0.7163,  ..., 0.0047, 0.7198, 0.7172]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0828, 0.0825, 0.0837,  ..., 0.0843, 0.0933, 0.0814],
         [0.0828, 0.0825, 0.0837,  ..., 0.0843, 0.0933, 0.0814],
         [0.0828, 0.0825, 0.0837,  ..., 0.0843, 0.0933, 0.0814],
         [0.7516, 0.7526, 0.7490,  ..., 0.7471, 0.7202, 0.7559]],
        [[0.0865, 0.0808, 0.0836,  ..., 0.2371, 0.0862, 0.0789],
         [0.0865, 0.0808, 0.0838,  ..., 0.2371, 0.0864, 0.0789],
         [0.0865, 0.0808, 0.0836,  ..., 0.2887, 0.0862, 0.0789],
         [0.7406, 0.7575, 0.7489,  ..., 0.2371, 0.7413, 0.7634]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:40,794 [Process: 0] Synchronize training processes
2024-08-16 16:04:40,794 [Process: 0] Evaluating...
2024-08-16 16:04:40,796 [Process: 0] EPOCH 56:
2024-08-16 16:04:40,798 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0989, 0.0913, 0.0986,  ..., 0.0971, 0.0960, 0.0978],
         [0.0989, 0.0913, 0.0986,  ..., 0.0971, 0.0960, 0.0978],
         [0.0989, 0.0913, 0.0986,  ..., 0.0971, 0.0960, 0.0978],
         [0.7032, 0.7261, 0.7043,  ..., 0.7088, 0.7121, 0.7067]],
        [[0.1003, 0.0929, 0.0960,  ..., 0.0037, 0.0951, 0.0973],
         [0.1003, 0.0929, 0.0960,  ..., 0.0037, 0.0951, 0.0973],
         [0.1003, 0.0929, 0.0960,  ..., 0.9889, 0.0951, 0.0973],
         [0.6992, 0.7212, 0.7119,  ..., 0.0037, 0.7148, 0.7081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0846, 0.0806, 0.0804,  ..., 0.0811, 0.0864, 0.0865],
         [0.0846, 0.0806, 0.0804,  ..., 0.0811, 0.0864, 0.0865],
         [0.0846, 0.0806, 0.0804,  ..., 0.0811, 0.0864, 0.0865],
         [0.7461, 0.7582, 0.7587,  ..., 0.7568, 0.7407, 0.7406]],
        [[0.0789, 0.0784, 0.0823,  ..., 0.2429, 0.0906, 0.0825],
         [0.0789, 0.0784, 0.0823,  ..., 0.2429, 0.0906, 0.0825],
         [0.0789, 0.0784, 0.0823,  ..., 0.2714, 0.0906, 0.0825],
         [0.7632, 0.7648, 0.7530,  ..., 0.2429, 0.7281, 0.7526]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:42,885 [Process: 0] Synchronize training processes
2024-08-16 16:04:42,886 [Process: 0] Evaluating...
2024-08-16 16:04:42,888 [Process: 0] EPOCH 57:
2024-08-16 16:04:42,890 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.7155e-02, 9.1660e-02, 9.8930e-02,  ..., 9.5279e-02,
          9.3780e-02, 9.5424e-02],
         [9.7155e-02, 9.1660e-02, 9.8930e-02,  ..., 9.5279e-02,
          9.3780e-02, 9.5424e-02],
         [9.7155e-02, 9.1660e-02, 9.8930e-02,  ..., 9.5279e-02,
          9.3780e-02, 9.5424e-02],
         [7.0853e-01, 7.2502e-01, 7.0321e-01,  ..., 7.1416e-01,
          7.1866e-01, 7.1373e-01]],
        [[9.1881e-02, 9.3584e-02, 9.2509e-02,  ..., 4.2376e-05,
          9.3759e-02, 9.5537e-02],
         [9.1881e-02, 9.3584e-02, 9.2509e-02,  ..., 4.2376e-05,
          9.3759e-02, 9.5537e-02],
         [9.1881e-02, 9.3584e-02, 9.2509e-02,  ..., 9.9987e-01,
          9.3759e-02, 9.5537e-02],
         [7.2436e-01, 7.1925e-01, 7.2247e-01,  ..., 4.2376e-05,
          7.1872e-01, 7.1339e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0910, 0.0932, 0.0879,  ..., 0.0825, 0.0853, 0.0867],
         [0.0910, 0.0932, 0.0879,  ..., 0.0825, 0.0853, 0.0867],
         [0.0910, 0.0932, 0.0879,  ..., 0.0825, 0.0853, 0.0867],
         [0.7271, 0.7205, 0.7362,  ..., 0.7525, 0.7442, 0.7398]],
        [[0.0921, 0.0986, 0.0906,  ..., 0.2380, 0.0998, 0.0861],
         [0.0921, 0.0986, 0.0906,  ..., 0.2380, 0.0998, 0.0861],
         [0.0921, 0.0986, 0.0906,  ..., 0.2861, 0.0998, 0.0861],
         [0.7237, 0.7043, 0.7282,  ..., 0.2380, 0.7007, 0.7418]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:44,973 [Process: 0] Synchronize training processes
2024-08-16 16:04:44,973 [Process: 0] Evaluating...
2024-08-16 16:04:44,975 [Process: 0] EPOCH 58:
2024-08-16 16:04:44,977 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.5738e-02, 9.1439e-02, 8.9269e-02,  ..., 9.0748e-02,
          9.7058e-02, 9.0807e-02],
         [8.5738e-02, 9.1439e-02, 8.9269e-02,  ..., 9.0748e-02,
          9.7058e-02, 9.0807e-02],
         [8.5738e-02, 9.1439e-02, 8.9269e-02,  ..., 9.0748e-02,
          9.7058e-02, 9.0807e-02],
         [7.4279e-01, 7.2568e-01, 7.3219e-01,  ..., 7.2776e-01,
          7.0883e-01, 7.2758e-01]],
        [[9.5032e-02, 9.5879e-02, 9.8974e-02,  ..., 7.2141e-06,
          9.6155e-02, 9.2825e-02],
         [9.5032e-02, 9.5879e-02, 9.8974e-02,  ..., 7.2141e-06,
          9.6155e-02, 9.2825e-02],
         [9.5032e-02, 9.5879e-02, 9.8974e-02,  ..., 9.9998e-01,
          9.6155e-02, 9.2825e-02],
         [7.1490e-01, 7.1236e-01, 7.0308e-01,  ..., 7.2141e-06,
          7.1154e-01, 7.2152e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0801, 0.0896, 0.0870,  ..., 0.0864, 0.0888, 0.0875],
         [0.0801, 0.0896, 0.0870,  ..., 0.0864, 0.0888, 0.0875],
         [0.0801, 0.0896, 0.0870,  ..., 0.0864, 0.0888, 0.0875],
         [0.7598, 0.7312, 0.7390,  ..., 0.7408, 0.7336, 0.7375]],
        [[0.0945, 0.0892, 0.0932,  ..., 0.2500, 0.0894, 0.0850],
         [0.0945, 0.0892, 0.0932,  ..., 0.2500, 0.0894, 0.0850],
         [0.0945, 0.0892, 0.0932,  ..., 0.2500, 0.0894, 0.0850],
         [0.7166, 0.7323, 0.7204,  ..., 0.2500, 0.7317, 0.7451]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:47,007 [Process: 0] Synchronize training processes
2024-08-16 16:04:47,007 [Process: 0] Evaluating...
2024-08-16 16:04:47,010 [Process: 0] EPOCH 59:
2024-08-16 16:04:47,012 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0854, 0.0865, 0.0854,  ..., 0.0888, 0.0849, 0.0818],
         [0.0854, 0.0865, 0.0854,  ..., 0.0888, 0.0849, 0.0818],
         [0.0854, 0.0865, 0.0854,  ..., 0.0888, 0.0849, 0.0818],
         [0.7437, 0.7406, 0.7437,  ..., 0.7337, 0.7452, 0.7547]],
        [[0.0894, 0.0887, 0.0921,  ..., 0.0029, 0.0969, 0.0908],
         [0.0894, 0.0887, 0.0921,  ..., 0.0029, 0.0969, 0.0908],
         [0.0894, 0.0887, 0.0921,  ..., 0.9913, 0.0969, 0.0908],
         [0.7318, 0.7338, 0.7236,  ..., 0.0029, 0.7094, 0.7275]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0757, 0.0736, 0.0764,  ..., 0.0739, 0.0740, 0.0730],
         [0.0757, 0.0736, 0.0764,  ..., 0.0739, 0.0740, 0.0730],
         [0.0757, 0.0736, 0.0764,  ..., 0.0739, 0.0740, 0.0730],
         [0.7728, 0.7792, 0.7709,  ..., 0.7782, 0.7779, 0.7809]],
        [[0.0784, 0.0731, 0.0812,  ..., 0.2500, 0.0745, 0.0772],
         [0.0784, 0.0731, 0.0812,  ..., 0.2500, 0.0745, 0.0772],
         [0.0784, 0.0731, 0.0812,  ..., 0.2500, 0.0745, 0.0772],
         [0.7648, 0.7806, 0.7565,  ..., 0.2500, 0.7766, 0.7683]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:49,025 [Process: 0] Synchronize training processes
2024-08-16 16:04:49,025 [Process: 0] Evaluating...
2024-08-16 16:04:49,027 [Process: 0] EPOCH 60:
2024-08-16 16:04:49,029 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0902, 0.0909, 0.0864,  ..., 0.0934, 0.0894, 0.0850],
         [0.0902, 0.0909, 0.0864,  ..., 0.0934, 0.0894, 0.0850],
         [0.0902, 0.0909, 0.0864,  ..., 0.0934, 0.0894, 0.0850],
         [0.7293, 0.7273, 0.7408,  ..., 0.7199, 0.7319, 0.7449]],
        [[0.0890, 0.0889, 0.0920,  ..., 0.0440, 0.0904, 0.0936],
         [0.0890, 0.0889, 0.0920,  ..., 0.0440, 0.0904, 0.0936],
         [0.0890, 0.0889, 0.0920,  ..., 0.8681, 0.0904, 0.0936],
         [0.7331, 0.7334, 0.7240,  ..., 0.0440, 0.7287, 0.7192]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0832, 0.0890, 0.0845,  ..., 0.0813, 0.0841, 0.0835],
         [0.0832, 0.0890, 0.0845,  ..., 0.0813, 0.0841, 0.0835],
         [0.0832, 0.0890, 0.0845,  ..., 0.0813, 0.0841, 0.0835],
         [0.7504, 0.7331, 0.7465,  ..., 0.7562, 0.7476, 0.7494]],
        [[0.0833, 0.0906, 0.0916,  ..., 0.2493, 0.0846, 0.0837],
         [0.0833, 0.0906, 0.0916,  ..., 0.2493, 0.0846, 0.0837],
         [0.0833, 0.0906, 0.0916,  ..., 0.2520, 0.0846, 0.0837],
         [0.7500, 0.7281, 0.7252,  ..., 0.2493, 0.7463, 0.7488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:51,020 [Process: 0] Synchronize training processes
2024-08-16 16:04:51,020 [Process: 0] Evaluating...
2024-08-16 16:04:51,022 [Process: 0] EPOCH 61:
2024-08-16 16:04:51,024 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0910, 0.0865, 0.0868,  ..., 0.0827, 0.0892, 0.0910],
         [0.0908, 0.0865, 0.0867,  ..., 0.0827, 0.0892, 0.0910],
         [0.0908, 0.0865, 0.0867,  ..., 0.0827, 0.0892, 0.0910],
         [0.7275, 0.7406, 0.7399,  ..., 0.7518, 0.7323, 0.7270]],
        [[0.0804, 0.0875, 0.0897,  ..., 0.0135, 0.0806, 0.0877],
         [0.0804, 0.0875, 0.0897,  ..., 0.0135, 0.0806, 0.0877],
         [0.0804, 0.0875, 0.0897,  ..., 0.9594, 0.0806, 0.0877],
         [0.7588, 0.7375, 0.7310,  ..., 0.0135, 0.7582, 0.7368]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0782, 0.0670, 0.0689,  ..., 0.0579, 0.0650, 0.0689],
         [0.0782, 0.0673, 0.0689,  ..., 0.0579, 0.0650, 0.0689],
         [0.0782, 0.0670, 0.0689,  ..., 0.0579, 0.0650, 0.0689],
         [0.7654, 0.7987, 0.7932,  ..., 0.8263, 0.8050, 0.7933]],
        [[0.0730, 0.0678, 0.0719,  ..., 0.2125, 0.0684, 0.0651],
         [0.0728, 0.0678, 0.0719,  ..., 0.2125, 0.0684, 0.0649],
         [0.0728, 0.0678, 0.0719,  ..., 0.3626, 0.0684, 0.0649],
         [0.7814, 0.7967, 0.7844,  ..., 0.2125, 0.7948, 0.8051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:53,072 [Process: 0] Synchronize training processes
2024-08-16 16:04:53,072 [Process: 0] Evaluating...
2024-08-16 16:04:53,080 [Process: 0] EPOCH 62:
2024-08-16 16:04:53,082 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0909, 0.0879, 0.0879,  ..., 0.0850, 0.0873, 0.0806],
         [0.0904, 0.0887, 0.0863,  ..., 0.0855, 0.0868, 0.0809],
         [0.0893, 0.0868, 0.0859,  ..., 0.0847, 0.0868, 0.0806],
         [0.7294, 0.7366, 0.7400,  ..., 0.7447, 0.7390, 0.7578]],
        [[0.0877, 0.0831, 0.0856,  ..., 0.0031, 0.0848, 0.0892],
         [0.0874, 0.0833, 0.0856,  ..., 0.0031, 0.0831, 0.0886],
         [0.0874, 0.0829, 0.0856,  ..., 0.9907, 0.0831, 0.0876],
         [0.7375, 0.7507, 0.7433,  ..., 0.0031, 0.7490, 0.7346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0762, 0.0760, 0.0776,  ..., 0.0716, 0.0796, 0.0783],
         [0.0762, 0.0760, 0.0776,  ..., 0.0716, 0.0796, 0.0783],
         [0.0762, 0.0760, 0.0776,  ..., 0.0716, 0.0796, 0.0783],
         [0.7714, 0.7719, 0.7673,  ..., 0.7853, 0.7613, 0.7652]],
        [[0.0741, 0.0776, 0.0760,  ..., 0.1704, 0.0802, 0.0799],
         [0.0741, 0.0776, 0.0760,  ..., 0.1704, 0.0802, 0.0799],
         [0.0741, 0.0776, 0.0760,  ..., 0.4889, 0.0802, 0.0799],
         [0.7778, 0.7673, 0.7719,  ..., 0.1704, 0.7595, 0.7604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:55,112 [Process: 0] Synchronize training processes
2024-08-16 16:04:55,113 [Process: 0] Evaluating...
2024-08-16 16:04:55,115 [Process: 0] EPOCH 63:
2024-08-16 16:04:55,117 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2864e-02, 8.8062e-02, 8.1444e-02,  ..., 7.9765e-02,
          8.1266e-02, 8.9591e-02],
         [8.2864e-02, 8.8062e-02, 8.1444e-02,  ..., 7.9765e-02,
          8.1266e-02, 8.9591e-02],
         [8.2864e-02, 8.8062e-02, 8.1444e-02,  ..., 7.9765e-02,
          8.1266e-02, 8.9591e-02],
         [7.5141e-01, 7.3582e-01, 7.5567e-01,  ..., 7.6071e-01,
          7.5620e-01, 7.3123e-01]],
        [[8.7083e-02, 8.1169e-02, 7.9622e-02,  ..., 1.8244e-05,
          8.2309e-02, 7.8912e-02],
         [8.7083e-02, 8.1169e-02, 7.9622e-02,  ..., 1.8244e-05,
          8.2309e-02, 7.8912e-02],
         [8.7083e-02, 8.1169e-02, 7.9622e-02,  ..., 9.9995e-01,
          8.2309e-02, 7.8912e-02],
         [7.3875e-01, 7.5649e-01, 7.6113e-01,  ..., 1.8244e-05,
          7.5307e-01, 7.6326e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0847, 0.0856, 0.0857,  ..., 0.0860, 0.0894, 0.0802],
         [0.0847, 0.0856, 0.0857,  ..., 0.0860, 0.0894, 0.0802],
         [0.0847, 0.0856, 0.0857,  ..., 0.0860, 0.0894, 0.0802],
         [0.7459, 0.7431, 0.7428,  ..., 0.7419, 0.7319, 0.7595]],
        [[0.0792, 0.0827, 0.0806,  ..., 0.2079, 0.0779, 0.0866],
         [0.0792, 0.0827, 0.0806,  ..., 0.2079, 0.0779, 0.0866],
         [0.0792, 0.0827, 0.0806,  ..., 0.3763, 0.0779, 0.0866],
         [0.7624, 0.7519, 0.7582,  ..., 0.2079, 0.7663, 0.7403]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:57,025 [Process: 0] Synchronize training processes
2024-08-16 16:04:57,025 [Process: 0] Evaluating...
2024-08-16 16:04:57,027 [Process: 0] EPOCH 64:
2024-08-16 16:04:57,029 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.9242e-02, 8.0810e-02, 8.0098e-02,  ..., 8.3882e-02,
          8.0871e-02, 7.7094e-02],
         [7.9242e-02, 8.0810e-02, 8.0098e-02,  ..., 8.3882e-02,
          8.0871e-02, 7.7094e-02],
         [7.9242e-02, 8.0810e-02, 8.0098e-02,  ..., 8.3882e-02,
          8.0871e-02, 7.7094e-02],
         [7.6227e-01, 7.5757e-01, 7.5971e-01,  ..., 7.4836e-01,
          7.5739e-01, 7.6872e-01]],
        [[8.0096e-02, 7.7037e-02, 8.1622e-02,  ..., 5.2950e-05,
          8.1767e-02, 8.2146e-02],
         [8.0096e-02, 7.7037e-02, 8.1622e-02,  ..., 5.2950e-05,
          8.1767e-02, 8.2146e-02],
         [8.0096e-02, 7.7037e-02, 8.1622e-02,  ..., 9.9984e-01,
          8.1767e-02, 8.2146e-02],
         [7.5971e-01, 7.6889e-01, 7.5513e-01,  ..., 5.2950e-05,
          7.5470e-01, 7.5356e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0840, 0.0782, 0.0787,  ..., 0.0803, 0.0796, 0.0853],
         [0.0840, 0.0782, 0.0787,  ..., 0.0803, 0.0796, 0.0853],
         [0.0840, 0.0782, 0.0787,  ..., 0.0803, 0.0796, 0.0853],
         [0.7479, 0.7653, 0.7639,  ..., 0.7591, 0.7613, 0.7440]],
        [[0.0813, 0.0849, 0.0797,  ..., 0.2525, 0.0821, 0.0784],
         [0.0813, 0.0849, 0.0797,  ..., 0.2268, 0.0821, 0.0784],
         [0.0813, 0.0849, 0.0797,  ..., 0.2939, 0.0821, 0.0784],
         [0.7562, 0.7453, 0.7610,  ..., 0.2268, 0.7537, 0.7648]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:04:58,942 [Process: 0] Synchronize training processes
2024-08-16 16:04:58,942 [Process: 0] Evaluating...
2024-08-16 16:04:58,944 [Process: 0] EPOCH 65:
2024-08-16 16:04:58,946 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0829, 0.0735, 0.0798,  ..., 0.0841, 0.0805, 0.0819],
         [0.0829, 0.0735, 0.0798,  ..., 0.0841, 0.0805, 0.0819],
         [0.0829, 0.0735, 0.0798,  ..., 0.0841, 0.0805, 0.0819],
         [0.7513, 0.7795, 0.7606,  ..., 0.7478, 0.7586, 0.7542]],
        [[0.0821, 0.0777, 0.0831,  ..., 0.0013, 0.0819, 0.0829],
         [0.0821, 0.0777, 0.0831,  ..., 0.0013, 0.0819, 0.0829],
         [0.0821, 0.0777, 0.0831,  ..., 0.9960, 0.0819, 0.0829],
         [0.7537, 0.7669, 0.7508,  ..., 0.0013, 0.7542, 0.7514]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0762, 0.0718, 0.0723,  ..., 0.0712, 0.0771, 0.0746],
         [0.0762, 0.0718, 0.0723,  ..., 0.0712, 0.0771, 0.0746],
         [0.0762, 0.0718, 0.0723,  ..., 0.0712, 0.0771, 0.0746],
         [0.7713, 0.7847, 0.7832,  ..., 0.7863, 0.7686, 0.7763]],
        [[0.0730, 0.0809, 0.0718,  ..., 0.2467, 0.0770, 0.0691],
         [0.0730, 0.0809, 0.0718,  ..., 0.2127, 0.0770, 0.0691],
         [0.0730, 0.0809, 0.0718,  ..., 0.3280, 0.0770, 0.0691],
         [0.7811, 0.7572, 0.7847,  ..., 0.2127, 0.7690, 0.7926]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:00,865 [Process: 0] Synchronize training processes
2024-08-16 16:05:00,865 [Process: 0] Evaluating...
2024-08-16 16:05:00,867 [Process: 0] EPOCH 66:
2024-08-16 16:05:00,869 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0793, 0.0802, 0.0775,  ..., 0.0784, 0.0842, 0.0863],
         [0.0793, 0.0802, 0.0775,  ..., 0.0784, 0.0842, 0.0863],
         [0.0793, 0.0802, 0.0775,  ..., 0.0784, 0.0842, 0.0863],
         [0.7620, 0.7594, 0.7676,  ..., 0.7648, 0.7473, 0.7411]],
        [[0.0765, 0.0810, 0.0807,  ..., 0.0014, 0.0771, 0.0776],
         [0.0765, 0.0810, 0.0807,  ..., 0.0014, 0.0771, 0.0776],
         [0.0765, 0.0810, 0.0807,  ..., 0.9958, 0.0771, 0.0776],
         [0.7706, 0.7571, 0.7580,  ..., 0.0014, 0.7686, 0.7673]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0771, 0.0817, 0.0782,  ..., 0.0801, 0.0791, 0.0793],
         [0.0771, 0.0817, 0.0782,  ..., 0.0801, 0.0791, 0.0793],
         [0.0771, 0.0817, 0.0782,  ..., 0.0801, 0.0791, 0.0793],
         [0.7686, 0.7548, 0.7653,  ..., 0.7598, 0.7626, 0.7620]],
        [[0.0767, 0.0742, 0.0762,  ..., 0.1945, 0.0753, 0.0780],
         [0.0767, 0.0742, 0.0762,  ..., 0.1945, 0.0753, 0.0780],
         [0.0767, 0.0742, 0.0762,  ..., 0.4164, 0.0753, 0.0780],
         [0.7700, 0.7775, 0.7714,  ..., 0.1945, 0.7742, 0.7661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:02,779 [Process: 0] Synchronize training processes
2024-08-16 16:05:02,779 [Process: 0] Evaluating...
2024-08-16 16:05:02,781 [Process: 0] EPOCH 67:
2024-08-16 16:05:02,783 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0776, 0.0771, 0.0797,  ..., 0.0815, 0.0816, 0.0825],
         [0.0776, 0.0771, 0.0797,  ..., 0.0815, 0.0816, 0.0825],
         [0.0776, 0.0771, 0.0797,  ..., 0.0815, 0.0816, 0.0825],
         [0.7672, 0.7687, 0.7608,  ..., 0.7554, 0.7551, 0.7525]],
        [[0.0792, 0.0788, 0.0778,  ..., 0.0015, 0.0774, 0.0780],
         [0.0792, 0.0788, 0.0778,  ..., 0.0015, 0.0774, 0.0780],
         [0.0792, 0.0788, 0.0778,  ..., 0.9954, 0.0774, 0.0780],
         [0.7624, 0.7635, 0.7665,  ..., 0.0015, 0.7679, 0.7661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0704, 0.0628, 0.0651,  ..., 0.0631, 0.0706, 0.0669],
         [0.0704, 0.0628, 0.0651,  ..., 0.0631, 0.0706, 0.0669],
         [0.0704, 0.0628, 0.0651,  ..., 0.0631, 0.0706, 0.0669],
         [0.7887, 0.8116, 0.8048,  ..., 0.8108, 0.7883, 0.7994]],
        [[0.0725, 0.0688, 0.0691,  ..., 0.2692, 0.0693, 0.0711],
         [0.0725, 0.0688, 0.0691,  ..., 0.2436, 0.0693, 0.0711],
         [0.0725, 0.0688, 0.0691,  ..., 0.2436, 0.0693, 0.0711],
         [0.7825, 0.7937, 0.7928,  ..., 0.2436, 0.7921, 0.7866]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:04,712 [Process: 0] Synchronize training processes
2024-08-16 16:05:04,713 [Process: 0] Evaluating...
2024-08-16 16:05:04,714 [Process: 0] EPOCH 68:
2024-08-16 16:05:04,716 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0756, 0.0735, 0.0775,  ..., 0.0798, 0.0817, 0.0851],
         [0.0756, 0.0735, 0.0775,  ..., 0.0798, 0.0817, 0.0851],
         [0.0756, 0.0735, 0.0775,  ..., 0.0798, 0.0817, 0.0851],
         [0.7733, 0.7794, 0.7676,  ..., 0.7605, 0.7548, 0.7446]],
        [[0.0781, 0.0759, 0.0764,  ..., 0.0026, 0.0781, 0.0771],
         [0.0781, 0.0759, 0.0764,  ..., 0.0026, 0.0781, 0.0771],
         [0.0781, 0.0759, 0.0764,  ..., 0.9922, 0.0781, 0.0771],
         [0.7658, 0.7722, 0.7707,  ..., 0.0026, 0.7658, 0.7687]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0784, 0.0807, 0.0744,  ..., 0.0727, 0.0764, 0.0744],
         [0.0784, 0.0807, 0.0744,  ..., 0.0727, 0.0764, 0.0744],
         [0.0784, 0.0807, 0.0744,  ..., 0.0727, 0.0764, 0.0744],
         [0.7648, 0.7580, 0.7768,  ..., 0.7818, 0.7707, 0.7767]],
        [[0.0781, 0.0789, 0.0767,  ..., 0.3647, 0.0772, 0.0753],
         [0.0781, 0.0789, 0.0767,  ..., 0.1841, 0.0772, 0.0753],
         [0.0781, 0.0789, 0.0767,  ..., 0.2671, 0.0772, 0.0753],
         [0.7657, 0.7634, 0.7699,  ..., 0.1841, 0.7684, 0.7741]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:06,636 [Process: 0] Synchronize training processes
2024-08-16 16:05:06,637 [Process: 0] Evaluating...
2024-08-16 16:05:06,639 [Process: 0] EPOCH 69:
2024-08-16 16:05:06,641 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.3544e-02, 7.6051e-02, 7.5971e-02,  ..., 7.4070e-02,
          8.0410e-02, 7.5767e-02],
         [7.3544e-02, 7.6051e-02, 7.5971e-02,  ..., 7.4070e-02,
          8.0410e-02, 7.5767e-02],
         [7.3544e-02, 7.6051e-02, 7.5971e-02,  ..., 7.4070e-02,
          8.0410e-02, 7.5767e-02],
         [7.7937e-01, 7.7185e-01, 7.7209e-01,  ..., 7.7779e-01,
          7.5877e-01, 7.7270e-01]],
        [[7.3946e-02, 7.3092e-02, 7.8732e-02,  ..., 5.1044e-04,
          7.3949e-02, 7.6855e-02],
         [7.3946e-02, 7.3092e-02, 7.8732e-02,  ..., 5.1044e-04,
          7.3949e-02, 7.6855e-02],
         [7.3946e-02, 7.3092e-02, 7.8732e-02,  ..., 9.9847e-01,
          7.3949e-02, 7.6855e-02],
         [7.7816e-01, 7.8072e-01, 7.6380e-01,  ..., 5.1044e-04,
          7.7815e-01, 7.6944e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0690, 0.0737, 0.0765,  ..., 0.0756, 0.0740, 0.0736],
         [0.0690, 0.0737, 0.0765,  ..., 0.0756, 0.0740, 0.0736],
         [0.0690, 0.0737, 0.0765,  ..., 0.0756, 0.0740, 0.0736],
         [0.7931, 0.7789, 0.7704,  ..., 0.7731, 0.7780, 0.7792]],
        [[0.0706, 0.0729, 0.0736,  ..., 0.2829, 0.0784, 0.0742],
         [0.0706, 0.0729, 0.0736,  ..., 0.1963, 0.0784, 0.0742],
         [0.0706, 0.0729, 0.0736,  ..., 0.3245, 0.0784, 0.0742],
         [0.7881, 0.7814, 0.7792,  ..., 0.1963, 0.7647, 0.7774]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:08,552 [Process: 0] Synchronize training processes
2024-08-16 16:05:08,553 [Process: 0] Evaluating...
2024-08-16 16:05:08,555 [Process: 0] EPOCH 70:
2024-08-16 16:05:08,557 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0723, 0.0733, 0.0728,  ..., 0.0765, 0.0846, 0.0768],
         [0.0723, 0.0733, 0.0728,  ..., 0.0765, 0.0846, 0.0768],
         [0.0723, 0.0733, 0.0728,  ..., 0.0765, 0.0846, 0.0768],
         [0.7830, 0.7800, 0.7816,  ..., 0.7705, 0.7461, 0.7695]],
        [[0.0754, 0.0742, 0.0797,  ..., 0.0020, 0.0765, 0.0732],
         [0.0754, 0.0742, 0.0797,  ..., 0.0020, 0.0765, 0.0732],
         [0.0754, 0.0742, 0.0797,  ..., 0.9940, 0.0765, 0.0732],
         [0.7737, 0.7773, 0.7608,  ..., 0.0020, 0.7706, 0.7803]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0837, 0.0741, 0.0755,  ..., 0.0755, 0.0704, 0.0817],
         [0.0837, 0.0741, 0.0755,  ..., 0.0755, 0.0704, 0.0817],
         [0.0837, 0.0741, 0.0755,  ..., 0.0755, 0.0704, 0.0817],
         [0.7490, 0.7776, 0.7736,  ..., 0.7736, 0.7889, 0.7548]],
        [[0.0735, 0.0755, 0.0731,  ..., 0.4138, 0.0746, 0.0730],
         [0.0735, 0.0755, 0.0731,  ..., 0.1954, 0.0746, 0.0730],
         [0.0735, 0.0755, 0.0731,  ..., 0.1954, 0.0746, 0.0730],
         [0.7794, 0.7734, 0.7806,  ..., 0.1954, 0.7762, 0.7809]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:10,470 [Process: 0] Synchronize training processes
2024-08-16 16:05:10,470 [Process: 0] Evaluating...
2024-08-16 16:05:10,473 [Process: 0] EPOCH 71:
2024-08-16 16:05:10,475 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0704, 0.0718, 0.0725,  ..., 0.0754, 0.0882, 0.0743],
         [0.0704, 0.0718, 0.0725,  ..., 0.0754, 0.0882, 0.0743],
         [0.0704, 0.0718, 0.0725,  ..., 0.0754, 0.0882, 0.0743],
         [0.7887, 0.7847, 0.7825,  ..., 0.7737, 0.7353, 0.7771]],
        [[0.0716, 0.0666, 0.0756,  ..., 0.0197, 0.0759, 0.0744],
         [0.0716, 0.0666, 0.0756,  ..., 0.0197, 0.0759, 0.0744],
         [0.0716, 0.0666, 0.0756,  ..., 0.9409, 0.0759, 0.0744],
         [0.7852, 0.8003, 0.7733,  ..., 0.0197, 0.7724, 0.7767]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0753, 0.0718, 0.0695,  ..., 0.0727, 0.0690, 0.0678],
         [0.0753, 0.0718, 0.0695,  ..., 0.0727, 0.0690, 0.0678],
         [0.0753, 0.0718, 0.0695,  ..., 0.0727, 0.0690, 0.0678],
         [0.7740, 0.7846, 0.7914,  ..., 0.7818, 0.7931, 0.7966]],
        [[0.0767, 0.0713, 0.0710,  ..., 0.3414, 0.0707, 0.0653],
         [0.0767, 0.0713, 0.0710,  ..., 0.2195, 0.0707, 0.0653],
         [0.0767, 0.0713, 0.0710,  ..., 0.2195, 0.0707, 0.0653],
         [0.7698, 0.7861, 0.7870,  ..., 0.2195, 0.7879, 0.8040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:05:12,383 [Process: 0] Synchronize training processes
2024-08-16 16:05:12,384 [Process: 0] Evaluating...
2024-08-16 16:05:12,392 [Process: 0] EPOCH 72:
2024-08-16 16:05:12,394 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0689, 0.0758, 0.0716,  ..., 0.0742, 0.0812, 0.0685],
         [0.0689, 0.0758, 0.0716,  ..., 0.0742, 0.0812, 0.0685],
         [0.0689, 0.0758, 0.0716,  ..., 0.0742, 0.0812, 0.0685],
         [0.7933, 0.7727, 0.7852,  ..., 0.7774, 0.7565, 0.7944]],
        [[0.0661, 0.0658, 0.0741,  ..., 0.0177, 0.0716, 0.0679],
         [0.0661, 0.0658, 0.0741,  ..., 0.0177, 0.0716, 0.0679],
         [0.0661, 0.0658, 0.0741,  ..., 0.9468, 0.0716, 0.0679],
         [0.8017, 0.8027, 0.7777,  ..., 0.0177, 0.7852, 0.7962]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0753, 0.0636, 0.0748,  ..., 0.0617, 0.0722, 0.0706],
         [0.0753, 0.0636, 0.0748,  ..., 0.0617, 0.0722, 0.0706],
         [0.0753, 0.0636, 0.0748,  ..., 0.0617, 0.0722, 0.0706],
         [0.7741, 0.8092, 0.7755,  ..., 0.8149, 0.7834, 0.7882]],
        [[0.0651, 0.0716, 0.0689,  ..., 0.2857, 0.0695, 0.0661],
         [0.0651, 0.0716, 0.0689,  ..., 0.2381, 0.0695, 0.0661],
         [0.0651, 0.0716, 0.0689,  ..., 0.2381, 0.0695, 0.0661],
         [0.8047, 0.7853, 0.7932,  ..., 0.2381, 0.7914, 0.8016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0698, 0.0719, 0.0704,  ..., 0.0703, 0.0777, 0.0676],
         [0.0698, 0.0719, 0.0704,  ..., 0.0703, 0.0777, 0.0676],
         [0.0698, 0.0719, 0.0704,  ..., 0.0703, 0.0777, 0.0676],
         [0.7906, 0.7844, 0.7887,  ..., 0.7891, 0.7670, 0.7973]],
        [[0.0698, 0.0696, 0.0660,  ..., 0.0119, 0.0677, 0.0620],
         [0.0698, 0.0696, 0.0660,  ..., 0.0119, 0.0677, 0.0620],
         [0.0698, 0.0696, 0.0660,  ..., 0.9644, 0.0677, 0.0620],
         [0.7907, 0.7913, 0.8019,  ..., 0.0119, 0.7970, 0.8141]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:14,301 [Process: 0] Synchronize training processes
2024-08-16 16:05:14,302 [Process: 0] Evaluating...
2024-08-16 16:05:14,304 [Process: 0] EPOCH 73:
2024-08-16 16:05:14,306 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0490, 0.0452, 0.0496,  ..., 0.0488, 0.0473, 0.0478],
         [0.0490, 0.0452, 0.0496,  ..., 0.0488, 0.0473, 0.0478],
         [0.0490, 0.0452, 0.0496,  ..., 0.0488, 0.0473, 0.0478],
         [0.8531, 0.8645, 0.8513,  ..., 0.8536, 0.8581, 0.8567]],
        [[0.0501, 0.0509, 0.0493,  ..., 0.2876, 0.2534, 0.0535],
         [0.0501, 0.0509, 0.0493,  ..., 0.2375, 0.2489, 0.0535],
         [0.0501, 0.0509, 0.0493,  ..., 0.2375, 0.2489, 0.0535],
         [0.8496, 0.8472, 0.8522,  ..., 0.2375, 0.2489, 0.8395]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.0336e-02, 6.7135e-02, 7.2862e-02,  ..., 6.9629e-02,
          7.2681e-02, 6.6074e-02],
         [7.0336e-02, 6.7135e-02, 7.2862e-02,  ..., 6.9629e-02,
          7.2681e-02, 6.6074e-02],
         [7.0336e-02, 6.7135e-02, 7.2862e-02,  ..., 6.9629e-02,
          7.2681e-02, 6.6074e-02],
         [7.8899e-01, 7.9860e-01, 7.8141e-01,  ..., 7.9111e-01,
          7.8196e-01, 8.0178e-01]],
        [[6.7128e-02, 6.9495e-02, 6.5707e-02,  ..., 3.3105e-05,
          7.1862e-02, 6.9572e-02],
         [6.7128e-02, 6.9495e-02, 6.5707e-02,  ..., 3.3105e-05,
          7.1862e-02, 6.9572e-02],
         [6.7128e-02, 6.9495e-02, 6.5707e-02,  ..., 9.9990e-01,
          7.1862e-02, 6.9572e-02],
         [7.9862e-01, 7.9151e-01, 8.0288e-01,  ..., 3.3105e-05,
          7.8441e-01, 7.9128e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:16,217 [Process: 0] Synchronize training processes
2024-08-16 16:05:16,217 [Process: 0] Evaluating...
2024-08-16 16:05:16,219 [Process: 0] EPOCH 74:
2024-08-16 16:05:16,221 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0657, 0.0651, 0.0682,  ..., 0.0692, 0.0672, 0.0697],
         [0.0657, 0.0651, 0.0682,  ..., 0.0692, 0.0672, 0.0697],
         [0.0657, 0.0651, 0.0682,  ..., 0.0692, 0.0672, 0.0697],
         [0.8030, 0.8047, 0.7954,  ..., 0.7925, 0.7985, 0.7909]],
        [[0.0678, 0.0654, 0.0609,  ..., 0.2500, 0.0665, 0.0649],
         [0.0678, 0.0654, 0.0609,  ..., 0.2500, 0.0665, 0.0649],
         [0.0678, 0.0654, 0.0609,  ..., 0.2500, 0.0665, 0.0649],
         [0.7967, 0.8038, 0.8172,  ..., 0.2500, 0.8004, 0.8052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0673, 0.0707, 0.0746,  ..., 0.0732, 0.0675, 0.0708],
         [0.0673, 0.0707, 0.0746,  ..., 0.0732, 0.0675, 0.0708],
         [0.0673, 0.0707, 0.0746,  ..., 0.0732, 0.0675, 0.0708],
         [0.7980, 0.7878, 0.7763,  ..., 0.7803, 0.7975, 0.7875]],
        [[0.0648, 0.0664, 0.0692,  ..., 0.0018, 0.0699, 0.0666],
         [0.0648, 0.0664, 0.0692,  ..., 0.0018, 0.0699, 0.0666],
         [0.0648, 0.0664, 0.0692,  ..., 0.9947, 0.0699, 0.0666],
         [0.8055, 0.8008, 0.7923,  ..., 0.0018, 0.7904, 0.8003]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:05:18,136 [Process: 0] Synchronize training processes
2024-08-16 16:05:18,136 [Process: 0] Evaluating...
2024-08-16 16:05:18,138 [Process: 0] EPOCH 75:
2024-08-16 16:05:18,140 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0609, 0.0596, 0.0645,  ..., 0.0591, 0.0542, 0.0591],
         [0.0609, 0.0596, 0.0645,  ..., 0.0591, 0.0542, 0.0591],
         [0.0609, 0.0596, 0.0645,  ..., 0.0591, 0.0542, 0.0591],
         [0.8172, 0.8211, 0.8065,  ..., 0.8226, 0.8375, 0.8228]],
        [[0.0587, 0.0612, 0.0600,  ..., 0.2500, 0.0628, 0.0589],
         [0.0587, 0.0612, 0.0600,  ..., 0.2500, 0.0628, 0.0589],
         [0.0587, 0.0612, 0.0600,  ..., 0.2500, 0.0628, 0.0589],
         [0.8240, 0.8163, 0.8199,  ..., 0.2500, 0.8117, 0.8234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0695, 0.0709, 0.0702,  ..., 0.0706, 0.0703, 0.0714],
         [0.0695, 0.0709, 0.0702,  ..., 0.0706, 0.0703, 0.0714],
         [0.0695, 0.0709, 0.0702,  ..., 0.0706, 0.0703, 0.0714],
         [0.7914, 0.7874, 0.7893,  ..., 0.7882, 0.7892, 0.7857]],
        [[0.0716, 0.0696, 0.0663,  ..., 0.0406, 0.0710, 0.0675],
         [0.0716, 0.0696, 0.0664,  ..., 0.0406, 0.0710, 0.0677],
         [0.0716, 0.0696, 0.0663,  ..., 0.8781, 0.0710, 0.0675],
         [0.7852, 0.7911, 0.8009,  ..., 0.0406, 0.7871, 0.7974]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:05:20,053 [Process: 0] Synchronize training processes
2024-08-16 16:05:20,054 [Process: 0] Evaluating...
2024-08-16 16:05:20,055 [Process: 0] EPOCH 76:
2024-08-16 16:05:20,057 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0621, 0.0662, 0.0650,  ..., 0.0637, 0.0646, 0.0657],
         [0.0621, 0.0662, 0.0650,  ..., 0.0637, 0.0646, 0.0657],
         [0.0621, 0.0662, 0.0650,  ..., 0.0637, 0.0646, 0.0657],
         [0.8137, 0.8015, 0.8051,  ..., 0.8089, 0.8061, 0.8029]],
        [[0.0663, 0.0650, 0.0652,  ..., 0.1984, 0.0693, 0.0671],
         [0.0663, 0.0650, 0.0652,  ..., 0.1984, 0.0693, 0.0671],
         [0.0663, 0.0650, 0.0652,  ..., 0.4047, 0.0693, 0.0671],
         [0.8010, 0.8049, 0.8043,  ..., 0.1984, 0.7920, 0.7986]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0669, 0.0691, 0.0725,  ..., 0.0736, 0.0700, 0.0673],
         [0.0669, 0.0691, 0.0725,  ..., 0.0736, 0.0700, 0.0673],
         [0.0669, 0.0691, 0.0725,  ..., 0.0736, 0.0700, 0.0673],
         [0.7992, 0.7928, 0.7824,  ..., 0.7791, 0.7900, 0.7982]],
        [[0.0682, 0.0727, 0.0703,  ..., 0.0114, 0.0707, 0.0718],
         [0.0682, 0.0727, 0.0703,  ..., 0.0114, 0.0707, 0.0718],
         [0.0682, 0.0727, 0.0703,  ..., 0.9657, 0.0707, 0.0718],
         [0.7953, 0.7819, 0.7891,  ..., 0.0114, 0.7879, 0.7847]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:05:21,963 [Process: 0] Synchronize training processes
2024-08-16 16:05:21,963 [Process: 0] Evaluating...
2024-08-16 16:05:21,965 [Process: 0] EPOCH 77:
2024-08-16 16:05:21,967 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:05:23,887 [Process: 0] Synchronize training processes
2024-08-16 16:05:23,887 [Process: 0] Evaluating...
2024-08-16 16:05:23,889 [Process: 0] EPOCH 78:
2024-08-16 16:05:23,891 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0707, 0.0728, 0.0669,  ..., 0.0744, 0.0708, 0.0696],
         [0.0707, 0.0728, 0.0669,  ..., 0.0744, 0.0708, 0.0696],
         [0.0707, 0.0728, 0.0669,  ..., 0.0744, 0.0708, 0.0696],
         [0.7880, 0.7817, 0.7993,  ..., 0.7767, 0.7877, 0.7913]],
        [[0.0709, 0.0711, 0.0717,  ..., 0.1932, 0.0743, 0.0728],
         [0.0709, 0.0711, 0.0717,  ..., 0.1932, 0.0743, 0.0728],
         [0.0709, 0.0711, 0.0717,  ..., 0.4204, 0.0743, 0.0728],
         [0.7873, 0.7867, 0.7849,  ..., 0.1932, 0.7771, 0.7817]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0798, 0.0719, 0.0784,  ..., 0.0632, 0.0656, 0.0689],
         [0.0798, 0.0719, 0.0784,  ..., 0.0632, 0.0656, 0.0689],
         [0.0798, 0.0719, 0.0784,  ..., 0.0632, 0.0656, 0.0689],
         [0.7607, 0.7843, 0.7647,  ..., 0.8103, 0.8031, 0.7934]],
        [[0.0691, 0.0691, 0.0746,  ..., 0.0056, 0.0697, 0.0694],
         [0.0691, 0.0691, 0.0746,  ..., 0.0056, 0.0697, 0.0694],
         [0.0691, 0.0691, 0.0746,  ..., 0.9832, 0.0697, 0.0694],
         [0.7928, 0.7927, 0.7763,  ..., 0.0056, 0.7910, 0.7917]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:05:25,799 [Process: 0] Synchronize training processes
2024-08-16 16:05:25,799 [Process: 0] Evaluating...
2024-08-16 16:05:25,801 [Process: 0] EPOCH 79:
2024-08-16 16:05:25,803 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0707, 0.0713, 0.0727,  ..., 0.0710, 0.0700, 0.0690],
         [0.0707, 0.0713, 0.0727,  ..., 0.0710, 0.0700, 0.0690],
         [0.0707, 0.0713, 0.0727,  ..., 0.0710, 0.0700, 0.0690],
         [0.7878, 0.7861, 0.7818,  ..., 0.7869, 0.7900, 0.7929]],
        [[0.0707, 0.0736, 0.0695,  ..., 0.2500, 0.0708, 0.0707],
         [0.0707, 0.0736, 0.0695,  ..., 0.2500, 0.0708, 0.0707],
         [0.0707, 0.0736, 0.0695,  ..., 0.2500, 0.0708, 0.0707],
         [0.7880, 0.7792, 0.7914,  ..., 0.2500, 0.7877, 0.7880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0807, 0.0798, 0.0757,  ..., 0.0730, 0.0670, 0.0705],
         [0.0807, 0.0798, 0.0757,  ..., 0.0730, 0.0670, 0.0705],
         [0.0807, 0.0798, 0.0757,  ..., 0.0730, 0.0670, 0.0705],
         [0.7579, 0.7607, 0.7729,  ..., 0.7810, 0.7989, 0.7885]],
        [[0.0702, 0.0709, 0.0698,  ..., 0.0013, 0.0674, 0.0713],
         [0.0702, 0.0709, 0.0698,  ..., 0.0013, 0.0674, 0.0713],
         [0.0702, 0.0709, 0.0698,  ..., 0.9960, 0.0674, 0.0713],
         [0.7895, 0.7873, 0.7907,  ..., 0.0013, 0.7977, 0.7862]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:05:27,710 [Process: 0] Synchronize training processes
2024-08-16 16:05:27,711 [Process: 0] Evaluating...
2024-08-16 16:05:27,713 [Process: 0] EPOCH 80:
2024-08-16 16:05:27,714 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0677, 0.0641, 0.0658,  ..., 0.0696, 0.0667, 0.0700],
         [0.0677, 0.0641, 0.0658,  ..., 0.0696, 0.0667, 0.0700],
         [0.0677, 0.0641, 0.0658,  ..., 0.0696, 0.0667, 0.0700],
         [0.7970, 0.8077, 0.8027,  ..., 0.7912, 0.7998, 0.7900]],
        [[0.0665, 0.0690, 0.0657,  ..., 0.2500, 0.0686, 0.0685],
         [0.0665, 0.0690, 0.0657,  ..., 0.2500, 0.0686, 0.0685],
         [0.0665, 0.0690, 0.0657,  ..., 0.2500, 0.0686, 0.0685],
         [0.8005, 0.7929, 0.8029,  ..., 0.2500, 0.7941, 0.7946]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0577, 0.0552, 0.0613,  ..., 0.0575, 0.0612, 0.0580],
         [0.0577, 0.0552, 0.0614,  ..., 0.0575, 0.0612, 0.0580],
         [0.0577, 0.0552, 0.0613,  ..., 0.0575, 0.0612, 0.0580],
         [0.8269, 0.8343, 0.8160,  ..., 0.8274, 0.8164, 0.8259]],
        [[0.0616, 0.0583, 0.0601,  ..., 0.0017, 0.0585, 0.0579],
         [0.0616, 0.0583, 0.0601,  ..., 0.0017, 0.0585, 0.0579],
         [0.0616, 0.0583, 0.0601,  ..., 0.9950, 0.0585, 0.0579],
         [0.8151, 0.8251, 0.8198,  ..., 0.0017, 0.8246, 0.8264]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:05:29,622 [Process: 0] Synchronize training processes
2024-08-16 16:05:29,623 [Process: 0] Evaluating...
2024-08-16 16:05:29,625 [Process: 0] EPOCH 81:
2024-08-16 16:05:29,627 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0627, 0.0640, 0.0639,  ..., 0.0669, 0.0663, 0.0632],
         [0.0627, 0.0640, 0.0639,  ..., 0.0669, 0.0663, 0.0632],
         [0.0627, 0.0640, 0.0639,  ..., 0.0669, 0.0663, 0.0632],
         [0.8119, 0.8079, 0.8082,  ..., 0.7993, 0.8012, 0.8104]],
        [[0.0644, 0.0646, 0.0675,  ..., 0.2500, 0.0663, 0.0660],
         [0.0644, 0.0646, 0.0675,  ..., 0.2500, 0.0663, 0.0660],
         [0.0644, 0.0646, 0.0675,  ..., 0.2500, 0.0663, 0.0660],
         [0.8069, 0.8062, 0.7976,  ..., 0.2500, 0.8010, 0.8021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6672e-02, 6.9361e-02, 6.4097e-02,  ..., 6.5402e-02,
          6.7225e-02, 6.7025e-02],
         [6.6672e-02, 6.9361e-02, 6.4097e-02,  ..., 6.5402e-02,
          6.7225e-02, 6.7025e-02],
         [6.6672e-02, 6.9361e-02, 6.4097e-02,  ..., 6.5402e-02,
          6.7225e-02, 6.7025e-02],
         [7.9998e-01, 7.9192e-01, 8.0771e-01,  ..., 8.0379e-01,
          7.9833e-01, 7.9893e-01]],
        [[6.7375e-02, 6.3751e-02, 6.7622e-02,  ..., 2.4301e-05,
          6.3240e-02, 6.9066e-02],
         [6.7375e-02, 6.3751e-02, 6.7622e-02,  ..., 2.4301e-05,
          6.3240e-02, 6.9066e-02],
         [6.7375e-02, 6.3751e-02, 6.7622e-02,  ..., 9.9993e-01,
          6.3240e-02, 6.9066e-02],
         [7.9788e-01, 8.0875e-01, 7.9713e-01,  ..., 2.4301e-05,
          8.1028e-01, 7.9280e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:05:31,542 [Process: 0] Synchronize training processes
2024-08-16 16:05:31,543 [Process: 0] Evaluating...
2024-08-16 16:05:31,550 [Process: 0] EPOCH 82:
2024-08-16 16:05:31,552 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0547, 0.0539, 0.0525,  ..., 0.0538, 0.0599, 0.0543],
         [0.0547, 0.0539, 0.0525,  ..., 0.0538, 0.0599, 0.0543],
         [0.0547, 0.0539, 0.0525,  ..., 0.0538, 0.0599, 0.0543],
         [0.8360, 0.8382, 0.8426,  ..., 0.8385, 0.8202, 0.8371]],
        [[0.0593, 0.0580, 0.0595,  ..., 0.2500, 0.0563, 0.0570],
         [0.0593, 0.0580, 0.0595,  ..., 0.2500, 0.0563, 0.0570],
         [0.0593, 0.0580, 0.0595,  ..., 0.2500, 0.0563, 0.0570],
         [0.8222, 0.8259, 0.8215,  ..., 0.2500, 0.8310, 0.8291]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6594e-02, 6.6584e-02, 7.0560e-02,  ..., 6.4817e-02,
          6.9941e-02, 6.9369e-02],
         [6.6594e-02, 6.6584e-02, 7.0560e-02,  ..., 6.4817e-02,
          6.9941e-02, 6.9369e-02],
         [6.6594e-02, 6.6584e-02, 7.0560e-02,  ..., 6.4817e-02,
          6.9941e-02, 6.9369e-02],
         [8.0022e-01, 8.0025e-01, 7.8832e-01,  ..., 8.0555e-01,
          7.9018e-01, 7.9189e-01]],
        [[6.7304e-02, 6.9607e-02, 6.8958e-02,  ..., 3.6115e-05,
          7.0501e-02, 7.0542e-02],
         [6.7304e-02, 6.9607e-02, 6.8958e-02,  ..., 3.6115e-05,
          7.0501e-02, 7.0542e-02],
         [6.7304e-02, 6.9607e-02, 6.8958e-02,  ..., 9.9989e-01,
          7.0501e-02, 7.0542e-02],
         [7.9809e-01, 7.9118e-01, 7.9313e-01,  ..., 3.6115e-05,
          7.8850e-01, 7.8837e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:05:33,461 [Process: 0] Synchronize training processes
2024-08-16 16:05:33,462 [Process: 0] Evaluating...
2024-08-16 16:05:33,464 [Process: 0] EPOCH 83:
2024-08-16 16:05:33,465 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0520, 0.0563, 0.0560,  ..., 0.0514, 0.0777, 0.0564],
         [0.0520, 0.0563, 0.0560,  ..., 0.0514, 0.0777, 0.0564],
         [0.0520, 0.0563, 0.0560,  ..., 0.0514, 0.0777, 0.0564],
         [0.8440, 0.8311, 0.8321,  ..., 0.8459, 0.7668, 0.8309]],
        [[0.0591, 0.0533, 0.0600,  ..., 0.2351, 0.0584, 0.0570],
         [0.0591, 0.0533, 0.0600,  ..., 0.2351, 0.0584, 0.0570],
         [0.0591, 0.0533, 0.0600,  ..., 0.2946, 0.0584, 0.0570],
         [0.8228, 0.8402, 0.8200,  ..., 0.2351, 0.8248, 0.8291]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.1941e-02, 6.1827e-02, 6.2024e-02,  ..., 6.2750e-02,
          6.2207e-02, 6.0496e-02],
         [6.1941e-02, 6.1827e-02, 6.2024e-02,  ..., 6.2750e-02,
          6.2207e-02, 6.0496e-02],
         [6.1941e-02, 6.1827e-02, 6.2024e-02,  ..., 6.2750e-02,
          6.2207e-02, 6.0496e-02],
         [8.1418e-01, 8.1452e-01, 8.1393e-01,  ..., 8.1175e-01,
          8.1338e-01, 8.1851e-01]],
        [[6.5195e-02, 6.0452e-02, 6.4659e-02,  ..., 3.5663e-04,
          6.0527e-02, 6.0480e-02],
         [6.5195e-02, 6.0452e-02, 6.4659e-02,  ..., 3.5663e-04,
          6.0527e-02, 6.0480e-02],
         [6.5195e-02, 6.0452e-02, 6.4659e-02,  ..., 9.9893e-01,
          6.0527e-02, 6.0480e-02],
         [8.0441e-01, 8.1864e-01, 8.0602e-01,  ..., 3.5663e-04,
          8.1842e-01, 8.1856e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-16 16:05:35,375 [Process: 0] Synchronize training processes
2024-08-16 16:05:35,375 [Process: 0] Evaluating...
2024-08-16 16:05:35,377 [Process: 0] EPOCH 84:
2024-08-16 16:05:35,379 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0585, 0.0561, 0.0578,  ..., 0.0607, 0.0538, 0.0600],
         [0.0585, 0.0561, 0.0578,  ..., 0.0607, 0.0538, 0.0600],
         [0.0585, 0.0561, 0.0578,  ..., 0.0607, 0.0538, 0.0600],
         [0.8244, 0.8318, 0.8266,  ..., 0.8180, 0.8385, 0.8199]],
        [[0.0624, 0.0579, 0.0628,  ..., 0.1679, 0.0623, 0.0613],
         [0.0624, 0.0579, 0.0628,  ..., 0.1679, 0.0623, 0.0613],
         [0.0624, 0.0579, 0.0628,  ..., 0.4962, 0.0623, 0.0613],
         [0.8128, 0.8263, 0.8116,  ..., 0.1679, 0.8132, 0.8162]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.3026e-02, 6.4363e-02, 5.8482e-02,  ..., 5.9025e-02,
          5.7127e-02, 6.4811e-02],
         [6.3026e-02, 6.4363e-02, 5.8482e-02,  ..., 5.9025e-02,
          5.7127e-02, 6.4811e-02],
         [6.3026e-02, 6.4363e-02, 5.8482e-02,  ..., 5.9025e-02,
          5.7127e-02, 6.4811e-02],
         [8.1092e-01, 8.0691e-01, 8.2455e-01,  ..., 8.2293e-01,
          8.2862e-01, 8.0557e-01]],
        [[6.5570e-02, 5.8160e-02, 6.2130e-02,  ..., 5.8911e-04,
          6.2929e-02, 6.3727e-02],
         [6.5570e-02, 5.8160e-02, 6.2130e-02,  ..., 5.8911e-04,
          6.2929e-02, 6.3727e-02],
         [6.5570e-02, 5.8160e-02, 6.2130e-02,  ..., 9.9823e-01,
          6.2929e-02, 6.3727e-02],
         [8.0329e-01, 8.2552e-01, 8.1361e-01,  ..., 5.8911e-04,
          8.1121e-01, 8.0882e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0582, 0.0602, 0.0584,  ..., 0.0538, 0.0610, 0.0570],
         [0.0582, 0.0602, 0.0584,  ..., 0.0538, 0.0610, 0.0570],
         [0.0582, 0.0602, 0.0584,  ..., 0.0538, 0.0610, 0.0570],
         [0.8255, 0.8193, 0.8249,  ..., 0.8387, 0.8170, 0.8289]],
        [[0.0608, 0.0584, 0.0629,  ..., 0.1817, 0.0621, 0.0623],
         [0.0608, 0.0584, 0.0629,  ..., 0.1817, 0.0621, 0.0623],
         [0.0608, 0.0584, 0.0629,  ..., 0.4548, 0.0621, 0.0623],
         [0.8175, 0.8249, 0.8112,  ..., 0.1817, 0.8138, 0.8130]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:37,285 [Process: 0] Synchronize training processes
2024-08-16 16:05:37,285 [Process: 0] Evaluating...
2024-08-16 16:05:37,287 [Process: 0] EPOCH 85:
2024-08-16 16:05:37,289 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0623, 0.0606, 0.0587,  ..., 0.0569, 0.0601, 0.0613],
         [0.0623, 0.0606, 0.0587,  ..., 0.0569, 0.0601, 0.0613],
         [0.0623, 0.0606, 0.0587,  ..., 0.0569, 0.0601, 0.0613],
         [0.8130, 0.8182, 0.8239,  ..., 0.8294, 0.8196, 0.8161]],
        [[0.0617, 0.0597, 0.0639,  ..., 0.0010, 0.0620, 0.0615],
         [0.0617, 0.0597, 0.0639,  ..., 0.0010, 0.0620, 0.0615],
         [0.0617, 0.0597, 0.0639,  ..., 0.9969, 0.0620, 0.0615],
         [0.8150, 0.8209, 0.8082,  ..., 0.0010, 0.8140, 0.8154]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0639, 0.0634, 0.0605,  ..., 0.0639, 0.0617, 0.0611],
         [0.0639, 0.0634, 0.0605,  ..., 0.0639, 0.0617, 0.0611],
         [0.0639, 0.0634, 0.0605,  ..., 0.0639, 0.0617, 0.0611],
         [0.8083, 0.8099, 0.8185,  ..., 0.8084, 0.8148, 0.8168]],
        [[0.0688, 0.0630, 0.0654,  ..., 0.2710, 0.0639, 0.0616],
         [0.0688, 0.0630, 0.0654,  ..., 0.2430, 0.0639, 0.0616],
         [0.0688, 0.0630, 0.0654,  ..., 0.2430, 0.0639, 0.0616],
         [0.7937, 0.8109, 0.8038,  ..., 0.2430, 0.8084, 0.8152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:39,205 [Process: 0] Synchronize training processes
2024-08-16 16:05:39,206 [Process: 0] Evaluating...
2024-08-16 16:05:39,208 [Process: 0] EPOCH 86:
2024-08-16 16:05:39,209 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.1013e-02, 5.9000e-02, 6.0786e-02,  ..., 5.9225e-02,
          6.1637e-02, 6.1396e-02],
         [6.1013e-02, 5.9000e-02, 6.0786e-02,  ..., 5.9225e-02,
          6.1637e-02, 6.1396e-02],
         [6.1013e-02, 5.9000e-02, 6.0786e-02,  ..., 5.9225e-02,
          6.1637e-02, 6.1396e-02],
         [8.1696e-01, 8.2300e-01, 8.1764e-01,  ..., 8.2232e-01,
          8.1509e-01, 8.1581e-01]],
        [[5.6366e-02, 6.3127e-02, 5.9280e-02,  ..., 9.8912e-04,
          5.6947e-02, 6.4191e-02],
         [5.6366e-02, 6.3127e-02, 5.9280e-02,  ..., 9.8912e-04,
          5.6947e-02, 6.4191e-02],
         [5.6366e-02, 6.3127e-02, 5.9280e-02,  ..., 9.9703e-01,
          5.6947e-02, 6.4191e-02],
         [8.3090e-01, 8.1062e-01, 8.2216e-01,  ..., 9.8912e-04,
          8.2916e-01, 8.0743e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0619, 0.0621, 0.0617,  ..., 0.0643, 0.0645, 0.0628],
         [0.0619, 0.0621, 0.0617,  ..., 0.0643, 0.0645, 0.0628],
         [0.0619, 0.0621, 0.0617,  ..., 0.0643, 0.0645, 0.0628],
         [0.8143, 0.8138, 0.8149,  ..., 0.8071, 0.8064, 0.8117]],
        [[0.0608, 0.0618, 0.0604,  ..., 0.2424, 0.0624, 0.0655],
         [0.0608, 0.0618, 0.0604,  ..., 0.2424, 0.0624, 0.0655],
         [0.0608, 0.0618, 0.0604,  ..., 0.2727, 0.0624, 0.0655],
         [0.8175, 0.8147, 0.8189,  ..., 0.2424, 0.8127, 0.8036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:41,123 [Process: 0] Synchronize training processes
2024-08-16 16:05:41,123 [Process: 0] Evaluating...
2024-08-16 16:05:41,125 [Process: 0] EPOCH 87:
2024-08-16 16:05:41,127 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0222e-02, 5.6730e-02, 5.7948e-02,  ..., 5.6666e-02,
          6.3593e-02, 5.8984e-02],
         [6.0222e-02, 5.6730e-02, 5.7948e-02,  ..., 5.6666e-02,
          6.3593e-02, 5.8984e-02],
         [6.0222e-02, 5.6730e-02, 5.7948e-02,  ..., 5.6666e-02,
          6.3593e-02, 5.8984e-02],
         [8.1933e-01, 8.2981e-01, 8.2615e-01,  ..., 8.3000e-01,
          8.0922e-01, 8.2305e-01]],
        [[5.5771e-02, 5.2761e-02, 5.8466e-02,  ..., 5.4120e-04,
          6.0900e-02, 5.8393e-02],
         [5.5771e-02, 5.2761e-02, 5.8466e-02,  ..., 5.4120e-04,
          6.0900e-02, 5.8393e-02],
         [5.5771e-02, 5.2761e-02, 5.8466e-02,  ..., 9.9838e-01,
          6.0900e-02, 5.8393e-02],
         [8.3269e-01, 8.4172e-01, 8.2460e-01,  ..., 5.4120e-04,
          8.1730e-01, 8.2482e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0603, 0.0603, 0.0585,  ..., 0.0618, 0.0582, 0.0616],
         [0.0603, 0.0603, 0.0585,  ..., 0.0618, 0.0582, 0.0616],
         [0.0603, 0.0603, 0.0585,  ..., 0.0618, 0.0582, 0.0616],
         [0.8191, 0.8190, 0.8246,  ..., 0.8146, 0.8254, 0.8152]],
        [[0.0628, 0.0611, 0.0614,  ..., 0.2782, 0.0603, 0.0632],
         [0.0628, 0.0611, 0.0614,  ..., 0.2406, 0.0603, 0.0632],
         [0.0628, 0.0611, 0.0614,  ..., 0.2406, 0.0603, 0.0632],
         [0.8117, 0.8166, 0.8159,  ..., 0.2406, 0.8191, 0.8105]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:43,062 [Process: 0] Synchronize training processes
2024-08-16 16:05:43,062 [Process: 0] Evaluating...
2024-08-16 16:05:43,064 [Process: 0] EPOCH 88:
2024-08-16 16:05:43,066 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.9315e-02, 5.6364e-02, 5.7440e-02,  ..., 5.4961e-02,
          5.8049e-02, 5.5273e-02],
         [5.9315e-02, 5.6364e-02, 5.7440e-02,  ..., 5.4961e-02,
          5.8049e-02, 5.5273e-02],
         [5.9315e-02, 5.6364e-02, 5.7440e-02,  ..., 5.4961e-02,
          5.8049e-02, 5.5273e-02],
         [8.2206e-01, 8.3091e-01, 8.2768e-01,  ..., 8.3512e-01,
          8.2585e-01, 8.3418e-01]],
        [[6.1908e-02, 5.5689e-02, 5.7050e-02,  ..., 7.5493e-04,
          6.0058e-02, 5.6426e-02],
         [6.1908e-02, 5.5689e-02, 5.7050e-02,  ..., 7.5493e-04,
          6.0058e-02, 5.6426e-02],
         [6.1908e-02, 5.5689e-02, 5.7050e-02,  ..., 9.9774e-01,
          6.0058e-02, 5.6426e-02],
         [8.1427e-01, 8.3293e-01, 8.2885e-01,  ..., 7.5493e-04,
          8.1983e-01, 8.3072e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0582, 0.0600, 0.0562,  ..., 0.0592, 0.0591, 0.0591],
         [0.0582, 0.0600, 0.0562,  ..., 0.0592, 0.0591, 0.0591],
         [0.0582, 0.0600, 0.0562,  ..., 0.0592, 0.0591, 0.0591],
         [0.8255, 0.8199, 0.8313,  ..., 0.8224, 0.8226, 0.8226]],
        [[0.0582, 0.0598, 0.0605,  ..., 0.3703, 0.0607, 0.0588],
         [0.0582, 0.0598, 0.0605,  ..., 0.2099, 0.0607, 0.0588],
         [0.0582, 0.0598, 0.0605,  ..., 0.2099, 0.0607, 0.0588],
         [0.8255, 0.8205, 0.8184,  ..., 0.2099, 0.8178, 0.8235]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:44,993 [Process: 0] Synchronize training processes
2024-08-16 16:05:44,994 [Process: 0] Evaluating...
2024-08-16 16:05:44,997 [Process: 0] EPOCH 89:
2024-08-16 16:05:45,001 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0554, 0.0576, 0.0546,  ..., 0.0571, 0.0577, 0.0544],
         [0.0554, 0.0576, 0.0546,  ..., 0.0571, 0.0577, 0.0544],
         [0.0554, 0.0576, 0.0546,  ..., 0.0571, 0.0577, 0.0544],
         [0.8337, 0.8272, 0.8362,  ..., 0.8287, 0.8270, 0.8368]],
        [[0.0569, 0.0537, 0.0562,  ..., 0.0086, 0.0581, 0.0611],
         [0.0569, 0.0537, 0.0562,  ..., 0.0086, 0.0581, 0.0611],
         [0.0569, 0.0537, 0.0562,  ..., 0.9742, 0.0581, 0.0611],
         [0.8294, 0.8389, 0.8314,  ..., 0.0086, 0.8257, 0.8167]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0543, 0.0529, 0.0529,  ..., 0.0550, 0.0538, 0.0546],
         [0.0543, 0.0529, 0.0529,  ..., 0.0550, 0.0538, 0.0546],
         [0.0543, 0.0529, 0.0529,  ..., 0.0550, 0.0538, 0.0546],
         [0.8372, 0.8414, 0.8414,  ..., 0.8349, 0.8386, 0.8363]],
        [[0.0523, 0.0535, 0.0528,  ..., 0.3395, 0.0515, 0.0524],
         [0.0523, 0.0535, 0.0528,  ..., 0.2202, 0.0515, 0.0524],
         [0.0523, 0.0535, 0.0528,  ..., 0.2202, 0.0515, 0.0524],
         [0.8432, 0.8394, 0.8415,  ..., 0.2202, 0.8454, 0.8427]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:46,912 [Process: 0] Synchronize training processes
2024-08-16 16:05:46,912 [Process: 0] Evaluating...
2024-08-16 16:05:46,915 [Process: 0] EPOCH 90:
2024-08-16 16:05:46,919 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0538, 0.0532, 0.0542,  ..., 0.0562, 0.0598, 0.0534],
         [0.0538, 0.0532, 0.0542,  ..., 0.0562, 0.0598, 0.0534],
         [0.0538, 0.0532, 0.0542,  ..., 0.0562, 0.0598, 0.0534],
         [0.8387, 0.8404, 0.8375,  ..., 0.8314, 0.8207, 0.8399]],
        [[0.0605, 0.0562, 0.0571,  ..., 0.0027, 0.0572, 0.0549],
         [0.0605, 0.0562, 0.0571,  ..., 0.0027, 0.0572, 0.0549],
         [0.0605, 0.0562, 0.0571,  ..., 0.9918, 0.0572, 0.0549],
         [0.8186, 0.8313, 0.8288,  ..., 0.0027, 0.8283, 0.8352]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0588, 0.0584, 0.0583,  ..., 0.0570, 0.0580, 0.0580],
         [0.0588, 0.0584, 0.0583,  ..., 0.0570, 0.0580, 0.0580],
         [0.0588, 0.0584, 0.0583,  ..., 0.0570, 0.0580, 0.0580],
         [0.8237, 0.8248, 0.8250,  ..., 0.8290, 0.8260, 0.8259]],
        [[0.0588, 0.0573, 0.0582,  ..., 0.3325, 0.0554, 0.0584],
         [0.0588, 0.0573, 0.0582,  ..., 0.2225, 0.0554, 0.0584],
         [0.0588, 0.0573, 0.0582,  ..., 0.2225, 0.0554, 0.0584],
         [0.8236, 0.8282, 0.8255,  ..., 0.2225, 0.8339, 0.8247]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:48,831 [Process: 0] Synchronize training processes
2024-08-16 16:05:48,832 [Process: 0] Evaluating...
2024-08-16 16:05:48,834 [Process: 0] EPOCH 91:
2024-08-16 16:05:48,836 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0567, 0.0539, 0.0535,  ..., 0.0521, 0.0562, 0.0551],
         [0.0567, 0.0539, 0.0535,  ..., 0.0521, 0.0562, 0.0551],
         [0.0567, 0.0539, 0.0535,  ..., 0.0521, 0.0562, 0.0551],
         [0.8298, 0.8384, 0.8394,  ..., 0.8436, 0.8313, 0.8348]],
        [[0.0569, 0.0542, 0.0554,  ..., 0.0518, 0.0584, 0.0574],
         [0.0569, 0.0542, 0.0554,  ..., 0.0518, 0.0584, 0.0574],
         [0.0569, 0.0542, 0.0554,  ..., 0.8446, 0.0584, 0.0574],
         [0.8294, 0.8375, 0.8338,  ..., 0.0518, 0.8249, 0.8277]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0558, 0.0580, 0.0575,  ..., 0.0569, 0.0587, 0.0580],
         [0.0558, 0.0580, 0.0575,  ..., 0.0569, 0.0587, 0.0580],
         [0.0558, 0.0580, 0.0575,  ..., 0.0569, 0.0587, 0.0580],
         [0.8326, 0.8260, 0.8275,  ..., 0.8294, 0.8240, 0.8260]],
        [[0.0560, 0.0530, 0.0568,  ..., 0.3125, 0.0588, 0.0562],
         [0.0560, 0.0530, 0.0568,  ..., 0.2292, 0.0588, 0.0562],
         [0.0560, 0.0530, 0.0568,  ..., 0.2292, 0.0588, 0.0562],
         [0.8319, 0.8411, 0.8296,  ..., 0.2292, 0.8237, 0.8315]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:50,746 [Process: 0] Synchronize training processes
2024-08-16 16:05:50,746 [Process: 0] Evaluating...
2024-08-16 16:05:50,757 [Process: 0] EPOCH 92:
2024-08-16 16:05:50,759 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0531, 0.0550, 0.0555,  ..., 0.0551, 0.0548, 0.0521],
         [0.0531, 0.0550, 0.0555,  ..., 0.0551, 0.0548, 0.0521],
         [0.0531, 0.0550, 0.0555,  ..., 0.0551, 0.0548, 0.0521],
         [0.8408, 0.8351, 0.8335,  ..., 0.8346, 0.8356, 0.8438]],
        [[0.0571, 0.0529, 0.0517,  ..., 0.0035, 0.0550, 0.0547],
         [0.0571, 0.0529, 0.0517,  ..., 0.0035, 0.0550, 0.0547],
         [0.0571, 0.0529, 0.0517,  ..., 0.9896, 0.0550, 0.0547],
         [0.8288, 0.8413, 0.8450,  ..., 0.0035, 0.8349, 0.8360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0496, 0.0501, 0.0516,  ..., 0.0513, 0.0519, 0.0517],
         [0.0496, 0.0501, 0.0516,  ..., 0.0513, 0.0519, 0.0517],
         [0.0496, 0.0501, 0.0516,  ..., 0.0513, 0.0519, 0.0517],
         [0.8513, 0.8498, 0.8451,  ..., 0.8460, 0.8442, 0.8448]],
        [[0.0480, 0.0490, 0.0514,  ..., 0.2987, 0.0473, 0.0503],
         [0.0480, 0.0490, 0.0514,  ..., 0.2338, 0.0473, 0.0503],
         [0.0480, 0.0490, 0.0514,  ..., 0.2338, 0.0473, 0.0503],
         [0.8561, 0.8529, 0.8458,  ..., 0.2338, 0.8580, 0.8490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:52,691 [Process: 0] Synchronize training processes
2024-08-16 16:05:52,691 [Process: 0] Evaluating...
2024-08-16 16:05:52,693 [Process: 0] EPOCH 93:
2024-08-16 16:05:52,696 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0545, 0.0523, 0.0508,  ..., 0.0564, 0.0552, 0.0525],
         [0.0545, 0.0523, 0.0508,  ..., 0.0564, 0.0552, 0.0525],
         [0.0545, 0.0523, 0.0508,  ..., 0.0564, 0.0552, 0.0525],
         [0.8364, 0.8430, 0.8476,  ..., 0.8307, 0.8345, 0.8426]],
        [[0.0527, 0.0519, 0.0575,  ..., 0.0327, 0.0549, 0.0542],
         [0.0527, 0.0519, 0.0575,  ..., 0.0327, 0.0549, 0.0542],
         [0.0527, 0.0519, 0.0575,  ..., 0.9020, 0.0549, 0.0542],
         [0.8419, 0.8444, 0.8274,  ..., 0.0327, 0.8353, 0.8375]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0558, 0.0579, 0.0548,  ..., 0.0567, 0.0535, 0.0552],
         [0.0558, 0.0579, 0.0548,  ..., 0.0567, 0.0535, 0.0552],
         [0.0558, 0.0579, 0.0548,  ..., 0.0567, 0.0535, 0.0552],
         [0.8327, 0.8262, 0.8357,  ..., 0.8299, 0.8395, 0.8344]],
        [[0.0541, 0.0529, 0.0507,  ..., 0.2848, 0.0527, 0.0533],
         [0.0541, 0.0529, 0.0507,  ..., 0.2384, 0.0527, 0.0533],
         [0.0541, 0.0529, 0.0507,  ..., 0.2384, 0.0527, 0.0533],
         [0.8377, 0.8414, 0.8479,  ..., 0.2384, 0.8418, 0.8400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:54,671 [Process: 0] Synchronize training processes
2024-08-16 16:05:54,671 [Process: 0] Evaluating...
2024-08-16 16:05:54,673 [Process: 0] EPOCH 94:
2024-08-16 16:05:54,675 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0544, 0.0511, 0.0541,  ..., 0.0528, 0.0545, 0.0542],
         [0.0544, 0.0511, 0.0541,  ..., 0.0528, 0.0545, 0.0542],
         [0.0544, 0.0511, 0.0541,  ..., 0.0528, 0.0545, 0.0542],
         [0.8367, 0.8468, 0.8378,  ..., 0.8415, 0.8364, 0.8375]],
        [[0.0569, 0.0563, 0.0553,  ..., 0.0018, 0.0553, 0.0566],
         [0.0569, 0.0563, 0.0553,  ..., 0.0018, 0.0553, 0.0566],
         [0.0569, 0.0563, 0.0553,  ..., 0.9947, 0.0553, 0.0566],
         [0.8294, 0.8312, 0.8342,  ..., 0.0018, 0.8341, 0.8301]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0511, 0.0522, 0.0532,  ..., 0.0527, 0.0507, 0.0531],
         [0.0511, 0.0522, 0.0532,  ..., 0.0527, 0.0507, 0.0531],
         [0.0511, 0.0522, 0.0532,  ..., 0.0527, 0.0507, 0.0531],
         [0.8468, 0.8434, 0.8404,  ..., 0.8419, 0.8480, 0.8406]],
        [[0.0494, 0.0484, 0.0502,  ..., 0.2916, 0.0504, 0.0497],
         [0.0494, 0.0484, 0.0502,  ..., 0.2361, 0.0504, 0.0497],
         [0.0494, 0.0484, 0.0502,  ..., 0.2361, 0.0504, 0.0497],
         [0.8519, 0.8547, 0.8494,  ..., 0.2361, 0.8488, 0.8508]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:05:56,594 [Process: 0] Synchronize training processes
2024-08-16 16:05:56,595 [Process: 0] Evaluating...
2024-08-16 16:05:56,597 [Process: 0] EPOCH 95:
2024-08-16 16:05:56,599 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0521, 0.0544, 0.0550,  ..., 0.0539, 0.0570, 0.0530],
         [0.0521, 0.0544, 0.0550,  ..., 0.0539, 0.0570, 0.0530],
         [0.0521, 0.0544, 0.0550,  ..., 0.0539, 0.0570, 0.0530],
         [0.8436, 0.8369, 0.8349,  ..., 0.8382, 0.8289, 0.8411]],
        [[0.0544, 0.0552, 0.0577,  ..., 0.0016, 0.0554, 0.0568],
         [0.0544, 0.0552, 0.0577,  ..., 0.0016, 0.0554, 0.0568],
         [0.0544, 0.0552, 0.0577,  ..., 0.9951, 0.0554, 0.0568],
         [0.8367, 0.8343, 0.8268,  ..., 0.0016, 0.8338, 0.8295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0532, 0.0549, 0.0561,  ..., 0.0545, 0.0575, 0.0548],
         [0.0532, 0.0549, 0.0561,  ..., 0.0545, 0.0575, 0.0548],
         [0.0532, 0.0549, 0.0561,  ..., 0.0545, 0.0575, 0.0548],
         [0.8403, 0.8352, 0.8317,  ..., 0.8365, 0.8274, 0.8357]],
        [[0.0580, 0.0525, 0.0551,  ..., 0.3853, 0.0529, 0.0597],
         [0.0580, 0.0525, 0.0551,  ..., 0.2049, 0.0529, 0.0597],
         [0.0580, 0.0525, 0.0551,  ..., 0.2049, 0.0529, 0.0597],
         [0.8261, 0.8425, 0.8348,  ..., 0.2049, 0.8413, 0.8209]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:05:58,503 [Process: 0] Synchronize training processes
2024-08-16 16:05:58,503 [Process: 0] Evaluating...
2024-08-16 16:05:58,505 [Process: 0] EPOCH 96:
2024-08-16 16:05:58,507 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1397e-02, 5.2403e-02, 5.1988e-02,  ..., 5.4672e-02,
          5.1496e-02, 5.3609e-02],
         [5.1397e-02, 5.2403e-02, 5.1988e-02,  ..., 5.4672e-02,
          5.1496e-02, 5.3609e-02],
         [5.1397e-02, 5.2403e-02, 5.1988e-02,  ..., 5.4672e-02,
          5.1496e-02, 5.3609e-02],
         [8.4581e-01, 8.4279e-01, 8.4404e-01,  ..., 8.3599e-01,
          8.4551e-01, 8.3917e-01]],
        [[5.0788e-02, 5.4341e-02, 5.4480e-02,  ..., 6.0068e-04,
          5.3680e-02, 5.5638e-02],
         [5.0788e-02, 5.4341e-02, 5.4480e-02,  ..., 6.0068e-04,
          5.3680e-02, 5.5638e-02],
         [5.0788e-02, 5.4341e-02, 5.4480e-02,  ..., 9.9820e-01,
          5.3680e-02, 5.5638e-02],
         [8.4764e-01, 8.3698e-01, 8.3656e-01,  ..., 6.0068e-04,
          8.3896e-01, 8.3309e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0545, 0.0553, 0.0543,  ..., 0.0572, 0.0560, 0.0542],
         [0.0545, 0.0553, 0.0543,  ..., 0.0572, 0.0560, 0.0542],
         [0.0545, 0.0553, 0.0543,  ..., 0.0572, 0.0560, 0.0542],
         [0.8365, 0.8341, 0.8372,  ..., 0.8283, 0.8320, 0.8373]],
        [[0.0528, 0.0509, 0.0555,  ..., 0.4815, 0.0601, 0.0532],
         [0.0528, 0.0509, 0.0555,  ..., 0.1728, 0.0601, 0.0532],
         [0.0528, 0.0509, 0.0555,  ..., 0.1728, 0.0601, 0.0532],
         [0.8416, 0.8472, 0.8336,  ..., 0.1728, 0.8197, 0.8403]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0521, 0.0547, 0.0541,  ..., 0.0507, 0.0543, 0.0527],
         [0.0521, 0.0547, 0.0541,  ..., 0.0507, 0.0543, 0.0527],
         [0.0521, 0.0547, 0.0541,  ..., 0.0507, 0.0543, 0.0527],
         [0.8436, 0.8358, 0.8378,  ..., 0.8480, 0.8372, 0.8418]],
        [[0.0498, 0.0518, 0.0536,  ..., 0.0077, 0.0530, 0.0538],
         [0.0498, 0.0518, 0.0536,  ..., 0.0077, 0.0530, 0.0538],
         [0.0498, 0.0518, 0.0536,  ..., 0.9770, 0.0530, 0.0538],
         [0.8507, 0.8445, 0.8391,  ..., 0.0077, 0.8409, 0.8386]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:00,425 [Process: 0] Synchronize training processes
2024-08-16 16:06:00,426 [Process: 0] Evaluating...
2024-08-16 16:06:00,428 [Process: 0] EPOCH 97:
2024-08-16 16:06:00,430 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0579, 0.0569, 0.0550,  ..., 0.0574, 0.0551, 0.0600],
         [0.0579, 0.0569, 0.0550,  ..., 0.0574, 0.0551, 0.0600],
         [0.0579, 0.0569, 0.0550,  ..., 0.0574, 0.0551, 0.0600],
         [0.8262, 0.8294, 0.8351,  ..., 0.8279, 0.8346, 0.8200]],
        [[0.0566, 0.0555, 0.0576,  ..., 0.3959, 0.0587, 0.0559],
         [0.0566, 0.0555, 0.0576,  ..., 0.2014, 0.0587, 0.0559],
         [0.0566, 0.0555, 0.0576,  ..., 0.2014, 0.0587, 0.0559],
         [0.8301, 0.8336, 0.8272,  ..., 0.2014, 0.8240, 0.8324]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0560, 0.0564, 0.0534,  ..., 0.0539, 0.0557, 0.0573],
         [0.0560, 0.0564, 0.0534,  ..., 0.0539, 0.0557, 0.0573],
         [0.0560, 0.0564, 0.0534,  ..., 0.0539, 0.0557, 0.0573],
         [0.8319, 0.8309, 0.8397,  ..., 0.8383, 0.8330, 0.8281]],
        [[0.0564, 0.0578, 0.0536,  ..., 0.0016, 0.0543, 0.0555],
         [0.0564, 0.0578, 0.0536,  ..., 0.0016, 0.0543, 0.0555],
         [0.0564, 0.0578, 0.0536,  ..., 0.9951, 0.0543, 0.0555],
         [0.8307, 0.8267, 0.8393,  ..., 0.0016, 0.8370, 0.8334]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:06:02,333 [Process: 0] Synchronize training processes
2024-08-16 16:06:02,334 [Process: 0] Evaluating...
2024-08-16 16:06:02,336 [Process: 0] EPOCH 98:
2024-08-16 16:06:02,338 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0594, 0.0586, 0.0554,  ..., 0.0602, 0.0592, 0.0579],
         [0.0594, 0.0586, 0.0554,  ..., 0.0602, 0.0592, 0.0579],
         [0.0594, 0.0586, 0.0554,  ..., 0.0602, 0.0592, 0.0579],
         [0.8218, 0.8243, 0.8337,  ..., 0.8195, 0.8223, 0.8263]],
        [[0.0569, 0.0578, 0.0559,  ..., 0.0780, 0.0567, 0.0573],
         [0.0569, 0.0578, 0.0559,  ..., 0.0780, 0.0567, 0.0573],
         [0.0569, 0.0578, 0.0559,  ..., 0.0780, 0.0567, 0.0573],
         [0.8294, 0.8266, 0.8324,  ..., 0.7659, 0.8299, 0.8282]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0531, 0.0529, 0.0514,  ..., 0.0501, 0.0530, 0.0506],
         [0.0531, 0.0529, 0.0514,  ..., 0.0501, 0.0530, 0.0506],
         [0.0531, 0.0529, 0.0514,  ..., 0.0501, 0.0530, 0.0506],
         [0.8407, 0.8413, 0.8458,  ..., 0.8497, 0.8410, 0.8481]],
        [[0.0481, 0.0495, 0.0523,  ..., 0.0402, 0.0507, 0.0514],
         [0.0481, 0.0495, 0.0523,  ..., 0.0402, 0.0507, 0.0514],
         [0.0481, 0.0495, 0.0523,  ..., 0.8794, 0.0507, 0.0514],
         [0.8557, 0.8514, 0.8432,  ..., 0.0402, 0.8478, 0.8459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:06:04,243 [Process: 0] Synchronize training processes
2024-08-16 16:06:04,243 [Process: 0] Evaluating...
2024-08-16 16:06:04,245 [Process: 0] EPOCH 99:
2024-08-16 16:06:04,247 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0568, 0.0559, 0.0575,  ..., 0.0524, 0.0574, 0.0581],
         [0.0568, 0.0559, 0.0575,  ..., 0.0524, 0.0574, 0.0581],
         [0.0568, 0.0559, 0.0575,  ..., 0.0524, 0.0574, 0.0581],
         [0.8297, 0.8323, 0.8274,  ..., 0.8427, 0.8278, 0.8256]],
        [[0.0553, 0.0574, 0.0526,  ..., 0.4039, 0.0568, 0.0548],
         [0.0553, 0.0574, 0.0526,  ..., 0.1987, 0.0568, 0.0548],
         [0.0553, 0.0574, 0.0526,  ..., 0.1987, 0.0568, 0.0548],
         [0.8341, 0.8277, 0.8422,  ..., 0.1987, 0.8297, 0.8356]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0492, 0.0488, 0.0490,  ..., 0.0476, 0.0497, 0.0502],
         [0.0492, 0.0488, 0.0490,  ..., 0.0476, 0.0497, 0.0502],
         [0.0492, 0.0488, 0.0490,  ..., 0.0476, 0.0497, 0.0502],
         [0.8525, 0.8537, 0.8531,  ..., 0.8571, 0.8508, 0.8493]],
        [[0.0498, 0.0479, 0.0478,  ..., 0.0037, 0.0493, 0.0472],
         [0.0498, 0.0479, 0.0478,  ..., 0.0037, 0.0493, 0.0472],
         [0.0498, 0.0479, 0.0478,  ..., 0.9888, 0.0493, 0.0472],
         [0.8506, 0.8563, 0.8566,  ..., 0.0037, 0.8521, 0.8584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:06:06,147 [Process: 0] Synchronize training processes
2024-08-16 16:06:06,147 [Process: 0] Evaluating...
2024-08-16 16:06:06,149 [Process: 0] EPOCH 100:
2024-08-16 16:06:06,151 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0549, 0.0578, 0.0549,  ..., 0.0552, 0.0569, 0.0547],
         [0.0549, 0.0578, 0.0549,  ..., 0.0552, 0.0569, 0.0547],
         [0.0549, 0.0578, 0.0549,  ..., 0.0552, 0.0569, 0.0547],
         [0.8354, 0.8266, 0.8353,  ..., 0.8344, 0.8293, 0.8358]],
        [[0.0596, 0.0564, 0.0603,  ..., 0.0568, 0.0585, 0.0621],
         [0.0596, 0.0564, 0.0603,  ..., 0.0568, 0.0585, 0.0621],
         [0.0596, 0.0564, 0.0603,  ..., 0.0568, 0.0585, 0.0621],
         [0.8213, 0.8307, 0.8191,  ..., 0.8297, 0.8244, 0.8136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0494, 0.0477, 0.0492,  ..., 0.0473, 0.0478, 0.0475],
         [0.0494, 0.0477, 0.0492,  ..., 0.0473, 0.0478, 0.0475],
         [0.0494, 0.0477, 0.0492,  ..., 0.0473, 0.0478, 0.0475],
         [0.8519, 0.8570, 0.8525,  ..., 0.8580, 0.8566, 0.8574]],
        [[0.0453, 0.0494, 0.0501,  ..., 0.0018, 0.0478, 0.0491],
         [0.0453, 0.0494, 0.0501,  ..., 0.0018, 0.0478, 0.0491],
         [0.0453, 0.0494, 0.0501,  ..., 0.9947, 0.0478, 0.0491],
         [0.8642, 0.8519, 0.8498,  ..., 0.0018, 0.8565, 0.8527]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:06:08,063 [Process: 0] Synchronize training processes
2024-08-16 16:06:08,063 [Process: 0] Evaluating...
2024-08-16 16:06:08,065 [Process: 0] EPOCH 101:
2024-08-16 16:06:08,067 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0527, 0.0545, 0.0568,  ..., 0.0542, 0.0557, 0.0543],
         [0.0527, 0.0545, 0.0568,  ..., 0.0542, 0.0557, 0.0543],
         [0.0527, 0.0545, 0.0568,  ..., 0.0542, 0.0557, 0.0543],
         [0.8418, 0.8366, 0.8295,  ..., 0.8373, 0.8330, 0.8372]],
        [[0.0547, 0.0546, 0.0549,  ..., 0.3499, 0.0540, 0.0564],
         [0.0547, 0.0546, 0.0549,  ..., 0.2167, 0.0540, 0.0564],
         [0.0547, 0.0546, 0.0549,  ..., 0.2167, 0.0540, 0.0564],
         [0.8359, 0.8362, 0.8354,  ..., 0.2167, 0.8380, 0.8307]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0460, 0.0477, 0.0490,  ..., 0.0491, 0.0476, 0.0450],
         [0.0460, 0.0477, 0.0490,  ..., 0.0491, 0.0476, 0.0450],
         [0.0460, 0.0477, 0.0490,  ..., 0.0491, 0.0476, 0.0450],
         [0.8620, 0.8568, 0.8530,  ..., 0.8526, 0.8571, 0.8651]],
        [[0.0462, 0.0454, 0.0477,  ..., 0.0025, 0.0455, 0.0460],
         [0.0462, 0.0454, 0.0477,  ..., 0.0025, 0.0455, 0.0460],
         [0.0462, 0.0454, 0.0477,  ..., 0.9926, 0.0455, 0.0460],
         [0.8613, 0.8639, 0.8568,  ..., 0.0025, 0.8635, 0.8621]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:06:09,981 [Process: 0] Synchronize training processes
2024-08-16 16:06:09,981 [Process: 0] Evaluating...
2024-08-16 16:06:09,990 [Process: 0] EPOCH 102:
2024-08-16 16:06:09,992 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:06:11,901 [Process: 0] Synchronize training processes
2024-08-16 16:06:11,901 [Process: 0] Evaluating...
2024-08-16 16:06:11,903 [Process: 0] EPOCH 103:
2024-08-16 16:06:11,905 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0560, 0.0590, 0.0539,  ..., 0.0535, 0.0544, 0.0567],
         [0.0560, 0.0590, 0.0539,  ..., 0.0535, 0.0544, 0.0567],
         [0.0560, 0.0590, 0.0539,  ..., 0.0535, 0.0544, 0.0567],
         [0.8319, 0.8230, 0.8384,  ..., 0.8394, 0.8367, 0.8300]],
        [[0.0553, 0.0573, 0.0568,  ..., 0.0585, 0.0579, 0.0571],
         [0.0553, 0.0573, 0.0568,  ..., 0.0585, 0.0579, 0.0571],
         [0.0553, 0.0573, 0.0568,  ..., 0.0585, 0.0579, 0.0571],
         [0.8340, 0.8280, 0.8295,  ..., 0.8245, 0.8263, 0.8287]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0489, 0.0498, 0.0496,  ..., 0.0493, 0.0496, 0.0485],
         [0.0489, 0.0498, 0.0496,  ..., 0.0493, 0.0496, 0.0485],
         [0.0489, 0.0498, 0.0496,  ..., 0.0493, 0.0496, 0.0485],
         [0.8533, 0.8505, 0.8512,  ..., 0.8520, 0.8513, 0.8545]],
        [[0.0437, 0.0447, 0.0475,  ..., 0.0030, 0.0482, 0.0482],
         [0.0437, 0.0447, 0.0475,  ..., 0.0030, 0.0482, 0.0482],
         [0.0437, 0.0447, 0.0475,  ..., 0.9910, 0.0482, 0.0482],
         [0.8688, 0.8658, 0.8576,  ..., 0.0030, 0.8554, 0.8554]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:06:13,815 [Process: 0] Synchronize training processes
2024-08-16 16:06:13,815 [Process: 0] Evaluating...
2024-08-16 16:06:13,817 [Process: 0] EPOCH 104:
2024-08-16 16:06:13,819 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0535, 0.0524, 0.0564,  ..., 0.0560, 0.0537, 0.0547],
         [0.0535, 0.0524, 0.0564,  ..., 0.0560, 0.0537, 0.0547],
         [0.0535, 0.0524, 0.0564,  ..., 0.0560, 0.0537, 0.0547],
         [0.8395, 0.8429, 0.8309,  ..., 0.8320, 0.8390, 0.8359]],
        [[0.0568, 0.0573, 0.0557,  ..., 0.0557, 0.0521, 0.0559],
         [0.0568, 0.0573, 0.0557,  ..., 0.0557, 0.0521, 0.0559],
         [0.0568, 0.0573, 0.0557,  ..., 0.0557, 0.0521, 0.0559],
         [0.8296, 0.8281, 0.8330,  ..., 0.8330, 0.8437, 0.8324]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0468, 0.0480, 0.0472,  ..., 0.0475, 0.0490, 0.0456],
         [0.0468, 0.0480, 0.0472,  ..., 0.0475, 0.0490, 0.0456],
         [0.0468, 0.0480, 0.0472,  ..., 0.0475, 0.0490, 0.0456],
         [0.8597, 0.8561, 0.8584,  ..., 0.8574, 0.8531, 0.8632]],
        [[0.0463, 0.0454, 0.0496,  ..., 0.0379, 0.0463, 0.0454],
         [0.0463, 0.0454, 0.0496,  ..., 0.0379, 0.0463, 0.0454],
         [0.0463, 0.0454, 0.0496,  ..., 0.8863, 0.0463, 0.0454],
         [0.8611, 0.8637, 0.8513,  ..., 0.0379, 0.8612, 0.8637]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:06:15,732 [Process: 0] Synchronize training processes
2024-08-16 16:06:15,732 [Process: 0] Evaluating...
2024-08-16 16:06:15,734 [Process: 0] EPOCH 105:
2024-08-16 16:06:15,736 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0592, 0.0592, 0.0563,  ..., 0.0598, 0.0566, 0.0551],
         [0.0592, 0.0592, 0.0563,  ..., 0.0598, 0.0566, 0.0551],
         [0.0592, 0.0592, 0.0563,  ..., 0.0598, 0.0566, 0.0551],
         [0.8225, 0.8223, 0.8310,  ..., 0.8205, 0.8303, 0.8347]],
        [[0.0553, 0.0565, 0.0557,  ..., 0.0551, 0.0570, 0.0562],
         [0.0553, 0.0565, 0.0557,  ..., 0.0551, 0.0570, 0.0562],
         [0.0553, 0.0565, 0.0557,  ..., 0.0551, 0.0570, 0.0562],
         [0.8340, 0.8305, 0.8329,  ..., 0.8346, 0.8291, 0.8315]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0490, 0.0451, 0.0454,  ..., 0.0447, 0.0483, 0.0460],
         [0.0490, 0.0451, 0.0454,  ..., 0.0447, 0.0483, 0.0460],
         [0.0490, 0.0451, 0.0454,  ..., 0.0447, 0.0483, 0.0460],
         [0.8531, 0.8648, 0.8637,  ..., 0.8658, 0.8552, 0.8620]],
        [[0.0442, 0.0420, 0.0463,  ..., 0.0047, 0.0475, 0.0475],
         [0.0442, 0.0420, 0.0463,  ..., 0.0047, 0.0475, 0.0475],
         [0.0442, 0.0420, 0.0463,  ..., 0.9859, 0.0475, 0.0475],
         [0.8673, 0.8741, 0.8612,  ..., 0.0047, 0.8575, 0.8575]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:06:17,645 [Process: 0] Synchronize training processes
2024-08-16 16:06:17,645 [Process: 0] Evaluating...
2024-08-16 16:06:17,647 [Process: 0] EPOCH 106:
2024-08-16 16:06:17,649 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0535, 0.0510, 0.0506,  ..., 0.0496, 0.0484, 0.0534],
         [0.0535, 0.0510, 0.0506,  ..., 0.0496, 0.0484, 0.0534],
         [0.0535, 0.0510, 0.0506,  ..., 0.0496, 0.0484, 0.0534],
         [0.8396, 0.8471, 0.8483,  ..., 0.8512, 0.8547, 0.8398]],
        [[0.0531, 0.0528, 0.0515,  ..., 0.5373, 0.0504, 0.0505],
         [0.0531, 0.0528, 0.0515,  ..., 0.1542, 0.0504, 0.0505],
         [0.0531, 0.0528, 0.0515,  ..., 0.1542, 0.0504, 0.0505],
         [0.8406, 0.8417, 0.8456,  ..., 0.1542, 0.8488, 0.8485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0454, 0.0442, 0.0432,  ..., 0.0455, 0.0454, 0.0441],
         [0.0454, 0.0442, 0.0432,  ..., 0.0456, 0.0454, 0.0441],
         [0.0454, 0.0442, 0.0432,  ..., 0.0455, 0.0454, 0.0441],
         [0.8638, 0.8675, 0.8703,  ..., 0.8635, 0.8638, 0.8676]],
        [[0.0445, 0.0441, 0.0421,  ..., 0.0018, 0.0452, 0.0459],
         [0.0445, 0.0441, 0.0421,  ..., 0.0018, 0.0452, 0.0459],
         [0.0445, 0.0441, 0.0421,  ..., 0.9947, 0.0452, 0.0459],
         [0.8666, 0.8676, 0.8736,  ..., 0.0018, 0.8644, 0.8622]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:06:19,709 [Process: 0] Synchronize training processes
2024-08-16 16:06:19,709 [Process: 0] Evaluating...
2024-08-16 16:06:19,711 [Process: 0] EPOCH 107:
2024-08-16 16:06:19,713 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0568, 0.0561, 0.0574,  ..., 0.0550, 0.0560, 0.0579],
         [0.0568, 0.0561, 0.0574,  ..., 0.0550, 0.0560, 0.0579],
         [0.0568, 0.0561, 0.0574,  ..., 0.0550, 0.0560, 0.0579],
         [0.8296, 0.8318, 0.8277,  ..., 0.8350, 0.8320, 0.8263]],
        [[0.0502, 0.0521, 0.0523,  ..., 0.0543, 0.0529, 0.0538],
         [0.0502, 0.0521, 0.0523,  ..., 0.0543, 0.0529, 0.0538],
         [0.0502, 0.0521, 0.0523,  ..., 0.0543, 0.0529, 0.0538],
         [0.8493, 0.8437, 0.8431,  ..., 0.8372, 0.8412, 0.8385]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0441, 0.0432, 0.0429,  ..., 0.0455, 0.0453, 0.0463],
         [0.0441, 0.0432, 0.0429,  ..., 0.0455, 0.0453, 0.0463],
         [0.0441, 0.0432, 0.0429,  ..., 0.0455, 0.0453, 0.0463],
         [0.8678, 0.8704, 0.8712,  ..., 0.8634, 0.8640, 0.8611]],
        [[0.0477, 0.0465, 0.0420,  ..., 0.0046, 0.0453, 0.0431],
         [0.0477, 0.0465, 0.0420,  ..., 0.0046, 0.0453, 0.0431],
         [0.0477, 0.0465, 0.0420,  ..., 0.9861, 0.0453, 0.0431],
         [0.8570, 0.8606, 0.8740,  ..., 0.0046, 0.8642, 0.8708]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
2024-08-16 16:06:21,626 [Process: 0] Synchronize training processes
2024-08-16 16:06:21,626 [Process: 0] Evaluating...
2024-08-16 16:06:21,628 [Process: 0] EPOCH 108:
2024-08-16 16:06:21,630 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0592, 0.0578, 0.0528,  ..., 0.0538, 0.0639, 0.0609],
         [0.0592, 0.0578, 0.0528,  ..., 0.0538, 0.0639, 0.0609],
         [0.0592, 0.0578, 0.0528,  ..., 0.0538, 0.0639, 0.0609],
         [0.8223, 0.8265, 0.8415,  ..., 0.8387, 0.8084, 0.8174]],
        [[0.0509, 0.0528, 0.0501,  ..., 0.0521, 0.0509, 0.0526],
         [0.0509, 0.0528, 0.0501,  ..., 0.0521, 0.0509, 0.0526],
         [0.0509, 0.0528, 0.0501,  ..., 0.0521, 0.0509, 0.0526],
         [0.8472, 0.8416, 0.8496,  ..., 0.8436, 0.8474, 0.8421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0449, 0.0434, 0.0456,  ..., 0.0429, 0.0451, 0.0399],
         [0.0449, 0.0434, 0.0456,  ..., 0.0429, 0.0451, 0.0399],
         [0.0449, 0.0434, 0.0456,  ..., 0.0429, 0.0451, 0.0399],
         [0.8653, 0.8697, 0.8631,  ..., 0.8713, 0.8648, 0.8802]],
        [[0.0430, 0.0408, 0.0419,  ..., 0.0019, 0.0440, 0.0416],
         [0.0430, 0.0408, 0.0419,  ..., 0.0019, 0.0440, 0.0416],
         [0.0430, 0.0408, 0.0419,  ..., 0.9942, 0.0440, 0.0416],
         [0.8709, 0.8776, 0.8742,  ..., 0.0019, 0.8680, 0.8752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:23,526 [Process: 0] Synchronize training processes
2024-08-16 16:06:23,527 [Process: 0] Evaluating...
2024-08-16 16:06:23,528 [Process: 0] EPOCH 109:
2024-08-16 16:06:23,530 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.0518, 0.0516, 0.0541,  ..., 0.0553, 0.0585, 0.0562],
         [0.0518, 0.0516, 0.0541,  ..., 0.0553, 0.0585, 0.0562],
         [0.0518, 0.0516, 0.0541,  ..., 0.0553, 0.0585, 0.0562],
         [0.8446, 0.8452, 0.8376,  ..., 0.8342, 0.8246, 0.8315]],
        [[0.0506, 0.0500, 0.0491,  ..., 0.0485, 0.0488, 0.0479],
         [0.0506, 0.0500, 0.0491,  ..., 0.0485, 0.0488, 0.0479],
         [0.0506, 0.0500, 0.0491,  ..., 0.0485, 0.0488, 0.0479],
         [0.8481, 0.8499, 0.8528,  ..., 0.8545, 0.8537, 0.8562]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0450, 0.0449, 0.0419,  ..., 0.0426, 0.0446, 0.0430],
         [0.0450, 0.0449, 0.0419,  ..., 0.0426, 0.0446, 0.0430],
         [0.0450, 0.0449, 0.0419,  ..., 0.0426, 0.0446, 0.0430],
         [0.8650, 0.8654, 0.8744,  ..., 0.8723, 0.8661, 0.8710]],
        [[0.0416, 0.0453, 0.0432,  ..., 0.0157, 0.0446, 0.0436],
         [0.0416, 0.0453, 0.0432,  ..., 0.0157, 0.0446, 0.0436],
         [0.0416, 0.0453, 0.0432,  ..., 0.9529, 0.0446, 0.0436],
         [0.8751, 0.8640, 0.8704,  ..., 0.0157, 0.8661, 0.8692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0568, 0.0575, 0.0528,  ..., 0.0556, 0.0492, 0.0501],
         [0.0568, 0.0575, 0.0528,  ..., 0.0556, 0.0492, 0.0501],
         [0.0568, 0.0575, 0.0528,  ..., 0.0556, 0.0492, 0.0501],
         [0.8295, 0.8275, 0.8416,  ..., 0.8331, 0.8523, 0.8498]],
        [[0.0495, 0.0498, 0.0500,  ..., 0.0477, 0.0489, 0.0506],
         [0.0495, 0.0498, 0.0500,  ..., 0.0477, 0.0489, 0.0506],
         [0.0495, 0.0498, 0.0500,  ..., 0.0477, 0.0489, 0.0506],
         [0.8514, 0.8506, 0.8499,  ..., 0.8568, 0.8534, 0.8481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:25,446 [Process: 0] Synchronize training processes
2024-08-16 16:06:25,446 [Process: 0] Evaluating...
2024-08-16 16:06:25,448 [Process: 0] EPOCH 110:
2024-08-16 16:06:25,450 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0437, 0.0438, 0.0425,  ..., 0.0417, 0.0448, 0.0453],
         [0.0437, 0.0438, 0.0425,  ..., 0.0417, 0.0448, 0.0453],
         [0.0437, 0.0438, 0.0425,  ..., 0.0417, 0.0448, 0.0453],
         [0.8690, 0.8685, 0.8726,  ..., 0.8749, 0.8656, 0.8642]],
        [[0.0438, 0.0418, 0.0420,  ..., 0.0037, 0.0427, 0.0411],
         [0.0438, 0.0418, 0.0420,  ..., 0.0037, 0.0427, 0.0411],
         [0.0438, 0.0418, 0.0420,  ..., 0.9888, 0.0427, 0.0411],
         [0.8687, 0.8747, 0.8740,  ..., 0.0037, 0.8719, 0.8767]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0402, 0.0390, 0.0406,  ..., 0.0412, 0.0418, 0.0397],
         [0.0402, 0.0390, 0.0406,  ..., 0.0412, 0.0418, 0.0400],
         [0.0402, 0.0390, 0.0406,  ..., 0.0412, 0.0418, 0.0397],
         [0.8795, 0.8829, 0.8781,  ..., 0.8763, 0.8747, 0.8805]],
        [[0.0385, 0.0389, 0.0426,  ..., 0.0424, 0.0396, 0.0425],
         [0.0385, 0.0389, 0.0426,  ..., 0.0424, 0.0396, 0.0425],
         [0.0385, 0.0389, 0.0426,  ..., 0.0424, 0.0396, 0.0425],
         [0.8846, 0.8833, 0.8721,  ..., 0.8728, 0.8811, 0.8724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:27,353 [Process: 0] Synchronize training processes
2024-08-16 16:06:27,354 [Process: 0] Evaluating...
2024-08-16 16:06:27,356 [Process: 0] EPOCH 111:
2024-08-16 16:06:27,357 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0405, 0.0387, 0.0426,  ..., 0.0405, 0.0417, 0.0444],
         [0.0405, 0.0387, 0.0426,  ..., 0.0405, 0.0417, 0.0446],
         [0.0405, 0.0387, 0.0426,  ..., 0.0405, 0.0417, 0.0444],
         [0.8785, 0.8838, 0.8722,  ..., 0.8785, 0.8749, 0.8666]],
        [[0.0427, 0.0432, 0.0403,  ..., 0.0100, 0.0422, 0.0425],
         [0.0427, 0.0432, 0.0403,  ..., 0.0100, 0.0422, 0.0425],
         [0.0427, 0.0432, 0.0403,  ..., 0.9700, 0.0422, 0.0425],
         [0.8720, 0.8704, 0.8792,  ..., 0.0100, 0.8735, 0.8725]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0504, 0.0506, 0.0507,  ..., 0.0468, 0.0488, 0.0515],
         [0.0504, 0.0506, 0.0507,  ..., 0.0468, 0.0488, 0.0515],
         [0.0504, 0.0506, 0.0507,  ..., 0.0468, 0.0488, 0.0515],
         [0.8487, 0.8481, 0.8479,  ..., 0.8597, 0.8536, 0.8456]],
        [[0.0499, 0.0485, 0.0492,  ..., 0.3995, 0.0480, 0.0490],
         [0.0499, 0.0485, 0.0492,  ..., 0.2002, 0.0480, 0.0490],
         [0.0499, 0.0485, 0.0492,  ..., 0.2002, 0.0480, 0.0490],
         [0.8502, 0.8544, 0.8525,  ..., 0.2002, 0.8559, 0.8530]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:29,276 [Process: 0] Synchronize training processes
2024-08-16 16:06:29,276 [Process: 0] Evaluating...
2024-08-16 16:06:29,284 [Process: 0] EPOCH 112:
2024-08-16 16:06:29,286 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.2339e-02, 4.4275e-02, 4.2445e-02,  ..., 4.2655e-02,
          4.2420e-02, 4.3223e-02],
         [4.2339e-02, 4.4275e-02, 4.2445e-02,  ..., 4.2655e-02,
          4.2420e-02, 4.3223e-02],
         [4.2339e-02, 4.4275e-02, 4.2445e-02,  ..., 4.2655e-02,
          4.2420e-02, 4.3223e-02],
         [8.7298e-01, 8.6717e-01, 8.7267e-01,  ..., 8.7204e-01,
          8.7274e-01, 8.7033e-01]],
        [[4.4283e-02, 3.9974e-02, 4.3101e-02,  ..., 1.2611e-04,
          4.0441e-02, 4.4021e-02],
         [4.4283e-02, 3.9974e-02, 4.3101e-02,  ..., 1.2611e-04,
          4.0441e-02, 4.4021e-02],
         [4.4283e-02, 3.9974e-02, 4.3101e-02,  ..., 9.9962e-01,
          4.0441e-02, 4.4021e-02],
         [8.6715e-01, 8.8008e-01, 8.7070e-01,  ..., 1.2611e-04,
          8.7868e-01, 8.6794e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0467, 0.0480, 0.0472,  ..., 0.0477, 0.0452, 0.0455],
         [0.0467, 0.0480, 0.0472,  ..., 0.0477, 0.0452, 0.0455],
         [0.0467, 0.0480, 0.0472,  ..., 0.0477, 0.0452, 0.0455],
         [0.8598, 0.8560, 0.8585,  ..., 0.8569, 0.8643, 0.8635]],
        [[0.0468, 0.0503, 0.0470,  ..., 0.3467, 0.0490, 0.0468],
         [0.0468, 0.0503, 0.0470,  ..., 0.2178, 0.0490, 0.0468],
         [0.0468, 0.0503, 0.0470,  ..., 0.2178, 0.0490, 0.0468],
         [0.8596, 0.8491, 0.8589,  ..., 0.2178, 0.8530, 0.8595]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:31,200 [Process: 0] Synchronize training processes
2024-08-16 16:06:31,200 [Process: 0] Evaluating...
2024-08-16 16:06:31,202 [Process: 0] EPOCH 113:
2024-08-16 16:06:31,204 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.2276e-02, 4.1525e-02, 4.2231e-02,  ..., 4.1394e-02,
          4.1909e-02, 4.0822e-02],
         [4.2276e-02, 4.1525e-02, 4.2231e-02,  ..., 4.1394e-02,
          4.1909e-02, 4.0822e-02],
         [4.2276e-02, 4.1525e-02, 4.2231e-02,  ..., 4.1394e-02,
          4.1909e-02, 4.0822e-02],
         [8.7317e-01, 8.7543e-01, 8.7331e-01,  ..., 8.7582e-01,
          8.7427e-01, 8.7754e-01]],
        [[4.1343e-02, 4.2761e-02, 4.3481e-02,  ..., 4.4564e-05,
          4.1514e-02, 4.0966e-02],
         [4.1343e-02, 4.2761e-02, 4.3481e-02,  ..., 4.4564e-05,
          4.1514e-02, 4.0966e-02],
         [4.1343e-02, 4.2761e-02, 4.3481e-02,  ..., 9.9987e-01,
          4.1514e-02, 4.0966e-02],
         [8.7597e-01, 8.7172e-01, 8.6956e-01,  ..., 4.4564e-05,
          8.7546e-01, 8.7710e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0456, 0.0470, 0.0458,  ..., 0.0440, 0.0449, 0.0472],
         [0.0456, 0.0470, 0.0458,  ..., 0.0440, 0.0449, 0.0472],
         [0.0456, 0.0470, 0.0458,  ..., 0.0440, 0.0449, 0.0472],
         [0.8633, 0.8590, 0.8625,  ..., 0.8680, 0.8653, 0.8584]],
        [[0.0473, 0.0461, 0.0444,  ..., 0.2401, 0.0459, 0.0470],
         [0.0473, 0.0461, 0.0444,  ..., 0.2401, 0.0459, 0.0470],
         [0.0473, 0.0461, 0.0444,  ..., 0.2797, 0.0459, 0.0470],
         [0.8582, 0.8616, 0.8669,  ..., 0.2401, 0.8622, 0.8589]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:33,112 [Process: 0] Synchronize training processes
2024-08-16 16:06:33,112 [Process: 0] Evaluating...
2024-08-16 16:06:33,114 [Process: 0] EPOCH 114:
2024-08-16 16:06:33,116 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.1729e-02, 4.0146e-02, 4.3092e-02,  ..., 4.2724e-02,
          4.2423e-02, 4.1312e-02],
         [4.1729e-02, 4.0146e-02, 4.3092e-02,  ..., 4.2724e-02,
          4.2423e-02, 4.1312e-02],
         [4.1729e-02, 4.0146e-02, 4.3092e-02,  ..., 4.2724e-02,
          4.2423e-02, 4.1312e-02],
         [8.7481e-01, 8.7956e-01, 8.7072e-01,  ..., 8.7183e-01,
          8.7273e-01, 8.7606e-01]],
        [[4.3474e-02, 4.1901e-02, 4.2079e-02,  ..., 2.4729e-04,
          4.2739e-02, 4.2831e-02],
         [4.3474e-02, 4.1901e-02, 4.2079e-02,  ..., 2.4729e-04,
          4.2739e-02, 4.2831e-02],
         [4.3474e-02, 4.1901e-02, 4.2079e-02,  ..., 9.9926e-01,
          4.2739e-02, 4.2831e-02],
         [8.6958e-01, 8.7430e-01, 8.7376e-01,  ..., 2.4729e-04,
          8.7178e-01, 8.7151e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0488, 0.0492, 0.0462,  ..., 0.0443, 0.0448, 0.0460],
         [0.0488, 0.0492, 0.0462,  ..., 0.0443, 0.0448, 0.0460],
         [0.0488, 0.0492, 0.0462,  ..., 0.0443, 0.0448, 0.0460],
         [0.8535, 0.8524, 0.8615,  ..., 0.8670, 0.8655, 0.8620]],
        [[0.0432, 0.0442, 0.0450,  ..., 0.2500, 0.0443, 0.0453],
         [0.0432, 0.0442, 0.0450,  ..., 0.2500, 0.0443, 0.0453],
         [0.0432, 0.0442, 0.0450,  ..., 0.2500, 0.0443, 0.0453],
         [0.8705, 0.8675, 0.8649,  ..., 0.2500, 0.8670, 0.8640]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:35,024 [Process: 0] Synchronize training processes
2024-08-16 16:06:35,024 [Process: 0] Evaluating...
2024-08-16 16:06:35,026 [Process: 0] EPOCH 115:
2024-08-16 16:06:35,028 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.3642e-02, 4.4369e-02, 4.2952e-02,  ..., 4.4222e-02,
          4.2697e-02, 4.3915e-02],
         [4.3642e-02, 4.4369e-02, 4.2952e-02,  ..., 4.4222e-02,
          4.2697e-02, 4.3915e-02],
         [4.3642e-02, 4.4369e-02, 4.2952e-02,  ..., 4.4222e-02,
          4.2697e-02, 4.3915e-02],
         [8.6907e-01, 8.6689e-01, 8.7114e-01,  ..., 8.6733e-01,
          8.7191e-01, 8.6825e-01]],
        [[4.1804e-02, 4.1878e-02, 4.2288e-02,  ..., 3.4739e-04,
          4.1633e-02, 4.1269e-02],
         [4.1804e-02, 4.1878e-02, 4.2288e-02,  ..., 3.4739e-04,
          4.1633e-02, 4.1269e-02],
         [4.1804e-02, 4.1878e-02, 4.2288e-02,  ..., 9.9896e-01,
          4.1633e-02, 4.1269e-02],
         [8.7459e-01, 8.7436e-01, 8.7314e-01,  ..., 3.4739e-04,
          8.7510e-01, 8.7619e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0479, 0.0443, 0.0424,  ..., 0.0448, 0.0465, 0.0467],
         [0.0479, 0.0443, 0.0424,  ..., 0.0448, 0.0465, 0.0467],
         [0.0479, 0.0443, 0.0424,  ..., 0.0448, 0.0465, 0.0467],
         [0.8563, 0.8672, 0.8727,  ..., 0.8657, 0.8606, 0.8600]],
        [[0.0433, 0.0446, 0.0436,  ..., 0.5812, 0.0445, 0.0409],
         [0.0433, 0.0446, 0.0436,  ..., 0.1396, 0.0445, 0.0409],
         [0.0433, 0.0446, 0.0436,  ..., 0.1396, 0.0445, 0.0409],
         [0.8702, 0.8661, 0.8692,  ..., 0.1396, 0.8664, 0.8773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:36,933 [Process: 0] Synchronize training processes
2024-08-16 16:06:36,934 [Process: 0] Evaluating...
2024-08-16 16:06:36,936 [Process: 0] EPOCH 116:
2024-08-16 16:06:36,938 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.1672e-02, 4.0695e-02, 4.2253e-02,  ..., 3.9713e-02,
          4.3916e-02, 4.3703e-02],
         [4.1672e-02, 4.0695e-02, 4.2253e-02,  ..., 3.9713e-02,
          4.3916e-02, 4.3703e-02],
         [4.1672e-02, 4.0695e-02, 4.2253e-02,  ..., 3.9713e-02,
          4.3916e-02, 4.3703e-02],
         [8.7498e-01, 8.7792e-01, 8.7324e-01,  ..., 8.8086e-01,
          8.6825e-01, 8.6889e-01]],
        [[4.1850e-02, 4.2577e-02, 4.3431e-02,  ..., 4.9641e-04,
          4.1765e-02, 4.1339e-02],
         [4.1850e-02, 4.2577e-02, 4.3431e-02,  ..., 4.9641e-04,
          4.1765e-02, 4.1339e-02],
         [4.1850e-02, 4.2577e-02, 4.3431e-02,  ..., 9.9851e-01,
          4.1765e-02, 4.1339e-02],
         [8.7445e-01, 8.7227e-01, 8.6971e-01,  ..., 4.9641e-04,
          8.7470e-01, 8.7598e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0453, 0.0459, 0.0450,  ..., 0.0491, 0.0504, 0.0475],
         [0.0453, 0.0459, 0.0450,  ..., 0.0491, 0.0504, 0.0475],
         [0.0453, 0.0459, 0.0450,  ..., 0.0491, 0.0504, 0.0475],
         [0.8640, 0.8624, 0.8649,  ..., 0.8526, 0.8489, 0.8574]],
        [[0.0435, 0.0416, 0.0413,  ..., 0.3800, 0.0406, 0.0411],
         [0.0435, 0.0416, 0.0413,  ..., 0.2067, 0.0406, 0.0411],
         [0.0435, 0.0416, 0.0413,  ..., 0.2067, 0.0406, 0.0411],
         [0.8696, 0.8752, 0.8760,  ..., 0.2067, 0.8783, 0.8766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:38,846 [Process: 0] Synchronize training processes
2024-08-16 16:06:38,846 [Process: 0] Evaluating...
2024-08-16 16:06:38,848 [Process: 0] EPOCH 117:
2024-08-16 16:06:38,850 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0407, 0.0397, 0.0410,  ..., 0.0423, 0.0422, 0.0428],
         [0.0407, 0.0397, 0.0410,  ..., 0.0423, 0.0422, 0.0428],
         [0.0407, 0.0397, 0.0410,  ..., 0.0423, 0.0422, 0.0428],
         [0.8780, 0.8809, 0.8770,  ..., 0.8732, 0.8734, 0.8716]],
        [[0.0421, 0.0434, 0.0417,  ..., 0.0034, 0.0439, 0.0404],
         [0.0421, 0.0434, 0.0417,  ..., 0.0034, 0.0439, 0.0404],
         [0.0421, 0.0434, 0.0417,  ..., 0.9898, 0.0439, 0.0404],
         [0.8737, 0.8699, 0.8750,  ..., 0.0034, 0.8684, 0.8788]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0446, 0.0481, 0.0464,  ..., 0.0434, 0.0449, 0.0442],
         [0.0446, 0.0481, 0.0464,  ..., 0.0434, 0.0449, 0.0442],
         [0.0446, 0.0481, 0.0464,  ..., 0.0434, 0.0449, 0.0442],
         [0.8661, 0.8558, 0.8607,  ..., 0.8698, 0.8654, 0.8674]],
        [[0.0418, 0.0443, 0.0428,  ..., 0.3583, 0.0419, 0.0436],
         [0.0418, 0.0443, 0.0428,  ..., 0.2139, 0.0419, 0.0436],
         [0.0418, 0.0443, 0.0428,  ..., 0.2139, 0.0419, 0.0436],
         [0.8747, 0.8671, 0.8716,  ..., 0.2139, 0.8742, 0.8692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:40,756 [Process: 0] Synchronize training processes
2024-08-16 16:06:40,757 [Process: 0] Evaluating...
2024-08-16 16:06:40,758 [Process: 0] EPOCH 118:
2024-08-16 16:06:40,760 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0397, 0.0418, 0.0430,  ..., 0.0397, 0.0430, 0.0418],
         [0.0397, 0.0418, 0.0430,  ..., 0.0397, 0.0430, 0.0418],
         [0.0397, 0.0418, 0.0430,  ..., 0.0397, 0.0430, 0.0418],
         [0.8808, 0.8745, 0.8710,  ..., 0.8809, 0.8709, 0.8746]],
        [[0.0415, 0.0425, 0.0401,  ..., 0.0031, 0.0417, 0.0406],
         [0.0415, 0.0425, 0.0401,  ..., 0.0031, 0.0417, 0.0406],
         [0.0415, 0.0425, 0.0401,  ..., 0.9906, 0.0417, 0.0406],
         [0.8756, 0.8725, 0.8796,  ..., 0.0031, 0.8748, 0.8783]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0432, 0.0441, 0.0437,  ..., 0.0423, 0.0452, 0.0459],
         [0.0432, 0.0441, 0.0437,  ..., 0.0423, 0.0452, 0.0459],
         [0.0432, 0.0441, 0.0437,  ..., 0.0423, 0.0452, 0.0459],
         [0.8703, 0.8677, 0.8690,  ..., 0.8732, 0.8645, 0.8623]],
        [[0.0445, 0.0446, 0.0441,  ..., 0.2500, 0.0426, 0.0434],
         [0.0445, 0.0446, 0.0441,  ..., 0.2500, 0.0426, 0.0434],
         [0.0445, 0.0446, 0.0441,  ..., 0.2500, 0.0426, 0.0434],
         [0.8666, 0.8663, 0.8676,  ..., 0.2500, 0.8722, 0.8699]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:06:42,730 [Process: 0] Synchronize training processes
2024-08-16 16:06:42,730 [Process: 0] Evaluating...
2024-08-16 16:06:42,732 [Process: 0] EPOCH 119:
2024-08-16 16:06:42,734 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0400, 0.0397, 0.0395,  ..., 0.0406, 0.0427, 0.0411],
         [0.0400, 0.0397, 0.0395,  ..., 0.0406, 0.0427, 0.0411],
         [0.0400, 0.0397, 0.0395,  ..., 0.0406, 0.0427, 0.0411],
         [0.8800, 0.8810, 0.8816,  ..., 0.8783, 0.8720, 0.8768]],
        [[0.0412, 0.0385, 0.0420,  ..., 0.0025, 0.0405, 0.0422],
         [0.0412, 0.0385, 0.0420,  ..., 0.0025, 0.0405, 0.0422],
         [0.0412, 0.0385, 0.0420,  ..., 0.9925, 0.0405, 0.0422],
         [0.8763, 0.8845, 0.8740,  ..., 0.0025, 0.8785, 0.8733]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0435, 0.0428, 0.0446,  ..., 0.0426, 0.0422, 0.0436],
         [0.0435, 0.0428, 0.0446,  ..., 0.0426, 0.0422, 0.0436],
         [0.0435, 0.0428, 0.0446,  ..., 0.0426, 0.0422, 0.0436],
         [0.8695, 0.8716, 0.8662,  ..., 0.8722, 0.8734, 0.8692]],
        [[0.0413, 0.0427, 0.0437,  ..., 0.4497, 0.0419, 0.0402],
         [0.0413, 0.0427, 0.0437,  ..., 0.1834, 0.0419, 0.0402],
         [0.0413, 0.0427, 0.0437,  ..., 0.1834, 0.0419, 0.0402],
         [0.8762, 0.8719, 0.8689,  ..., 0.1834, 0.8742, 0.8795]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:44,828 [Process: 0] Synchronize training processes
2024-08-16 16:06:44,828 [Process: 0] Evaluating...
2024-08-16 16:06:44,830 [Process: 0] EPOCH 120:
2024-08-16 16:06:44,832 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.0796e-02, 3.9840e-02, 3.8303e-02,  ..., 3.7312e-02,
          4.0339e-02, 3.9098e-02],
         [4.0796e-02, 3.9840e-02, 3.8303e-02,  ..., 3.7312e-02,
          4.0339e-02, 3.9098e-02],
         [4.0796e-02, 3.9840e-02, 3.8303e-02,  ..., 3.7312e-02,
          4.0339e-02, 3.9098e-02],
         [8.7761e-01, 8.8048e-01, 8.8509e-01,  ..., 8.8807e-01,
          8.7898e-01, 8.8271e-01]],
        [[4.0307e-02, 3.9496e-02, 3.9213e-02,  ..., 6.3335e-04,
          3.9836e-02, 4.0868e-02],
         [4.0307e-02, 3.9496e-02, 3.9213e-02,  ..., 6.3335e-04,
          3.9836e-02, 4.0868e-02],
         [4.0307e-02, 3.9496e-02, 3.9213e-02,  ..., 9.9810e-01,
          3.9836e-02, 4.0868e-02],
         [8.7908e-01, 8.8151e-01, 8.8236e-01,  ..., 6.3335e-04,
          8.8049e-01, 8.7740e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0461, 0.0434, 0.0427,  ..., 0.0446, 0.0435, 0.0428],
         [0.0461, 0.0434, 0.0427,  ..., 0.0446, 0.0435, 0.0428],
         [0.0461, 0.0434, 0.0427,  ..., 0.0446, 0.0435, 0.0428],
         [0.8618, 0.8697, 0.8718,  ..., 0.8662, 0.8694, 0.8716]],
        [[0.0416, 0.0410, 0.0418,  ..., 0.1872, 0.0400, 0.0399],
         [0.0416, 0.0410, 0.0418,  ..., 0.1701, 0.0400, 0.0399],
         [0.0416, 0.0410, 0.0418,  ..., 0.1701, 0.0400, 0.0399],
         [0.8753, 0.8771, 0.8746,  ..., 0.4725, 0.8801, 0.8804]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:46,927 [Process: 0] Synchronize training processes
2024-08-16 16:06:46,927 [Process: 0] Evaluating...
2024-08-16 16:06:46,929 [Process: 0] EPOCH 121:
2024-08-16 16:06:46,931 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.1589e-02, 3.9272e-02, 4.1200e-02,  ..., 4.3351e-02,
          3.8865e-02, 3.8751e-02],
         [4.1589e-02, 3.9272e-02, 4.1200e-02,  ..., 4.3351e-02,
          3.8865e-02, 3.8751e-02],
         [4.1589e-02, 3.9272e-02, 4.1200e-02,  ..., 4.3351e-02,
          3.8865e-02, 3.8751e-02],
         [8.7523e-01, 8.8218e-01, 8.7640e-01,  ..., 8.6995e-01,
          8.8340e-01, 8.8375e-01]],
        [[3.9353e-02, 4.2527e-02, 4.1205e-02,  ..., 7.8659e-04,
          4.2953e-02, 3.8716e-02],
         [3.9353e-02, 4.2527e-02, 4.1205e-02,  ..., 7.8659e-04,
          4.2953e-02, 3.8716e-02],
         [3.9353e-02, 4.2527e-02, 4.1205e-02,  ..., 9.9764e-01,
          4.2953e-02, 3.8716e-02],
         [8.8194e-01, 8.7242e-01, 8.7639e-01,  ..., 7.8659e-04,
          8.7114e-01, 8.8385e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0532, 0.0469, 0.0499,  ..., 0.0487, 0.0465, 0.0503],
         [0.0532, 0.0469, 0.0499,  ..., 0.0487, 0.0465, 0.0503],
         [0.0532, 0.0469, 0.0499,  ..., 0.0487, 0.0465, 0.0503],
         [0.8403, 0.8593, 0.8504,  ..., 0.8540, 0.8604, 0.8490]],
        [[0.0412, 0.0394, 0.0397,  ..., 0.0408, 0.0396, 0.0416],
         [0.0412, 0.0394, 0.0397,  ..., 0.0408, 0.0396, 0.0416],
         [0.0412, 0.0394, 0.0397,  ..., 0.0408, 0.0396, 0.0416],
         [0.8764, 0.8819, 0.8808,  ..., 0.8777, 0.8812, 0.8753]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:48,970 [Process: 0] Synchronize training processes
2024-08-16 16:06:48,970 [Process: 0] Evaluating...
2024-08-16 16:06:48,980 [Process: 0] EPOCH 122:
2024-08-16 16:06:48,983 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0393, 0.0381, 0.0396,  ..., 0.0405, 0.0403, 0.0374],
         [0.0393, 0.0381, 0.0396,  ..., 0.0405, 0.0403, 0.0374],
         [0.0393, 0.0381, 0.0396,  ..., 0.0405, 0.0403, 0.0374],
         [0.8822, 0.8856, 0.8811,  ..., 0.8784, 0.8792, 0.8879]],
        [[0.0386, 0.0409, 0.0405,  ..., 0.0016, 0.0374, 0.0399],
         [0.0386, 0.0409, 0.0405,  ..., 0.0016, 0.0374, 0.0399],
         [0.0386, 0.0409, 0.0405,  ..., 0.9953, 0.0374, 0.0399],
         [0.8841, 0.8773, 0.8785,  ..., 0.0016, 0.8877, 0.8804]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0447, 0.0467, 0.0460,  ..., 0.0467, 0.0464, 0.0482],
         [0.0447, 0.0467, 0.0460,  ..., 0.0467, 0.0464, 0.0482],
         [0.0447, 0.0467, 0.0460,  ..., 0.0467, 0.0464, 0.0482],
         [0.8658, 0.8599, 0.8619,  ..., 0.8600, 0.8608, 0.8555]],
        [[0.0470, 0.0461, 0.0467,  ..., 0.6070, 0.0461, 0.0461],
         [0.0470, 0.0461, 0.0467,  ..., 0.1310, 0.0461, 0.0461],
         [0.0470, 0.0461, 0.0467,  ..., 0.1310, 0.0461, 0.0461],
         [0.8591, 0.8616, 0.8598,  ..., 0.1310, 0.8617, 0.8618]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:50,992 [Process: 0] Synchronize training processes
2024-08-16 16:06:50,992 [Process: 0] Evaluating...
2024-08-16 16:06:50,994 [Process: 0] EPOCH 123:
2024-08-16 16:06:50,996 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0399, 0.0398, 0.0376,  ..., 0.0389, 0.0404, 0.0402],
         [0.0399, 0.0398, 0.0376,  ..., 0.0389, 0.0404, 0.0402],
         [0.0399, 0.0398, 0.0376,  ..., 0.0389, 0.0404, 0.0402],
         [0.8804, 0.8805, 0.8873,  ..., 0.8833, 0.8787, 0.8794]],
        [[0.0411, 0.0407, 0.0411,  ..., 0.0306, 0.0399, 0.0394],
         [0.0411, 0.0407, 0.0411,  ..., 0.0306, 0.0399, 0.0394],
         [0.0411, 0.0407, 0.0411,  ..., 0.9081, 0.0399, 0.0394],
         [0.8767, 0.8778, 0.8768,  ..., 0.0306, 0.8804, 0.8818]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0466, 0.0451, 0.0465,  ..., 0.0459, 0.0464, 0.0453],
         [0.0466, 0.0451, 0.0465,  ..., 0.0459, 0.0464, 0.0453],
         [0.0466, 0.0451, 0.0465,  ..., 0.0459, 0.0464, 0.0453],
         [0.8602, 0.8647, 0.8604,  ..., 0.8623, 0.8607, 0.8640]],
        [[0.0472, 0.0465, 0.0465,  ..., 0.5676, 0.0469, 0.0470],
         [0.0472, 0.0465, 0.0465,  ..., 0.1441, 0.0469, 0.0470],
         [0.0472, 0.0465, 0.0465,  ..., 0.1441, 0.0469, 0.0470],
         [0.8584, 0.8606, 0.8604,  ..., 0.1441, 0.8594, 0.8590]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:53,005 [Process: 0] Synchronize training processes
2024-08-16 16:06:53,006 [Process: 0] Evaluating...
2024-08-16 16:06:53,007 [Process: 0] EPOCH 124:
2024-08-16 16:06:53,009 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0388, 0.0387, 0.0360,  ..., 0.0378, 0.0391, 0.0364],
         [0.0388, 0.0387, 0.0360,  ..., 0.0378, 0.0391, 0.0364],
         [0.0388, 0.0387, 0.0360,  ..., 0.0378, 0.0391, 0.0364],
         [0.8835, 0.8838, 0.8919,  ..., 0.8865, 0.8827, 0.8907]],
        [[0.0384, 0.0386, 0.0381,  ..., 0.0028, 0.0383, 0.0384],
         [0.0384, 0.0386, 0.0381,  ..., 0.0028, 0.0383, 0.0384],
         [0.0384, 0.0386, 0.0381,  ..., 0.9917, 0.0383, 0.0384],
         [0.8848, 0.8843, 0.8856,  ..., 0.0028, 0.8850, 0.8848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0454, 0.0457, 0.0461,  ..., 0.0455, 0.0469, 0.0472],
         [0.0454, 0.0457, 0.0461,  ..., 0.0455, 0.0469, 0.0472],
         [0.0454, 0.0457, 0.0461,  ..., 0.0455, 0.0469, 0.0472],
         [0.8637, 0.8629, 0.8618,  ..., 0.8635, 0.8592, 0.8583]],
        [[0.0460, 0.0462, 0.0458,  ..., 0.0937, 0.0460, 0.0466],
         [0.0460, 0.0462, 0.0458,  ..., 0.0937, 0.0460, 0.0466],
         [0.0460, 0.0462, 0.0458,  ..., 0.0937, 0.0460, 0.0466],
         [0.8619, 0.8614, 0.8627,  ..., 0.7188, 0.8619, 0.8602]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:54,975 [Process: 0] Synchronize training processes
2024-08-16 16:06:54,976 [Process: 0] Evaluating...
2024-08-16 16:06:54,978 [Process: 0] EPOCH 125:
2024-08-16 16:06:54,980 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0371, 0.0371, 0.0379,  ..., 0.0358, 0.0375, 0.0349],
         [0.0371, 0.0371, 0.0379,  ..., 0.0358, 0.0375, 0.0349],
         [0.0371, 0.0371, 0.0379,  ..., 0.0358, 0.0375, 0.0349],
         [0.8887, 0.8886, 0.8862,  ..., 0.8925, 0.8874, 0.8954]],
        [[0.0382, 0.0386, 0.0379,  ..., 0.0344, 0.0367, 0.0379],
         [0.0382, 0.0386, 0.0379,  ..., 0.0344, 0.0367, 0.0379],
         [0.0382, 0.0386, 0.0379,  ..., 0.8967, 0.0367, 0.0379],
         [0.8854, 0.8842, 0.8863,  ..., 0.0344, 0.8898, 0.8864]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0454, 0.0437, 0.0446,  ..., 0.0449, 0.0455, 0.0447],
         [0.0454, 0.0437, 0.0446,  ..., 0.0449, 0.0455, 0.0447],
         [0.0454, 0.0437, 0.0446,  ..., 0.0449, 0.0455, 0.0447],
         [0.8637, 0.8688, 0.8662,  ..., 0.8653, 0.8636, 0.8658]],
        [[0.0444, 0.0445, 0.0455,  ..., 0.0477, 0.0446, 0.0464],
         [0.0444, 0.0445, 0.0455,  ..., 0.0477, 0.0446, 0.0464],
         [0.0444, 0.0445, 0.0455,  ..., 0.0477, 0.0446, 0.0464],
         [0.8669, 0.8664, 0.8636,  ..., 0.8569, 0.8661, 0.8609]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:57,054 [Process: 0] Synchronize training processes
2024-08-16 16:06:57,055 [Process: 0] Evaluating...
2024-08-16 16:06:57,057 [Process: 0] EPOCH 126:
2024-08-16 16:06:57,059 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0343, 0.0370, 0.0360,  ..., 0.0361, 0.0381, 0.0384],
         [0.0343, 0.0370, 0.0360,  ..., 0.0361, 0.0381, 0.0384],
         [0.0343, 0.0370, 0.0360,  ..., 0.0361, 0.0381, 0.0384],
         [0.8971, 0.8890, 0.8920,  ..., 0.8916, 0.8856, 0.8847]],
        [[0.0374, 0.0377, 0.0357,  ..., 0.0018, 0.0369, 0.0376],
         [0.0374, 0.0377, 0.0357,  ..., 0.0018, 0.0369, 0.0376],
         [0.0374, 0.0377, 0.0357,  ..., 0.9946, 0.0369, 0.0376],
         [0.8878, 0.8868, 0.8929,  ..., 0.0018, 0.8894, 0.8873]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0450, 0.0464, 0.0454,  ..., 0.0447, 0.0451, 0.0452],
         [0.0450, 0.0464, 0.0454,  ..., 0.0447, 0.0451, 0.0452],
         [0.0450, 0.0464, 0.0454,  ..., 0.0447, 0.0451, 0.0452],
         [0.8649, 0.8608, 0.8637,  ..., 0.8658, 0.8648, 0.8643]],
        [[0.0457, 0.0454, 0.0440,  ..., 0.0462, 0.0447, 0.0457],
         [0.0457, 0.0454, 0.0440,  ..., 0.0462, 0.0447, 0.0457],
         [0.0457, 0.0454, 0.0440,  ..., 0.0462, 0.0447, 0.0457],
         [0.8629, 0.8637, 0.8680,  ..., 0.8614, 0.8659, 0.8629]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:06:59,149 [Process: 0] Synchronize training processes
2024-08-16 16:06:59,149 [Process: 0] Evaluating...
2024-08-16 16:06:59,151 [Process: 0] EPOCH 127:
2024-08-16 16:06:59,153 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0368, 0.0362, 0.0376,  ..., 0.0346, 0.0353, 0.0339],
         [0.0368, 0.0362, 0.0376,  ..., 0.0346, 0.0353, 0.0339],
         [0.0368, 0.0362, 0.0376,  ..., 0.0346, 0.0353, 0.0339],
         [0.8896, 0.8915, 0.8872,  ..., 0.8963, 0.8941, 0.8984]],
        [[0.0359, 0.0360, 0.0372,  ..., 0.0064, 0.0381, 0.0385],
         [0.0359, 0.0360, 0.0372,  ..., 0.0064, 0.0381, 0.0385],
         [0.0359, 0.0360, 0.0372,  ..., 0.9809, 0.0381, 0.0385],
         [0.8924, 0.8920, 0.8884,  ..., 0.0064, 0.8858, 0.8845]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0400, 0.0399, 0.0421,  ..., 0.0404, 0.0393, 0.0388],
         [0.0400, 0.0399, 0.0421,  ..., 0.0404, 0.0393, 0.0388],
         [0.0400, 0.0399, 0.0421,  ..., 0.0404, 0.0393, 0.0388],
         [0.8800, 0.8802, 0.8736,  ..., 0.8788, 0.8820, 0.8837]],
        [[0.0390, 0.0411, 0.0396,  ..., 0.1016, 0.0389, 0.0398],
         [0.0390, 0.0411, 0.0396,  ..., 0.1016, 0.0389, 0.0398],
         [0.0390, 0.0411, 0.0396,  ..., 0.1016, 0.0389, 0.0398],
         [0.8830, 0.8766, 0.8813,  ..., 0.6951, 0.8833, 0.8806]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:01,244 [Process: 0] Synchronize training processes
2024-08-16 16:07:01,244 [Process: 0] Evaluating...
2024-08-16 16:07:01,246 [Process: 0] EPOCH 128:
2024-08-16 16:07:01,248 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0361, 0.0365, 0.0374,  ..., 0.0355, 0.0366, 0.0364],
         [0.0361, 0.0365, 0.0374,  ..., 0.0355, 0.0366, 0.0364],
         [0.0361, 0.0365, 0.0374,  ..., 0.0355, 0.0366, 0.0364],
         [0.8917, 0.8906, 0.8878,  ..., 0.8936, 0.8902, 0.8908]],
        [[0.0369, 0.0351, 0.0355,  ..., 0.0017, 0.0406, 0.0374],
         [0.0369, 0.0351, 0.0355,  ..., 0.0017, 0.0406, 0.0374],
         [0.0369, 0.0351, 0.0355,  ..., 0.9950, 0.0406, 0.0374],
         [0.8894, 0.8948, 0.8936,  ..., 0.0017, 0.8783, 0.8879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0408, 0.0402, 0.0416,  ..., 0.0405, 0.0397, 0.0408],
         [0.0408, 0.0402, 0.0416,  ..., 0.0405, 0.0397, 0.0408],
         [0.0408, 0.0402, 0.0416,  ..., 0.0405, 0.0397, 0.0408],
         [0.8776, 0.8795, 0.8753,  ..., 0.8785, 0.8808, 0.8777]],
        [[0.0425, 0.0411, 0.0402,  ..., 0.0491, 0.0413, 0.0416],
         [0.0425, 0.0411, 0.0402,  ..., 0.0491, 0.0413, 0.0416],
         [0.0425, 0.0411, 0.0402,  ..., 0.0491, 0.0413, 0.0416],
         [0.8725, 0.8768, 0.8795,  ..., 0.8527, 0.8762, 0.8751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:03,327 [Process: 0] Synchronize training processes
2024-08-16 16:07:03,327 [Process: 0] Evaluating...
2024-08-16 16:07:03,329 [Process: 0] EPOCH 129:
2024-08-16 16:07:03,331 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3670e-02, 3.5187e-02, 3.3488e-02,  ..., 3.5248e-02,
          3.6962e-02, 3.4120e-02],
         [3.3670e-02, 3.5187e-02, 3.3488e-02,  ..., 3.5248e-02,
          3.6962e-02, 3.4120e-02],
         [3.3670e-02, 3.5187e-02, 3.3488e-02,  ..., 3.5248e-02,
          3.6962e-02, 3.4120e-02],
         [8.9899e-01, 8.9444e-01, 8.9954e-01,  ..., 8.9425e-01,
          8.8911e-01, 8.9764e-01]],
        [[3.3965e-02, 3.7070e-02, 3.4655e-02,  ..., 5.6271e-04,
          3.4320e-02, 3.4548e-02],
         [3.3965e-02, 3.7070e-02, 3.4655e-02,  ..., 5.6271e-04,
          3.4320e-02, 3.4548e-02],
         [3.3965e-02, 3.7070e-02, 3.4655e-02,  ..., 9.9831e-01,
          3.4320e-02, 3.4548e-02],
         [8.9811e-01, 8.8879e-01, 8.9603e-01,  ..., 5.6271e-04,
          8.9704e-01, 8.9636e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0374, 0.0370, 0.0370,  ..., 0.0363, 0.0368, 0.0372],
         [0.0374, 0.0370, 0.0370,  ..., 0.0363, 0.0368, 0.0372],
         [0.0374, 0.0370, 0.0370,  ..., 0.0363, 0.0368, 0.0372],
         [0.8879, 0.8891, 0.8890,  ..., 0.8910, 0.8897, 0.8885]],
        [[0.0385, 0.0391, 0.0365,  ..., 0.1238, 0.0353, 0.0362],
         [0.0385, 0.0391, 0.0365,  ..., 0.1238, 0.0353, 0.0362],
         [0.0385, 0.0391, 0.0365,  ..., 0.1238, 0.0353, 0.0362],
         [0.8844, 0.8827, 0.8905,  ..., 0.6285, 0.8940, 0.8915]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:05,412 [Process: 0] Synchronize training processes
2024-08-16 16:07:05,413 [Process: 0] Evaluating...
2024-08-16 16:07:05,415 [Process: 0] EPOCH 130:
2024-08-16 16:07:05,417 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0354, 0.0357, 0.0335,  ..., 0.0339, 0.0357, 0.0333],
         [0.0354, 0.0357, 0.0335,  ..., 0.0339, 0.0357, 0.0333],
         [0.0354, 0.0357, 0.0335,  ..., 0.0339, 0.0357, 0.0333],
         [0.8939, 0.8930, 0.8994,  ..., 0.8983, 0.8928, 0.9000]],
        [[0.0371, 0.0339, 0.0322,  ..., 0.0120, 0.0357, 0.0361],
         [0.0371, 0.0339, 0.0322,  ..., 0.0120, 0.0357, 0.0361],
         [0.0371, 0.0339, 0.0322,  ..., 0.9639, 0.0357, 0.0361],
         [0.8887, 0.8982, 0.9034,  ..., 0.0120, 0.8929, 0.8916]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0380, 0.0385, 0.0394,  ..., 0.0400, 0.0378, 0.0396],
         [0.0380, 0.0385, 0.0394,  ..., 0.0400, 0.0378, 0.0396],
         [0.0380, 0.0385, 0.0394,  ..., 0.0400, 0.0378, 0.0396],
         [0.8859, 0.8846, 0.8817,  ..., 0.8799, 0.8867, 0.8812]],
        [[0.0390, 0.0408, 0.0401,  ..., 0.0849, 0.0399, 0.0403],
         [0.0390, 0.0408, 0.0401,  ..., 0.0849, 0.0399, 0.0403],
         [0.0390, 0.0408, 0.0401,  ..., 0.0849, 0.0399, 0.0403],
         [0.8830, 0.8777, 0.8797,  ..., 0.7453, 0.8804, 0.8792]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:07,509 [Process: 0] Synchronize training processes
2024-08-16 16:07:07,510 [Process: 0] Evaluating...
2024-08-16 16:07:07,512 [Process: 0] EPOCH 131:
2024-08-16 16:07:07,513 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0352, 0.0337, 0.0351,  ..., 0.0341, 0.0365, 0.0357],
         [0.0352, 0.0337, 0.0351,  ..., 0.0341, 0.0365, 0.0357],
         [0.0352, 0.0337, 0.0351,  ..., 0.0341, 0.0365, 0.0357],
         [0.8945, 0.8988, 0.8946,  ..., 0.8976, 0.8904, 0.8928]],
        [[0.0328, 0.0359, 0.0331,  ..., 0.0043, 0.0353, 0.0319],
         [0.0328, 0.0359, 0.0331,  ..., 0.0043, 0.0353, 0.0319],
         [0.0328, 0.0359, 0.0331,  ..., 0.9870, 0.0353, 0.0319],
         [0.9015, 0.8924, 0.9008,  ..., 0.0043, 0.8942, 0.9044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0405, 0.0389, 0.0396,  ..., 0.0379, 0.0394, 0.0401],
         [0.0405, 0.0389, 0.0396,  ..., 0.0379, 0.0394, 0.0401],
         [0.0405, 0.0389, 0.0396,  ..., 0.0379, 0.0394, 0.0401],
         [0.8784, 0.8833, 0.8812,  ..., 0.8862, 0.8818, 0.8797]],
        [[0.0405, 0.0400, 0.0394,  ..., 0.0386, 0.0404, 0.0384],
         [0.0405, 0.0400, 0.0394,  ..., 0.0386, 0.0404, 0.0384],
         [0.0405, 0.0400, 0.0394,  ..., 0.0386, 0.0404, 0.0384],
         [0.8785, 0.8799, 0.8818,  ..., 0.8841, 0.8787, 0.8848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:09,592 [Process: 0] Synchronize training processes
2024-08-16 16:07:09,593 [Process: 0] Evaluating...
2024-08-16 16:07:09,600 [Process: 0] EPOCH 132:
2024-08-16 16:07:09,602 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0345, 0.0362, 0.0347,  ..., 0.0365, 0.0377, 0.0337],
         [0.0345, 0.0362, 0.0347,  ..., 0.0365, 0.0377, 0.0337],
         [0.0345, 0.0362, 0.0347,  ..., 0.0365, 0.0377, 0.0337],
         [0.8964, 0.8915, 0.8959,  ..., 0.8905, 0.8868, 0.8990]],
        [[0.0354, 0.0358, 0.0337,  ..., 0.0056, 0.0355, 0.0353],
         [0.0354, 0.0358, 0.0337,  ..., 0.0056, 0.0355, 0.0353],
         [0.0354, 0.0358, 0.0337,  ..., 0.9832, 0.0355, 0.0353],
         [0.8937, 0.8926, 0.8990,  ..., 0.0056, 0.8934, 0.8942]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0384, 0.0382, 0.0396,  ..., 0.0404, 0.0394, 0.0392],
         [0.0384, 0.0382, 0.0396,  ..., 0.0404, 0.0394, 0.0392],
         [0.0384, 0.0382, 0.0396,  ..., 0.0404, 0.0394, 0.0392],
         [0.8847, 0.8853, 0.8811,  ..., 0.8789, 0.8819, 0.8825]],
        [[0.0382, 0.0397, 0.0406,  ..., 0.0406, 0.0395, 0.0403],
         [0.0382, 0.0397, 0.0406,  ..., 0.0406, 0.0395, 0.0403],
         [0.0382, 0.0397, 0.0406,  ..., 0.0406, 0.0395, 0.0403],
         [0.8854, 0.8808, 0.8781,  ..., 0.8781, 0.8815, 0.8791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:11,677 [Process: 0] Synchronize training processes
2024-08-16 16:07:11,678 [Process: 0] Evaluating...
2024-08-16 16:07:11,680 [Process: 0] EPOCH 133:
2024-08-16 16:07:11,681 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0344, 0.0358, 0.0357,  ..., 0.0356, 0.0353, 0.0339],
         [0.0344, 0.0358, 0.0357,  ..., 0.0356, 0.0353, 0.0339],
         [0.0344, 0.0358, 0.0357,  ..., 0.0356, 0.0353, 0.0339],
         [0.8969, 0.8926, 0.8928,  ..., 0.8931, 0.8942, 0.8984]],
        [[0.0330, 0.0338, 0.0334,  ..., 0.0013, 0.0379, 0.0360],
         [0.0330, 0.0338, 0.0334,  ..., 0.0013, 0.0379, 0.0360],
         [0.0330, 0.0338, 0.0334,  ..., 0.9961, 0.0379, 0.0360],
         [0.9011, 0.8985, 0.8998,  ..., 0.0013, 0.8863, 0.8920]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0374, 0.0387, 0.0380,  ..., 0.0379, 0.0383, 0.0372],
         [0.0374, 0.0387, 0.0380,  ..., 0.0379, 0.0383, 0.0372],
         [0.0374, 0.0387, 0.0380,  ..., 0.0379, 0.0383, 0.0372],
         [0.8878, 0.8839, 0.8861,  ..., 0.8862, 0.8851, 0.8884]],
        [[0.0359, 0.0360, 0.0383,  ..., 0.0375, 0.0376, 0.0381],
         [0.0359, 0.0360, 0.0383,  ..., 0.0375, 0.0376, 0.0381],
         [0.0359, 0.0360, 0.0383,  ..., 0.0375, 0.0376, 0.0381],
         [0.8923, 0.8919, 0.8851,  ..., 0.8874, 0.8873, 0.8858]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:13,763 [Process: 0] Synchronize training processes
2024-08-16 16:07:13,763 [Process: 0] Evaluating...
2024-08-16 16:07:13,765 [Process: 0] EPOCH 134:
2024-08-16 16:07:13,767 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0338, 0.0334, 0.0346,  ..., 0.0337, 0.0345, 0.0358],
         [0.0338, 0.0334, 0.0346,  ..., 0.0337, 0.0345, 0.0358],
         [0.0338, 0.0334, 0.0346,  ..., 0.0337, 0.0345, 0.0358],
         [0.8985, 0.8997, 0.8961,  ..., 0.8990, 0.8964, 0.8927]],
        [[0.0342, 0.0325, 0.0342,  ..., 0.0126, 0.0339, 0.0345],
         [0.0342, 0.0325, 0.0342,  ..., 0.0126, 0.0339, 0.0345],
         [0.0342, 0.0325, 0.0342,  ..., 0.9621, 0.0339, 0.0345],
         [0.8973, 0.9026, 0.8975,  ..., 0.0126, 0.8983, 0.8966]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-16 16:07:15,830 [Process: 0] Synchronize training processes
2024-08-16 16:07:15,831 [Process: 0] Evaluating...
2024-08-16 16:07:15,833 [Process: 0] EPOCH 135:
2024-08-16 16:07:15,834 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0433, 0.0426, 0.0433,  ..., 0.0439, 0.0431, 0.0429],
         [0.0433, 0.0426, 0.0433,  ..., 0.0439, 0.0431, 0.0429],
         [0.0433, 0.0426, 0.0433,  ..., 0.0439, 0.0431, 0.0429],
         [0.8701, 0.8723, 0.8702,  ..., 0.8683, 0.8708, 0.8714]],
        [[0.0432, 0.0427, 0.0432,  ..., 0.0416, 0.0425, 0.0421],
         [0.0432, 0.0427, 0.0432,  ..., 0.0416, 0.0425, 0.0421],
         [0.0432, 0.0427, 0.0432,  ..., 0.0416, 0.0425, 0.0421],
         [0.8705, 0.8720, 0.8705,  ..., 0.8751, 0.8724, 0.8736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0337, 0.0342, 0.0327,  ..., 0.0334, 0.0340, 0.0349],
         [0.0337, 0.0342, 0.0327,  ..., 0.0334, 0.0340, 0.0349],
         [0.0337, 0.0342, 0.0327,  ..., 0.0334, 0.0340, 0.0349],
         [0.8990, 0.8974, 0.9018,  ..., 0.8997, 0.8979, 0.8952]],
        [[0.0341, 0.0331, 0.0345,  ..., 0.0038, 0.0315, 0.0343],
         [0.0341, 0.0331, 0.0345,  ..., 0.0038, 0.0315, 0.0343],
         [0.0341, 0.0331, 0.0345,  ..., 0.9886, 0.0315, 0.0343],
         [0.8977, 0.9008, 0.8964,  ..., 0.0038, 0.9055, 0.8972]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:07:17,916 [Process: 0] Synchronize training processes
2024-08-16 16:07:17,917 [Process: 0] Evaluating...
2024-08-16 16:07:17,919 [Process: 0] EPOCH 136:
2024-08-16 16:07:17,920 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0370, 0.0361, 0.0358,  ..., 0.0366, 0.0352, 0.0360],
         [0.0370, 0.0361, 0.0358,  ..., 0.0366, 0.0352, 0.0360],
         [0.0370, 0.0361, 0.0358,  ..., 0.0366, 0.0352, 0.0360],
         [0.8889, 0.8917, 0.8926,  ..., 0.8902, 0.8944, 0.8921]],
        [[0.0360, 0.0357, 0.0350,  ..., 0.6625, 0.0341, 0.0355],
         [0.0360, 0.0357, 0.0350,  ..., 0.1125, 0.0341, 0.0355],
         [0.0360, 0.0357, 0.0350,  ..., 0.1125, 0.0341, 0.0355],
         [0.8919, 0.8928, 0.8950,  ..., 0.1125, 0.8978, 0.8934]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0342, 0.0329, 0.0339,  ..., 0.0355, 0.0323, 0.0323],
         [0.0342, 0.0329, 0.0339,  ..., 0.0355, 0.0323, 0.0323],
         [0.0342, 0.0329, 0.0339,  ..., 0.0355, 0.0323, 0.0323],
         [0.8973, 0.9014, 0.8983,  ..., 0.8935, 0.9030, 0.9030]],
        [[0.0327, 0.0346, 0.0344,  ..., 0.0016, 0.0329, 0.0320],
         [0.0327, 0.0346, 0.0344,  ..., 0.0016, 0.0329, 0.0320],
         [0.0327, 0.0346, 0.0344,  ..., 0.9951, 0.0329, 0.0320],
         [0.9018, 0.8962, 0.8968,  ..., 0.0016, 0.9013, 0.9041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0365, 0.0375, 0.0365,  ..., 0.0363, 0.0363, 0.0365],
         [0.0365, 0.0375, 0.0365,  ..., 0.0363, 0.0363, 0.0365],
         [0.0365, 0.0375, 0.0365,  ..., 0.0363, 0.0363, 0.0365],
         [0.8904, 0.8875, 0.8905,  ..., 0.8912, 0.8912, 0.8904]],
        [[0.0345, 0.0338, 0.0356,  ..., 0.4604, 0.0356, 0.0347],
         [0.0345, 0.0338, 0.0356,  ..., 0.1799, 0.0356, 0.0347],
         [0.0345, 0.0338, 0.0356,  ..., 0.1799, 0.0356, 0.0347],
         [0.8965, 0.8986, 0.8931,  ..., 0.1799, 0.8932, 0.8958]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0348, 0.0318, 0.0311,  ..., 0.0329, 0.0308, 0.0332],
         [0.0348, 0.0318, 0.0311,  ..., 0.0329, 0.0308, 0.0332],
         [0.0348, 0.0318, 0.0311,  ..., 0.0329, 0.0308, 0.0332],
         [0.8956, 0.9047, 0.9068,  ..., 0.9012, 0.9075, 0.9005]],
        [[0.0314, 0.0322, 0.0324,  ..., 0.0028, 0.0309, 0.0336],
         [0.0314, 0.0322, 0.0324,  ..., 0.0028, 0.0309, 0.0336],
         [0.0314, 0.0322, 0.0324,  ..., 0.9915, 0.0309, 0.0336],
         [0.9057, 0.9035, 0.9027,  ..., 0.0028, 0.9073, 0.8991]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:07:20,001 [Process: 0] Synchronize training processes
2024-08-16 16:07:20,001 [Process: 0] Evaluating...
2024-08-16 16:07:20,003 [Process: 0] EPOCH 137:
2024-08-16 16:07:20,005 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0372, 0.0366, 0.0368,  ..., 0.0365, 0.0355, 0.0365],
         [0.0372, 0.0366, 0.0368,  ..., 0.0365, 0.0355, 0.0365],
         [0.0372, 0.0366, 0.0368,  ..., 0.0365, 0.0355, 0.0365],
         [0.8883, 0.8902, 0.8897,  ..., 0.8904, 0.8936, 0.8906]],
        [[0.0352, 0.0336, 0.0353,  ..., 0.3343, 0.0343, 0.0359],
         [0.0352, 0.0336, 0.0353,  ..., 0.2219, 0.0343, 0.0359],
         [0.0352, 0.0336, 0.0353,  ..., 0.2219, 0.0343, 0.0359],
         [0.8944, 0.8992, 0.8942,  ..., 0.2219, 0.8972, 0.8922]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2562e-02, 3.1939e-02, 3.2012e-02,  ..., 3.3357e-02,
          3.3590e-02, 3.1607e-02],
         [3.2562e-02, 3.1939e-02, 3.2012e-02,  ..., 3.3357e-02,
          3.3590e-02, 3.1607e-02],
         [3.2562e-02, 3.1939e-02, 3.2012e-02,  ..., 3.3357e-02,
          3.3590e-02, 3.1607e-02],
         [9.0231e-01, 9.0418e-01, 9.0396e-01,  ..., 8.9993e-01,
          8.9923e-01, 9.0518e-01]],
        [[3.1611e-02, 3.4311e-02, 3.0548e-02,  ..., 6.2598e-04,
          3.2016e-02, 3.1296e-02],
         [3.1611e-02, 3.4311e-02, 3.0548e-02,  ..., 6.2598e-04,
          3.2016e-02, 3.1296e-02],
         [3.1611e-02, 3.4311e-02, 3.0548e-02,  ..., 9.9812e-01,
          3.2016e-02, 3.1296e-02],
         [9.0517e-01, 8.9707e-01, 9.0836e-01,  ..., 6.2598e-04,
          9.0395e-01, 9.0611e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:07:22,103 [Process: 0] Synchronize training processes
2024-08-16 16:07:22,104 [Process: 0] Evaluating...
2024-08-16 16:07:22,105 [Process: 0] EPOCH 138:
2024-08-16 16:07:22,107 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0340, 0.0327, 0.0331,  ..., 0.0335, 0.0347, 0.0339],
         [0.0340, 0.0327, 0.0331,  ..., 0.0335, 0.0347, 0.0339],
         [0.0340, 0.0327, 0.0331,  ..., 0.0335, 0.0347, 0.0339],
         [0.8980, 0.9019, 0.9006,  ..., 0.8994, 0.8960, 0.8984]],
        [[0.0331, 0.0326, 0.0319,  ..., 0.2930, 0.0311, 0.0312],
         [0.0331, 0.0326, 0.0319,  ..., 0.2357, 0.0311, 0.0312],
         [0.0331, 0.0326, 0.0319,  ..., 0.2357, 0.0311, 0.0312],
         [0.9007, 0.9021, 0.9042,  ..., 0.2357, 0.9067, 0.9065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2127e-02, 3.4587e-02, 3.3474e-02,  ..., 3.3304e-02,
          3.2658e-02, 3.2679e-02],
         [3.2127e-02, 3.4587e-02, 3.3474e-02,  ..., 3.3304e-02,
          3.2658e-02, 3.2679e-02],
         [3.2127e-02, 3.4587e-02, 3.3474e-02,  ..., 3.3304e-02,
          3.2658e-02, 3.2679e-02],
         [9.0362e-01, 8.9624e-01, 8.9958e-01,  ..., 9.0009e-01,
          9.0202e-01, 9.0196e-01]],
        [[3.1240e-02, 3.1545e-02, 3.1934e-02,  ..., 6.7611e-04,
          3.3024e-02, 3.3161e-02],
         [3.1240e-02, 3.1545e-02, 3.1934e-02,  ..., 6.7611e-04,
          3.3024e-02, 3.3161e-02],
         [3.1240e-02, 3.1545e-02, 3.1934e-02,  ..., 9.9797e-01,
          3.3024e-02, 3.3161e-02],
         [9.0628e-01, 9.0537e-01, 9.0420e-01,  ..., 6.7611e-04,
          9.0093e-01, 9.0052e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:07:24,167 [Process: 0] Synchronize training processes
2024-08-16 16:07:24,167 [Process: 0] Evaluating...
2024-08-16 16:07:24,169 [Process: 0] EPOCH 139:
2024-08-16 16:07:24,171 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0351, 0.0346, 0.0345,  ..., 0.0353, 0.0354, 0.0353],
         [0.0351, 0.0346, 0.0345,  ..., 0.0353, 0.0354, 0.0353],
         [0.0351, 0.0346, 0.0345,  ..., 0.0353, 0.0354, 0.0353],
         [0.8947, 0.8961, 0.8965,  ..., 0.8941, 0.8938, 0.8940]],
        [[0.0360, 0.0346, 0.0348,  ..., 0.0382, 0.0348, 0.0331],
         [0.0360, 0.0346, 0.0348,  ..., 0.0382, 0.0348, 0.0331],
         [0.0360, 0.0346, 0.0348,  ..., 0.0382, 0.0348, 0.0331],
         [0.8921, 0.8961, 0.8956,  ..., 0.8855, 0.8955, 0.9008]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2518e-02, 3.2908e-02, 3.1699e-02,  ..., 3.1740e-02,
          3.1410e-02, 3.2186e-02],
         [3.2518e-02, 3.2908e-02, 3.1699e-02,  ..., 3.1740e-02,
          3.1410e-02, 3.2186e-02],
         [3.2518e-02, 3.2908e-02, 3.1699e-02,  ..., 3.1740e-02,
          3.1410e-02, 3.2186e-02],
         [9.0245e-01, 9.0128e-01, 9.0490e-01,  ..., 9.0478e-01,
          9.0577e-01, 9.0344e-01]],
        [[3.2448e-02, 3.3044e-02, 3.2791e-02,  ..., 7.8065e-04,
          3.0629e-02, 3.2234e-02],
         [3.2448e-02, 3.3044e-02, 3.2791e-02,  ..., 7.8065e-04,
          3.0629e-02, 3.2234e-02],
         [3.2448e-02, 3.3044e-02, 3.2791e-02,  ..., 9.9766e-01,
          3.0629e-02, 3.2234e-02],
         [9.0266e-01, 9.0087e-01, 9.0163e-01,  ..., 7.8065e-04,
          9.0811e-01, 9.0330e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:07:26,258 [Process: 0] Synchronize training processes
2024-08-16 16:07:26,259 [Process: 0] Evaluating...
2024-08-16 16:07:26,261 [Process: 0] EPOCH 140:
2024-08-16 16:07:26,263 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0354, 0.0359, 0.0366,  ..., 0.0347, 0.0360, 0.0364],
         [0.0354, 0.0359, 0.0366,  ..., 0.0347, 0.0360, 0.0364],
         [0.0354, 0.0359, 0.0366,  ..., 0.0347, 0.0360, 0.0364],
         [0.8939, 0.8923, 0.8902,  ..., 0.8958, 0.8919, 0.8908]],
        [[0.0343, 0.0349, 0.0345,  ..., 0.0336, 0.0329, 0.0355],
         [0.0343, 0.0349, 0.0345,  ..., 0.0336, 0.0329, 0.0355],
         [0.0343, 0.0349, 0.0345,  ..., 0.0336, 0.0329, 0.0355],
         [0.8970, 0.8952, 0.8966,  ..., 0.8991, 0.9014, 0.8936]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0312, 0.0328, 0.0315,  ..., 0.0327, 0.0315, 0.0315],
         [0.0312, 0.0328, 0.0315,  ..., 0.0327, 0.0315, 0.0315],
         [0.0312, 0.0328, 0.0315,  ..., 0.0327, 0.0315, 0.0315],
         [0.9063, 0.9017, 0.9055,  ..., 0.9018, 0.9054, 0.9054]],
        [[0.0320, 0.0331, 0.0311,  ..., 0.0033, 0.0306, 0.0308],
         [0.0320, 0.0331, 0.0311,  ..., 0.0033, 0.0306, 0.0308],
         [0.0320, 0.0331, 0.0311,  ..., 0.9900, 0.0306, 0.0308],
         [0.9039, 0.9008, 0.9068,  ..., 0.0033, 0.9082, 0.9076]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:07:28,352 [Process: 0] Synchronize training processes
2024-08-16 16:07:28,353 [Process: 0] Evaluating...
2024-08-16 16:07:28,354 [Process: 0] EPOCH 141:
2024-08-16 16:07:28,356 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0357, 0.0356, 0.0355,  ..., 0.0357, 0.0351, 0.0350],
         [0.0357, 0.0356, 0.0355,  ..., 0.0357, 0.0351, 0.0350],
         [0.0357, 0.0356, 0.0355,  ..., 0.0357, 0.0351, 0.0350],
         [0.8928, 0.8931, 0.8934,  ..., 0.8930, 0.8946, 0.8951]],
        [[0.0350, 0.0342, 0.0349,  ..., 0.0367, 0.0345, 0.0348],
         [0.0350, 0.0342, 0.0349,  ..., 0.0367, 0.0345, 0.0348],
         [0.0350, 0.0342, 0.0349,  ..., 0.0367, 0.0345, 0.0348],
         [0.8949, 0.8973, 0.8953,  ..., 0.8900, 0.8965, 0.8957]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0319, 0.0312, 0.0317,  ..., 0.0310, 0.0314, 0.0325],
         [0.0319, 0.0312, 0.0317,  ..., 0.0310, 0.0314, 0.0325],
         [0.0319, 0.0312, 0.0317,  ..., 0.0310, 0.0314, 0.0325],
         [0.9043, 0.9064, 0.9050,  ..., 0.9070, 0.9057, 0.9026]],
        [[0.0317, 0.0317, 0.0328,  ..., 0.0015, 0.0337, 0.0306],
         [0.0317, 0.0317, 0.0328,  ..., 0.0015, 0.0337, 0.0306],
         [0.0317, 0.0317, 0.0328,  ..., 0.9954, 0.0337, 0.0306],
         [0.9050, 0.9048, 0.9015,  ..., 0.0015, 0.8990, 0.9081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:07:30,446 [Process: 0] Synchronize training processes
2024-08-16 16:07:30,446 [Process: 0] Evaluating...
2024-08-16 16:07:30,455 [Process: 0] EPOCH 142:
2024-08-16 16:07:30,457 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0355, 0.0361, 0.0344,  ..., 0.0349, 0.0358, 0.0357],
         [0.0355, 0.0361, 0.0344,  ..., 0.0349, 0.0358, 0.0357],
         [0.0355, 0.0361, 0.0344,  ..., 0.0349, 0.0358, 0.0357],
         [0.8934, 0.8917, 0.8968,  ..., 0.8953, 0.8927, 0.8929]],
        [[0.0348, 0.0354, 0.0334,  ..., 0.0323, 0.0338, 0.0348],
         [0.0348, 0.0354, 0.0334,  ..., 0.0323, 0.0338, 0.0348],
         [0.0348, 0.0354, 0.0334,  ..., 0.0323, 0.0338, 0.0348],
         [0.8957, 0.8939, 0.8999,  ..., 0.9030, 0.8985, 0.8957]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0319, 0.0319, 0.0334,  ..., 0.0311, 0.0316, 0.0314],
         [0.0319, 0.0319, 0.0334,  ..., 0.0311, 0.0316, 0.0314],
         [0.0319, 0.0319, 0.0334,  ..., 0.0311, 0.0316, 0.0314],
         [0.9044, 0.9042, 0.8997,  ..., 0.9067, 0.9051, 0.9059]],
        [[0.0322, 0.0306, 0.0286,  ..., 0.0023, 0.0306, 0.0282],
         [0.0322, 0.0306, 0.0286,  ..., 0.0023, 0.0306, 0.0282],
         [0.0322, 0.0306, 0.0286,  ..., 0.9930, 0.0306, 0.0282],
         [0.9033, 0.9083, 0.9143,  ..., 0.0023, 0.9081, 0.9153]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:07:32,537 [Process: 0] Synchronize training processes
2024-08-16 16:07:32,537 [Process: 0] Evaluating...
2024-08-16 16:07:32,539 [Process: 0] EPOCH 143:
2024-08-16 16:07:32,541 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0341, 0.0343, 0.0341,  ..., 0.0341, 0.0349, 0.0353],
         [0.0341, 0.0343, 0.0341,  ..., 0.0341, 0.0349, 0.0353],
         [0.0341, 0.0343, 0.0341,  ..., 0.0341, 0.0349, 0.0353],
         [0.8976, 0.8970, 0.8976,  ..., 0.8977, 0.8952, 0.8942]],
        [[0.0335, 0.0327, 0.0332,  ..., 0.0337, 0.0333, 0.0350],
         [0.0335, 0.0327, 0.0332,  ..., 0.0337, 0.0333, 0.0350],
         [0.0335, 0.0327, 0.0332,  ..., 0.0337, 0.0333, 0.0350],
         [0.8996, 0.9018, 0.9005,  ..., 0.8989, 0.9002, 0.8949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0316, 0.0316, 0.0317,  ..., 0.0330, 0.0289, 0.0298],
         [0.0316, 0.0316, 0.0317,  ..., 0.0330, 0.0289, 0.0298],
         [0.0316, 0.0316, 0.0317,  ..., 0.0330, 0.0289, 0.0298],
         [0.9053, 0.9052, 0.9049,  ..., 0.9010, 0.9133, 0.9107]],
        [[0.0308, 0.0291, 0.0318,  ..., 0.0056, 0.0311, 0.0291],
         [0.0308, 0.0291, 0.0318,  ..., 0.0056, 0.0311, 0.0291],
         [0.0308, 0.0291, 0.0318,  ..., 0.9832, 0.0311, 0.0291],
         [0.9075, 0.9126, 0.9047,  ..., 0.0056, 0.9066, 0.9127]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:07:34,673 [Process: 0] Synchronize training processes
2024-08-16 16:07:34,673 [Process: 0] Evaluating...
2024-08-16 16:07:34,675 [Process: 0] EPOCH 144:
2024-08-16 16:07:34,677 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0348, 0.0338, 0.0340,  ..., 0.0344, 0.0341, 0.0350],
         [0.0348, 0.0338, 0.0340,  ..., 0.0344, 0.0341, 0.0350],
         [0.0348, 0.0338, 0.0340,  ..., 0.0344, 0.0341, 0.0350],
         [0.8957, 0.8986, 0.8981,  ..., 0.8967, 0.8978, 0.8950]],
        [[0.0345, 0.0335, 0.0342,  ..., 0.0331, 0.0336, 0.0325],
         [0.0345, 0.0335, 0.0342,  ..., 0.0331, 0.0336, 0.0325],
         [0.0345, 0.0335, 0.0342,  ..., 0.0331, 0.0336, 0.0325],
         [0.8966, 0.8995, 0.8975,  ..., 0.9008, 0.8991, 0.9025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:36,834 [Process: 0] Synchronize training processes
2024-08-16 16:07:36,835 [Process: 0] Evaluating...
2024-08-16 16:07:36,837 [Process: 0] EPOCH 145:
2024-08-16 16:07:36,839 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[3.0802e-02, 3.0858e-02, 3.0452e-02,  ..., 3.0416e-02,
          3.1003e-02, 3.0334e-02],
         [3.0802e-02, 3.0858e-02, 3.0452e-02,  ..., 3.0416e-02,
          3.1003e-02, 3.0334e-02],
         [3.0802e-02, 3.0858e-02, 3.0452e-02,  ..., 3.0416e-02,
          3.1003e-02, 3.0334e-02],
         [9.0760e-01, 9.0743e-01, 9.0864e-01,  ..., 9.0875e-01,
          9.0699e-01, 9.0900e-01]],
        [[3.0605e-02, 3.1465e-02, 2.9850e-02,  ..., 7.4698e-04,
          3.0755e-02, 2.8934e-02],
         [3.0605e-02, 3.1465e-02, 2.9850e-02,  ..., 7.4698e-04,
          3.0755e-02, 2.8934e-02],
         [3.0605e-02, 3.1465e-02, 2.9850e-02,  ..., 9.9776e-01,
          3.0755e-02, 2.8934e-02],
         [9.0818e-01, 9.0561e-01, 9.1045e-01,  ..., 7.4698e-04,
          9.0773e-01, 9.1320e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0334, 0.0339, 0.0333,  ..., 0.0342, 0.0338, 0.0335],
         [0.0334, 0.0339, 0.0333,  ..., 0.0342, 0.0338, 0.0335],
         [0.0334, 0.0339, 0.0333,  ..., 0.0342, 0.0338, 0.0335],
         [0.8998, 0.8984, 0.9002,  ..., 0.8974, 0.8987, 0.8994]],
        [[0.0344, 0.0345, 0.0317,  ..., 0.0333, 0.0342, 0.0318],
         [0.0344, 0.0345, 0.0317,  ..., 0.0333, 0.0342, 0.0318],
         [0.0344, 0.0345, 0.0317,  ..., 0.0333, 0.0342, 0.0318],
         [0.8968, 0.8964, 0.9049,  ..., 0.9002, 0.8973, 0.9047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:39,065 [Process: 0] Synchronize training processes
2024-08-16 16:07:39,066 [Process: 0] Evaluating...
2024-08-16 16:07:39,068 [Process: 0] EPOCH 146:
2024-08-16 16:07:39,070 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0292, 0.0284, 0.0307,  ..., 0.0293, 0.0294, 0.0302],
         [0.0292, 0.0284, 0.0307,  ..., 0.0293, 0.0294, 0.0302],
         [0.0292, 0.0284, 0.0307,  ..., 0.0293, 0.0294, 0.0302],
         [0.9124, 0.9147, 0.9080,  ..., 0.9121, 0.9117, 0.9095]],
        [[0.0299, 0.0281, 0.0303,  ..., 0.0048, 0.0317, 0.0294],
         [0.0299, 0.0281, 0.0303,  ..., 0.0048, 0.0317, 0.0294],
         [0.0299, 0.0281, 0.0303,  ..., 0.9856, 0.0317, 0.0294],
         [0.9102, 0.9156, 0.9092,  ..., 0.0048, 0.9050, 0.9119]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0344, 0.0338, 0.0336,  ..., 0.0338, 0.0341, 0.0337],
         [0.0344, 0.0338, 0.0336,  ..., 0.0338, 0.0341, 0.0337],
         [0.0344, 0.0338, 0.0336,  ..., 0.0338, 0.0341, 0.0337],
         [0.8969, 0.8987, 0.8992,  ..., 0.8986, 0.8978, 0.8990]],
        [[0.0330, 0.0337, 0.0319,  ..., 0.0325, 0.0324, 0.0334],
         [0.0330, 0.0337, 0.0319,  ..., 0.0325, 0.0324, 0.0334],
         [0.0330, 0.0337, 0.0319,  ..., 0.0325, 0.0324, 0.0334],
         [0.9010, 0.8989, 0.9042,  ..., 0.9026, 0.9027, 0.8999]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:41,252 [Process: 0] Synchronize training processes
2024-08-16 16:07:41,253 [Process: 0] Evaluating...
2024-08-16 16:07:41,255 [Process: 0] EPOCH 147:
2024-08-16 16:07:41,257 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0313, 0.0285, 0.0308,  ..., 0.0294, 0.0297, 0.0285],
         [0.0313, 0.0285, 0.0308,  ..., 0.0294, 0.0297, 0.0285],
         [0.0313, 0.0285, 0.0308,  ..., 0.0294, 0.0297, 0.0285],
         [0.9061, 0.9145, 0.9075,  ..., 0.9119, 0.9109, 0.9144]],
        [[0.0303, 0.0294, 0.0303,  ..., 0.0051, 0.0289, 0.0293],
         [0.0303, 0.0294, 0.0303,  ..., 0.0051, 0.0289, 0.0293],
         [0.0303, 0.0294, 0.0303,  ..., 0.9848, 0.0289, 0.0293],
         [0.9091, 0.9117, 0.9090,  ..., 0.0051, 0.9133, 0.9122]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0342, 0.0334, 0.0333,  ..., 0.0336, 0.0336, 0.0328],
         [0.0342, 0.0334, 0.0333,  ..., 0.0336, 0.0336, 0.0328],
         [0.0342, 0.0334, 0.0333,  ..., 0.0336, 0.0336, 0.0328],
         [0.8973, 0.8999, 0.9000,  ..., 0.8991, 0.8991, 0.9015]],
        [[0.0311, 0.0328, 0.0324,  ..., 0.0334, 0.0313, 0.0319],
         [0.0311, 0.0328, 0.0324,  ..., 0.0334, 0.0313, 0.0319],
         [0.0311, 0.0328, 0.0324,  ..., 0.0334, 0.0313, 0.0319],
         [0.9068, 0.9016, 0.9027,  ..., 0.8998, 0.9062, 0.9044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:43,738 [Process: 0] Synchronize training processes
2024-08-16 16:07:43,738 [Process: 0] Evaluating...
2024-08-16 16:07:43,740 [Process: 0] EPOCH 148:
2024-08-16 16:07:43,742 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0309, 0.0290, 0.0284,  ..., 0.0300, 0.0296, 0.0282],
         [0.0309, 0.0290, 0.0284,  ..., 0.0300, 0.0296, 0.0282],
         [0.0309, 0.0290, 0.0284,  ..., 0.0300, 0.0296, 0.0282],
         [0.9072, 0.9130, 0.9149,  ..., 0.9099, 0.9111, 0.9155]],
        [[0.0299, 0.0288, 0.0290,  ..., 0.0075, 0.0298, 0.0317],
         [0.0299, 0.0288, 0.0290,  ..., 0.0075, 0.0298, 0.0317],
         [0.0299, 0.0288, 0.0290,  ..., 0.9775, 0.0298, 0.0317],
         [0.9104, 0.9135, 0.9129,  ..., 0.0075, 0.9107, 0.9048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0336, 0.0336, 0.0343,  ..., 0.0327, 0.0331, 0.0325],
         [0.0336, 0.0336, 0.0343,  ..., 0.0327, 0.0331, 0.0325],
         [0.0336, 0.0336, 0.0343,  ..., 0.0327, 0.0331, 0.0325],
         [0.8993, 0.8991, 0.8970,  ..., 0.9020, 0.9008, 0.9026]],
        [[0.0322, 0.0307, 0.0310,  ..., 0.0309, 0.0299, 0.0316],
         [0.0322, 0.0307, 0.0310,  ..., 0.0309, 0.0299, 0.0316],
         [0.0322, 0.0307, 0.0310,  ..., 0.0309, 0.0299, 0.0316],
         [0.9033, 0.9079, 0.9069,  ..., 0.9074, 0.9104, 0.9053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:45,909 [Process: 0] Synchronize training processes
2024-08-16 16:07:45,910 [Process: 0] Evaluating...
2024-08-16 16:07:45,912 [Process: 0] EPOCH 149:
2024-08-16 16:07:45,914 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0284, 0.0296, 0.0308,  ..., 0.0289, 0.0294, 0.0298],
         [0.0284, 0.0296, 0.0308,  ..., 0.0289, 0.0294, 0.0298],
         [0.0284, 0.0296, 0.0308,  ..., 0.0289, 0.0294, 0.0298],
         [0.9147, 0.9112, 0.9076,  ..., 0.9134, 0.9118, 0.9105]],
        [[0.0286, 0.0290, 0.0284,  ..., 0.0017, 0.0295, 0.0280],
         [0.0286, 0.0290, 0.0284,  ..., 0.0017, 0.0295, 0.0280],
         [0.0286, 0.0290, 0.0284,  ..., 0.9949, 0.0295, 0.0280],
         [0.9141, 0.9131, 0.9147,  ..., 0.0017, 0.9116, 0.9159]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-16 16:07:48,034 [Process: 0] Synchronize training processes
2024-08-16 16:07:48,034 [Process: 0] Evaluating...
2024-08-16 16:07:48,036 [Process: 0] EPOCH 150:
2024-08-16 16:07:48,038 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0328, 0.0324, 0.0328,  ..., 0.0325, 0.0321, 0.0326],
         [0.0328, 0.0324, 0.0328,  ..., 0.0325, 0.0321, 0.0326],
         [0.0328, 0.0324, 0.0328,  ..., 0.0325, 0.0321, 0.0326],
         [0.9017, 0.9027, 0.9017,  ..., 0.9024, 0.9036, 0.9022]],
        [[0.0312, 0.0330, 0.0316,  ..., 0.0323, 0.0308, 0.0314],
         [0.0312, 0.0330, 0.0316,  ..., 0.0323, 0.0308, 0.0314],
         [0.0312, 0.0330, 0.0316,  ..., 0.0323, 0.0308, 0.0314],
         [0.9063, 0.9010, 0.9053,  ..., 0.9030, 0.9077, 0.9059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.8742e-02, 3.0367e-02, 2.9108e-02,  ..., 2.7212e-02,
          2.7482e-02, 2.9119e-02],
         [2.8742e-02, 3.0367e-02, 2.9108e-02,  ..., 2.7212e-02,
          2.7482e-02, 2.9119e-02],
         [2.8742e-02, 3.0367e-02, 2.9108e-02,  ..., 2.7212e-02,
          2.7482e-02, 2.9119e-02],
         [9.1377e-01, 9.0890e-01, 9.1268e-01,  ..., 9.1836e-01,
          9.1755e-01, 9.1264e-01]],
        [[2.8608e-02, 2.8881e-02, 2.7366e-02,  ..., 9.0538e-04,
          2.9150e-02, 2.8644e-02],
         [2.8608e-02, 2.8881e-02, 2.7366e-02,  ..., 9.0538e-04,
          2.9150e-02, 2.8644e-02],
         [2.8608e-02, 2.8881e-02, 2.7366e-02,  ..., 9.9728e-01,
          2.9150e-02, 2.8644e-02],
         [9.1418e-01, 9.1336e-01, 9.1790e-01,  ..., 9.0538e-04,
          9.1255e-01, 9.1407e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0338, 0.0319, 0.0317,  ..., 0.0324, 0.0311, 0.0331],
         [0.0338, 0.0319, 0.0317,  ..., 0.0324, 0.0311, 0.0331],
         [0.0338, 0.0319, 0.0317,  ..., 0.0324, 0.0311, 0.0331],
         [0.8987, 0.9042, 0.9050,  ..., 0.9028, 0.9066, 0.9008]],
        [[0.0312, 0.0301, 0.0308,  ..., 0.0318, 0.0306, 0.0308],
         [0.0312, 0.0301, 0.0308,  ..., 0.0318, 0.0306, 0.0308],
         [0.0312, 0.0301, 0.0308,  ..., 0.0318, 0.0306, 0.0308],
         [0.9063, 0.9096, 0.9077,  ..., 0.9045, 0.9081, 0.9077]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0299, 0.0295, 0.0287,  ..., 0.0300, 0.0274, 0.0303],
         [0.0299, 0.0295, 0.0287,  ..., 0.0300, 0.0274, 0.0303],
         [0.0299, 0.0295, 0.0287,  ..., 0.0300, 0.0274, 0.0303],
         [0.9102, 0.9116, 0.9138,  ..., 0.9101, 0.9178, 0.9092]],
        [[0.0274, 0.0283, 0.0277,  ..., 0.0047, 0.0296, 0.0268],
         [0.0274, 0.0283, 0.0277,  ..., 0.0047, 0.0296, 0.0268],
         [0.0274, 0.0283, 0.0277,  ..., 0.9859, 0.0296, 0.0268],
         [0.9179, 0.9151, 0.9168,  ..., 0.0047, 0.9112, 0.9196]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:07:50,056 [Process: 0] Synchronize training processes
2024-08-16 16:07:50,057 [Process: 0] Evaluating...
2024-08-16 16:07:50,059 [Process: 0] EPOCH 151:
2024-08-16 16:07:50,060 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:07:51,984 [Process: 0] Synchronize training processes
2024-08-16 16:07:51,984 [Process: 0] Evaluating...
2024-08-16 16:07:51,992 [Process: 0] EPOCH 152:
2024-08-16 16:07:51,994 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0342, 0.0318, 0.0334,  ..., 0.0331, 0.0329, 0.0347],
         [0.0342, 0.0318, 0.0334,  ..., 0.0331, 0.0329, 0.0347],
         [0.0342, 0.0318, 0.0334,  ..., 0.0331, 0.0329, 0.0347],
         [0.8974, 0.9045, 0.8998,  ..., 0.9007, 0.9013, 0.8960]],
        [[0.0319, 0.0307, 0.0301,  ..., 0.0297, 0.0308, 0.0296],
         [0.0319, 0.0307, 0.0301,  ..., 0.0297, 0.0308, 0.0296],
         [0.0319, 0.0307, 0.0301,  ..., 0.0297, 0.0308, 0.0296],
         [0.9044, 0.9078, 0.9098,  ..., 0.9109, 0.9075, 0.9113]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0295, 0.0304, 0.0276,  ..., 0.0266, 0.0270, 0.0285],
         [0.0295, 0.0304, 0.0276,  ..., 0.0266, 0.0270, 0.0285],
         [0.0295, 0.0304, 0.0276,  ..., 0.0266, 0.0270, 0.0285],
         [0.9115, 0.9089, 0.9172,  ..., 0.9202, 0.9191, 0.9144]],
        [[0.0275, 0.0286, 0.0271,  ..., 0.0023, 0.0288, 0.0289],
         [0.0275, 0.0286, 0.0271,  ..., 0.0023, 0.0288, 0.0289],
         [0.0275, 0.0286, 0.0271,  ..., 0.9931, 0.0288, 0.0289],
         [0.9174, 0.9143, 0.9188,  ..., 0.0023, 0.9135, 0.9133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:07:53,912 [Process: 0] Synchronize training processes
2024-08-16 16:07:53,912 [Process: 0] Evaluating...
2024-08-16 16:07:53,914 [Process: 0] EPOCH 153:
2024-08-16 16:07:53,916 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0324, 0.0310, 0.0322,  ..., 0.0323, 0.0323, 0.0328],
         [0.0324, 0.0310, 0.0322,  ..., 0.0323, 0.0323, 0.0328],
         [0.0324, 0.0310, 0.0322,  ..., 0.0323, 0.0323, 0.0328],
         [0.9028, 0.9070, 0.9033,  ..., 0.9030, 0.9030, 0.9017]],
        [[0.0307, 0.0284, 0.0306,  ..., 0.0311, 0.0302, 0.0293],
         [0.0307, 0.0284, 0.0306,  ..., 0.0311, 0.0302, 0.0293],
         [0.0307, 0.0284, 0.0306,  ..., 0.0311, 0.0302, 0.0293],
         [0.9079, 0.9147, 0.9082,  ..., 0.9067, 0.9093, 0.9120]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.9780e-02, 2.9473e-02, 2.7038e-02,  ..., 2.9246e-02,
          2.6359e-02, 2.8617e-02],
         [2.9780e-02, 2.9473e-02, 2.7038e-02,  ..., 2.9246e-02,
          2.6359e-02, 2.8617e-02],
         [2.9780e-02, 2.9473e-02, 2.7038e-02,  ..., 2.9246e-02,
          2.6359e-02, 2.8617e-02],
         [9.1066e-01, 9.1158e-01, 9.1889e-01,  ..., 9.1226e-01,
          9.2092e-01, 9.1415e-01]],
        [[2.6432e-02, 2.8499e-02, 2.8928e-02,  ..., 3.6871e-04,
          2.8060e-02, 2.8047e-02],
         [2.6432e-02, 2.8499e-02, 2.8928e-02,  ..., 3.6871e-04,
          2.8060e-02, 2.8047e-02],
         [2.6432e-02, 2.8499e-02, 2.8928e-02,  ..., 9.9889e-01,
          2.8060e-02, 2.8047e-02],
         [9.2070e-01, 9.1450e-01, 9.1322e-01,  ..., 3.6871e-04,
          9.1582e-01, 9.1586e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0320, 0.0297, 0.0312,  ..., 0.0322, 0.0312, 0.0318],
         [0.0320, 0.0297, 0.0312,  ..., 0.0322, 0.0312, 0.0318],
         [0.0320, 0.0297, 0.0312,  ..., 0.0322, 0.0312, 0.0318],
         [0.9039, 0.9108, 0.9064,  ..., 0.9035, 0.9063, 0.9046]],
        [[0.0299, 0.0302, 0.0297,  ..., 0.0310, 0.0296, 0.0289],
         [0.0299, 0.0302, 0.0297,  ..., 0.0310, 0.0296, 0.0289],
         [0.0299, 0.0302, 0.0297,  ..., 0.0310, 0.0296, 0.0289],
         [0.9104, 0.9095, 0.9108,  ..., 0.9069, 0.9112, 0.9132]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:55,836 [Process: 0] Synchronize training processes
2024-08-16 16:07:55,837 [Process: 0] Evaluating...
2024-08-16 16:07:55,838 [Process: 0] EPOCH 154:
2024-08-16 16:07:55,840 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.8593e-02, 2.8295e-02, 3.0117e-02,  ..., 2.7199e-02,
          2.7165e-02, 2.8766e-02],
         [2.8593e-02, 2.8295e-02, 3.0117e-02,  ..., 2.7199e-02,
          2.7165e-02, 2.8766e-02],
         [2.8593e-02, 2.8295e-02, 3.0117e-02,  ..., 2.7199e-02,
          2.7165e-02, 2.8766e-02],
         [9.1422e-01, 9.1512e-01, 9.0965e-01,  ..., 9.1840e-01,
          9.1850e-01, 9.1370e-01]],
        [[2.6043e-02, 2.7436e-02, 2.7449e-02,  ..., 8.5250e-04,
          2.7029e-02, 2.7843e-02],
         [2.6043e-02, 2.7436e-02, 2.7449e-02,  ..., 8.5250e-04,
          2.7029e-02, 2.7843e-02],
         [2.6043e-02, 2.7436e-02, 2.7449e-02,  ..., 9.9744e-01,
          2.7029e-02, 2.7843e-02],
         [9.2187e-01, 9.1769e-01, 9.1765e-01,  ..., 8.5250e-04,
          9.1891e-01, 9.1647e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0314, 0.0304, 0.0300,  ..., 0.0302, 0.0296, 0.0307],
         [0.0314, 0.0304, 0.0300,  ..., 0.0302, 0.0296, 0.0307],
         [0.0314, 0.0304, 0.0300,  ..., 0.0302, 0.0296, 0.0307],
         [0.9058, 0.9088, 0.9099,  ..., 0.9093, 0.9113, 0.9078]],
        [[0.0307, 0.0303, 0.0296,  ..., 0.0308, 0.0298, 0.0301],
         [0.0307, 0.0303, 0.0296,  ..., 0.0308, 0.0298, 0.0301],
         [0.0307, 0.0303, 0.0296,  ..., 0.0308, 0.0298, 0.0301],
         [0.9078, 0.9092, 0.9113,  ..., 0.9075, 0.9106, 0.9098]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:57,762 [Process: 0] Synchronize training processes
2024-08-16 16:07:57,762 [Process: 0] Evaluating...
2024-08-16 16:07:57,764 [Process: 0] EPOCH 155:
2024-08-16 16:07:57,766 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0268, 0.0272, 0.0272,  ..., 0.0291, 0.0278, 0.0264],
         [0.0268, 0.0272, 0.0272,  ..., 0.0291, 0.0278, 0.0264],
         [0.0268, 0.0272, 0.0272,  ..., 0.0291, 0.0278, 0.0264],
         [0.9195, 0.9185, 0.9184,  ..., 0.9128, 0.9167, 0.9209]],
        [[0.0259, 0.0276, 0.0267,  ..., 0.0130, 0.0284, 0.0265],
         [0.0259, 0.0276, 0.0267,  ..., 0.0130, 0.0284, 0.0265],
         [0.0259, 0.0276, 0.0267,  ..., 0.9609, 0.0284, 0.0265],
         [0.9223, 0.9173, 0.9199,  ..., 0.0130, 0.9148, 0.9205]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0298, 0.0292, 0.0302,  ..., 0.0315, 0.0296, 0.0299],
         [0.0298, 0.0292, 0.0302,  ..., 0.0315, 0.0296, 0.0299],
         [0.0298, 0.0292, 0.0302,  ..., 0.0315, 0.0296, 0.0299],
         [0.9105, 0.9124, 0.9095,  ..., 0.9056, 0.9112, 0.9102]],
        [[0.0287, 0.0282, 0.0282,  ..., 0.0283, 0.0295, 0.0283],
         [0.0287, 0.0282, 0.0282,  ..., 0.0283, 0.0295, 0.0283],
         [0.0287, 0.0282, 0.0282,  ..., 0.0283, 0.0295, 0.0283],
         [0.9139, 0.9155, 0.9155,  ..., 0.9150, 0.9116, 0.9150]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:07:59,686 [Process: 0] Synchronize training processes
2024-08-16 16:07:59,686 [Process: 0] Evaluating...
2024-08-16 16:07:59,688 [Process: 0] EPOCH 156:
2024-08-16 16:07:59,690 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0262, 0.0280, 0.0263,  ..., 0.0260, 0.0270, 0.0280],
         [0.0262, 0.0280, 0.0263,  ..., 0.0260, 0.0270, 0.0280],
         [0.0262, 0.0280, 0.0263,  ..., 0.0260, 0.0270, 0.0280],
         [0.9214, 0.9161, 0.9212,  ..., 0.9219, 0.9191, 0.9161]],
        [[0.0276, 0.0270, 0.0272,  ..., 0.0244, 0.0285, 0.0282],
         [0.0276, 0.0270, 0.0272,  ..., 0.0244, 0.0285, 0.0282],
         [0.0276, 0.0270, 0.0272,  ..., 0.9269, 0.0285, 0.0282],
         [0.9172, 0.9189, 0.9184,  ..., 0.0244, 0.9144, 0.9155]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0301, 0.0284, 0.0287,  ..., 0.0297, 0.0303, 0.0302],
         [0.0301, 0.0284, 0.0287,  ..., 0.0297, 0.0303, 0.0302],
         [0.0301, 0.0284, 0.0287,  ..., 0.0297, 0.0303, 0.0302],
         [0.9098, 0.9148, 0.9140,  ..., 0.9108, 0.9091, 0.9093]],
        [[0.0290, 0.0297, 0.0297,  ..., 0.0305, 0.0290, 0.0304],
         [0.0290, 0.0297, 0.0297,  ..., 0.0305, 0.0290, 0.0304],
         [0.0290, 0.0297, 0.0297,  ..., 0.0305, 0.0290, 0.0304],
         [0.9131, 0.9110, 0.9109,  ..., 0.9084, 0.9129, 0.9088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:08:01,606 [Process: 0] Synchronize training processes
2024-08-16 16:08:01,606 [Process: 0] Evaluating...
2024-08-16 16:08:01,608 [Process: 0] EPOCH 157:
2024-08-16 16:08:01,610 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.6565e-02, 2.7440e-02, 2.6567e-02,  ..., 2.5742e-02,
          2.6361e-02, 2.5232e-02],
         [2.6565e-02, 2.7440e-02, 2.6567e-02,  ..., 2.5742e-02,
          2.6361e-02, 2.5232e-02],
         [2.6565e-02, 2.7440e-02, 2.6567e-02,  ..., 2.5742e-02,
          2.6361e-02, 2.5232e-02],
         [9.2031e-01, 9.1768e-01, 9.2030e-01,  ..., 9.2277e-01,
          9.2092e-01, 9.2430e-01]],
        [[2.8281e-02, 2.5886e-02, 2.7142e-02,  ..., 2.3708e-04,
          2.7017e-02, 2.7509e-02],
         [2.8281e-02, 2.5886e-02, 2.7142e-02,  ..., 2.3708e-04,
          2.7017e-02, 2.7509e-02],
         [2.8281e-02, 2.5886e-02, 2.7142e-02,  ..., 9.9929e-01,
          2.7017e-02, 2.7509e-02],
         [9.1516e-01, 9.2234e-01, 9.1857e-01,  ..., 2.3708e-04,
          9.1895e-01, 9.1747e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0297, 0.0297, 0.0300,  ..., 0.0279, 0.0284, 0.0294],
         [0.0297, 0.0297, 0.0300,  ..., 0.0279, 0.0284, 0.0294],
         [0.0297, 0.0297, 0.0300,  ..., 0.0279, 0.0284, 0.0294],
         [0.9109, 0.9109, 0.9100,  ..., 0.9164, 0.9147, 0.9117]],
        [[0.0288, 0.0281, 0.0297,  ..., 0.0292, 0.0288, 0.0288],
         [0.0288, 0.0281, 0.0297,  ..., 0.0292, 0.0288, 0.0288],
         [0.0288, 0.0281, 0.0297,  ..., 0.0292, 0.0288, 0.0288],
         [0.9136, 0.9156, 0.9109,  ..., 0.9124, 0.9137, 0.9137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:08:03,525 [Process: 0] Synchronize training processes
2024-08-16 16:08:03,525 [Process: 0] Evaluating...
2024-08-16 16:08:03,527 [Process: 0] EPOCH 158:
2024-08-16 16:08:03,529 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0288, 0.0274, 0.0270,  ..., 0.0267, 0.0246, 0.0259],
         [0.0288, 0.0274, 0.0270,  ..., 0.0267, 0.0246, 0.0259],
         [0.0288, 0.0274, 0.0270,  ..., 0.0267, 0.0246, 0.0259],
         [0.9137, 0.9179, 0.9189,  ..., 0.9198, 0.9261, 0.9223]],
        [[0.0265, 0.0257, 0.0262,  ..., 0.0018, 0.0261, 0.0263],
         [0.0265, 0.0257, 0.0262,  ..., 0.0018, 0.0261, 0.0263],
         [0.0265, 0.0257, 0.0262,  ..., 0.9946, 0.0261, 0.0263],
         [0.9206, 0.9230, 0.9214,  ..., 0.0018, 0.9218, 0.9210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0275, 0.0274, 0.0277,  ..., 0.0277, 0.0286, 0.0302],
         [0.0275, 0.0274, 0.0277,  ..., 0.0277, 0.0286, 0.0302],
         [0.0275, 0.0274, 0.0277,  ..., 0.0277, 0.0286, 0.0302],
         [0.9176, 0.9177, 0.9170,  ..., 0.9169, 0.9142, 0.9093]],
        [[0.0288, 0.0297, 0.0290,  ..., 0.0282, 0.0301, 0.0292],
         [0.0288, 0.0297, 0.0290,  ..., 0.0282, 0.0301, 0.0292],
         [0.0288, 0.0297, 0.0290,  ..., 0.0282, 0.0301, 0.0292],
         [0.9135, 0.9108, 0.9130,  ..., 0.9154, 0.9098, 0.9125]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:08:05,444 [Process: 0] Synchronize training processes
2024-08-16 16:08:05,445 [Process: 0] Evaluating...
2024-08-16 16:08:05,447 [Process: 0] EPOCH 159:
2024-08-16 16:08:05,449 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.5778e-02, 2.5776e-02, 2.5929e-02,  ..., 2.6337e-02,
          2.6533e-02, 2.5877e-02],
         [2.5778e-02, 2.5776e-02, 2.5929e-02,  ..., 2.6337e-02,
          2.6533e-02, 2.5877e-02],
         [2.5778e-02, 2.5776e-02, 2.5929e-02,  ..., 2.6337e-02,
          2.6533e-02, 2.5877e-02],
         [9.2267e-01, 9.2267e-01, 9.2221e-01,  ..., 9.2099e-01,
          9.2040e-01, 9.2237e-01]],
        [[2.5762e-02, 2.5338e-02, 2.7280e-02,  ..., 9.0801e-04,
          2.7793e-02, 2.6023e-02],
         [2.5762e-02, 2.5338e-02, 2.7280e-02,  ..., 9.0801e-04,
          2.7793e-02, 2.6023e-02],
         [2.5762e-02, 2.5338e-02, 2.7280e-02,  ..., 9.9728e-01,
          2.7793e-02, 2.6023e-02],
         [9.2271e-01, 9.2398e-01, 9.1816e-01,  ..., 9.0801e-04,
          9.1662e-01, 9.2193e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0272, 0.0259, 0.0279,  ..., 0.0286, 0.0290, 0.0286],
         [0.0272, 0.0259, 0.0279,  ..., 0.0286, 0.0290, 0.0286],
         [0.0272, 0.0259, 0.0279,  ..., 0.0286, 0.0290, 0.0286],
         [0.9183, 0.9223, 0.9162,  ..., 0.9142, 0.9130, 0.9142]],
        [[0.0278, 0.0270, 0.0266,  ..., 0.0267, 0.0265, 0.0277],
         [0.0278, 0.0270, 0.0266,  ..., 0.0267, 0.0265, 0.0277],
         [0.0278, 0.0270, 0.0266,  ..., 0.0267, 0.0265, 0.0277],
         [0.9165, 0.9191, 0.9201,  ..., 0.9199, 0.9205, 0.9168]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:08:07,361 [Process: 0] Synchronize training processes
2024-08-16 16:08:07,362 [Process: 0] Evaluating...
2024-08-16 16:08:07,364 [Process: 0] EPOCH 160:
2024-08-16 16:08:07,366 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0268, 0.0258, 0.0250,  ..., 0.0275, 0.0269, 0.0256],
         [0.0268, 0.0258, 0.0250,  ..., 0.0275, 0.0269, 0.0256],
         [0.0268, 0.0258, 0.0250,  ..., 0.0275, 0.0269, 0.0256],
         [0.9197, 0.9227, 0.9250,  ..., 0.9174, 0.9193, 0.9231]],
        [[0.0272, 0.0248, 0.0256,  ..., 0.0451, 0.0265, 0.0266],
         [0.0272, 0.0248, 0.0256,  ..., 0.0451, 0.0265, 0.0266],
         [0.0272, 0.0248, 0.0256,  ..., 0.8647, 0.0265, 0.0266],
         [0.9183, 0.9256, 0.9231,  ..., 0.0451, 0.9206, 0.9202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0285, 0.0272, 0.0287,  ..., 0.0291, 0.0274, 0.0278],
         [0.0285, 0.0272, 0.0287,  ..., 0.0291, 0.0274, 0.0278],
         [0.0285, 0.0272, 0.0287,  ..., 0.0291, 0.0274, 0.0278],
         [0.9146, 0.9183, 0.9139,  ..., 0.9128, 0.9178, 0.9167]],
        [[0.0287, 0.0293, 0.0286,  ..., 0.0285, 0.0277, 0.0284],
         [0.0287, 0.0293, 0.0286,  ..., 0.0285, 0.0277, 0.0284],
         [0.0287, 0.0293, 0.0286,  ..., 0.0285, 0.0277, 0.0284],
         [0.9139, 0.9122, 0.9142,  ..., 0.9145, 0.9168, 0.9147]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:08:09,287 [Process: 0] Synchronize training processes
2024-08-16 16:08:09,287 [Process: 0] Evaluating...
2024-08-16 16:08:09,289 [Process: 0] EPOCH 161:
2024-08-16 16:08:09,291 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0257, 0.0261, 0.0250,  ..., 0.0260, 0.0259, 0.0267],
         [0.0257, 0.0261, 0.0250,  ..., 0.0260, 0.0259, 0.0267],
         [0.0257, 0.0261, 0.0250,  ..., 0.0260, 0.0259, 0.0267],
         [0.9228, 0.9218, 0.9251,  ..., 0.9220, 0.9223, 0.9200]],
        [[0.0255, 0.0265, 0.0264,  ..., 0.0038, 0.0265, 0.0272],
         [0.0255, 0.0265, 0.0264,  ..., 0.0038, 0.0265, 0.0272],
         [0.0255, 0.0265, 0.0264,  ..., 0.9886, 0.0265, 0.0272],
         [0.9236, 0.9204, 0.9207,  ..., 0.0038, 0.9206, 0.9184]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0278, 0.0284, 0.0282,  ..., 0.0270, 0.0282, 0.0288],
         [0.0278, 0.0284, 0.0282,  ..., 0.0270, 0.0282, 0.0288],
         [0.0278, 0.0284, 0.0282,  ..., 0.0270, 0.0282, 0.0288],
         [0.9165, 0.9149, 0.9153,  ..., 0.9191, 0.9153, 0.9136]],
        [[0.0283, 0.0293, 0.0289,  ..., 0.0286, 0.0289, 0.0280],
         [0.0283, 0.0293, 0.0289,  ..., 0.0286, 0.0289, 0.0280],
         [0.0283, 0.0293, 0.0289,  ..., 0.0286, 0.0289, 0.0280],
         [0.9150, 0.9122, 0.9132,  ..., 0.9142, 0.9133, 0.9161]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:08:11,212 [Process: 0] Synchronize training processes
2024-08-16 16:08:11,213 [Process: 0] Evaluating...
2024-08-16 16:08:11,221 [Process: 0] EPOCH 162:
2024-08-16 16:08:11,223 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0263, 0.0246, 0.0248,  ..., 0.0231, 0.0249, 0.0248],
         [0.0263, 0.0246, 0.0248,  ..., 0.0231, 0.0249, 0.0248],
         [0.0263, 0.0246, 0.0248,  ..., 0.0231, 0.0249, 0.0248],
         [0.9212, 0.9263, 0.9257,  ..., 0.9306, 0.9252, 0.9256]],
        [[0.0251, 0.0255, 0.0254,  ..., 0.0185, 0.0264, 0.0244],
         [0.0251, 0.0255, 0.0254,  ..., 0.0185, 0.0264, 0.0244],
         [0.0251, 0.0255, 0.0254,  ..., 0.9445, 0.0264, 0.0244],
         [0.9247, 0.9234, 0.9237,  ..., 0.0185, 0.9207, 0.9269]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0259, 0.0267, 0.0253,  ..., 0.0268, 0.0257, 0.0252],
         [0.0259, 0.0267, 0.0253,  ..., 0.0268, 0.0257, 0.0252],
         [0.0259, 0.0267, 0.0253,  ..., 0.0268, 0.0257, 0.0252],
         [0.9222, 0.9200, 0.9240,  ..., 0.9195, 0.9230, 0.9245]],
        [[0.0251, 0.0268, 0.0265,  ..., 0.0270, 0.0262, 0.0268],
         [0.0251, 0.0268, 0.0265,  ..., 0.0270, 0.0262, 0.0268],
         [0.0251, 0.0268, 0.0265,  ..., 0.0270, 0.0262, 0.0268],
         [0.9247, 0.9197, 0.9206,  ..., 0.9191, 0.9214, 0.9197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:08:13,191 [Process: 0] Synchronize training processes
2024-08-16 16:08:13,191 [Process: 0] Evaluating...
2024-08-16 16:08:13,193 [Process: 0] EPOCH 163:
2024-08-16 16:08:13,195 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0241, 0.0259, 0.0242,  ..., 0.0266, 0.0259, 0.0251],
         [0.0241, 0.0259, 0.0242,  ..., 0.0266, 0.0259, 0.0251],
         [0.0241, 0.0259, 0.0242,  ..., 0.0266, 0.0259, 0.0251],
         [0.9276, 0.9224, 0.9275,  ..., 0.9203, 0.9224, 0.9246]],
        [[0.0255, 0.0261, 0.0244,  ..., 0.0049, 0.0251, 0.0248],
         [0.0255, 0.0261, 0.0244,  ..., 0.0049, 0.0251, 0.0248],
         [0.0255, 0.0261, 0.0244,  ..., 0.9853, 0.0251, 0.0248],
         [0.9234, 0.9218, 0.9268,  ..., 0.0049, 0.9248, 0.9256]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0268, 0.0254, 0.0259,  ..., 0.0248, 0.0269, 0.0260],
         [0.0268, 0.0254, 0.0259,  ..., 0.0248, 0.0269, 0.0260],
         [0.0268, 0.0254, 0.0259,  ..., 0.0248, 0.0269, 0.0260],
         [0.9196, 0.9237, 0.9224,  ..., 0.9257, 0.9193, 0.9220]],
        [[0.0272, 0.0275, 0.0271,  ..., 0.0260, 0.0266, 0.0266],
         [0.0272, 0.0275, 0.0271,  ..., 0.0260, 0.0266, 0.0266],
         [0.0272, 0.0275, 0.0271,  ..., 0.0260, 0.0266, 0.0266],
         [0.9184, 0.9175, 0.9188,  ..., 0.9219, 0.9202, 0.9201]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:08:15,120 [Process: 0] Synchronize training processes
2024-08-16 16:08:15,120 [Process: 0] Evaluating...
2024-08-16 16:08:15,122 [Process: 0] EPOCH 164:
2024-08-16 16:08:15,124 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0239, 0.0259, 0.0237,  ..., 0.0264, 0.0248, 0.0252],
         [0.0239, 0.0259, 0.0237,  ..., 0.0264, 0.0248, 0.0252],
         [0.0239, 0.0259, 0.0237,  ..., 0.0264, 0.0248, 0.0252],
         [0.9284, 0.9224, 0.9290,  ..., 0.9209, 0.9255, 0.9245]],
        [[0.0260, 0.0250, 0.0243,  ..., 0.0030, 0.0257, 0.0245],
         [0.0260, 0.0250, 0.0243,  ..., 0.0030, 0.0257, 0.0245],
         [0.0260, 0.0250, 0.0243,  ..., 0.9909, 0.0257, 0.0245],
         [0.9219, 0.9251, 0.9270,  ..., 0.0030, 0.9229, 0.9265]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0264, 0.0265, 0.0266,  ..., 0.0270, 0.0272, 0.0272],
         [0.0264, 0.0265, 0.0266,  ..., 0.0270, 0.0272, 0.0272],
         [0.0264, 0.0265, 0.0266,  ..., 0.0270, 0.0272, 0.0272],
         [0.9209, 0.9206, 0.9201,  ..., 0.9191, 0.9183, 0.9184]],
        [[0.0279, 0.0271, 0.0281,  ..., 0.0274, 0.0285, 0.0275],
         [0.0279, 0.0271, 0.0281,  ..., 0.0274, 0.0285, 0.0275],
         [0.0279, 0.0271, 0.0281,  ..., 0.0274, 0.0285, 0.0275],
         [0.9164, 0.9188, 0.9158,  ..., 0.9177, 0.9146, 0.9176]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:08:17,036 [Process: 0] Synchronize training processes
2024-08-16 16:08:17,036 [Process: 0] Evaluating...
2024-08-16 16:08:17,038 [Process: 0] EPOCH 165:
2024-08-16 16:08:17,040 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0257, 0.0251, 0.0247,  ..., 0.0260, 0.0250, 0.0249],
         [0.0259, 0.0251, 0.0247,  ..., 0.0260, 0.0250, 0.0249],
         [0.0257, 0.0251, 0.0247,  ..., 0.0260, 0.0250, 0.0249],
         [0.9226, 0.9246, 0.9259,  ..., 0.9220, 0.9251, 0.9254]],
        [[0.0242, 0.0271, 0.0260,  ..., 0.0030, 0.0262, 0.0256],
         [0.0242, 0.0271, 0.0260,  ..., 0.0030, 0.0262, 0.0256],
         [0.0242, 0.0271, 0.0260,  ..., 0.9909, 0.0262, 0.0256],
         [0.9275, 0.9186, 0.9219,  ..., 0.0030, 0.9214, 0.9233]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0240, 0.0238, 0.0233,  ..., 0.0242, 0.0244, 0.0243],
         [0.0240, 0.0238, 0.0233,  ..., 0.0242, 0.0244, 0.0243],
         [0.0240, 0.0238, 0.0233,  ..., 0.0242, 0.0244, 0.0243],
         [0.9280, 0.9285, 0.9302,  ..., 0.9273, 0.9268, 0.9272]],
        [[0.0252, 0.0258, 0.0242,  ..., 0.0245, 0.0255, 0.0256],
         [0.0252, 0.0258, 0.0242,  ..., 0.0245, 0.0255, 0.0256],
         [0.0252, 0.0258, 0.0242,  ..., 0.0245, 0.0255, 0.0256],
         [0.9244, 0.9227, 0.9273,  ..., 0.9266, 0.9236, 0.9232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:08:18,961 [Process: 0] Synchronize training processes
2024-08-16 16:08:18,962 [Process: 0] Evaluating...
2024-08-16 16:08:18,964 [Process: 0] EPOCH 166:
2024-08-16 16:08:18,966 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.0254, 0.0250, 0.0254,  ..., 0.0253, 0.0253, 0.0249],
         [0.0254, 0.0250, 0.0254,  ..., 0.0253, 0.0253, 0.0249],
         [0.0254, 0.0250, 0.0254,  ..., 0.0253, 0.0253, 0.0249],
         [0.9239, 0.9250, 0.9238,  ..., 0.9240, 0.9241, 0.9253]],
        [[0.0250, 0.0242, 0.0232,  ..., 0.0197, 0.0250, 0.0259],
         [0.0250, 0.0242, 0.0232,  ..., 0.0197, 0.0250, 0.0259],
         [0.0250, 0.0242, 0.0232,  ..., 0.9408, 0.0250, 0.0259],
         [0.9249, 0.9275, 0.9304,  ..., 0.0197, 0.9250, 0.9223]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0287, 0.0283, 0.0301,  ..., 0.0294, 0.0288, 0.0281],
         [0.0287, 0.0283, 0.0301,  ..., 0.0294, 0.0288, 0.0281],
         [0.0287, 0.0283, 0.0301,  ..., 0.0294, 0.0288, 0.0281],
         [0.9138, 0.9150, 0.9097,  ..., 0.9119, 0.9135, 0.9156]],
        [[0.0278, 0.0275, 0.0278,  ..., 0.0270, 0.0293, 0.0306],
         [0.0278, 0.0275, 0.0278,  ..., 0.0270, 0.0293, 0.0306],
         [0.0278, 0.0275, 0.0278,  ..., 0.0270, 0.0293, 0.0306],
         [0.9165, 0.9176, 0.9165,  ..., 0.9189, 0.9120, 0.9081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.4947e-02, 2.3949e-02, 2.5394e-02,  ..., 2.6032e-02,
          2.4956e-02, 2.3687e-02],
         [2.4947e-02, 2.3949e-02, 2.5394e-02,  ..., 2.6032e-02,
          2.4956e-02, 2.3687e-02],
         [2.4947e-02, 2.3949e-02, 2.5394e-02,  ..., 2.6032e-02,
          2.4956e-02, 2.3687e-02],
         [9.2516e-01, 9.2815e-01, 9.2382e-01,  ..., 9.2190e-01,
          9.2513e-01, 9.2894e-01]],
        [[2.3373e-02, 2.3526e-02, 2.3259e-02,  ..., 4.1454e-04,
          2.4107e-02, 2.3647e-02],
         [2.3373e-02, 2.3526e-02, 2.3259e-02,  ..., 4.1454e-04,
          2.4107e-02, 2.3647e-02],
         [2.3373e-02, 2.3526e-02, 2.3259e-02,  ..., 9.9876e-01,
          2.4107e-02, 2.3647e-02],
         [9.2988e-01, 9.2942e-01, 9.3022e-01,  ..., 4.1454e-04,
          9.2768e-01, 9.2906e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:08:20,879 [Process: 0] Synchronize training processes
2024-08-16 16:08:20,880 [Process: 0] Evaluating...
2024-08-16 16:08:20,882 [Process: 0] EPOCH 167:
2024-08-16 16:08:20,884 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0293, 0.0292, 0.0291,  ..., 0.0289, 0.0286, 0.0289],
         [0.0293, 0.0292, 0.0291,  ..., 0.0289, 0.0286, 0.0289],
         [0.0293, 0.0292, 0.0291,  ..., 0.0289, 0.0286, 0.0289],
         [0.9120, 0.9124, 0.9127,  ..., 0.9133, 0.9143, 0.9134]],
        [[0.0277, 0.0267, 0.0274,  ..., 0.0285, 0.0310, 0.0281],
         [0.0277, 0.0267, 0.0274,  ..., 0.0285, 0.0310, 0.0281],
         [0.0277, 0.0267, 0.0274,  ..., 0.0285, 0.0310, 0.0281],
         [0.9169, 0.9198, 0.9177,  ..., 0.9146, 0.9069, 0.9156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.4964e-02, 2.5758e-02, 2.4311e-02,  ..., 2.6413e-02,
          2.4924e-02, 2.4967e-02],
         [2.4964e-02, 2.5758e-02, 2.4311e-02,  ..., 2.6413e-02,
          2.4924e-02, 2.4967e-02],
         [2.4964e-02, 2.5758e-02, 2.4311e-02,  ..., 2.6413e-02,
          2.4924e-02, 2.4967e-02],
         [9.2511e-01, 9.2272e-01, 9.2707e-01,  ..., 9.2076e-01,
          9.2523e-01, 9.2510e-01]],
        [[2.4972e-02, 2.4187e-02, 2.4820e-02,  ..., 3.7411e-04,
          2.5047e-02, 2.3256e-02],
         [2.4972e-02, 2.4192e-02, 2.4820e-02,  ..., 3.7411e-04,
          2.5047e-02, 2.3256e-02],
         [2.4972e-02, 2.4187e-02, 2.4820e-02,  ..., 9.9888e-01,
          2.5047e-02, 2.3256e-02],
         [9.2508e-01, 9.2743e-01, 9.2554e-01,  ..., 3.7411e-04,
          9.2486e-01, 9.3023e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:08:22,812 [Process: 0] Synchronize training processes
2024-08-16 16:08:22,812 [Process: 0] Evaluating...
2024-08-16 16:08:22,814 [Process: 0] EPOCH 168:
2024-08-16 16:08:22,816 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0282, 0.0278, 0.0279,  ..., 0.0279, 0.0275, 0.0280],
         [0.0282, 0.0278, 0.0279,  ..., 0.0279, 0.0275, 0.0280],
         [0.0282, 0.0278, 0.0279,  ..., 0.0279, 0.0275, 0.0280],
         [0.9154, 0.9165, 0.9162,  ..., 0.9164, 0.9174, 0.9161]],
        [[0.0257, 0.0269, 0.0268,  ..., 0.0263, 0.0330, 0.0295],
         [0.0257, 0.0269, 0.0268,  ..., 0.0263, 0.0330, 0.0295],
         [0.0257, 0.0269, 0.0268,  ..., 0.0263, 0.0330, 0.0295],
         [0.9229, 0.9193, 0.9197,  ..., 0.9210, 0.9009, 0.9115]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.8060e-02, 1.6103e-02, 1.8499e-02,  ..., 1.8722e-02,
          1.6963e-02, 1.7850e-02],
         [1.8794e-02, 1.6753e-02, 1.9384e-02,  ..., 1.9468e-02,
          1.7688e-02, 1.8479e-02],
         [1.8060e-02, 1.6103e-02, 1.8499e-02,  ..., 1.8722e-02,
          1.6963e-02, 1.7850e-02],
         [9.4509e-01, 9.5104e-01, 9.4362e-01,  ..., 9.4309e-01,
          9.4839e-01, 9.4582e-01]],
        [[1.7225e-02, 1.7033e-02, 1.5143e-02,  ..., 2.8509e-04,
          1.6614e-02, 1.7000e-02],
         [1.7935e-02, 1.7914e-02, 1.5949e-02,  ..., 2.8509e-04,
          1.7280e-02, 1.7820e-02],
         [1.7225e-02, 1.7033e-02, 1.5143e-02,  ..., 9.9914e-01,
          1.6614e-02, 1.7000e-02],
         [9.4762e-01, 9.4802e-01, 9.5376e-01,  ..., 2.8509e-04,
          9.4949e-01, 9.4818e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:08:24,735 [Process: 0] Synchronize training processes
2024-08-16 16:08:24,735 [Process: 0] Evaluating...
2024-08-16 16:08:24,737 [Process: 0] EPOCH 169:
2024-08-16 16:08:24,739 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0282, 0.0281, 0.0280,  ..., 0.0280, 0.0279, 0.0282],
         [0.0282, 0.0281, 0.0280,  ..., 0.0280, 0.0279, 0.0282],
         [0.0282, 0.0281, 0.0280,  ..., 0.0280, 0.0279, 0.0282],
         [0.9154, 0.9157, 0.9161,  ..., 0.9159, 0.9163, 0.9154]],
        [[0.0276, 0.0259, 0.0259,  ..., 0.0259, 0.0333, 0.0269],
         [0.0276, 0.0259, 0.0259,  ..., 0.0259, 0.0333, 0.0269],
         [0.0276, 0.0259, 0.0259,  ..., 0.0259, 0.0359, 0.0269],
         [0.9172, 0.9224, 0.9223,  ..., 0.9223, 0.8976, 0.9194]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.9382e-02, 2.0119e-02, 1.9215e-02,  ..., 2.1097e-02,
          7.0842e-02, 1.8496e-02],
         [2.0347e-02, 2.1048e-02, 1.9919e-02,  ..., 2.2185e-02,
          7.0842e-02, 1.9127e-02],
         [1.9382e-02, 2.0119e-02, 1.9215e-02,  ..., 2.1097e-02,
          7.8747e-01, 1.8496e-02],
         [9.4089e-01, 9.3871e-01, 9.4165e-01,  ..., 9.3562e-01,
          7.0842e-02, 9.4388e-01]],
        [[1.6855e-02, 1.7927e-02, 1.7569e-02,  ..., 2.5327e-04,
          1.8301e-02, 1.7817e-02],
         [1.7792e-02, 1.8688e-02, 1.8457e-02,  ..., 2.5327e-04,
          1.9229e-02, 1.8428e-02],
         [1.6855e-02, 1.7927e-02, 1.7569e-02,  ..., 9.9924e-01,
          1.8301e-02, 1.7817e-02],
         [9.4850e-01, 9.4546e-01, 9.4640e-01,  ..., 2.5327e-04,
          9.4417e-01, 9.4594e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:08:26,650 [Process: 0] Synchronize training processes
2024-08-16 16:08:26,650 [Process: 0] Evaluating...
2024-08-16 16:08:26,652 [Process: 0] EPOCH 170:
2024-08-16 16:08:26,654 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0288, 0.0294, 0.0293,  ..., 0.0294, 0.0293, 0.0294],
         [0.0288, 0.0294, 0.0293,  ..., 0.0294, 0.0293, 0.0294],
         [0.0288, 0.0294, 0.0293,  ..., 0.0294, 0.0293, 0.0294],
         [0.9135, 0.9118, 0.9122,  ..., 0.9117, 0.9120, 0.9117]],
        [[0.0265, 0.0264, 0.0268,  ..., 0.0265, 0.0272, 0.0276],
         [0.0265, 0.0264, 0.0268,  ..., 0.0265, 0.0272, 0.0276],
         [0.0265, 0.0264, 0.0268,  ..., 0.0265, 0.0272, 0.0276],
         [0.9206, 0.9207, 0.9195,  ..., 0.9205, 0.9185, 0.9171]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.6661e-02, 2.6268e-02, 2.6215e-02,  ..., 2.6654e-02,
          2.6347e-02, 2.5679e-02],
         [2.6661e-02, 2.6268e-02, 2.6215e-02,  ..., 2.6654e-02,
          2.6347e-02, 2.5679e-02],
         [2.6661e-02, 2.6268e-02, 2.6215e-02,  ..., 2.6654e-02,
          2.6347e-02, 2.5679e-02],
         [9.2002e-01, 9.2120e-01, 9.2136e-01,  ..., 9.2004e-01,
          9.2096e-01, 9.2296e-01]],
        [[2.6516e-02, 2.5319e-02, 2.4873e-02,  ..., 9.9090e-06,
          2.4817e-02, 2.5135e-02],
         [2.6516e-02, 2.5319e-02, 2.4873e-02,  ..., 9.9090e-06,
          2.4817e-02, 2.5135e-02],
         [2.6516e-02, 2.5319e-02, 2.4873e-02,  ..., 9.9997e-01,
          2.4817e-02, 2.5135e-02],
         [9.2045e-01, 9.2404e-01, 9.2538e-01,  ..., 9.9090e-06,
          9.2555e-01, 9.2460e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:08:28,568 [Process: 0] Synchronize training processes
2024-08-16 16:08:28,569 [Process: 0] Evaluating...
2024-08-16 16:08:28,570 [Process: 0] EPOCH 171:
2024-08-16 16:08:28,572 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0287, 0.0284, 0.0286,  ..., 0.0286, 0.0286, 0.0288],
         [0.0287, 0.0284, 0.0286,  ..., 0.0286, 0.0286, 0.0288],
         [0.0287, 0.0284, 0.0286,  ..., 0.0286, 0.0286, 0.0288],
         [0.9138, 0.9148, 0.9141,  ..., 0.9142, 0.9143, 0.9135]],
        [[0.0279, 0.0265, 0.0269,  ..., 0.0263, 0.0266, 0.0266],
         [0.0279, 0.0265, 0.0269,  ..., 0.0263, 0.0266, 0.0266],
         [0.0279, 0.0265, 0.0269,  ..., 0.0263, 0.0266, 0.0266],
         [0.9162, 0.9206, 0.9194,  ..., 0.9210, 0.9203, 0.9202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.5149e-02, 2.4545e-02, 2.4280e-02,  ..., 2.6409e-02,
          2.4540e-02, 2.6299e-02],
         [2.4851e-02, 2.4545e-02, 2.4280e-02,  ..., 2.5623e-02,
          2.4540e-02, 2.5230e-02],
         [2.4851e-02, 2.4545e-02, 2.4280e-02,  ..., 2.5623e-02,
          2.4540e-02, 2.5230e-02],
         [9.2515e-01, 9.2636e-01, 9.2716e-01,  ..., 9.2235e-01,
          9.2638e-01, 9.2324e-01]],
        [[2.2842e-02, 2.2401e-02, 2.3108e-02,  ..., 2.2077e-05,
          2.3258e-02, 2.4526e-02],
         [2.2842e-02, 2.2401e-02, 2.3108e-02,  ..., 2.2077e-05,
          2.3258e-02, 2.4526e-02],
         [2.2842e-02, 2.2401e-02, 2.3108e-02,  ..., 9.9993e-01,
          2.3258e-02, 2.4526e-02],
         [9.3147e-01, 9.3280e-01, 9.3068e-01,  ..., 2.2077e-05,
          9.3023e-01, 9.2642e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:08:30,498 [Process: 0] Synchronize training processes
2024-08-16 16:08:30,498 [Process: 0] Evaluating...
2024-08-16 16:08:30,506 [Process: 0] EPOCH 172:
2024-08-16 16:08:30,508 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0275, 0.0279, 0.0277,  ..., 0.0281, 0.0274, 0.0279],
         [0.0275, 0.0279, 0.0277,  ..., 0.0281, 0.0274, 0.0279],
         [0.0275, 0.0279, 0.0277,  ..., 0.0281, 0.0274, 0.0279],
         [0.9174, 0.9163, 0.9169,  ..., 0.9157, 0.9179, 0.9163]],
        [[0.0256, 0.0252, 0.0248,  ..., 0.0567, 0.0226, 0.0242],
         [0.0256, 0.0252, 0.0248,  ..., 0.0567, 0.0226, 0.0242],
         [0.0256, 0.0252, 0.0248,  ..., 0.0567, 0.0226, 0.0242],
         [0.9233, 0.9244, 0.9257,  ..., 0.8299, 0.9322, 0.9273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.4899e-02, 2.5206e-02, 2.5519e-02,  ..., 2.4415e-02,
          2.3742e-02, 2.4832e-02],
         [2.4899e-02, 2.5206e-02, 2.5409e-02,  ..., 2.4415e-02,
          2.3742e-02, 2.4832e-02],
         [2.4899e-02, 2.5206e-02, 2.5409e-02,  ..., 2.4415e-02,
          2.3742e-02, 2.4832e-02],
         [9.2530e-01, 9.2438e-01, 9.2366e-01,  ..., 9.2676e-01,
          9.2878e-01, 9.2550e-01]],
        [[2.4070e-02, 2.4385e-02, 2.1671e-02,  ..., 8.1817e-04,
          2.3106e-02, 2.4229e-02],
         [2.4070e-02, 2.4385e-02, 2.1671e-02,  ..., 8.1817e-04,
          2.3106e-02, 2.4229e-02],
         [2.4070e-02, 2.4385e-02, 2.1671e-02,  ..., 9.9755e-01,
          2.3106e-02, 2.4229e-02],
         [9.2779e-01, 9.2685e-01, 9.3499e-01,  ..., 8.1817e-04,
          9.3068e-01, 9.2731e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:08:32,417 [Process: 0] Synchronize training processes
2024-08-16 16:08:32,418 [Process: 0] Evaluating...
2024-08-16 16:08:32,419 [Process: 0] EPOCH 173:
2024-08-16 16:08:32,421 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0268, 0.0268, 0.0264,  ..., 0.0267, 0.0269, 0.0269],
         [0.0268, 0.0268, 0.0264,  ..., 0.0267, 0.0269, 0.0269],
         [0.0268, 0.0268, 0.0264,  ..., 0.0267, 0.0269, 0.0269],
         [0.9197, 0.9195, 0.9208,  ..., 0.9198, 0.9194, 0.9193]],
        [[0.0245, 0.0251, 0.0240,  ..., 0.0851, 0.0244, 0.0253],
         [0.0245, 0.0251, 0.0240,  ..., 0.0851, 0.0244, 0.0253],
         [0.0245, 0.0251, 0.0240,  ..., 0.7446, 0.0244, 0.0253],
         [0.9264, 0.9246, 0.9281,  ..., 0.0851, 0.9269, 0.9240]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.5792e-02, 2.3913e-02, 2.3526e-02,  ..., 2.3910e-02,
          2.5751e-02, 2.4260e-02],
         [2.5403e-02, 2.3913e-02, 2.3526e-02,  ..., 2.3910e-02,
          2.5751e-02, 2.4260e-02],
         [2.5403e-02, 2.3913e-02, 2.3526e-02,  ..., 2.3910e-02,
          2.5751e-02, 2.4260e-02],
         [9.2340e-01, 9.2826e-01, 9.2942e-01,  ..., 9.2827e-01,
          9.2275e-01, 9.2722e-01]],
        [[2.2360e-02, 2.2349e-02, 2.3418e-02,  ..., 6.9114e-04,
          2.2445e-02, 2.2811e-02],
         [2.2360e-02, 2.2349e-02, 2.3418e-02,  ..., 6.9114e-04,
          2.2445e-02, 2.2811e-02],
         [2.2360e-02, 2.2349e-02, 2.3418e-02,  ..., 9.9758e-01,
          2.2445e-02, 2.2811e-02],
         [9.3292e-01, 9.3295e-01, 9.2975e-01,  ..., 1.0341e-03,
          9.3266e-01, 9.3157e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:08:34,333 [Process: 0] Synchronize training processes
2024-08-16 16:08:34,334 [Process: 0] Evaluating...
2024-08-16 16:08:34,336 [Process: 0] EPOCH 174:
2024-08-16 16:08:34,338 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0273, 0.0266, 0.0275,  ..., 0.0268, 0.0273, 0.0271],
         [0.0273, 0.0266, 0.0275,  ..., 0.0268, 0.0273, 0.0271],
         [0.0273, 0.0266, 0.0275,  ..., 0.0268, 0.0273, 0.0271],
         [0.9181, 0.9203, 0.9176,  ..., 0.9196, 0.9180, 0.9187]],
        [[0.0255, 0.0254, 0.0249,  ..., 0.0493, 0.0256, 0.0271],
         [0.0255, 0.0254, 0.0249,  ..., 0.0493, 0.0256, 0.0271],
         [0.0255, 0.0254, 0.0249,  ..., 0.0493, 0.0256, 0.0271],
         [0.9234, 0.9239, 0.9252,  ..., 0.8522, 0.9231, 0.9187]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.3815e-02, 2.4074e-02, 2.3257e-02,  ..., 2.3490e-02,
          2.3920e-02, 2.5629e-02],
         [2.3749e-02, 2.4013e-02, 2.3257e-02,  ..., 2.3490e-02,
          2.3920e-02, 2.5223e-02],
         [2.3749e-02, 2.4013e-02, 2.3257e-02,  ..., 2.3490e-02,
          2.3920e-02, 2.5223e-02],
         [9.2869e-01, 9.2790e-01, 9.3023e-01,  ..., 9.2953e-01,
          9.2824e-01, 9.2392e-01]],
        [[2.4832e-02, 2.2969e-02, 2.2618e-02,  ..., 9.7198e-05,
          2.4441e-02, 2.3878e-02],
         [2.4566e-02, 2.2969e-02, 2.2618e-02,  ..., 9.7198e-05,
          2.4441e-02, 2.3878e-02],
         [2.4566e-02, 2.2969e-02, 2.2618e-02,  ..., 9.9971e-01,
          2.4441e-02, 2.3878e-02],
         [9.2604e-01, 9.3109e-01, 9.3215e-01,  ..., 9.7198e-05,
          9.2668e-01, 9.2837e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:08:36,258 [Process: 0] Synchronize training processes
2024-08-16 16:08:36,258 [Process: 0] Evaluating...
2024-08-16 16:08:36,260 [Process: 0] EPOCH 175:
2024-08-16 16:08:36,262 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:08:38,189 [Process: 0] Synchronize training processes
2024-08-16 16:08:38,190 [Process: 0] Evaluating...
2024-08-16 16:08:38,191 [Process: 0] EPOCH 176:
2024-08-16 16:08:38,193 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0272, 0.0271, 0.0277,  ..., 0.0272, 0.0270, 0.0272],
         [0.0272, 0.0271, 0.0277,  ..., 0.0272, 0.0270, 0.0272],
         [0.0272, 0.0271, 0.0277,  ..., 0.0272, 0.0270, 0.0272],
         [0.9185, 0.9188, 0.9170,  ..., 0.9184, 0.9189, 0.9184]],
        [[0.0279, 0.0268, 0.0259,  ..., 0.0249, 0.0270, 0.0266],
         [0.0279, 0.0268, 0.0259,  ..., 0.0249, 0.0270, 0.0266],
         [0.0279, 0.0268, 0.0259,  ..., 0.0249, 0.0270, 0.0266],
         [0.9163, 0.9197, 0.9223,  ..., 0.9252, 0.9189, 0.9201]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0249, 0.0240, 0.0236,  ..., 0.0236, 0.0258, 0.0237],
         [0.0249, 0.0240, 0.0236,  ..., 0.0236, 0.0258, 0.0237],
         [0.0249, 0.0240, 0.0236,  ..., 0.0236, 0.0258, 0.0237],
         [0.9253, 0.9281, 0.9292,  ..., 0.9293, 0.9227, 0.9288]],
        [[0.0235, 0.0219, 0.0216,  ..., 0.0022, 0.0231, 0.0222],
         [0.0235, 0.0219, 0.0216,  ..., 0.0022, 0.0231, 0.0222],
         [0.0235, 0.0219, 0.0216,  ..., 0.9933, 0.0231, 0.0222],
         [0.9295, 0.9344, 0.9353,  ..., 0.0022, 0.9306, 0.9334]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:08:40,156 [Process: 0] Synchronize training processes
2024-08-16 16:08:40,157 [Process: 0] Evaluating...
2024-08-16 16:08:40,159 [Process: 0] EPOCH 177:
2024-08-16 16:08:40,161 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0273, 0.0269],
         [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0273, 0.0269],
         [0.0268, 0.0268, 0.0268,  ..., 0.0268, 0.0273, 0.0269],
         [0.9196, 0.9195, 0.9196,  ..., 0.9195, 0.9182, 0.9192]],
        [[0.0278, 0.0289, 0.0283,  ..., 0.0239, 0.0290, 0.0260],
         [0.0278, 0.0289, 0.0283,  ..., 0.0239, 0.0290, 0.0260],
         [0.0278, 0.0289, 0.0283,  ..., 0.0239, 0.0290, 0.0260],
         [0.9166, 0.9133, 0.9150,  ..., 0.9282, 0.9130, 0.9219]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0243, 0.0246, 0.0241,  ..., 0.0237, 0.0224, 0.0225],
         [0.0243, 0.0246, 0.0241,  ..., 0.0237, 0.0224, 0.0225],
         [0.0243, 0.0246, 0.0241,  ..., 0.0237, 0.0224, 0.0225],
         [0.9271, 0.9261, 0.9277,  ..., 0.9290, 0.9327, 0.9325]],
        [[0.0218, 0.0210, 0.0215,  ..., 0.0073, 0.0233, 0.0216],
         [0.0218, 0.0210, 0.0215,  ..., 0.0073, 0.0233, 0.0216],
         [0.0218, 0.0210, 0.0215,  ..., 0.9780, 0.0233, 0.0216],
         [0.9346, 0.9369, 0.9356,  ..., 0.0073, 0.9301, 0.9353]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:08:42,097 [Process: 0] Synchronize training processes
2024-08-16 16:08:42,097 [Process: 0] Evaluating...
2024-08-16 16:08:42,099 [Process: 0] EPOCH 178:
2024-08-16 16:08:42,101 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0261, 0.0264, 0.0266,  ..., 0.0270, 0.0267, 0.0268],
         [0.0261, 0.0264, 0.0266,  ..., 0.0270, 0.0267, 0.0268],
         [0.0261, 0.0264, 0.0266,  ..., 0.0270, 0.0267, 0.0268],
         [0.9217, 0.9209, 0.9203,  ..., 0.9191, 0.9200, 0.9196]],
        [[0.0285, 0.0282, 0.0280,  ..., 0.0258, 0.0253, 0.0254],
         [0.0285, 0.0282, 0.0280,  ..., 0.0258, 0.0253, 0.0254],
         [0.0285, 0.0282, 0.0280,  ..., 0.0258, 0.0253, 0.0254],
         [0.9144, 0.9154, 0.9161,  ..., 0.9226, 0.9241, 0.9238]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0231, 0.0233, 0.0239,  ..., 0.0232, 0.0231, 0.0232],
         [0.0231, 0.0233, 0.0239,  ..., 0.0232, 0.0231, 0.0232],
         [0.0231, 0.0233, 0.0239,  ..., 0.0232, 0.0231, 0.0232],
         [0.9306, 0.9301, 0.9283,  ..., 0.9304, 0.9306, 0.9304]],
        [[0.0227, 0.0231, 0.0220,  ..., 0.0039, 0.0224, 0.0229],
         [0.0227, 0.0231, 0.0220,  ..., 0.0039, 0.0224, 0.0229],
         [0.0227, 0.0231, 0.0220,  ..., 0.9884, 0.0224, 0.0229],
         [0.9319, 0.9308, 0.9340,  ..., 0.0039, 0.9329, 0.9314]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0265, 0.0268, 0.0259,  ..., 0.0268, 0.0270, 0.0269],
         [0.0265, 0.0268, 0.0259,  ..., 0.0268, 0.0270, 0.0269],
         [0.0265, 0.0268, 0.0259,  ..., 0.0268, 0.0270, 0.0269],
         [0.9204, 0.9196, 0.9222,  ..., 0.9197, 0.9190, 0.9193]],
        [[0.0259, 0.0268, 0.0263,  ..., 0.0265, 0.0258, 0.0262],
         [0.0259, 0.0268, 0.0263,  ..., 0.0265, 0.0258, 0.0262],
         [0.0259, 0.0268, 0.0263,  ..., 0.0265, 0.0258, 0.0262],
         [0.9224, 0.9197, 0.9212,  ..., 0.9204, 0.9226, 0.9215]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:08:44,019 [Process: 0] Synchronize training processes
2024-08-16 16:08:44,019 [Process: 0] Evaluating...
2024-08-16 16:08:44,021 [Process: 0] EPOCH 179:
2024-08-16 16:08:44,023 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.2489e-02, 2.2158e-02, 2.2197e-02,  ..., 2.2838e-02,
          2.2712e-02, 2.1723e-02],
         [2.2489e-02, 2.2158e-02, 2.2197e-02,  ..., 2.2838e-02,
          2.2712e-02, 2.1723e-02],
         [2.2489e-02, 2.2158e-02, 2.2197e-02,  ..., 2.2838e-02,
          2.2712e-02, 2.1723e-02],
         [9.3253e-01, 9.3353e-01, 9.3341e-01,  ..., 9.3149e-01,
          9.3187e-01, 9.3483e-01]],
        [[2.2233e-02, 2.2372e-02, 2.1278e-02,  ..., 5.6001e-04,
          2.2971e-02, 2.1613e-02],
         [2.2233e-02, 2.2372e-02, 2.1278e-02,  ..., 5.6001e-04,
          2.2971e-02, 2.1613e-02],
         [2.2233e-02, 2.2372e-02, 2.1278e-02,  ..., 9.9832e-01,
          2.2971e-02, 2.1613e-02],
         [9.3330e-01, 9.3288e-01, 9.3616e-01,  ..., 5.6001e-04,
          9.3109e-01, 9.3516e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0267, 0.0267, 0.0266,  ..., 0.0266, 0.0277, 0.0269],
         [0.0267, 0.0267, 0.0266,  ..., 0.0266, 0.0277, 0.0269],
         [0.0267, 0.0267, 0.0266,  ..., 0.0266, 0.0277, 0.0269],
         [0.9199, 0.9199, 0.9202,  ..., 0.9203, 0.9169, 0.9194]],
        [[0.0261, 0.0251, 0.0264,  ..., 0.0262, 0.0259, 0.0239],
         [0.0261, 0.0251, 0.0264,  ..., 0.0262, 0.0259, 0.0239],
         [0.0261, 0.0251, 0.0264,  ..., 0.0262, 0.0259, 0.0239],
         [0.9218, 0.9246, 0.9209,  ..., 0.9214, 0.9223, 0.9282]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:08:45,983 [Process: 0] Synchronize training processes
2024-08-16 16:08:45,983 [Process: 0] Evaluating...
2024-08-16 16:08:45,985 [Process: 0] EPOCH 180:
2024-08-16 16:08:45,987 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.1203e-02, 2.1713e-02, 2.2331e-02,  ..., 2.2589e-02,
          2.3318e-02, 2.1390e-02],
         [2.1203e-02, 2.1713e-02, 2.2331e-02,  ..., 2.2589e-02,
          2.3318e-02, 2.1390e-02],
         [2.1203e-02, 2.1713e-02, 2.2331e-02,  ..., 2.2589e-02,
          2.3318e-02, 2.1390e-02],
         [9.3639e-01, 9.3486e-01, 9.3301e-01,  ..., 9.3223e-01,
          9.3005e-01, 9.3583e-01]],
        [[2.2572e-02, 2.1799e-02, 2.1510e-02,  ..., 1.7737e-04,
          2.2620e-02, 2.3740e-02],
         [2.2572e-02, 2.1799e-02, 2.1510e-02,  ..., 1.7737e-04,
          2.2620e-02, 2.3740e-02],
         [2.2572e-02, 2.1799e-02, 2.1510e-02,  ..., 9.9947e-01,
          2.2620e-02, 2.3740e-02],
         [9.3228e-01, 9.3460e-01, 9.3547e-01,  ..., 1.7737e-04,
          9.3214e-01, 9.2878e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0271, 0.0273, 0.0267,  ..., 0.0268, 0.0261, 0.0270],
         [0.0271, 0.0273, 0.0267,  ..., 0.0268, 0.0261, 0.0270],
         [0.0271, 0.0273, 0.0267,  ..., 0.0268, 0.0261, 0.0270],
         [0.9188, 0.9181, 0.9198,  ..., 0.9195, 0.9218, 0.9190]],
        [[0.0262, 0.0254, 0.0257,  ..., 0.0244, 0.0263, 0.0236],
         [0.0262, 0.0254, 0.0257,  ..., 0.0244, 0.0263, 0.0236],
         [0.0262, 0.0254, 0.0257,  ..., 0.0244, 0.0263, 0.0236],
         [0.9214, 0.9239, 0.9229,  ..., 0.9267, 0.9211, 0.9291]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:08:47,905 [Process: 0] Synchronize training processes
2024-08-16 16:08:47,906 [Process: 0] Evaluating...
2024-08-16 16:08:47,908 [Process: 0] EPOCH 181:
2024-08-16 16:08:47,910 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.1453e-02, 2.2291e-02, 2.0593e-02,  ..., 1.9865e-02,
          2.2544e-02, 2.1142e-02],
         [2.1453e-02, 2.2291e-02, 2.0593e-02,  ..., 1.9865e-02,
          2.2544e-02, 2.1142e-02],
         [2.1453e-02, 2.2291e-02, 2.0593e-02,  ..., 1.9865e-02,
          2.2544e-02, 2.1142e-02],
         [9.3564e-01, 9.3313e-01, 9.3822e-01,  ..., 9.4041e-01,
          9.3237e-01, 9.3657e-01]],
        [[2.3402e-02, 2.1585e-02, 2.1398e-02,  ..., 8.9857e-05,
          1.9676e-02, 2.0689e-02],
         [2.3402e-02, 2.1585e-02, 2.1398e-02,  ..., 8.9857e-05,
          1.9676e-02, 2.0689e-02],
         [2.3402e-02, 2.1585e-02, 2.1398e-02,  ..., 9.9973e-01,
          1.9676e-02, 2.0689e-02],
         [9.2979e-01, 9.3525e-01, 9.3581e-01,  ..., 8.9857e-05,
          9.4097e-01, 9.3793e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:08:49,826 [Process: 0] Synchronize training processes
2024-08-16 16:08:49,826 [Process: 0] Evaluating...
2024-08-16 16:08:49,834 [Process: 0] EPOCH 182:
2024-08-16 16:08:49,836 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0267, 0.0262, 0.0254,  ..., 0.0276, 0.0271, 0.0270],
         [0.0267, 0.0262, 0.0254,  ..., 0.0276, 0.0271, 0.0270],
         [0.0267, 0.0262, 0.0254,  ..., 0.0276, 0.0271, 0.0270],
         [0.9198, 0.9213, 0.9237,  ..., 0.9171, 0.9186, 0.9189]],
        [[0.0249, 0.0264, 0.0257,  ..., 0.0238, 0.0248, 0.0253],
         [0.0249, 0.0264, 0.0257,  ..., 0.0238, 0.0248, 0.0253],
         [0.0249, 0.0264, 0.0257,  ..., 0.0238, 0.0248, 0.0253],
         [0.9252, 0.9209, 0.9229,  ..., 0.9286, 0.9257, 0.9241]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0221, 0.0201, 0.0229,  ..., 0.0205, 0.0224, 0.0214],
         [0.0221, 0.0201, 0.0229,  ..., 0.0205, 0.0224, 0.0214],
         [0.0221, 0.0201, 0.0229,  ..., 0.0205, 0.0224, 0.0214],
         [0.9336, 0.9396, 0.9314,  ..., 0.9386, 0.9329, 0.9357]],
        [[0.0218, 0.0207, 0.0225,  ..., 0.0011, 0.0213, 0.0205],
         [0.0218, 0.0207, 0.0225,  ..., 0.0011, 0.0213, 0.0205],
         [0.0218, 0.0207, 0.0225,  ..., 0.9968, 0.0213, 0.0205],
         [0.9346, 0.9379, 0.9325,  ..., 0.0011, 0.9362, 0.9386]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:08:51,747 [Process: 0] Synchronize training processes
2024-08-16 16:08:51,747 [Process: 0] Evaluating...
2024-08-16 16:08:51,749 [Process: 0] EPOCH 183:
2024-08-16 16:08:51,751 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0260, 0.0258, 0.0263,  ..., 0.0252, 0.0264, 0.0266],
         [0.0260, 0.0258, 0.0263,  ..., 0.0252, 0.0264, 0.0266],
         [0.0260, 0.0258, 0.0263,  ..., 0.0252, 0.0264, 0.0266],
         [0.9221, 0.9225, 0.9212,  ..., 0.9244, 0.9209, 0.9203]],
        [[0.0245, 0.0260, 0.0247,  ..., 0.0247, 0.0239, 0.0252],
         [0.0245, 0.0260, 0.0247,  ..., 0.0247, 0.0239, 0.0252],
         [0.0245, 0.0260, 0.0247,  ..., 0.0247, 0.0239, 0.0252],
         [0.9266, 0.9220, 0.9259,  ..., 0.9260, 0.9284, 0.9243]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.1009e-02, 2.0546e-02, 2.1826e-02,  ..., 2.1309e-02,
          2.1893e-02, 1.9822e-02],
         [2.1009e-02, 2.0546e-02, 2.1826e-02,  ..., 2.1309e-02,
          2.1893e-02, 1.9822e-02],
         [2.1009e-02, 2.0546e-02, 2.1826e-02,  ..., 2.1309e-02,
          2.1893e-02, 1.9822e-02],
         [9.3697e-01, 9.3836e-01, 9.3452e-01,  ..., 9.3607e-01,
          9.3432e-01, 9.4053e-01]],
        [[2.1312e-02, 2.1370e-02, 2.0516e-02,  ..., 4.5875e-04,
          2.1076e-02, 2.1548e-02],
         [2.1312e-02, 2.1370e-02, 2.0516e-02,  ..., 4.5875e-04,
          2.1076e-02, 2.1548e-02],
         [2.1312e-02, 2.1370e-02, 2.0516e-02,  ..., 9.9862e-01,
          2.1076e-02, 2.1548e-02],
         [9.3606e-01, 9.3589e-01, 9.3845e-01,  ..., 4.5875e-04,
          9.3677e-01, 9.3535e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:08:53,661 [Process: 0] Synchronize training processes
2024-08-16 16:08:53,661 [Process: 0] Evaluating...
2024-08-16 16:08:53,663 [Process: 0] EPOCH 184:
2024-08-16 16:08:53,665 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0265, 0.0255, 0.0258,  ..., 0.0255, 0.0259, 0.0266],
         [0.0265, 0.0255, 0.0258,  ..., 0.0255, 0.0259, 0.0266],
         [0.0265, 0.0255, 0.0258,  ..., 0.0255, 0.0259, 0.0266],
         [0.9205, 0.9234, 0.9225,  ..., 0.9235, 0.9224, 0.9202]],
        [[0.0239, 0.0252, 0.0248,  ..., 0.0247, 0.0239, 0.0245],
         [0.0239, 0.0252, 0.0248,  ..., 0.0247, 0.0239, 0.0245],
         [0.0239, 0.0252, 0.0248,  ..., 0.0247, 0.0239, 0.0245],
         [0.9282, 0.9245, 0.9255,  ..., 0.9259, 0.9283, 0.9264]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.1317e-02, 2.1915e-02, 2.0695e-02,  ..., 2.0488e-02,
          2.2119e-02, 2.2906e-02],
         [2.1317e-02, 2.1915e-02, 2.0695e-02,  ..., 2.0488e-02,
          2.2119e-02, 2.2906e-02],
         [2.1317e-02, 2.1915e-02, 2.0695e-02,  ..., 2.0488e-02,
          2.2119e-02, 2.2906e-02],
         [9.3605e-01, 9.3426e-01, 9.3792e-01,  ..., 9.3854e-01,
          9.3364e-01, 9.3128e-01]],
        [[2.1220e-02, 1.9872e-02, 2.0615e-02,  ..., 8.9506e-04,
          2.1636e-02, 2.0489e-02],
         [2.1220e-02, 1.9872e-02, 2.0615e-02,  ..., 8.9506e-04,
          2.1636e-02, 2.0489e-02],
         [2.1220e-02, 1.9872e-02, 2.0615e-02,  ..., 9.9731e-01,
          2.1636e-02, 2.0489e-02],
         [9.3634e-01, 9.4038e-01, 9.3815e-01,  ..., 8.9506e-04,
          9.3509e-01, 9.3853e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:08:55,669 [Process: 0] Synchronize training processes
2024-08-16 16:08:55,669 [Process: 0] Evaluating...
2024-08-16 16:08:55,671 [Process: 0] EPOCH 185:
2024-08-16 16:08:55,673 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0252, 0.0261, 0.0256,  ..., 0.0258, 0.0257, 0.0258],
         [0.0252, 0.0261, 0.0256,  ..., 0.0258, 0.0257, 0.0258],
         [0.0252, 0.0261, 0.0256,  ..., 0.0258, 0.0257, 0.0258],
         [0.9245, 0.9217, 0.9233,  ..., 0.9225, 0.9229, 0.9226]],
        [[0.0247, 0.0233, 0.0244,  ..., 0.0262, 0.0239, 0.0233],
         [0.0247, 0.0233, 0.0244,  ..., 0.0262, 0.0239, 0.0233],
         [0.0247, 0.0233, 0.0244,  ..., 0.0262, 0.0239, 0.0233],
         [0.9259, 0.9302, 0.9269,  ..., 0.9213, 0.9283, 0.9302]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.1327e-02, 2.2056e-02, 2.0717e-02,  ..., 2.1472e-02,
          2.1124e-02, 2.1502e-02],
         [2.1327e-02, 2.2056e-02, 2.0717e-02,  ..., 2.1472e-02,
          2.1124e-02, 2.1502e-02],
         [2.1327e-02, 2.2056e-02, 2.0717e-02,  ..., 2.1472e-02,
          2.1124e-02, 2.1502e-02],
         [9.3602e-01, 9.3383e-01, 9.3785e-01,  ..., 9.3558e-01,
          9.3663e-01, 9.3549e-01]],
        [[2.1316e-02, 2.1838e-02, 1.9742e-02,  ..., 6.0926e-04,
          2.1502e-02, 2.0561e-02],
         [2.1316e-02, 2.1838e-02, 1.9742e-02,  ..., 6.0926e-04,
          2.1502e-02, 2.0561e-02],
         [2.1316e-02, 2.1838e-02, 1.9742e-02,  ..., 9.9817e-01,
          2.1502e-02, 2.0561e-02],
         [9.3605e-01, 9.3449e-01, 9.4077e-01,  ..., 6.0926e-04,
          9.3549e-01, 9.3832e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:08:57,686 [Process: 0] Synchronize training processes
2024-08-16 16:08:57,687 [Process: 0] Evaluating...
2024-08-16 16:08:57,689 [Process: 0] EPOCH 186:
2024-08-16 16:08:57,691 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0264, 0.0251, 0.0247,  ..., 0.0249, 0.0255, 0.0253],
         [0.0264, 0.0251, 0.0247,  ..., 0.0249, 0.0255, 0.0253],
         [0.0264, 0.0251, 0.0247,  ..., 0.0249, 0.0255, 0.0253],
         [0.9207, 0.9246, 0.9258,  ..., 0.9254, 0.9234, 0.9241]],
        [[0.0238, 0.0239, 0.0233,  ..., 0.0263, 0.0234, 0.0236],
         [0.0238, 0.0239, 0.0233,  ..., 0.0263, 0.0234, 0.0236],
         [0.0238, 0.0239, 0.0233,  ..., 0.0263, 0.0234, 0.0236],
         [0.9285, 0.9283, 0.9301,  ..., 0.9212, 0.9298, 0.9291]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0218, 0.0205, 0.0209,  ..., 0.0208, 0.0226, 0.0189],
         [0.0218, 0.0205, 0.0209,  ..., 0.0208, 0.0226, 0.0189],
         [0.0218, 0.0205, 0.0209,  ..., 0.0208, 0.0226, 0.0189],
         [0.9346, 0.9385, 0.9374,  ..., 0.9377, 0.9323, 0.9433]],
        [[0.0213, 0.0189, 0.0204,  ..., 0.0057, 0.0191, 0.0214],
         [0.0213, 0.0189, 0.0204,  ..., 0.0057, 0.0191, 0.0214],
         [0.0213, 0.0189, 0.0204,  ..., 0.9830, 0.0191, 0.0214],
         [0.9362, 0.9432, 0.9389,  ..., 0.0057, 0.9426, 0.9357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
2024-08-16 16:08:59,775 [Process: 0] Synchronize training processes
2024-08-16 16:08:59,775 [Process: 0] Evaluating...
2024-08-16 16:08:59,777 [Process: 0] EPOCH 187:
2024-08-16 16:08:59,779 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0245, 0.0248, 0.0246,  ..., 0.0246, 0.0252, 0.0244],
         [0.0245, 0.0248, 0.0246,  ..., 0.0246, 0.0252, 0.0244],
         [0.0245, 0.0248, 0.0246,  ..., 0.0246, 0.0252, 0.0244],
         [0.9266, 0.9257, 0.9263,  ..., 0.9262, 0.9243, 0.9269]],
        [[0.0239, 0.0236, 0.0231,  ..., 0.0242, 0.0237, 0.0226],
         [0.0239, 0.0236, 0.0231,  ..., 0.0242, 0.0237, 0.0226],
         [0.0239, 0.0236, 0.0231,  ..., 0.0242, 0.0237, 0.0226],
         [0.9284, 0.9293, 0.9307,  ..., 0.9273, 0.9289, 0.9321]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0205, 0.0206, 0.0219,  ..., 0.0207, 0.0220, 0.0211],
         [0.0205, 0.0206, 0.0219,  ..., 0.0207, 0.0220, 0.0211],
         [0.0205, 0.0206, 0.0219,  ..., 0.0207, 0.0220, 0.0211],
         [0.9385, 0.9383, 0.9343,  ..., 0.9378, 0.9340, 0.9368]],
        [[0.0205, 0.0217, 0.0212,  ..., 0.0031, 0.0214, 0.0204],
         [0.0205, 0.0217, 0.0212,  ..., 0.0031, 0.0214, 0.0204],
         [0.0205, 0.0217, 0.0212,  ..., 0.9908, 0.0214, 0.0204],
         [0.9386, 0.9350, 0.9363,  ..., 0.0031, 0.9358, 0.9387]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:01,800 [Process: 0] Synchronize training processes
2024-08-16 16:09:01,801 [Process: 0] Evaluating...
2024-08-16 16:09:01,803 [Process: 0] EPOCH 188:
2024-08-16 16:09:01,805 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0239, 0.0237, 0.0242,  ..., 0.0243, 0.0250, 0.0243],
         [0.0239, 0.0237, 0.0242,  ..., 0.0243, 0.0250, 0.0243],
         [0.0239, 0.0237, 0.0242,  ..., 0.0243, 0.0250, 0.0243],
         [0.9283, 0.9290, 0.9274,  ..., 0.9271, 0.9251, 0.9270]],
        [[0.0236, 0.0235, 0.0225,  ..., 0.0249, 0.0220, 0.0225],
         [0.0236, 0.0235, 0.0225,  ..., 0.0249, 0.0220, 0.0225],
         [0.0236, 0.0235, 0.0225,  ..., 0.0249, 0.0220, 0.0225],
         [0.9292, 0.9296, 0.9324,  ..., 0.9253, 0.9339, 0.9324]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0206, 0.0204, 0.0200,  ..., 0.0207, 0.0206, 0.0198],
         [0.0206, 0.0204, 0.0200,  ..., 0.0207, 0.0206, 0.0198],
         [0.0206, 0.0204, 0.0200,  ..., 0.0207, 0.0206, 0.0198],
         [0.9381, 0.9388, 0.9399,  ..., 0.9380, 0.9381, 0.9407]],
        [[0.0208, 0.0191, 0.0204,  ..., 0.0083, 0.0208, 0.0206],
         [0.0208, 0.0191, 0.0204,  ..., 0.0083, 0.0208, 0.0206],
         [0.0208, 0.0191, 0.0204,  ..., 0.9751, 0.0208, 0.0206],
         [0.9375, 0.9428, 0.9387,  ..., 0.0083, 0.9375, 0.9382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:03,834 [Process: 0] Synchronize training processes
2024-08-16 16:09:03,834 [Process: 0] Evaluating...
2024-08-16 16:09:03,836 [Process: 0] EPOCH 189:
2024-08-16 16:09:03,838 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0245, 0.0243, 0.0229,  ..., 0.0236, 0.0241, 0.0245],
         [0.0245, 0.0243, 0.0229,  ..., 0.0236, 0.0241, 0.0245],
         [0.0245, 0.0243, 0.0229,  ..., 0.0236, 0.0241, 0.0245],
         [0.9265, 0.9272, 0.9314,  ..., 0.9292, 0.9276, 0.9266]],
        [[0.0219, 0.0231, 0.0231,  ..., 0.0238, 0.0208, 0.0214],
         [0.0219, 0.0231, 0.0231,  ..., 0.0238, 0.0208, 0.0214],
         [0.0219, 0.0231, 0.0231,  ..., 0.0238, 0.0208, 0.0214],
         [0.9343, 0.9306, 0.9307,  ..., 0.9287, 0.9376, 0.9357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0199, 0.0196, 0.0201,  ..., 0.0208, 0.0211, 0.0206],
         [0.0199, 0.0196, 0.0201,  ..., 0.0208, 0.0211, 0.0206],
         [0.0199, 0.0196, 0.0201,  ..., 0.0208, 0.0211, 0.0206],
         [0.9404, 0.9412, 0.9397,  ..., 0.9375, 0.9367, 0.9382]],
        [[0.0193, 0.0187, 0.0198,  ..., 0.0014, 0.0213, 0.0205],
         [0.0193, 0.0187, 0.0198,  ..., 0.0014, 0.0213, 0.0205],
         [0.0193, 0.0187, 0.0198,  ..., 0.9957, 0.0213, 0.0205],
         [0.9420, 0.9438, 0.9407,  ..., 0.0014, 0.9360, 0.9384]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:05,836 [Process: 0] Synchronize training processes
2024-08-16 16:09:05,836 [Process: 0] Evaluating...
2024-08-16 16:09:05,838 [Process: 0] EPOCH 190:
2024-08-16 16:09:05,840 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0231, 0.0240, 0.0242,  ..., 0.0235, 0.0235, 0.0240],
         [0.0231, 0.0240, 0.0242,  ..., 0.0235, 0.0235, 0.0240],
         [0.0231, 0.0240, 0.0242,  ..., 0.0235, 0.0235, 0.0240],
         [0.9306, 0.9281, 0.9275,  ..., 0.9295, 0.9296, 0.9280]],
        [[0.0224, 0.0231, 0.0218,  ..., 0.0215, 0.0215, 0.0220],
         [0.0224, 0.0231, 0.0218,  ..., 0.0215, 0.0215, 0.0220],
         [0.0224, 0.0231, 0.0218,  ..., 0.0215, 0.0215, 0.0220],
         [0.9327, 0.9307, 0.9346,  ..., 0.9356, 0.9354, 0.9341]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.9249e-02, 2.1199e-02, 1.9549e-02,  ..., 2.2139e-02,
          1.9033e-02, 2.0008e-02],
         [1.9249e-02, 2.1199e-02, 1.9549e-02,  ..., 2.2139e-02,
          1.9033e-02, 2.0008e-02],
         [1.9249e-02, 2.1199e-02, 1.9549e-02,  ..., 2.2139e-02,
          1.9033e-02, 2.0008e-02],
         [9.4225e-01, 9.3640e-01, 9.4135e-01,  ..., 9.3358e-01,
          9.4290e-01, 9.3998e-01]],
        [[2.1403e-02, 2.0939e-02, 1.9543e-02,  ..., 2.5625e-04,
          2.0817e-02, 2.0741e-02],
         [2.1403e-02, 2.0939e-02, 1.9543e-02,  ..., 2.5625e-04,
          2.0817e-02, 2.0741e-02],
         [2.1403e-02, 2.0939e-02, 1.9543e-02,  ..., 9.9923e-01,
          2.0817e-02, 2.0741e-02],
         [9.3579e-01, 9.3718e-01, 9.4137e-01,  ..., 2.5625e-04,
          9.3755e-01, 9.3778e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:07,851 [Process: 0] Synchronize training processes
2024-08-16 16:09:07,851 [Process: 0] Evaluating...
2024-08-16 16:09:07,853 [Process: 0] EPOCH 191:
2024-08-16 16:09:07,855 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0237, 0.0238, 0.0235,  ..., 0.0227, 0.0236, 0.0227],
         [0.0237, 0.0238, 0.0235,  ..., 0.0227, 0.0236, 0.0227],
         [0.0237, 0.0238, 0.0235,  ..., 0.0227, 0.0236, 0.0227],
         [0.9289, 0.9287, 0.9296,  ..., 0.9318, 0.9293, 0.9318]],
        [[0.0221, 0.0219, 0.0232,  ..., 0.0204, 0.0224, 0.0217],
         [0.0221, 0.0219, 0.0232,  ..., 0.0204, 0.0224, 0.0217],
         [0.0221, 0.0219, 0.0232,  ..., 0.0204, 0.0224, 0.0217],
         [0.9337, 0.9343, 0.9303,  ..., 0.9387, 0.9327, 0.9348]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0190, 0.0187, 0.0196,  ..., 0.0193, 0.0180, 0.0197],
         [0.0190, 0.0187, 0.0196,  ..., 0.0193, 0.0180, 0.0197],
         [0.0190, 0.0187, 0.0196,  ..., 0.0193, 0.0180, 0.0197],
         [0.9431, 0.9438, 0.9413,  ..., 0.9420, 0.9460, 0.9410]],
        [[0.0197, 0.0198, 0.0201,  ..., 0.0014, 0.0198, 0.0203],
         [0.0197, 0.0198, 0.0201,  ..., 0.0014, 0.0198, 0.0203],
         [0.0197, 0.0198, 0.0201,  ..., 0.9959, 0.0198, 0.0203],
         [0.9410, 0.9407, 0.9397,  ..., 0.0014, 0.9407, 0.9390]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:09,859 [Process: 0] Synchronize training processes
2024-08-16 16:09:09,859 [Process: 0] Evaluating...
2024-08-16 16:09:09,867 [Process: 0] EPOCH 192:
2024-08-16 16:09:09,869 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0236, 0.0235, 0.0233,  ..., 0.0238, 0.0221, 0.0230],
         [0.0236, 0.0235, 0.0233,  ..., 0.0238, 0.0221, 0.0230],
         [0.0236, 0.0235, 0.0233,  ..., 0.0238, 0.0221, 0.0230],
         [0.9292, 0.9295, 0.9300,  ..., 0.9287, 0.9338, 0.9309]],
        [[0.0223, 0.0218, 0.0243,  ..., 0.0234, 0.0235, 0.0226],
         [0.0223, 0.0218, 0.0243,  ..., 0.0234, 0.0235, 0.0226],
         [0.0223, 0.0218, 0.0243,  ..., 0.0234, 0.0235, 0.0226],
         [0.9332, 0.9347, 0.9272,  ..., 0.9298, 0.9295, 0.9321]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0205, 0.0195, 0.0197,  ..., 0.0195, 0.0211, 0.0199],
         [0.0205, 0.0195, 0.0197,  ..., 0.0195, 0.0211, 0.0199],
         [0.0205, 0.0195, 0.0197,  ..., 0.0195, 0.0211, 0.0199],
         [0.9384, 0.9414, 0.9409,  ..., 0.9415, 0.9366, 0.9402]],
        [[0.0205, 0.0198, 0.0194,  ..., 0.0044, 0.0188, 0.0195],
         [0.0205, 0.0198, 0.0194,  ..., 0.0044, 0.0188, 0.0195],
         [0.0205, 0.0198, 0.0194,  ..., 0.9868, 0.0188, 0.0195],
         [0.9386, 0.9405, 0.9418,  ..., 0.0044, 0.9437, 0.9416]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:11,925 [Process: 0] Synchronize training processes
2024-08-16 16:09:11,925 [Process: 0] Evaluating...
2024-08-16 16:09:11,927 [Process: 0] EPOCH 193:
2024-08-16 16:09:11,930 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0209, 0.0218, 0.0217,  ..., 0.0215, 0.0210, 0.0216],
         [0.0209, 0.0218, 0.0217,  ..., 0.0215, 0.0210, 0.0216],
         [0.0209, 0.0218, 0.0217,  ..., 0.0215, 0.0210, 0.0216],
         [0.9373, 0.9346, 0.9350,  ..., 0.9354, 0.9370, 0.9352]],
        [[0.0211, 0.0217, 0.0202,  ..., 0.0205, 0.0197, 0.0194],
         [0.0211, 0.0217, 0.0202,  ..., 0.0205, 0.0197, 0.0194],
         [0.0211, 0.0217, 0.0202,  ..., 0.0205, 0.0197, 0.0194],
         [0.9367, 0.9350, 0.9395,  ..., 0.9384, 0.9410, 0.9417]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0192, 0.0199, 0.0204,  ..., 0.0191, 0.0194, 0.0190],
         [0.0192, 0.0199, 0.0204,  ..., 0.0191, 0.0194, 0.0190],
         [0.0192, 0.0199, 0.0204,  ..., 0.0191, 0.0194, 0.0190],
         [0.9424, 0.9403, 0.9387,  ..., 0.9427, 0.9417, 0.9429]],
        [[0.0188, 0.0203, 0.0213,  ..., 0.0057, 0.0197, 0.0199],
         [0.0188, 0.0203, 0.0213,  ..., 0.0057, 0.0197, 0.0199],
         [0.0188, 0.0203, 0.0213,  ..., 0.9830, 0.0197, 0.0199],
         [0.9437, 0.9390, 0.9361,  ..., 0.0057, 0.9408, 0.9403]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:13,959 [Process: 0] Synchronize training processes
2024-08-16 16:09:13,959 [Process: 0] Evaluating...
2024-08-16 16:09:13,961 [Process: 0] EPOCH 194:
2024-08-16 16:09:13,963 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0235, 0.0234, 0.0226,  ..., 0.0233, 0.0237, 0.0237],
         [0.0235, 0.0234, 0.0226,  ..., 0.0233, 0.0237, 0.0237],
         [0.0235, 0.0234, 0.0226,  ..., 0.0233, 0.0237, 0.0237],
         [0.9296, 0.9298, 0.9321,  ..., 0.9300, 0.9288, 0.9290]],
        [[0.0249, 0.0247, 0.0238,  ..., 0.0228, 0.0214, 0.0218],
         [0.0249, 0.0247, 0.0238,  ..., 0.0228, 0.0214, 0.0218],
         [0.0249, 0.0247, 0.0238,  ..., 0.0228, 0.0214, 0.0218],
         [0.9252, 0.9260, 0.9287,  ..., 0.9315, 0.9357, 0.9346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.9007e-02, 1.7515e-02, 1.9676e-02,  ..., 1.9903e-02,
          2.0013e-02, 1.8002e-02],
         [1.9007e-02, 1.7515e-02, 1.9676e-02,  ..., 1.9903e-02,
          2.0013e-02, 1.8002e-02],
         [1.9007e-02, 1.7515e-02, 1.9676e-02,  ..., 1.9903e-02,
          2.0013e-02, 1.8002e-02],
         [9.4298e-01, 9.4745e-01, 9.4097e-01,  ..., 9.4029e-01,
          9.3996e-01, 9.4599e-01]],
        [[1.8359e-02, 1.9084e-02, 1.8852e-02,  ..., 3.0444e-04,
          1.9866e-02, 2.0659e-02],
         [1.8359e-02, 1.9084e-02, 1.8852e-02,  ..., 3.0444e-04,
          1.9866e-02, 2.0659e-02],
         [1.8359e-02, 1.9084e-02, 1.8852e-02,  ..., 9.9909e-01,
          1.9866e-02, 2.0659e-02],
         [9.4492e-01, 9.4275e-01, 9.4345e-01,  ..., 3.0444e-04,
          9.4040e-01, 9.3802e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:15,979 [Process: 0] Synchronize training processes
2024-08-16 16:09:15,979 [Process: 0] Evaluating...
2024-08-16 16:09:15,981 [Process: 0] EPOCH 195:
2024-08-16 16:09:15,983 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0234, 0.0226, 0.0228,  ..., 0.0229, 0.0225, 0.0226],
         [0.0234, 0.0226, 0.0228,  ..., 0.0229, 0.0225, 0.0226],
         [0.0234, 0.0226, 0.0228,  ..., 0.0229, 0.0225, 0.0226],
         [0.9298, 0.9321, 0.9317,  ..., 0.9312, 0.9324, 0.9322]],
        [[0.0253, 0.0243, 0.0250,  ..., 0.0215, 0.0229, 0.0227],
         [0.0253, 0.0243, 0.0250,  ..., 0.0215, 0.0229, 0.0227],
         [0.0253, 0.0243, 0.0250,  ..., 0.0215, 0.0229, 0.0227],
         [0.9240, 0.9272, 0.9250,  ..., 0.9354, 0.9312, 0.9318]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0418e-02, 1.8914e-02, 1.7822e-02,  ..., 1.9212e-02,
          1.9604e-02, 1.8957e-02],
         [2.0418e-02, 1.8914e-02, 1.7822e-02,  ..., 1.9212e-02,
          1.9604e-02, 1.8957e-02],
         [2.0418e-02, 1.8914e-02, 1.7822e-02,  ..., 1.9212e-02,
          1.9604e-02, 1.8957e-02],
         [9.3874e-01, 9.4326e-01, 9.4653e-01,  ..., 9.4236e-01,
          9.4119e-01, 9.4313e-01]],
        [[1.8570e-02, 1.8586e-02, 1.8620e-02,  ..., 7.2458e-04,
          2.0633e-02, 1.8144e-02],
         [1.8570e-02, 1.8586e-02, 1.8620e-02,  ..., 7.2458e-04,
          2.0633e-02, 1.8144e-02],
         [1.8570e-02, 1.8586e-02, 1.8620e-02,  ..., 9.9783e-01,
          2.0633e-02, 1.8144e-02],
         [9.4429e-01, 9.4424e-01, 9.4414e-01,  ..., 7.2458e-04,
          9.3810e-01, 9.4557e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:17,949 [Process: 0] Synchronize training processes
2024-08-16 16:09:17,949 [Process: 0] Evaluating...
2024-08-16 16:09:17,951 [Process: 0] EPOCH 196:
2024-08-16 16:09:17,953 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0223, 0.0233, 0.0226,  ..., 0.0230, 0.0224, 0.0228],
         [0.0223, 0.0233, 0.0226,  ..., 0.0230, 0.0224, 0.0228],
         [0.0223, 0.0233, 0.0226,  ..., 0.0230, 0.0224, 0.0228],
         [0.9330, 0.9300, 0.9322,  ..., 0.9309, 0.9327, 0.9316]],
        [[0.0255, 0.0221, 0.0248,  ..., 0.0213, 0.0206, 0.0216],
         [0.0255, 0.0221, 0.0248,  ..., 0.0213, 0.0206, 0.0216],
         [0.0255, 0.0221, 0.0248,  ..., 0.0213, 0.0206, 0.0216],
         [0.9236, 0.9336, 0.9255,  ..., 0.9362, 0.9382, 0.9351]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.8136e-02, 2.0478e-02, 1.8074e-02,  ..., 1.9538e-02,
          1.9098e-02, 1.8603e-02],
         [1.8136e-02, 2.0478e-02, 1.8074e-02,  ..., 1.9538e-02,
          1.9098e-02, 1.8603e-02],
         [1.8136e-02, 2.0478e-02, 1.8074e-02,  ..., 1.9538e-02,
          1.9098e-02, 1.8603e-02],
         [9.4559e-01, 9.3857e-01, 9.4578e-01,  ..., 9.4139e-01,
          9.4271e-01, 9.4419e-01]],
        [[1.8940e-02, 1.9934e-02, 1.8906e-02,  ..., 8.9471e-04,
          1.8407e-02, 1.8989e-02],
         [1.8940e-02, 1.9934e-02, 1.8906e-02,  ..., 8.9471e-04,
          1.8407e-02, 1.8989e-02],
         [1.8940e-02, 1.9934e-02, 1.8906e-02,  ..., 9.9732e-01,
          1.8407e-02, 1.8989e-02],
         [9.4318e-01, 9.4020e-01, 9.4328e-01,  ..., 8.9471e-04,
          9.4478e-01, 9.4303e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:19,947 [Process: 0] Synchronize training processes
2024-08-16 16:09:19,948 [Process: 0] Evaluating...
2024-08-16 16:09:19,950 [Process: 0] EPOCH 197:
2024-08-16 16:09:19,952 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0226, 0.0216, 0.0213,  ..., 0.0218, 0.0220, 0.0221],
         [0.0226, 0.0216, 0.0213,  ..., 0.0218, 0.0220, 0.0221],
         [0.0226, 0.0216, 0.0213,  ..., 0.0218, 0.0220, 0.0221],
         [0.9323, 0.9351, 0.9362,  ..., 0.9346, 0.9339, 0.9336]],
        [[0.0231, 0.0219, 0.0232,  ..., 0.0202, 0.0210, 0.0220],
         [0.0231, 0.0219, 0.0232,  ..., 0.0202, 0.0210, 0.0220],
         [0.0231, 0.0219, 0.0232,  ..., 0.0202, 0.0210, 0.0220],
         [0.9308, 0.9344, 0.9303,  ..., 0.9394, 0.9370, 0.9341]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0188, 0.0186, 0.0185,  ..., 0.0184, 0.0184, 0.0176],
         [0.0188, 0.0186, 0.0185,  ..., 0.0184, 0.0184, 0.0176],
         [0.0188, 0.0186, 0.0185,  ..., 0.0184, 0.0184, 0.0176],
         [0.9436, 0.9442, 0.9444,  ..., 0.9447, 0.9447, 0.9472]],
        [[0.0186, 0.0195, 0.0192,  ..., 0.0015, 0.0202, 0.0199],
         [0.0186, 0.0195, 0.0192,  ..., 0.0015, 0.0202, 0.0199],
         [0.0186, 0.0195, 0.0192,  ..., 0.9955, 0.0202, 0.0199],
         [0.9442, 0.9414, 0.9423,  ..., 0.0015, 0.9394, 0.9404]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:21,960 [Process: 0] Synchronize training processes
2024-08-16 16:09:21,961 [Process: 0] Evaluating...
2024-08-16 16:09:21,963 [Process: 0] EPOCH 198:
2024-08-16 16:09:21,965 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0216, 0.0221, 0.0215,  ..., 0.0213, 0.0221, 0.0213],
         [0.0216, 0.0221, 0.0215,  ..., 0.0213, 0.0221, 0.0213],
         [0.0216, 0.0221, 0.0215,  ..., 0.0213, 0.0221, 0.0213],
         [0.9351, 0.9337, 0.9354,  ..., 0.9360, 0.9336, 0.9360]],
        [[0.0210, 0.0219, 0.0206,  ..., 0.0198, 0.0193, 0.0201],
         [0.0210, 0.0219, 0.0206,  ..., 0.0198, 0.0193, 0.0201],
         [0.0224, 0.0219, 0.0206,  ..., 0.0198, 0.0193, 0.0201],
         [0.9357, 0.9344, 0.9381,  ..., 0.9407, 0.9420, 0.9398]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0184, 0.0190, 0.0186,  ..., 0.0188, 0.0182, 0.0184],
         [0.0184, 0.0190, 0.0186,  ..., 0.0188, 0.0182, 0.0184],
         [0.0184, 0.0190, 0.0186,  ..., 0.0188, 0.0182, 0.0184],
         [0.9449, 0.9431, 0.9442,  ..., 0.9437, 0.9454, 0.9448]],
        [[0.0196, 0.0186, 0.0179,  ..., 0.0158, 0.0186, 0.0192],
         [0.0196, 0.0186, 0.0179,  ..., 0.0158, 0.0186, 0.0192],
         [0.0196, 0.0186, 0.0179,  ..., 0.9525, 0.0186, 0.0192],
         [0.9412, 0.9443, 0.9464,  ..., 0.0158, 0.9441, 0.9424]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:23,957 [Process: 0] Synchronize training processes
2024-08-16 16:09:23,957 [Process: 0] Evaluating...
2024-08-16 16:09:23,959 [Process: 0] EPOCH 199:
2024-08-16 16:09:23,961 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0231, 0.0220, 0.0222,  ..., 0.0223, 0.0210, 0.0225],
         [0.0231, 0.0220, 0.0222,  ..., 0.0223, 0.0210, 0.0225],
         [0.0231, 0.0220, 0.0222,  ..., 0.0223, 0.0210, 0.0225],
         [0.9306, 0.9339, 0.9333,  ..., 0.9332, 0.9370, 0.9326]],
        [[0.0206, 0.0208, 0.0216,  ..., 0.0216, 0.0206, 0.0214],
         [0.0206, 0.0208, 0.0216,  ..., 0.0216, 0.0206, 0.0214],
         [0.0206, 0.0208, 0.0216,  ..., 0.0216, 0.0206, 0.0214],
         [0.9383, 0.9377, 0.9351,  ..., 0.9352, 0.9381, 0.9359]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0195, 0.0188, 0.0181,  ..., 0.0193, 0.0183, 0.0204],
         [0.0195, 0.0188, 0.0181,  ..., 0.0193, 0.0183, 0.0204],
         [0.0195, 0.0188, 0.0181,  ..., 0.0193, 0.0183, 0.0204],
         [0.9414, 0.9437, 0.9457,  ..., 0.9420, 0.9452, 0.9389]],
        [[0.0180, 0.0185, 0.0194,  ..., 0.0101, 0.0189, 0.0193],
         [0.0180, 0.0185, 0.0194,  ..., 0.0101, 0.0189, 0.0193],
         [0.0180, 0.0185, 0.0194,  ..., 0.9696, 0.0189, 0.0193],
         [0.9459, 0.9444, 0.9419,  ..., 0.0101, 0.9432, 0.9422]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:25,964 [Process: 0] Synchronize training processes
2024-08-16 16:09:25,965 [Process: 0] Evaluating...
2024-08-16 16:09:25,967 [Process: 0] EPOCH 200:
2024-08-16 16:09:25,969 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0220, 0.0234, 0.0230,  ..., 0.0230, 0.0223, 0.0229],
         [0.0220, 0.0234, 0.0230,  ..., 0.0230, 0.0223, 0.0229],
         [0.0220, 0.0234, 0.0230,  ..., 0.0230, 0.0223, 0.0229],
         [0.9339, 0.9298, 0.9310,  ..., 0.9309, 0.9332, 0.9314]],
        [[0.0215, 0.0213, 0.0219,  ..., 0.0221, 0.0210, 0.0214],
         [0.0215, 0.0213, 0.0219,  ..., 0.0221, 0.0210, 0.0214],
         [0.0215, 0.0213, 0.0219,  ..., 0.0221, 0.0210, 0.0214],
         [0.9356, 0.9362, 0.9342,  ..., 0.9338, 0.9370, 0.9357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0190, 0.0187, 0.0183,  ..., 0.0186, 0.0189, 0.0184],
         [0.0190, 0.0187, 0.0183,  ..., 0.0186, 0.0189, 0.0184],
         [0.0190, 0.0187, 0.0183,  ..., 0.0186, 0.0189, 0.0184],
         [0.9429, 0.9439, 0.9452,  ..., 0.9443, 0.9432, 0.9449]],
        [[0.0195, 0.0181, 0.0187,  ..., 0.0027, 0.0173, 0.0186],
         [0.0195, 0.0181, 0.0187,  ..., 0.0027, 0.0173, 0.0186],
         [0.0195, 0.0181, 0.0187,  ..., 0.9920, 0.0173, 0.0186],
         [0.9415, 0.9458, 0.9440,  ..., 0.0027, 0.9481, 0.9441]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:27,999 [Process: 0] Synchronize training processes
2024-08-16 16:09:27,999 [Process: 0] Evaluating...
2024-08-16 16:09:28,001 [Process: 0] EPOCH 201:
2024-08-16 16:09:28,003 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0222, 0.0227, 0.0226,  ..., 0.0225, 0.0227, 0.0221],
         [0.0222, 0.0227, 0.0226,  ..., 0.0225, 0.0227, 0.0221],
         [0.0222, 0.0227, 0.0226,  ..., 0.0225, 0.0227, 0.0221],
         [0.9334, 0.9319, 0.9321,  ..., 0.9324, 0.9320, 0.9338]],
        [[0.0212, 0.0209, 0.0211,  ..., 0.0207, 0.0213, 0.0207],
         [0.0212, 0.0209, 0.0211,  ..., 0.0207, 0.0213, 0.0207],
         [0.0212, 0.0209, 0.0211,  ..., 0.0207, 0.0213, 0.0207],
         [0.9364, 0.9374, 0.9368,  ..., 0.9380, 0.9361, 0.9380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0190, 0.0194, 0.0177,  ..., 0.0169, 0.0194, 0.0180],
         [0.0190, 0.0194, 0.0177,  ..., 0.0169, 0.0194, 0.0180],
         [0.0190, 0.0194, 0.0177,  ..., 0.0169, 0.0194, 0.0180],
         [0.9431, 0.9417, 0.9470,  ..., 0.9494, 0.9417, 0.9461]],
        [[0.0176, 0.0176, 0.0189,  ..., 0.0025, 0.0188, 0.0187],
         [0.0176, 0.0176, 0.0189,  ..., 0.0011, 0.0188, 0.0187],
         [0.0176, 0.0176, 0.0189,  ..., 0.9954, 0.0188, 0.0187],
         [0.9471, 0.9472, 0.9434,  ..., 0.0011, 0.9437, 0.9439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 201:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:29,957 [Process: 0] Synchronize training processes
2024-08-16 16:09:29,957 [Process: 0] Evaluating...
2024-08-16 16:09:29,969 [Process: 0] EPOCH 202:
2024-08-16 16:09:29,971 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0222, 0.0228, 0.0225,  ..., 0.0222, 0.0223, 0.0223],
         [0.0222, 0.0228, 0.0225,  ..., 0.0222, 0.0223, 0.0223],
         [0.0222, 0.0228, 0.0225,  ..., 0.0222, 0.0223, 0.0223],
         [0.9334, 0.9317, 0.9326,  ..., 0.9334, 0.9330, 0.9330]],
        [[0.0213, 0.0215, 0.0205,  ..., 0.0213, 0.0217, 0.0214],
         [0.0213, 0.0215, 0.0205,  ..., 0.0213, 0.0217, 0.0214],
         [0.0213, 0.0215, 0.0205,  ..., 0.0213, 0.0217, 0.0214],
         [0.9360, 0.9354, 0.9384,  ..., 0.9360, 0.9349, 0.9359]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0182, 0.0186, 0.0182,  ..., 0.0177, 0.0185, 0.0179],
         [0.0182, 0.0186, 0.0182,  ..., 0.0177, 0.0185, 0.0179],
         [0.0182, 0.0186, 0.0182,  ..., 0.0177, 0.0185, 0.0179],
         [0.9453, 0.9442, 0.9455,  ..., 0.9468, 0.9446, 0.9463]],
        [[0.0178, 0.0193, 0.0183,  ..., 0.0018, 0.0189, 0.0185],
         [0.0178, 0.0193, 0.0183,  ..., 0.0018, 0.0189, 0.0185],
         [0.0178, 0.0193, 0.0183,  ..., 0.9945, 0.0189, 0.0185],
         [0.9465, 0.9420, 0.9452,  ..., 0.0018, 0.9434, 0.9444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 202:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:32,058 [Process: 0] Synchronize training processes
2024-08-16 16:09:32,058 [Process: 0] Evaluating...
2024-08-16 16:09:32,060 [Process: 0] EPOCH 203:
2024-08-16 16:09:32,062 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0225, 0.0221, 0.0218,  ..., 0.0220, 0.0220, 0.0232],
         [0.0225, 0.0221, 0.0218,  ..., 0.0220, 0.0220, 0.0232],
         [0.0225, 0.0221, 0.0218,  ..., 0.0220, 0.0220, 0.0232],
         [0.9326, 0.9337, 0.9345,  ..., 0.9340, 0.9341, 0.9305]],
        [[0.0209, 0.0218, 0.0206,  ..., 0.0216, 0.0218, 0.0207],
         [0.0209, 0.0218, 0.0206,  ..., 0.0216, 0.0218, 0.0207],
         [0.0209, 0.0218, 0.0206,  ..., 0.0216, 0.0218, 0.0207],
         [0.9372, 0.9347, 0.9383,  ..., 0.9352, 0.9346, 0.9378]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7874e-02, 1.8151e-02, 1.7902e-02,  ..., 1.8287e-02,
          1.8835e-02, 1.9463e-02],
         [1.7874e-02, 1.8151e-02, 1.7902e-02,  ..., 1.8287e-02,
          1.8835e-02, 1.9463e-02],
         [1.7874e-02, 1.8151e-02, 1.7902e-02,  ..., 1.8287e-02,
          1.8835e-02, 1.9463e-02],
         [9.4638e-01, 9.4555e-01, 9.4630e-01,  ..., 9.4514e-01,
          9.4350e-01, 9.4161e-01]],
        [[1.7835e-02, 1.7477e-02, 1.8751e-02,  ..., 6.8319e-04,
          1.8576e-02, 1.8768e-02],
         [1.7835e-02, 1.7477e-02, 1.8751e-02,  ..., 6.8319e-04,
          1.8576e-02, 1.8768e-02],
         [1.7835e-02, 1.7477e-02, 1.8751e-02,  ..., 9.9795e-01,
          1.8576e-02, 1.8768e-02],
         [9.4650e-01, 9.4757e-01, 9.4375e-01,  ..., 6.8319e-04,
          9.4427e-01, 9.4370e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 203:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:34,145 [Process: 0] Synchronize training processes
2024-08-16 16:09:34,145 [Process: 0] Evaluating...
2024-08-16 16:09:34,147 [Process: 0] EPOCH 204:
2024-08-16 16:09:34,149 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0220, 0.0216, 0.0228,  ..., 0.0223, 0.0221, 0.0228],
         [0.0220, 0.0216, 0.0228,  ..., 0.0223, 0.0221, 0.0228],
         [0.0220, 0.0216, 0.0228,  ..., 0.0223, 0.0221, 0.0228],
         [0.9341, 0.9352, 0.9317,  ..., 0.9331, 0.9337, 0.9315]],
        [[0.0204, 0.0219, 0.0220,  ..., 0.0212, 0.0212, 0.0208],
         [0.0204, 0.0219, 0.0220,  ..., 0.0212, 0.0212, 0.0208],
         [0.0204, 0.0219, 0.0220,  ..., 0.0212, 0.0212, 0.0208],
         [0.9389, 0.9342, 0.9341,  ..., 0.9365, 0.9365, 0.9375]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0178, 0.0189, 0.0190,  ..., 0.0185, 0.0185, 0.0185],
         [0.0178, 0.0189, 0.0190,  ..., 0.0185, 0.0185, 0.0185],
         [0.0178, 0.0189, 0.0190,  ..., 0.0185, 0.0185, 0.0185],
         [0.9465, 0.9432, 0.9430,  ..., 0.9446, 0.9446, 0.9446]],
        [[0.0187, 0.0176, 0.0176,  ..., 0.0010, 0.0189, 0.0179],
         [0.0187, 0.0176, 0.0176,  ..., 0.0010, 0.0189, 0.0179],
         [0.0187, 0.0176, 0.0176,  ..., 0.9969, 0.0189, 0.0179],
         [0.9439, 0.9471, 0.9472,  ..., 0.0010, 0.9432, 0.9463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 204:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:36,236 [Process: 0] Synchronize training processes
2024-08-16 16:09:36,237 [Process: 0] Evaluating...
2024-08-16 16:09:36,239 [Process: 0] EPOCH 205:
2024-08-16 16:09:36,241 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0219, 0.0216, 0.0224,  ..., 0.0217, 0.0220, 0.0217],
         [0.0219, 0.0216, 0.0224,  ..., 0.0217, 0.0220, 0.0217],
         [0.0219, 0.0216, 0.0224,  ..., 0.0217, 0.0220, 0.0217],
         [0.9343, 0.9352, 0.9327,  ..., 0.9350, 0.9339, 0.9349]],
        [[0.0199, 0.0187, 0.0199,  ..., 0.0205, 0.0210, 0.0214],
         [0.0199, 0.0187, 0.0199,  ..., 0.0205, 0.0210, 0.0214],
         [0.0199, 0.0187, 0.0199,  ..., 0.0205, 0.0210, 0.0214],
         [0.9402, 0.9439, 0.9402,  ..., 0.9386, 0.9371, 0.9357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0175, 0.0177, 0.0187,  ..., 0.0190, 0.0188, 0.0182],
         [0.0175, 0.0177, 0.0187,  ..., 0.0190, 0.0188, 0.0182],
         [0.0175, 0.0177, 0.0187,  ..., 0.0190, 0.0188, 0.0182],
         [0.9474, 0.9468, 0.9440,  ..., 0.9431, 0.9437, 0.9453]],
        [[0.0186, 0.0181, 0.0183,  ..., 0.0074, 0.0186, 0.0168],
         [0.0186, 0.0181, 0.0183,  ..., 0.0047, 0.0186, 0.0168],
         [0.0186, 0.0181, 0.0183,  ..., 0.9833, 0.0186, 0.0168],
         [0.9443, 0.9458, 0.9451,  ..., 0.0047, 0.9443, 0.9497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 205:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0215, 0.0225, 0.0223,  ..., 0.0231, 0.0221, 0.0220],
         [0.0215, 0.0225, 0.0223,  ..., 0.0231, 0.0221, 0.0220],
         [0.0215, 0.0225, 0.0223,  ..., 0.0231, 0.0221, 0.0220],
         [0.9354, 0.9326, 0.9330,  ..., 0.9308, 0.9337, 0.9340]],
        [[0.0206, 0.0197, 0.0208,  ..., 0.0197, 0.0220, 0.0208],
         [0.0206, 0.0197, 0.0208,  ..., 0.0197, 0.0220, 0.0208],
         [0.0206, 0.0197, 0.0208,  ..., 0.0197, 0.0220, 0.0208],
         [0.9383, 0.9409, 0.9377,  ..., 0.9409, 0.9341, 0.9377]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0187, 0.0181, 0.0188,  ..., 0.0178, 0.0194, 0.0172],
         [0.0187, 0.0181, 0.0188,  ..., 0.0178, 0.0194, 0.0172],
         [0.0187, 0.0181, 0.0188,  ..., 0.0178, 0.0194, 0.0172],
         [0.9439, 0.9458, 0.9437,  ..., 0.9467, 0.9417, 0.9483]],
        [[0.0184, 0.0167, 0.0178,  ..., 0.0048, 0.0181, 0.0179],
         [0.0184, 0.0167, 0.0178,  ..., 0.0048, 0.0181, 0.0179],
         [0.0184, 0.0167, 0.0178,  ..., 0.9856, 0.0181, 0.0179],
         [0.9448, 0.9498, 0.9466,  ..., 0.0048, 0.9458, 0.9464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 206:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:38,325 [Process: 0] Synchronize training processes
2024-08-16 16:09:38,325 [Process: 0] Evaluating...
2024-08-16 16:09:38,327 [Process: 0] EPOCH 206:
2024-08-16 16:09:38,329 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0220, 0.0224, 0.0213,  ..., 0.0223, 0.0210, 0.0213],
         [0.0220, 0.0224, 0.0213,  ..., 0.0223, 0.0210, 0.0213],
         [0.0220, 0.0224, 0.0213,  ..., 0.0223, 0.0210, 0.0213],
         [0.9340, 0.9329, 0.9360,  ..., 0.9331, 0.9369, 0.9362]],
        [[0.0204, 0.0205, 0.0209,  ..., 0.0209, 0.0212, 0.0189],
         [0.0204, 0.0205, 0.0209,  ..., 0.0209, 0.0212, 0.0189],
         [0.0204, 0.0205, 0.0209,  ..., 0.0209, 0.0212, 0.0189],
         [0.9387, 0.9386, 0.9373,  ..., 0.9373, 0.9363, 0.9432]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0182, 0.0184, 0.0188,  ..., 0.0173, 0.0186, 0.0201],
         [0.0182, 0.0184, 0.0188,  ..., 0.0173, 0.0186, 0.0201],
         [0.0182, 0.0184, 0.0188,  ..., 0.0173, 0.0186, 0.0201],
         [0.9455, 0.9447, 0.9436,  ..., 0.9481, 0.9441, 0.9397]],
        [[0.0194, 0.0192, 0.0170,  ..., 0.0079, 0.0158, 0.0175],
         [0.0194, 0.0192, 0.0170,  ..., 0.0079, 0.0158, 0.0175],
         [0.0194, 0.0192, 0.0170,  ..., 0.9763, 0.0158, 0.0175],
         [0.9419, 0.9425, 0.9490,  ..., 0.0079, 0.9526, 0.9475]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 207:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:40,416 [Process: 0] Synchronize training processes
2024-08-16 16:09:40,417 [Process: 0] Evaluating...
2024-08-16 16:09:40,419 [Process: 0] EPOCH 207:
2024-08-16 16:09:40,421 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0214, 0.0210, 0.0219,  ..., 0.0221, 0.0206, 0.0222],
         [0.0214, 0.0210, 0.0219,  ..., 0.0221, 0.0206, 0.0222],
         [0.0214, 0.0210, 0.0219,  ..., 0.0221, 0.0206, 0.0222],
         [0.9358, 0.9369, 0.9344,  ..., 0.9336, 0.9381, 0.9334]],
        [[0.0200, 0.0202, 0.0200,  ..., 0.0199, 0.0215, 0.0209],
         [0.0200, 0.0202, 0.0200,  ..., 0.0199, 0.0215, 0.0209],
         [0.0200, 0.0202, 0.0200,  ..., 0.0199, 0.0215, 0.0209],
         [0.9399, 0.9394, 0.9400,  ..., 0.9403, 0.9356, 0.9374]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.9046e-02, 1.8174e-02, 1.8438e-02,  ..., 1.7783e-02,
          1.9093e-02, 1.7488e-02],
         [1.9046e-02, 1.8174e-02, 1.8438e-02,  ..., 1.7783e-02,
          1.9093e-02, 1.7488e-02],
         [1.9046e-02, 1.8174e-02, 1.8438e-02,  ..., 1.7783e-02,
          1.9093e-02, 1.7488e-02],
         [9.4286e-01, 9.4548e-01, 9.4468e-01,  ..., 9.4665e-01,
          9.4272e-01, 9.4754e-01]],
        [[1.7497e-02, 1.7146e-02, 1.7340e-02,  ..., 3.2182e-04,
          1.6421e-02, 1.8127e-02],
         [1.7497e-02, 1.7146e-02, 1.7340e-02,  ..., 3.2182e-04,
          1.6421e-02, 1.8127e-02],
         [1.7497e-02, 1.7146e-02, 1.7340e-02,  ..., 9.9903e-01,
          1.6421e-02, 1.8127e-02],
         [9.4751e-01, 9.4856e-01, 9.4798e-01,  ..., 3.2182e-04,
          9.5074e-01, 9.4562e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 208:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:42,503 [Process: 0] Synchronize training processes
2024-08-16 16:09:42,504 [Process: 0] Evaluating...
2024-08-16 16:09:42,505 [Process: 0] EPOCH 208:
2024-08-16 16:09:42,508 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0215, 0.0214, 0.0212,  ..., 0.0232, 0.0213, 0.0215],
         [0.0215, 0.0214, 0.0212,  ..., 0.0232, 0.0213, 0.0215],
         [0.0215, 0.0214, 0.0212,  ..., 0.0232, 0.0213, 0.0215],
         [0.9356, 0.9359, 0.9364,  ..., 0.9305, 0.9362, 0.9354]],
        [[0.0211, 0.0216, 0.0202,  ..., 0.0215, 0.0202, 0.0198],
         [0.0211, 0.0216, 0.0202,  ..., 0.0215, 0.0202, 0.0198],
         [0.0211, 0.0216, 0.0202,  ..., 0.0215, 0.0202, 0.0198],
         [0.9366, 0.9353, 0.9395,  ..., 0.9354, 0.9393, 0.9407]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7872e-02, 1.7048e-02, 1.8766e-02,  ..., 1.8087e-02,
          1.9425e-02, 1.7026e-02],
         [1.7872e-02, 1.7048e-02, 1.8766e-02,  ..., 1.8087e-02,
          1.9425e-02, 1.7026e-02],
         [1.7872e-02, 1.7048e-02, 1.8766e-02,  ..., 1.8087e-02,
          1.9425e-02, 1.7026e-02],
         [9.4638e-01, 9.4886e-01, 9.4370e-01,  ..., 9.4574e-01,
          9.4173e-01, 9.4892e-01]],
        [[1.6959e-02, 1.7006e-02, 1.7647e-02,  ..., 7.0876e-04,
          1.9061e-02, 1.5931e-02],
         [1.6959e-02, 1.7006e-02, 1.7647e-02,  ..., 7.0876e-04,
          1.9061e-02, 1.5931e-02],
         [1.6959e-02, 1.7006e-02, 1.7647e-02,  ..., 9.9787e-01,
          1.9061e-02, 1.5931e-02],
         [9.4912e-01, 9.4898e-01, 9.4706e-01,  ..., 7.0876e-04,
          9.4282e-01, 9.5221e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 209:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:09:44,601 [Process: 0] Synchronize training processes
2024-08-16 16:09:44,602 [Process: 0] Evaluating...
2024-08-16 16:09:44,604 [Process: 0] EPOCH 209:
2024-08-16 16:09:44,606 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0212, 0.0209, 0.0211,  ..., 0.0219, 0.0201, 0.0228],
         [0.0212, 0.0209, 0.0211,  ..., 0.0219, 0.0201, 0.0228],
         [0.0212, 0.0209, 0.0211,  ..., 0.0219, 0.0201, 0.0228],
         [0.9364, 0.9373, 0.9366,  ..., 0.9343, 0.9398, 0.9316]],
        [[0.0207, 0.0213, 0.0189,  ..., 0.0188, 0.0213, 0.0200],
         [0.0207, 0.0213, 0.0189,  ..., 0.0188, 0.0213, 0.0200],
         [0.0207, 0.0213, 0.0189,  ..., 0.0188, 0.0213, 0.0200],
         [0.9378, 0.9361, 0.9433,  ..., 0.9437, 0.9362, 0.9400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.8251e-02, 1.7389e-02, 1.6715e-02,  ..., 1.7777e-02,
          1.8989e-02, 1.6791e-02],
         [1.8251e-02, 1.7389e-02, 1.6715e-02,  ..., 1.7777e-02,
          1.8989e-02, 1.6791e-02],
         [1.8251e-02, 1.7389e-02, 1.6715e-02,  ..., 1.7777e-02,
          1.8989e-02, 1.6791e-02],
         [9.4525e-01, 9.4783e-01, 9.4986e-01,  ..., 9.4667e-01,
          9.4303e-01, 9.4963e-01]],
        [[1.5229e-02, 1.8159e-02, 1.6384e-02,  ..., 7.5828e-04,
          1.7336e-02, 1.7914e-02],
         [1.5229e-02, 1.8159e-02, 1.6384e-02,  ..., 7.5828e-04,
          1.7336e-02, 1.7914e-02],
         [1.5229e-02, 1.8159e-02, 1.6384e-02,  ..., 9.9773e-01,
          1.7336e-02, 1.7914e-02],
         [9.5431e-01, 9.4552e-01, 9.5085e-01,  ..., 7.5828e-04,
          9.4799e-01, 9.4626e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:09:46,696 [Process: 0] Synchronize training processes
2024-08-16 16:09:46,696 [Process: 0] Evaluating...
2024-08-16 16:09:46,698 [Process: 0] EPOCH 210:
2024-08-16 16:09:46,700 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 210:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0207, 0.0205, 0.0204,  ..., 0.0224, 0.0210, 0.0208],
         [0.0207, 0.0205, 0.0204,  ..., 0.0224, 0.0210, 0.0208],
         [0.0207, 0.0205, 0.0204,  ..., 0.0224, 0.0210, 0.0208],
         [0.9378, 0.9384, 0.9389,  ..., 0.9328, 0.9371, 0.9376]],
        [[0.0200, 0.0198, 0.0196,  ..., 0.0190, 0.0195, 0.0203],
         [0.0200, 0.0198, 0.0196,  ..., 0.0190, 0.0195, 0.0203],
         [0.0200, 0.0198, 0.0196,  ..., 0.0190, 0.0195, 0.0203],
         [0.9400, 0.9407, 0.9412,  ..., 0.9429, 0.9414, 0.9390]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.8217e-02, 1.7453e-02, 1.5715e-02,  ..., 1.7453e-02,
          1.9536e-02, 1.7368e-02],
         [1.8217e-02, 1.7453e-02, 1.5715e-02,  ..., 1.7453e-02,
          1.9536e-02, 1.7368e-02],
         [1.8217e-02, 1.7453e-02, 1.5715e-02,  ..., 1.7453e-02,
          1.9536e-02, 1.7368e-02],
         [9.4535e-01, 9.4764e-01, 9.5286e-01,  ..., 9.4764e-01,
          9.4139e-01, 9.4790e-01]],
        [[1.7092e-02, 1.8291e-02, 1.7501e-02,  ..., 2.1235e-05,
          2.0989e-02, 1.6524e-02],
         [1.7092e-02, 1.8291e-02, 1.7501e-02,  ..., 2.1235e-05,
          2.0989e-02, 1.6524e-02],
         [1.7092e-02, 1.8291e-02, 1.7501e-02,  ..., 9.9994e-01,
          2.0989e-02, 1.6524e-02],
         [9.4872e-01, 9.4513e-01, 9.4750e-01,  ..., 2.1235e-05,
          9.3703e-01, 9.5043e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:09:48,814 [Process: 0] Synchronize training processes
2024-08-16 16:09:48,815 [Process: 0] Evaluating...
2024-08-16 16:09:48,817 [Process: 0] EPOCH 211:
2024-08-16 16:09:48,818 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 211:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0205, 0.0216, 0.0202,  ..., 0.0229, 0.0209, 0.0213],
         [0.0205, 0.0216, 0.0202,  ..., 0.0229, 0.0209, 0.0213],
         [0.0205, 0.0216, 0.0202,  ..., 0.0229, 0.0209, 0.0213],
         [0.9386, 0.9353, 0.9395,  ..., 0.9313, 0.9372, 0.9362]],
        [[0.0195, 0.0184, 0.0209,  ..., 0.0200, 0.0196, 0.0195],
         [0.0195, 0.0184, 0.0209,  ..., 0.0200, 0.0196, 0.0195],
         [0.0195, 0.0184, 0.0209,  ..., 0.0200, 0.0196, 0.0195],
         [0.9414, 0.9448, 0.9374,  ..., 0.9401, 0.9411, 0.9416]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
2024-08-16 16:09:50,913 [Process: 0] Synchronize training processes
2024-08-16 16:09:50,913 [Process: 0] Evaluating...
2024-08-16 16:09:50,921 [Process: 0] EPOCH 212:
2024-08-16 16:09:50,923 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0182, 0.0165, 0.0167,  ..., 0.0177, 0.0175, 0.0170],
         [0.0182, 0.0165, 0.0167,  ..., 0.0177, 0.0175, 0.0170],
         [0.0182, 0.0165, 0.0167,  ..., 0.0177, 0.0175, 0.0170],
         [0.9453, 0.9506, 0.9498,  ..., 0.9468, 0.9475, 0.9490]],
        [[0.0188, 0.0183, 0.0164,  ..., 0.0070, 0.0170, 0.0160],
         [0.0188, 0.0183, 0.0164,  ..., 0.0070, 0.0170, 0.0160],
         [0.0188, 0.0183, 0.0164,  ..., 0.9789, 0.0170, 0.0160],
         [0.9435, 0.9450, 0.9507,  ..., 0.0070, 0.9489, 0.9521]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 212:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0216, 0.0209, 0.0198,  ..., 0.0217, 0.0212, 0.0207],
         [0.0216, 0.0209, 0.0198,  ..., 0.0217, 0.0212, 0.0207],
         [0.0216, 0.0209, 0.0198,  ..., 0.0217, 0.0212, 0.0207],
         [0.9351, 0.9372, 0.9407,  ..., 0.9350, 0.9365, 0.9378]],
        [[0.0189, 0.0200, 0.0198,  ..., 0.0191, 0.0189, 0.0207],
         [0.0189, 0.0200, 0.0198,  ..., 0.0191, 0.0189, 0.0207],
         [0.0189, 0.0200, 0.0198,  ..., 0.0191, 0.0189, 0.0207],
         [0.9433, 0.9401, 0.9405,  ..., 0.9426, 0.9432, 0.9380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:09:53,037 [Process: 0] Synchronize training processes
2024-08-16 16:09:53,037 [Process: 0] Evaluating...
2024-08-16 16:09:53,039 [Process: 0] EPOCH 213:
2024-08-16 16:09:53,041 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6646e-02, 1.6235e-02, 1.8241e-02,  ..., 1.7080e-02,
          1.6439e-02, 1.5617e-02],
         [1.6646e-02, 1.6235e-02, 1.8241e-02,  ..., 1.7080e-02,
          1.6439e-02, 1.5617e-02],
         [1.6646e-02, 1.6235e-02, 1.8241e-02,  ..., 1.7080e-02,
          1.6439e-02, 1.5617e-02],
         [9.5006e-01, 9.5130e-01, 9.4528e-01,  ..., 9.4876e-01,
          9.5068e-01, 9.5315e-01]],
        [[1.6495e-02, 1.5701e-02, 1.8018e-02,  ..., 3.6374e-04,
          1.4903e-02, 1.7305e-02],
         [1.6495e-02, 1.5701e-02, 1.8018e-02,  ..., 3.6374e-04,
          1.4903e-02, 1.7305e-02],
         [1.6495e-02, 1.5701e-02, 1.8018e-02,  ..., 9.9891e-01,
          1.4903e-02, 1.7305e-02],
         [9.5051e-01, 9.5290e-01, 9.4595e-01,  ..., 3.6374e-04,
          9.5529e-01, 9.4808e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 213:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0198, 0.0207, 0.0198,  ..., 0.0211, 0.0202, 0.0203],
         [0.0198, 0.0207, 0.0198,  ..., 0.0211, 0.0202, 0.0203],
         [0.0198, 0.0207, 0.0198,  ..., 0.0211, 0.0202, 0.0203],
         [0.9405, 0.9378, 0.9406,  ..., 0.9368, 0.9393, 0.9392]],
        [[0.0195, 0.0198, 0.0201,  ..., 0.0193, 0.0183, 0.0190],
         [0.0195, 0.0198, 0.0201,  ..., 0.0193, 0.0183, 0.0190],
         [0.0195, 0.0198, 0.0201,  ..., 0.0193, 0.0183, 0.0190],
         [0.9416, 0.9407, 0.9397,  ..., 0.9421, 0.9451, 0.9431]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:09:55,153 [Process: 0] Synchronize training processes
2024-08-16 16:09:55,154 [Process: 0] Evaluating...
2024-08-16 16:09:55,156 [Process: 0] EPOCH 214:
2024-08-16 16:09:55,158 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0182, 0.0180, 0.0172,  ..., 0.0159, 0.0171, 0.0163],
         [0.0182, 0.0180, 0.0172,  ..., 0.0159, 0.0171, 0.0163],
         [0.0182, 0.0180, 0.0172,  ..., 0.0159, 0.0171, 0.0163],
         [0.9454, 0.9460, 0.9483,  ..., 0.9522, 0.9487, 0.9512]],
        [[0.0180, 0.0169, 0.0168,  ..., 0.0014, 0.0180, 0.0160],
         [0.0180, 0.0169, 0.0168,  ..., 0.0014, 0.0180, 0.0160],
         [0.0180, 0.0169, 0.0168,  ..., 0.9959, 0.0180, 0.0160],
         [0.9460, 0.9493, 0.9495,  ..., 0.0014, 0.9460, 0.9519]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 214:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0197, 0.0212, 0.0203,  ..., 0.0228, 0.0201, 0.0199],
         [0.0197, 0.0212, 0.0203,  ..., 0.0228, 0.0201, 0.0199],
         [0.0197, 0.0212, 0.0203,  ..., 0.0228, 0.0201, 0.0199],
         [0.9409, 0.9363, 0.9392,  ..., 0.9316, 0.9398, 0.9404]],
        [[0.0204, 0.0206, 0.0200,  ..., 0.0187, 0.0195, 0.0180],
         [0.0204, 0.0206, 0.0200,  ..., 0.0187, 0.0195, 0.0180],
         [0.0204, 0.0206, 0.0200,  ..., 0.0187, 0.0195, 0.0180],
         [0.9387, 0.9381, 0.9400,  ..., 0.9438, 0.9416, 0.9459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:09:57,260 [Process: 0] Synchronize training processes
2024-08-16 16:09:57,260 [Process: 0] Evaluating...
2024-08-16 16:09:57,262 [Process: 0] EPOCH 215:
2024-08-16 16:09:57,264 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6898e-02, 1.6682e-02, 1.7394e-02,  ..., 1.5778e-02,
          1.5492e-02, 1.5996e-02],
         [1.6898e-02, 1.6682e-02, 1.7394e-02,  ..., 1.5778e-02,
          1.5492e-02, 1.5996e-02],
         [1.6898e-02, 1.6682e-02, 1.7394e-02,  ..., 1.5778e-02,
          1.5492e-02, 1.5996e-02],
         [9.4930e-01, 9.4995e-01, 9.4782e-01,  ..., 9.5267e-01,
          9.5352e-01, 9.5201e-01]],
        [[1.6514e-02, 1.4956e-02, 1.6518e-02,  ..., 6.8235e-04,
          1.4960e-02, 1.8033e-02],
         [1.6514e-02, 1.4956e-02, 1.6518e-02,  ..., 6.8235e-04,
          1.4960e-02, 1.8033e-02],
         [1.6514e-02, 1.4956e-02, 1.6518e-02,  ..., 9.9795e-01,
          1.4960e-02, 1.8033e-02],
         [9.5046e-01, 9.5513e-01, 9.5044e-01,  ..., 6.8235e-04,
          9.5512e-01, 9.4590e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 215:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0199, 0.0203, 0.0203,  ..., 0.0229, 0.0199, 0.0196],
         [0.0199, 0.0203, 0.0203,  ..., 0.0229, 0.0199, 0.0196],
         [0.0199, 0.0203, 0.0203,  ..., 0.0229, 0.0199, 0.0196],
         [0.9404, 0.9391, 0.9391,  ..., 0.9312, 0.9403, 0.9412]],
        [[0.0206, 0.0197, 0.0194,  ..., 0.0184, 0.0195, 0.0189],
         [0.0206, 0.0197, 0.0194,  ..., 0.0184, 0.0195, 0.0189],
         [0.0206, 0.0197, 0.0194,  ..., 0.0184, 0.0195, 0.0189],
         [0.9381, 0.9409, 0.9417,  ..., 0.9447, 0.9415, 0.9434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:09:59,380 [Process: 0] Synchronize training processes
2024-08-16 16:09:59,381 [Process: 0] Evaluating...
2024-08-16 16:09:59,383 [Process: 0] EPOCH 216:
2024-08-16 16:09:59,385 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5491e-02, 1.6327e-02, 1.5312e-02,  ..., 1.8925e-02,
          1.6772e-02, 1.7327e-02],
         [1.5491e-02, 1.6327e-02, 1.5312e-02,  ..., 1.8925e-02,
          1.6772e-02, 1.7327e-02],
         [1.5491e-02, 1.6327e-02, 1.5312e-02,  ..., 1.8925e-02,
          1.6772e-02, 1.7327e-02],
         [9.5353e-01, 9.5102e-01, 9.5406e-01,  ..., 9.4323e-01,
          9.4968e-01, 9.4802e-01]],
        [[1.7205e-02, 1.7249e-02, 1.7527e-02,  ..., 2.5196e-03,
          1.7160e-02, 1.6850e-02],
         [1.7205e-02, 1.7249e-02, 1.7527e-02,  ..., 9.0796e-04,
          1.7160e-02, 1.6850e-02],
         [1.7205e-02, 1.7249e-02, 1.7527e-02,  ..., 9.9566e-01,
          1.7160e-02, 1.6850e-02],
         [9.4838e-01, 9.4825e-01, 9.4742e-01,  ..., 9.0796e-04,
          9.4852e-01, 9.4945e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 216:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0189, 0.0189, 0.0205,  ..., 0.0217, 0.0194, 0.0198],
         [0.0189, 0.0189, 0.0205,  ..., 0.0217, 0.0194, 0.0198],
         [0.0189, 0.0189, 0.0205,  ..., 0.0217, 0.0194, 0.0198],
         [0.9434, 0.9433, 0.9385,  ..., 0.9348, 0.9419, 0.9405]],
        [[0.0189, 0.0190, 0.0187,  ..., 0.0183, 0.0180, 0.0206],
         [0.0189, 0.0190, 0.0187,  ..., 0.0183, 0.0180, 0.0206],
         [0.0189, 0.0190, 0.0187,  ..., 0.0183, 0.0180, 0.0206],
         [0.9433, 0.9431, 0.9438,  ..., 0.9450, 0.9460, 0.9381]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:10:01,508 [Process: 0] Synchronize training processes
2024-08-16 16:10:01,508 [Process: 0] Evaluating...
2024-08-16 16:10:01,510 [Process: 0] EPOCH 217:
2024-08-16 16:10:01,512 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0158, 0.0167, 0.0164,  ..., 0.0169, 0.0161, 0.0188],
         [0.0158, 0.0167, 0.0164,  ..., 0.0169, 0.0161, 0.0188],
         [0.0158, 0.0167, 0.0164,  ..., 0.0169, 0.0161, 0.0188],
         [0.9525, 0.9499, 0.9507,  ..., 0.9492, 0.9518, 0.9435]],
        [[0.0171, 0.0165, 0.0160,  ..., 0.0015, 0.0177, 0.0155],
         [0.0171, 0.0165, 0.0160,  ..., 0.0015, 0.0177, 0.0155],
         [0.0171, 0.0165, 0.0160,  ..., 0.9954, 0.0177, 0.0155],
         [0.9487, 0.9505, 0.9520,  ..., 0.0015, 0.9470, 0.9536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 217:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0193, 0.0196, 0.0200,  ..., 0.0233, 0.0196, 0.0200],
         [0.0193, 0.0196, 0.0200,  ..., 0.0233, 0.0196, 0.0200],
         [0.0193, 0.0196, 0.0200,  ..., 0.0233, 0.0196, 0.0200],
         [0.9422, 0.9411, 0.9400,  ..., 0.9300, 0.9411, 0.9399]],
        [[0.0184, 0.0190, 0.0180,  ..., 0.0182, 0.0188, 0.0185],
         [0.0184, 0.0190, 0.0180,  ..., 0.0182, 0.0188, 0.0185],
         [0.0184, 0.0190, 0.0180,  ..., 0.0182, 0.0188, 0.0185],
         [0.9448, 0.9430, 0.9461,  ..., 0.9455, 0.9437, 0.9444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:10:03,603 [Process: 0] Synchronize training processes
2024-08-16 16:10:03,604 [Process: 0] Evaluating...
2024-08-16 16:10:03,606 [Process: 0] EPOCH 218:
2024-08-16 16:10:03,608 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0157, 0.0161, 0.0173,  ..., 0.0150, 0.0176, 0.0167],
         [0.0157, 0.0161, 0.0173,  ..., 0.0150, 0.0176, 0.0167],
         [0.0157, 0.0161, 0.0173,  ..., 0.0150, 0.0176, 0.0167],
         [0.9529, 0.9518, 0.9481,  ..., 0.9551, 0.9473, 0.9500]],
        [[0.0169, 0.0162, 0.0156,  ..., 0.0016, 0.0150, 0.0156],
         [0.0169, 0.0162, 0.0156,  ..., 0.0016, 0.0150, 0.0156],
         [0.0169, 0.0162, 0.0156,  ..., 0.9953, 0.0150, 0.0156],
         [0.9492, 0.9513, 0.9533,  ..., 0.0016, 0.9551, 0.9533]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 218:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0203, 0.0186, 0.0194,  ..., 0.0208, 0.0193, 0.0192],
         [0.0203, 0.0186, 0.0194,  ..., 0.0208, 0.0193, 0.0192],
         [0.0203, 0.0186, 0.0194,  ..., 0.0208, 0.0193, 0.0192],
         [0.9390, 0.9442, 0.9419,  ..., 0.9376, 0.9420, 0.9425]],
        [[0.0184, 0.0194, 0.0187,  ..., 0.0185, 0.0184, 0.0201],
         [0.0184, 0.0194, 0.0187,  ..., 0.0185, 0.0184, 0.0201],
         [0.0184, 0.0194, 0.0187,  ..., 0.0185, 0.0184, 0.0201],
         [0.9447, 0.9418, 0.9440,  ..., 0.9446, 0.9448, 0.9396]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:10:05,722 [Process: 0] Synchronize training processes
2024-08-16 16:10:05,723 [Process: 0] Evaluating...
2024-08-16 16:10:05,725 [Process: 0] EPOCH 219:
2024-08-16 16:10:05,726 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7671e-02, 1.6316e-02, 1.6933e-02,  ..., 1.4511e-02,
          1.8589e-02, 1.5901e-02],
         [1.7671e-02, 1.6316e-02, 1.6933e-02,  ..., 1.4511e-02,
          1.8589e-02, 1.5901e-02],
         [1.7671e-02, 1.6316e-02, 1.6933e-02,  ..., 1.4511e-02,
          1.8589e-02, 1.5901e-02],
         [9.4699e-01, 9.5105e-01, 9.4920e-01,  ..., 9.5647e-01,
          9.4423e-01, 9.5230e-01]],
        [[1.7120e-02, 1.6963e-02, 1.6101e-02,  ..., 3.6907e-04,
          1.6074e-02, 1.6565e-02],
         [1.7120e-02, 1.6963e-02, 1.6101e-02,  ..., 4.0573e-05,
          1.6074e-02, 1.6565e-02],
         [1.7120e-02, 1.6963e-02, 1.6101e-02,  ..., 9.9955e-01,
          1.6074e-02, 1.6565e-02],
         [9.4864e-01, 9.4911e-01, 9.5170e-01,  ..., 4.0573e-05,
          9.5178e-01, 9.5031e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 219:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0194, 0.0191, 0.0200,  ..., 0.0199, 0.0200, 0.0194],
         [0.0194, 0.0191, 0.0200,  ..., 0.0199, 0.0200, 0.0194],
         [0.0194, 0.0191, 0.0200,  ..., 0.0199, 0.0200, 0.0194],
         [0.9418, 0.9426, 0.9400,  ..., 0.9403, 0.9400, 0.9419]],
        [[0.0187, 0.0187, 0.0190,  ..., 0.0184, 0.0190, 0.0185],
         [0.0187, 0.0187, 0.0190,  ..., 0.0184, 0.0190, 0.0185],
         [0.0187, 0.0187, 0.0190,  ..., 0.0184, 0.0190, 0.0185],
         [0.9440, 0.9439, 0.9431,  ..., 0.9449, 0.9430, 0.9444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:10:07,833 [Process: 0] Synchronize training processes
2024-08-16 16:10:07,833 [Process: 0] Evaluating...
2024-08-16 16:10:07,835 [Process: 0] EPOCH 220:
2024-08-16 16:10:07,837 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5694e-02, 1.5744e-02, 1.6166e-02,  ..., 1.5599e-02,
          1.6780e-02, 1.5774e-02],
         [1.5694e-02, 1.5744e-02, 1.6166e-02,  ..., 1.5599e-02,
          1.6780e-02, 1.5774e-02],
         [1.5694e-02, 1.5744e-02, 1.6166e-02,  ..., 1.5599e-02,
          1.6780e-02, 1.5774e-02],
         [9.5292e-01, 9.5277e-01, 9.5150e-01,  ..., 9.5320e-01,
          9.4966e-01, 9.5268e-01]],
        [[1.6195e-02, 1.5740e-02, 1.6375e-02,  ..., 7.3648e-04,
          1.6214e-02, 1.6797e-02],
         [1.6195e-02, 1.5740e-02, 1.6375e-02,  ..., 7.3648e-04,
          1.6214e-02, 1.6797e-02],
         [1.6195e-02, 1.5740e-02, 1.6375e-02,  ..., 9.9779e-01,
          1.6214e-02, 1.6797e-02],
         [9.5141e-01, 9.5278e-01, 9.5088e-01,  ..., 7.3648e-04,
          9.5136e-01, 9.4961e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 220:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0190, 0.0192, 0.0192,  ..., 0.0200, 0.0206, 0.0192],
         [0.0190, 0.0192, 0.0192,  ..., 0.0200, 0.0206, 0.0192],
         [0.0190, 0.0192, 0.0192,  ..., 0.0200, 0.0206, 0.0192],
         [0.9429, 0.9425, 0.9425,  ..., 0.9400, 0.9383, 0.9425]],
        [[0.0195, 0.0193, 0.0192,  ..., 0.0193, 0.0191, 0.0199],
         [0.0195, 0.0193, 0.0192,  ..., 0.0193, 0.0191, 0.0199],
         [0.0195, 0.0193, 0.0192,  ..., 0.0193, 0.0191, 0.0199],
         [0.9414, 0.9421, 0.9424,  ..., 0.9421, 0.9428, 0.9404]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:10:09,925 [Process: 0] Synchronize training processes
2024-08-16 16:10:09,926 [Process: 0] Evaluating...
2024-08-16 16:10:09,928 [Process: 0] EPOCH 221:
2024-08-16 16:10:09,930 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0164, 0.0179, 0.0168,  ..., 0.0158, 0.0178, 0.0167],
         [0.0164, 0.0179, 0.0168,  ..., 0.0158, 0.0178, 0.0167],
         [0.0164, 0.0179, 0.0168,  ..., 0.0158, 0.0178, 0.0167],
         [0.9507, 0.9462, 0.9495,  ..., 0.9525, 0.9465, 0.9498]],
        [[0.0165, 0.0152, 0.0150,  ..., 0.0063, 0.0151, 0.0148],
         [0.0165, 0.0152, 0.0150,  ..., 0.0063, 0.0151, 0.0148],
         [0.0165, 0.0152, 0.0150,  ..., 0.9812, 0.0151, 0.0148],
         [0.9505, 0.9545, 0.9550,  ..., 0.0063, 0.9546, 0.9556]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 221:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:10:12,022 [Process: 0] Synchronize training processes
2024-08-16 16:10:12,023 [Process: 0] Evaluating...
2024-08-16 16:10:12,031 [Process: 0] EPOCH 222:
2024-08-16 16:10:12,033 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0192, 0.0199, 0.0195,  ..., 0.0200, 0.0180, 0.0186],
         [0.0192, 0.0199, 0.0195,  ..., 0.0200, 0.0180, 0.0186],
         [0.0192, 0.0199, 0.0195,  ..., 0.0200, 0.0180, 0.0186],
         [0.9423, 0.9402, 0.9416,  ..., 0.9399, 0.9459, 0.9443]],
        [[0.0195, 0.0183, 0.0195,  ..., 0.0183, 0.0205, 0.0192],
         [0.0195, 0.0183, 0.0195,  ..., 0.0183, 0.0205, 0.0192],
         [0.0195, 0.0183, 0.0195,  ..., 0.0183, 0.0205, 0.0192],
         [0.9414, 0.9452, 0.9415,  ..., 0.9452, 0.9385, 0.9424]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4706e-02, 1.6178e-02, 1.6606e-02,  ..., 1.5913e-02,
          1.6851e-02, 1.5216e-02],
         [1.4706e-02, 1.6178e-02, 1.6606e-02,  ..., 1.5913e-02,
          1.6851e-02, 1.5216e-02],
         [1.4706e-02, 1.6178e-02, 1.6606e-02,  ..., 1.5913e-02,
          1.6851e-02, 1.5216e-02],
         [9.5588e-01, 9.5147e-01, 9.5018e-01,  ..., 9.5226e-01,
          9.4945e-01, 9.5435e-01]],
        [[1.6103e-02, 1.5651e-02, 1.5716e-02,  ..., 1.9011e-04,
          1.4439e-02, 1.5199e-02],
         [1.6103e-02, 1.5651e-02, 1.5716e-02,  ..., 1.9011e-04,
          1.4439e-02, 1.5199e-02],
         [1.6103e-02, 1.5651e-02, 1.5716e-02,  ..., 9.9943e-01,
          1.4439e-02, 1.5199e-02],
         [9.5169e-01, 9.5305e-01, 9.5285e-01,  ..., 1.9011e-04,
          9.5668e-01, 9.5440e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 222:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:14,114 [Process: 0] Synchronize training processes
2024-08-16 16:10:14,114 [Process: 0] Evaluating...
2024-08-16 16:10:14,116 [Process: 0] EPOCH 223:
2024-08-16 16:10:14,118 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0197, 0.0189, 0.0192,  ..., 0.0196, 0.0197, 0.0181],
         [0.0197, 0.0189, 0.0192,  ..., 0.0196, 0.0197, 0.0181],
         [0.0197, 0.0189, 0.0192,  ..., 0.0196, 0.0197, 0.0181],
         [0.9408, 0.9433, 0.9425,  ..., 0.9412, 0.9409, 0.9458]],
        [[0.0183, 0.0191, 0.0187,  ..., 0.0193, 0.0187, 0.0181],
         [0.0183, 0.0191, 0.0187,  ..., 0.0193, 0.0187, 0.0181],
         [0.0183, 0.0191, 0.0187,  ..., 0.0193, 0.0187, 0.0181],
         [0.9452, 0.9428, 0.9438,  ..., 0.9421, 0.9438, 0.9456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6285e-02, 1.7615e-02, 1.4992e-02,  ..., 1.5594e-02,
          1.8610e-02, 1.5325e-02],
         [1.6285e-02, 1.7615e-02, 1.4992e-02,  ..., 1.5594e-02,
          1.8610e-02, 1.5325e-02],
         [1.6285e-02, 1.7615e-02, 1.4992e-02,  ..., 1.5594e-02,
          1.8610e-02, 1.5325e-02],
         [9.5114e-01, 9.4716e-01, 9.5503e-01,  ..., 9.5322e-01,
          9.4417e-01, 9.5403e-01]],
        [[1.5878e-02, 1.5428e-02, 1.6985e-02,  ..., 7.6017e-05,
          1.5176e-02, 1.5070e-02],
         [1.5878e-02, 1.5428e-02, 1.6985e-02,  ..., 7.6017e-05,
          1.5176e-02, 1.5070e-02],
         [1.5878e-02, 1.5428e-02, 1.6985e-02,  ..., 9.9977e-01,
          1.5176e-02, 1.5070e-02],
         [9.5236e-01, 9.5372e-01, 9.4905e-01,  ..., 7.6017e-05,
          9.5447e-01, 9.5479e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 223:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:16,227 [Process: 0] Synchronize training processes
2024-08-16 16:10:16,227 [Process: 0] Evaluating...
2024-08-16 16:10:16,229 [Process: 0] EPOCH 224:
2024-08-16 16:10:16,231 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0188, 0.0188, 0.0191,  ..., 0.0195, 0.0186, 0.0191],
         [0.0188, 0.0188, 0.0191,  ..., 0.0195, 0.0186, 0.0191],
         [0.0188, 0.0188, 0.0191,  ..., 0.0195, 0.0186, 0.0191],
         [0.9435, 0.9437, 0.9427,  ..., 0.9414, 0.9441, 0.9428]],
        [[0.0188, 0.0181, 0.0183,  ..., 0.0187, 0.0179, 0.0172],
         [0.0188, 0.0181, 0.0183,  ..., 0.0187, 0.0179, 0.0172],
         [0.0188, 0.0181, 0.0183,  ..., 0.0187, 0.0179, 0.0172],
         [0.9435, 0.9458, 0.9451,  ..., 0.9439, 0.9462, 0.9485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5185e-02, 1.4965e-02, 1.6100e-02,  ..., 1.6113e-02,
          2.0238e-02, 1.7962e-02],
         [1.5185e-02, 1.4965e-02, 1.6100e-02,  ..., 1.6113e-02,
          2.0238e-02, 1.7962e-02],
         [1.5185e-02, 1.4965e-02, 1.6100e-02,  ..., 1.6113e-02,
          2.0238e-02, 1.7962e-02],
         [9.5445e-01, 9.5510e-01, 9.5170e-01,  ..., 9.5166e-01,
          9.3928e-01, 9.4611e-01]],
        [[1.6786e-02, 1.6517e-02, 1.6023e-02,  ..., 9.7684e-04,
          1.4997e-02, 1.4627e-02],
         [1.6786e-02, 1.6517e-02, 1.6023e-02,  ..., 9.7684e-04,
          1.4997e-02, 1.4627e-02],
         [1.6786e-02, 1.6517e-02, 1.6023e-02,  ..., 9.9707e-01,
          1.4997e-02, 1.4627e-02],
         [9.4964e-01, 9.5045e-01, 9.5193e-01,  ..., 9.7684e-04,
          9.5501e-01, 9.5612e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 224:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:18,318 [Process: 0] Synchronize training processes
2024-08-16 16:10:18,319 [Process: 0] Evaluating...
2024-08-16 16:10:18,320 [Process: 0] EPOCH 225:
2024-08-16 16:10:18,322 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0191, 0.0193, 0.0186,  ..., 0.0201, 0.0201, 0.0198],
         [0.0191, 0.0193, 0.0186,  ..., 0.0201, 0.0201, 0.0198],
         [0.0191, 0.0193, 0.0186,  ..., 0.0201, 0.0201, 0.0198],
         [0.9427, 0.9422, 0.9442,  ..., 0.9396, 0.9397, 0.9407]],
        [[0.0191, 0.0192, 0.0178,  ..., 0.0179, 0.0186, 0.0183],
         [0.0191, 0.0192, 0.0178,  ..., 0.0179, 0.0186, 0.0183],
         [0.0191, 0.0192, 0.0178,  ..., 0.0179, 0.0186, 0.0183],
         [0.9426, 0.9423, 0.9467,  ..., 0.9464, 0.9442, 0.9450]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5436e-02, 1.4881e-02, 1.5963e-02,  ..., 1.6104e-02,
          1.6532e-02, 1.5473e-02],
         [1.5436e-02, 1.4881e-02, 1.5963e-02,  ..., 1.6104e-02,
          1.6532e-02, 1.5473e-02],
         [1.5436e-02, 1.4881e-02, 1.5963e-02,  ..., 1.6104e-02,
          1.6532e-02, 1.5473e-02],
         [9.5369e-01, 9.5536e-01, 9.5211e-01,  ..., 9.5169e-01,
          9.5040e-01, 9.5358e-01]],
        [[1.3820e-02, 1.5405e-02, 1.5235e-02,  ..., 9.7564e-04,
          1.5599e-02, 1.4601e-02],
         [1.3820e-02, 1.5405e-02, 1.5235e-02,  ..., 9.7564e-04,
          1.5599e-02, 1.4601e-02],
         [1.3820e-02, 1.5405e-02, 1.5235e-02,  ..., 9.9707e-01,
          1.5599e-02, 1.4601e-02],
         [9.5854e-01, 9.5378e-01, 9.5429e-01,  ..., 9.7564e-04,
          9.5320e-01, 9.5620e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 225:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0196, 0.0181, 0.0195,  ..., 0.0184, 0.0192, 0.0197],
         [0.0196, 0.0181, 0.0195,  ..., 0.0184, 0.0192, 0.0197],
         [0.0196, 0.0181, 0.0195,  ..., 0.0184, 0.0192, 0.0197],
         [0.9413, 0.9458, 0.9414,  ..., 0.9448, 0.9423, 0.9410]],
        [[0.0192, 0.0180, 0.0175,  ..., 0.0190, 0.0194, 0.0170],
         [0.0192, 0.0180, 0.0175,  ..., 0.0190, 0.0194, 0.0170],
         [0.0192, 0.0180, 0.0175,  ..., 0.0190, 0.0194, 0.0170],
         [0.9424, 0.9460, 0.9475,  ..., 0.9431, 0.9418, 0.9490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0166, 0.0149, 0.0163,  ..., 0.0154, 0.0143, 0.0164],
         [0.0166, 0.0149, 0.0163,  ..., 0.0154, 0.0143, 0.0164],
         [0.0166, 0.0149, 0.0163,  ..., 0.0154, 0.0143, 0.0164],
         [0.9503, 0.9552, 0.9511,  ..., 0.9538, 0.9571, 0.9507]],
        [[0.0157, 0.0150, 0.0168,  ..., 0.0026, 0.0172, 0.0159],
         [0.0157, 0.0150, 0.0168,  ..., 0.0019, 0.0172, 0.0159],
         [0.0157, 0.0150, 0.0168,  ..., 0.9937, 0.0172, 0.0159],
         [0.9530, 0.9549, 0.9496,  ..., 0.0019, 0.9485, 0.9523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 226:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:20,398 [Process: 0] Synchronize training processes
2024-08-16 16:10:20,398 [Process: 0] Evaluating...
2024-08-16 16:10:20,400 [Process: 0] EPOCH 226:
2024-08-16 16:10:20,402 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0180, 0.0185, 0.0190,  ..., 0.0194, 0.0181, 0.0178],
         [0.0180, 0.0185, 0.0190,  ..., 0.0194, 0.0181, 0.0178],
         [0.0180, 0.0185, 0.0190,  ..., 0.0194, 0.0181, 0.0178],
         [0.9460, 0.9445, 0.9430,  ..., 0.9419, 0.9456, 0.9465]],
        [[0.0181, 0.0188, 0.0185,  ..., 0.0185, 0.0180, 0.0178],
         [0.0181, 0.0188, 0.0185,  ..., 0.0185, 0.0180, 0.0178],
         [0.0181, 0.0188, 0.0185,  ..., 0.0185, 0.0180, 0.0178],
         [0.9457, 0.9435, 0.9445,  ..., 0.9445, 0.9461, 0.9465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5935e-02, 1.5325e-02, 1.4887e-02,  ..., 1.6170e-02,
          1.5709e-02, 1.7352e-02],
         [1.5935e-02, 1.5325e-02, 1.4887e-02,  ..., 1.6170e-02,
          1.5709e-02, 1.7352e-02],
         [1.5935e-02, 1.5325e-02, 1.4887e-02,  ..., 1.6170e-02,
          1.5709e-02, 1.7352e-02],
         [9.5220e-01, 9.5402e-01, 9.5534e-01,  ..., 9.5149e-01,
          9.5287e-01, 9.4794e-01]],
        [[1.7074e-02, 1.5860e-02, 1.5465e-02,  ..., 7.3861e-04,
          1.5194e-02, 1.5296e-02],
         [1.7074e-02, 1.5860e-02, 1.5465e-02,  ..., 4.9328e-04,
          1.5194e-02, 1.5296e-02],
         [1.7074e-02, 1.5860e-02, 1.5465e-02,  ..., 9.9827e-01,
          1.5194e-02, 1.5296e-02],
         [9.4878e-01, 9.5242e-01, 9.5361e-01,  ..., 4.9328e-04,
          9.5442e-01, 9.5411e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 227:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:22,461 [Process: 0] Synchronize training processes
2024-08-16 16:10:22,462 [Process: 0] Evaluating...
2024-08-16 16:10:22,465 [Process: 0] EPOCH 227:
2024-08-16 16:10:22,467 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0188, 0.0185, 0.0190,  ..., 0.0204, 0.0177, 0.0182],
         [0.0188, 0.0185, 0.0190,  ..., 0.0204, 0.0177, 0.0182],
         [0.0188, 0.0185, 0.0190,  ..., 0.0204, 0.0177, 0.0182],
         [0.9436, 0.9446, 0.9431,  ..., 0.9388, 0.9470, 0.9455]],
        [[0.0172, 0.0171, 0.0172,  ..., 0.0177, 0.0173, 0.0172],
         [0.0172, 0.0171, 0.0172,  ..., 0.0177, 0.0173, 0.0172],
         [0.0172, 0.0171, 0.0172,  ..., 0.0177, 0.0173, 0.0172],
         [0.9484, 0.9488, 0.9483,  ..., 0.9468, 0.9482, 0.9484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5157e-02, 1.5458e-02, 1.5936e-02,  ..., 1.8014e-02,
          1.4800e-02, 1.5708e-02],
         [1.5157e-02, 1.5458e-02, 1.5936e-02,  ..., 1.8014e-02,
          1.4800e-02, 1.5708e-02],
         [1.5157e-02, 1.5458e-02, 1.5936e-02,  ..., 1.8014e-02,
          1.4800e-02, 1.5708e-02],
         [9.5453e-01, 9.5363e-01, 9.5219e-01,  ..., 9.4596e-01,
          9.5560e-01, 9.5288e-01]],
        [[1.7840e-02, 1.3917e-02, 1.5421e-02,  ..., 4.3471e-04,
          1.5215e-02, 1.3791e-02],
         [1.7840e-02, 1.3917e-02, 1.5421e-02,  ..., 4.3471e-04,
          1.5215e-02, 1.3791e-02],
         [1.7840e-02, 1.3917e-02, 1.5421e-02,  ..., 9.9870e-01,
          1.5215e-02, 1.3791e-02],
         [9.4648e-01, 9.5825e-01, 9.5374e-01,  ..., 4.3471e-04,
          9.5436e-01, 9.5863e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 228:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:24,479 [Process: 0] Synchronize training processes
2024-08-16 16:10:24,480 [Process: 0] Evaluating...
2024-08-16 16:10:24,482 [Process: 0] EPOCH 228:
2024-08-16 16:10:24,483 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0178, 0.0185, 0.0182,  ..., 0.0207, 0.0176, 0.0178],
         [0.0178, 0.0185, 0.0182,  ..., 0.0207, 0.0176, 0.0178],
         [0.0178, 0.0185, 0.0182,  ..., 0.0207, 0.0176, 0.0178],
         [0.9465, 0.9445, 0.9454,  ..., 0.9379, 0.9473, 0.9467]],
        [[0.0183, 0.0166, 0.0177,  ..., 0.0182, 0.0162, 0.0174],
         [0.0183, 0.0166, 0.0177,  ..., 0.0182, 0.0162, 0.0174],
         [0.0183, 0.0166, 0.0177,  ..., 0.0182, 0.0162, 0.0174],
         [0.9450, 0.9501, 0.9470,  ..., 0.9453, 0.9513, 0.9479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0163, 0.0171, 0.0155,  ..., 0.0157, 0.0157, 0.0161],
         [0.0163, 0.0171, 0.0155,  ..., 0.0157, 0.0157, 0.0161],
         [0.0163, 0.0171, 0.0155,  ..., 0.0157, 0.0157, 0.0161],
         [0.9512, 0.9487, 0.9536,  ..., 0.9530, 0.9530, 0.9516]],
        [[0.0148, 0.0148, 0.0150,  ..., 0.0137, 0.0144, 0.0143],
         [0.0148, 0.0148, 0.0150,  ..., 0.0137, 0.0144, 0.0143],
         [0.0148, 0.0148, 0.0150,  ..., 0.9588, 0.0144, 0.0143],
         [0.9556, 0.9555, 0.9551,  ..., 0.0137, 0.9568, 0.9571]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 229:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:26,501 [Process: 0] Synchronize training processes
2024-08-16 16:10:26,502 [Process: 0] Evaluating...
2024-08-16 16:10:26,504 [Process: 0] EPOCH 229:
2024-08-16 16:10:26,506 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0187, 0.0180, 0.0179,  ..., 0.0203, 0.0181, 0.0172],
         [0.0187, 0.0180, 0.0179,  ..., 0.0203, 0.0181, 0.0172],
         [0.0187, 0.0180, 0.0179,  ..., 0.0203, 0.0181, 0.0172],
         [0.9438, 0.9461, 0.9462,  ..., 0.9391, 0.9458, 0.9485]],
        [[0.0178, 0.0170, 0.0162,  ..., 0.0177, 0.0174, 0.0174],
         [0.0178, 0.0170, 0.0162,  ..., 0.0177, 0.0174, 0.0174],
         [0.0178, 0.0170, 0.0162,  ..., 0.0177, 0.0174, 0.0174],
         [0.9466, 0.9489, 0.9515,  ..., 0.9469, 0.9477, 0.9477]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6135e-02, 1.5844e-02, 1.5620e-02,  ..., 1.5474e-02,
          1.5318e-02, 1.6888e-02],
         [1.6135e-02, 1.5844e-02, 1.5620e-02,  ..., 1.5474e-02,
          1.5318e-02, 1.6888e-02],
         [1.6135e-02, 1.5844e-02, 1.5620e-02,  ..., 1.5474e-02,
          1.5318e-02, 1.6888e-02],
         [9.5160e-01, 9.5247e-01, 9.5314e-01,  ..., 9.5358e-01,
          9.5405e-01, 9.4934e-01]],
        [[1.4427e-02, 1.5820e-02, 1.5558e-02,  ..., 3.0911e-03,
          1.4587e-02, 1.5595e-02],
         [1.4427e-02, 1.5820e-02, 1.5558e-02,  ..., 8.7810e-04,
          1.4587e-02, 1.5595e-02],
         [1.4427e-02, 1.5820e-02, 1.5558e-02,  ..., 9.9515e-01,
          1.4587e-02, 1.5595e-02],
         [9.5672e-01, 9.5254e-01, 9.5333e-01,  ..., 8.7810e-04,
          9.5624e-01, 9.5322e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 230:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:28,506 [Process: 0] Synchronize training processes
2024-08-16 16:10:28,506 [Process: 0] Evaluating...
2024-08-16 16:10:28,508 [Process: 0] EPOCH 230:
2024-08-16 16:10:28,510 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0183, 0.0175, 0.0173,  ..., 0.0212, 0.0181, 0.0183],
         [0.0183, 0.0175, 0.0173,  ..., 0.0212, 0.0181, 0.0183],
         [0.0183, 0.0175, 0.0173,  ..., 0.0212, 0.0181, 0.0183],
         [0.9451, 0.9476, 0.9481,  ..., 0.9363, 0.9456, 0.9450]],
        [[0.0172, 0.0175, 0.0155,  ..., 0.0181, 0.0171, 0.0158],
         [0.0172, 0.0175, 0.0155,  ..., 0.0181, 0.0171, 0.0158],
         [0.0172, 0.0175, 0.0155,  ..., 0.0181, 0.0171, 0.0158],
         [0.9485, 0.9475, 0.9535,  ..., 0.9458, 0.9486, 0.9527]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5085e-02, 1.5206e-02, 1.3321e-02,  ..., 1.6747e-02,
          1.7334e-02, 1.4547e-02],
         [1.5085e-02, 1.5206e-02, 1.3321e-02,  ..., 1.6747e-02,
          1.7334e-02, 1.4547e-02],
         [1.5085e-02, 1.5206e-02, 1.3321e-02,  ..., 1.6747e-02,
          1.7334e-02, 1.4547e-02],
         [9.5474e-01, 9.5438e-01, 9.6004e-01,  ..., 9.4976e-01,
          9.4800e-01, 9.5636e-01]],
        [[1.5604e-02, 1.4651e-02, 1.4915e-02,  ..., 1.9996e-03,
          1.6186e-02, 1.5817e-02],
         [1.5604e-02, 1.4651e-02, 1.4915e-02,  ..., 8.7155e-04,
          1.6186e-02, 1.5817e-02],
         [1.5604e-02, 1.4651e-02, 1.4915e-02,  ..., 9.9626e-01,
          1.6186e-02, 1.5817e-02],
         [9.5319e-01, 9.5605e-01, 9.5525e-01,  ..., 8.7155e-04,
          9.5144e-01, 9.5255e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 231:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:30,611 [Process: 0] Synchronize training processes
2024-08-16 16:10:30,612 [Process: 0] Evaluating...
2024-08-16 16:10:30,614 [Process: 0] EPOCH 231:
2024-08-16 16:10:30,616 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0186, 0.0180, 0.0174,  ..., 0.0199, 0.0189, 0.0175],
         [0.0186, 0.0180, 0.0174,  ..., 0.0199, 0.0189, 0.0175],
         [0.0186, 0.0180, 0.0174,  ..., 0.0199, 0.0189, 0.0175],
         [0.9443, 0.9460, 0.9478,  ..., 0.9404, 0.9433, 0.9474]],
        [[0.0159, 0.0171, 0.0153,  ..., 0.0162, 0.0166, 0.0153],
         [0.0159, 0.0171, 0.0153,  ..., 0.0162, 0.0166, 0.0153],
         [0.0159, 0.0171, 0.0153,  ..., 0.0162, 0.0166, 0.0153],
         [0.9522, 0.9486, 0.9542,  ..., 0.9515, 0.9501, 0.9542]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5474e-02, 1.5429e-02, 1.4601e-02,  ..., 1.5655e-02,
          1.6057e-02, 1.3563e-02],
         [1.5474e-02, 1.5429e-02, 1.4601e-02,  ..., 1.5655e-02,
          1.6057e-02, 1.3563e-02],
         [1.5474e-02, 1.5429e-02, 1.4601e-02,  ..., 1.5655e-02,
          1.6057e-02, 1.3563e-02],
         [9.5358e-01, 9.5371e-01, 9.5620e-01,  ..., 9.5304e-01,
          9.5183e-01, 9.5931e-01]],
        [[1.4558e-02, 1.5430e-02, 1.3909e-02,  ..., 2.9983e-04,
          1.4287e-02, 1.4382e-02],
         [1.4558e-02, 1.5430e-02, 1.3909e-02,  ..., 2.9983e-04,
          1.4287e-02, 1.4382e-02],
         [1.4558e-02, 1.5430e-02, 1.3909e-02,  ..., 9.9910e-01,
          1.4287e-02, 1.4382e-02],
         [9.5633e-01, 9.5371e-01, 9.5827e-01,  ..., 2.9983e-04,
          9.5714e-01, 9.5686e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 232:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:32,701 [Process: 0] Synchronize training processes
2024-08-16 16:10:32,701 [Process: 0] Evaluating...
2024-08-16 16:10:32,709 [Process: 0] EPOCH 232:
2024-08-16 16:10:32,711 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0176, 0.0162, 0.0163,  ..., 0.0210, 0.0177, 0.0174],
         [0.0176, 0.0162, 0.0163,  ..., 0.0210, 0.0177, 0.0174],
         [0.0176, 0.0162, 0.0163,  ..., 0.0210, 0.0177, 0.0174],
         [0.9471, 0.9514, 0.9511,  ..., 0.9370, 0.9469, 0.9478]],
        [[0.0172, 0.0172, 0.0170,  ..., 0.0171, 0.0173, 0.0175],
         [0.0172, 0.0172, 0.0170,  ..., 0.0171, 0.0173, 0.0175],
         [0.0172, 0.0172, 0.0170,  ..., 0.0171, 0.0173, 0.0175],
         [0.9484, 0.9484, 0.9491,  ..., 0.9487, 0.9482, 0.9476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0146, 0.0153, 0.0157,  ..., 0.0146, 0.0175, 0.0154],
         [0.0146, 0.0153, 0.0157,  ..., 0.0146, 0.0175, 0.0154],
         [0.0146, 0.0153, 0.0157,  ..., 0.0146, 0.0175, 0.0154],
         [0.9561, 0.9541, 0.9528,  ..., 0.9561, 0.9474, 0.9539]],
        [[0.0150, 0.0146, 0.0133,  ..., 0.0086, 0.0143, 0.0144],
         [0.0150, 0.0146, 0.0133,  ..., 0.0086, 0.0143, 0.0144],
         [0.0150, 0.0146, 0.0133,  ..., 0.9742, 0.0143, 0.0144],
         [0.9549, 0.9562, 0.9600,  ..., 0.0086, 0.9570, 0.9569]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 233:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:34,689 [Process: 0] Synchronize training processes
2024-08-16 16:10:34,690 [Process: 0] Evaluating...
2024-08-16 16:10:34,692 [Process: 0] EPOCH 233:
2024-08-16 16:10:34,694 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0170, 0.0174, 0.0169,  ..., 0.0196, 0.0176, 0.0174],
         [0.0170, 0.0174, 0.0169,  ..., 0.0196, 0.0176, 0.0174],
         [0.0170, 0.0174, 0.0169,  ..., 0.0196, 0.0176, 0.0174],
         [0.9490, 0.9478, 0.9492,  ..., 0.9412, 0.9472, 0.9479]],
        [[0.0162, 0.0173, 0.0166,  ..., 0.0170, 0.0160, 0.0161],
         [0.0162, 0.0173, 0.0166,  ..., 0.0170, 0.0160, 0.0161],
         [0.0162, 0.0173, 0.0166,  ..., 0.0170, 0.0160, 0.0161],
         [0.9513, 0.9482, 0.9502,  ..., 0.9489, 0.9519, 0.9516]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0133, 0.0149, 0.0160,  ..., 0.0157, 0.0158, 0.0143],
         [0.0133, 0.0149, 0.0160,  ..., 0.0157, 0.0158, 0.0143],
         [0.0133, 0.0149, 0.0160,  ..., 0.0157, 0.0158, 0.0143],
         [0.9600, 0.9552, 0.9519,  ..., 0.9528, 0.9526, 0.9570]],
        [[0.0144, 0.0133, 0.0138,  ..., 0.0012, 0.0139, 0.0130],
         [0.0144, 0.0133, 0.0138,  ..., 0.0012, 0.0139, 0.0130],
         [0.0144, 0.0133, 0.0138,  ..., 0.9963, 0.0139, 0.0130],
         [0.9568, 0.9601, 0.9587,  ..., 0.0012, 0.9583, 0.9610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 234:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:36,705 [Process: 0] Synchronize training processes
2024-08-16 16:10:36,706 [Process: 0] Evaluating...
2024-08-16 16:10:36,707 [Process: 0] EPOCH 234:
2024-08-16 16:10:36,709 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0179, 0.0165, 0.0178,  ..., 0.0200, 0.0174, 0.0184],
         [0.0179, 0.0165, 0.0178,  ..., 0.0200, 0.0174, 0.0184],
         [0.0179, 0.0165, 0.0178,  ..., 0.0200, 0.0174, 0.0184],
         [0.9463, 0.9504, 0.9466,  ..., 0.9401, 0.9477, 0.9447]],
        [[0.0158, 0.0175, 0.0166,  ..., 0.0160, 0.0179, 0.0176],
         [0.0158, 0.0175, 0.0166,  ..., 0.0160, 0.0179, 0.0176],
         [0.0158, 0.0175, 0.0166,  ..., 0.0160, 0.0179, 0.0176],
         [0.9526, 0.9475, 0.9501,  ..., 0.9520, 0.9462, 0.9471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5341e-02, 1.3671e-02, 1.4524e-02,  ..., 1.5296e-02,
          1.5971e-02, 1.3678e-02],
         [1.5341e-02, 1.3671e-02, 1.4524e-02,  ..., 1.5296e-02,
          1.5971e-02, 1.3678e-02],
         [1.5341e-02, 1.3671e-02, 1.4524e-02,  ..., 1.5296e-02,
          1.5971e-02, 1.3678e-02],
         [9.5398e-01, 9.5899e-01, 9.5643e-01,  ..., 9.5411e-01,
          9.5209e-01, 9.5897e-01]],
        [[1.4241e-02, 1.4404e-02, 1.2935e-02,  ..., 5.4108e-04,
          1.4436e-02, 1.3517e-02],
         [1.4241e-02, 1.4404e-02, 1.2935e-02,  ..., 5.4108e-04,
          1.4436e-02, 1.3517e-02],
         [1.4241e-02, 1.4404e-02, 1.2935e-02,  ..., 9.9838e-01,
          1.4436e-02, 1.3517e-02],
         [9.5728e-01, 9.5679e-01, 9.6120e-01,  ..., 5.4108e-04,
          9.5669e-01, 9.5945e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 235:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:38,675 [Process: 0] Synchronize training processes
2024-08-16 16:10:38,675 [Process: 0] Evaluating...
2024-08-16 16:10:38,677 [Process: 0] EPOCH 235:
2024-08-16 16:10:38,679 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0166, 0.0169, 0.0161,  ..., 0.0209, 0.0178, 0.0174],
         [0.0166, 0.0169, 0.0161,  ..., 0.0209, 0.0178, 0.0174],
         [0.0166, 0.0169, 0.0161,  ..., 0.0209, 0.0178, 0.0174],
         [0.9503, 0.9493, 0.9518,  ..., 0.9374, 0.9466, 0.9477]],
        [[0.0162, 0.0170, 0.0161,  ..., 0.0154, 0.0153, 0.0167],
         [0.0162, 0.0170, 0.0161,  ..., 0.0154, 0.0153, 0.0167],
         [0.0162, 0.0170, 0.0161,  ..., 0.0154, 0.0153, 0.0167],
         [0.9514, 0.9490, 0.9517,  ..., 0.9539, 0.9540, 0.9498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4521e-02, 1.4559e-02, 1.4856e-02,  ..., 1.4928e-02,
          1.5899e-02, 1.5311e-02],
         [1.4521e-02, 1.4559e-02, 1.4856e-02,  ..., 1.4928e-02,
          1.5899e-02, 1.5311e-02],
         [1.4521e-02, 1.4559e-02, 1.4856e-02,  ..., 1.4928e-02,
          1.5899e-02, 1.5311e-02],
         [9.5644e-01, 9.5632e-01, 9.5543e-01,  ..., 9.5522e-01,
          9.5230e-01, 9.5407e-01]],
        [[1.4574e-02, 1.3669e-02, 1.4725e-02,  ..., 2.6708e-04,
          1.4373e-02, 1.4178e-02],
         [1.4574e-02, 1.3669e-02, 1.4725e-02,  ..., 2.6708e-04,
          1.4373e-02, 1.4178e-02],
         [1.4574e-02, 1.3669e-02, 1.4725e-02,  ..., 9.9920e-01,
          1.4373e-02, 1.4178e-02],
         [9.5628e-01, 9.5899e-01, 9.5582e-01,  ..., 2.6708e-04,
          9.5688e-01, 9.5747e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 236:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:40,618 [Process: 0] Synchronize training processes
2024-08-16 16:10:40,618 [Process: 0] Evaluating...
2024-08-16 16:10:40,620 [Process: 0] EPOCH 236:
2024-08-16 16:10:40,622 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0168, 0.0164, 0.0156,  ..., 0.0242, 0.0159, 0.0160],
         [0.0168, 0.0164, 0.0156,  ..., 0.0242, 0.0159, 0.0160],
         [0.0168, 0.0164, 0.0156,  ..., 0.0242, 0.0159, 0.0160],
         [0.9495, 0.9507, 0.9533,  ..., 0.9275, 0.9523, 0.9519]],
        [[0.0166, 0.0170, 0.0165,  ..., 0.0152, 0.0161, 0.0159],
         [0.0166, 0.0170, 0.0165,  ..., 0.0152, 0.0161, 0.0159],
         [0.0166, 0.0170, 0.0165,  ..., 0.0152, 0.0161, 0.0159],
         [0.9502, 0.9491, 0.9504,  ..., 0.9543, 0.9516, 0.9524]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4724e-02, 1.4341e-02, 1.4926e-02,  ..., 1.5180e-02,
          1.3375e-02, 1.4811e-02],
         [1.4724e-02, 1.4341e-02, 1.4926e-02,  ..., 1.5180e-02,
          1.3375e-02, 1.4811e-02],
         [1.4724e-02, 1.4341e-02, 1.4926e-02,  ..., 1.5180e-02,
          1.3375e-02, 1.4811e-02],
         [9.5583e-01, 9.5698e-01, 9.5522e-01,  ..., 9.5446e-01,
          9.5987e-01, 9.5557e-01]],
        [[1.4967e-02, 1.3378e-02, 1.5209e-02,  ..., 4.2973e-04,
          1.4170e-02, 1.4214e-02],
         [1.4967e-02, 1.3378e-02, 1.5209e-02,  ..., 4.2973e-04,
          1.4170e-02, 1.4214e-02],
         [1.4967e-02, 1.3378e-02, 1.5209e-02,  ..., 9.9871e-01,
          1.4170e-02, 1.4214e-02],
         [9.5510e-01, 9.5986e-01, 9.5437e-01,  ..., 4.2973e-04,
          9.5749e-01, 9.5736e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 237:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:42,557 [Process: 0] Synchronize training processes
2024-08-16 16:10:42,557 [Process: 0] Evaluating...
2024-08-16 16:10:42,559 [Process: 0] EPOCH 237:
2024-08-16 16:10:42,561 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0151, 0.0167, 0.0162,  ..., 0.0201, 0.0177, 0.0168],
         [0.0151, 0.0167, 0.0162,  ..., 0.0201, 0.0177, 0.0168],
         [0.0151, 0.0167, 0.0162,  ..., 0.0201, 0.0177, 0.0168],
         [0.9548, 0.9500, 0.9515,  ..., 0.9397, 0.9470, 0.9495]],
        [[0.0168, 0.0172, 0.0174,  ..., 0.0171, 0.0168, 0.0158],
         [0.0168, 0.0172, 0.0174,  ..., 0.0171, 0.0168, 0.0158],
         [0.0168, 0.0172, 0.0174,  ..., 0.0171, 0.0168, 0.0158],
         [0.9496, 0.9483, 0.9477,  ..., 0.9487, 0.9495, 0.9527]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0148, 0.0146, 0.0145,  ..., 0.0139, 0.0138, 0.0138],
         [0.0148, 0.0146, 0.0145,  ..., 0.0139, 0.0138, 0.0138],
         [0.0148, 0.0146, 0.0145,  ..., 0.0139, 0.0138, 0.0138],
         [0.9557, 0.9563, 0.9566,  ..., 0.9583, 0.9586, 0.9586]],
        [[0.0139, 0.0140, 0.0135,  ..., 0.0030, 0.0134, 0.0144],
         [0.0139, 0.0140, 0.0135,  ..., 0.0030, 0.0134, 0.0144],
         [0.0139, 0.0140, 0.0135,  ..., 0.9911, 0.0134, 0.0144],
         [0.9583, 0.9581, 0.9594,  ..., 0.0030, 0.9599, 0.9568]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 238:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:44,473 [Process: 0] Synchronize training processes
2024-08-16 16:10:44,473 [Process: 0] Evaluating...
2024-08-16 16:10:44,475 [Process: 0] EPOCH 238:
2024-08-16 16:10:44,477 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0159, 0.0150, 0.0168,  ..., 0.0207, 0.0162, 0.0162],
         [0.0159, 0.0150, 0.0168,  ..., 0.0207, 0.0162, 0.0162],
         [0.0159, 0.0150, 0.0168,  ..., 0.0207, 0.0162, 0.0162],
         [0.9523, 0.9549, 0.9495,  ..., 0.9379, 0.9514, 0.9514]],
        [[0.0167, 0.0172, 0.0168,  ..., 0.0172, 0.0171, 0.0159],
         [0.0167, 0.0172, 0.0168,  ..., 0.0172, 0.0171, 0.0159],
         [0.0167, 0.0172, 0.0168,  ..., 0.0172, 0.0171, 0.0159],
         [0.9500, 0.9485, 0.9495,  ..., 0.9484, 0.9487, 0.9523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0149, 0.0154, 0.0133,  ..., 0.0144, 0.0143, 0.0149],
         [0.0149, 0.0154, 0.0133,  ..., 0.0144, 0.0143, 0.0149],
         [0.0149, 0.0154, 0.0133,  ..., 0.0144, 0.0143, 0.0149],
         [0.9553, 0.9539, 0.9600,  ..., 0.9567, 0.9571, 0.9554]],
        [[0.0159, 0.0129, 0.0152,  ..., 0.0078, 0.0144, 0.0139],
         [0.0159, 0.0129, 0.0152,  ..., 0.0078, 0.0144, 0.0139],
         [0.0159, 0.0129, 0.0152,  ..., 0.9767, 0.0144, 0.0139],
         [0.9524, 0.9612, 0.9543,  ..., 0.0078, 0.9568, 0.9583]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 239:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:46,391 [Process: 0] Synchronize training processes
2024-08-16 16:10:46,391 [Process: 0] Evaluating...
2024-08-16 16:10:46,393 [Process: 0] EPOCH 239:
2024-08-16 16:10:46,395 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:48,312 [Process: 0] Synchronize training processes
2024-08-16 16:10:48,313 [Process: 0] Evaluating...
2024-08-16 16:10:48,315 [Process: 0] EPOCH 240:
2024-08-16 16:10:48,317 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0154, 0.0160, 0.0146,  ..., 0.0208, 0.0162, 0.0165],
         [0.0154, 0.0160, 0.0146,  ..., 0.0208, 0.0162, 0.0165],
         [0.0154, 0.0160, 0.0146,  ..., 0.0208, 0.0162, 0.0165],
         [0.9537, 0.9520, 0.9561,  ..., 0.9376, 0.9515, 0.9505]],
        [[0.0169, 0.0171, 0.0158,  ..., 0.0169, 0.0173, 0.0168],
         [0.0169, 0.0171, 0.0158,  ..., 0.0169, 0.0173, 0.0168],
         [0.0169, 0.0171, 0.0158,  ..., 0.0169, 0.0173, 0.0168],
         [0.9492, 0.9486, 0.9526,  ..., 0.9492, 0.9482, 0.9496]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0154, 0.0132, 0.0136,  ..., 0.0155, 0.0139, 0.0141],
         [0.0154, 0.0132, 0.0136,  ..., 0.0155, 0.0139, 0.0141],
         [0.0154, 0.0132, 0.0136,  ..., 0.0155, 0.0139, 0.0141],
         [0.9539, 0.9605, 0.9593,  ..., 0.9536, 0.9584, 0.9578]],
        [[0.0138, 0.0133, 0.0132,  ..., 0.0053, 0.0130, 0.0139],
         [0.0138, 0.0133, 0.0132,  ..., 0.0053, 0.0130, 0.0139],
         [0.0138, 0.0133, 0.0132,  ..., 0.9840, 0.0130, 0.0139],
         [0.9586, 0.9600, 0.9603,  ..., 0.0053, 0.9610, 0.9583]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 240:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:50,231 [Process: 0] Synchronize training processes
2024-08-16 16:10:50,231 [Process: 0] Evaluating...
2024-08-16 16:10:50,233 [Process: 0] EPOCH 241:
2024-08-16 16:10:50,235 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0163, 0.0149, 0.0139,  ..., 0.0240, 0.0156, 0.0174],
         [0.0163, 0.0149, 0.0139,  ..., 0.0240, 0.0156, 0.0174],
         [0.0163, 0.0149, 0.0139,  ..., 0.0240, 0.0156, 0.0174],
         [0.9510, 0.9554, 0.9583,  ..., 0.9281, 0.9532, 0.9479]],
        [[0.0162, 0.0159, 0.0166,  ..., 0.0157, 0.0157, 0.0164],
         [0.0162, 0.0159, 0.0166,  ..., 0.0157, 0.0157, 0.0164],
         [0.0162, 0.0159, 0.0166,  ..., 0.0157, 0.0157, 0.0164],
         [0.9515, 0.9522, 0.9501,  ..., 0.9528, 0.9529, 0.9507]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6269e-02, 1.5696e-02, 1.6071e-02,  ..., 1.5897e-02,
          1.4830e-02, 1.5652e-02],
         [1.6269e-02, 1.5696e-02, 1.6071e-02,  ..., 1.5897e-02,
          1.4830e-02, 1.5652e-02],
         [1.6269e-02, 1.5696e-02, 1.6071e-02,  ..., 1.5897e-02,
          1.4830e-02, 1.5652e-02],
         [9.5119e-01, 9.5291e-01, 9.5179e-01,  ..., 9.5231e-01,
          9.5551e-01, 9.5305e-01]],
        [[1.4310e-02, 1.3557e-02, 1.3334e-02,  ..., 6.9360e-04,
          1.2435e-02, 1.5103e-02],
         [1.4310e-02, 1.3557e-02, 1.3334e-02,  ..., 6.9360e-04,
          1.2435e-02, 1.5103e-02],
         [1.4310e-02, 1.3557e-02, 1.3334e-02,  ..., 9.9792e-01,
          1.2435e-02, 1.5103e-02],
         [9.5707e-01, 9.5933e-01, 9.6000e-01,  ..., 6.9360e-04,
          9.6270e-01, 9.5469e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 241:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:10:52,148 [Process: 0] Synchronize training processes
2024-08-16 16:10:52,148 [Process: 0] Evaluating...
2024-08-16 16:10:52,157 [Process: 0] EPOCH 242:
2024-08-16 16:10:52,159 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0152, 0.0145, 0.0139,  ..., 0.0209, 0.0159, 0.0150],
         [0.0152, 0.0145, 0.0139,  ..., 0.0209, 0.0159, 0.0150],
         [0.0152, 0.0145, 0.0139,  ..., 0.0209, 0.0159, 0.0150],
         [0.9543, 0.9564, 0.9583,  ..., 0.9372, 0.9523, 0.9549]],
        [[0.0152, 0.0161, 0.0151,  ..., 0.0155, 0.0165, 0.0151],
         [0.0152, 0.0161, 0.0151,  ..., 0.0155, 0.0165, 0.0151],
         [0.0152, 0.0161, 0.0151,  ..., 0.0155, 0.0165, 0.0151],
         [0.9545, 0.9517, 0.9548,  ..., 0.9536, 0.9505, 0.9547]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0180, 0.0161, 0.0194,  ..., 0.0163, 0.0149, 0.0160],
         [0.0180, 0.0161, 0.0194,  ..., 0.0163, 0.0149, 0.0160],
         [0.0180, 0.0161, 0.0194,  ..., 0.0163, 0.0149, 0.0160],
         [0.9460, 0.9518, 0.9419,  ..., 0.9510, 0.9553, 0.9519]],
        [[0.0135, 0.0130, 0.0144,  ..., 0.0021, 0.0126, 0.0135],
         [0.0135, 0.0130, 0.0144,  ..., 0.0021, 0.0126, 0.0135],
         [0.0135, 0.0130, 0.0144,  ..., 0.9936, 0.0126, 0.0135],
         [0.9595, 0.9611, 0.9569,  ..., 0.0021, 0.9621, 0.9594]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 242:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:10:54,076 [Process: 0] Synchronize training processes
2024-08-16 16:10:54,076 [Process: 0] Evaluating...
2024-08-16 16:10:54,078 [Process: 0] EPOCH 243:
2024-08-16 16:10:54,080 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0159, 0.0157, 0.0150,  ..., 0.0188, 0.0153, 0.0170],
         [0.0159, 0.0157, 0.0150,  ..., 0.0188, 0.0153, 0.0170],
         [0.0159, 0.0157, 0.0150,  ..., 0.0188, 0.0153, 0.0170],
         [0.9522, 0.9528, 0.9550,  ..., 0.9436, 0.9540, 0.9490]],
        [[0.0157, 0.0164, 0.0144,  ..., 0.0168, 0.0164, 0.0154],
         [0.0157, 0.0164, 0.0144,  ..., 0.0168, 0.0164, 0.0154],
         [0.0157, 0.0164, 0.0144,  ..., 0.0168, 0.0164, 0.0154],
         [0.9530, 0.9509, 0.9569,  ..., 0.9495, 0.9507, 0.9539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0157, 0.0171, 0.0186,  ..., 0.0154, 0.0155, 0.0158],
         [0.0157, 0.0171, 0.0186,  ..., 0.0154, 0.0155, 0.0158],
         [0.0157, 0.0171, 0.0186,  ..., 0.0154, 0.0155, 0.0158],
         [0.9529, 0.9486, 0.9441,  ..., 0.9539, 0.9535, 0.9526]],
        [[0.0126, 0.0130, 0.0134,  ..., 0.0045, 0.0120, 0.0121],
         [0.0126, 0.0130, 0.0134,  ..., 0.0025, 0.0120, 0.0121],
         [0.0126, 0.0130, 0.0134,  ..., 0.9905, 0.0120, 0.0121],
         [0.9623, 0.9611, 0.9598,  ..., 0.0025, 0.9639, 0.9638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 243:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0147, 0.0166, 0.0155,  ..., 0.0202, 0.0164, 0.0158],
         [0.0147, 0.0166, 0.0155,  ..., 0.0202, 0.0164, 0.0158],
         [0.0147, 0.0166, 0.0155,  ..., 0.0202, 0.0164, 0.0158],
         [0.9558, 0.9501, 0.9535,  ..., 0.9393, 0.9507, 0.9526]],
        [[0.0166, 0.0147, 0.0162,  ..., 0.0150, 0.0161, 0.0167],
         [0.0166, 0.0147, 0.0162,  ..., 0.0150, 0.0161, 0.0167],
         [0.0166, 0.0147, 0.0162,  ..., 0.0150, 0.0161, 0.0167],
         [0.9503, 0.9559, 0.9513,  ..., 0.9551, 0.9517, 0.9500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:10:55,987 [Process: 0] Synchronize training processes
2024-08-16 16:10:55,987 [Process: 0] Evaluating...
2024-08-16 16:10:55,989 [Process: 0] EPOCH 244:
2024-08-16 16:10:55,991 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0143, 0.0139, 0.0144,  ..., 0.0135, 0.0151, 0.0141],
         [0.0143, 0.0139, 0.0144,  ..., 0.0135, 0.0151, 0.0141],
         [0.0143, 0.0139, 0.0144,  ..., 0.0135, 0.0151, 0.0141],
         [0.9570, 0.9582, 0.9569,  ..., 0.9595, 0.9546, 0.9576]],
        [[0.0136, 0.0146, 0.0144,  ..., 0.0039, 0.0126, 0.0134],
         [0.0136, 0.0146, 0.0144,  ..., 0.0021, 0.0126, 0.0134],
         [0.0136, 0.0146, 0.0144,  ..., 0.9919, 0.0126, 0.0134],
         [0.9592, 0.9562, 0.9567,  ..., 0.0021, 0.9621, 0.9598]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 244:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0155, 0.0151, 0.0157,  ..., 0.0156, 0.0151, 0.0160],
         [0.0155, 0.0151, 0.0157,  ..., 0.0156, 0.0151, 0.0160],
         [0.0155, 0.0151, 0.0157,  ..., 0.0156, 0.0151, 0.0160],
         [0.9536, 0.9547, 0.9529,  ..., 0.9532, 0.9548, 0.9519]],
        [[0.0158, 0.0159, 0.0151,  ..., 0.0144, 0.0172, 0.0154],
         [0.0158, 0.0159, 0.0151,  ..., 0.0144, 0.0172, 0.0154],
         [0.0158, 0.0159, 0.0151,  ..., 0.0144, 0.0172, 0.0154],
         [0.9525, 0.9522, 0.9548,  ..., 0.9567, 0.9483, 0.9539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:10:57,899 [Process: 0] Synchronize training processes
2024-08-16 16:10:57,899 [Process: 0] Evaluating...
2024-08-16 16:10:57,901 [Process: 0] EPOCH 245:
2024-08-16 16:10:57,903 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3715e-02, 1.4585e-02, 1.5884e-02,  ..., 1.2739e-02,
          1.4358e-02, 1.4920e-02],
         [1.3715e-02, 1.4585e-02, 1.5884e-02,  ..., 1.2739e-02,
          1.4358e-02, 1.4920e-02],
         [1.3715e-02, 1.4585e-02, 1.5884e-02,  ..., 1.2739e-02,
          1.4358e-02, 1.4920e-02],
         [9.5886e-01, 9.5624e-01, 9.5235e-01,  ..., 9.6178e-01,
          9.5693e-01, 9.5524e-01]],
        [[1.3079e-02, 1.3335e-02, 1.5842e-02,  ..., 4.9141e-05,
          1.3199e-02, 1.3244e-02],
         [1.3079e-02, 1.3335e-02, 1.5842e-02,  ..., 2.8309e-05,
          1.3199e-02, 1.3244e-02],
         [1.3079e-02, 1.3335e-02, 1.5842e-02,  ..., 9.9989e-01,
          1.3199e-02, 1.3244e-02],
         [9.6076e-01, 9.6000e-01, 9.5247e-01,  ..., 2.8309e-05,
          9.6040e-01, 9.6027e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 245:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0145, 0.0150, 0.0137,  ..., 0.0162, 0.0159, 0.0160],
         [0.0145, 0.0150, 0.0137,  ..., 0.0162, 0.0159, 0.0160],
         [0.0145, 0.0150, 0.0137,  ..., 0.0162, 0.0159, 0.0160],
         [0.9566, 0.9550, 0.9589,  ..., 0.9513, 0.9522, 0.9521]],
        [[0.0145, 0.0141, 0.0155,  ..., 0.0149, 0.0161, 0.0157],
         [0.0145, 0.0141, 0.0155,  ..., 0.0149, 0.0161, 0.0157],
         [0.0145, 0.0141, 0.0155,  ..., 0.0149, 0.0161, 0.0157],
         [0.9566, 0.9577, 0.9534,  ..., 0.9553, 0.9518, 0.9529]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:10:59,811 [Process: 0] Synchronize training processes
2024-08-16 16:10:59,811 [Process: 0] Evaluating...
2024-08-16 16:10:59,813 [Process: 0] EPOCH 246:
2024-08-16 16:10:59,815 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4037e-02, 1.1508e-02, 1.4011e-02,  ..., 1.1544e-02,
          1.3858e-02, 1.1627e-02],
         [1.4037e-02, 1.1508e-02, 1.4011e-02,  ..., 1.1544e-02,
          1.3858e-02, 1.1627e-02],
         [1.4037e-02, 1.1508e-02, 1.4011e-02,  ..., 1.1544e-02,
          1.3858e-02, 1.1627e-02],
         [9.5789e-01, 9.6548e-01, 9.5797e-01,  ..., 9.6537e-01,
          9.5843e-01, 9.6512e-01]],
        [[1.2397e-02, 1.4448e-02, 1.2958e-02,  ..., 3.9961e-05,
          1.3248e-02, 1.3074e-02],
         [1.2397e-02, 1.4448e-02, 1.2958e-02,  ..., 3.9961e-05,
          1.3248e-02, 1.3074e-02],
         [1.2397e-02, 1.4448e-02, 1.2958e-02,  ..., 9.9988e-01,
          1.3248e-02, 1.3074e-02],
         [9.6281e-01, 9.5666e-01, 9.6112e-01,  ..., 3.9961e-05,
          9.6026e-01, 9.6078e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 246:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0155, 0.0158, 0.0165,  ..., 0.0158, 0.0171, 0.0143],
         [0.0155, 0.0158, 0.0165,  ..., 0.0158, 0.0171, 0.0143],
         [0.0155, 0.0158, 0.0165,  ..., 0.0158, 0.0171, 0.0143],
         [0.9535, 0.9525, 0.9505,  ..., 0.9525, 0.9487, 0.9570]],
        [[0.0160, 0.0152, 0.0148,  ..., 0.0153, 0.0170, 0.0168],
         [0.0160, 0.0152, 0.0148,  ..., 0.0153, 0.0170, 0.0168],
         [0.0160, 0.0152, 0.0148,  ..., 0.0153, 0.0170, 0.0168],
         [0.9520, 0.9543, 0.9556,  ..., 0.9542, 0.9491, 0.9497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:01,733 [Process: 0] Synchronize training processes
2024-08-16 16:11:01,733 [Process: 0] Evaluating...
2024-08-16 16:11:01,735 [Process: 0] EPOCH 247:
2024-08-16 16:11:01,737 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0134, 0.0115, 0.0128,  ..., 0.0122, 0.0140, 0.0130],
         [0.0134, 0.0115, 0.0128,  ..., 0.0122, 0.0140, 0.0130],
         [0.0134, 0.0115, 0.0128,  ..., 0.0122, 0.0140, 0.0130],
         [0.9598, 0.9656, 0.9617,  ..., 0.9633, 0.9579, 0.9611]],
        [[0.0135, 0.0135, 0.0136,  ..., 0.0024, 0.0142, 0.0153],
         [0.0135, 0.0135, 0.0136,  ..., 0.0024, 0.0142, 0.0153],
         [0.0135, 0.0135, 0.0136,  ..., 0.9928, 0.0142, 0.0153],
         [0.9595, 0.9596, 0.9593,  ..., 0.0024, 0.9574, 0.9540]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 247:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0151, 0.0161, 0.0161,  ..., 0.0164, 0.0169, 0.0161],
         [0.0151, 0.0161, 0.0161,  ..., 0.0164, 0.0169, 0.0161],
         [0.0151, 0.0161, 0.0161,  ..., 0.0164, 0.0169, 0.0161],
         [0.9548, 0.9518, 0.9516,  ..., 0.9508, 0.9494, 0.9518]],
        [[0.0160, 0.0147, 0.0161,  ..., 0.0160, 0.0169, 0.0166],
         [0.0160, 0.0147, 0.0161,  ..., 0.0160, 0.0169, 0.0166],
         [0.0160, 0.0147, 0.0161,  ..., 0.0160, 0.0169, 0.0166],
         [0.9521, 0.9559, 0.9517,  ..., 0.9519, 0.9494, 0.9502]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:03,648 [Process: 0] Synchronize training processes
2024-08-16 16:11:03,648 [Process: 0] Evaluating...
2024-08-16 16:11:03,650 [Process: 0] EPOCH 248:
2024-08-16 16:11:03,652 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2387e-02, 1.3426e-02, 1.4738e-02,  ..., 1.2439e-02,
          1.2930e-02, 1.2337e-02],
         [1.2387e-02, 1.3426e-02, 1.4738e-02,  ..., 1.2439e-02,
          1.2930e-02, 1.2337e-02],
         [1.2387e-02, 1.3426e-02, 1.4738e-02,  ..., 1.2439e-02,
          1.2930e-02, 1.2337e-02],
         [9.6284e-01, 9.5972e-01, 9.5579e-01,  ..., 9.6268e-01,
          9.6121e-01, 9.6299e-01]],
        [[1.3460e-02, 1.3992e-02, 1.3555e-02,  ..., 1.0910e-04,
          1.4124e-02, 1.2963e-02],
         [1.3460e-02, 1.3992e-02, 1.3555e-02,  ..., 1.0910e-04,
          1.4124e-02, 1.2963e-02],
         [1.3460e-02, 1.3992e-02, 1.3555e-02,  ..., 9.9967e-01,
          1.4124e-02, 1.2963e-02],
         [9.5962e-01, 9.5802e-01, 9.5933e-01,  ..., 1.0910e-04,
          9.5763e-01, 9.6111e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 248:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0159, 0.0150, 0.0150,  ..., 0.0155, 0.0161, 0.0167],
         [0.0159, 0.0150, 0.0150,  ..., 0.0155, 0.0161, 0.0167],
         [0.0159, 0.0150, 0.0150,  ..., 0.0155, 0.0161, 0.0167],
         [0.9523, 0.9550, 0.9549,  ..., 0.9535, 0.9518, 0.9498]],
        [[0.0145, 0.0163, 0.0152,  ..., 0.0161, 0.0156, 0.0161],
         [0.0145, 0.0163, 0.0152,  ..., 0.0161, 0.0156, 0.0161],
         [0.0145, 0.0163, 0.0152,  ..., 0.0161, 0.0156, 0.0161],
         [0.9565, 0.9511, 0.9543,  ..., 0.9517, 0.9532, 0.9517]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:05,564 [Process: 0] Synchronize training processes
2024-08-16 16:11:05,564 [Process: 0] Evaluating...
2024-08-16 16:11:05,566 [Process: 0] EPOCH 249:
2024-08-16 16:11:05,568 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2571e-02, 1.3372e-02, 1.2499e-02,  ..., 1.1270e-02,
          1.2951e-02, 1.1858e-02],
         [1.2571e-02, 1.3372e-02, 1.2499e-02,  ..., 1.1270e-02,
          1.2951e-02, 1.1858e-02],
         [1.2571e-02, 1.3372e-02, 1.2499e-02,  ..., 1.1270e-02,
          1.2951e-02, 1.1858e-02],
         [9.6229e-01, 9.5988e-01, 9.6250e-01,  ..., 9.6619e-01,
          9.6115e-01, 9.6443e-01]],
        [[1.2928e-02, 1.3022e-02, 1.3007e-02,  ..., 6.9530e-05,
          1.3083e-02, 1.3711e-02],
         [1.2928e-02, 1.3022e-02, 1.3007e-02,  ..., 6.9530e-05,
          1.3083e-02, 1.3711e-02],
         [1.2928e-02, 1.3022e-02, 1.3007e-02,  ..., 9.9979e-01,
          1.3083e-02, 1.3711e-02],
         [9.6121e-01, 9.6093e-01, 9.6098e-01,  ..., 6.9530e-05,
          9.6075e-01, 9.5887e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 249:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0159, 0.0155, 0.0149,  ..., 0.0165, 0.0160, 0.0159],
         [0.0159, 0.0155, 0.0149,  ..., 0.0165, 0.0160, 0.0159],
         [0.0159, 0.0155, 0.0149,  ..., 0.0165, 0.0160, 0.0159],
         [0.9523, 0.9534, 0.9554,  ..., 0.9504, 0.9520, 0.9523]],
        [[0.0150, 0.0148, 0.0155,  ..., 0.0143, 0.0147, 0.0143],
         [0.0150, 0.0148, 0.0155,  ..., 0.0143, 0.0147, 0.0143],
         [0.0150, 0.0148, 0.0155,  ..., 0.0143, 0.0147, 0.0143],
         [0.9551, 0.9555, 0.9535,  ..., 0.9572, 0.9559, 0.9571]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:07,474 [Process: 0] Synchronize training processes
2024-08-16 16:11:07,474 [Process: 0] Evaluating...
2024-08-16 16:11:07,476 [Process: 0] EPOCH 250:
2024-08-16 16:11:07,478 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2806e-02, 1.1774e-02, 1.3101e-02,  ..., 1.3033e-02,
          1.3488e-02, 1.2676e-02],
         [1.2806e-02, 1.1774e-02, 1.3101e-02,  ..., 1.3033e-02,
          1.3488e-02, 1.2676e-02],
         [1.2806e-02, 1.1774e-02, 1.3101e-02,  ..., 1.3033e-02,
          1.3488e-02, 1.2676e-02],
         [9.6158e-01, 9.6468e-01, 9.6070e-01,  ..., 9.6090e-01,
          9.5954e-01, 9.6197e-01]],
        [[1.3077e-02, 1.4014e-02, 1.4181e-02,  ..., 1.9085e-04,
          1.3814e-02, 1.2505e-02],
         [1.3077e-02, 1.4014e-02, 1.4181e-02,  ..., 1.9085e-04,
          1.3814e-02, 1.2505e-02],
         [1.3077e-02, 1.4014e-02, 1.4181e-02,  ..., 9.9943e-01,
          1.3814e-02, 1.2505e-02],
         [9.6077e-01, 9.5796e-01, 9.5746e-01,  ..., 1.9085e-04,
          9.5856e-01, 9.6249e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 250:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0146, 0.0135,  ..., 0.0283, 0.0149, 0.0183],
         [0.0129, 0.0146, 0.0135,  ..., 0.0283, 0.0149, 0.0183],
         [0.0129, 0.0146, 0.0135,  ..., 0.0283, 0.0149, 0.0183],
         [0.9612, 0.9561, 0.9594,  ..., 0.9151, 0.9554, 0.9451]],
        [[0.0147, 0.0133, 0.0135,  ..., 0.0140, 0.0145, 0.0151],
         [0.0147, 0.0133, 0.0135,  ..., 0.0140, 0.0145, 0.0151],
         [0.0147, 0.0133, 0.0135,  ..., 0.0140, 0.0145, 0.0151],
         [0.9560, 0.9601, 0.9595,  ..., 0.9581, 0.9565, 0.9547]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:09,385 [Process: 0] Synchronize training processes
2024-08-16 16:11:09,386 [Process: 0] Evaluating...
2024-08-16 16:11:09,388 [Process: 0] EPOCH 251:
2024-08-16 16:11:09,390 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0125, 0.0130,  ..., 0.0130, 0.0151, 0.0129],
         [0.0129, 0.0125, 0.0130,  ..., 0.0130, 0.0151, 0.0129],
         [0.0129, 0.0125, 0.0130,  ..., 0.0130, 0.0151, 0.0129],
         [0.9613, 0.9624, 0.9609,  ..., 0.9610, 0.9547, 0.9614]],
        [[0.0129, 0.0127, 0.0117,  ..., 0.0017, 0.0132, 0.0143],
         [0.0129, 0.0127, 0.0117,  ..., 0.0017, 0.0132, 0.0143],
         [0.0129, 0.0127, 0.0117,  ..., 0.9948, 0.0132, 0.0143],
         [0.9612, 0.9620, 0.9648,  ..., 0.0017, 0.9605, 0.9572]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 251:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0150, 0.0155, 0.0151,  ..., 0.0164, 0.0169, 0.0165],
         [0.0150, 0.0155, 0.0151,  ..., 0.0164, 0.0169, 0.0165],
         [0.0150, 0.0155, 0.0151,  ..., 0.0164, 0.0169, 0.0165],
         [0.9550, 0.9535, 0.9546,  ..., 0.9508, 0.9494, 0.9504]],
        [[0.0167, 0.0150, 0.0147,  ..., 0.0153, 0.0149, 0.0158],
         [0.0167, 0.0150, 0.0147,  ..., 0.0153, 0.0149, 0.0158],
         [0.0167, 0.0150, 0.0147,  ..., 0.0153, 0.0149, 0.0158],
         [0.9499, 0.9551, 0.9558,  ..., 0.9540, 0.9553, 0.9525]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:11,298 [Process: 0] Synchronize training processes
2024-08-16 16:11:11,298 [Process: 0] Evaluating...
2024-08-16 16:11:11,306 [Process: 0] EPOCH 252:
2024-08-16 16:11:11,308 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0111, 0.0123, 0.0124,  ..., 0.0127, 0.0146, 0.0133],
         [0.0111, 0.0123, 0.0124,  ..., 0.0127, 0.0146, 0.0133],
         [0.0111, 0.0123, 0.0124,  ..., 0.0127, 0.0146, 0.0133],
         [0.9667, 0.9631, 0.9627,  ..., 0.9619, 0.9563, 0.9601]],
        [[0.0140, 0.0125, 0.0128,  ..., 0.0012, 0.0129, 0.0130],
         [0.0140, 0.0125, 0.0128,  ..., 0.0012, 0.0129, 0.0130],
         [0.0140, 0.0125, 0.0128,  ..., 0.9965, 0.0129, 0.0130],
         [0.9579, 0.9626, 0.9616,  ..., 0.0012, 0.9614, 0.9611]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 252:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0154, 0.0142, 0.0144,  ..., 0.0170, 0.0143, 0.0159],
         [0.0154, 0.0142, 0.0144,  ..., 0.0170, 0.0143, 0.0159],
         [0.0154, 0.0142, 0.0144,  ..., 0.0170, 0.0143, 0.0159],
         [0.9537, 0.9573, 0.9567,  ..., 0.9489, 0.9570, 0.9522]],
        [[0.0153, 0.0161, 0.0156,  ..., 0.0149, 0.0159, 0.0152],
         [0.0153, 0.0161, 0.0156,  ..., 0.0149, 0.0159, 0.0152],
         [0.0153, 0.0161, 0.0156,  ..., 0.0149, 0.0159, 0.0152],
         [0.9541, 0.9516, 0.9532,  ..., 0.9554, 0.9523, 0.9545]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 16:11:13,217 [Process: 0] Synchronize training processes
2024-08-16 16:11:13,218 [Process: 0] Evaluating...
2024-08-16 16:11:13,220 [Process: 0] EPOCH 253:
2024-08-16 16:11:13,222 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4971e-02, 1.3733e-02, 1.3205e-02,  ..., 1.2123e-02,
          1.2227e-02, 1.1745e-02],
         [1.4971e-02, 1.3733e-02, 1.3205e-02,  ..., 1.2123e-02,
          1.2227e-02, 1.1745e-02],
         [1.4971e-02, 1.3733e-02, 1.3205e-02,  ..., 1.2123e-02,
          1.2227e-02, 1.1745e-02],
         [9.5509e-01, 9.5880e-01, 9.6038e-01,  ..., 9.6363e-01,
          9.6332e-01, 9.6477e-01]],
        [[1.2328e-02, 1.2934e-02, 1.4079e-02,  ..., 3.9765e-04,
          1.2745e-02, 1.3544e-02],
         [1.2328e-02, 1.2934e-02, 1.4079e-02,  ..., 3.9765e-04,
          1.2745e-02, 1.3544e-02],
         [1.2328e-02, 1.2934e-02, 1.4079e-02,  ..., 9.9881e-01,
          1.2745e-02, 1.3544e-02],
         [9.6302e-01, 9.6120e-01, 9.5776e-01,  ..., 3.9765e-04,
          9.6176e-01, 9.5937e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 253:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0157, 0.0159, 0.0147,  ..., 0.0168, 0.0150, 0.0151],
         [0.0157, 0.0159, 0.0147,  ..., 0.0168, 0.0150, 0.0151],
         [0.0157, 0.0159, 0.0147,  ..., 0.0168, 0.0150, 0.0151],
         [0.9529, 0.9523, 0.9559,  ..., 0.9496, 0.9550, 0.9548]],
        [[0.0138, 0.0142, 0.0157,  ..., 0.0150, 0.0149, 0.0152],
         [0.0138, 0.0142, 0.0157,  ..., 0.0150, 0.0149, 0.0152],
         [0.0138, 0.0142, 0.0157,  ..., 0.0150, 0.0149, 0.0152],
         [0.9586, 0.9574, 0.9530,  ..., 0.9551, 0.9553, 0.9544]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:11:15,149 [Process: 0] Synchronize training processes
2024-08-16 16:11:15,149 [Process: 0] Evaluating...
2024-08-16 16:11:15,151 [Process: 0] EPOCH 254:
2024-08-16 16:11:15,153 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0153, 0.0137, 0.0133,  ..., 0.0128, 0.0131, 0.0135],
         [0.0153, 0.0137, 0.0133,  ..., 0.0128, 0.0131, 0.0135],
         [0.0153, 0.0137, 0.0133,  ..., 0.0128, 0.0131, 0.0135],
         [0.9541, 0.9590, 0.9600,  ..., 0.9616, 0.9606, 0.9594]],
        [[0.0127, 0.0129, 0.0124,  ..., 0.0017, 0.0124, 0.0124],
         [0.0127, 0.0129, 0.0124,  ..., 0.0017, 0.0124, 0.0124],
         [0.0127, 0.0129, 0.0124,  ..., 0.9948, 0.0124, 0.0124],
         [0.9620, 0.9612, 0.9628,  ..., 0.0017, 0.9628, 0.9627]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 254:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0130, 0.0139, 0.0154,  ..., 0.0192, 0.0146, 0.0136],
         [0.0130, 0.0139, 0.0154,  ..., 0.0192, 0.0146, 0.0136],
         [0.0130, 0.0139, 0.0154,  ..., 0.0192, 0.0146, 0.0136],
         [0.9610, 0.9582, 0.9539,  ..., 0.9424, 0.9563, 0.9593]],
        [[0.0143, 0.0139, 0.0141,  ..., 0.0146, 0.0147, 0.0154],
         [0.0143, 0.0139, 0.0141,  ..., 0.0146, 0.0147, 0.0154],
         [0.0143, 0.0139, 0.0141,  ..., 0.0146, 0.0147, 0.0154],
         [0.9572, 0.9583, 0.9577,  ..., 0.9563, 0.9558, 0.9538]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0140, 0.0157, 0.0142,  ..., 0.0113, 0.0102, 0.0141],
         [0.0140, 0.0157, 0.0142,  ..., 0.0113, 0.0102, 0.0141],
         [0.0140, 0.0157, 0.0142,  ..., 0.0113, 0.0102, 0.0141],
         [0.9580, 0.9528, 0.9573,  ..., 0.9661, 0.9694, 0.9577]],
        [[0.0119, 0.0121, 0.0121,  ..., 0.0070, 0.0111, 0.0129],
         [0.0119, 0.0121, 0.0121,  ..., 0.0070, 0.0111, 0.0129],
         [0.0119, 0.0121, 0.0121,  ..., 0.9791, 0.0111, 0.0129],
         [0.9643, 0.9638, 0.9636,  ..., 0.0070, 0.9667, 0.9614]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:17,067 [Process: 0] Synchronize training processes
2024-08-16 16:11:17,067 [Process: 0] Evaluating...
2024-08-16 16:11:17,069 [Process: 0] EPOCH 255:
2024-08-16 16:11:17,071 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 255:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0144, 0.0147, 0.0140,  ..., 0.0155, 0.0150, 0.0144],
         [0.0144, 0.0147, 0.0140,  ..., 0.0155, 0.0150, 0.0144],
         [0.0144, 0.0147, 0.0140,  ..., 0.0155, 0.0150, 0.0144],
         [0.9568, 0.9559, 0.9581,  ..., 0.9535, 0.9551, 0.9568]],
        [[0.0155, 0.0154, 0.0138,  ..., 0.0143, 0.0140, 0.0140],
         [0.0155, 0.0154, 0.0138,  ..., 0.0143, 0.0140, 0.0140],
         [0.0155, 0.0154, 0.0138,  ..., 0.0143, 0.0140, 0.0140],
         [0.9536, 0.9537, 0.9585,  ..., 0.9572, 0.9579, 0.9580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3374e-02, 1.3722e-02, 1.5214e-02,  ..., 1.0972e-02,
          1.2422e-02, 1.3324e-02],
         [1.3374e-02, 1.3722e-02, 1.5214e-02,  ..., 1.0972e-02,
          1.2422e-02, 1.3324e-02],
         [1.3374e-02, 1.3722e-02, 1.5214e-02,  ..., 1.0972e-02,
          1.2422e-02, 1.3324e-02],
         [9.5988e-01, 9.5883e-01, 9.5436e-01,  ..., 9.6708e-01,
          9.6273e-01, 9.6003e-01]],
        [[1.2822e-02, 1.3156e-02, 1.2040e-02,  ..., 6.4333e-04,
          1.1845e-02, 1.2738e-02],
         [1.2822e-02, 1.3156e-02, 1.2040e-02,  ..., 6.4333e-04,
          1.1845e-02, 1.2738e-02],
         [1.2822e-02, 1.3156e-02, 1.2040e-02,  ..., 9.9807e-01,
          1.1845e-02, 1.2738e-02],
         [9.6153e-01, 9.6053e-01, 9.6388e-01,  ..., 6.4333e-04,
          9.6447e-01, 9.6179e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 256:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:11:18,983 [Process: 0] Synchronize training processes
2024-08-16 16:11:18,984 [Process: 0] Evaluating...
2024-08-16 16:11:18,986 [Process: 0] EPOCH 256:
2024-08-16 16:11:18,988 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0157, 0.0160, 0.0155,  ..., 0.0149, 0.0158, 0.0158],
         [0.0157, 0.0160, 0.0155,  ..., 0.0149, 0.0158, 0.0158],
         [0.0157, 0.0160, 0.0155,  ..., 0.0149, 0.0158, 0.0158],
         [0.9530, 0.9521, 0.9534,  ..., 0.9553, 0.9527, 0.9527]],
        [[0.0142, 0.0160, 0.0155,  ..., 0.0152, 0.0150, 0.0148],
         [0.0142, 0.0160, 0.0155,  ..., 0.0152, 0.0150, 0.0148],
         [0.0142, 0.0160, 0.0155,  ..., 0.0152, 0.0150, 0.0148],
         [0.9573, 0.9521, 0.9534,  ..., 0.9545, 0.9550, 0.9557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0135, 0.0144, 0.0137,  ..., 0.0118, 0.0141, 0.0135],
         [0.0135, 0.0144, 0.0137,  ..., 0.0118, 0.0141, 0.0135],
         [0.0135, 0.0144, 0.0137,  ..., 0.0118, 0.0141, 0.0135],
         [0.9594, 0.9568, 0.9590,  ..., 0.9645, 0.9577, 0.9595]],
        [[0.0127, 0.0137, 0.0128,  ..., 0.0031, 0.0126, 0.0129],
         [0.0127, 0.0137, 0.0128,  ..., 0.0025, 0.0126, 0.0129],
         [0.0127, 0.0137, 0.0128,  ..., 0.9919, 0.0126, 0.0129],
         [0.9619, 0.9589, 0.9617,  ..., 0.0025, 0.9621, 0.9612]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 257:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:11:20,896 [Process: 0] Synchronize training processes
2024-08-16 16:11:20,896 [Process: 0] Evaluating...
2024-08-16 16:11:20,898 [Process: 0] EPOCH 257:
2024-08-16 16:11:20,900 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0138, 0.0145,  ..., 0.0146, 0.0154, 0.0137],
         [0.0129, 0.0138, 0.0145,  ..., 0.0146, 0.0154, 0.0137],
         [0.0129, 0.0138, 0.0145,  ..., 0.0146, 0.0154, 0.0137],
         [0.9613, 0.9587, 0.9565,  ..., 0.9562, 0.9537, 0.9588]],
        [[0.0132, 0.0134, 0.0143,  ..., 0.0145, 0.0142, 0.0137],
         [0.0132, 0.0134, 0.0143,  ..., 0.0145, 0.0142, 0.0137],
         [0.0132, 0.0134, 0.0143,  ..., 0.0145, 0.0142, 0.0137],
         [0.9604, 0.9599, 0.9571,  ..., 0.9564, 0.9575, 0.9590]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0145, 0.0183, 0.0142,  ..., 0.0122, 0.0128, 0.0144],
         [0.0145, 0.0183, 0.0142,  ..., 0.0122, 0.0128, 0.0144],
         [0.0145, 0.0183, 0.0142,  ..., 0.0122, 0.0128, 0.0144],
         [0.9564, 0.9452, 0.9575,  ..., 0.9635, 0.9617, 0.9569]],
        [[0.0127, 0.0128, 0.0124,  ..., 0.0093, 0.0117, 0.0120],
         [0.0127, 0.0128, 0.0124,  ..., 0.0093, 0.0117, 0.0120],
         [0.0127, 0.0128, 0.0124,  ..., 0.9722, 0.0117, 0.0120],
         [0.9618, 0.9615, 0.9627,  ..., 0.0093, 0.9650, 0.9640]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 258:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:11:22,803 [Process: 0] Synchronize training processes
2024-08-16 16:11:22,803 [Process: 0] Evaluating...
2024-08-16 16:11:22,805 [Process: 0] EPOCH 258:
2024-08-16 16:11:22,807 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0133, 0.0149, 0.0134,  ..., 0.0135, 0.0147, 0.0136],
         [0.0133, 0.0149, 0.0134,  ..., 0.0135, 0.0147, 0.0136],
         [0.0133, 0.0149, 0.0134,  ..., 0.0135, 0.0147, 0.0136],
         [0.9602, 0.9554, 0.9597,  ..., 0.9595, 0.9558, 0.9592]],
        [[0.0147, 0.0136, 0.0127,  ..., 0.0129, 0.0136, 0.0132],
         [0.0147, 0.0136, 0.0127,  ..., 0.0129, 0.0136, 0.0132],
         [0.0147, 0.0136, 0.0127,  ..., 0.0129, 0.0136, 0.0132],
         [0.9560, 0.9591, 0.9620,  ..., 0.9614, 0.9592, 0.9603]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2771e-02, 1.3470e-02, 1.5358e-02,  ..., 1.3503e-02,
          1.2957e-02, 1.4964e-02],
         [1.2771e-02, 1.3470e-02, 1.5358e-02,  ..., 1.3503e-02,
          1.2957e-02, 1.4964e-02],
         [1.2771e-02, 1.3470e-02, 1.5358e-02,  ..., 1.3503e-02,
          1.2957e-02, 1.4964e-02],
         [9.6169e-01, 9.5959e-01, 9.5392e-01,  ..., 9.5949e-01,
          9.6113e-01, 9.5511e-01]],
        [[1.3395e-02, 1.2229e-02, 1.2837e-02,  ..., 8.1627e-04,
          1.2830e-02, 1.3237e-02],
         [1.3395e-02, 1.2229e-02, 1.2837e-02,  ..., 8.1627e-04,
          1.2830e-02, 1.3237e-02],
         [1.3395e-02, 1.2229e-02, 1.2837e-02,  ..., 9.9755e-01,
          1.2830e-02, 1.3237e-02],
         [9.5982e-01, 9.6331e-01, 9.6149e-01,  ..., 8.1627e-04,
          9.6151e-01, 9.6029e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 259:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:11:24,714 [Process: 0] Synchronize training processes
2024-08-16 16:11:24,715 [Process: 0] Evaluating...
2024-08-16 16:11:24,717 [Process: 0] EPOCH 259:
2024-08-16 16:11:24,719 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0134, 0.0138, 0.0142,  ..., 0.0145, 0.0153, 0.0152],
         [0.0134, 0.0138, 0.0142,  ..., 0.0145, 0.0153, 0.0152],
         [0.0134, 0.0138, 0.0142,  ..., 0.0145, 0.0153, 0.0152],
         [0.9599, 0.9585, 0.9574,  ..., 0.9565, 0.9541, 0.9543]],
        [[0.0137, 0.0137, 0.0141,  ..., 0.0129, 0.0140, 0.0134],
         [0.0137, 0.0137, 0.0141,  ..., 0.0129, 0.0140, 0.0134],
         [0.0137, 0.0137, 0.0141,  ..., 0.0129, 0.0140, 0.0134],
         [0.9589, 0.9590, 0.9577,  ..., 0.9613, 0.9579, 0.9598]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0138, 0.0124, 0.0149,  ..., 0.0126, 0.0132, 0.0120],
         [0.0138, 0.0124, 0.0149,  ..., 0.0126, 0.0132, 0.0120],
         [0.0138, 0.0124, 0.0149,  ..., 0.0126, 0.0132, 0.0120],
         [0.9586, 0.9627, 0.9552,  ..., 0.9621, 0.9604, 0.9641]],
        [[0.0134, 0.0137, 0.0132,  ..., 0.0014, 0.0136, 0.0124],
         [0.0134, 0.0137, 0.0132,  ..., 0.0014, 0.0136, 0.0124],
         [0.0134, 0.0137, 0.0132,  ..., 0.9959, 0.0136, 0.0124],
         [0.9598, 0.9590, 0.9605,  ..., 0.0014, 0.9591, 0.9627]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 260:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:11:26,634 [Process: 0] Synchronize training processes
2024-08-16 16:11:26,634 [Process: 0] Evaluating...
2024-08-16 16:11:26,636 [Process: 0] EPOCH 260:
2024-08-16 16:11:26,638 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0144, 0.0140, 0.0148,  ..., 0.0138, 0.0171, 0.0159],
         [0.0144, 0.0140, 0.0148,  ..., 0.0138, 0.0171, 0.0159],
         [0.0144, 0.0140, 0.0148,  ..., 0.0138, 0.0171, 0.0159],
         [0.9569, 0.9579, 0.9556,  ..., 0.9585, 0.9486, 0.9523]],
        [[0.0142, 0.0147, 0.0130,  ..., 0.0140, 0.0145, 0.0142],
         [0.0142, 0.0147, 0.0130,  ..., 0.0140, 0.0145, 0.0142],
         [0.0142, 0.0147, 0.0130,  ..., 0.0140, 0.0145, 0.0142],
         [0.9575, 0.9559, 0.9610,  ..., 0.9580, 0.9564, 0.9575]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6445e-02, 1.6997e-02, 1.4411e-02,  ..., 1.2096e-02,
          1.3882e-02, 1.2595e-02],
         [1.6445e-02, 1.6997e-02, 1.4411e-02,  ..., 1.2096e-02,
          1.3882e-02, 1.2595e-02],
         [1.6445e-02, 1.6997e-02, 1.4411e-02,  ..., 1.2096e-02,
          1.3882e-02, 1.2595e-02],
         [9.5067e-01, 9.4901e-01, 9.5677e-01,  ..., 9.6371e-01,
          9.5836e-01, 9.6222e-01]],
        [[1.2881e-02, 1.4023e-02, 1.2670e-02,  ..., 8.0899e-04,
          1.2878e-02, 1.1200e-02],
         [1.2881e-02, 1.4023e-02, 1.2670e-02,  ..., 8.0899e-04,
          1.2878e-02, 1.1200e-02],
         [1.2881e-02, 1.4023e-02, 1.2670e-02,  ..., 9.9757e-01,
          1.2878e-02, 1.1200e-02],
         [9.6136e-01, 9.5793e-01, 9.6199e-01,  ..., 8.0899e-04,
          9.6137e-01, 9.6640e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 261:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:11:28,542 [Process: 0] Synchronize training processes
2024-08-16 16:11:28,542 [Process: 0] Evaluating...
2024-08-16 16:11:28,544 [Process: 0] EPOCH 261:
2024-08-16 16:11:28,546 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0147, 0.0139, 0.0134,  ..., 0.0145, 0.0147, 0.0139],
         [0.0147, 0.0139, 0.0134,  ..., 0.0145, 0.0147, 0.0139],
         [0.0147, 0.0139, 0.0134,  ..., 0.0145, 0.0147, 0.0139],
         [0.9560, 0.9583, 0.9599,  ..., 0.9566, 0.9560, 0.9582]],
        [[0.0175, 0.0161, 0.0139,  ..., 0.0132, 0.0145, 0.0136],
         [0.0175, 0.0161, 0.0139,  ..., 0.0132, 0.0145, 0.0136],
         [0.0175, 0.0161, 0.0139,  ..., 0.0132, 0.0145, 0.0136],
         [0.9475, 0.9518, 0.9584,  ..., 0.9603, 0.9564, 0.9592]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7891e-02, 1.9756e-02, 2.0730e-02,  ..., 1.2504e-02,
          1.2022e-02, 1.5485e-02],
         [1.7891e-02, 1.9756e-02, 2.0730e-02,  ..., 1.2504e-02,
          1.2022e-02, 1.5485e-02],
         [1.7891e-02, 1.9756e-02, 2.0730e-02,  ..., 1.2504e-02,
          1.2022e-02, 1.5485e-02],
         [9.4633e-01, 9.4073e-01, 9.3781e-01,  ..., 9.6249e-01,
          9.6393e-01, 9.5355e-01]],
        [[1.2293e-02, 1.3239e-02, 1.2840e-02,  ..., 7.2567e-04,
          1.1681e-02, 1.1962e-02],
         [1.2293e-02, 1.3239e-02, 1.2840e-02,  ..., 7.2567e-04,
          1.1681e-02, 1.1962e-02],
         [1.2293e-02, 1.3239e-02, 1.2840e-02,  ..., 9.9782e-01,
          1.1681e-02, 1.1962e-02],
         [9.6312e-01, 9.6028e-01, 9.6148e-01,  ..., 7.2567e-04,
          9.6496e-01, 9.6411e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 262:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:11:30,470 [Process: 0] Synchronize training processes
2024-08-16 16:11:30,471 [Process: 0] Evaluating...
2024-08-16 16:11:30,479 [Process: 0] EPOCH 262:
2024-08-16 16:11:30,482 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0135, 0.0128, 0.0130,  ..., 0.0138, 0.0138, 0.0142],
         [0.0135, 0.0128, 0.0130,  ..., 0.0138, 0.0138, 0.0142],
         [0.0135, 0.0128, 0.0130,  ..., 0.0138, 0.0138, 0.0142],
         [0.9594, 0.9616, 0.9611,  ..., 0.9587, 0.9586, 0.9574]],
        [[0.0146, 0.0140, 0.0144,  ..., 0.0131, 0.0150, 0.0143],
         [0.0146, 0.0140, 0.0144,  ..., 0.0131, 0.0150, 0.0143],
         [0.0146, 0.0140, 0.0144,  ..., 0.0131, 0.0150, 0.0143],
         [0.9562, 0.9579, 0.9567,  ..., 0.9608, 0.9550, 0.9570]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4532e-02, 1.3314e-02, 1.2602e-02,  ..., 1.2597e-02,
          1.2849e-02, 1.1713e-02],
         [1.4532e-02, 1.3314e-02, 1.2602e-02,  ..., 1.2597e-02,
          1.2849e-02, 1.1713e-02],
         [1.4532e-02, 1.3314e-02, 1.2602e-02,  ..., 1.2597e-02,
          1.2849e-02, 1.1713e-02],
         [9.5640e-01, 9.6006e-01, 9.6220e-01,  ..., 9.6221e-01,
          9.6145e-01, 9.6486e-01]],
        [[1.4231e-02, 1.2243e-02, 1.4011e-02,  ..., 4.2621e-05,
          1.2744e-02, 1.1906e-02],
         [1.4231e-02, 1.2243e-02, 1.4011e-02,  ..., 4.2621e-05,
          1.2744e-02, 1.1906e-02],
         [1.4231e-02, 1.2243e-02, 1.4011e-02,  ..., 9.9987e-01,
          1.2744e-02, 1.1906e-02],
         [9.5731e-01, 9.6327e-01, 9.5797e-01,  ..., 4.2621e-05,
          9.6177e-01, 9.6428e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 263:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:11:32,469 [Process: 0] Synchronize training processes
2024-08-16 16:11:32,470 [Process: 0] Evaluating...
2024-08-16 16:11:32,472 [Process: 0] EPOCH 263:
2024-08-16 16:11:32,474 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:11:34,371 [Process: 0] Synchronize training processes
2024-08-16 16:11:34,371 [Process: 0] Evaluating...
2024-08-16 16:11:34,373 [Process: 0] EPOCH 264:
2024-08-16 16:11:34,375 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0138, 0.0134, 0.0131,  ..., 0.0126, 0.0134, 0.0134],
         [0.0138, 0.0134, 0.0131,  ..., 0.0126, 0.0134, 0.0134],
         [0.0138, 0.0134, 0.0131,  ..., 0.0126, 0.0134, 0.0134],
         [0.9587, 0.9597, 0.9606,  ..., 0.9621, 0.9597, 0.9599]],
        [[0.0136, 0.0139, 0.0137,  ..., 0.0136, 0.0133, 0.0140],
         [0.0136, 0.0139, 0.0137,  ..., 0.0136, 0.0133, 0.0140],
         [0.0136, 0.0139, 0.0137,  ..., 0.0136, 0.0133, 0.0140],
         [0.9591, 0.9582, 0.9588,  ..., 0.9591, 0.9600, 0.9581]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1919e-02, 1.1297e-02, 1.1748e-02,  ..., 1.2846e-02,
          1.2725e-02, 1.1187e-02],
         [1.1919e-02, 1.1297e-02, 1.1748e-02,  ..., 1.2846e-02,
          1.2725e-02, 1.1187e-02],
         [1.1919e-02, 1.1297e-02, 1.1748e-02,  ..., 1.2846e-02,
          1.2725e-02, 1.1187e-02],
         [9.6424e-01, 9.6611e-01, 9.6476e-01,  ..., 9.6146e-01,
          9.6183e-01, 9.6644e-01]],
        [[1.3931e-02, 1.3507e-02, 1.2397e-02,  ..., 2.6204e-04,
          1.4036e-02, 1.2656e-02],
         [1.3931e-02, 1.3507e-02, 1.2397e-02,  ..., 2.6204e-04,
          1.4036e-02, 1.2656e-02],
         [1.3931e-02, 1.3507e-02, 1.2397e-02,  ..., 9.9921e-01,
          1.4036e-02, 1.2656e-02],
         [9.5821e-01, 9.5948e-01, 9.6281e-01,  ..., 2.6204e-04,
          9.5789e-01, 9.6203e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 264:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:11:36,286 [Process: 0] Synchronize training processes
2024-08-16 16:11:36,286 [Process: 0] Evaluating...
2024-08-16 16:11:36,288 [Process: 0] EPOCH 265:
2024-08-16 16:11:36,290 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0140, 0.0135,  ..., 0.0139, 0.0151, 0.0137],
         [0.0129, 0.0140, 0.0135,  ..., 0.0139, 0.0151, 0.0137],
         [0.0129, 0.0140, 0.0135,  ..., 0.0139, 0.0151, 0.0137],
         [0.9614, 0.9581, 0.9594,  ..., 0.9582, 0.9546, 0.9588]],
        [[0.0148, 0.0137, 0.0144,  ..., 0.0139, 0.0145, 0.0137],
         [0.0148, 0.0137, 0.0144,  ..., 0.0139, 0.0145, 0.0137],
         [0.0148, 0.0137, 0.0144,  ..., 0.0139, 0.0145, 0.0137],
         [0.9557, 0.9590, 0.9568,  ..., 0.9584, 0.9566, 0.9588]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2292e-02, 1.2170e-02, 1.1849e-02,  ..., 1.1256e-02,
          1.2619e-02, 1.2468e-02],
         [1.2292e-02, 1.2170e-02, 1.1849e-02,  ..., 1.1256e-02,
          1.2619e-02, 1.2468e-02],
         [1.2292e-02, 1.2170e-02, 1.1849e-02,  ..., 1.1256e-02,
          1.2619e-02, 1.2468e-02],
         [9.6312e-01, 9.6349e-01, 9.6445e-01,  ..., 9.6623e-01,
          9.6214e-01, 9.6260e-01]],
        [[1.2699e-02, 1.1861e-02, 1.2562e-02,  ..., 7.9220e-05,
          1.2316e-02, 1.2075e-02],
         [1.2699e-02, 1.1861e-02, 1.2562e-02,  ..., 4.2106e-05,
          1.2316e-02, 1.2075e-02],
         [1.2699e-02, 1.1861e-02, 1.2562e-02,  ..., 9.9984e-01,
          1.2316e-02, 1.2075e-02],
         [9.6190e-01, 9.6442e-01, 9.6231e-01,  ..., 4.2106e-05,
          9.6305e-01, 9.6378e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 265:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:11:38,196 [Process: 0] Synchronize training processes
2024-08-16 16:11:38,196 [Process: 0] Evaluating...
2024-08-16 16:11:38,198 [Process: 0] EPOCH 266:
2024-08-16 16:11:38,200 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0141, 0.0138, 0.0133,  ..., 0.0141, 0.0137, 0.0133],
         [0.0141, 0.0138, 0.0133,  ..., 0.0141, 0.0137, 0.0133],
         [0.0141, 0.0138, 0.0133,  ..., 0.0141, 0.0137, 0.0133],
         [0.9576, 0.9587, 0.9602,  ..., 0.9578, 0.9589, 0.9600]],
        [[0.0136, 0.0133, 0.0127,  ..., 0.0137, 0.0129, 0.0135],
         [0.0136, 0.0133, 0.0127,  ..., 0.0137, 0.0129, 0.0135],
         [0.0136, 0.0133, 0.0127,  ..., 0.0137, 0.0129, 0.0135],
         [0.9591, 0.9601, 0.9618,  ..., 0.9590, 0.9612, 0.9594]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2732e-02, 1.1869e-02, 1.2019e-02,  ..., 1.1094e-02,
          1.1675e-02, 1.0731e-02],
         [1.2732e-02, 1.1869e-02, 1.2019e-02,  ..., 1.1094e-02,
          1.1675e-02, 1.0731e-02],
         [1.2732e-02, 1.1869e-02, 1.2019e-02,  ..., 1.1094e-02,
          1.1675e-02, 1.0731e-02],
         [9.6180e-01, 9.6439e-01, 9.6394e-01,  ..., 9.6672e-01,
          9.6498e-01, 9.6781e-01]],
        [[1.1293e-02, 1.2648e-02, 1.2301e-02,  ..., 2.1851e-03,
          1.1605e-02, 1.2152e-02],
         [1.1293e-02, 1.2648e-02, 1.2301e-02,  ..., 3.0097e-04,
          1.1605e-02, 1.2152e-02],
         [1.1293e-02, 1.2648e-02, 1.2301e-02,  ..., 9.9721e-01,
          1.1605e-02, 1.2152e-02],
         [9.6612e-01, 9.6206e-01, 9.6310e-01,  ..., 3.0097e-04,
          9.6518e-01, 9.6354e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 266:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0133, 0.0144, 0.0136,  ..., 0.0136, 0.0139, 0.0149],
         [0.0133, 0.0144, 0.0136,  ..., 0.0136, 0.0139, 0.0149],
         [0.0133, 0.0144, 0.0136,  ..., 0.0136, 0.0139, 0.0149],
         [0.9601, 0.9567, 0.9593,  ..., 0.9593, 0.9583, 0.9554]],
        [[0.0131, 0.0129, 0.0131,  ..., 0.0122, 0.0140, 0.0132],
         [0.0131, 0.0129, 0.0131,  ..., 0.0122, 0.0140, 0.0132],
         [0.0131, 0.0129, 0.0131,  ..., 0.0122, 0.0140, 0.0132],
         [0.9606, 0.9612, 0.9606,  ..., 0.9633, 0.9580, 0.9604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:40,095 [Process: 0] Synchronize training processes
2024-08-16 16:11:40,096 [Process: 0] Evaluating...
2024-08-16 16:11:40,098 [Process: 0] EPOCH 267:
2024-08-16 16:11:40,100 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1454e-02, 1.2797e-02, 1.2565e-02,  ..., 1.0832e-02,
          1.1631e-02, 1.0728e-02],
         [1.1454e-02, 1.2797e-02, 1.2565e-02,  ..., 1.0832e-02,
          1.1639e-02, 1.0728e-02],
         [1.1454e-02, 1.2797e-02, 1.2565e-02,  ..., 1.0832e-02,
          1.1631e-02, 1.0728e-02],
         [9.6564e-01, 9.6161e-01, 9.6231e-01,  ..., 9.6750e-01,
          9.6510e-01, 9.6782e-01]],
        [[1.2465e-02, 1.4024e-02, 1.2569e-02,  ..., 9.7515e-04,
          1.2479e-02, 1.2123e-02],
         [1.2465e-02, 1.4024e-02, 1.2569e-02,  ..., 1.1659e-04,
          1.2479e-02, 1.2123e-02],
         [1.2465e-02, 1.4024e-02, 1.2569e-02,  ..., 9.9879e-01,
          1.2479e-02, 1.2123e-02],
         [9.6260e-01, 9.5793e-01, 9.6229e-01,  ..., 1.1659e-04,
          9.6256e-01, 9.6363e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 267:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0135, 0.0134, 0.0133,  ..., 0.0127, 0.0163, 0.0134],
         [0.0135, 0.0134, 0.0133,  ..., 0.0127, 0.0163, 0.0134],
         [0.0135, 0.0134, 0.0133,  ..., 0.0127, 0.0163, 0.0134],
         [0.9595, 0.9599, 0.9601,  ..., 0.9619, 0.9511, 0.9599]],
        [[0.0134, 0.0136, 0.0127,  ..., 0.0146, 0.0131, 0.0124],
         [0.0134, 0.0136, 0.0127,  ..., 0.0146, 0.0131, 0.0124],
         [0.0134, 0.0136, 0.0127,  ..., 0.0146, 0.0131, 0.0124],
         [0.9597, 0.9591, 0.9620,  ..., 0.9563, 0.9606, 0.9628]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:41,998 [Process: 0] Synchronize training processes
2024-08-16 16:11:41,998 [Process: 0] Evaluating...
2024-08-16 16:11:42,000 [Process: 0] EPOCH 268:
2024-08-16 16:11:42,002 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0111, 0.0116, 0.0133,  ..., 0.0107, 0.0124, 0.0124],
         [0.0111, 0.0116, 0.0133,  ..., 0.0107, 0.0124, 0.0124],
         [0.0111, 0.0116, 0.0133,  ..., 0.0107, 0.0124, 0.0124],
         [0.9667, 0.9653, 0.9600,  ..., 0.9679, 0.9629, 0.9629]],
        [[0.0133, 0.0132, 0.0125,  ..., 0.0022, 0.0134, 0.0120],
         [0.0133, 0.0132, 0.0125,  ..., 0.0022, 0.0134, 0.0120],
         [0.0133, 0.0132, 0.0125,  ..., 0.9934, 0.0134, 0.0120],
         [0.9601, 0.9603, 0.9626,  ..., 0.0022, 0.9598, 0.9640]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 268:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0151, 0.0131, 0.0154,  ..., 0.0131, 0.0154, 0.0140],
         [0.0151, 0.0131, 0.0154,  ..., 0.0131, 0.0154, 0.0140],
         [0.0151, 0.0131, 0.0154,  ..., 0.0131, 0.0154, 0.0140],
         [0.9548, 0.9608, 0.9539,  ..., 0.9608, 0.9538, 0.9580]],
        [[0.0133, 0.0142, 0.0143,  ..., 0.0132, 0.0137, 0.0133],
         [0.0133, 0.0142, 0.0143,  ..., 0.0132, 0.0137, 0.0133],
         [0.0133, 0.0142, 0.0143,  ..., 0.0132, 0.0137, 0.0133],
         [0.9601, 0.9575, 0.9572,  ..., 0.9605, 0.9588, 0.9602]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:43,912 [Process: 0] Synchronize training processes
2024-08-16 16:11:43,912 [Process: 0] Evaluating...
2024-08-16 16:11:43,914 [Process: 0] EPOCH 269:
2024-08-16 16:11:43,916 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3048e-02, 1.1620e-02, 1.0887e-02,  ..., 1.0881e-02,
          1.2310e-02, 1.2012e-02],
         [1.3048e-02, 1.1620e-02, 1.0887e-02,  ..., 1.0881e-02,
          1.2310e-02, 1.2012e-02],
         [1.3048e-02, 1.1620e-02, 1.0887e-02,  ..., 1.0881e-02,
          1.2310e-02, 1.2012e-02],
         [9.6085e-01, 9.6514e-01, 9.6734e-01,  ..., 9.6736e-01,
          9.6307e-01, 9.6396e-01]],
        [[1.1512e-02, 1.2092e-02, 1.1783e-02,  ..., 2.6200e-03,
          1.2025e-02, 1.2462e-02],
         [1.1512e-02, 1.2092e-02, 1.1783e-02,  ..., 6.5861e-04,
          1.2025e-02, 1.2462e-02],
         [1.1512e-02, 1.2092e-02, 1.1783e-02,  ..., 9.9606e-01,
          1.2025e-02, 1.2462e-02],
         [9.6546e-01, 9.6372e-01, 9.6465e-01,  ..., 6.5861e-04,
          9.6392e-01, 9.6261e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 269:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0133, 0.0137, 0.0134,  ..., 0.0132, 0.0141, 0.0140],
         [0.0133, 0.0137, 0.0134,  ..., 0.0132, 0.0141, 0.0140],
         [0.0133, 0.0137, 0.0134,  ..., 0.0132, 0.0141, 0.0140],
         [0.9600, 0.9590, 0.9597,  ..., 0.9603, 0.9576, 0.9580]],
        [[0.0143, 0.0135, 0.0130,  ..., 0.0141, 0.0140, 0.0127],
         [0.0143, 0.0135, 0.0130,  ..., 0.0141, 0.0140, 0.0127],
         [0.0143, 0.0135, 0.0130,  ..., 0.0141, 0.0140, 0.0127],
         [0.9571, 0.9595, 0.9610,  ..., 0.9577, 0.9579, 0.9619]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:45,820 [Process: 0] Synchronize training processes
2024-08-16 16:11:45,821 [Process: 0] Evaluating...
2024-08-16 16:11:45,822 [Process: 0] EPOCH 270:
2024-08-16 16:11:45,824 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0118, 0.0122, 0.0108,  ..., 0.0112, 0.0124, 0.0117],
         [0.0118, 0.0122, 0.0108,  ..., 0.0112, 0.0124, 0.0117],
         [0.0118, 0.0122, 0.0108,  ..., 0.0112, 0.0124, 0.0117],
         [0.9646, 0.9635, 0.9677,  ..., 0.9665, 0.9627, 0.9648]],
        [[0.0119, 0.0122, 0.0115,  ..., 0.0044, 0.0122, 0.0117],
         [0.0119, 0.0122, 0.0115,  ..., 0.0010, 0.0122, 0.0117],
         [0.0119, 0.0122, 0.0115,  ..., 0.9936, 0.0122, 0.0117],
         [0.9642, 0.9634, 0.9654,  ..., 0.0010, 0.9634, 0.9649]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 270:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0140, 0.0127, 0.0122,  ..., 0.0137, 0.0140, 0.0136],
         [0.0140, 0.0127, 0.0122,  ..., 0.0137, 0.0140, 0.0136],
         [0.0140, 0.0127, 0.0122,  ..., 0.0137, 0.0140, 0.0136],
         [0.9580, 0.9619, 0.9633,  ..., 0.9590, 0.9580, 0.9593]],
        [[0.0141, 0.0135, 0.0134,  ..., 0.0141, 0.0135, 0.0143],
         [0.0141, 0.0135, 0.0134,  ..., 0.0141, 0.0135, 0.0143],
         [0.0141, 0.0135, 0.0134,  ..., 0.0141, 0.0135, 0.0143],
         [0.9578, 0.9596, 0.9598,  ..., 0.9576, 0.9594, 0.9571]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:47,735 [Process: 0] Synchronize training processes
2024-08-16 16:11:47,735 [Process: 0] Evaluating...
2024-08-16 16:11:47,737 [Process: 0] EPOCH 271:
2024-08-16 16:11:47,739 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2673e-02, 1.1686e-02, 1.2816e-02,  ..., 1.0633e-02,
          1.1730e-02, 1.2158e-02],
         [1.2673e-02, 1.1686e-02, 1.2816e-02,  ..., 1.0633e-02,
          1.1730e-02, 1.2158e-02],
         [1.2673e-02, 1.1686e-02, 1.2816e-02,  ..., 1.0633e-02,
          1.1730e-02, 1.2158e-02],
         [9.6198e-01, 9.6494e-01, 9.6155e-01,  ..., 9.6810e-01,
          9.6481e-01, 9.6353e-01]],
        [[1.3034e-02, 1.2153e-02, 1.1669e-02,  ..., 6.7785e-04,
          1.2112e-02, 1.2528e-02],
         [1.3034e-02, 1.2153e-02, 1.1669e-02,  ..., 6.7785e-04,
          1.2112e-02, 1.2528e-02],
         [1.3034e-02, 1.2153e-02, 1.1669e-02,  ..., 9.9797e-01,
          1.2112e-02, 1.2528e-02],
         [9.6090e-01, 9.6354e-01, 9.6499e-01,  ..., 6.7785e-04,
          9.6367e-01, 9.6242e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 271:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0127, 0.0128,  ..., 0.0135, 0.0130, 0.0133],
         [0.0129, 0.0127, 0.0128,  ..., 0.0135, 0.0130, 0.0133],
         [0.0129, 0.0127, 0.0128,  ..., 0.0135, 0.0130, 0.0133],
         [0.9614, 0.9618, 0.9617,  ..., 0.9596, 0.9611, 0.9601]],
        [[0.0136, 0.0127, 0.0128,  ..., 0.0130, 0.0135, 0.0131],
         [0.0136, 0.0127, 0.0128,  ..., 0.0130, 0.0135, 0.0131],
         [0.0136, 0.0127, 0.0128,  ..., 0.0130, 0.0135, 0.0131],
         [0.9591, 0.9620, 0.9615,  ..., 0.9609, 0.9596, 0.9608]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:49,643 [Process: 0] Synchronize training processes
2024-08-16 16:11:49,643 [Process: 0] Evaluating...
2024-08-16 16:11:49,651 [Process: 0] EPOCH 272:
2024-08-16 16:11:49,653 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3577e-02, 1.1153e-02, 1.2308e-02,  ..., 1.2366e-02,
          1.2285e-02, 1.2349e-02],
         [1.3577e-02, 1.1153e-02, 1.2308e-02,  ..., 1.2366e-02,
          1.2285e-02, 1.2349e-02],
         [1.3577e-02, 1.1153e-02, 1.2308e-02,  ..., 1.2366e-02,
          1.2285e-02, 1.2349e-02],
         [9.5927e-01, 9.6654e-01, 9.6308e-01,  ..., 9.6290e-01,
          9.6315e-01, 9.6295e-01]],
        [[1.1373e-02, 1.2989e-02, 1.2055e-02,  ..., 3.8544e-04,
          1.1365e-02, 1.1258e-02],
         [1.1373e-02, 1.2989e-02, 1.2055e-02,  ..., 1.6740e-04,
          1.1365e-02, 1.1258e-02],
         [1.1373e-02, 1.2989e-02, 1.2055e-02,  ..., 9.9928e-01,
          1.1365e-02, 1.1258e-02],
         [9.6588e-01, 9.6103e-01, 9.6384e-01,  ..., 1.6740e-04,
          9.6591e-01, 9.6623e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 272:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0145, 0.0138, 0.0139,  ..., 0.0134, 0.0142, 0.0135],
         [0.0145, 0.0138, 0.0139,  ..., 0.0134, 0.0142, 0.0135],
         [0.0145, 0.0138, 0.0139,  ..., 0.0134, 0.0142, 0.0135],
         [0.9564, 0.9587, 0.9584,  ..., 0.9599, 0.9574, 0.9596]],
        [[0.0142, 0.0136, 0.0137,  ..., 0.0147, 0.0143, 0.0137],
         [0.0142, 0.0136, 0.0137,  ..., 0.0147, 0.0143, 0.0137],
         [0.0142, 0.0136, 0.0137,  ..., 0.0147, 0.0143, 0.0137],
         [0.9575, 0.9591, 0.9588,  ..., 0.9559, 0.9572, 0.9588]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:51,552 [Process: 0] Synchronize training processes
2024-08-16 16:11:51,552 [Process: 0] Evaluating...
2024-08-16 16:11:51,554 [Process: 0] EPOCH 273:
2024-08-16 16:11:51,556 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1177e-02, 1.3456e-02, 1.1398e-02,  ..., 1.0720e-02,
          1.2262e-02, 1.1779e-02],
         [1.1177e-02, 1.3456e-02, 1.1398e-02,  ..., 1.0720e-02,
          1.2262e-02, 1.1779e-02],
         [1.1177e-02, 1.3456e-02, 1.1398e-02,  ..., 1.0720e-02,
          1.2262e-02, 1.1779e-02],
         [9.6647e-01, 9.5963e-01, 9.6580e-01,  ..., 9.6784e-01,
          9.6322e-01, 9.6466e-01]],
        [[1.1058e-02, 1.1396e-02, 1.1657e-02,  ..., 8.1838e-04,
          1.2084e-02, 1.1473e-02],
         [1.1058e-02, 1.1396e-02, 1.1657e-02,  ..., 6.7205e-04,
          1.2084e-02, 1.1473e-02],
         [1.1058e-02, 1.1396e-02, 1.1657e-02,  ..., 9.9784e-01,
          1.2084e-02, 1.1473e-02],
         [9.6683e-01, 9.6581e-01, 9.6503e-01,  ..., 6.7205e-04,
          9.6375e-01, 9.6558e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 273:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0127, 0.0125, 0.0122,  ..., 0.0122, 0.0121, 0.0122],
         [0.0127, 0.0125, 0.0122,  ..., 0.0122, 0.0121, 0.0122],
         [0.0127, 0.0125, 0.0122,  ..., 0.0122, 0.0121, 0.0122],
         [0.9620, 0.9624, 0.9633,  ..., 0.9634, 0.9637, 0.9633]],
        [[0.0126, 0.0128, 0.0122,  ..., 0.0131, 0.0126, 0.0134],
         [0.0126, 0.0128, 0.0122,  ..., 0.0131, 0.0126, 0.0134],
         [0.0126, 0.0128, 0.0122,  ..., 0.0131, 0.0126, 0.0134],
         [0.9621, 0.9615, 0.9635,  ..., 0.9606, 0.9622, 0.9598]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:53,465 [Process: 0] Synchronize training processes
2024-08-16 16:11:53,466 [Process: 0] Evaluating...
2024-08-16 16:11:53,468 [Process: 0] EPOCH 274:
2024-08-16 16:11:53,469 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0901e-02, 1.2598e-02, 1.1362e-02,  ..., 1.1329e-02,
          1.2107e-02, 1.2014e-02],
         [1.0901e-02, 1.2598e-02, 1.1362e-02,  ..., 1.1329e-02,
          1.2107e-02, 1.2014e-02],
         [1.0901e-02, 1.2598e-02, 1.1362e-02,  ..., 1.1329e-02,
          1.2107e-02, 1.2014e-02],
         [9.6730e-01, 9.6221e-01, 9.6591e-01,  ..., 9.6601e-01,
          9.6368e-01, 9.6396e-01]],
        [[1.1563e-02, 1.1077e-02, 1.1743e-02,  ..., 4.0333e-04,
          1.2126e-02, 1.0750e-02],
         [1.1563e-02, 1.1077e-02, 1.1743e-02,  ..., 2.8737e-04,
          1.2126e-02, 1.0750e-02],
         [1.1563e-02, 1.1077e-02, 1.1743e-02,  ..., 9.9902e-01,
          1.2126e-02, 1.0750e-02],
         [9.6531e-01, 9.6677e-01, 9.6477e-01,  ..., 2.8737e-04,
          9.6362e-01, 9.6775e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 274:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0138, 0.0135, 0.0137,  ..., 0.0133, 0.0154, 0.0150],
         [0.0138, 0.0135, 0.0137,  ..., 0.0133, 0.0154, 0.0150],
         [0.0138, 0.0135, 0.0137,  ..., 0.0133, 0.0154, 0.0150],
         [0.9586, 0.9595, 0.9590,  ..., 0.9602, 0.9537, 0.9551]],
        [[0.0131, 0.0130, 0.0134,  ..., 0.0138, 0.0135, 0.0131],
         [0.0131, 0.0130, 0.0134,  ..., 0.0138, 0.0135, 0.0131],
         [0.0131, 0.0130, 0.0134,  ..., 0.0138, 0.0135, 0.0131],
         [0.9608, 0.9610, 0.9598,  ..., 0.9586, 0.9595, 0.9608]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 16:11:55,373 [Process: 0] Synchronize training processes
2024-08-16 16:11:55,374 [Process: 0] Evaluating...
2024-08-16 16:11:55,375 [Process: 0] EPOCH 275:
2024-08-16 16:11:55,377 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0111, 0.0115, 0.0113,  ..., 0.0112, 0.0112, 0.0101],
         [0.0111, 0.0115, 0.0113,  ..., 0.0112, 0.0112, 0.0101],
         [0.0111, 0.0115, 0.0113,  ..., 0.0112, 0.0112, 0.0101],
         [0.9666, 0.9655, 0.9661,  ..., 0.9663, 0.9664, 0.9696]],
        [[0.0121, 0.0114, 0.0118,  ..., 0.0298, 0.0120, 0.0128],
         [0.0121, 0.0114, 0.0118,  ..., 0.0065, 0.0120, 0.0128],
         [0.0121, 0.0114, 0.0118,  ..., 0.9573, 0.0120, 0.0128],
         [0.9638, 0.9658, 0.9646,  ..., 0.0065, 0.9639, 0.9617]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 275:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0131, 0.0140, 0.0136,  ..., 0.0138, 0.0152, 0.0150],
         [0.0131, 0.0140, 0.0136,  ..., 0.0138, 0.0152, 0.0150],
         [0.0131, 0.0140, 0.0136,  ..., 0.0138, 0.0152, 0.0150],
         [0.9606, 0.9581, 0.9591,  ..., 0.9585, 0.9545, 0.9550]],
        [[0.0127, 0.0132, 0.0126,  ..., 0.0139, 0.0136, 0.0133],
         [0.0127, 0.0132, 0.0126,  ..., 0.0139, 0.0136, 0.0133],
         [0.0127, 0.0132, 0.0126,  ..., 0.0139, 0.0136, 0.0133],
         [0.9618, 0.9604, 0.9622,  ..., 0.9584, 0.9593, 0.9600]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-16 16:11:57,287 [Process: 0] Synchronize training processes
2024-08-16 16:11:57,287 [Process: 0] Evaluating...
2024-08-16 16:11:57,289 [Process: 0] EPOCH 276:
2024-08-16 16:11:57,291 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0609e-02, 1.1452e-02, 1.0828e-02,  ..., 1.0985e-02,
          1.2082e-02, 1.0892e-02],
         [1.0609e-02, 1.1452e-02, 1.0828e-02,  ..., 1.0985e-02,
          1.2082e-02, 1.0892e-02],
         [1.0609e-02, 1.1452e-02, 1.0828e-02,  ..., 1.0985e-02,
          1.2082e-02, 1.0892e-02],
         [9.6817e-01, 9.6564e-01, 9.6752e-01,  ..., 9.6705e-01,
          9.6375e-01, 9.6733e-01]],
        [[1.2471e-02, 1.1201e-02, 1.1409e-02,  ..., 4.6001e-04,
          1.1129e-02, 1.2814e-02],
         [1.2471e-02, 1.1201e-02, 1.1409e-02,  ..., 4.6001e-04,
          1.1129e-02, 1.2814e-02],
         [1.2471e-02, 1.1201e-02, 1.1409e-02,  ..., 9.9862e-01,
          1.1129e-02, 1.2814e-02],
         [9.6259e-01, 9.6640e-01, 9.6577e-01,  ..., 4.6001e-04,
          9.6661e-01, 9.6156e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 276:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0128, 0.0127, 0.0126,  ..., 0.0131, 0.0168, 0.0157],
         [0.0128, 0.0127, 0.0126,  ..., 0.0131, 0.0168, 0.0157],
         [0.0128, 0.0127, 0.0126,  ..., 0.0131, 0.0168, 0.0157],
         [0.9616, 0.9620, 0.9621,  ..., 0.9608, 0.9496, 0.9529]],
        [[0.0127, 0.0129, 0.0133,  ..., 0.0135, 0.0135, 0.0138],
         [0.0127, 0.0129, 0.0133,  ..., 0.0135, 0.0135, 0.0138],
         [0.0127, 0.0129, 0.0133,  ..., 0.0135, 0.0135, 0.0138],
         [0.9619, 0.9614, 0.9602,  ..., 0.9596, 0.9596, 0.9587]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0125, 0.0119, 0.0113,  ..., 0.0112, 0.0113, 0.0109],
         [0.0125, 0.0119, 0.0113,  ..., 0.0112, 0.0113, 0.0109],
         [0.0125, 0.0119, 0.0113,  ..., 0.0112, 0.0113, 0.0109],
         [0.9625, 0.9644, 0.9661,  ..., 0.9663, 0.9661, 0.9672]],
        [[0.0114, 0.0110, 0.0107,  ..., 0.0012, 0.0119, 0.0121],
         [0.0114, 0.0110, 0.0107,  ..., 0.0012, 0.0119, 0.0121],
         [0.0114, 0.0110, 0.0107,  ..., 0.9965, 0.0119, 0.0121],
         [0.9657, 0.9669, 0.9678,  ..., 0.0012, 0.9643, 0.9636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:11:59,201 [Process: 0] Synchronize training processes
2024-08-16 16:11:59,201 [Process: 0] Evaluating...
2024-08-16 16:11:59,203 [Process: 0] EPOCH 277:
2024-08-16 16:11:59,205 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 277:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0120, 0.0121, 0.0123,  ..., 0.0123, 0.0164, 0.0156],
         [0.0120, 0.0121, 0.0123,  ..., 0.0123, 0.0164, 0.0156],
         [0.0120, 0.0121, 0.0123,  ..., 0.0123, 0.0164, 0.0156],
         [0.9640, 0.9637, 0.9631,  ..., 0.9631, 0.9509, 0.9533]],
        [[0.0123, 0.0121, 0.0112,  ..., 0.0123, 0.0124, 0.0125],
         [0.0123, 0.0121, 0.0112,  ..., 0.0123, 0.0124, 0.0125],
         [0.0123, 0.0121, 0.0112,  ..., 0.0123, 0.0124, 0.0125],
         [0.9632, 0.9637, 0.9664,  ..., 0.9630, 0.9628, 0.9624]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0225, 0.0226, 0.0230,  ..., 0.0113, 0.0113, 0.0157],
         [0.0225, 0.0226, 0.0230,  ..., 0.0113, 0.0113, 0.0157],
         [0.0225, 0.0226, 0.0230,  ..., 0.0113, 0.0113, 0.0157],
         [0.9325, 0.9323, 0.9310,  ..., 0.9660, 0.9662, 0.9528]],
        [[0.0106, 0.0111, 0.0109,  ..., 0.0010, 0.0115, 0.0100],
         [0.0106, 0.0111, 0.0109,  ..., 0.0010, 0.0115, 0.0100],
         [0.0106, 0.0111, 0.0109,  ..., 0.9969, 0.0115, 0.0100],
         [0.9681, 0.9667, 0.9674,  ..., 0.0010, 0.9654, 0.9701]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 278:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:01,120 [Process: 0] Synchronize training processes
2024-08-16 16:12:01,120 [Process: 0] Evaluating...
2024-08-16 16:12:01,122 [Process: 0] EPOCH 278:
2024-08-16 16:12:01,124 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0125, 0.0127, 0.0128,  ..., 0.0117, 0.0131, 0.0125],
         [0.0125, 0.0127, 0.0128,  ..., 0.0117, 0.0131, 0.0125],
         [0.0125, 0.0127, 0.0128,  ..., 0.0117, 0.0131, 0.0125],
         [0.9625, 0.9619, 0.9617,  ..., 0.9649, 0.9608, 0.9626]],
        [[0.0119, 0.0130, 0.0127,  ..., 0.0129, 0.0131, 0.0130],
         [0.0119, 0.0130, 0.0127,  ..., 0.0129, 0.0131, 0.0130],
         [0.0119, 0.0130, 0.0127,  ..., 0.0129, 0.0131, 0.0130],
         [0.9642, 0.9611, 0.9620,  ..., 0.9614, 0.9608, 0.9609]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2754e-02, 1.1817e-02, 1.2537e-02,  ..., 1.0868e-02,
          1.1554e-02, 1.1298e-02],
         [1.2754e-02, 1.1817e-02, 1.2537e-02,  ..., 1.0868e-02,
          1.1554e-02, 1.1298e-02],
         [1.2754e-02, 1.1817e-02, 1.2537e-02,  ..., 1.0868e-02,
          1.1554e-02, 1.1298e-02],
         [9.6174e-01, 9.6455e-01, 9.6239e-01,  ..., 9.6740e-01,
          9.6534e-01, 9.6611e-01]],
        [[1.0691e-02, 1.1877e-02, 1.0571e-02,  ..., 1.1397e-04,
          1.0179e-02, 1.1319e-02],
         [1.0691e-02, 1.1877e-02, 1.0571e-02,  ..., 8.4906e-05,
          1.0179e-02, 1.1319e-02],
         [1.0691e-02, 1.1877e-02, 1.0571e-02,  ..., 9.9972e-01,
          1.0179e-02, 1.1319e-02],
         [9.6793e-01, 9.6437e-01, 9.6829e-01,  ..., 8.4906e-05,
          9.6946e-01, 9.6604e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 279:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:03,024 [Process: 0] Synchronize training processes
2024-08-16 16:12:03,024 [Process: 0] Evaluating...
2024-08-16 16:12:03,026 [Process: 0] EPOCH 279:
2024-08-16 16:12:03,028 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0130, 0.0129,  ..., 0.0118, 0.0131, 0.0123],
         [0.0129, 0.0130, 0.0129,  ..., 0.0118, 0.0131, 0.0123],
         [0.0129, 0.0130, 0.0129,  ..., 0.0118, 0.0131, 0.0123],
         [0.9613, 0.9611, 0.9613,  ..., 0.9647, 0.9607, 0.9631]],
        [[0.0133, 0.0123, 0.0121,  ..., 0.0131, 0.0130, 0.0128],
         [0.0133, 0.0123, 0.0121,  ..., 0.0131, 0.0130, 0.0128],
         [0.0133, 0.0123, 0.0121,  ..., 0.0131, 0.0130, 0.0128],
         [0.9602, 0.9631, 0.9637,  ..., 0.9606, 0.9610, 0.9616]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0109, 0.0110, 0.0108,  ..., 0.0115, 0.0123, 0.0108],
         [0.0109, 0.0110, 0.0108,  ..., 0.0115, 0.0123, 0.0108],
         [0.0109, 0.0110, 0.0108,  ..., 0.0115, 0.0123, 0.0108],
         [0.9672, 0.9670, 0.9675,  ..., 0.9655, 0.9632, 0.9675]],
        [[0.0113, 0.0114, 0.0112,  ..., 0.0013, 0.0115, 0.0119],
         [0.0113, 0.0114, 0.0112,  ..., 0.0013, 0.0115, 0.0119],
         [0.0113, 0.0114, 0.0112,  ..., 0.9961, 0.0115, 0.0119],
         [0.9662, 0.9658, 0.9664,  ..., 0.0013, 0.9655, 0.9643]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 280:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:04,934 [Process: 0] Synchronize training processes
2024-08-16 16:12:04,935 [Process: 0] Evaluating...
2024-08-16 16:12:04,937 [Process: 0] EPOCH 280:
2024-08-16 16:12:04,939 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0114, 0.0122, 0.0128,  ..., 0.0121, 0.0129, 0.0127],
         [0.0114, 0.0122, 0.0128,  ..., 0.0121, 0.0129, 0.0127],
         [0.0114, 0.0122, 0.0128,  ..., 0.0121, 0.0129, 0.0127],
         [0.9659, 0.9635, 0.9615,  ..., 0.9637, 0.9614, 0.9620]],
        [[0.0128, 0.0129, 0.0133,  ..., 0.0126, 0.0124, 0.0123],
         [0.0128, 0.0129, 0.0133,  ..., 0.0126, 0.0124, 0.0123],
         [0.0128, 0.0129, 0.0133,  ..., 0.0126, 0.0124, 0.0123],
         [0.9616, 0.9612, 0.9601,  ..., 0.9622, 0.9629, 0.9632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0115, 0.0116,  ..., 0.0110, 0.0119, 0.0102],
         [0.0107, 0.0115, 0.0116,  ..., 0.0110, 0.0119, 0.0102],
         [0.0107, 0.0115, 0.0116,  ..., 0.0110, 0.0119, 0.0102],
         [0.9679, 0.9655, 0.9652,  ..., 0.9671, 0.9644, 0.9695]],
        [[0.0121, 0.0113, 0.0110,  ..., 0.0019, 0.0117, 0.0121],
         [0.0121, 0.0113, 0.0110,  ..., 0.0019, 0.0117, 0.0121],
         [0.0121, 0.0113, 0.0110,  ..., 0.9944, 0.0117, 0.0121],
         [0.9637, 0.9661, 0.9670,  ..., 0.0019, 0.9650, 0.9636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 281:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:06,848 [Process: 0] Synchronize training processes
2024-08-16 16:12:06,848 [Process: 0] Evaluating...
2024-08-16 16:12:06,850 [Process: 0] EPOCH 281:
2024-08-16 16:12:06,852 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0123, 0.0119, 0.0124,  ..., 0.0123, 0.0123, 0.0124],
         [0.0123, 0.0119, 0.0124,  ..., 0.0123, 0.0123, 0.0124],
         [0.0123, 0.0119, 0.0124,  ..., 0.0123, 0.0123, 0.0124],
         [0.9632, 0.9642, 0.9629,  ..., 0.9632, 0.9630, 0.9628]],
        [[0.0129, 0.0125, 0.0128,  ..., 0.0126, 0.0126, 0.0123],
         [0.0129, 0.0125, 0.0128,  ..., 0.0126, 0.0126, 0.0123],
         [0.0129, 0.0125, 0.0128,  ..., 0.0126, 0.0126, 0.0123],
         [0.9613, 0.9625, 0.9615,  ..., 0.9622, 0.9622, 0.9631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0626e-02, 1.1114e-02, 1.0524e-02,  ..., 1.0957e-02,
          1.1567e-02, 1.1462e-02],
         [1.0626e-02, 1.1114e-02, 1.0524e-02,  ..., 1.0957e-02,
          1.1567e-02, 1.1462e-02],
         [1.0626e-02, 1.1114e-02, 1.0524e-02,  ..., 1.0957e-02,
          1.1567e-02, 1.1462e-02],
         [9.6812e-01, 9.6666e-01, 9.6843e-01,  ..., 9.6713e-01,
          9.6530e-01, 9.6561e-01]],
        [[1.1588e-02, 1.0475e-02, 1.1766e-02,  ..., 6.2046e-04,
          1.0846e-02, 1.2237e-02],
         [1.1588e-02, 1.0475e-02, 1.1766e-02,  ..., 6.2046e-04,
          1.0846e-02, 1.2237e-02],
         [1.1588e-02, 1.0475e-02, 1.1766e-02,  ..., 9.9814e-01,
          1.0846e-02, 1.2237e-02],
         [9.6524e-01, 9.6858e-01, 9.6470e-01,  ..., 6.2046e-04,
          9.6746e-01, 9.6329e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 282:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:08,754 [Process: 0] Synchronize training processes
2024-08-16 16:12:08,754 [Process: 0] Evaluating...
2024-08-16 16:12:08,762 [Process: 0] EPOCH 282:
2024-08-16 16:12:08,764 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0123, 0.0126, 0.0125,  ..., 0.0126, 0.0122, 0.0122],
         [0.0123, 0.0126, 0.0125,  ..., 0.0126, 0.0122, 0.0122],
         [0.0123, 0.0126, 0.0125,  ..., 0.0126, 0.0122, 0.0122],
         [0.9632, 0.9621, 0.9626,  ..., 0.9623, 0.9634, 0.9633]],
        [[0.0123, 0.0122, 0.0131,  ..., 0.0125, 0.0129, 0.0127],
         [0.0123, 0.0122, 0.0131,  ..., 0.0125, 0.0129, 0.0127],
         [0.0123, 0.0122, 0.0131,  ..., 0.0125, 0.0129, 0.0127],
         [0.9630, 0.9634, 0.9606,  ..., 0.9624, 0.9612, 0.9618]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0105, 0.0107,  ..., 0.0112, 0.0109, 0.0113],
         [0.0107, 0.0105, 0.0107,  ..., 0.0112, 0.0109, 0.0113],
         [0.0107, 0.0105, 0.0107,  ..., 0.0112, 0.0109, 0.0113],
         [0.9679, 0.9685, 0.9679,  ..., 0.9663, 0.9674, 0.9661]],
        [[0.0110, 0.0110, 0.0110,  ..., 0.0020, 0.0112, 0.0107],
         [0.0110, 0.0110, 0.0110,  ..., 0.0020, 0.0112, 0.0107],
         [0.0110, 0.0110, 0.0110,  ..., 0.9941, 0.0112, 0.0107],
         [0.9669, 0.9669, 0.9671,  ..., 0.0020, 0.9663, 0.9679]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 283:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:10,675 [Process: 0] Synchronize training processes
2024-08-16 16:12:10,676 [Process: 0] Evaluating...
2024-08-16 16:12:10,678 [Process: 0] EPOCH 283:
2024-08-16 16:12:10,679 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0124, 0.0130, 0.0125,  ..., 0.0130, 0.0135, 0.0124],
         [0.0124, 0.0130, 0.0125,  ..., 0.0130, 0.0135, 0.0124],
         [0.0124, 0.0130, 0.0125,  ..., 0.0130, 0.0135, 0.0124],
         [0.9628, 0.9610, 0.9626,  ..., 0.9610, 0.9595, 0.9627]],
        [[0.0131, 0.0128, 0.0128,  ..., 0.0129, 0.0129, 0.0127],
         [0.0131, 0.0128, 0.0128,  ..., 0.0129, 0.0129, 0.0127],
         [0.0131, 0.0128, 0.0128,  ..., 0.0129, 0.0129, 0.0127],
         [0.9608, 0.9615, 0.9616,  ..., 0.9614, 0.9612, 0.9618]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0898e-02, 1.1055e-02, 1.0601e-02,  ..., 1.1045e-02,
          1.1212e-02, 1.0592e-02],
         [1.0898e-02, 1.1055e-02, 1.0601e-02,  ..., 1.1045e-02,
          1.1212e-02, 1.0592e-02],
         [1.0898e-02, 1.1055e-02, 1.0601e-02,  ..., 1.1045e-02,
          1.1212e-02, 1.0592e-02],
         [9.6730e-01, 9.6683e-01, 9.6820e-01,  ..., 9.6686e-01,
          9.6637e-01, 9.6822e-01]],
        [[1.0897e-02, 1.1053e-02, 1.1167e-02,  ..., 1.0994e-04,
          1.1002e-02, 1.1174e-02],
         [1.0897e-02, 1.1053e-02, 1.1167e-02,  ..., 1.0994e-04,
          1.1002e-02, 1.1174e-02],
         [1.0897e-02, 1.1053e-02, 1.1167e-02,  ..., 9.9967e-01,
          1.1002e-02, 1.1174e-02],
         [9.6731e-01, 9.6684e-01, 9.6650e-01,  ..., 1.0994e-04,
          9.6699e-01, 9.6648e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 284:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:12,596 [Process: 0] Synchronize training processes
2024-08-16 16:12:12,596 [Process: 0] Evaluating...
2024-08-16 16:12:12,598 [Process: 0] EPOCH 284:
2024-08-16 16:12:12,600 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:14,510 [Process: 0] Synchronize training processes
2024-08-16 16:12:14,511 [Process: 0] Evaluating...
2024-08-16 16:12:14,512 [Process: 0] EPOCH 285:
2024-08-16 16:12:14,514 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0127, 0.0124, 0.0124,  ..., 0.0129, 0.0125, 0.0138],
         [0.0127, 0.0124, 0.0124,  ..., 0.0129, 0.0125, 0.0138],
         [0.0127, 0.0124, 0.0124,  ..., 0.0129, 0.0125, 0.0138],
         [0.9619, 0.9629, 0.9628,  ..., 0.9614, 0.9625, 0.9587]],
        [[0.0127, 0.0127, 0.0125,  ..., 0.0123, 0.0130, 0.0130],
         [0.0127, 0.0127, 0.0125,  ..., 0.0123, 0.0130, 0.0130],
         [0.0127, 0.0127, 0.0125,  ..., 0.0123, 0.0130, 0.0130],
         [0.9619, 0.9620, 0.9626,  ..., 0.9631, 0.9610, 0.9610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0568e-02, 1.1153e-02, 1.0326e-02,  ..., 1.1592e-02,
          1.0522e-02, 1.0668e-02],
         [1.0568e-02, 1.1153e-02, 1.0326e-02,  ..., 1.1592e-02,
          1.0522e-02, 1.0668e-02],
         [1.0568e-02, 1.1153e-02, 1.0326e-02,  ..., 1.1592e-02,
          1.0522e-02, 1.0668e-02],
         [9.6829e-01, 9.6654e-01, 9.6902e-01,  ..., 9.6523e-01,
          9.6843e-01, 9.6800e-01]],
        [[1.1170e-02, 1.0760e-02, 1.1493e-02,  ..., 9.3753e-04,
          1.0693e-02, 1.0834e-02],
         [1.1170e-02, 1.0760e-02, 1.1493e-02,  ..., 9.3753e-04,
          1.0693e-02, 1.0834e-02],
         [1.1170e-02, 1.0760e-02, 1.1493e-02,  ..., 9.9719e-01,
          1.0693e-02, 1.0834e-02],
         [9.6649e-01, 9.6772e-01, 9.6552e-01,  ..., 9.3753e-04,
          9.6792e-01, 9.6750e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 285:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:16,424 [Process: 0] Synchronize training processes
2024-08-16 16:12:16,424 [Process: 0] Evaluating...
2024-08-16 16:12:16,426 [Process: 0] EPOCH 286:
2024-08-16 16:12:16,428 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0123, 0.0120, 0.0115,  ..., 0.0119, 0.0120, 0.0147],
         [0.0123, 0.0120, 0.0115,  ..., 0.0119, 0.0120, 0.0147],
         [0.0123, 0.0120, 0.0115,  ..., 0.0119, 0.0120, 0.0147],
         [0.9631, 0.9641, 0.9655,  ..., 0.9644, 0.9640, 0.9559]],
        [[0.0126, 0.0125, 0.0122,  ..., 0.0122, 0.0124, 0.0124],
         [0.0126, 0.0125, 0.0122,  ..., 0.0122, 0.0124, 0.0124],
         [0.0126, 0.0125, 0.0122,  ..., 0.0122, 0.0124, 0.0124],
         [0.9622, 0.9625, 0.9635,  ..., 0.9633, 0.9629, 0.9627]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0757e-02, 1.0833e-02, 1.0148e-02,  ..., 1.1176e-02,
          1.0863e-02, 1.0545e-02],
         [1.0757e-02, 1.0833e-02, 1.0148e-02,  ..., 1.1176e-02,
          1.0863e-02, 1.0545e-02],
         [1.0757e-02, 1.0833e-02, 1.0148e-02,  ..., 1.1176e-02,
          1.0863e-02, 1.0545e-02],
         [9.6773e-01, 9.6750e-01, 9.6956e-01,  ..., 9.6647e-01,
          9.6741e-01, 9.6836e-01]],
        [[1.0964e-02, 1.1483e-02, 1.0905e-02,  ..., 7.8227e-05,
          1.1383e-02, 1.1592e-02],
         [1.0964e-02, 1.1483e-02, 1.0905e-02,  ..., 6.7085e-05,
          1.1383e-02, 1.1592e-02],
         [1.0964e-02, 1.1483e-02, 1.0905e-02,  ..., 9.9979e-01,
          1.1383e-02, 1.1592e-02],
         [9.6711e-01, 9.6555e-01, 9.6729e-01,  ..., 6.7085e-05,
          9.6585e-01, 9.6522e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 286:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-16 16:12:18,331 [Process: 0] Synchronize training processes
2024-08-16 16:12:18,332 [Process: 0] Evaluating...
2024-08-16 16:12:18,334 [Process: 0] EPOCH 287:
2024-08-16 16:12:18,336 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0118, 0.0120, 0.0122,  ..., 0.0114, 0.0122, 0.0132],
         [0.0118, 0.0120, 0.0122,  ..., 0.0114, 0.0122, 0.0132],
         [0.0118, 0.0120, 0.0122,  ..., 0.0114, 0.0122, 0.0132],
         [0.9647, 0.9641, 0.9633,  ..., 0.9657, 0.9633, 0.9603]],
        [[0.0119, 0.0126, 0.0123,  ..., 0.0122, 0.0122, 0.0121],
         [0.0119, 0.0126, 0.0123,  ..., 0.0122, 0.0122, 0.0121],
         [0.0119, 0.0126, 0.0123,  ..., 0.0122, 0.0122, 0.0121],
         [0.9642, 0.9621, 0.9632,  ..., 0.9633, 0.9633, 0.9637]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0945e-02, 1.0432e-02, 1.0193e-02,  ..., 1.0215e-02,
          1.0868e-02, 1.0164e-02],
         [1.0945e-02, 1.0432e-02, 1.0193e-02,  ..., 1.0215e-02,
          1.0868e-02, 1.0164e-02],
         [1.0945e-02, 1.0432e-02, 1.0193e-02,  ..., 1.0215e-02,
          1.0868e-02, 1.0164e-02],
         [9.6716e-01, 9.6870e-01, 9.6942e-01,  ..., 9.6936e-01,
          9.6740e-01, 9.6951e-01]],
        [[1.1197e-02, 1.1012e-02, 1.0779e-02,  ..., 1.1110e-04,
          1.1289e-02, 1.0416e-02],
         [1.1197e-02, 1.1012e-02, 1.0779e-02,  ..., 1.1110e-04,
          1.1289e-02, 1.0416e-02],
         [1.1197e-02, 1.1012e-02, 1.0779e-02,  ..., 9.9967e-01,
          1.1289e-02, 1.0416e-02],
         [9.6641e-01, 9.6697e-01, 9.6766e-01,  ..., 1.1110e-04,
          9.6613e-01, 9.6875e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 287:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0126, 0.0127, 0.0126,  ..., 0.0126, 0.0128, 0.0121],
         [0.0126, 0.0127, 0.0126,  ..., 0.0126, 0.0128, 0.0121],
         [0.0126, 0.0127, 0.0126,  ..., 0.0126, 0.0128, 0.0121],
         [0.9623, 0.9618, 0.9622,  ..., 0.9623, 0.9615, 0.9637]],
        [[0.0129, 0.0127, 0.0130,  ..., 0.0127, 0.0125, 0.0124],
         [0.0129, 0.0127, 0.0130,  ..., 0.0127, 0.0125, 0.0124],
         [0.0129, 0.0127, 0.0130,  ..., 0.0127, 0.0125, 0.0124],
         [0.9614, 0.9619, 0.9611,  ..., 0.9619, 0.9626, 0.9628]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:12:20,246 [Process: 0] Synchronize training processes
2024-08-16 16:12:20,246 [Process: 0] Evaluating...
2024-08-16 16:12:20,248 [Process: 0] EPOCH 288:
2024-08-16 16:12:20,250 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0548e-02, 1.0788e-02, 1.0629e-02,  ..., 1.1253e-02,
          1.0670e-02, 1.0676e-02],
         [1.0548e-02, 1.0788e-02, 1.0629e-02,  ..., 1.1253e-02,
          1.0670e-02, 1.0676e-02],
         [1.0548e-02, 1.0788e-02, 1.0629e-02,  ..., 1.1253e-02,
          1.0670e-02, 1.0676e-02],
         [9.6835e-01, 9.6764e-01, 9.6811e-01,  ..., 9.6624e-01,
          9.6799e-01, 9.6797e-01]],
        [[1.0997e-02, 1.0864e-02, 1.0914e-02,  ..., 7.6767e-04,
          1.0474e-02, 1.1239e-02],
         [1.0997e-02, 1.0864e-02, 1.0914e-02,  ..., 7.6767e-04,
          1.0474e-02, 1.1239e-02],
         [1.0997e-02, 1.0864e-02, 1.0914e-02,  ..., 9.9770e-01,
          1.0474e-02, 1.1239e-02],
         [9.6701e-01, 9.6741e-01, 9.6726e-01,  ..., 7.6767e-04,
          9.6858e-01, 9.6628e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 288:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0119, 0.0121, 0.0127,  ..., 0.0120, 0.0116, 0.0122],
         [0.0119, 0.0121, 0.0127,  ..., 0.0120, 0.0116, 0.0122],
         [0.0119, 0.0121, 0.0127,  ..., 0.0120, 0.0116, 0.0122],
         [0.9644, 0.9638, 0.9620,  ..., 0.9639, 0.9653, 0.9635]],
        [[0.0121, 0.0124, 0.0127,  ..., 0.0127, 0.0121, 0.0124],
         [0.0121, 0.0124, 0.0127,  ..., 0.0127, 0.0121, 0.0124],
         [0.0121, 0.0124, 0.0127,  ..., 0.0127, 0.0121, 0.0124],
         [0.9638, 0.9627, 0.9618,  ..., 0.9620, 0.9638, 0.9628]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:12:22,140 [Process: 0] Synchronize training processes
2024-08-16 16:12:22,140 [Process: 0] Evaluating...
2024-08-16 16:12:22,142 [Process: 0] EPOCH 289:
2024-08-16 16:12:22,144 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0100, 0.0104, 0.0104,  ..., 0.0107, 0.0112, 0.0101],
         [0.0100, 0.0104, 0.0104,  ..., 0.0107, 0.0112, 0.0101],
         [0.0100, 0.0104, 0.0104,  ..., 0.0107, 0.0112, 0.0101],
         [0.9699, 0.9687, 0.9688,  ..., 0.9678, 0.9663, 0.9698]],
        [[0.0110, 0.0106, 0.0108,  ..., 0.0083, 0.0112, 0.0107],
         [0.0110, 0.0106, 0.0108,  ..., 0.0083, 0.0112, 0.0107],
         [0.0110, 0.0106, 0.0108,  ..., 0.9750, 0.0112, 0.0107],
         [0.9669, 0.9681, 0.9675,  ..., 0.0083, 0.9665, 0.9678]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 289:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0115, 0.0119, 0.0121,  ..., 0.0112, 0.0115, 0.0113],
         [0.0115, 0.0119, 0.0121,  ..., 0.0112, 0.0115, 0.0113],
         [0.0115, 0.0119, 0.0121,  ..., 0.0112, 0.0115, 0.0113],
         [0.9655, 0.9644, 0.9636,  ..., 0.9665, 0.9656, 0.9661]],
        [[0.0119, 0.0121, 0.0122,  ..., 0.0121, 0.0115, 0.0115],
         [0.0119, 0.0121, 0.0122,  ..., 0.0121, 0.0115, 0.0115],
         [0.0119, 0.0121, 0.0122,  ..., 0.0121, 0.0115, 0.0115],
         [0.9644, 0.9637, 0.9635,  ..., 0.9636, 0.9655, 0.9656]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:12:24,047 [Process: 0] Synchronize training processes
2024-08-16 16:12:24,047 [Process: 0] Evaluating...
2024-08-16 16:12:24,049 [Process: 0] EPOCH 290:
2024-08-16 16:12:24,051 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.7916e-03, 1.0574e-02, 1.0711e-02,  ..., 1.0185e-02,
          1.0360e-02, 1.0744e-02],
         [9.7916e-03, 1.0574e-02, 1.0711e-02,  ..., 1.0185e-02,
          1.0360e-02, 1.0744e-02],
         [9.7916e-03, 1.0574e-02, 1.0711e-02,  ..., 1.0185e-02,
          1.0360e-02, 1.0744e-02],
         [9.7063e-01, 9.6828e-01, 9.6787e-01,  ..., 9.6945e-01,
          9.6892e-01, 9.6777e-01]],
        [[1.0503e-02, 1.0942e-02, 1.1096e-02,  ..., 1.4940e-04,
          1.0857e-02, 1.0788e-02],
         [1.0503e-02, 1.0942e-02, 1.1096e-02,  ..., 1.4940e-04,
          1.0857e-02, 1.0788e-02],
         [1.0503e-02, 1.0942e-02, 1.1096e-02,  ..., 9.9955e-01,
          1.0857e-02, 1.0788e-02],
         [9.6849e-01, 9.6717e-01, 9.6671e-01,  ..., 1.4940e-04,
          9.6743e-01, 9.6764e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 290:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0119, 0.0120, 0.0125,  ..., 0.0122, 0.0124, 0.0125],
         [0.0119, 0.0120, 0.0125,  ..., 0.0122, 0.0124, 0.0125],
         [0.0119, 0.0120, 0.0125,  ..., 0.0122, 0.0124, 0.0125],
         [0.9642, 0.9640, 0.9626,  ..., 0.9635, 0.9629, 0.9624]],
        [[0.0128, 0.0130, 0.0129,  ..., 0.0129, 0.0124, 0.0128],
         [0.0128, 0.0130, 0.0129,  ..., 0.0129, 0.0124, 0.0128],
         [0.0128, 0.0130, 0.0129,  ..., 0.0129, 0.0124, 0.0128],
         [0.9615, 0.9610, 0.9613,  ..., 0.9614, 0.9628, 0.9616]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:12:25,946 [Process: 0] Synchronize training processes
2024-08-16 16:12:25,946 [Process: 0] Evaluating...
2024-08-16 16:12:25,948 [Process: 0] EPOCH 291:
2024-08-16 16:12:25,950 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0631e-02, 9.9576e-03, 1.0248e-02,  ..., 1.0308e-02,
          1.0988e-02, 1.0458e-02],
         [1.0631e-02, 9.9576e-03, 1.0248e-02,  ..., 1.0308e-02,
          1.0988e-02, 1.0458e-02],
         [1.0631e-02, 9.9576e-03, 1.0248e-02,  ..., 1.0308e-02,
          1.0988e-02, 1.0458e-02],
         [9.6811e-01, 9.7013e-01, 9.6926e-01,  ..., 9.6908e-01,
          9.6703e-01, 9.6863e-01]],
        [[1.0765e-02, 1.0959e-02, 1.0441e-02,  ..., 4.0038e-05,
          1.1216e-02, 1.1188e-02],
         [1.0765e-02, 1.0959e-02, 1.0441e-02,  ..., 3.6642e-05,
          1.1216e-02, 1.1188e-02],
         [1.0765e-02, 1.0959e-02, 1.0441e-02,  ..., 9.9989e-01,
          1.1216e-02, 1.1188e-02],
         [9.6770e-01, 9.6712e-01, 9.6868e-01,  ..., 3.6642e-05,
          9.6635e-01, 9.6644e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 291:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0115, 0.0119, 0.0117,  ..., 0.0115, 0.0123, 0.0140],
         [0.0115, 0.0119, 0.0117,  ..., 0.0115, 0.0123, 0.0140],
         [0.0115, 0.0119, 0.0117,  ..., 0.0115, 0.0123, 0.0140],
         [0.9655, 0.9644, 0.9648,  ..., 0.9655, 0.9632, 0.9580]],
        [[0.0127, 0.0126, 0.0129,  ..., 0.0125, 0.0123, 0.0124],
         [0.0127, 0.0126, 0.0129,  ..., 0.0125, 0.0123, 0.0124],
         [0.0127, 0.0126, 0.0129,  ..., 0.0125, 0.0123, 0.0124],
         [0.9619, 0.9623, 0.9612,  ..., 0.9624, 0.9631, 0.9627]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:12:27,882 [Process: 0] Synchronize training processes
2024-08-16 16:12:27,882 [Process: 0] Evaluating...
2024-08-16 16:12:27,890 [Process: 0] EPOCH 292:
2024-08-16 16:12:27,892 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0128e-02, 1.0175e-02, 1.0496e-02,  ..., 1.0348e-02,
          1.1206e-02, 1.0800e-02],
         [1.0128e-02, 1.0175e-02, 1.0496e-02,  ..., 1.0348e-02,
          1.1206e-02, 1.0800e-02],
         [1.0128e-02, 1.0175e-02, 1.0496e-02,  ..., 1.0348e-02,
          1.1206e-02, 1.0800e-02],
         [9.6962e-01, 9.6947e-01, 9.6851e-01,  ..., 9.6896e-01,
          9.6638e-01, 9.6760e-01]],
        [[1.0353e-02, 1.0332e-02, 1.0406e-02,  ..., 4.3666e-04,
          1.0576e-02, 1.1353e-02],
         [1.0353e-02, 1.0332e-02, 1.0406e-02,  ..., 4.3666e-04,
          1.0576e-02, 1.1353e-02],
         [1.0353e-02, 1.0332e-02, 1.0406e-02,  ..., 9.9869e-01,
          1.0576e-02, 1.1353e-02],
         [9.6894e-01, 9.6900e-01, 9.6878e-01,  ..., 4.3666e-04,
          9.6827e-01, 9.6594e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 292:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0113, 0.0113, 0.0113,  ..., 0.0114, 0.0121, 0.0120],
         [0.0113, 0.0113, 0.0113,  ..., 0.0114, 0.0121, 0.0120],
         [0.0113, 0.0113, 0.0113,  ..., 0.0114, 0.0121, 0.0120],
         [0.9662, 0.9662, 0.9662,  ..., 0.9659, 0.9637, 0.9640]],
        [[0.0121, 0.0123, 0.0125,  ..., 0.0120, 0.0117, 0.0120],
         [0.0121, 0.0123, 0.0125,  ..., 0.0120, 0.0117, 0.0120],
         [0.0121, 0.0123, 0.0125,  ..., 0.0120, 0.0117, 0.0120],
         [0.9637, 0.9630, 0.9626,  ..., 0.9639, 0.9648, 0.9639]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:12:29,814 [Process: 0] Synchronize training processes
2024-08-16 16:12:29,815 [Process: 0] Evaluating...
2024-08-16 16:12:29,817 [Process: 0] EPOCH 293:
2024-08-16 16:12:29,819 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0181e-02, 1.0111e-02, 1.0715e-02,  ..., 1.0398e-02,
          1.4081e-02, 1.0039e-02],
         [1.0181e-02, 1.0111e-02, 1.0715e-02,  ..., 1.0398e-02,
          1.4081e-02, 1.0039e-02],
         [1.0181e-02, 1.0111e-02, 1.0715e-02,  ..., 1.0398e-02,
          1.4081e-02, 1.0039e-02],
         [9.6946e-01, 9.6967e-01, 9.6786e-01,  ..., 9.6881e-01,
          9.5776e-01, 9.6988e-01]],
        [[1.0117e-02, 1.0079e-02, 1.0717e-02,  ..., 1.7400e-04,
          1.0626e-02, 1.0305e-02],
         [1.0117e-02, 1.0079e-02, 1.0717e-02,  ..., 1.7265e-04,
          1.0626e-02, 1.0305e-02],
         [1.0117e-02, 1.0079e-02, 1.0717e-02,  ..., 9.9948e-01,
          1.0626e-02, 1.0305e-02],
         [9.6965e-01, 9.6976e-01, 9.6785e-01,  ..., 1.7265e-04,
          9.6812e-01, 9.6908e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 293:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0115, 0.0118, 0.0123,  ..., 0.0123, 0.0118, 0.0122],
         [0.0115, 0.0118, 0.0123,  ..., 0.0123, 0.0118, 0.0122],
         [0.0115, 0.0118, 0.0123,  ..., 0.0123, 0.0118, 0.0122],
         [0.9655, 0.9646, 0.9631,  ..., 0.9631, 0.9645, 0.9635]],
        [[0.0120, 0.0121, 0.0123,  ..., 0.0122, 0.0118, 0.0123],
         [0.0120, 0.0121, 0.0123,  ..., 0.0122, 0.0118, 0.0123],
         [0.0120, 0.0121, 0.0123,  ..., 0.0122, 0.0118, 0.0123],
         [0.9641, 0.9638, 0.9631,  ..., 0.9634, 0.9647, 0.9632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:12:31,808 [Process: 0] Synchronize training processes
2024-08-16 16:12:31,808 [Process: 0] Evaluating...
2024-08-16 16:12:31,810 [Process: 0] EPOCH 294:
2024-08-16 16:12:31,812 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0103, 0.0104, 0.0105,  ..., 0.0104, 0.0173, 0.0103],
         [0.0103, 0.0104, 0.0105,  ..., 0.0104, 0.0159, 0.0103],
         [0.0103, 0.0104, 0.0105,  ..., 0.0104, 0.0159, 0.0103],
         [0.9691, 0.9689, 0.9686,  ..., 0.9688, 0.9509, 0.9692]],
        [[0.0103, 0.0106, 0.0101,  ..., 0.0012, 0.0110, 0.0103],
         [0.0103, 0.0106, 0.0101,  ..., 0.0012, 0.0110, 0.0103],
         [0.0103, 0.0106, 0.0101,  ..., 0.9965, 0.0110, 0.0103],
         [0.9690, 0.9682, 0.9697,  ..., 0.0012, 0.9671, 0.9691]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 294:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0114, 0.0118, 0.0123,  ..., 0.0125, 0.0124, 0.0129],
         [0.0114, 0.0118, 0.0123,  ..., 0.0125, 0.0124, 0.0129],
         [0.0114, 0.0118, 0.0123,  ..., 0.0125, 0.0124, 0.0129],
         [0.9657, 0.9647, 0.9632,  ..., 0.9626, 0.9628, 0.9612]],
        [[0.0128, 0.0123, 0.0125,  ..., 0.0123, 0.0121, 0.0123],
         [0.0128, 0.0123, 0.0125,  ..., 0.0123, 0.0121, 0.0123],
         [0.0128, 0.0123, 0.0125,  ..., 0.0123, 0.0121, 0.0123],
         [0.9616, 0.9632, 0.9625,  ..., 0.9631, 0.9636, 0.9631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:12:33,736 [Process: 0] Synchronize training processes
2024-08-16 16:12:33,736 [Process: 0] Evaluating...
2024-08-16 16:12:33,738 [Process: 0] EPOCH 295:
2024-08-16 16:12:33,740 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.9708e-03, 1.0150e-02, 1.0602e-02,  ..., 1.0475e-02,
          1.1130e-02, 1.0637e-02],
         [9.9708e-03, 1.0150e-02, 1.0602e-02,  ..., 1.0475e-02,
          1.1130e-02, 1.0637e-02],
         [9.9708e-03, 1.0150e-02, 1.0602e-02,  ..., 1.0475e-02,
          1.1130e-02, 1.0637e-02],
         [9.7009e-01, 9.6955e-01, 9.6819e-01,  ..., 9.6858e-01,
          9.6661e-01, 9.6809e-01]],
        [[1.0890e-02, 1.0690e-02, 9.8467e-03,  ..., 9.0640e-04,
          1.0289e-02, 1.0465e-02],
         [1.0890e-02, 1.0690e-02, 9.8467e-03,  ..., 9.0640e-04,
          1.0289e-02, 1.0465e-02],
         [1.0890e-02, 1.0690e-02, 9.8467e-03,  ..., 9.9728e-01,
          1.0289e-02, 1.0465e-02],
         [9.6733e-01, 9.6793e-01, 9.7046e-01,  ..., 9.0640e-04,
          9.6913e-01, 9.6861e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 295:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0114, 0.0113, 0.0117,  ..., 0.0118, 0.0116, 0.0117],
         [0.0114, 0.0113, 0.0117,  ..., 0.0118, 0.0116, 0.0117],
         [0.0114, 0.0113, 0.0117,  ..., 0.0118, 0.0116, 0.0117],
         [0.9658, 0.9660, 0.9650,  ..., 0.9645, 0.9652, 0.9648]],
        [[0.0121, 0.0122, 0.0119,  ..., 0.0118, 0.0118, 0.0120],
         [0.0121, 0.0122, 0.0119,  ..., 0.0118, 0.0118, 0.0120],
         [0.0121, 0.0122, 0.0119,  ..., 0.0118, 0.0118, 0.0120],
         [0.9636, 0.9635, 0.9642,  ..., 0.9645, 0.9647, 0.9640]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:12:35,656 [Process: 0] Synchronize training processes
2024-08-16 16:12:35,657 [Process: 0] Evaluating...
2024-08-16 16:12:35,659 [Process: 0] EPOCH 296:
2024-08-16 16:12:35,661 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0697e-02, 1.0550e-02, 1.0884e-02,  ..., 1.0287e-02,
          1.0574e-02, 1.0573e-02],
         [1.0697e-02, 1.0550e-02, 1.0884e-02,  ..., 1.0287e-02,
          1.0574e-02, 1.0573e-02],
         [1.0697e-02, 1.0550e-02, 1.0884e-02,  ..., 1.0287e-02,
          1.0574e-02, 1.0573e-02],
         [9.6791e-01, 9.6835e-01, 9.6735e-01,  ..., 9.6914e-01,
          9.6828e-01, 9.6828e-01]],
        [[1.0031e-02, 1.0419e-02, 1.1096e-02,  ..., 7.1955e-04,
          9.9888e-03, 1.0855e-02],
         [1.0031e-02, 1.0419e-02, 1.1096e-02,  ..., 7.1955e-04,
          9.9888e-03, 1.0855e-02],
         [1.0031e-02, 1.0419e-02, 1.1096e-02,  ..., 9.9784e-01,
          9.9888e-03, 1.0855e-02],
         [9.6991e-01, 9.6874e-01, 9.6671e-01,  ..., 7.1955e-04,
          9.7003e-01, 9.6743e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 296:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0117, 0.0111, 0.0121,  ..., 0.0116, 0.0121, 0.0120],
         [0.0117, 0.0111, 0.0121,  ..., 0.0116, 0.0121, 0.0120],
         [0.0117, 0.0111, 0.0121,  ..., 0.0116, 0.0121, 0.0120],
         [0.9648, 0.9666, 0.9637,  ..., 0.9652, 0.9638, 0.9639]],
        [[0.0125, 0.0124, 0.0122,  ..., 0.0126, 0.0120, 0.0123],
         [0.0125, 0.0124, 0.0122,  ..., 0.0126, 0.0120, 0.0123],
         [0.0125, 0.0124, 0.0122,  ..., 0.0126, 0.0120, 0.0123],
         [0.9626, 0.9628, 0.9635,  ..., 0.9621, 0.9639, 0.9631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:12:37,565 [Process: 0] Synchronize training processes
2024-08-16 16:12:37,565 [Process: 0] Evaluating...
2024-08-16 16:12:37,567 [Process: 0] EPOCH 297:
2024-08-16 16:12:37,569 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0178e-02, 1.0272e-02, 1.0304e-02,  ..., 1.0669e-02,
          1.0839e-02, 9.9108e-03],
         [1.0178e-02, 1.0272e-02, 1.0304e-02,  ..., 1.0669e-02,
          1.0839e-02, 9.9108e-03],
         [1.0178e-02, 1.0272e-02, 1.0304e-02,  ..., 1.0669e-02,
          1.0839e-02, 9.9108e-03],
         [9.6947e-01, 9.6918e-01, 9.6909e-01,  ..., 9.6799e-01,
          9.6748e-01, 9.7027e-01]],
        [[9.9201e-03, 1.0342e-02, 1.0407e-02,  ..., 1.5787e-04,
          1.0574e-02, 1.0204e-02],
         [9.9201e-03, 1.0342e-02, 1.0407e-02,  ..., 1.5535e-04,
          1.0574e-02, 1.0204e-02],
         [9.9201e-03, 1.0342e-02, 1.0407e-02,  ..., 9.9953e-01,
          1.0574e-02, 1.0204e-02],
         [9.7024e-01, 9.6897e-01, 9.6878e-01,  ..., 1.5535e-04,
          9.6828e-01, 9.6939e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 297:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0120, 0.0120, 0.0124,  ..., 0.0120, 0.0122, 0.0119],
         [0.0120, 0.0120, 0.0124,  ..., 0.0120, 0.0122, 0.0119],
         [0.0120, 0.0120, 0.0124,  ..., 0.0120, 0.0122, 0.0119],
         [0.9640, 0.9639, 0.9629,  ..., 0.9639, 0.9634, 0.9642]],
        [[0.0127, 0.0124, 0.0126,  ..., 0.0124, 0.0124, 0.0129],
         [0.0127, 0.0124, 0.0126,  ..., 0.0124, 0.0124, 0.0129],
         [0.0127, 0.0124, 0.0126,  ..., 0.0124, 0.0124, 0.0129],
         [0.9618, 0.9628, 0.9622,  ..., 0.9627, 0.9627, 0.9613]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:12:39,474 [Process: 0] Synchronize training processes
2024-08-16 16:12:39,474 [Process: 0] Evaluating...
2024-08-16 16:12:39,476 [Process: 0] EPOCH 298:
2024-08-16 16:12:39,478 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.9761e-03, 1.0238e-02, 1.0162e-02,  ..., 1.0386e-02,
          1.1037e-02, 1.0076e-02],
         [9.9761e-03, 1.0238e-02, 1.0162e-02,  ..., 1.0386e-02,
          1.1037e-02, 1.0076e-02],
         [9.9761e-03, 1.0238e-02, 1.0162e-02,  ..., 1.0386e-02,
          1.1037e-02, 1.0076e-02],
         [9.7007e-01, 9.6928e-01, 9.6951e-01,  ..., 9.6884e-01,
          9.6689e-01, 9.6977e-01]],
        [[9.8269e-03, 9.9578e-03, 9.8634e-03,  ..., 1.8798e-05,
          1.0511e-02, 1.0145e-02],
         [9.8269e-03, 9.9578e-03, 9.8634e-03,  ..., 1.8798e-05,
          1.0511e-02, 1.0145e-02],
         [9.8269e-03, 9.9578e-03, 9.8634e-03,  ..., 9.9994e-01,
          1.0511e-02, 1.0145e-02],
         [9.7052e-01, 9.7013e-01, 9.7041e-01,  ..., 1.8798e-05,
          9.6847e-01, 9.6957e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 298:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0103, 0.0103,  ..., 0.0112, 0.0103, 0.0116],
         [0.0101, 0.0103, 0.0103,  ..., 0.0112, 0.0103, 0.0116],
         [0.0101, 0.0103, 0.0103,  ..., 0.0112, 0.0103, 0.0116],
         [0.9697, 0.9690, 0.9690,  ..., 0.9663, 0.9692, 0.9651]],
        [[0.0112, 0.0112, 0.0113,  ..., 0.0112, 0.0110, 0.0111],
         [0.0112, 0.0112, 0.0113,  ..., 0.0112, 0.0110, 0.0111],
         [0.0112, 0.0112, 0.0115,  ..., 0.0112, 0.0110, 0.0111],
         [0.9665, 0.9665, 0.9659,  ..., 0.9663, 0.9669, 0.9668]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.9417e-03, 1.0068e-02, 1.0525e-02,  ..., 1.0114e-02,
          1.0660e-02, 1.0172e-02],
         [9.9417e-03, 1.0068e-02, 1.0525e-02,  ..., 1.0114e-02,
          1.0660e-02, 1.0172e-02],
         [9.9417e-03, 1.0068e-02, 1.0525e-02,  ..., 1.0114e-02,
          1.0660e-02, 1.0172e-02],
         [9.7017e-01, 9.6979e-01, 9.6843e-01,  ..., 9.6966e-01,
          9.6802e-01, 9.6948e-01]],
        [[1.0547e-02, 9.6517e-03, 1.0051e-02,  ..., 4.0618e-04,
          1.0063e-02, 1.0081e-02],
         [1.0547e-02, 9.6517e-03, 1.0051e-02,  ..., 4.0618e-04,
          1.0063e-02, 1.0081e-02],
         [1.0547e-02, 9.6517e-03, 1.0051e-02,  ..., 9.9878e-01,
          1.0063e-02, 1.0081e-02],
         [9.6836e-01, 9.7104e-01, 9.6985e-01,  ..., 4.0618e-04,
          9.6981e-01, 9.6976e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:12:41,386 [Process: 0] Synchronize training processes
2024-08-16 16:12:41,387 [Process: 0] Evaluating...
2024-08-16 16:12:41,388 [Process: 0] EPOCH 299:
2024-08-16 16:12:41,390 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 299:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0116, 0.0107, 0.0112,  ..., 0.0120, 0.0113, 0.0116],
         [0.0116, 0.0107, 0.0112,  ..., 0.0120, 0.0113, 0.0116],
         [0.0116, 0.0107, 0.0112,  ..., 0.0120, 0.0113, 0.0116],
         [0.9651, 0.9680, 0.9663,  ..., 0.9639, 0.9661, 0.9651]],
        [[0.0117, 0.0117, 0.0121,  ..., 0.0116, 0.0116, 0.0118],
         [0.0117, 0.0117, 0.0121,  ..., 0.0116, 0.0116, 0.0118],
         [0.0117, 0.0117, 0.0121,  ..., 0.0116, 0.0116, 0.0118],
         [0.9650, 0.9649, 0.9638,  ..., 0.9653, 0.9651, 0.9645]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.6387e-03, 9.7715e-03, 9.7400e-03,  ..., 1.0404e-02,
          1.0000e-02, 1.0111e-02],
         [9.6387e-03, 9.7715e-03, 9.7400e-03,  ..., 1.0404e-02,
          1.0000e-02, 1.0111e-02],
         [9.6387e-03, 9.7715e-03, 9.7400e-03,  ..., 1.0404e-02,
          1.0000e-02, 1.0111e-02],
         [9.7108e-01, 9.7069e-01, 9.7078e-01,  ..., 9.6879e-01,
          9.7000e-01, 9.6967e-01]],
        [[1.0322e-02, 1.0154e-02, 1.0296e-02,  ..., 4.2414e-05,
          9.7554e-03, 1.0063e-02],
         [1.0322e-02, 1.0154e-02, 1.0296e-02,  ..., 4.2414e-05,
          9.7554e-03, 1.0063e-02],
         [1.0322e-02, 1.0154e-02, 1.0296e-02,  ..., 9.9987e-01,
          9.7554e-03, 1.0063e-02],
         [9.6903e-01, 9.6954e-01, 9.6911e-01,  ..., 4.2414e-05,
          9.7073e-01, 9.6981e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 300:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:43,292 [Process: 0] Synchronize training processes
2024-08-16 16:12:43,292 [Process: 0] Evaluating...
2024-08-16 16:12:43,294 [Process: 0] EPOCH 300:
2024-08-16 16:12:43,296 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0118, 0.0119, 0.0113,  ..., 0.0118, 0.0114, 0.0114],
         [0.0118, 0.0119, 0.0113,  ..., 0.0118, 0.0114, 0.0114],
         [0.0118, 0.0119, 0.0113,  ..., 0.0118, 0.0114, 0.0114],
         [0.9647, 0.9644, 0.9660,  ..., 0.9647, 0.9658, 0.9658]],
        [[0.0120, 0.0122, 0.0121,  ..., 0.0119, 0.0121, 0.0118],
         [0.0120, 0.0122, 0.0121,  ..., 0.0119, 0.0121, 0.0118],
         [0.0120, 0.0122, 0.0121,  ..., 0.0119, 0.0121, 0.0118],
         [0.9641, 0.9633, 0.9638,  ..., 0.9643, 0.9638, 0.9647]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.9984e-03, 1.0282e-02, 1.0033e-02,  ..., 9.5995e-03,
          9.7738e-03, 1.0469e-02],
         [9.9984e-03, 1.0282e-02, 1.0033e-02,  ..., 9.5995e-03,
          9.7738e-03, 1.0469e-02],
         [9.9984e-03, 1.0282e-02, 1.0033e-02,  ..., 9.5995e-03,
          9.7738e-03, 1.0469e-02],
         [9.7000e-01, 9.6915e-01, 9.6990e-01,  ..., 9.7120e-01,
          9.7068e-01, 9.6859e-01]],
        [[1.0440e-02, 1.0119e-02, 1.0007e-02,  ..., 4.9904e-04,
          9.7153e-03, 1.0580e-02],
         [1.0440e-02, 1.0119e-02, 1.0007e-02,  ..., 4.9904e-04,
          9.7153e-03, 1.0580e-02],
         [1.0440e-02, 1.0119e-02, 1.0007e-02,  ..., 9.9850e-01,
          9.7153e-03, 1.0580e-02],
         [9.6868e-01, 9.6964e-01, 9.6998e-01,  ..., 4.9904e-04,
          9.7085e-01, 9.6826e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 301:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:45,203 [Process: 0] Synchronize training processes
2024-08-16 16:12:45,204 [Process: 0] Evaluating...
2024-08-16 16:12:45,205 [Process: 0] EPOCH 301:
2024-08-16 16:12:45,207 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0115, 0.0119, 0.0116,  ..., 0.0119, 0.0115, 0.0113],
         [0.0115, 0.0119, 0.0116,  ..., 0.0119, 0.0115, 0.0113],
         [0.0115, 0.0119, 0.0116,  ..., 0.0119, 0.0115, 0.0113],
         [0.9654, 0.9642, 0.9652,  ..., 0.9642, 0.9654, 0.9661]],
        [[0.0123, 0.0123, 0.0123,  ..., 0.0121, 0.0118, 0.0119],
         [0.0123, 0.0123, 0.0123,  ..., 0.0121, 0.0118, 0.0119],
         [0.0123, 0.0123, 0.0123,  ..., 0.0121, 0.0118, 0.0119],
         [0.9632, 0.9631, 0.9631,  ..., 0.9638, 0.9647, 0.9644]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.9901e-03, 1.0182e-02, 9.9375e-03,  ..., 9.5339e-03,
          1.0760e-02, 1.0548e-02],
         [9.9901e-03, 1.0182e-02, 9.9375e-03,  ..., 9.5339e-03,
          1.0760e-02, 1.0548e-02],
         [9.9901e-03, 1.0182e-02, 9.9375e-03,  ..., 9.5339e-03,
          1.0760e-02, 1.0548e-02],
         [9.7003e-01, 9.6945e-01, 9.7019e-01,  ..., 9.7140e-01,
          9.6772e-01, 9.6835e-01]],
        [[9.9921e-03, 9.5742e-03, 9.9448e-03,  ..., 7.8643e-04,
          1.0092e-02, 9.6884e-03],
         [9.9921e-03, 9.5742e-03, 9.9448e-03,  ..., 7.8643e-04,
          1.0092e-02, 9.6884e-03],
         [9.9921e-03, 9.5742e-03, 9.9448e-03,  ..., 9.9764e-01,
          1.0092e-02, 9.6884e-03],
         [9.7002e-01, 9.7128e-01, 9.7017e-01,  ..., 7.8643e-04,
          9.6972e-01, 9.7093e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 302:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:47,112 [Process: 0] Synchronize training processes
2024-08-16 16:12:47,112 [Process: 0] Evaluating...
2024-08-16 16:12:47,121 [Process: 0] EPOCH 302:
2024-08-16 16:12:47,124 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0118, 0.0113, 0.0115,  ..., 0.0104, 0.0117, 0.0113],
         [0.0118, 0.0113, 0.0115,  ..., 0.0104, 0.0117, 0.0113],
         [0.0118, 0.0113, 0.0115,  ..., 0.0104, 0.0117, 0.0113],
         [0.9646, 0.9661, 0.9655,  ..., 0.9689, 0.9648, 0.9661]],
        [[0.0118, 0.0116, 0.0118,  ..., 0.0116, 0.0113, 0.0116],
         [0.0118, 0.0116, 0.0118,  ..., 0.0116, 0.0113, 0.0116],
         [0.0118, 0.0116, 0.0118,  ..., 0.0116, 0.0113, 0.0116],
         [0.9647, 0.9651, 0.9647,  ..., 0.9653, 0.9661, 0.9653]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0098, 0.0100, 0.0104,  ..., 0.0102, 0.0099, 0.0099],
         [0.0098, 0.0100, 0.0104,  ..., 0.0102, 0.0099, 0.0099],
         [0.0098, 0.0100, 0.0104,  ..., 0.0102, 0.0099, 0.0099],
         [0.9707, 0.9701, 0.9689,  ..., 0.9693, 0.9702, 0.9702]],
        [[0.0095, 0.0103, 0.0099,  ..., 0.0071, 0.0097, 0.0095],
         [0.0095, 0.0103, 0.0099,  ..., 0.0071, 0.0097, 0.0095],
         [0.0095, 0.0103, 0.0099,  ..., 0.9788, 0.0097, 0.0095],
         [0.9714, 0.9691, 0.9703,  ..., 0.0071, 0.9710, 0.9715]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 303:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:49,036 [Process: 0] Synchronize training processes
2024-08-16 16:12:49,036 [Process: 0] Evaluating...
2024-08-16 16:12:49,038 [Process: 0] EPOCH 303:
2024-08-16 16:12:49,040 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0118, 0.0113, 0.0115,  ..., 0.0116, 0.0112, 0.0114],
         [0.0118, 0.0113, 0.0115,  ..., 0.0116, 0.0112, 0.0114],
         [0.0118, 0.0113, 0.0115,  ..., 0.0116, 0.0112, 0.0114],
         [0.9646, 0.9661, 0.9656,  ..., 0.9653, 0.9663, 0.9658]],
        [[0.0115, 0.0117, 0.0117,  ..., 0.0112, 0.0115, 0.0117],
         [0.0115, 0.0117, 0.0117,  ..., 0.0112, 0.0115, 0.0117],
         [0.0115, 0.0117, 0.0117,  ..., 0.0112, 0.0115, 0.0117],
         [0.9654, 0.9649, 0.9650,  ..., 0.9665, 0.9656, 0.9649]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0047e-02, 9.9198e-03, 9.8097e-03,  ..., 9.6377e-03,
          1.0126e-02, 9.6796e-03],
         [1.0047e-02, 9.9198e-03, 9.8097e-03,  ..., 9.6377e-03,
          1.0126e-02, 9.6796e-03],
         [1.0047e-02, 9.9198e-03, 9.8097e-03,  ..., 9.6377e-03,
          1.0126e-02, 9.6796e-03],
         [9.6986e-01, 9.7024e-01, 9.7057e-01,  ..., 9.7109e-01,
          9.6962e-01, 9.7096e-01]],
        [[9.7871e-03, 1.0084e-02, 1.0123e-02,  ..., 7.4031e-04,
          9.8577e-03, 1.0459e-02],
         [9.7871e-03, 1.0084e-02, 1.0123e-02,  ..., 7.4031e-04,
          9.8577e-03, 1.0459e-02],
         [9.7871e-03, 1.0084e-02, 1.0123e-02,  ..., 9.9778e-01,
          9.8577e-03, 1.0459e-02],
         [9.7064e-01, 9.6975e-01, 9.6963e-01,  ..., 7.4031e-04,
          9.7043e-01, 9.6862e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 304:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:50,941 [Process: 0] Synchronize training processes
2024-08-16 16:12:50,942 [Process: 0] Evaluating...
2024-08-16 16:12:50,944 [Process: 0] EPOCH 304:
2024-08-16 16:12:50,946 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0118, 0.0119, 0.0115,  ..., 0.0116, 0.0115, 0.0114],
         [0.0118, 0.0119, 0.0115,  ..., 0.0116, 0.0115, 0.0114],
         [0.0118, 0.0119, 0.0115,  ..., 0.0116, 0.0115, 0.0114],
         [0.9646, 0.9644, 0.9654,  ..., 0.9653, 0.9656, 0.9658]],
        [[0.0116, 0.0119, 0.0116,  ..., 0.0114, 0.0114, 0.0117],
         [0.0116, 0.0119, 0.0116,  ..., 0.0114, 0.0114, 0.0117],
         [0.0116, 0.0119, 0.0116,  ..., 0.0114, 0.0114, 0.0117],
         [0.9651, 0.9642, 0.9651,  ..., 0.9658, 0.9657, 0.9649]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.4732e-03, 9.6087e-03, 1.0042e-02,  ..., 9.8018e-03,
          1.0305e-02, 1.0206e-02],
         [9.4732e-03, 9.6087e-03, 1.0042e-02,  ..., 9.8018e-03,
          1.0305e-02, 1.0206e-02],
         [9.4732e-03, 9.6087e-03, 1.0042e-02,  ..., 9.8018e-03,
          1.0305e-02, 1.0206e-02],
         [9.7158e-01, 9.7117e-01, 9.6987e-01,  ..., 9.7059e-01,
          9.6908e-01, 9.6938e-01]],
        [[9.9771e-03, 9.8617e-03, 1.0070e-02,  ..., 2.6399e-04,
          1.0035e-02, 9.9599e-03],
         [9.9771e-03, 9.8617e-03, 1.0070e-02,  ..., 2.6399e-04,
          1.0035e-02, 9.9599e-03],
         [9.9771e-03, 9.8617e-03, 1.0070e-02,  ..., 9.9921e-01,
          1.0035e-02, 9.9599e-03],
         [9.7007e-01, 9.7041e-01, 9.6979e-01,  ..., 2.6399e-04,
          9.6990e-01, 9.7012e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 305:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:52,851 [Process: 0] Synchronize training processes
2024-08-16 16:12:52,851 [Process: 0] Evaluating...
2024-08-16 16:12:52,853 [Process: 0] EPOCH 305:
2024-08-16 16:12:52,855 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0121, 0.0115, 0.0115,  ..., 0.0116, 0.0112, 0.0114],
         [0.0121, 0.0115, 0.0115,  ..., 0.0116, 0.0112, 0.0114],
         [0.0121, 0.0115, 0.0115,  ..., 0.0116, 0.0112, 0.0114],
         [0.9637, 0.9654, 0.9656,  ..., 0.9651, 0.9665, 0.9658]],
        [[0.0115, 0.0114, 0.0115,  ..., 0.0114, 0.0114, 0.0113],
         [0.0115, 0.0114, 0.0115,  ..., 0.0114, 0.0114, 0.0113],
         [0.0115, 0.0114, 0.0115,  ..., 0.0114, 0.0114, 0.0113],
         [0.9654, 0.9658, 0.9656,  ..., 0.9659, 0.9659, 0.9660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0026e-02, 9.8609e-03, 9.6824e-03,  ..., 9.8605e-03,
          1.0100e-02, 9.8447e-03],
         [1.0026e-02, 9.8609e-03, 9.6824e-03,  ..., 9.8605e-03,
          1.0100e-02, 9.8447e-03],
         [1.0026e-02, 9.8609e-03, 9.6824e-03,  ..., 9.8605e-03,
          1.0100e-02, 9.8447e-03],
         [9.6992e-01, 9.7042e-01, 9.7095e-01,  ..., 9.7042e-01,
          9.6970e-01, 9.7047e-01]],
        [[9.6411e-03, 1.0078e-02, 9.4864e-03,  ..., 6.4106e-04,
          9.7069e-03, 9.5714e-03],
         [9.6411e-03, 1.0078e-02, 9.4864e-03,  ..., 6.4106e-04,
          9.7069e-03, 9.5714e-03],
         [9.6411e-03, 1.0078e-02, 9.4864e-03,  ..., 9.9808e-01,
          9.7069e-03, 9.5714e-03],
         [9.7108e-01, 9.6977e-01, 9.7154e-01,  ..., 6.4106e-04,
          9.7088e-01, 9.7129e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 306:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:54,766 [Process: 0] Synchronize training processes
2024-08-16 16:12:54,766 [Process: 0] Evaluating...
2024-08-16 16:12:54,768 [Process: 0] EPOCH 306:
2024-08-16 16:12:54,770 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0114, 0.0118, 0.0114,  ..., 0.0114, 0.0114, 0.0108],
         [0.0114, 0.0118, 0.0114,  ..., 0.0114, 0.0114, 0.0108],
         [0.0114, 0.0118, 0.0114,  ..., 0.0114, 0.0114, 0.0108],
         [0.9658, 0.9647, 0.9658,  ..., 0.9658, 0.9658, 0.9675]],
        [[0.0116, 0.0116, 0.0115,  ..., 0.0113, 0.0110, 0.0112],
         [0.0116, 0.0116, 0.0115,  ..., 0.0113, 0.0110, 0.0112],
         [0.0116, 0.0116, 0.0115,  ..., 0.0113, 0.0110, 0.0112],
         [0.9652, 0.9653, 0.9655,  ..., 0.9660, 0.9671, 0.9663]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.4169e-03, 9.2549e-03, 9.6003e-03,  ..., 9.6145e-03,
          1.0192e-02, 9.9095e-03],
         [9.4169e-03, 9.2549e-03, 9.6003e-03,  ..., 9.6145e-03,
          1.0192e-02, 9.9095e-03],
         [9.4169e-03, 9.2549e-03, 9.6003e-03,  ..., 9.6145e-03,
          1.0192e-02, 9.9095e-03],
         [9.7175e-01, 9.7224e-01, 9.7120e-01,  ..., 9.7116e-01,
          9.6942e-01, 9.7027e-01]],
        [[9.5787e-03, 9.6919e-03, 9.7373e-03,  ..., 1.9699e-04,
          9.6186e-03, 9.5722e-03],
         [9.5787e-03, 9.6919e-03, 9.7373e-03,  ..., 1.7768e-04,
          9.6186e-03, 9.5722e-03],
         [9.5787e-03, 9.6919e-03, 9.7373e-03,  ..., 9.9945e-01,
          9.6186e-03, 9.5722e-03],
         [9.7126e-01, 9.7092e-01, 9.7079e-01,  ..., 1.7768e-04,
          9.7114e-01, 9.7128e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 307:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:12:56,675 [Process: 0] Synchronize training processes
2024-08-16 16:12:56,676 [Process: 0] Evaluating...
2024-08-16 16:12:56,678 [Process: 0] EPOCH 307:
2024-08-16 16:12:56,680 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0110, 0.0118, 0.0110,  ..., 0.0117, 0.0108, 0.0109],
         [0.0110, 0.0118, 0.0110,  ..., 0.0117, 0.0108, 0.0109],
         [0.0110, 0.0118, 0.0110,  ..., 0.0117, 0.0108, 0.0109],
         [0.9669, 0.9645, 0.9671,  ..., 0.9650, 0.9676, 0.9672]],
        [[0.0113, 0.0115, 0.0110,  ..., 0.0112, 0.0109, 0.0110],
         [0.0113, 0.0115, 0.0110,  ..., 0.0112, 0.0109, 0.0110],
         [0.0113, 0.0115, 0.0110,  ..., 0.0112, 0.0109, 0.0110],
         [0.9661, 0.9655, 0.9669,  ..., 0.9665, 0.9673, 0.9670]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.0468e-03, 9.2943e-03, 9.5504e-03,  ..., 9.6157e-03,
          9.6420e-03, 9.4211e-03],
         [9.0468e-03, 9.2943e-03, 9.5504e-03,  ..., 9.6157e-03,
          9.6420e-03, 9.4211e-03],
         [9.0468e-03, 9.2943e-03, 9.5504e-03,  ..., 9.6157e-03,
          9.6420e-03, 9.4211e-03],
         [9.7286e-01, 9.7212e-01, 9.7135e-01,  ..., 9.7115e-01,
          9.7107e-01, 9.7174e-01]],
        [[9.5133e-03, 9.5706e-03, 1.0131e-02,  ..., 6.3470e-04,
          9.4562e-03, 9.9507e-03],
         [9.5133e-03, 9.5706e-03, 1.0131e-02,  ..., 6.3470e-04,
          9.4562e-03, 9.9507e-03],
         [9.5133e-03, 9.5706e-03, 1.0131e-02,  ..., 9.9810e-01,
          9.4562e-03, 9.9507e-03],
         [9.7146e-01, 9.7129e-01, 9.6961e-01,  ..., 6.3470e-04,
          9.7163e-01, 9.7015e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 308:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
2024-08-16 16:12:58,590 [Process: 0] Synchronize training processes
2024-08-16 16:12:58,590 [Process: 0] Evaluating...
2024-08-16 16:12:58,592 [Process: 0] EPOCH 308:
2024-08-16 16:12:58,594 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:00,498 [Process: 0] Synchronize training processes
2024-08-16 16:13:00,499 [Process: 0] Evaluating...
2024-08-16 16:13:00,501 [Process: 0] EPOCH 309:
2024-08-16 16:13:00,503 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0120, 0.0112, 0.0113,  ..., 0.0119, 0.0109, 0.0105],
         [0.0120, 0.0112, 0.0113,  ..., 0.0119, 0.0109, 0.0105],
         [0.0120, 0.0112, 0.0113,  ..., 0.0119, 0.0109, 0.0105],
         [0.9640, 0.9665, 0.9661,  ..., 0.9644, 0.9672, 0.9684]],
        [[0.0114, 0.0115, 0.0115,  ..., 0.0108, 0.0112, 0.0110],
         [0.0114, 0.0115, 0.0115,  ..., 0.0108, 0.0112, 0.0110],
         [0.0114, 0.0115, 0.0115,  ..., 0.0108, 0.0112, 0.0110],
         [0.9657, 0.9656, 0.9656,  ..., 0.9676, 0.9665, 0.9671]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0244e-02, 9.6224e-03, 1.0022e-02,  ..., 9.9794e-03,
          1.0414e-02, 9.5052e-03],
         [1.0244e-02, 9.6224e-03, 1.0022e-02,  ..., 9.9794e-03,
          1.0414e-02, 9.5052e-03],
         [1.0244e-02, 9.6224e-03, 1.0022e-02,  ..., 9.9794e-03,
          1.0414e-02, 9.5052e-03],
         [9.6927e-01, 9.7113e-01, 9.6993e-01,  ..., 9.7006e-01,
          9.6876e-01, 9.7148e-01]],
        [[9.6181e-03, 9.8353e-03, 1.0056e-02,  ..., 3.5874e-04,
          9.7719e-03, 9.5919e-03],
         [9.6181e-03, 9.8353e-03, 1.0056e-02,  ..., 2.4157e-04,
          9.7719e-03, 9.5919e-03],
         [9.6181e-03, 9.8353e-03, 1.0056e-02,  ..., 9.9916e-01,
          9.7719e-03, 9.5919e-03],
         [9.7115e-01, 9.7049e-01, 9.6983e-01,  ..., 2.4157e-04,
          9.7068e-01, 9.7122e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 309:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0116, 0.0116, 0.0111,  ..., 0.0115, 0.0108, 0.0109],
         [0.0116, 0.0116, 0.0111,  ..., 0.0115, 0.0108, 0.0109],
         [0.0116, 0.0116, 0.0111,  ..., 0.0115, 0.0108, 0.0109],
         [0.9651, 0.9653, 0.9668,  ..., 0.9655, 0.9677, 0.9674]],
        [[0.0114, 0.0114, 0.0112,  ..., 0.0111, 0.0111, 0.0112],
         [0.0114, 0.0114, 0.0112,  ..., 0.0111, 0.0111, 0.0112],
         [0.0114, 0.0114, 0.0112,  ..., 0.0111, 0.0111, 0.0112],
         [0.9659, 0.9659, 0.9664,  ..., 0.9667, 0.9666, 0.9665]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:13:02,414 [Process: 0] Synchronize training processes
2024-08-16 16:13:02,415 [Process: 0] Evaluating...
2024-08-16 16:13:02,416 [Process: 0] EPOCH 310:
2024-08-16 16:13:02,418 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0093, 0.0095,  ..., 0.0095, 0.0095, 0.0097],
         [0.0094, 0.0093, 0.0095,  ..., 0.0095, 0.0095, 0.0097],
         [0.0094, 0.0093, 0.0095,  ..., 0.0095, 0.0095, 0.0097],
         [0.9719, 0.9720, 0.9715,  ..., 0.9714, 0.9715, 0.9710]],
        [[0.0096, 0.0096, 0.0092,  ..., 0.0023, 0.0096, 0.0098],
         [0.0096, 0.0096, 0.0092,  ..., 0.0016, 0.0096, 0.0098],
         [0.0096, 0.0096, 0.0092,  ..., 0.9945, 0.0096, 0.0098],
         [0.9711, 0.9712, 0.9723,  ..., 0.0016, 0.9713, 0.9707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 310:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0110, 0.0108, 0.0109,  ..., 0.0116, 0.0106, 0.0110],
         [0.0110, 0.0108, 0.0109,  ..., 0.0116, 0.0106, 0.0110],
         [0.0110, 0.0108, 0.0109,  ..., 0.0116, 0.0106, 0.0110],
         [0.9669, 0.9676, 0.9672,  ..., 0.9651, 0.9681, 0.9670]],
        [[0.0108, 0.0111, 0.0107,  ..., 0.0109, 0.0106, 0.0109],
         [0.0108, 0.0111, 0.0107,  ..., 0.0109, 0.0106, 0.0109],
         [0.0108, 0.0111, 0.0107,  ..., 0.0109, 0.0106, 0.0109],
         [0.9676, 0.9667, 0.9679,  ..., 0.9672, 0.9683, 0.9673]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:13:04,345 [Process: 0] Synchronize training processes
2024-08-16 16:13:04,346 [Process: 0] Evaluating...
2024-08-16 16:13:04,348 [Process: 0] EPOCH 311:
2024-08-16 16:13:04,350 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.8269e-03, 9.5169e-03, 9.6703e-03,  ..., 9.2560e-03,
          9.4635e-03, 9.7267e-03],
         [9.8269e-03, 9.5169e-03, 9.6703e-03,  ..., 9.2560e-03,
          9.4635e-03, 9.7267e-03],
         [9.8269e-03, 9.5169e-03, 9.6703e-03,  ..., 9.2560e-03,
          9.4635e-03, 9.7267e-03],
         [9.7052e-01, 9.7145e-01, 9.7099e-01,  ..., 9.7223e-01,
          9.7161e-01, 9.7082e-01]],
        [[9.6242e-03, 1.0082e-02, 9.5561e-03,  ..., 3.9493e-04,
          1.0024e-02, 9.7001e-03],
         [9.6242e-03, 1.0082e-02, 9.5561e-03,  ..., 3.9493e-04,
          1.0024e-02, 9.7001e-03],
         [9.6242e-03, 1.0082e-02, 9.5561e-03,  ..., 9.9882e-01,
          1.0024e-02, 9.7001e-03],
         [9.7113e-01, 9.6976e-01, 9.7133e-01,  ..., 3.9493e-04,
          9.6993e-01, 9.7090e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 311:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0116, 0.0113, 0.0113,  ..., 0.0112, 0.0107, 0.0108],
         [0.0116, 0.0113, 0.0113,  ..., 0.0112, 0.0107, 0.0108],
         [0.0116, 0.0113, 0.0113,  ..., 0.0112, 0.0107, 0.0108],
         [0.9651, 0.9662, 0.9662,  ..., 0.9664, 0.9680, 0.9677]],
        [[0.0111, 0.0113, 0.0114,  ..., 0.0108, 0.0112, 0.0113],
         [0.0111, 0.0113, 0.0114,  ..., 0.0108, 0.0112, 0.0113],
         [0.0111, 0.0113, 0.0114,  ..., 0.0108, 0.0112, 0.0113],
         [0.9666, 0.9660, 0.9659,  ..., 0.9676, 0.9664, 0.9662]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:13:06,257 [Process: 0] Synchronize training processes
2024-08-16 16:13:06,257 [Process: 0] Evaluating...
2024-08-16 16:13:06,265 [Process: 0] EPOCH 312:
2024-08-16 16:13:06,267 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0094, 0.0093,  ..., 0.0091, 0.0096, 0.0094],
         [0.0095, 0.0094, 0.0093,  ..., 0.0091, 0.0096, 0.0094],
         [0.0095, 0.0094, 0.0093,  ..., 0.0091, 0.0096, 0.0094],
         [0.9714, 0.9717, 0.9721,  ..., 0.9726, 0.9712, 0.9719]],
        [[0.0094, 0.0096, 0.0097,  ..., 0.0018, 0.0098, 0.0097],
         [0.0094, 0.0096, 0.0097,  ..., 0.0018, 0.0098, 0.0097],
         [0.0094, 0.0096, 0.0097,  ..., 0.9947, 0.0098, 0.0097],
         [0.9719, 0.9712, 0.9709,  ..., 0.0018, 0.9706, 0.9709]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 312:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0109, 0.0112, 0.0112,  ..., 0.0115, 0.0107, 0.0107],
         [0.0109, 0.0112, 0.0112,  ..., 0.0115, 0.0107, 0.0107],
         [0.0109, 0.0112, 0.0112,  ..., 0.0115, 0.0107, 0.0107],
         [0.9673, 0.9665, 0.9665,  ..., 0.9655, 0.9680, 0.9678]],
        [[0.0110, 0.0111, 0.0112,  ..., 0.0105, 0.0115, 0.0110],
         [0.0110, 0.0111, 0.0112,  ..., 0.0105, 0.0115, 0.0110],
         [0.0110, 0.0111, 0.0112,  ..., 0.0105, 0.0115, 0.0110],
         [0.9669, 0.9666, 0.9663,  ..., 0.9685, 0.9654, 0.9671]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:13:08,169 [Process: 0] Synchronize training processes
2024-08-16 16:13:08,170 [Process: 0] Evaluating...
2024-08-16 16:13:08,172 [Process: 0] EPOCH 313:
2024-08-16 16:13:08,174 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.2685e-03, 9.4988e-03, 9.4661e-03,  ..., 9.1528e-03,
          9.6397e-03, 9.1277e-03],
         [9.2685e-03, 9.4988e-03, 9.4661e-03,  ..., 9.1528e-03,
          9.6397e-03, 9.1277e-03],
         [9.2685e-03, 9.4988e-03, 9.4661e-03,  ..., 9.1528e-03,
          9.6397e-03, 9.1277e-03],
         [9.7219e-01, 9.7150e-01, 9.7160e-01,  ..., 9.7254e-01,
          9.7108e-01, 9.7262e-01]],
        [[9.4197e-03, 9.4953e-03, 9.6537e-03,  ..., 2.0993e-04,
          9.1758e-03, 9.6180e-03],
         [9.4197e-03, 9.4953e-03, 9.6537e-03,  ..., 2.0993e-04,
          9.1758e-03, 9.6180e-03],
         [9.4197e-03, 9.4953e-03, 9.6537e-03,  ..., 9.9937e-01,
          9.1758e-03, 9.6180e-03],
         [9.7174e-01, 9.7151e-01, 9.7104e-01,  ..., 2.0993e-04,
          9.7247e-01, 9.7115e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 313:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0110, 0.0108, 0.0107,  ..., 0.0109, 0.0106, 0.0105],
         [0.0110, 0.0108, 0.0107,  ..., 0.0109, 0.0106, 0.0105],
         [0.0110, 0.0108, 0.0107,  ..., 0.0109, 0.0106, 0.0105],
         [0.9670, 0.9675, 0.9679,  ..., 0.9673, 0.9682, 0.9685]],
        [[0.0113, 0.0111, 0.0110,  ..., 0.0111, 0.0108, 0.0105],
         [0.0113, 0.0111, 0.0110,  ..., 0.0111, 0.0108, 0.0105],
         [0.0113, 0.0111, 0.0110,  ..., 0.0111, 0.0108, 0.0105],
         [0.9662, 0.9667, 0.9670,  ..., 0.9666, 0.9675, 0.9685]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:13:10,075 [Process: 0] Synchronize training processes
2024-08-16 16:13:10,076 [Process: 0] Evaluating...
2024-08-16 16:13:10,077 [Process: 0] EPOCH 314:
2024-08-16 16:13:10,079 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.7602e-03, 9.1474e-03, 9.4354e-03,  ..., 9.5248e-03,
          9.1865e-03, 9.1839e-03],
         [9.7602e-03, 9.1474e-03, 9.4354e-03,  ..., 9.5248e-03,
          9.1865e-03, 9.1839e-03],
         [9.7602e-03, 9.1474e-03, 9.4354e-03,  ..., 9.5248e-03,
          9.1865e-03, 9.1839e-03],
         [9.7072e-01, 9.7256e-01, 9.7169e-01,  ..., 9.7143e-01,
          9.7244e-01, 9.7245e-01]],
        [[9.0437e-03, 9.4368e-03, 9.6123e-03,  ..., 4.1381e-04,
          9.3509e-03, 9.3510e-03],
         [9.0437e-03, 9.4368e-03, 9.6123e-03,  ..., 1.6925e-04,
          9.3509e-03, 9.3510e-03],
         [9.0437e-03, 9.4368e-03, 9.6123e-03,  ..., 9.9925e-01,
          9.3509e-03, 9.3510e-03],
         [9.7287e-01, 9.7169e-01, 9.7116e-01,  ..., 1.6925e-04,
          9.7195e-01, 9.7195e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 314:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0105, 0.0105, 0.0108,  ..., 0.0107, 0.0110, 0.0109],
         [0.0105, 0.0105, 0.0108,  ..., 0.0107, 0.0110, 0.0109],
         [0.0105, 0.0105, 0.0108,  ..., 0.0107, 0.0110, 0.0109],
         [0.9685, 0.9685, 0.9675,  ..., 0.9678, 0.9670, 0.9673]],
        [[0.0109, 0.0113, 0.0115,  ..., 0.0114, 0.0108, 0.0112],
         [0.0109, 0.0113, 0.0115,  ..., 0.0114, 0.0108, 0.0112],
         [0.0109, 0.0113, 0.0115,  ..., 0.0114, 0.0108, 0.0112],
         [0.9672, 0.9660, 0.9654,  ..., 0.9658, 0.9677, 0.9664]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:13:11,985 [Process: 0] Synchronize training processes
2024-08-16 16:13:11,985 [Process: 0] Evaluating...
2024-08-16 16:13:11,987 [Process: 0] EPOCH 315:
2024-08-16 16:13:11,989 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.9742e-03, 8.8288e-03, 8.7912e-03,  ..., 9.1083e-03,
          9.4415e-03, 9.3176e-03],
         [8.9742e-03, 8.8288e-03, 8.7912e-03,  ..., 9.1083e-03,
          9.4415e-03, 9.3176e-03],
         [8.9742e-03, 8.8288e-03, 8.7912e-03,  ..., 9.1083e-03,
          9.4415e-03, 9.3176e-03],
         [9.7308e-01, 9.7351e-01, 9.7363e-01,  ..., 9.7268e-01,
          9.7168e-01, 9.7205e-01]],
        [[9.5587e-03, 9.4677e-03, 9.4898e-03,  ..., 4.8029e-04,
          9.7861e-03, 9.3672e-03],
         [9.5587e-03, 9.4677e-03, 9.4898e-03,  ..., 4.8029e-04,
          9.7861e-03, 9.3672e-03],
         [9.5587e-03, 9.4677e-03, 9.4898e-03,  ..., 9.9856e-01,
          9.7861e-03, 9.3672e-03],
         [9.7132e-01, 9.7160e-01, 9.7153e-01,  ..., 4.8029e-04,
          9.7064e-01, 9.7190e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 315:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0110, 0.0106, 0.0108,  ..., 0.0109, 0.0108, 0.0107],
         [0.0110, 0.0106, 0.0108,  ..., 0.0109, 0.0108, 0.0107],
         [0.0110, 0.0106, 0.0108,  ..., 0.0109, 0.0108, 0.0107],
         [0.9669, 0.9681, 0.9677,  ..., 0.9672, 0.9677, 0.9678]],
        [[0.0112, 0.0113, 0.0112,  ..., 0.0112, 0.0105, 0.0111],
         [0.0112, 0.0113, 0.0112,  ..., 0.0112, 0.0105, 0.0111],
         [0.0112, 0.0113, 0.0112,  ..., 0.0112, 0.0105, 0.0111],
         [0.9665, 0.9662, 0.9665,  ..., 0.9663, 0.9686, 0.9667]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:13:13,896 [Process: 0] Synchronize training processes
2024-08-16 16:13:13,896 [Process: 0] Evaluating...
2024-08-16 16:13:13,898 [Process: 0] EPOCH 316:
2024-08-16 16:13:13,900 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.0665e-03, 9.4064e-03, 9.2890e-03,  ..., 9.4970e-03,
          9.3979e-03, 9.2706e-03],
         [9.0665e-03, 9.4064e-03, 9.2890e-03,  ..., 9.4970e-03,
          9.3979e-03, 9.2706e-03],
         [9.0665e-03, 9.4064e-03, 9.2890e-03,  ..., 9.4970e-03,
          9.3979e-03, 9.2706e-03],
         [9.7280e-01, 9.7178e-01, 9.7213e-01,  ..., 9.7151e-01,
          9.7181e-01, 9.7219e-01]],
        [[9.1346e-03, 9.4256e-03, 9.0297e-03,  ..., 8.6737e-04,
          9.6491e-03, 9.3588e-03],
         [9.1346e-03, 9.4256e-03, 9.0297e-03,  ..., 5.2497e-04,
          9.6491e-03, 9.3588e-03],
         [9.1346e-03, 9.4256e-03, 9.0297e-03,  ..., 9.9808e-01,
          9.6491e-03, 9.3588e-03],
         [9.7260e-01, 9.7172e-01, 9.7291e-01,  ..., 5.2497e-04,
          9.7105e-01, 9.7192e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 316:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0106, 0.0110, 0.0106,  ..., 0.0101, 0.0106, 0.0108],
         [0.0106, 0.0110, 0.0106,  ..., 0.0101, 0.0106, 0.0108],
         [0.0106, 0.0110, 0.0106,  ..., 0.0101, 0.0106, 0.0108],
         [0.9682, 0.9671, 0.9682,  ..., 0.9697, 0.9681, 0.9676]],
        [[0.0109, 0.0112, 0.0110,  ..., 0.0106, 0.0104, 0.0111],
         [0.0109, 0.0112, 0.0110,  ..., 0.0106, 0.0104, 0.0111],
         [0.0109, 0.0112, 0.0110,  ..., 0.0106, 0.0104, 0.0111],
         [0.9673, 0.9664, 0.9671,  ..., 0.9683, 0.9687, 0.9666]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:13:15,808 [Process: 0] Synchronize training processes
2024-08-16 16:13:15,808 [Process: 0] Evaluating...
2024-08-16 16:13:15,810 [Process: 0] EPOCH 317:
2024-08-16 16:13:15,812 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0093, 0.0094,  ..., 0.0094, 0.0095, 0.0097],
         [0.0090, 0.0093, 0.0094,  ..., 0.0094, 0.0095, 0.0097],
         [0.0090, 0.0093, 0.0094,  ..., 0.0094, 0.0095, 0.0097],
         [0.9731, 0.9722, 0.9717,  ..., 0.9719, 0.9714, 0.9709]],
        [[0.0094, 0.0091, 0.0094,  ..., 0.0123, 0.0094, 0.0093],
         [0.0094, 0.0091, 0.0094,  ..., 0.0123, 0.0094, 0.0093],
         [0.0094, 0.0091, 0.0094,  ..., 0.9632, 0.0094, 0.0093],
         [0.9719, 0.9726, 0.9717,  ..., 0.0123, 0.9719, 0.9722]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 317:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0106, 0.0104, 0.0103,  ..., 0.0108, 0.0107, 0.0103],
         [0.0106, 0.0104, 0.0103,  ..., 0.0108, 0.0107, 0.0103],
         [0.0106, 0.0104, 0.0103,  ..., 0.0108, 0.0107, 0.0103],
         [0.9681, 0.9687, 0.9691,  ..., 0.9677, 0.9679, 0.9691]],
        [[0.0110, 0.0110, 0.0111,  ..., 0.0111, 0.0110, 0.0108],
         [0.0110, 0.0110, 0.0111,  ..., 0.0111, 0.0110, 0.0108],
         [0.0110, 0.0110, 0.0111,  ..., 0.0111, 0.0110, 0.0108],
         [0.9670, 0.9670, 0.9667,  ..., 0.9666, 0.9670, 0.9675]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:13:17,727 [Process: 0] Synchronize training processes
2024-08-16 16:13:17,727 [Process: 0] Evaluating...
2024-08-16 16:13:17,729 [Process: 0] EPOCH 318:
2024-08-16 16:13:17,731 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.7994e-03, 9.1166e-03, 9.2196e-03,  ..., 9.1930e-03,
          9.6680e-03, 9.4559e-03],
         [8.7994e-03, 9.1166e-03, 9.2196e-03,  ..., 9.1930e-03,
          9.6680e-03, 9.4559e-03],
         [8.7994e-03, 9.1166e-03, 9.2196e-03,  ..., 9.1930e-03,
          9.6680e-03, 9.4559e-03],
         [9.7360e-01, 9.7265e-01, 9.7234e-01,  ..., 9.7242e-01,
          9.7100e-01, 9.7163e-01]],
        [[9.2774e-03, 9.5551e-03, 9.3590e-03,  ..., 6.4885e-04,
          9.2828e-03, 9.3648e-03],
         [9.2774e-03, 9.5551e-03, 9.3590e-03,  ..., 6.4885e-04,
          9.2828e-03, 9.3648e-03],
         [9.2774e-03, 9.5551e-03, 9.3590e-03,  ..., 9.9805e-01,
          9.2828e-03, 9.3648e-03],
         [9.7217e-01, 9.7133e-01, 9.7192e-01,  ..., 6.4885e-04,
          9.7215e-01, 9.7191e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 318:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0113, 0.0111, 0.0109,  ..., 0.0110, 0.0115, 0.0112],
         [0.0113, 0.0111, 0.0109,  ..., 0.0110, 0.0115, 0.0112],
         [0.0113, 0.0111, 0.0109,  ..., 0.0110, 0.0115, 0.0112],
         [0.9662, 0.9667, 0.9672,  ..., 0.9670, 0.9654, 0.9665]],
        [[0.0115, 0.0114, 0.0113,  ..., 0.0110, 0.0113, 0.0115],
         [0.0115, 0.0114, 0.0113,  ..., 0.0110, 0.0113, 0.0115],
         [0.0115, 0.0114, 0.0113,  ..., 0.0110, 0.0113, 0.0115],
         [0.9655, 0.9659, 0.9660,  ..., 0.9671, 0.9662, 0.9654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:13:19,635 [Process: 0] Synchronize training processes
2024-08-16 16:13:19,635 [Process: 0] Evaluating...
2024-08-16 16:13:19,637 [Process: 0] EPOCH 319:
2024-08-16 16:13:19,639 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.3533e-03, 9.5110e-03, 9.1828e-03,  ..., 9.0781e-03,
          9.1756e-03, 9.4059e-03],
         [9.3533e-03, 9.5110e-03, 9.1828e-03,  ..., 9.0781e-03,
          9.1756e-03, 9.4059e-03],
         [9.3533e-03, 9.5110e-03, 9.1828e-03,  ..., 9.0781e-03,
          9.1756e-03, 9.4059e-03],
         [9.7194e-01, 9.7147e-01, 9.7245e-01,  ..., 9.7277e-01,
          9.7247e-01, 9.7178e-01]],
        [[9.1710e-03, 9.1602e-03, 9.1646e-03,  ..., 2.3186e-04,
          8.9091e-03, 9.1712e-03],
         [9.1710e-03, 9.1602e-03, 9.1646e-03,  ..., 2.0063e-04,
          8.9091e-03, 9.1712e-03],
         [9.1710e-03, 9.1602e-03, 9.1646e-03,  ..., 9.9937e-01,
          8.9091e-03, 9.1712e-03],
         [9.7249e-01, 9.7252e-01, 9.7251e-01,  ..., 2.0063e-04,
          9.7327e-01, 9.7249e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 319:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0105, 0.0107, 0.0109,  ..., 0.0104, 0.0103, 0.0109],
         [0.0105, 0.0107, 0.0109,  ..., 0.0104, 0.0103, 0.0109],
         [0.0105, 0.0107, 0.0109,  ..., 0.0104, 0.0103, 0.0109],
         [0.9685, 0.9679, 0.9673,  ..., 0.9687, 0.9692, 0.9672]],
        [[0.0109, 0.0109, 0.0109,  ..., 0.0108, 0.0109, 0.0106],
         [0.0109, 0.0109, 0.0109,  ..., 0.0108, 0.0109, 0.0106],
         [0.0109, 0.0109, 0.0109,  ..., 0.0108, 0.0109, 0.0106],
         [0.9673, 0.9674, 0.9673,  ..., 0.9677, 0.9674, 0.9683]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.1034e-03, 8.9704e-03, 9.0451e-03,  ..., 8.8074e-03,
          9.3722e-03, 8.6648e-03],
         [9.1034e-03, 8.9704e-03, 9.0451e-03,  ..., 8.8074e-03,
          9.3722e-03, 8.6648e-03],
         [9.1034e-03, 8.9704e-03, 9.0451e-03,  ..., 8.8074e-03,
          9.3722e-03, 8.6648e-03],
         [9.7269e-01, 9.7309e-01, 9.7286e-01,  ..., 9.7358e-01,
          9.7188e-01, 9.7401e-01]],
        [[9.1877e-03, 9.2711e-03, 8.8769e-03,  ..., 3.5132e-04,
          9.2999e-03, 1.0130e-02],
         [9.1877e-03, 9.2711e-03, 8.8769e-03,  ..., 3.5132e-04,
          9.2999e-03, 1.0130e-02],
         [9.1877e-03, 9.2711e-03, 8.8769e-03,  ..., 9.9895e-01,
          9.2999e-03, 1.0130e-02],
         [9.7244e-01, 9.7219e-01, 9.7337e-01,  ..., 3.5132e-04,
          9.7210e-01, 9.6961e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:13:21,542 [Process: 0] Synchronize training processes
2024-08-16 16:13:21,542 [Process: 0] Evaluating...
2024-08-16 16:13:21,544 [Process: 0] EPOCH 320:
2024-08-16 16:13:21,546 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 320:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.0104, 0.0104,  ..., 0.0101, 0.0106, 0.0106],
         [0.0102, 0.0104, 0.0104,  ..., 0.0101, 0.0106, 0.0106],
         [0.0102, 0.0104, 0.0104,  ..., 0.0101, 0.0106, 0.0106],
         [0.9694, 0.9687, 0.9687,  ..., 0.9697, 0.9681, 0.9683]],
        [[0.0105, 0.0107, 0.0108,  ..., 0.0105, 0.0104, 0.0105],
         [0.0105, 0.0107, 0.0108,  ..., 0.0105, 0.0104, 0.0105],
         [0.0105, 0.0107, 0.0108,  ..., 0.0105, 0.0104, 0.0105],
         [0.9684, 0.9680, 0.9676,  ..., 0.9686, 0.9689, 0.9685]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.0017e-03, 9.0934e-03, 9.2554e-03,  ..., 9.1784e-03,
          1.0365e-02, 9.2176e-03],
         [9.0017e-03, 9.0934e-03, 9.2554e-03,  ..., 9.1784e-03,
          1.0365e-02, 9.2176e-03],
         [9.0017e-03, 9.0934e-03, 9.2554e-03,  ..., 9.1784e-03,
          1.0365e-02, 9.2176e-03],
         [9.7299e-01, 9.7272e-01, 9.7223e-01,  ..., 9.7246e-01,
          9.6890e-01, 9.7235e-01]],
        [[8.6722e-03, 8.9903e-03, 9.0206e-03,  ..., 5.5967e-04,
          9.0646e-03, 9.4998e-03],
         [8.6722e-03, 8.9903e-03, 9.0206e-03,  ..., 3.6946e-04,
          9.0646e-03, 9.4998e-03],
         [8.6722e-03, 8.9903e-03, 9.0206e-03,  ..., 9.9870e-01,
          9.0646e-03, 9.4998e-03],
         [9.7398e-01, 9.7303e-01, 9.7294e-01,  ..., 3.6946e-04,
          9.7281e-01, 9.7150e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 321:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:23,451 [Process: 0] Synchronize training processes
2024-08-16 16:13:23,451 [Process: 0] Evaluating...
2024-08-16 16:13:23,453 [Process: 0] EPOCH 321:
2024-08-16 16:13:23,455 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0100, 0.0108, 0.0107,  ..., 0.0106, 0.0106, 0.0106],
         [0.0100, 0.0108, 0.0107,  ..., 0.0106, 0.0106, 0.0106],
         [0.0100, 0.0108, 0.0107,  ..., 0.0106, 0.0106, 0.0106],
         [0.9699, 0.9676, 0.9679,  ..., 0.9681, 0.9681, 0.9682]],
        [[0.0111, 0.0109, 0.0110,  ..., 0.0107, 0.0107, 0.0108],
         [0.0111, 0.0109, 0.0110,  ..., 0.0107, 0.0107, 0.0108],
         [0.0111, 0.0109, 0.0110,  ..., 0.0107, 0.0107, 0.0108],
         [0.9668, 0.9672, 0.9671,  ..., 0.9679, 0.9679, 0.9677]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0089, 0.0091,  ..., 0.0090, 0.0093, 0.0093],
         [0.0089, 0.0089, 0.0091,  ..., 0.0090, 0.0093, 0.0093],
         [0.0089, 0.0089, 0.0091,  ..., 0.0090, 0.0093, 0.0093],
         [0.9734, 0.9733, 0.9726,  ..., 0.9731, 0.9722, 0.9720]],
        [[0.0092, 0.0092, 0.0088,  ..., 0.0022, 0.0092, 0.0088],
         [0.0092, 0.0092, 0.0088,  ..., 0.0019, 0.0092, 0.0088],
         [0.0092, 0.0092, 0.0088,  ..., 0.9941, 0.0092, 0.0088],
         [0.9724, 0.9725, 0.9735,  ..., 0.0019, 0.9723, 0.9735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 322:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:25,360 [Process: 0] Synchronize training processes
2024-08-16 16:13:25,360 [Process: 0] Evaluating...
2024-08-16 16:13:25,369 [Process: 0] EPOCH 322:
2024-08-16 16:13:25,371 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0103, 0.0104,  ..., 0.0111, 0.0105, 0.0105],
         [0.0099, 0.0103, 0.0104,  ..., 0.0111, 0.0105, 0.0105],
         [0.0099, 0.0103, 0.0104,  ..., 0.0111, 0.0105, 0.0105],
         [0.9703, 0.9692, 0.9689,  ..., 0.9668, 0.9686, 0.9685]],
        [[0.0105, 0.0112, 0.0110,  ..., 0.0107, 0.0104, 0.0108],
         [0.0105, 0.0112, 0.0110,  ..., 0.0107, 0.0104, 0.0108],
         [0.0105, 0.0112, 0.0110,  ..., 0.0107, 0.0104, 0.0108],
         [0.9686, 0.9664, 0.9671,  ..., 0.9680, 0.9689, 0.9676]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0088, 0.0090,  ..., 0.0091, 0.0092, 0.0094],
         [0.0094, 0.0088, 0.0090,  ..., 0.0091, 0.0092, 0.0094],
         [0.0094, 0.0088, 0.0090,  ..., 0.0091, 0.0092, 0.0094],
         [0.9719, 0.9735, 0.9731,  ..., 0.9726, 0.9724, 0.9719]],
        [[0.0091, 0.0087, 0.0093,  ..., 0.0011, 0.0097, 0.0091],
         [0.0091, 0.0087, 0.0093,  ..., 0.0011, 0.0097, 0.0091],
         [0.0091, 0.0087, 0.0093,  ..., 0.9968, 0.0097, 0.0091],
         [0.9727, 0.9740, 0.9722,  ..., 0.0011, 0.9708, 0.9728]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 323:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:27,268 [Process: 0] Synchronize training processes
2024-08-16 16:13:27,269 [Process: 0] Evaluating...
2024-08-16 16:13:27,271 [Process: 0] EPOCH 323:
2024-08-16 16:13:27,273 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0103, 0.0103, 0.0108,  ..., 0.0104, 0.0102, 0.0104],
         [0.0103, 0.0103, 0.0108,  ..., 0.0104, 0.0102, 0.0104],
         [0.0103, 0.0103, 0.0108,  ..., 0.0104, 0.0102, 0.0104],
         [0.9692, 0.9690, 0.9676,  ..., 0.9688, 0.9694, 0.9688]],
        [[0.0105, 0.0105, 0.0108,  ..., 0.0105, 0.0106, 0.0107],
         [0.0105, 0.0105, 0.0108,  ..., 0.0105, 0.0106, 0.0107],
         [0.0105, 0.0105, 0.0108,  ..., 0.0105, 0.0106, 0.0107],
         [0.9685, 0.9686, 0.9675,  ..., 0.9685, 0.9683, 0.9680]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.5288e-03, 9.1942e-03, 8.8766e-03,  ..., 9.6348e-03,
          8.9865e-03, 8.9796e-03],
         [9.5288e-03, 9.1942e-03, 8.8766e-03,  ..., 9.6348e-03,
          8.9865e-03, 8.9796e-03],
         [9.5288e-03, 9.1942e-03, 8.8766e-03,  ..., 9.6348e-03,
          8.9865e-03, 8.9796e-03],
         [9.7141e-01, 9.7242e-01, 9.7337e-01,  ..., 9.7110e-01,
          9.7304e-01, 9.7306e-01]],
        [[8.8668e-03, 8.6676e-03, 8.9845e-03,  ..., 1.2727e-04,
          8.8831e-03, 9.5070e-03],
         [8.8668e-03, 8.6676e-03, 8.9845e-03,  ..., 6.9038e-05,
          8.8831e-03, 9.5070e-03],
         [8.8668e-03, 8.6676e-03, 8.9845e-03,  ..., 9.9973e-01,
          8.8831e-03, 9.5070e-03],
         [9.7340e-01, 9.7400e-01, 9.7305e-01,  ..., 6.9038e-05,
          9.7335e-01, 9.7148e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 324:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:29,182 [Process: 0] Synchronize training processes
2024-08-16 16:13:29,183 [Process: 0] Evaluating...
2024-08-16 16:13:29,185 [Process: 0] EPOCH 324:
2024-08-16 16:13:29,187 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0103, 0.0102, 0.0102,  ..., 0.0105, 0.0102, 0.0107],
         [0.0103, 0.0102, 0.0102,  ..., 0.0105, 0.0102, 0.0107],
         [0.0103, 0.0102, 0.0102,  ..., 0.0105, 0.0102, 0.0107],
         [0.9690, 0.9693, 0.9695,  ..., 0.9684, 0.9695, 0.9678]],
        [[0.0108, 0.0105, 0.0106,  ..., 0.0100, 0.0102, 0.0104],
         [0.0108, 0.0105, 0.0106,  ..., 0.0100, 0.0102, 0.0104],
         [0.0108, 0.0105, 0.0106,  ..., 0.0100, 0.0102, 0.0104],
         [0.9675, 0.9686, 0.9683,  ..., 0.9699, 0.9695, 0.9688]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.8308e-03, 9.1128e-03, 9.4385e-03,  ..., 8.5848e-03,
          8.8240e-03, 9.0663e-03],
         [8.8308e-03, 9.1128e-03, 9.4385e-03,  ..., 8.5848e-03,
          8.8240e-03, 9.0663e-03],
         [8.8308e-03, 9.1128e-03, 9.4385e-03,  ..., 8.5848e-03,
          8.8240e-03, 9.0663e-03],
         [9.7351e-01, 9.7266e-01, 9.7168e-01,  ..., 9.7425e-01,
          9.7353e-01, 9.7280e-01]],
        [[8.5856e-03, 9.2138e-03, 8.9265e-03,  ..., 8.8137e-04,
          9.1983e-03, 9.2444e-03],
         [8.5856e-03, 9.2138e-03, 8.9265e-03,  ..., 1.4684e-04,
          9.1983e-03, 9.2444e-03],
         [8.5856e-03, 9.2138e-03, 8.9265e-03,  ..., 9.9883e-01,
          9.1983e-03, 9.2444e-03],
         [9.7424e-01, 9.7236e-01, 9.7322e-01,  ..., 1.4684e-04,
          9.7241e-01, 9.7227e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 325:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:31,161 [Process: 0] Synchronize training processes
2024-08-16 16:13:31,161 [Process: 0] Evaluating...
2024-08-16 16:13:31,163 [Process: 0] EPOCH 325:
2024-08-16 16:13:31,165 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0100, 0.0104,  ..., 0.0102, 0.0103, 0.0101],
         [0.0107, 0.0100, 0.0104,  ..., 0.0102, 0.0103, 0.0101],
         [0.0107, 0.0100, 0.0104,  ..., 0.0102, 0.0103, 0.0101],
         [0.9679, 0.9701, 0.9689,  ..., 0.9695, 0.9690, 0.9696]],
        [[0.0105, 0.0104, 0.0106,  ..., 0.0103, 0.0102, 0.0101],
         [0.0105, 0.0104, 0.0106,  ..., 0.0103, 0.0102, 0.0101],
         [0.0105, 0.0104, 0.0106,  ..., 0.0103, 0.0102, 0.0101],
         [0.9685, 0.9689, 0.9681,  ..., 0.9692, 0.9693, 0.9697]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0087, 0.0090,  ..., 0.0085, 0.0095, 0.0093],
         [0.0089, 0.0087, 0.0090,  ..., 0.0085, 0.0095, 0.0093],
         [0.0089, 0.0087, 0.0090,  ..., 0.0085, 0.0095, 0.0093],
         [0.9733, 0.9739, 0.9729,  ..., 0.9744, 0.9716, 0.9721]],
        [[0.0089, 0.0092, 0.0090,  ..., 0.0024, 0.0094, 0.0089],
         [0.0089, 0.0092, 0.0090,  ..., 0.0024, 0.0094, 0.0089],
         [0.0089, 0.0092, 0.0090,  ..., 0.9928, 0.0094, 0.0089],
         [0.9732, 0.9723, 0.9731,  ..., 0.0024, 0.9718, 0.9732]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 326:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:33,116 [Process: 0] Synchronize training processes
2024-08-16 16:13:33,117 [Process: 0] Evaluating...
2024-08-16 16:13:33,118 [Process: 0] EPOCH 326:
2024-08-16 16:13:33,120 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0104, 0.0105, 0.0104,  ..., 0.0101, 0.0103, 0.0101],
         [0.0104, 0.0105, 0.0104,  ..., 0.0101, 0.0103, 0.0101],
         [0.0104, 0.0105, 0.0104,  ..., 0.0101, 0.0103, 0.0101],
         [0.9689, 0.9685, 0.9689,  ..., 0.9696, 0.9691, 0.9698]],
        [[0.0104, 0.0103, 0.0106,  ..., 0.0104, 0.0104, 0.0104],
         [0.0104, 0.0103, 0.0106,  ..., 0.0104, 0.0104, 0.0104],
         [0.0104, 0.0103, 0.0106,  ..., 0.0104, 0.0104, 0.0104],
         [0.9688, 0.9690, 0.9682,  ..., 0.9689, 0.9689, 0.9687]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.9535e-03, 8.4337e-03, 8.7234e-03,  ..., 8.9567e-03,
          8.9325e-03, 8.7723e-03],
         [8.9535e-03, 8.4337e-03, 8.7234e-03,  ..., 8.9567e-03,
          8.9325e-03, 8.7723e-03],
         [8.9535e-03, 8.4337e-03, 8.7234e-03,  ..., 8.9567e-03,
          8.9325e-03, 8.7723e-03],
         [9.7314e-01, 9.7470e-01, 9.7383e-01,  ..., 9.7313e-01,
          9.7320e-01, 9.7368e-01]],
        [[9.0911e-03, 8.7513e-03, 8.7442e-03,  ..., 9.7316e-04,
          8.8266e-03, 9.5052e-03],
         [9.0911e-03, 8.7513e-03, 8.7442e-03,  ..., 9.7316e-04,
          8.8266e-03, 9.5052e-03],
         [9.0911e-03, 8.7513e-03, 8.7442e-03,  ..., 9.9708e-01,
          8.8266e-03, 9.5052e-03],
         [9.7273e-01, 9.7375e-01, 9.7377e-01,  ..., 9.7316e-04,
          9.7352e-01, 9.7148e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 327:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:35,031 [Process: 0] Synchronize training processes
2024-08-16 16:13:35,031 [Process: 0] Evaluating...
2024-08-16 16:13:35,033 [Process: 0] EPOCH 327:
2024-08-16 16:13:35,035 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.0101, 0.0103,  ..., 0.0105, 0.0101, 0.0100],
         [0.0102, 0.0101, 0.0103,  ..., 0.0105, 0.0101, 0.0100],
         [0.0102, 0.0101, 0.0103,  ..., 0.0105, 0.0101, 0.0100],
         [0.9693, 0.9697, 0.9692,  ..., 0.9685, 0.9696, 0.9699]],
        [[0.0107, 0.0102, 0.0102,  ..., 0.0105, 0.0100, 0.0101],
         [0.0107, 0.0102, 0.0102,  ..., 0.0105, 0.0100, 0.0101],
         [0.0107, 0.0102, 0.0102,  ..., 0.0105, 0.0100, 0.0101],
         [0.9680, 0.9693, 0.9694,  ..., 0.9684, 0.9699, 0.9696]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.6078e-03, 8.6000e-03, 8.9983e-03,  ..., 8.6886e-03,
          9.0306e-03, 8.9519e-03],
         [8.6078e-03, 8.6000e-03, 8.9983e-03,  ..., 8.6886e-03,
          9.0306e-03, 8.9519e-03],
         [8.6078e-03, 8.6000e-03, 8.9983e-03,  ..., 8.6886e-03,
          9.0306e-03, 8.9519e-03],
         [9.7418e-01, 9.7420e-01, 9.7301e-01,  ..., 9.7393e-01,
          9.7291e-01, 9.7314e-01]],
        [[8.6421e-03, 8.6406e-03, 8.9994e-03,  ..., 5.3038e-04,
          8.8736e-03, 8.9701e-03],
         [8.6421e-03, 8.6406e-03, 8.9994e-03,  ..., 5.3038e-04,
          8.8736e-03, 8.9701e-03],
         [8.6421e-03, 8.6406e-03, 8.9994e-03,  ..., 9.9841e-01,
          8.8736e-03, 8.9701e-03],
         [9.7407e-01, 9.7408e-01, 9.7300e-01,  ..., 5.3038e-04,
          9.7338e-01, 9.7309e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 328:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:36,947 [Process: 0] Synchronize training processes
2024-08-16 16:13:36,948 [Process: 0] Evaluating...
2024-08-16 16:13:36,950 [Process: 0] EPOCH 328:
2024-08-16 16:13:36,952 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0100, 0.0107,  ..., 0.0103, 0.0098, 0.0101],
         [0.0101, 0.0100, 0.0107,  ..., 0.0103, 0.0098, 0.0101],
         [0.0101, 0.0100, 0.0107,  ..., 0.0103, 0.0098, 0.0101],
         [0.9696, 0.9701, 0.9680,  ..., 0.9690, 0.9705, 0.9698]],
        [[0.0101, 0.0105, 0.0101,  ..., 0.0101, 0.0103, 0.0102],
         [0.0101, 0.0105, 0.0101,  ..., 0.0101, 0.0103, 0.0102],
         [0.0101, 0.0105, 0.0101,  ..., 0.0101, 0.0103, 0.0102],
         [0.9697, 0.9685, 0.9697,  ..., 0.9696, 0.9692, 0.9695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.8983e-03, 8.6577e-03, 9.0339e-03,  ..., 8.8631e-03,
          8.9777e-03, 8.7560e-03],
         [8.8983e-03, 8.6577e-03, 9.0339e-03,  ..., 8.8631e-03,
          8.9777e-03, 8.7560e-03],
         [8.8983e-03, 8.6577e-03, 9.0339e-03,  ..., 8.8631e-03,
          8.9777e-03, 8.7560e-03],
         [9.7331e-01, 9.7403e-01, 9.7290e-01,  ..., 9.7341e-01,
          9.7307e-01, 9.7373e-01]],
        [[8.9374e-03, 8.5209e-03, 8.3496e-03,  ..., 1.7493e-04,
          9.2680e-03, 9.1737e-03],
         [8.9374e-03, 8.5209e-03, 8.3496e-03,  ..., 1.2734e-04,
          9.2680e-03, 9.1737e-03],
         [8.9374e-03, 8.5209e-03, 8.3496e-03,  ..., 9.9957e-01,
          9.2680e-03, 9.1737e-03],
         [9.7319e-01, 9.7444e-01, 9.7495e-01,  ..., 1.2734e-04,
          9.7220e-01, 9.7248e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 329:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:38,857 [Process: 0] Synchronize training processes
2024-08-16 16:13:38,857 [Process: 0] Evaluating...
2024-08-16 16:13:38,859 [Process: 0] EPOCH 329:
2024-08-16 16:13:38,861 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0103, 0.0098,  ..., 0.0101, 0.0100, 0.0104],
         [0.0099, 0.0103, 0.0098,  ..., 0.0101, 0.0100, 0.0104],
         [0.0099, 0.0103, 0.0098,  ..., 0.0101, 0.0100, 0.0104],
         [0.9702, 0.9691, 0.9705,  ..., 0.9698, 0.9700, 0.9688]],
        [[0.0105, 0.0101, 0.0103,  ..., 0.0104, 0.0099, 0.0103],
         [0.0105, 0.0101, 0.0103,  ..., 0.0104, 0.0099, 0.0103],
         [0.0105, 0.0101, 0.0103,  ..., 0.0104, 0.0099, 0.0103],
         [0.9685, 0.9698, 0.9692,  ..., 0.9688, 0.9704, 0.9691]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.5535e-03, 9.0240e-03, 8.8209e-03,  ..., 8.7302e-03,
          8.7421e-03, 8.5163e-03],
         [8.5535e-03, 9.0240e-03, 8.8209e-03,  ..., 8.7302e-03,
          8.7421e-03, 8.5163e-03],
         [8.5535e-03, 9.0240e-03, 8.8209e-03,  ..., 8.7302e-03,
          8.7421e-03, 8.5163e-03],
         [9.7434e-01, 9.7293e-01, 9.7354e-01,  ..., 9.7381e-01,
          9.7377e-01, 9.7445e-01]],
        [[8.4769e-03, 8.7780e-03, 8.3332e-03,  ..., 1.0687e-04,
          8.8923e-03, 9.2658e-03],
         [8.4769e-03, 8.7780e-03, 8.3332e-03,  ..., 4.7145e-05,
          8.8923e-03, 9.2658e-03],
         [8.4769e-03, 8.7780e-03, 8.3332e-03,  ..., 9.9980e-01,
          8.8923e-03, 9.2658e-03],
         [9.7457e-01, 9.7367e-01, 9.7500e-01,  ..., 4.7145e-05,
          9.7332e-01, 9.7220e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 330:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-16 16:13:40,790 [Process: 0] Synchronize training processes
2024-08-16 16:13:40,791 [Process: 0] Evaluating...
2024-08-16 16:13:40,792 [Process: 0] EPOCH 330:
2024-08-16 16:13:40,794 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0103, 0.0099,  ..., 0.0103, 0.0103, 0.0100],
         [0.0097, 0.0103, 0.0099,  ..., 0.0103, 0.0103, 0.0100],
         [0.0097, 0.0103, 0.0099,  ..., 0.0103, 0.0103, 0.0100],
         [0.9708, 0.9690, 0.9703,  ..., 0.9692, 0.9692, 0.9699]],
        [[0.0101, 0.0104, 0.0102,  ..., 0.0101, 0.0099, 0.0102],
         [0.0101, 0.0104, 0.0102,  ..., 0.0101, 0.0099, 0.0102],
         [0.0101, 0.0104, 0.0102,  ..., 0.0101, 0.0099, 0.0102],
         [0.9696, 0.9689, 0.9694,  ..., 0.9697, 0.9703, 0.9694]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.6442e-03, 8.6245e-03, 8.4390e-03,  ..., 8.6710e-03,
          8.8995e-03, 8.8559e-03],
         [8.6442e-03, 8.6245e-03, 8.4390e-03,  ..., 8.6710e-03,
          8.8995e-03, 8.8559e-03],
         [8.6442e-03, 8.6245e-03, 8.4390e-03,  ..., 8.6710e-03,
          8.8995e-03, 8.8559e-03],
         [9.7407e-01, 9.7413e-01, 9.7468e-01,  ..., 9.7399e-01,
          9.7330e-01, 9.7343e-01]],
        [[8.3121e-03, 8.3617e-03, 8.6661e-03,  ..., 2.6495e-04,
          8.5495e-03, 9.1092e-03],
         [8.3121e-03, 8.3617e-03, 8.6661e-03,  ..., 2.6495e-04,
          8.5495e-03, 9.1092e-03],
         [8.3121e-03, 8.3617e-03, 8.6661e-03,  ..., 9.9921e-01,
          8.5495e-03, 9.1092e-03],
         [9.7506e-01, 9.7491e-01, 9.7400e-01,  ..., 2.6495e-04,
          9.7435e-01, 9.7267e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 331:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:42,786 [Process: 0] Synchronize training processes
2024-08-16 16:13:42,787 [Process: 0] Evaluating...
2024-08-16 16:13:42,788 [Process: 0] EPOCH 331:
2024-08-16 16:13:42,790 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0104, 0.0098, 0.0102,  ..., 0.0102, 0.0104, 0.0096],
         [0.0104, 0.0098, 0.0102,  ..., 0.0102, 0.0104, 0.0096],
         [0.0104, 0.0098, 0.0102,  ..., 0.0102, 0.0104, 0.0096],
         [0.9687, 0.9705, 0.9695,  ..., 0.9695, 0.9689, 0.9711]],
        [[0.0106, 0.0101, 0.0104,  ..., 0.0103, 0.0101, 0.0101],
         [0.0106, 0.0101, 0.0104,  ..., 0.0103, 0.0101, 0.0101],
         [0.0106, 0.0101, 0.0104,  ..., 0.0103, 0.0101, 0.0101],
         [0.9682, 0.9697, 0.9689,  ..., 0.9692, 0.9697, 0.9696]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.3003e-03, 8.6819e-03, 8.6210e-03,  ..., 8.7865e-03,
          8.8417e-03, 8.5189e-03],
         [8.3003e-03, 8.6819e-03, 8.6210e-03,  ..., 8.7865e-03,
          8.8417e-03, 8.5189e-03],
         [8.3003e-03, 8.6819e-03, 8.6210e-03,  ..., 8.7865e-03,
          8.8417e-03, 8.5189e-03],
         [9.7510e-01, 9.7395e-01, 9.7414e-01,  ..., 9.7364e-01,
          9.7347e-01, 9.7444e-01]],
        [[8.8888e-03, 8.7381e-03, 8.7125e-03,  ..., 1.6335e-04,
          9.0525e-03, 9.0046e-03],
         [8.8888e-03, 8.7381e-03, 8.7125e-03,  ..., 2.3068e-05,
          9.0525e-03, 9.0046e-03],
         [8.8888e-03, 8.7381e-03, 8.7125e-03,  ..., 9.9979e-01,
          9.0525e-03, 9.0046e-03],
         [9.7333e-01, 9.7379e-01, 9.7386e-01,  ..., 2.3068e-05,
          9.7284e-01, 9.7299e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 332:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:44,885 [Process: 0] Synchronize training processes
2024-08-16 16:13:44,885 [Process: 0] Evaluating...
2024-08-16 16:13:44,893 [Process: 0] EPOCH 332:
2024-08-16 16:13:44,895 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.0102, 0.0100,  ..., 0.0102, 0.0101, 0.0098],
         [0.0102, 0.0102, 0.0100,  ..., 0.0102, 0.0101, 0.0098],
         [0.0102, 0.0102, 0.0100,  ..., 0.0102, 0.0101, 0.0098],
         [0.9693, 0.9695, 0.9701,  ..., 0.9693, 0.9696, 0.9706]],
        [[0.0107, 0.0103, 0.0101,  ..., 0.0101, 0.0099, 0.0101],
         [0.0107, 0.0103, 0.0101,  ..., 0.0101, 0.0099, 0.0101],
         [0.0107, 0.0103, 0.0101,  ..., 0.0101, 0.0099, 0.0101],
         [0.9678, 0.9690, 0.9697,  ..., 0.9696, 0.9702, 0.9698]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.7459e-03, 8.4812e-03, 8.5658e-03,  ..., 8.1717e-03,
          8.8936e-03, 8.7327e-03],
         [8.7459e-03, 8.4812e-03, 8.5658e-03,  ..., 8.1717e-03,
          8.8936e-03, 8.7327e-03],
         [8.7459e-03, 8.4812e-03, 8.5658e-03,  ..., 8.1717e-03,
          8.8936e-03, 8.7327e-03],
         [9.7376e-01, 9.7456e-01, 9.7430e-01,  ..., 9.7548e-01,
          9.7332e-01, 9.7380e-01]],
        [[8.5616e-03, 8.3477e-03, 8.7304e-03,  ..., 6.6086e-05,
          9.1930e-03, 8.8907e-03],
         [8.5616e-03, 8.3477e-03, 8.7304e-03,  ..., 2.5768e-05,
          9.1930e-03, 8.8907e-03],
         [8.5616e-03, 8.3477e-03, 8.7304e-03,  ..., 9.9988e-01,
          9.1930e-03, 8.8907e-03],
         [9.7432e-01, 9.7496e-01, 9.7381e-01,  ..., 2.5768e-05,
          9.7242e-01, 9.7333e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 333:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:46,963 [Process: 0] Synchronize training processes
2024-08-16 16:13:46,963 [Process: 0] Evaluating...
2024-08-16 16:13:46,965 [Process: 0] EPOCH 333:
2024-08-16 16:13:46,967 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0098, 0.0097, 0.0098,  ..., 0.0100, 0.0102, 0.0098],
         [0.0098, 0.0097, 0.0098,  ..., 0.0100, 0.0102, 0.0098],
         [0.0098, 0.0097, 0.0098,  ..., 0.0100, 0.0102, 0.0098],
         [0.9705, 0.9708, 0.9705,  ..., 0.9699, 0.9693, 0.9705]],
        [[0.0101, 0.0102, 0.0100,  ..., 0.0100, 0.0102, 0.0101],
         [0.0101, 0.0102, 0.0100,  ..., 0.0100, 0.0102, 0.0101],
         [0.0101, 0.0102, 0.0100,  ..., 0.0100, 0.0102, 0.0101],
         [0.9697, 0.9695, 0.9701,  ..., 0.9699, 0.9693, 0.9697]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.6050e-03, 8.7973e-03, 8.8196e-03,  ..., 8.4150e-03,
          8.7905e-03, 8.6471e-03],
         [8.6050e-03, 8.7973e-03, 8.8196e-03,  ..., 8.4150e-03,
          8.7905e-03, 8.6471e-03],
         [8.6050e-03, 8.7973e-03, 8.8196e-03,  ..., 8.4150e-03,
          8.7905e-03, 8.6471e-03],
         [9.7419e-01, 9.7361e-01, 9.7354e-01,  ..., 9.7475e-01,
          9.7363e-01, 9.7406e-01]],
        [[8.7468e-03, 8.9780e-03, 8.7715e-03,  ..., 3.2321e-04,
          8.2387e-03, 9.0394e-03],
         [8.7468e-03, 8.9780e-03, 8.7715e-03,  ..., 3.2321e-04,
          8.2387e-03, 9.0394e-03],
         [8.7468e-03, 8.9780e-03, 8.7715e-03,  ..., 9.9903e-01,
          8.2387e-03, 9.0394e-03],
         [9.7376e-01, 9.7307e-01, 9.7369e-01,  ..., 3.2321e-04,
          9.7528e-01, 9.7288e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 334:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:48,966 [Process: 0] Synchronize training processes
2024-08-16 16:13:48,966 [Process: 0] Evaluating...
2024-08-16 16:13:48,968 [Process: 0] EPOCH 334:
2024-08-16 16:13:48,970 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0100, 0.0099,  ..., 0.0098, 0.0102, 0.0098],
         [0.0101, 0.0100, 0.0099,  ..., 0.0098, 0.0102, 0.0098],
         [0.0101, 0.0100, 0.0099,  ..., 0.0098, 0.0102, 0.0098],
         [0.9696, 0.9700, 0.9702,  ..., 0.9706, 0.9695, 0.9705]],
        [[0.0104, 0.0101, 0.0102,  ..., 0.0102, 0.0102, 0.0102],
         [0.0104, 0.0101, 0.0102,  ..., 0.0102, 0.0102, 0.0102],
         [0.0104, 0.0101, 0.0102,  ..., 0.0102, 0.0102, 0.0102],
         [0.9688, 0.9697, 0.9695,  ..., 0.9693, 0.9694, 0.9694]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2759e-03, 8.5820e-03, 8.7588e-03,  ..., 8.4612e-03,
          8.6523e-03, 8.5416e-03],
         [8.2759e-03, 8.5820e-03, 8.7588e-03,  ..., 8.4612e-03,
          8.6523e-03, 8.5416e-03],
         [8.2759e-03, 8.5820e-03, 8.7588e-03,  ..., 8.4612e-03,
          8.6523e-03, 8.5416e-03],
         [9.7517e-01, 9.7425e-01, 9.7372e-01,  ..., 9.7462e-01,
          9.7404e-01, 9.7438e-01]],
        [[8.7107e-03, 8.4361e-03, 8.6238e-03,  ..., 1.3203e-04,
          8.6138e-03, 8.3262e-03],
         [8.7107e-03, 8.4361e-03, 8.6238e-03,  ..., 1.3203e-04,
          8.6138e-03, 8.3262e-03],
         [8.7107e-03, 8.4361e-03, 8.6238e-03,  ..., 9.9960e-01,
          8.6138e-03, 8.3262e-03],
         [9.7387e-01, 9.7469e-01, 9.7413e-01,  ..., 1.3203e-04,
          9.7416e-01, 9.7502e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 335:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:51,018 [Process: 0] Synchronize training processes
2024-08-16 16:13:51,019 [Process: 0] Evaluating...
2024-08-16 16:13:51,021 [Process: 0] EPOCH 335:
2024-08-16 16:13:51,022 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0098, 0.0097, 0.0101,  ..., 0.0098, 0.0099, 0.0097],
         [0.0098, 0.0097, 0.0101,  ..., 0.0098, 0.0099, 0.0097],
         [0.0098, 0.0097, 0.0101,  ..., 0.0098, 0.0099, 0.0097],
         [0.9705, 0.9709, 0.9697,  ..., 0.9705, 0.9702, 0.9710]],
        [[0.0099, 0.0101, 0.0101,  ..., 0.0099, 0.0100, 0.0099],
         [0.0099, 0.0101, 0.0101,  ..., 0.0099, 0.0100, 0.0099],
         [0.0099, 0.0101, 0.0101,  ..., 0.0099, 0.0100, 0.0099],
         [0.9704, 0.9698, 0.9696,  ..., 0.9702, 0.9700, 0.9704]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.4424e-03, 8.4646e-03, 8.6199e-03,  ..., 8.7059e-03,
          8.7514e-03, 8.3603e-03],
         [8.4424e-03, 8.4646e-03, 8.6199e-03,  ..., 8.7059e-03,
          8.7514e-03, 8.3603e-03],
         [8.4424e-03, 8.4646e-03, 8.6199e-03,  ..., 8.7059e-03,
          8.7514e-03, 8.3603e-03],
         [9.7467e-01, 9.7461e-01, 9.7414e-01,  ..., 9.7388e-01,
          9.7375e-01, 9.7492e-01]],
        [[8.7920e-03, 8.5625e-03, 8.6133e-03,  ..., 3.3981e-04,
          8.5984e-03, 8.5885e-03],
         [8.7920e-03, 8.5625e-03, 8.6133e-03,  ..., 2.3962e-04,
          8.5984e-03, 8.5885e-03],
         [8.7920e-03, 8.5625e-03, 8.6133e-03,  ..., 9.9918e-01,
          8.5984e-03, 8.5885e-03],
         [9.7362e-01, 9.7431e-01, 9.7416e-01,  ..., 2.3962e-04,
          9.7420e-01, 9.7423e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 336:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:52,977 [Process: 0] Synchronize training processes
2024-08-16 16:13:52,977 [Process: 0] Evaluating...
2024-08-16 16:13:52,979 [Process: 0] EPOCH 336:
2024-08-16 16:13:52,981 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0098, 0.0097, 0.0097,  ..., 0.0098, 0.0100, 0.0097],
         [0.0098, 0.0097, 0.0097,  ..., 0.0098, 0.0100, 0.0097],
         [0.0098, 0.0097, 0.0097,  ..., 0.0098, 0.0100, 0.0097],
         [0.9705, 0.9708, 0.9710,  ..., 0.9707, 0.9699, 0.9710]],
        [[0.0103, 0.0102, 0.0102,  ..., 0.0100, 0.0100, 0.0102],
         [0.0103, 0.0102, 0.0102,  ..., 0.0100, 0.0100, 0.0102],
         [0.0103, 0.0102, 0.0102,  ..., 0.0100, 0.0100, 0.0102],
         [0.9691, 0.9693, 0.9695,  ..., 0.9699, 0.9699, 0.9694]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2242e-03, 8.3963e-03, 8.4923e-03,  ..., 7.9208e-03,
          8.4863e-03, 8.1756e-03],
         [8.2242e-03, 8.3963e-03, 8.4923e-03,  ..., 7.9208e-03,
          8.4863e-03, 8.1756e-03],
         [8.2242e-03, 8.3963e-03, 8.4923e-03,  ..., 7.9208e-03,
          8.4863e-03, 8.1756e-03],
         [9.7533e-01, 9.7481e-01, 9.7452e-01,  ..., 9.7624e-01,
          9.7454e-01, 9.7547e-01]],
        [[8.3853e-03, 8.1752e-03, 8.7730e-03,  ..., 6.2770e-04,
          8.3694e-03, 8.6220e-03],
         [8.3853e-03, 8.1752e-03, 8.7730e-03,  ..., 6.2770e-04,
          8.3694e-03, 8.6220e-03],
         [8.3853e-03, 8.1752e-03, 8.7730e-03,  ..., 9.9812e-01,
          8.3694e-03, 8.6220e-03],
         [9.7484e-01, 9.7547e-01, 9.7368e-01,  ..., 6.2770e-04,
          9.7489e-01, 9.7413e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 337:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:55,065 [Process: 0] Synchronize training processes
2024-08-16 16:13:55,065 [Process: 0] Evaluating...
2024-08-16 16:13:55,067 [Process: 0] EPOCH 337:
2024-08-16 16:13:55,069 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
         [0.0095, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
         [0.0095, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0098],
         [0.9716, 0.9707, 0.9705,  ..., 0.9706, 0.9706, 0.9705]],
        [[0.0101, 0.0100, 0.0099,  ..., 0.0101, 0.0099, 0.0098],
         [0.0101, 0.0100, 0.0099,  ..., 0.0101, 0.0099, 0.0098],
         [0.0101, 0.0100, 0.0099,  ..., 0.0101, 0.0099, 0.0098],
         [0.9697, 0.9699, 0.9703,  ..., 0.9698, 0.9703, 0.9705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2064e-03, 8.7120e-03, 8.9119e-03,  ..., 8.1501e-03,
          8.3548e-03, 8.3786e-03],
         [8.2064e-03, 8.7120e-03, 8.9119e-03,  ..., 8.1501e-03,
          8.3548e-03, 8.3786e-03],
         [8.2064e-03, 8.7120e-03, 8.9119e-03,  ..., 8.1501e-03,
          8.3548e-03, 8.3786e-03],
         [9.7538e-01, 9.7386e-01, 9.7326e-01,  ..., 9.7555e-01,
          9.7494e-01, 9.7486e-01]],
        [[8.5283e-03, 8.5094e-03, 8.4978e-03,  ..., 7.0768e-04,
          8.5320e-03, 8.8716e-03],
         [8.5283e-03, 8.5094e-03, 8.4978e-03,  ..., 7.0768e-04,
          8.5320e-03, 8.8716e-03],
         [8.5283e-03, 8.5094e-03, 8.4978e-03,  ..., 9.9788e-01,
          8.5320e-03, 8.8716e-03],
         [9.7442e-01, 9.7447e-01, 9.7451e-01,  ..., 7.0768e-04,
          9.7440e-01, 9.7339e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 338:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:57,155 [Process: 0] Synchronize training processes
2024-08-16 16:13:57,156 [Process: 0] Evaluating...
2024-08-16 16:13:57,158 [Process: 0] EPOCH 338:
2024-08-16 16:13:57,160 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0100, 0.0098,  ..., 0.0097, 0.0098, 0.0098],
         [0.0096, 0.0100, 0.0098,  ..., 0.0097, 0.0098, 0.0098],
         [0.0096, 0.0100, 0.0098,  ..., 0.0097, 0.0098, 0.0098],
         [0.9712, 0.9701, 0.9707,  ..., 0.9710, 0.9705, 0.9706]],
        [[0.0101, 0.0097, 0.0101,  ..., 0.0097, 0.0097, 0.0098],
         [0.0101, 0.0097, 0.0101,  ..., 0.0097, 0.0097, 0.0098],
         [0.0101, 0.0097, 0.0101,  ..., 0.0097, 0.0097, 0.0098],
         [0.9698, 0.9710, 0.9696,  ..., 0.9709, 0.9708, 0.9707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0084, 0.0085,  ..., 0.0085, 0.0083, 0.0081],
         [0.0087, 0.0084, 0.0085,  ..., 0.0085, 0.0083, 0.0081],
         [0.0087, 0.0084, 0.0085,  ..., 0.0085, 0.0083, 0.0081],
         [0.9740, 0.9748, 0.9745,  ..., 0.9746, 0.9752, 0.9758]],
        [[0.0085, 0.0085, 0.0083,  ..., 0.0019, 0.0084, 0.0084],
         [0.0085, 0.0085, 0.0083,  ..., 0.0012, 0.0084, 0.0084],
         [0.0085, 0.0085, 0.0083,  ..., 0.9956, 0.0084, 0.0084],
         [0.9745, 0.9746, 0.9751,  ..., 0.0012, 0.9748, 0.9749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 339:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:13:59,244 [Process: 0] Synchronize training processes
2024-08-16 16:13:59,245 [Process: 0] Evaluating...
2024-08-16 16:13:59,247 [Process: 0] EPOCH 339:
2024-08-16 16:13:59,249 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0094, 0.0099,  ..., 0.0096, 0.0096, 0.0098],
         [0.0097, 0.0094, 0.0099,  ..., 0.0096, 0.0096, 0.0098],
         [0.0097, 0.0094, 0.0099,  ..., 0.0096, 0.0096, 0.0098],
         [0.9709, 0.9717, 0.9704,  ..., 0.9711, 0.9712, 0.9705]],
        [[0.0097, 0.0099, 0.0100,  ..., 0.0101, 0.0099, 0.0096],
         [0.0097, 0.0099, 0.0100,  ..., 0.0101, 0.0099, 0.0096],
         [0.0097, 0.0099, 0.0100,  ..., 0.0101, 0.0099, 0.0096],
         [0.9708, 0.9704, 0.9700,  ..., 0.9697, 0.9704, 0.9712]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0082, 0.0083,  ..., 0.0085, 0.0081, 0.0081],
         [0.0082, 0.0082, 0.0083,  ..., 0.0085, 0.0081, 0.0081],
         [0.0082, 0.0082, 0.0083,  ..., 0.0085, 0.0081, 0.0081],
         [0.9755, 0.9755, 0.9752,  ..., 0.9745, 0.9757, 0.9757]],
        [[0.0086, 0.0082, 0.0085,  ..., 0.0015, 0.0083, 0.0086],
         [0.0086, 0.0082, 0.0085,  ..., 0.0015, 0.0083, 0.0086],
         [0.0086, 0.0082, 0.0085,  ..., 0.9955, 0.0083, 0.0086],
         [0.9743, 0.9754, 0.9746,  ..., 0.0015, 0.9751, 0.9743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 340:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:14:01,350 [Process: 0] Synchronize training processes
2024-08-16 16:14:01,350 [Process: 0] Evaluating...
2024-08-16 16:14:01,352 [Process: 0] EPOCH 340:
2024-08-16 16:14:01,354 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0099, 0.0098,  ..., 0.0097, 0.0097, 0.0100],
         [0.0097, 0.0099, 0.0098,  ..., 0.0097, 0.0097, 0.0100],
         [0.0097, 0.0099, 0.0098,  ..., 0.0097, 0.0097, 0.0100],
         [0.9709, 0.9703, 0.9705,  ..., 0.9708, 0.9709, 0.9701]],
        [[0.0099, 0.0100, 0.0098,  ..., 0.0099, 0.0096, 0.0099],
         [0.0099, 0.0100, 0.0098,  ..., 0.0099, 0.0096, 0.0099],
         [0.0099, 0.0100, 0.0098,  ..., 0.0099, 0.0096, 0.0099],
         [0.9704, 0.9701, 0.9706,  ..., 0.9702, 0.9712, 0.9702]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.5636e-03, 8.6917e-03, 8.7208e-03,  ..., 7.7811e-03,
          8.5950e-03, 8.5705e-03],
         [8.5636e-03, 8.6917e-03, 8.7208e-03,  ..., 7.7811e-03,
          8.5950e-03, 8.5705e-03],
         [8.5636e-03, 8.6917e-03, 8.7208e-03,  ..., 7.7811e-03,
          8.5950e-03, 8.5705e-03],
         [9.7431e-01, 9.7392e-01, 9.7384e-01,  ..., 9.7666e-01,
          9.7422e-01, 9.7429e-01]],
        [[8.3194e-03, 8.6663e-03, 8.2915e-03,  ..., 5.2836e-04,
          8.6512e-03, 8.4506e-03],
         [8.3194e-03, 8.6663e-03, 8.2915e-03,  ..., 3.0826e-04,
          8.6512e-03, 8.4506e-03],
         [8.3194e-03, 8.6663e-03, 8.2915e-03,  ..., 9.9886e-01,
          8.6512e-03, 8.4506e-03],
         [9.7504e-01, 9.7400e-01, 9.7513e-01,  ..., 3.0826e-04,
          9.7405e-01, 9.7465e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 341:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:14:03,435 [Process: 0] Synchronize training processes
2024-08-16 16:14:03,435 [Process: 0] Evaluating...
2024-08-16 16:14:03,438 [Process: 0] EPOCH 341:
2024-08-16 16:14:03,440 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0096, 0.0095,  ..., 0.0094, 0.0094, 0.0097],
         [0.0097, 0.0096, 0.0095,  ..., 0.0094, 0.0094, 0.0097],
         [0.0097, 0.0096, 0.0095,  ..., 0.0094, 0.0094, 0.0097],
         [0.9709, 0.9713, 0.9716,  ..., 0.9719, 0.9717, 0.9708]],
        [[0.0097, 0.0098, 0.0097,  ..., 0.0098, 0.0098, 0.0096],
         [0.0097, 0.0098, 0.0097,  ..., 0.0098, 0.0098, 0.0096],
         [0.0097, 0.0098, 0.0097,  ..., 0.0098, 0.0098, 0.0096],
         [0.9709, 0.9705, 0.9708,  ..., 0.9706, 0.9706, 0.9711]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0081, 0.0080,  ..., 0.0082, 0.0085, 0.0082],
         [0.0083, 0.0081, 0.0080,  ..., 0.0082, 0.0085, 0.0082],
         [0.0083, 0.0081, 0.0080,  ..., 0.0082, 0.0085, 0.0082],
         [0.9751, 0.9756, 0.9761,  ..., 0.9754, 0.9746, 0.9753]],
        [[0.0083, 0.0082, 0.0082,  ..., 0.0017, 0.0085, 0.0081],
         [0.0083, 0.0082, 0.0082,  ..., 0.0017, 0.0085, 0.0081],
         [0.0083, 0.0082, 0.0082,  ..., 0.9950, 0.0085, 0.0081],
         [0.9751, 0.9754, 0.9754,  ..., 0.0017, 0.9746, 0.9756]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 342:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:14:05,534 [Process: 0] Synchronize training processes
2024-08-16 16:14:05,535 [Process: 0] Evaluating...
2024-08-16 16:14:05,543 [Process: 0] EPOCH 342:
2024-08-16 16:14:05,545 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0097, 0.0099,  ..., 0.0096, 0.0099, 0.0098],
         [0.0094, 0.0097, 0.0099,  ..., 0.0096, 0.0099, 0.0098],
         [0.0094, 0.0097, 0.0099,  ..., 0.0096, 0.0099, 0.0098],
         [0.9717, 0.9708, 0.9703,  ..., 0.9712, 0.9704, 0.9706]],
        [[0.0099, 0.0098, 0.0098,  ..., 0.0097, 0.0100, 0.0098],
         [0.0099, 0.0098, 0.0098,  ..., 0.0097, 0.0100, 0.0098],
         [0.0099, 0.0098, 0.0098,  ..., 0.0097, 0.0100, 0.0098],
         [0.9702, 0.9705, 0.9706,  ..., 0.9709, 0.9701, 0.9705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0083, 0.0083,  ..., 0.0080, 0.0084, 0.0084],
         [0.0085, 0.0083, 0.0083,  ..., 0.0080, 0.0084, 0.0084],
         [0.0085, 0.0083, 0.0083,  ..., 0.0080, 0.0084, 0.0084],
         [0.9745, 0.9752, 0.9751,  ..., 0.9760, 0.9749, 0.9749]],
        [[0.0083, 0.0083, 0.0084,  ..., 0.0119, 0.0080, 0.0085],
         [0.0083, 0.0083, 0.0084,  ..., 0.0030, 0.0080, 0.0085],
         [0.0083, 0.0083, 0.0084,  ..., 0.9820, 0.0080, 0.0085],
         [0.9751, 0.9751, 0.9749,  ..., 0.0030, 0.9760, 0.9746]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
2024-08-16 16:14:07,631 [Process: 0] Synchronize training processes
2024-08-16 16:14:07,631 [Process: 0] Evaluating...
2024-08-16 16:14:07,633 [Process: 0] EPOCH 343:
2024-08-16 16:14:07,635 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Evaluating...
[Process: 0] EPOCH 343:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0098, 0.0098,  ..., 0.0096, 0.0099, 0.0096],
         [0.0097, 0.0098, 0.0098,  ..., 0.0096, 0.0099, 0.0096],
         [0.0097, 0.0098, 0.0098,  ..., 0.0096, 0.0099, 0.0096],
         [0.9708, 0.9707, 0.9706,  ..., 0.9713, 0.9704, 0.9713]],
        [[0.0099, 0.0101, 0.0098,  ..., 0.0101, 0.0097, 0.0101],
         [0.0099, 0.0101, 0.0098,  ..., 0.0101, 0.0097, 0.0101],
         [0.0099, 0.0101, 0.0098,  ..., 0.0101, 0.0097, 0.0101],
         [0.9702, 0.9698, 0.9707,  ..., 0.9698, 0.9709, 0.9696]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.0705e-03, 8.2814e-03, 8.2309e-03,  ..., 8.1162e-03,
          8.4070e-03, 8.3962e-03],
         [8.0705e-03, 8.2814e-03, 8.2309e-03,  ..., 8.1162e-03,
          8.4070e-03, 8.3962e-03],
         [8.0705e-03, 8.2814e-03, 8.2309e-03,  ..., 8.1162e-03,
          8.4070e-03, 8.3962e-03],
         [9.7579e-01, 9.7516e-01, 9.7531e-01,  ..., 9.7565e-01,
          9.7478e-01, 9.7481e-01]],
        [[8.2749e-03, 8.6056e-03, 8.4197e-03,  ..., 7.7562e-04,
          8.2009e-03, 7.9502e-03],
         [8.2749e-03, 8.6056e-03, 8.4197e-03,  ..., 7.7562e-04,
          8.2009e-03, 7.9502e-03],
         [8.2749e-03, 8.6056e-03, 8.4197e-03,  ..., 9.9767e-01,
          8.2009e-03, 7.9502e-03],
         [9.7518e-01, 9.7418e-01, 9.7474e-01,  ..., 7.7562e-04,
          9.7540e-01, 9.7615e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:14:09,704 [Process: 0] Synchronize training processes
2024-08-16 16:14:09,705 [Process: 0] Evaluating...
2024-08-16 16:14:09,707 [Process: 0] EPOCH 344:
2024-08-16 16:14:09,709 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 344:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0095, 0.0099,  ..., 0.0097, 0.0097, 0.0097],
         [0.0097, 0.0095, 0.0099,  ..., 0.0097, 0.0097, 0.0097],
         [0.0097, 0.0095, 0.0099,  ..., 0.0097, 0.0097, 0.0097],
         [0.9709, 0.9716, 0.9703,  ..., 0.9709, 0.9708, 0.9710]],
        [[0.0097, 0.0099, 0.0098,  ..., 0.0099, 0.0097, 0.0097],
         [0.0097, 0.0099, 0.0098,  ..., 0.0099, 0.0097, 0.0097],
         [0.0097, 0.0099, 0.0098,  ..., 0.0099, 0.0097, 0.0097],
         [0.9708, 0.9704, 0.9706,  ..., 0.9704, 0.9709, 0.9708]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-16 16:14:11,802 [Process: 0] Synchronize training processes
2024-08-16 16:14:11,803 [Process: 0] Evaluating...
2024-08-16 16:14:11,805 [Process: 0] EPOCH 345:
2024-08-16 16:14:11,807 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8235e-03, 8.1586e-03, 8.0975e-03,  ..., 8.3868e-03,
          8.5147e-03, 8.3240e-03],
         [7.8235e-03, 8.1586e-03, 8.0975e-03,  ..., 8.3868e-03,
          8.5147e-03, 8.3240e-03],
         [7.8235e-03, 8.1586e-03, 8.0975e-03,  ..., 8.3868e-03,
          8.5147e-03, 8.3240e-03],
         [9.7653e-01, 9.7552e-01, 9.7571e-01,  ..., 9.7484e-01,
          9.7446e-01, 9.7503e-01]],
        [[8.3673e-03, 8.4645e-03, 8.0774e-03,  ..., 3.5790e-04,
          8.4686e-03, 8.2109e-03],
         [8.3673e-03, 8.4645e-03, 8.0774e-03,  ..., 3.5790e-04,
          8.4686e-03, 8.2109e-03],
         [8.3673e-03, 8.4645e-03, 8.0774e-03,  ..., 9.9893e-01,
          8.4686e-03, 8.2109e-03],
         [9.7490e-01, 9.7461e-01, 9.7577e-01,  ..., 3.5790e-04,
          9.7459e-01, 9.7537e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 345:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0094, 0.0097,  ..., 0.0096, 0.0093, 0.0097],
         [0.0094, 0.0094, 0.0097,  ..., 0.0096, 0.0093, 0.0097],
         [0.0094, 0.0094, 0.0097,  ..., 0.0096, 0.0093, 0.0097],
         [0.9718, 0.9718, 0.9709,  ..., 0.9712, 0.9722, 0.9708]],
        [[0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0094, 0.0096],
         [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0094, 0.0096],
         [0.0098, 0.0098, 0.0098,  ..., 0.0098, 0.0094, 0.0096],
         [0.9705, 0.9706, 0.9707,  ..., 0.9705, 0.9717, 0.9713]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:14:13,891 [Process: 0] Synchronize training processes
2024-08-16 16:14:13,891 [Process: 0] Evaluating...
2024-08-16 16:14:13,893 [Process: 0] EPOCH 346:
2024-08-16 16:14:13,895 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.0912e-03, 8.2132e-03, 8.0990e-03,  ..., 8.4029e-03,
          8.3249e-03, 7.9159e-03],
         [8.0912e-03, 8.2132e-03, 8.0990e-03,  ..., 8.4029e-03,
          8.3249e-03, 7.9159e-03],
         [8.0912e-03, 8.2132e-03, 8.0990e-03,  ..., 8.4029e-03,
          8.3249e-03, 7.9159e-03],
         [9.7573e-01, 9.7536e-01, 9.7570e-01,  ..., 9.7479e-01,
          9.7503e-01, 9.7625e-01]],
        [[8.1086e-03, 8.2839e-03, 8.1630e-03,  ..., 7.8061e-04,
          8.3646e-03, 8.3410e-03],
         [8.1086e-03, 8.2839e-03, 8.1630e-03,  ..., 7.8061e-04,
          8.3646e-03, 8.3410e-03],
         [8.1086e-03, 8.2839e-03, 8.1630e-03,  ..., 9.9766e-01,
          8.3646e-03, 8.3410e-03],
         [9.7567e-01, 9.7515e-01, 9.7551e-01,  ..., 7.8061e-04,
          9.7491e-01, 9.7498e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 346:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0093, 0.0095,  ..., 0.0092, 0.0095, 0.0097],
         [0.0094, 0.0093, 0.0095,  ..., 0.0092, 0.0095, 0.0097],
         [0.0094, 0.0093, 0.0095,  ..., 0.0092, 0.0095, 0.0097],
         [0.9718, 0.9720, 0.9716,  ..., 0.9724, 0.9714, 0.9708]],
        [[0.0096, 0.0095, 0.0095,  ..., 0.0096, 0.0096, 0.0092],
         [0.0096, 0.0095, 0.0095,  ..., 0.0096, 0.0096, 0.0092],
         [0.0096, 0.0095, 0.0095,  ..., 0.0096, 0.0096, 0.0092],
         [0.9712, 0.9715, 0.9716,  ..., 0.9711, 0.9712, 0.9723]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:14:16,000 [Process: 0] Synchronize training processes
2024-08-16 16:14:16,000 [Process: 0] Evaluating...
2024-08-16 16:14:16,002 [Process: 0] EPOCH 347:
2024-08-16 16:14:16,004 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.9276e-03, 7.9545e-03, 7.8476e-03,  ..., 7.9048e-03,
          8.1761e-03, 7.8267e-03],
         [7.9276e-03, 7.9545e-03, 7.8476e-03,  ..., 7.9048e-03,
          8.1761e-03, 7.8267e-03],
         [7.9276e-03, 7.9545e-03, 7.8476e-03,  ..., 7.9048e-03,
          8.1761e-03, 7.8267e-03],
         [9.7622e-01, 9.7614e-01, 9.7646e-01,  ..., 9.7629e-01,
          9.7547e-01, 9.7652e-01]],
        [[8.0047e-03, 7.6235e-03, 8.1766e-03,  ..., 2.6316e-05,
          8.1772e-03, 8.7442e-03],
         [8.0047e-03, 7.6235e-03, 8.1766e-03,  ..., 2.6316e-05,
          8.1772e-03, 8.7442e-03],
         [8.0047e-03, 7.6235e-03, 8.1766e-03,  ..., 9.9992e-01,
          8.1772e-03, 8.7442e-03],
         [9.7599e-01, 9.7713e-01, 9.7547e-01,  ..., 2.6316e-05,
          9.7547e-01, 9.7377e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 347:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0096, 0.0094,  ..., 0.0094, 0.0098, 0.0096],
         [0.0096, 0.0096, 0.0094,  ..., 0.0094, 0.0098, 0.0096],
         [0.0096, 0.0096, 0.0094,  ..., 0.0094, 0.0098, 0.0096],
         [0.9711, 0.9713, 0.9717,  ..., 0.9718, 0.9706, 0.9712]],
        [[0.0098, 0.0099, 0.0095,  ..., 0.0097, 0.0098, 0.0096],
         [0.0098, 0.0099, 0.0095,  ..., 0.0097, 0.0098, 0.0096],
         [0.0098, 0.0099, 0.0095,  ..., 0.0097, 0.0098, 0.0096],
         [0.9707, 0.9704, 0.9715,  ..., 0.9710, 0.9706, 0.9711]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:14:18,101 [Process: 0] Synchronize training processes
2024-08-16 16:14:18,101 [Process: 0] Evaluating...
2024-08-16 16:14:18,103 [Process: 0] EPOCH 348:
2024-08-16 16:14:18,105 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0079, 0.0082, 0.0079,  ..., 0.0077, 0.0082, 0.0083],
         [0.0079, 0.0082, 0.0079,  ..., 0.0077, 0.0082, 0.0083],
         [0.0079, 0.0082, 0.0079,  ..., 0.0077, 0.0082, 0.0083],
         [0.9764, 0.9755, 0.9763,  ..., 0.9768, 0.9755, 0.9752]],
        [[0.0083, 0.0080, 0.0082,  ..., 0.0078, 0.0080, 0.0084],
         [0.0083, 0.0080, 0.0082,  ..., 0.0043, 0.0080, 0.0084],
         [0.0083, 0.0080, 0.0082,  ..., 0.9836, 0.0080, 0.0084],
         [0.9752, 0.9759, 0.9754,  ..., 0.0043, 0.9759, 0.9747]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 348:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0096, 0.0096,  ..., 0.0094, 0.0099, 0.0097],
         [0.0096, 0.0096, 0.0096,  ..., 0.0094, 0.0099, 0.0097],
         [0.0096, 0.0096, 0.0096,  ..., 0.0094, 0.0099, 0.0097],
         [0.9711, 0.9711, 0.9711,  ..., 0.9719, 0.9703, 0.9710]],
        [[0.0096, 0.0098, 0.0097,  ..., 0.0094, 0.0097, 0.0097],
         [0.0096, 0.0098, 0.0097,  ..., 0.0094, 0.0097, 0.0097],
         [0.0096, 0.0098, 0.0097,  ..., 0.0094, 0.0097, 0.0097],
         [0.9713, 0.9706, 0.9709,  ..., 0.9717, 0.9708, 0.9710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:14:20,179 [Process: 0] Synchronize training processes
2024-08-16 16:14:20,179 [Process: 0] Evaluating...
2024-08-16 16:14:20,181 [Process: 0] EPOCH 349:
2024-08-16 16:14:20,183 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.0025e-03, 7.8490e-03, 7.9151e-03,  ..., 7.6010e-03,
          7.8642e-03, 7.8074e-03],
         [8.0025e-03, 7.8490e-03, 7.9151e-03,  ..., 7.6010e-03,
          7.8642e-03, 7.8074e-03],
         [8.0025e-03, 7.8490e-03, 7.9151e-03,  ..., 7.6010e-03,
          7.8642e-03, 7.8074e-03],
         [9.7599e-01, 9.7645e-01, 9.7625e-01,  ..., 9.7720e-01,
          9.7641e-01, 9.7658e-01]],
        [[8.1891e-03, 7.8690e-03, 8.1615e-03,  ..., 1.8798e-05,
          8.0716e-03, 8.3380e-03],
         [8.1891e-03, 7.8690e-03, 8.1615e-03,  ..., 1.8798e-05,
          8.0716e-03, 8.3380e-03],
         [8.1891e-03, 7.8690e-03, 8.1615e-03,  ..., 9.9994e-01,
          8.0716e-03, 8.3380e-03],
         [9.7543e-01, 9.7639e-01, 9.7552e-01,  ..., 1.8798e-05,
          9.7579e-01, 9.7499e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 349:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0096, 0.0095,  ..., 0.0095, 0.0095, 0.0096],
         [0.0095, 0.0096, 0.0095,  ..., 0.0095, 0.0095, 0.0096],
         [0.0095, 0.0096, 0.0095,  ..., 0.0095, 0.0095, 0.0096],
         [0.9716, 0.9711, 0.9714,  ..., 0.9714, 0.9714, 0.9713]],
        [[0.0096, 0.0095, 0.0096,  ..., 0.0095, 0.0095, 0.0094],
         [0.0096, 0.0095, 0.0096,  ..., 0.0095, 0.0095, 0.0094],
         [0.0096, 0.0095, 0.0096,  ..., 0.0095, 0.0095, 0.0094],
         [0.9711, 0.9715, 0.9712,  ..., 0.9716, 0.9714, 0.9717]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:14:22,270 [Process: 0] Synchronize training processes
2024-08-16 16:14:22,270 [Process: 0] Evaluating...
2024-08-16 16:14:22,272 [Process: 0] EPOCH 350:
2024-08-16 16:14:22,274 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.1135e-03, 7.8505e-03, 7.9945e-03,  ..., 7.9500e-03,
          8.1372e-03, 8.0993e-03],
         [8.1135e-03, 7.8505e-03, 7.9945e-03,  ..., 7.9500e-03,
          8.1372e-03, 8.0993e-03],
         [8.1135e-03, 7.8505e-03, 7.9945e-03,  ..., 7.9500e-03,
          8.1372e-03, 8.0993e-03],
         [9.7566e-01, 9.7645e-01, 9.7602e-01,  ..., 9.7615e-01,
          9.7559e-01, 9.7570e-01]],
        [[8.1568e-03, 8.0027e-03, 7.8504e-03,  ..., 2.5878e-04,
          8.4487e-03, 8.0765e-03],
         [8.1568e-03, 8.0027e-03, 7.8504e-03,  ..., 2.5878e-04,
          8.4487e-03, 8.0765e-03],
         [8.1568e-03, 8.0027e-03, 7.8504e-03,  ..., 9.9922e-01,
          8.4487e-03, 8.0765e-03],
         [9.7553e-01, 9.7599e-01, 9.7645e-01,  ..., 2.5878e-04,
          9.7465e-01, 9.7577e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 350:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0093, 0.0096,  ..., 0.0094, 0.0094, 0.0094],
         [0.0095, 0.0093, 0.0096,  ..., 0.0094, 0.0094, 0.0094],
         [0.0095, 0.0093, 0.0096,  ..., 0.0094, 0.0094, 0.0094],
         [0.9716, 0.9721, 0.9713,  ..., 0.9719, 0.9719, 0.9717]],
        [[0.0097, 0.0096, 0.0092,  ..., 0.0095, 0.0097, 0.0097],
         [0.0097, 0.0096, 0.0092,  ..., 0.0095, 0.0097, 0.0097],
         [0.0097, 0.0096, 0.0092,  ..., 0.0095, 0.0097, 0.0097],
         [0.9709, 0.9712, 0.9723,  ..., 0.9716, 0.9710, 0.9710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:14:24,355 [Process: 0] Synchronize training processes
2024-08-16 16:14:24,355 [Process: 0] Evaluating...
2024-08-16 16:14:24,357 [Process: 0] EPOCH 351:
2024-08-16 16:14:24,359 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8122e-03, 7.9615e-03, 8.0630e-03,  ..., 7.8186e-03,
          8.2587e-03, 7.9996e-03],
         [7.8122e-03, 7.9615e-03, 8.0630e-03,  ..., 7.8186e-03,
          8.2587e-03, 7.9996e-03],
         [7.8122e-03, 7.9615e-03, 8.0630e-03,  ..., 7.8186e-03,
          8.2587e-03, 7.9996e-03],
         [9.7656e-01, 9.7612e-01, 9.7581e-01,  ..., 9.7654e-01,
          9.7522e-01, 9.7600e-01]],
        [[7.9763e-03, 7.7347e-03, 7.8626e-03,  ..., 3.5772e-04,
          8.3821e-03, 7.8841e-03],
         [7.9763e-03, 7.7347e-03, 7.8626e-03,  ..., 3.5772e-04,
          8.3821e-03, 7.8841e-03],
         [7.9763e-03, 7.7347e-03, 7.8626e-03,  ..., 9.9893e-01,
          8.3821e-03, 7.8841e-03],
         [9.7607e-01, 9.7680e-01, 9.7641e-01,  ..., 3.5772e-04,
          9.7485e-01, 9.7635e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 351:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:14:26,445 [Process: 0] Synchronize training processes
2024-08-16 16:14:26,445 [Process: 0] Evaluating...
2024-08-16 16:14:26,454 [Process: 0] EPOCH 352:
2024-08-16 16:14:26,456 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0093, 0.0091,  ..., 0.0091, 0.0095, 0.0096],
         [0.0095, 0.0093, 0.0091,  ..., 0.0091, 0.0095, 0.0096],
         [0.0095, 0.0093, 0.0091,  ..., 0.0091, 0.0095, 0.0096],
         [0.9714, 0.9721, 0.9727,  ..., 0.9728, 0.9714, 0.9712]],
        [[0.0096, 0.0097, 0.0093,  ..., 0.0093, 0.0094, 0.0094],
         [0.0096, 0.0097, 0.0093,  ..., 0.0093, 0.0094, 0.0094],
         [0.0096, 0.0097, 0.0093,  ..., 0.0093, 0.0094, 0.0094],
         [0.9711, 0.9710, 0.9720,  ..., 0.9721, 0.9718, 0.9719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.7565e-03, 7.9251e-03, 7.7056e-03,  ..., 7.9233e-03,
          8.3332e-03, 7.6990e-03],
         [7.7565e-03, 7.9251e-03, 7.7056e-03,  ..., 7.9233e-03,
          8.3332e-03, 7.6990e-03],
         [7.7565e-03, 7.9251e-03, 7.7056e-03,  ..., 7.9233e-03,
          8.3332e-03, 7.6990e-03],
         [9.7673e-01, 9.7622e-01, 9.7688e-01,  ..., 9.7623e-01,
          9.7500e-01, 9.7690e-01]],
        [[8.3897e-03, 8.0136e-03, 8.1669e-03,  ..., 8.4117e-04,
          7.8290e-03, 8.0566e-03],
         [8.3897e-03, 8.0136e-03, 8.1669e-03,  ..., 8.4117e-04,
          7.8290e-03, 8.0566e-03],
         [8.3897e-03, 8.0136e-03, 8.1669e-03,  ..., 9.9748e-01,
          7.8290e-03, 8.0566e-03],
         [9.7483e-01, 9.7596e-01, 9.7550e-01,  ..., 8.4117e-04,
          9.7651e-01, 9.7583e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 352:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:14:28,561 [Process: 0] Synchronize training processes
2024-08-16 16:14:28,562 [Process: 0] Evaluating...
2024-08-16 16:14:28,564 [Process: 0] EPOCH 353:
2024-08-16 16:14:28,566 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0093, 0.0094,  ..., 0.0093, 0.0094, 0.0096],
         [0.0091, 0.0093, 0.0094,  ..., 0.0093, 0.0094, 0.0096],
         [0.0091, 0.0093, 0.0094,  ..., 0.0093, 0.0094, 0.0096],
         [0.9728, 0.9721, 0.9719,  ..., 0.9721, 0.9719, 0.9712]],
        [[0.0092, 0.0097, 0.0093,  ..., 0.0096, 0.0092, 0.0096],
         [0.0092, 0.0097, 0.0093,  ..., 0.0096, 0.0092, 0.0096],
         [0.0092, 0.0097, 0.0093,  ..., 0.0096, 0.0092, 0.0096],
         [0.9723, 0.9709, 0.9720,  ..., 0.9713, 0.9724, 0.9711]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.1079e-03, 7.7256e-03, 7.8558e-03,  ..., 7.6295e-03,
          8.1196e-03, 7.9420e-03],
         [8.1079e-03, 7.7256e-03, 7.8558e-03,  ..., 7.6295e-03,
          8.1196e-03, 7.9420e-03],
         [8.1079e-03, 7.7256e-03, 7.8558e-03,  ..., 7.6295e-03,
          8.1196e-03, 7.9420e-03],
         [9.7568e-01, 9.7682e-01, 9.7643e-01,  ..., 9.7711e-01,
          9.7564e-01, 9.7617e-01]],
        [[7.7620e-03, 7.7400e-03, 7.7956e-03,  ..., 8.5769e-04,
          7.9940e-03, 7.8973e-03],
         [7.7620e-03, 7.7400e-03, 7.7956e-03,  ..., 8.5769e-04,
          7.9940e-03, 7.8973e-03],
         [7.7620e-03, 7.7400e-03, 7.7956e-03,  ..., 9.9743e-01,
          7.9940e-03, 7.8973e-03],
         [9.7671e-01, 9.7678e-01, 9.7661e-01,  ..., 8.5769e-04,
          9.7602e-01, 9.7631e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 353:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:14:30,664 [Process: 0] Synchronize training processes
2024-08-16 16:14:30,665 [Process: 0] Evaluating...
2024-08-16 16:14:30,667 [Process: 0] EPOCH 354:
2024-08-16 16:14:30,669 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0091, 0.0093,  ..., 0.0091, 0.0094, 0.0095],
         [0.0090, 0.0091, 0.0093,  ..., 0.0091, 0.0094, 0.0095],
         [0.0090, 0.0091, 0.0093,  ..., 0.0091, 0.0094, 0.0095],
         [0.9730, 0.9728, 0.9722,  ..., 0.9727, 0.9719, 0.9714]],
        [[0.0095, 0.0094, 0.0095,  ..., 0.0099, 0.0096, 0.0094],
         [0.0095, 0.0094, 0.0095,  ..., 0.0099, 0.0096, 0.0094],
         [0.0095, 0.0094, 0.0095,  ..., 0.0099, 0.0096, 0.0094],
         [0.9716, 0.9717, 0.9714,  ..., 0.9704, 0.9713, 0.9717]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.9074e-03, 7.5006e-03, 7.7652e-03,  ..., 8.0495e-03,
          8.0803e-03, 7.7188e-03],
         [7.9074e-03, 7.5006e-03, 7.7652e-03,  ..., 8.0495e-03,
          8.0803e-03, 7.7188e-03],
         [7.9074e-03, 7.5006e-03, 7.7652e-03,  ..., 8.0495e-03,
          8.0803e-03, 7.7188e-03],
         [9.7628e-01, 9.7750e-01, 9.7670e-01,  ..., 9.7585e-01,
          9.7576e-01, 9.7684e-01]],
        [[8.2505e-03, 8.0218e-03, 7.6980e-03,  ..., 1.2765e-04,
          7.7380e-03, 8.0613e-03],
         [8.2505e-03, 8.0218e-03, 7.6980e-03,  ..., 1.2765e-04,
          7.7380e-03, 8.0613e-03],
         [8.2505e-03, 8.0218e-03, 7.6980e-03,  ..., 9.9962e-01,
          7.7380e-03, 8.0613e-03],
         [9.7525e-01, 9.7593e-01, 9.7691e-01,  ..., 1.2765e-04,
          9.7679e-01, 9.7582e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 354:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0092, 0.0092,  ..., 0.0094, 0.0094, 0.0090],
         [0.0090, 0.0092, 0.0092,  ..., 0.0094, 0.0094, 0.0090],
         [0.0090, 0.0092, 0.0092,  ..., 0.0094, 0.0094, 0.0090],
         [0.9729, 0.9725, 0.9724,  ..., 0.9718, 0.9719, 0.9729]],
        [[0.0094, 0.0093, 0.0096,  ..., 0.0094, 0.0090, 0.0093],
         [0.0094, 0.0093, 0.0096,  ..., 0.0094, 0.0090, 0.0093],
         [0.0094, 0.0093, 0.0096,  ..., 0.0094, 0.0090, 0.0093],
         [0.9719, 0.9720, 0.9712,  ..., 0.9719, 0.9729, 0.9721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6820e-03, 7.7094e-03, 8.1870e-03,  ..., 7.7987e-03,
          8.1581e-03, 7.7487e-03],
         [7.6820e-03, 7.7094e-03, 8.1870e-03,  ..., 7.7987e-03,
          8.1581e-03, 7.7487e-03],
         [7.6820e-03, 7.7094e-03, 8.1870e-03,  ..., 7.7987e-03,
          8.1581e-03, 7.7487e-03],
         [9.7695e-01, 9.7687e-01, 9.7544e-01,  ..., 9.7660e-01,
          9.7553e-01, 9.7675e-01]],
        [[7.8619e-03, 8.1394e-03, 8.2529e-03,  ..., 4.1432e-04,
          7.9363e-03, 8.3392e-03],
         [7.8619e-03, 8.1394e-03, 8.2529e-03,  ..., 2.8729e-04,
          7.9363e-03, 8.3392e-03],
         [7.8619e-03, 8.1394e-03, 8.2529e-03,  ..., 9.9901e-01,
          7.9363e-03, 8.3392e-03],
         [9.7641e-01, 9.7558e-01, 9.7524e-01,  ..., 2.8729e-04,
          9.7619e-01, 9.7498e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 355:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:14:32,768 [Process: 0] Synchronize training processes
2024-08-16 16:14:32,768 [Process: 0] Evaluating...
2024-08-16 16:14:32,770 [Process: 0] EPOCH 355:
2024-08-16 16:14:32,772 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0092, 0.0092,  ..., 0.0091, 0.0091, 0.0089],
         [0.0091, 0.0092, 0.0092,  ..., 0.0091, 0.0091, 0.0089],
         [0.0091, 0.0092, 0.0092,  ..., 0.0091, 0.0091, 0.0089],
         [0.9727, 0.9725, 0.9723,  ..., 0.9727, 0.9726, 0.9732]],
        [[0.0091, 0.0094, 0.0092,  ..., 0.0095, 0.0094, 0.0093],
         [0.0091, 0.0094, 0.0092,  ..., 0.0095, 0.0094, 0.0093],
         [0.0091, 0.0094, 0.0092,  ..., 0.0095, 0.0094, 0.0093],
         [0.9727, 0.9719, 0.9723,  ..., 0.9715, 0.9718, 0.9721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0077, 0.0079,  ..., 0.0077, 0.0076, 0.0076],
         [0.0078, 0.0077, 0.0079,  ..., 0.0077, 0.0076, 0.0076],
         [0.0078, 0.0077, 0.0079,  ..., 0.0077, 0.0076, 0.0076],
         [0.9765, 0.9770, 0.9763,  ..., 0.9769, 0.9772, 0.9772]],
        [[0.0079, 0.0079, 0.0082,  ..., 0.0016, 0.0078, 0.0077],
         [0.0079, 0.0079, 0.0082,  ..., 0.0016, 0.0078, 0.0077],
         [0.0079, 0.0079, 0.0082,  ..., 0.9951, 0.0078, 0.0077],
         [0.9764, 0.9762, 0.9754,  ..., 0.0016, 0.9766, 0.9768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 356:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:14:34,853 [Process: 0] Synchronize training processes
2024-08-16 16:14:34,853 [Process: 0] Evaluating...
2024-08-16 16:14:34,855 [Process: 0] EPOCH 356:
2024-08-16 16:14:34,857 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0095, 0.0094,  ..., 0.0093, 0.0094, 0.0092],
         [0.0094, 0.0095, 0.0094,  ..., 0.0093, 0.0094, 0.0092],
         [0.0094, 0.0095, 0.0094,  ..., 0.0093, 0.0094, 0.0092],
         [0.9718, 0.9714, 0.9718,  ..., 0.9721, 0.9717, 0.9724]],
        [[0.0096, 0.0093, 0.0092,  ..., 0.0097, 0.0095, 0.0093],
         [0.0096, 0.0093, 0.0092,  ..., 0.0097, 0.0095, 0.0093],
         [0.0096, 0.0093, 0.0092,  ..., 0.0097, 0.0095, 0.0093],
         [0.9713, 0.9722, 0.9724,  ..., 0.9709, 0.9714, 0.9720]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.9204e-03, 7.5893e-03, 7.7043e-03,  ..., 7.9961e-03,
          7.9504e-03, 8.0386e-03],
         [7.9204e-03, 7.5893e-03, 7.7043e-03,  ..., 7.9961e-03,
          7.9504e-03, 8.0386e-03],
         [7.9204e-03, 7.5893e-03, 7.7043e-03,  ..., 7.9961e-03,
          7.9504e-03, 8.0386e-03],
         [9.7624e-01, 9.7723e-01, 9.7689e-01,  ..., 9.7601e-01,
          9.7615e-01, 9.7588e-01]],
        [[8.0889e-03, 7.7367e-03, 8.2430e-03,  ..., 3.9933e-04,
          7.8410e-03, 7.7841e-03],
         [8.0889e-03, 7.7367e-03, 8.2430e-03,  ..., 2.9362e-04,
          7.8410e-03, 7.7841e-03],
         [8.0889e-03, 7.7367e-03, 8.2430e-03,  ..., 9.9901e-01,
          7.8410e-03, 7.7841e-03],
         [9.7573e-01, 9.7679e-01, 9.7527e-01,  ..., 2.9362e-04,
          9.7648e-01, 9.7665e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 357:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:14:36,963 [Process: 0] Synchronize training processes
2024-08-16 16:14:36,964 [Process: 0] Evaluating...
2024-08-16 16:14:36,966 [Process: 0] EPOCH 357:
2024-08-16 16:14:36,968 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0093, 0.0093,  ..., 0.0092, 0.0094, 0.0094],
         [0.0095, 0.0093, 0.0093,  ..., 0.0092, 0.0094, 0.0094],
         [0.0095, 0.0093, 0.0093,  ..., 0.0092, 0.0094, 0.0094],
         [0.9714, 0.9720, 0.9721,  ..., 0.9724, 0.9719, 0.9718]],
        [[0.0095, 0.0093, 0.0093,  ..., 0.0096, 0.0097, 0.0094],
         [0.0095, 0.0093, 0.0093,  ..., 0.0096, 0.0097, 0.0094],
         [0.0095, 0.0093, 0.0093,  ..., 0.0096, 0.0097, 0.0094],
         [0.9714, 0.9720, 0.9720,  ..., 0.9711, 0.9708, 0.9719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6506e-03, 7.6119e-03, 8.1121e-03,  ..., 7.7039e-03,
          8.0278e-03, 7.7348e-03],
         [7.6506e-03, 7.6119e-03, 8.1121e-03,  ..., 7.7039e-03,
          8.0278e-03, 7.7348e-03],
         [7.6506e-03, 7.6119e-03, 8.1121e-03,  ..., 7.7039e-03,
          8.0278e-03, 7.7348e-03],
         [9.7705e-01, 9.7716e-01, 9.7566e-01,  ..., 9.7689e-01,
          9.7592e-01, 9.7680e-01]],
        [[7.8792e-03, 7.8105e-03, 7.9174e-03,  ..., 9.7965e-05,
          7.8701e-03, 7.6906e-03],
         [7.8792e-03, 7.8105e-03, 7.9174e-03,  ..., 9.7965e-05,
          7.8701e-03, 7.6906e-03],
         [7.8792e-03, 7.8105e-03, 7.9174e-03,  ..., 9.9971e-01,
          7.8701e-03, 7.6906e-03],
         [9.7636e-01, 9.7657e-01, 9.7625e-01,  ..., 9.7965e-05,
          9.7639e-01, 9.7693e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 358:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:14:39,067 [Process: 0] Synchronize training processes
2024-08-16 16:14:39,067 [Process: 0] Evaluating...
2024-08-16 16:14:39,069 [Process: 0] EPOCH 358:
2024-08-16 16:14:39,071 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0090, 0.0091,  ..., 0.0093, 0.0092, 0.0093],
         [0.0088, 0.0090, 0.0091,  ..., 0.0093, 0.0092, 0.0093],
         [0.0088, 0.0090, 0.0091,  ..., 0.0093, 0.0092, 0.0093],
         [0.9735, 0.9729, 0.9727,  ..., 0.9720, 0.9723, 0.9722]],
        [[0.0093, 0.0094, 0.0093,  ..., 0.0093, 0.0092, 0.0090],
         [0.0093, 0.0094, 0.0093,  ..., 0.0093, 0.0092, 0.0090],
         [0.0093, 0.0094, 0.0093,  ..., 0.0093, 0.0092, 0.0090],
         [0.9721, 0.9718, 0.9722,  ..., 0.9722, 0.9725, 0.9730]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8404e-03, 7.9327e-03, 7.5501e-03,  ..., 7.5880e-03,
          8.0134e-03, 8.0179e-03],
         [7.8404e-03, 7.9327e-03, 7.5501e-03,  ..., 7.5880e-03,
          8.0134e-03, 8.0179e-03],
         [7.8404e-03, 7.9327e-03, 7.5501e-03,  ..., 7.5880e-03,
          8.0134e-03, 8.0179e-03],
         [9.7648e-01, 9.7620e-01, 9.7735e-01,  ..., 9.7724e-01,
          9.7596e-01, 9.7595e-01]],
        [[8.2216e-03, 7.8299e-03, 8.0175e-03,  ..., 1.0000e-04,
          7.7318e-03, 7.5652e-03],
         [8.2216e-03, 7.8299e-03, 8.0175e-03,  ..., 1.0000e-04,
          7.7318e-03, 7.5652e-03],
         [8.2216e-03, 7.8299e-03, 8.0175e-03,  ..., 9.9970e-01,
          7.7318e-03, 7.5652e-03],
         [9.7534e-01, 9.7651e-01, 9.7595e-01,  ..., 1.0000e-04,
          9.7680e-01, 9.7730e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 359:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:14:41,145 [Process: 0] Synchronize training processes
2024-08-16 16:14:41,146 [Process: 0] Evaluating...
2024-08-16 16:14:41,148 [Process: 0] EPOCH 359:
2024-08-16 16:14:41,150 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0090, 0.0093,  ..., 0.0090, 0.0093, 0.0093],
         [0.0087, 0.0090, 0.0093,  ..., 0.0090, 0.0093, 0.0093],
         [0.0087, 0.0090, 0.0093,  ..., 0.0090, 0.0093, 0.0093],
         [0.9740, 0.9731, 0.9720,  ..., 0.9731, 0.9720, 0.9721]],
        [[0.0093, 0.0094, 0.0091,  ..., 0.0092, 0.0091, 0.0093],
         [0.0093, 0.0094, 0.0091,  ..., 0.0092, 0.0091, 0.0093],
         [0.0093, 0.0094, 0.0091,  ..., 0.0092, 0.0091, 0.0093],
         [0.9722, 0.9718, 0.9726,  ..., 0.9725, 0.9728, 0.9721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0076, 0.0078,  ..., 0.0078, 0.0079, 0.0078],
         [0.0080, 0.0076, 0.0078,  ..., 0.0078, 0.0079, 0.0078],
         [0.0080, 0.0076, 0.0078,  ..., 0.0078, 0.0079, 0.0078],
         [0.9761, 0.9773, 0.9765,  ..., 0.9766, 0.9763, 0.9767]],
        [[0.0080, 0.0077, 0.0078,  ..., 0.0067, 0.0072, 0.0075],
         [0.0080, 0.0077, 0.0078,  ..., 0.0040, 0.0072, 0.0075],
         [0.0080, 0.0077, 0.0078,  ..., 0.9854, 0.0072, 0.0075],
         [0.9760, 0.9770, 0.9766,  ..., 0.0040, 0.9784, 0.9776]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 360:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:14:43,245 [Process: 0] Synchronize training processes
2024-08-16 16:14:43,245 [Process: 0] Evaluating...
2024-08-16 16:14:43,247 [Process: 0] EPOCH 360:
2024-08-16 16:14:43,249 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0090, 0.0090,  ..., 0.0091, 0.0093, 0.0090],
         [0.0092, 0.0090, 0.0090,  ..., 0.0091, 0.0093, 0.0090],
         [0.0092, 0.0090, 0.0090,  ..., 0.0091, 0.0093, 0.0090],
         [0.9723, 0.9731, 0.9730,  ..., 0.9727, 0.9721, 0.9731]],
        [[0.0092, 0.0094, 0.0092,  ..., 0.0092, 0.0090, 0.0093],
         [0.0092, 0.0094, 0.0092,  ..., 0.0092, 0.0090, 0.0093],
         [0.0092, 0.0094, 0.0092,  ..., 0.0092, 0.0090, 0.0093],
         [0.9723, 0.9717, 0.9725,  ..., 0.9723, 0.9729, 0.9721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8342e-03, 7.5822e-03, 7.8411e-03,  ..., 7.4120e-03,
          7.7540e-03, 7.4071e-03],
         [7.8342e-03, 7.5822e-03, 7.8411e-03,  ..., 7.4120e-03,
          7.7540e-03, 7.4071e-03],
         [7.8342e-03, 7.5822e-03, 7.8411e-03,  ..., 7.4120e-03,
          7.7540e-03, 7.4071e-03],
         [9.7650e-01, 9.7725e-01, 9.7648e-01,  ..., 9.7776e-01,
          9.7674e-01, 9.7778e-01]],
        [[7.8303e-03, 7.8046e-03, 7.3891e-03,  ..., 5.8285e-05,
          7.6997e-03, 7.5855e-03],
         [7.8303e-03, 7.8046e-03, 7.3891e-03,  ..., 3.6494e-05,
          7.6997e-03, 7.5855e-03],
         [7.8303e-03, 7.8046e-03, 7.3891e-03,  ..., 9.9987e-01,
          7.6997e-03, 7.5855e-03],
         [9.7651e-01, 9.7659e-01, 9.7783e-01,  ..., 3.6494e-05,
          9.7690e-01, 9.7724e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:14:45,371 [Process: 0] Synchronize training processes
2024-08-16 16:14:45,371 [Process: 0] Evaluating...
2024-08-16 16:14:45,373 [Process: 0] EPOCH 361:
2024-08-16 16:14:45,375 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 361:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0091, 0.0090,  ..., 0.0088, 0.0092, 0.0092],
         [0.0090, 0.0091, 0.0090,  ..., 0.0088, 0.0092, 0.0092],
         [0.0090, 0.0091, 0.0090,  ..., 0.0088, 0.0092, 0.0092],
         [0.9731, 0.9728, 0.9729,  ..., 0.9735, 0.9725, 0.9723]],
        [[0.0092, 0.0091, 0.0092,  ..., 0.0091, 0.0091, 0.0093],
         [0.0092, 0.0091, 0.0092,  ..., 0.0091, 0.0091, 0.0093],
         [0.0092, 0.0091, 0.0092,  ..., 0.0091, 0.0091, 0.0093],
         [0.9724, 0.9727, 0.9725,  ..., 0.9728, 0.9727, 0.9720]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:14:47,474 [Process: 0] Synchronize training processes
2024-08-16 16:14:47,475 [Process: 0] Evaluating...
2024-08-16 16:14:47,482 [Process: 0] EPOCH 362:
2024-08-16 16:14:47,484 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8772e-03, 7.8987e-03, 7.8508e-03,  ..., 7.7702e-03,
          7.9839e-03, 7.4870e-03],
         [7.8772e-03, 7.8987e-03, 7.8508e-03,  ..., 7.7702e-03,
          7.9839e-03, 7.4870e-03],
         [7.8772e-03, 7.8987e-03, 7.8508e-03,  ..., 7.7702e-03,
          7.9839e-03, 7.4870e-03],
         [9.7637e-01, 9.7630e-01, 9.7645e-01,  ..., 9.7669e-01,
          9.7605e-01, 9.7754e-01]],
        [[7.7664e-03, 7.9790e-03, 7.6655e-03,  ..., 7.7442e-04,
          7.4644e-03, 7.6961e-03],
         [7.7664e-03, 7.9790e-03, 7.6655e-03,  ..., 7.7442e-04,
          7.4644e-03, 7.6961e-03],
         [7.7664e-03, 7.9790e-03, 7.6655e-03,  ..., 9.9768e-01,
          7.4644e-03, 7.6961e-03],
         [9.7670e-01, 9.7606e-01, 9.7700e-01,  ..., 7.7442e-04,
          9.7761e-01, 9.7691e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 362:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0091, 0.0092,  ..., 0.0088, 0.0087, 0.0089],
         [0.0089, 0.0091, 0.0092,  ..., 0.0088, 0.0087, 0.0089],
         [0.0089, 0.0091, 0.0092,  ..., 0.0088, 0.0087, 0.0089],
         [0.9732, 0.9728, 0.9724,  ..., 0.9736, 0.9738, 0.9732]],
        [[0.0090, 0.0091, 0.0090,  ..., 0.0090, 0.0089, 0.0088],
         [0.0090, 0.0091, 0.0090,  ..., 0.0090, 0.0089, 0.0088],
         [0.0090, 0.0091, 0.0090,  ..., 0.0090, 0.0089, 0.0088],
         [0.9729, 0.9728, 0.9731,  ..., 0.9729, 0.9733, 0.9737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:14:49,572 [Process: 0] Synchronize training processes
2024-08-16 16:14:49,573 [Process: 0] Evaluating...
2024-08-16 16:14:49,574 [Process: 0] EPOCH 363:
2024-08-16 16:14:49,577 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0074, 0.0073,  ..., 0.0077, 0.0075, 0.0078],
         [0.0075, 0.0074, 0.0073,  ..., 0.0077, 0.0075, 0.0078],
         [0.0075, 0.0074, 0.0073,  ..., 0.0077, 0.0075, 0.0078],
         [0.9775, 0.9777, 0.9780,  ..., 0.9768, 0.9774, 0.9765]],
        [[0.0080, 0.0075, 0.0076,  ..., 0.0018, 0.0074, 0.0080],
         [0.0080, 0.0075, 0.0076,  ..., 0.0018, 0.0074, 0.0080],
         [0.0080, 0.0075, 0.0076,  ..., 0.9946, 0.0074, 0.0080],
         [0.9761, 0.9775, 0.9772,  ..., 0.0018, 0.9779, 0.9760]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 363:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0088, 0.0088,  ..., 0.0088, 0.0092, 0.0089],
         [0.0090, 0.0088, 0.0088,  ..., 0.0088, 0.0092, 0.0089],
         [0.0090, 0.0088, 0.0088,  ..., 0.0088, 0.0092, 0.0089],
         [0.9730, 0.9737, 0.9736,  ..., 0.9736, 0.9725, 0.9732]],
        [[0.0091, 0.0090, 0.0094,  ..., 0.0088, 0.0087, 0.0089],
         [0.0091, 0.0090, 0.0094,  ..., 0.0088, 0.0087, 0.0089],
         [0.0091, 0.0090, 0.0094,  ..., 0.0088, 0.0087, 0.0089],
         [0.9726, 0.9731, 0.9719,  ..., 0.9735, 0.9739, 0.9732]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:14:51,651 [Process: 0] Synchronize training processes
2024-08-16 16:14:51,651 [Process: 0] Evaluating...
2024-08-16 16:14:51,653 [Process: 0] EPOCH 364:
2024-08-16 16:14:51,655 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0074, 0.0075,  ..., 0.0073, 0.0076, 0.0076],
         [0.0075, 0.0074, 0.0075,  ..., 0.0073, 0.0076, 0.0076],
         [0.0075, 0.0074, 0.0075,  ..., 0.0073, 0.0076, 0.0076],
         [0.9775, 0.9777, 0.9775,  ..., 0.9782, 0.9772, 0.9772]],
        [[0.0077, 0.0074, 0.0079,  ..., 0.0032, 0.0073, 0.0078],
         [0.0077, 0.0074, 0.0079,  ..., 0.0020, 0.0073, 0.0078],
         [0.0077, 0.0074, 0.0079,  ..., 0.9929, 0.0073, 0.0078],
         [0.9769, 0.9779, 0.9764,  ..., 0.0020, 0.9780, 0.9766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 364:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0090, 0.0089,  ..., 0.0088, 0.0088, 0.0091],
         [0.0088, 0.0090, 0.0089,  ..., 0.0088, 0.0088, 0.0091],
         [0.0088, 0.0090, 0.0089,  ..., 0.0088, 0.0088, 0.0091],
         [0.9735, 0.9731, 0.9733,  ..., 0.9737, 0.9736, 0.9728]],
        [[0.0088, 0.0089, 0.0091,  ..., 0.0091, 0.0088, 0.0089],
         [0.0088, 0.0089, 0.0091,  ..., 0.0091, 0.0088, 0.0089],
         [0.0088, 0.0089, 0.0091,  ..., 0.0091, 0.0088, 0.0089],
         [0.9737, 0.9732, 0.9728,  ..., 0.9726, 0.9736, 0.9732]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:14:53,733 [Process: 0] Synchronize training processes
2024-08-16 16:14:53,733 [Process: 0] Evaluating...
2024-08-16 16:14:53,735 [Process: 0] EPOCH 365:
2024-08-16 16:14:53,737 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6212e-03, 7.5095e-03, 7.5174e-03,  ..., 7.5974e-03,
          7.4271e-03, 7.1943e-03],
         [7.6212e-03, 7.5095e-03, 7.5174e-03,  ..., 7.5974e-03,
          7.4271e-03, 7.1943e-03],
         [7.6212e-03, 7.5095e-03, 7.5174e-03,  ..., 7.5974e-03,
          7.4271e-03, 7.1943e-03],
         [9.7714e-01, 9.7747e-01, 9.7745e-01,  ..., 9.7721e-01,
          9.7772e-01, 9.7842e-01]],
        [[7.6510e-03, 7.8287e-03, 7.4510e-03,  ..., 6.7324e-04,
          7.2708e-03, 7.5592e-03],
         [7.6510e-03, 7.8287e-03, 7.4510e-03,  ..., 6.7324e-04,
          7.2708e-03, 7.5592e-03],
         [7.6510e-03, 7.8287e-03, 7.4510e-03,  ..., 9.9798e-01,
          7.2708e-03, 7.5592e-03],
         [9.7705e-01, 9.7651e-01, 9.7765e-01,  ..., 6.7324e-04,
          9.7819e-01, 9.7732e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 365:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0088, 0.0089,  ..., 0.0091, 0.0091, 0.0090],
         [0.0090, 0.0088, 0.0089,  ..., 0.0091, 0.0091, 0.0090],
         [0.0090, 0.0088, 0.0089,  ..., 0.0091, 0.0091, 0.0090],
         [0.9731, 0.9735, 0.9734,  ..., 0.9728, 0.9727, 0.9730]],
        [[0.0089, 0.0089, 0.0091,  ..., 0.0090, 0.0087, 0.0088],
         [0.0089, 0.0089, 0.0091,  ..., 0.0090, 0.0087, 0.0088],
         [0.0089, 0.0089, 0.0091,  ..., 0.0090, 0.0087, 0.0088],
         [0.9732, 0.9733, 0.9727,  ..., 0.9731, 0.9738, 0.9735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:14:55,825 [Process: 0] Synchronize training processes
2024-08-16 16:14:55,825 [Process: 0] Evaluating...
2024-08-16 16:14:55,827 [Process: 0] EPOCH 366:
2024-08-16 16:14:55,829 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.3684e-03, 7.4667e-03, 7.8688e-03,  ..., 7.5465e-03,
          7.6169e-03, 7.5521e-03],
         [7.3684e-03, 7.4667e-03, 7.8688e-03,  ..., 7.5465e-03,
          7.6169e-03, 7.5521e-03],
         [7.3684e-03, 7.4667e-03, 7.8688e-03,  ..., 7.5465e-03,
          7.6169e-03, 7.5521e-03],
         [9.7789e-01, 9.7760e-01, 9.7639e-01,  ..., 9.7736e-01,
          9.7715e-01, 9.7734e-01]],
        [[7.7232e-03, 7.2948e-03, 7.4832e-03,  ..., 8.6918e-05,
          7.4550e-03, 7.5103e-03],
         [7.7232e-03, 7.2948e-03, 7.4832e-03,  ..., 4.9037e-05,
          7.4550e-03, 7.5103e-03],
         [7.7232e-03, 7.2948e-03, 7.4832e-03,  ..., 9.9982e-01,
          7.4550e-03, 7.5103e-03],
         [9.7683e-01, 9.7812e-01, 9.7755e-01,  ..., 4.9037e-05,
          9.7763e-01, 9.7747e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 366:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0087, 0.0086,  ..., 0.0092, 0.0087, 0.0088],
         [0.0088, 0.0087, 0.0086,  ..., 0.0092, 0.0087, 0.0088],
         [0.0088, 0.0087, 0.0086,  ..., 0.0092, 0.0087, 0.0088],
         [0.9737, 0.9740, 0.9743,  ..., 0.9723, 0.9740, 0.9736]],
        [[0.0090, 0.0088, 0.0088,  ..., 0.0089, 0.0090, 0.0087],
         [0.0090, 0.0088, 0.0088,  ..., 0.0089, 0.0090, 0.0087],
         [0.0090, 0.0088, 0.0088,  ..., 0.0089, 0.0090, 0.0087],
         [0.9729, 0.9735, 0.9736,  ..., 0.9732, 0.9730, 0.9738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:14:57,923 [Process: 0] Synchronize training processes
2024-08-16 16:14:57,923 [Process: 0] Evaluating...
2024-08-16 16:14:57,925 [Process: 0] EPOCH 367:
2024-08-16 16:14:57,927 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.7111e-03, 7.9115e-03, 7.5505e-03,  ..., 7.4389e-03,
          7.6593e-03, 7.4104e-03],
         [7.7111e-03, 7.9115e-03, 7.5505e-03,  ..., 7.4389e-03,
          7.6593e-03, 7.4104e-03],
         [7.7111e-03, 7.9115e-03, 7.5505e-03,  ..., 7.4389e-03,
          7.6593e-03, 7.4104e-03],
         [9.7687e-01, 9.7627e-01, 9.7735e-01,  ..., 9.7768e-01,
          9.7702e-01, 9.7777e-01]],
        [[7.5149e-03, 7.5708e-03, 7.4494e-03,  ..., 2.2647e-04,
          7.7007e-03, 7.5774e-03],
         [7.5149e-03, 7.5708e-03, 7.4494e-03,  ..., 5.9539e-05,
          7.7007e-03, 7.5774e-03],
         [7.5149e-03, 7.5708e-03, 7.4494e-03,  ..., 9.9965e-01,
          7.7007e-03, 7.5774e-03],
         [9.7746e-01, 9.7729e-01, 9.7765e-01,  ..., 5.9539e-05,
          9.7690e-01, 9.7727e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 367:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0089, 0.0086,  ..., 0.0086, 0.0086, 0.0087],
         [0.0088, 0.0089, 0.0086,  ..., 0.0086, 0.0086, 0.0087],
         [0.0088, 0.0089, 0.0086,  ..., 0.0086, 0.0086, 0.0087],
         [0.9736, 0.9733, 0.9741,  ..., 0.9743, 0.9743, 0.9738]],
        [[0.0088, 0.0088, 0.0088,  ..., 0.0089, 0.0085, 0.0088],
         [0.0088, 0.0088, 0.0088,  ..., 0.0089, 0.0085, 0.0088],
         [0.0088, 0.0088, 0.0088,  ..., 0.0089, 0.0085, 0.0088],
         [0.9735, 0.9737, 0.9736,  ..., 0.9732, 0.9744, 0.9736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:00,016 [Process: 0] Synchronize training processes
2024-08-16 16:15:00,016 [Process: 0] Evaluating...
2024-08-16 16:15:00,018 [Process: 0] EPOCH 368:
2024-08-16 16:15:00,020 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.7446e-03, 7.6044e-03, 7.1980e-03,  ..., 8.1349e-03,
          7.5438e-03, 7.4497e-03],
         [7.7446e-03, 7.6044e-03, 7.1980e-03,  ..., 8.1349e-03,
          7.5438e-03, 7.4497e-03],
         [7.7446e-03, 7.6044e-03, 7.1980e-03,  ..., 8.1349e-03,
          7.5438e-03, 7.4497e-03],
         [9.7677e-01, 9.7719e-01, 9.7841e-01,  ..., 9.7560e-01,
          9.7737e-01, 9.7765e-01]],
        [[7.6405e-03, 7.6139e-03, 7.5758e-03,  ..., 3.4285e-04,
          7.3123e-03, 7.6074e-03],
         [7.6405e-03, 7.6139e-03, 7.5758e-03,  ..., 3.4285e-04,
          7.3123e-03, 7.6074e-03],
         [7.6405e-03, 7.6139e-03, 7.5758e-03,  ..., 9.9897e-01,
          7.3123e-03, 7.6074e-03],
         [9.7708e-01, 9.7716e-01, 9.7727e-01,  ..., 3.4285e-04,
          9.7806e-01, 9.7718e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 368:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0084, 0.0092,  ..., 0.0085, 0.0086, 0.0087],
         [0.0087, 0.0084, 0.0092,  ..., 0.0085, 0.0086, 0.0087],
         [0.0087, 0.0084, 0.0092,  ..., 0.0085, 0.0086, 0.0087],
         [0.9740, 0.9748, 0.9725,  ..., 0.9745, 0.9741, 0.9740]],
        [[0.0085, 0.0085, 0.0085,  ..., 0.0085, 0.0084, 0.0085],
         [0.0085, 0.0085, 0.0085,  ..., 0.0085, 0.0084, 0.0085],
         [0.0085, 0.0085, 0.0085,  ..., 0.0085, 0.0084, 0.0085],
         [0.9744, 0.9746, 0.9746,  ..., 0.9746, 0.9747, 0.9744]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:02,110 [Process: 0] Synchronize training processes
2024-08-16 16:15:02,110 [Process: 0] Evaluating...
2024-08-16 16:15:02,112 [Process: 0] EPOCH 369:
2024-08-16 16:15:02,114 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6331e-03, 7.3936e-03, 7.7533e-03,  ..., 7.8590e-03,
          7.7194e-03, 7.8410e-03],
         [7.6331e-03, 7.3936e-03, 7.7533e-03,  ..., 7.8590e-03,
          7.7194e-03, 7.8410e-03],
         [7.6331e-03, 7.3936e-03, 7.7533e-03,  ..., 7.8590e-03,
          7.7194e-03, 7.8410e-03],
         [9.7710e-01, 9.7782e-01, 9.7674e-01,  ..., 9.7642e-01,
          9.7684e-01, 9.7648e-01]],
        [[7.7779e-03, 7.6661e-03, 7.4813e-03,  ..., 9.4288e-05,
          7.4482e-03, 7.6878e-03],
         [7.7779e-03, 7.6661e-03, 7.4813e-03,  ..., 3.9530e-05,
          7.4482e-03, 7.6878e-03],
         [7.7779e-03, 7.6661e-03, 7.4813e-03,  ..., 9.9983e-01,
          7.4482e-03, 7.6878e-03],
         [9.7667e-01, 9.7700e-01, 9.7756e-01,  ..., 3.9530e-05,
          9.7766e-01, 9.7694e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 369:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0089, 0.0090,  ..., 0.0089, 0.0089, 0.0086],
         [0.0087, 0.0089, 0.0090,  ..., 0.0089, 0.0089, 0.0086],
         [0.0087, 0.0089, 0.0090,  ..., 0.0089, 0.0089, 0.0086],
         [0.9740, 0.9732, 0.9729,  ..., 0.9732, 0.9733, 0.9741]],
        [[0.0087, 0.0088, 0.0090,  ..., 0.0090, 0.0087, 0.0088],
         [0.0087, 0.0088, 0.0090,  ..., 0.0090, 0.0087, 0.0088],
         [0.0087, 0.0088, 0.0090,  ..., 0.0090, 0.0087, 0.0088],
         [0.9740, 0.9735, 0.9729,  ..., 0.9731, 0.9739, 0.9735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:04,186 [Process: 0] Synchronize training processes
2024-08-16 16:15:04,186 [Process: 0] Evaluating...
2024-08-16 16:15:04,188 [Process: 0] EPOCH 370:
2024-08-16 16:15:04,190 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6807e-03, 7.4734e-03, 7.4735e-03,  ..., 7.3666e-03,
          7.6028e-03, 7.3659e-03],
         [7.6807e-03, 7.4734e-03, 7.4735e-03,  ..., 7.3666e-03,
          7.6028e-03, 7.3659e-03],
         [7.6807e-03, 7.4734e-03, 7.4735e-03,  ..., 7.3666e-03,
          7.6028e-03, 7.3659e-03],
         [9.7696e-01, 9.7758e-01, 9.7758e-01,  ..., 9.7790e-01,
          9.7719e-01, 9.7790e-01]],
        [[7.3450e-03, 7.1918e-03, 7.5048e-03,  ..., 3.6517e-04,
          7.4223e-03, 7.6627e-03],
         [7.3450e-03, 7.1918e-03, 7.5048e-03,  ..., 3.6517e-04,
          7.4223e-03, 7.6627e-03],
         [7.3450e-03, 7.1918e-03, 7.5048e-03,  ..., 9.9890e-01,
          7.4223e-03, 7.6627e-03],
         [9.7796e-01, 9.7842e-01, 9.7749e-01,  ..., 3.6517e-04,
          9.7773e-01, 9.7701e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 370:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0081, 0.0081,  ..., 0.0083, 0.0083, 0.0084],
         [0.0083, 0.0081, 0.0081,  ..., 0.0083, 0.0083, 0.0084],
         [0.0083, 0.0081, 0.0081,  ..., 0.0083, 0.0083, 0.0084],
         [0.9751, 0.9757, 0.9757,  ..., 0.9751, 0.9750, 0.9747]],
        [[0.0086, 0.0085, 0.0085,  ..., 0.0085, 0.0086, 0.0084],
         [0.0086, 0.0085, 0.0085,  ..., 0.0085, 0.0086, 0.0084],
         [0.0086, 0.0085, 0.0085,  ..., 0.0085, 0.0086, 0.0084],
         [0.9743, 0.9746, 0.9745,  ..., 0.9745, 0.9743, 0.9747]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:06,274 [Process: 0] Synchronize training processes
2024-08-16 16:15:06,274 [Process: 0] Evaluating...
2024-08-16 16:15:06,276 [Process: 0] EPOCH 371:
2024-08-16 16:15:06,278 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0076, 0.0078,  ..., 0.0075, 0.0075, 0.0074],
         [0.0075, 0.0076, 0.0078,  ..., 0.0075, 0.0075, 0.0074],
         [0.0075, 0.0076, 0.0078,  ..., 0.0075, 0.0075, 0.0074],
         [0.9774, 0.9771, 0.9767,  ..., 0.9776, 0.9775, 0.9777]],
        [[0.0073, 0.0078, 0.0073,  ..., 0.0035, 0.0078, 0.0077],
         [0.0073, 0.0078, 0.0073,  ..., 0.0018, 0.0078, 0.0077],
         [0.0073, 0.0078, 0.0073,  ..., 0.9929, 0.0078, 0.0077],
         [0.9781, 0.9766, 0.9781,  ..., 0.0018, 0.9765, 0.9770]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 371:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0091, 0.0091,  ..., 0.0089, 0.0092, 0.0090],
         [0.0089, 0.0091, 0.0091,  ..., 0.0089, 0.0092, 0.0090],
         [0.0089, 0.0091, 0.0091,  ..., 0.0089, 0.0092, 0.0090],
         [0.9732, 0.9728, 0.9728,  ..., 0.9732, 0.9725, 0.9730]],
        [[0.0093, 0.0092, 0.0091,  ..., 0.0092, 0.0091, 0.0091],
         [0.0093, 0.0092, 0.0091,  ..., 0.0092, 0.0091, 0.0091],
         [0.0093, 0.0092, 0.0091,  ..., 0.0092, 0.0091, 0.0091],
         [0.9721, 0.9724, 0.9726,  ..., 0.9725, 0.9727, 0.9727]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:08,356 [Process: 0] Synchronize training processes
2024-08-16 16:15:08,357 [Process: 0] Evaluating...
2024-08-16 16:15:08,366 [Process: 0] EPOCH 372:
2024-08-16 16:15:08,368 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5783e-03, 7.5531e-03, 7.6650e-03,  ..., 7.5217e-03,
          7.6978e-03, 7.4162e-03],
         [7.5783e-03, 7.5531e-03, 7.6650e-03,  ..., 7.5217e-03,
          7.6978e-03, 7.4162e-03],
         [7.5783e-03, 7.5531e-03, 7.6650e-03,  ..., 7.5217e-03,
          7.6978e-03, 7.4162e-03],
         [9.7727e-01, 9.7734e-01, 9.7701e-01,  ..., 9.7743e-01,
          9.7691e-01, 9.7775e-01]],
        [[7.1899e-03, 7.7796e-03, 7.6956e-03,  ..., 9.0391e-05,
          7.6183e-03, 7.9367e-03],
         [7.1899e-03, 7.7796e-03, 7.6956e-03,  ..., 9.0391e-05,
          7.6183e-03, 7.9367e-03],
         [7.1899e-03, 7.7796e-03, 7.6956e-03,  ..., 9.9973e-01,
          7.6183e-03, 7.9367e-03],
         [9.7843e-01, 9.7666e-01, 9.7691e-01,  ..., 9.0391e-05,
          9.7715e-01, 9.7619e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 372:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0087, 0.0084,  ..., 0.0085, 0.0088, 0.0085],
         [0.0085, 0.0087, 0.0084,  ..., 0.0085, 0.0088, 0.0085],
         [0.0085, 0.0087, 0.0084,  ..., 0.0085, 0.0088, 0.0085],
         [0.9746, 0.9740, 0.9747,  ..., 0.9745, 0.9736, 0.9745]],
        [[0.0088, 0.0088, 0.0086,  ..., 0.0089, 0.0121, 0.0087],
         [0.0088, 0.0088, 0.0086,  ..., 0.0089, 0.0121, 0.0087],
         [0.0088, 0.0088, 0.0086,  ..., 0.0089, 0.0121, 0.0087],
         [0.9737, 0.9737, 0.9741,  ..., 0.9733, 0.9638, 0.9738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:10,442 [Process: 0] Synchronize training processes
2024-08-16 16:15:10,442 [Process: 0] Evaluating...
2024-08-16 16:15:10,444 [Process: 0] EPOCH 373:
2024-08-16 16:15:10,446 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.9369e-03, 8.1266e-03, 7.9348e-03,  ..., 7.5426e-03,
          7.7985e-03, 7.7107e-03],
         [7.9369e-03, 8.1266e-03, 7.9348e-03,  ..., 7.5426e-03,
          7.7985e-03, 7.7107e-03],
         [7.9369e-03, 8.1266e-03, 7.9348e-03,  ..., 7.5426e-03,
          7.7985e-03, 7.7107e-03],
         [9.7619e-01, 9.7562e-01, 9.7620e-01,  ..., 9.7737e-01,
          9.7660e-01, 9.7687e-01]],
        [[7.8590e-03, 8.0603e-03, 7.3507e-03,  ..., 5.0806e-04,
          9.4434e-03, 9.1633e-03],
         [7.8590e-03, 8.0603e-03, 7.3507e-03,  ..., 5.0806e-04,
          9.4434e-03, 9.1633e-03],
         [7.8590e-03, 8.0603e-03, 7.3507e-03,  ..., 9.9848e-01,
          9.4434e-03, 9.1633e-03],
         [9.7642e-01, 9.7582e-01, 9.7795e-01,  ..., 5.0806e-04,
          9.7167e-01, 9.7251e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 373:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0090, 0.0091,  ..., 0.0090, 0.0091, 0.0091],
         [0.0087, 0.0090, 0.0091,  ..., 0.0090, 0.0091, 0.0091],
         [0.0087, 0.0090, 0.0091,  ..., 0.0090, 0.0091, 0.0091],
         [0.9738, 0.9729, 0.9727,  ..., 0.9729, 0.9726, 0.9727]],
        [[0.0091, 0.0091, 0.0092,  ..., 0.0093, 0.0090, 0.0091],
         [0.0091, 0.0091, 0.0092,  ..., 0.0093, 0.0090, 0.0091],
         [0.0091, 0.0091, 0.0092,  ..., 0.0093, 0.0090, 0.0091],
         [0.9726, 0.9727, 0.9725,  ..., 0.9722, 0.9729, 0.9726]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:12,518 [Process: 0] Synchronize training processes
2024-08-16 16:15:12,519 [Process: 0] Evaluating...
2024-08-16 16:15:12,521 [Process: 0] EPOCH 374:
2024-08-16 16:15:12,523 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.1173e-03, 8.6676e-03, 8.2167e-03,  ..., 8.3588e-03,
          8.2993e-03, 8.3546e-03],
         [8.1173e-03, 8.6676e-03, 8.2167e-03,  ..., 8.3588e-03,
          8.2993e-03, 8.3546e-03],
         [8.1173e-03, 8.6676e-03, 8.2167e-03,  ..., 8.3588e-03,
          8.2993e-03, 8.3546e-03],
         [9.7565e-01, 9.7400e-01, 9.7535e-01,  ..., 9.7492e-01,
          9.7510e-01, 9.7494e-01]],
        [[8.2884e-03, 8.3443e-03, 8.5790e-03,  ..., 1.4158e-03,
          8.5834e-03, 8.7229e-03],
         [8.2884e-03, 8.3443e-03, 8.5790e-03,  ..., 8.8870e-04,
          8.5834e-03, 8.7229e-03],
         [8.2884e-03, 8.3443e-03, 8.5790e-03,  ..., 9.9681e-01,
          8.5834e-03, 8.7229e-03],
         [9.7513e-01, 9.7497e-01, 9.7426e-01,  ..., 8.8870e-04,
          9.7425e-01, 9.7383e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 374:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:15:14,619 [Process: 0] Synchronize training processes
2024-08-16 16:15:14,620 [Process: 0] Evaluating...
2024-08-16 16:15:14,622 [Process: 0] EPOCH 375:
2024-08-16 16:15:14,624 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0095, 0.0098,  ..., 0.0100, 0.0103, 0.0097],
         [0.0095, 0.0095, 0.0098,  ..., 0.0100, 0.0103, 0.0097],
         [0.0095, 0.0095, 0.0098,  ..., 0.0100, 0.0103, 0.0097],
         [0.9716, 0.9715, 0.9706,  ..., 0.9701, 0.9692, 0.9709]],
        [[0.0100, 0.0098, 0.0101,  ..., 0.0101, 0.0099, 0.0100],
         [0.0100, 0.0098, 0.0101,  ..., 0.0101, 0.0099, 0.0100],
         [0.0100, 0.0098, 0.0101,  ..., 0.0101, 0.0099, 0.0100],
         [0.9700, 0.9705, 0.9697,  ..., 0.9697, 0.9702, 0.9700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0088, 0.0088,  ..., 0.0097, 0.0088, 0.0085],
         [0.0085, 0.0088, 0.0088,  ..., 0.0097, 0.0088, 0.0085],
         [0.0085, 0.0088, 0.0088,  ..., 0.0097, 0.0088, 0.0085],
         [0.9746, 0.9735, 0.9735,  ..., 0.9708, 0.9735, 0.9744]],
        [[0.0088, 0.0084, 0.0084,  ..., 0.0012, 0.0088, 0.0088],
         [0.0088, 0.0084, 0.0084,  ..., 0.0012, 0.0088, 0.0088],
         [0.0088, 0.0084, 0.0084,  ..., 0.9964, 0.0088, 0.0088],
         [0.9736, 0.9748, 0.9747,  ..., 0.0012, 0.9735, 0.9736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 375:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:15:16,683 [Process: 0] Synchronize training processes
2024-08-16 16:15:16,683 [Process: 0] Evaluating...
2024-08-16 16:15:16,685 [Process: 0] EPOCH 376:
2024-08-16 16:15:16,687 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0094, 0.0092,  ..., 0.0099, 0.0109, 0.0108],
         [0.0096, 0.0094, 0.0092,  ..., 0.0099, 0.0109, 0.0108],
         [0.0096, 0.0094, 0.0092,  ..., 0.0099, 0.0109, 0.0108],
         [0.9711, 0.9719, 0.9724,  ..., 0.9702, 0.9673, 0.9675]],
        [[0.0096, 0.0100, 0.0097,  ..., 0.0094, 0.0100, 0.0102],
         [0.0096, 0.0100, 0.0097,  ..., 0.0094, 0.0100, 0.0102],
         [0.0096, 0.0100, 0.0097,  ..., 0.0094, 0.0100, 0.0102],
         [0.9713, 0.9700, 0.9710,  ..., 0.9717, 0.9699, 0.9695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0081, 0.0082,  ..., 0.0092, 0.0087, 0.0077],
         [0.0091, 0.0081, 0.0082,  ..., 0.0092, 0.0087, 0.0077],
         [0.0091, 0.0081, 0.0082,  ..., 0.0092, 0.0087, 0.0077],
         [0.9727, 0.9757, 0.9753,  ..., 0.9723, 0.9740, 0.9768]],
        [[0.0081, 0.0083, 0.0083,  ..., 0.0059, 0.0086, 0.0083],
         [0.0081, 0.0083, 0.0083,  ..., 0.0059, 0.0086, 0.0083],
         [0.0081, 0.0083, 0.0083,  ..., 0.9823, 0.0086, 0.0083],
         [0.9756, 0.9751, 0.9750,  ..., 0.0059, 0.9741, 0.9751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 376:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:15:18,765 [Process: 0] Synchronize training processes
2024-08-16 16:15:18,766 [Process: 0] Evaluating...
2024-08-16 16:15:18,768 [Process: 0] EPOCH 377:
2024-08-16 16:15:18,770 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0093, 0.0094, 0.0095,  ..., 0.0098, 0.0102, 0.0093],
         [0.0093, 0.0094, 0.0095,  ..., 0.0098, 0.0102, 0.0093],
         [0.0093, 0.0094, 0.0095,  ..., 0.0098, 0.0102, 0.0093],
         [0.9721, 0.9718, 0.9714,  ..., 0.9705, 0.9695, 0.9721]],
        [[0.0094, 0.0092, 0.0090,  ..., 0.0095, 0.0098, 0.0095],
         [0.0094, 0.0092, 0.0090,  ..., 0.0095, 0.0098, 0.0095],
         [0.0094, 0.0092, 0.0090,  ..., 0.0095, 0.0098, 0.0095],
         [0.9718, 0.9724, 0.9729,  ..., 0.9715, 0.9705, 0.9714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.5919e-03, 8.5828e-03, 8.3010e-03,  ..., 8.6663e-03,
          8.8129e-03, 7.6080e-03],
         [8.5919e-03, 8.5828e-03, 8.3010e-03,  ..., 8.6663e-03,
          8.8129e-03, 7.6080e-03],
         [8.5919e-03, 8.5828e-03, 8.3010e-03,  ..., 8.6663e-03,
          8.8129e-03, 7.6080e-03],
         [9.7422e-01, 9.7425e-01, 9.7510e-01,  ..., 9.7400e-01,
          9.7356e-01, 9.7718e-01]],
        [[8.4343e-03, 8.2073e-03, 7.6954e-03,  ..., 2.1682e-05,
          8.0357e-03, 7.9592e-03],
         [8.4343e-03, 8.2073e-03, 7.6954e-03,  ..., 1.2210e-05,
          8.0357e-03, 7.9592e-03],
         [8.4343e-03, 8.2073e-03, 7.6954e-03,  ..., 9.9995e-01,
          8.0357e-03, 7.9592e-03],
         [9.7470e-01, 9.7538e-01, 9.7691e-01,  ..., 1.2210e-05,
          9.7589e-01, 9.7612e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 377:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0095, 0.0091,  ..., 0.0097, 0.0099, 0.0101],
         [0.0091, 0.0095, 0.0091,  ..., 0.0097, 0.0099, 0.0101],
         [0.0091, 0.0095, 0.0091,  ..., 0.0097, 0.0099, 0.0101],
         [0.9727, 0.9714, 0.9727,  ..., 0.9709, 0.9703, 0.9697]],
        [[0.0093, 0.0095, 0.0099,  ..., 0.0092, 0.0101, 0.0105],
         [0.0093, 0.0095, 0.0099,  ..., 0.0092, 0.0101, 0.0105],
         [0.0093, 0.0095, 0.0099,  ..., 0.0092, 0.0101, 0.0105],
         [0.9720, 0.9714, 0.9702,  ..., 0.9724, 0.9697, 0.9685]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.3129e-03, 8.1434e-03, 7.9482e-03,  ..., 8.3634e-03,
          8.8532e-03, 8.2357e-03],
         [8.3129e-03, 8.1434e-03, 7.9482e-03,  ..., 8.3634e-03,
          8.8532e-03, 8.2357e-03],
         [8.3129e-03, 8.1434e-03, 7.9482e-03,  ..., 8.3634e-03,
          8.8532e-03, 8.2357e-03],
         [9.7506e-01, 9.7557e-01, 9.7616e-01,  ..., 9.7491e-01,
          9.7344e-01, 9.7529e-01]],
        [[8.1516e-03, 7.8988e-03, 8.2291e-03,  ..., 1.2359e-03,
          8.3919e-03, 7.8987e-03],
         [8.1516e-03, 7.8988e-03, 8.2291e-03,  ..., 6.1901e-04,
          8.3919e-03, 7.8987e-03],
         [8.1516e-03, 7.8988e-03, 8.2291e-03,  ..., 9.9753e-01,
          8.3919e-03, 7.8987e-03],
         [9.7555e-01, 9.7630e-01, 9.7531e-01,  ..., 6.1901e-04,
          9.7482e-01, 9.7630e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 378:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:15:20,859 [Process: 0] Synchronize training processes
2024-08-16 16:15:20,859 [Process: 0] Evaluating...
2024-08-16 16:15:20,861 [Process: 0] EPOCH 378:
2024-08-16 16:15:20,863 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0092, 0.0089,  ..., 0.0095, 0.0100, 0.0094],
         [0.0092, 0.0092, 0.0089,  ..., 0.0095, 0.0100, 0.0094],
         [0.0092, 0.0092, 0.0089,  ..., 0.0095, 0.0100, 0.0094],
         [0.9723, 0.9725, 0.9733,  ..., 0.9716, 0.9701, 0.9717]],
        [[0.0094, 0.0101, 0.0095,  ..., 0.0094, 0.0102, 0.0105],
         [0.0094, 0.0101, 0.0095,  ..., 0.0094, 0.0102, 0.0105],
         [0.0094, 0.0101, 0.0095,  ..., 0.0094, 0.0102, 0.0105],
         [0.9718, 0.9697, 0.9716,  ..., 0.9717, 0.9694, 0.9686]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2671e-03, 8.0980e-03, 8.1970e-03,  ..., 9.5320e-03,
          9.8719e-03, 8.0514e-03],
         [8.2671e-03, 8.0980e-03, 8.1970e-03,  ..., 9.5320e-03,
          9.8719e-03, 8.0514e-03],
         [8.2671e-03, 8.0980e-03, 8.1970e-03,  ..., 9.5320e-03,
          9.8719e-03, 8.0514e-03],
         [9.7520e-01, 9.7571e-01, 9.7541e-01,  ..., 9.7140e-01,
          9.7038e-01, 9.7585e-01]],
        [[8.0303e-03, 8.1767e-03, 8.4864e-03,  ..., 1.8033e-05,
          7.9783e-03, 8.1584e-03],
         [8.0303e-03, 8.1767e-03, 8.4864e-03,  ..., 3.4435e-06,
          7.9783e-03, 8.1584e-03],
         [8.0303e-03, 8.1767e-03, 8.4864e-03,  ..., 9.9998e-01,
          7.9783e-03, 8.1584e-03],
         [9.7591e-01, 9.7547e-01, 9.7454e-01,  ..., 3.4435e-06,
          9.7607e-01, 9.7552e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 379:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:15:22,951 [Process: 0] Synchronize training processes
2024-08-16 16:15:22,951 [Process: 0] Evaluating...
2024-08-16 16:15:22,953 [Process: 0] EPOCH 379:
2024-08-16 16:15:22,955 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0089, 0.0084,  ..., 0.0094, 0.0103, 0.0096],
         [0.0086, 0.0089, 0.0084,  ..., 0.0094, 0.0103, 0.0096],
         [0.0086, 0.0089, 0.0084,  ..., 0.0094, 0.0103, 0.0096],
         [0.9741, 0.9733, 0.9747,  ..., 0.9717, 0.9690, 0.9711]],
        [[0.0093, 0.0093, 0.0097,  ..., 0.0093, 0.0100, 0.0100],
         [0.0093, 0.0093, 0.0097,  ..., 0.0093, 0.0100, 0.0100],
         [0.0093, 0.0093, 0.0097,  ..., 0.0093, 0.0100, 0.0100],
         [0.9721, 0.9721, 0.9708,  ..., 0.9721, 0.9700, 0.9700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8787e-03, 7.7257e-03, 7.6658e-03,  ..., 8.7974e-03,
          8.9754e-03, 7.7993e-03],
         [7.8787e-03, 7.7257e-03, 7.6658e-03,  ..., 8.7974e-03,
          8.9754e-03, 7.7993e-03],
         [7.8787e-03, 7.7257e-03, 7.6658e-03,  ..., 8.7974e-03,
          8.9754e-03, 7.7993e-03],
         [9.7636e-01, 9.7682e-01, 9.7700e-01,  ..., 9.7361e-01,
          9.7307e-01, 9.7660e-01]],
        [[8.0182e-03, 7.8500e-03, 7.9678e-03,  ..., 6.9961e-04,
          8.2392e-03, 8.4538e-03],
         [8.0182e-03, 7.8500e-03, 7.9678e-03,  ..., 6.9961e-04,
          8.2392e-03, 8.4538e-03],
         [8.0182e-03, 7.8500e-03, 7.9678e-03,  ..., 9.9790e-01,
          8.2392e-03, 8.4538e-03],
         [9.7595e-01, 9.7645e-01, 9.7610e-01,  ..., 6.9961e-04,
          9.7528e-01, 9.7464e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 380:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:15:25,047 [Process: 0] Synchronize training processes
2024-08-16 16:15:25,047 [Process: 0] Evaluating...
2024-08-16 16:15:25,049 [Process: 0] EPOCH 380:
2024-08-16 16:15:25,051 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0090, 0.0095,  ..., 0.0099, 0.0095, 0.0097],
         [0.0085, 0.0090, 0.0095,  ..., 0.0099, 0.0095, 0.0097],
         [0.0085, 0.0090, 0.0095,  ..., 0.0099, 0.0095, 0.0097],
         [0.9745, 0.9731, 0.9714,  ..., 0.9703, 0.9714, 0.9708]],
        [[0.0088, 0.0094, 0.0093,  ..., 0.0092, 0.0103, 0.0102],
         [0.0088, 0.0094, 0.0093,  ..., 0.0092, 0.0103, 0.0102],
         [0.0088, 0.0094, 0.0093,  ..., 0.0092, 0.0103, 0.0102],
         [0.9735, 0.9717, 0.9721,  ..., 0.9724, 0.9690, 0.9695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0077, 0.0084, 0.0079,  ..., 0.0083, 0.0086, 0.0079],
         [0.0077, 0.0084, 0.0079,  ..., 0.0083, 0.0086, 0.0079],
         [0.0077, 0.0084, 0.0079,  ..., 0.0083, 0.0086, 0.0079],
         [0.9768, 0.9748, 0.9764,  ..., 0.9752, 0.9741, 0.9763]],
        [[0.0081, 0.0086, 0.0087,  ..., 0.0022, 0.0084, 0.0083],
         [0.0081, 0.0086, 0.0087,  ..., 0.0022, 0.0084, 0.0083],
         [0.0081, 0.0086, 0.0087,  ..., 0.9934, 0.0084, 0.0083],
         [0.9756, 0.9741, 0.9739,  ..., 0.0022, 0.9747, 0.9750]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 381:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:15:27,135 [Process: 0] Synchronize training processes
2024-08-16 16:15:27,135 [Process: 0] Evaluating...
2024-08-16 16:15:27,137 [Process: 0] EPOCH 381:
2024-08-16 16:15:27,139 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0090, 0.0089,  ..., 0.0099, 0.0095, 0.0093],
         [0.0096, 0.0090, 0.0089,  ..., 0.0099, 0.0095, 0.0093],
         [0.0096, 0.0090, 0.0089,  ..., 0.0099, 0.0095, 0.0093],
         [0.9712, 0.9730, 0.9732,  ..., 0.9704, 0.9714, 0.9720]],
        [[0.0095, 0.0090, 0.0090,  ..., 0.0089, 0.0101, 0.0097],
         [0.0095, 0.0090, 0.0090,  ..., 0.0089, 0.0101, 0.0097],
         [0.0095, 0.0090, 0.0090,  ..., 0.0089, 0.0101, 0.0097],
         [0.9714, 0.9730, 0.9731,  ..., 0.9733, 0.9696, 0.9710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0075, 0.0085,  ..., 0.0086, 0.0085, 0.0083],
         [0.0081, 0.0075, 0.0085,  ..., 0.0086, 0.0085, 0.0083],
         [0.0081, 0.0075, 0.0085,  ..., 0.0086, 0.0085, 0.0083],
         [0.9757, 0.9774, 0.9746,  ..., 0.9741, 0.9745, 0.9752]],
        [[0.0079, 0.0080, 0.0078,  ..., 0.0029, 0.0079, 0.0081],
         [0.0079, 0.0080, 0.0078,  ..., 0.0028, 0.0079, 0.0081],
         [0.0079, 0.0080, 0.0078,  ..., 0.9915, 0.0079, 0.0081],
         [0.9763, 0.9761, 0.9765,  ..., 0.0028, 0.9764, 0.9757]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 382:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:15:29,256 [Process: 0] Synchronize training processes
2024-08-16 16:15:29,257 [Process: 0] Evaluating...
2024-08-16 16:15:29,265 [Process: 0] EPOCH 382:
2024-08-16 16:15:29,267 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0098, 0.0090,  ..., 0.0110, 0.0097, 0.0104],
         [0.0097, 0.0098, 0.0090,  ..., 0.0110, 0.0097, 0.0104],
         [0.0097, 0.0098, 0.0090,  ..., 0.0110, 0.0097, 0.0104],
         [0.9709, 0.9705, 0.9730,  ..., 0.9669, 0.9709, 0.9687]],
        [[0.0087, 0.0090, 0.0093,  ..., 0.0089, 0.0092, 0.0093],
         [0.0087, 0.0090, 0.0093,  ..., 0.0089, 0.0092, 0.0093],
         [0.0087, 0.0090, 0.0093,  ..., 0.0089, 0.0092, 0.0093],
         [0.9740, 0.9730, 0.9722,  ..., 0.9734, 0.9725, 0.9720]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0079, 0.0081,  ..., 0.0075, 0.0080, 0.0079],
         [0.0084, 0.0079, 0.0081,  ..., 0.0075, 0.0080, 0.0079],
         [0.0084, 0.0079, 0.0081,  ..., 0.0075, 0.0080, 0.0079],
         [0.9748, 0.9762, 0.9757,  ..., 0.9776, 0.9759, 0.9764]],
        [[0.0080, 0.0079, 0.0083,  ..., 0.0011, 0.0077, 0.0082],
         [0.0080, 0.0079, 0.0083,  ..., 0.0011, 0.0077, 0.0082],
         [0.0080, 0.0079, 0.0083,  ..., 0.9967, 0.0077, 0.0082],
         [0.9761, 0.9762, 0.9752,  ..., 0.0011, 0.9769, 0.9754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 383:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:15:31,400 [Process: 0] Synchronize training processes
2024-08-16 16:15:31,401 [Process: 0] Evaluating...
2024-08-16 16:15:31,403 [Process: 0] EPOCH 383:
2024-08-16 16:15:31,405 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0100, 0.0090,  ..., 0.0101, 0.0094, 0.0102],
         [0.0095, 0.0100, 0.0090,  ..., 0.0101, 0.0094, 0.0102],
         [0.0095, 0.0100, 0.0090,  ..., 0.0101, 0.0094, 0.0102],
         [0.9716, 0.9699, 0.9730,  ..., 0.9696, 0.9719, 0.9693]],
        [[0.0091, 0.0091, 0.0093,  ..., 0.0091, 0.0098, 0.0097],
         [0.0091, 0.0091, 0.0093,  ..., 0.0091, 0.0098, 0.0097],
         [0.0091, 0.0091, 0.0093,  ..., 0.0091, 0.0098, 0.0097],
         [0.9728, 0.9727, 0.9721,  ..., 0.9727, 0.9707, 0.9709]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:33,594 [Process: 0] Synchronize training processes
2024-08-16 16:15:33,594 [Process: 0] Evaluating...
2024-08-16 16:15:33,596 [Process: 0] EPOCH 384:
2024-08-16 16:15:33,598 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[7.7939e-03, 7.7547e-03, 8.4380e-03,  ..., 8.7095e-03,
          8.0965e-03, 7.9671e-03],
         [7.7939e-03, 7.7547e-03, 8.4380e-03,  ..., 8.7095e-03,
          8.0965e-03, 7.9671e-03],
         [7.7939e-03, 7.7547e-03, 8.4380e-03,  ..., 8.7095e-03,
          8.0965e-03, 7.9671e-03],
         [9.7662e-01, 9.7674e-01, 9.7469e-01,  ..., 9.7387e-01,
          9.7571e-01, 9.7610e-01]],
        [[8.2819e-03, 7.8697e-03, 8.4357e-03,  ..., 2.4099e-04,
          8.2597e-03, 8.0872e-03],
         [8.2819e-03, 7.8697e-03, 8.4357e-03,  ..., 2.4099e-04,
          8.2597e-03, 8.0872e-03],
         [8.2819e-03, 7.8697e-03, 8.4357e-03,  ..., 9.9928e-01,
          8.2597e-03, 8.0872e-03],
         [9.7515e-01, 9.7639e-01, 9.7469e-01,  ..., 2.4099e-04,
          9.7522e-01, 9.7574e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 384:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0095, 0.0090,  ..., 0.0089, 0.0095, 0.0089],
         [0.0094, 0.0095, 0.0090,  ..., 0.0089, 0.0095, 0.0089],
         [0.0094, 0.0095, 0.0090,  ..., 0.0089, 0.0095, 0.0089],
         [0.9717, 0.9716, 0.9731,  ..., 0.9733, 0.9715, 0.9732]],
        [[0.0094, 0.0092, 0.0094,  ..., 0.0092, 0.0101, 0.0096],
         [0.0094, 0.0092, 0.0094,  ..., 0.0092, 0.0101, 0.0096],
         [0.0094, 0.0092, 0.0094,  ..., 0.0092, 0.0101, 0.0096],
         [0.9717, 0.9724, 0.9717,  ..., 0.9724, 0.9698, 0.9713]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:35,794 [Process: 0] Synchronize training processes
2024-08-16 16:15:35,794 [Process: 0] Evaluating...
2024-08-16 16:15:35,796 [Process: 0] EPOCH 385:
2024-08-16 16:15:35,798 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0083, 0.0080,  ..., 0.0084, 0.0078, 0.0084],
         [0.0081, 0.0083, 0.0080,  ..., 0.0084, 0.0078, 0.0084],
         [0.0081, 0.0083, 0.0080,  ..., 0.0084, 0.0078, 0.0084],
         [0.9758, 0.9750, 0.9761,  ..., 0.9749, 0.9765, 0.9749]],
        [[0.0083, 0.0078, 0.0082,  ..., 0.0019, 0.0083, 0.0077],
         [0.0083, 0.0078, 0.0082,  ..., 0.0019, 0.0083, 0.0077],
         [0.0083, 0.0078, 0.0082,  ..., 0.9944, 0.0083, 0.0077],
         [0.9752, 0.9765, 0.9755,  ..., 0.0019, 0.9752, 0.9768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 385:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0098, 0.0091,  ..., 0.0095, 0.0089, 0.0098],
         [0.0090, 0.0098, 0.0091,  ..., 0.0095, 0.0089, 0.0098],
         [0.0090, 0.0098, 0.0091,  ..., 0.0095, 0.0089, 0.0098],
         [0.9729, 0.9707, 0.9727,  ..., 0.9715, 0.9734, 0.9705]],
        [[0.0093, 0.0091, 0.0093,  ..., 0.0091, 0.0097, 0.0092],
         [0.0093, 0.0091, 0.0093,  ..., 0.0091, 0.0097, 0.0092],
         [0.0093, 0.0091, 0.0093,  ..., 0.0091, 0.0097, 0.0092],
         [0.9720, 0.9728, 0.9722,  ..., 0.9726, 0.9710, 0.9723]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:37,959 [Process: 0] Synchronize training processes
2024-08-16 16:15:37,959 [Process: 0] Evaluating...
2024-08-16 16:15:37,961 [Process: 0] EPOCH 386:
2024-08-16 16:15:37,963 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.1023e-03, 8.3333e-03, 8.2103e-03,  ..., 8.5565e-03,
          7.8509e-03, 8.0063e-03],
         [8.1023e-03, 8.3333e-03, 8.2103e-03,  ..., 8.5565e-03,
          7.8509e-03, 8.0063e-03],
         [8.1023e-03, 8.3333e-03, 8.2103e-03,  ..., 8.5565e-03,
          7.8509e-03, 8.0063e-03],
         [9.7569e-01, 9.7500e-01, 9.7537e-01,  ..., 9.7433e-01,
          9.7645e-01, 9.7598e-01]],
        [[7.5853e-03, 7.9014e-03, 7.8685e-03,  ..., 1.3028e-05,
          7.9324e-03, 7.8600e-03],
         [7.5853e-03, 7.9014e-03, 7.8685e-03,  ..., 1.3028e-05,
          7.9324e-03, 7.8600e-03],
         [7.5853e-03, 7.9014e-03, 7.8685e-03,  ..., 9.9996e-01,
          7.9324e-03, 7.8600e-03],
         [9.7724e-01, 9.7630e-01, 9.7639e-01,  ..., 1.3028e-05,
          9.7620e-01, 9.7642e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 386:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0096, 0.0090,  ..., 0.0103, 0.0093, 0.0098],
         [0.0090, 0.0096, 0.0090,  ..., 0.0103, 0.0093, 0.0098],
         [0.0090, 0.0096, 0.0090,  ..., 0.0103, 0.0093, 0.0098],
         [0.9730, 0.9713, 0.9729,  ..., 0.9692, 0.9722, 0.9705]],
        [[0.0093, 0.0092, 0.0093,  ..., 0.0092, 0.0096, 0.0095],
         [0.0093, 0.0092, 0.0093,  ..., 0.0092, 0.0096, 0.0095],
         [0.0093, 0.0092, 0.0093,  ..., 0.0092, 0.0096, 0.0095],
         [0.9721, 0.9725, 0.9720,  ..., 0.9725, 0.9713, 0.9716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:40,115 [Process: 0] Synchronize training processes
2024-08-16 16:15:40,115 [Process: 0] Evaluating...
2024-08-16 16:15:40,117 [Process: 0] EPOCH 387:
2024-08-16 16:15:40,120 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8435e-03, 7.7639e-03, 7.8006e-03,  ..., 8.0831e-03,
          7.9387e-03, 8.1178e-03],
         [7.8435e-03, 7.7639e-03, 7.8006e-03,  ..., 8.0831e-03,
          7.9387e-03, 8.1178e-03],
         [7.8435e-03, 7.7639e-03, 7.8006e-03,  ..., 8.0831e-03,
          7.9387e-03, 8.1178e-03],
         [9.7647e-01, 9.7671e-01, 9.7660e-01,  ..., 9.7575e-01,
          9.7618e-01, 9.7565e-01]],
        [[7.7599e-03, 7.8168e-03, 7.9334e-03,  ..., 2.0819e-04,
          8.0289e-03, 8.0738e-03],
         [7.7599e-03, 7.8168e-03, 7.9334e-03,  ..., 2.0819e-04,
          8.0289e-03, 8.0738e-03],
         [7.7599e-03, 7.8168e-03, 7.9334e-03,  ..., 9.9938e-01,
          8.0289e-03, 8.0738e-03],
         [9.7672e-01, 9.7655e-01, 9.7620e-01,  ..., 2.0819e-04,
          9.7591e-01, 9.7578e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 387:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0100, 0.0094,  ..., 0.0106, 0.0100, 0.0097],
         [0.0101, 0.0100, 0.0094,  ..., 0.0106, 0.0100, 0.0097],
         [0.0101, 0.0100, 0.0094,  ..., 0.0106, 0.0100, 0.0097],
         [0.9698, 0.9699, 0.9717,  ..., 0.9681, 0.9699, 0.9710]],
        [[0.0091, 0.0092, 0.0092,  ..., 0.0090, 0.0095, 0.0094],
         [0.0091, 0.0092, 0.0092,  ..., 0.0090, 0.0095, 0.0094],
         [0.0091, 0.0092, 0.0092,  ..., 0.0090, 0.0095, 0.0094],
         [0.9726, 0.9723, 0.9724,  ..., 0.9729, 0.9715, 0.9717]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:42,284 [Process: 0] Synchronize training processes
2024-08-16 16:15:42,284 [Process: 0] Evaluating...
2024-08-16 16:15:42,286 [Process: 0] EPOCH 388:
2024-08-16 16:15:42,288 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.9909e-03, 8.2403e-03, 8.1540e-03,  ..., 7.8440e-03,
          7.7744e-03, 7.8861e-03],
         [7.9909e-03, 8.2403e-03, 8.1540e-03,  ..., 7.8440e-03,
          7.7744e-03, 7.8861e-03],
         [7.9909e-03, 8.2403e-03, 8.1540e-03,  ..., 7.8440e-03,
          7.7744e-03, 7.8861e-03],
         [9.7603e-01, 9.7528e-01, 9.7554e-01,  ..., 9.7647e-01,
          9.7668e-01, 9.7634e-01]],
        [[8.3380e-03, 8.1468e-03, 7.5278e-03,  ..., 2.4319e-04,
          7.9715e-03, 7.8942e-03],
         [8.3380e-03, 8.1468e-03, 7.5278e-03,  ..., 2.4319e-04,
          7.9715e-03, 7.8942e-03],
         [8.3380e-03, 8.1468e-03, 7.5278e-03,  ..., 9.9927e-01,
          7.9715e-03, 7.8942e-03],
         [9.7499e-01, 9.7556e-01, 9.7742e-01,  ..., 2.4319e-04,
          9.7609e-01, 9.7632e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 388:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0095, 0.0096,  ..., 0.0106, 0.0097, 0.0097],
         [0.0094, 0.0095, 0.0096,  ..., 0.0106, 0.0097, 0.0097],
         [0.0094, 0.0095, 0.0096,  ..., 0.0106, 0.0097, 0.0097],
         [0.9717, 0.9714, 0.9711,  ..., 0.9682, 0.9710, 0.9709]],
        [[0.0090, 0.0092, 0.0089,  ..., 0.0089, 0.0094, 0.0093],
         [0.0090, 0.0092, 0.0089,  ..., 0.0089, 0.0094, 0.0093],
         [0.0090, 0.0092, 0.0089,  ..., 0.0089, 0.0094, 0.0093],
         [0.9729, 0.9724, 0.9732,  ..., 0.9734, 0.9718, 0.9720]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:44,392 [Process: 0] Synchronize training processes
2024-08-16 16:15:44,392 [Process: 0] Evaluating...
2024-08-16 16:15:44,394 [Process: 0] EPOCH 389:
2024-08-16 16:15:44,396 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2427e-03, 8.0356e-03, 8.5255e-03,  ..., 7.7096e-03,
          7.9691e-03, 8.1379e-03],
         [8.2427e-03, 8.0356e-03, 8.5255e-03,  ..., 7.7096e-03,
          7.9691e-03, 8.1379e-03],
         [8.2427e-03, 8.0356e-03, 8.5255e-03,  ..., 7.7096e-03,
          7.9691e-03, 8.1379e-03],
         [9.7527e-01, 9.7589e-01, 9.7442e-01,  ..., 9.7687e-01,
          9.7609e-01, 9.7559e-01]],
        [[8.0768e-03, 7.7678e-03, 8.5064e-03,  ..., 2.5675e-04,
          7.7979e-03, 8.0087e-03],
         [8.0768e-03, 7.7678e-03, 8.5064e-03,  ..., 2.5675e-04,
          7.7979e-03, 8.0087e-03],
         [8.0768e-03, 7.7678e-03, 8.5064e-03,  ..., 9.9923e-01,
          7.7979e-03, 8.0087e-03],
         [9.7577e-01, 9.7670e-01, 9.7448e-01,  ..., 2.5675e-04,
          9.7661e-01, 9.7597e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 389:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0093, 0.0088, 0.0089,  ..., 0.0092, 0.0092, 0.0090],
         [0.0093, 0.0088, 0.0089,  ..., 0.0092, 0.0092, 0.0090],
         [0.0093, 0.0088, 0.0089,  ..., 0.0092, 0.0092, 0.0090],
         [0.9721, 0.9736, 0.9733,  ..., 0.9724, 0.9723, 0.9729]],
        [[0.0091, 0.0091, 0.0092,  ..., 0.0091, 0.0091, 0.0093],
         [0.0091, 0.0091, 0.0092,  ..., 0.0091, 0.0091, 0.0093],
         [0.0091, 0.0091, 0.0092,  ..., 0.0091, 0.0091, 0.0093],
         [0.9728, 0.9726, 0.9725,  ..., 0.9728, 0.9727, 0.9721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:46,507 [Process: 0] Synchronize training processes
2024-08-16 16:15:46,508 [Process: 0] Evaluating...
2024-08-16 16:15:46,510 [Process: 0] EPOCH 390:
2024-08-16 16:15:46,512 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.9280e-03, 7.8780e-03, 7.8107e-03,  ..., 7.8819e-03,
          7.9713e-03, 8.3128e-03],
         [7.9280e-03, 7.8780e-03, 7.8107e-03,  ..., 7.8819e-03,
          7.9713e-03, 8.3128e-03],
         [7.9280e-03, 7.8780e-03, 7.8107e-03,  ..., 7.8819e-03,
          7.9713e-03, 8.3128e-03],
         [9.7622e-01, 9.7637e-01, 9.7657e-01,  ..., 9.7635e-01,
          9.7609e-01, 9.7506e-01]],
        [[8.1696e-03, 7.7421e-03, 7.7808e-03,  ..., 7.2169e-04,
          8.0388e-03, 8.0000e-03],
         [8.1696e-03, 7.7421e-03, 7.7808e-03,  ..., 7.2169e-04,
          8.0388e-03, 8.0000e-03],
         [8.1696e-03, 7.7421e-03, 7.7808e-03,  ..., 9.9783e-01,
          8.0388e-03, 8.0000e-03],
         [9.7549e-01, 9.7677e-01, 9.7666e-01,  ..., 7.2169e-04,
          9.7588e-01, 9.7600e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 390:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0096, 0.0094,  ..., 0.0091, 0.0093, 0.0094],
         [0.0096, 0.0096, 0.0094,  ..., 0.0091, 0.0093, 0.0094],
         [0.0096, 0.0096, 0.0094,  ..., 0.0091, 0.0093, 0.0094],
         [0.9711, 0.9712, 0.9719,  ..., 0.9728, 0.9720, 0.9717]],
        [[0.0090, 0.0093, 0.0092,  ..., 0.0090, 0.0092, 0.0092],
         [0.0090, 0.0093, 0.0092,  ..., 0.0090, 0.0092, 0.0092],
         [0.0090, 0.0093, 0.0092,  ..., 0.0090, 0.0092, 0.0092],
         [0.9730, 0.9722, 0.9724,  ..., 0.9730, 0.9723, 0.9724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:48,617 [Process: 0] Synchronize training processes
2024-08-16 16:15:48,617 [Process: 0] Evaluating...
2024-08-16 16:15:48,619 [Process: 0] EPOCH 391:
2024-08-16 16:15:48,621 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.0739e-03, 7.8384e-03, 7.9118e-03,  ..., 8.1646e-03,
          7.6592e-03, 7.8969e-03],
         [8.0739e-03, 7.8384e-03, 7.9118e-03,  ..., 8.1646e-03,
          7.6592e-03, 7.8969e-03],
         [8.0739e-03, 7.8384e-03, 7.9118e-03,  ..., 8.1646e-03,
          7.6592e-03, 7.8969e-03],
         [9.7578e-01, 9.7648e-01, 9.7626e-01,  ..., 9.7551e-01,
          9.7702e-01, 9.7631e-01]],
        [[8.1019e-03, 7.9493e-03, 8.3886e-03,  ..., 6.3923e-04,
          7.6953e-03, 7.7612e-03],
         [8.1019e-03, 7.9493e-03, 8.3886e-03,  ..., 6.3923e-04,
          7.6953e-03, 7.7612e-03],
         [8.1019e-03, 7.9493e-03, 8.3886e-03,  ..., 9.9808e-01,
          7.6953e-03, 7.7612e-03],
         [9.7569e-01, 9.7615e-01, 9.7483e-01,  ..., 6.3923e-04,
          9.7691e-01, 9.7672e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 391:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0096, 0.0093,  ..., 0.0092, 0.0089, 0.0093],
         [0.0092, 0.0096, 0.0093,  ..., 0.0092, 0.0089, 0.0093],
         [0.0092, 0.0096, 0.0093,  ..., 0.0092, 0.0089, 0.0093],
         [0.9724, 0.9712, 0.9722,  ..., 0.9725, 0.9733, 0.9721]],
        [[0.0091, 0.0091, 0.0091,  ..., 0.0090, 0.0091, 0.0092],
         [0.0091, 0.0091, 0.0091,  ..., 0.0090, 0.0091, 0.0092],
         [0.0091, 0.0091, 0.0091,  ..., 0.0090, 0.0091, 0.0092],
         [0.9726, 0.9728, 0.9727,  ..., 0.9729, 0.9726, 0.9724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:15:50,724 [Process: 0] Synchronize training processes
2024-08-16 16:15:50,724 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0076, 0.0076,  ..., 0.0080, 0.0075, 0.0075],
         [0.0076, 0.0076, 0.0076,  ..., 0.0080, 0.0075, 0.0075],
         [0.0076, 0.0076, 0.0076,  ..., 0.0080, 0.0075, 0.0075],
         [0.9771, 0.9772, 0.9771,  ..., 0.9759, 0.9774, 0.9776]],
        [[0.0078, 0.0078, 0.0077,  ..., 0.0013, 0.0078, 0.0080],
         [0.0078, 0.0078, 0.0077,  ..., 0.0010, 0.0078, 0.0080],
         [0.0078, 0.0078, 0.0077,  ..., 0.9967, 0.0078, 0.0080],
         [0.9766, 0.9766, 0.9768,  ..., 0.0010, 0.9767, 0.9760]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 392:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:15:51,064 [Process: 0] EPOCH 392:
2024-08-16 16:15:51,066 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0091, 0.0091,  ..., 0.0092, 0.0092, 0.0089],
         [0.0094, 0.0091, 0.0091,  ..., 0.0092, 0.0092, 0.0089],
         [0.0094, 0.0091, 0.0091,  ..., 0.0092, 0.0092, 0.0089],
         [0.9719, 0.9727, 0.9728,  ..., 0.9724, 0.9725, 0.9734]],
        [[0.0091, 0.0093, 0.0092,  ..., 0.0092, 0.0093, 0.0091],
         [0.0091, 0.0093, 0.0092,  ..., 0.0092, 0.0093, 0.0091],
         [0.0091, 0.0093, 0.0092,  ..., 0.0092, 0.0093, 0.0091],
         [0.9728, 0.9721, 0.9724,  ..., 0.9725, 0.9721, 0.9727]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.9180e-03, 7.7866e-03, 7.8492e-03,  ..., 7.8254e-03,
          7.7680e-03, 7.6411e-03],
         [7.9180e-03, 7.7866e-03, 7.8492e-03,  ..., 7.8254e-03,
          7.7680e-03, 7.6411e-03],
         [7.9180e-03, 7.7866e-03, 7.8492e-03,  ..., 7.8254e-03,
          7.7680e-03, 7.6411e-03],
         [9.7625e-01, 9.7664e-01, 9.7645e-01,  ..., 9.7652e-01,
          9.7670e-01, 9.7708e-01]],
        [[8.2304e-03, 7.8616e-03, 7.7630e-03,  ..., 1.0628e-03,
          7.8572e-03, 8.0689e-03],
         [8.2304e-03, 7.8616e-03, 7.7630e-03,  ..., 8.7775e-04,
          7.8572e-03, 8.0689e-03],
         [8.2304e-03, 7.8616e-03, 7.7630e-03,  ..., 9.9718e-01,
          7.8572e-03, 8.0689e-03],
         [9.7531e-01, 9.7642e-01, 9.7671e-01,  ..., 8.7775e-04,
          9.7643e-01, 9.7579e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 393:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:15:53,142 [Process: 0] Synchronize training processes
2024-08-16 16:15:53,143 [Process: 0] Evaluating...
2024-08-16 16:15:53,145 [Process: 0] EPOCH 393:
2024-08-16 16:15:53,147 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0093, 0.0091,  ..., 0.0091, 0.0093, 0.0091],
         [0.0092, 0.0093, 0.0091,  ..., 0.0091, 0.0093, 0.0091],
         [0.0092, 0.0093, 0.0091,  ..., 0.0091, 0.0093, 0.0091],
         [0.9725, 0.9722, 0.9726,  ..., 0.9726, 0.9720, 0.9727]],
        [[0.0094, 0.0094, 0.0092,  ..., 0.0092, 0.0095, 0.0093],
         [0.0094, 0.0094, 0.0092,  ..., 0.0092, 0.0095, 0.0093],
         [0.0094, 0.0094, 0.0092,  ..., 0.0092, 0.0095, 0.0093],
         [0.9718, 0.9719, 0.9724,  ..., 0.9725, 0.9714, 0.9720]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5425e-03, 7.7445e-03, 7.4873e-03,  ..., 7.7822e-03,
          7.8546e-03, 7.4772e-03],
         [7.5425e-03, 7.7445e-03, 7.4873e-03,  ..., 7.7822e-03,
          7.8546e-03, 7.4772e-03],
         [7.5425e-03, 7.7445e-03, 7.4873e-03,  ..., 7.7822e-03,
          7.8546e-03, 7.4772e-03],
         [9.7737e-01, 9.7677e-01, 9.7754e-01,  ..., 9.7665e-01,
          9.7644e-01, 9.7757e-01]],
        [[7.8580e-03, 8.0802e-03, 7.4932e-03,  ..., 7.7993e-04,
          7.8736e-03, 7.4732e-03],
         [7.8580e-03, 8.0802e-03, 7.4932e-03,  ..., 7.7993e-04,
          7.8736e-03, 7.4732e-03],
         [7.8580e-03, 8.0802e-03, 7.4932e-03,  ..., 9.9766e-01,
          7.8736e-03, 7.4732e-03],
         [9.7643e-01, 9.7576e-01, 9.7752e-01,  ..., 7.7993e-04,
          9.7638e-01, 9.7758e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 394:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:15:55,245 [Process: 0] Synchronize training processes
2024-08-16 16:15:55,246 [Process: 0] Evaluating...
2024-08-16 16:15:55,248 [Process: 0] EPOCH 394:
2024-08-16 16:15:55,250 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0090, 0.0090,  ..., 0.0091, 0.0091, 0.0090],
         [0.0089, 0.0090, 0.0090,  ..., 0.0091, 0.0091, 0.0090],
         [0.0089, 0.0090, 0.0090,  ..., 0.0091, 0.0091, 0.0090],
         [0.9732, 0.9730, 0.9731,  ..., 0.9728, 0.9727, 0.9731]],
        [[0.0091, 0.0092, 0.0091,  ..., 0.0091, 0.0093, 0.0092],
         [0.0091, 0.0092, 0.0091,  ..., 0.0091, 0.0093, 0.0092],
         [0.0091, 0.0092, 0.0091,  ..., 0.0091, 0.0093, 0.0092],
         [0.9726, 0.9725, 0.9726,  ..., 0.9728, 0.9722, 0.9725]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.4952e-03, 7.6136e-03, 7.8713e-03,  ..., 7.5936e-03,
          7.6369e-03, 7.4080e-03],
         [7.4952e-03, 7.6136e-03, 7.8713e-03,  ..., 7.5936e-03,
          7.6369e-03, 7.4080e-03],
         [7.4952e-03, 7.6136e-03, 7.8713e-03,  ..., 7.5936e-03,
          7.6369e-03, 7.4080e-03],
         [9.7751e-01, 9.7716e-01, 9.7639e-01,  ..., 9.7722e-01,
          9.7709e-01, 9.7778e-01]],
        [[7.7560e-03, 7.7480e-03, 7.5969e-03,  ..., 9.1024e-06,
          7.5673e-03, 8.1184e-03],
         [7.7560e-03, 7.7480e-03, 7.5969e-03,  ..., 9.1024e-06,
          7.5673e-03, 8.1184e-03],
         [7.7560e-03, 7.7480e-03, 7.5969e-03,  ..., 9.9997e-01,
          7.5673e-03, 8.1184e-03],
         [9.7673e-01, 9.7676e-01, 9.7721e-01,  ..., 9.1024e-06,
          9.7730e-01, 9.7564e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 395:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:15:57,320 [Process: 0] Synchronize training processes
2024-08-16 16:15:57,320 [Process: 0] Evaluating...
2024-08-16 16:15:57,322 [Process: 0] EPOCH 395:
2024-08-16 16:15:57,324 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0090, 0.0092,  ..., 0.0094, 0.0091, 0.0091],
         [0.0091, 0.0090, 0.0092,  ..., 0.0094, 0.0091, 0.0091],
         [0.0091, 0.0090, 0.0092,  ..., 0.0094, 0.0091, 0.0091],
         [0.9726, 0.9729, 0.9725,  ..., 0.9719, 0.9727, 0.9727]],
        [[0.0092, 0.0092, 0.0094,  ..., 0.0090, 0.0094, 0.0094],
         [0.0092, 0.0092, 0.0094,  ..., 0.0090, 0.0094, 0.0094],
         [0.0092, 0.0092, 0.0094,  ..., 0.0090, 0.0094, 0.0094],
         [0.9724, 0.9725, 0.9717,  ..., 0.9731, 0.9719, 0.9719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6383e-03, 7.7188e-03, 7.7575e-03,  ..., 7.7314e-03,
          7.6755e-03, 7.6467e-03],
         [7.6383e-03, 7.7188e-03, 7.7575e-03,  ..., 7.7314e-03,
          7.6755e-03, 7.6467e-03],
         [7.6383e-03, 7.7188e-03, 7.7575e-03,  ..., 7.7314e-03,
          7.6755e-03, 7.6467e-03],
         [9.7708e-01, 9.7684e-01, 9.7673e-01,  ..., 9.7681e-01,
          9.7697e-01, 9.7706e-01]],
        [[8.1609e-03, 7.6095e-03, 8.0115e-03,  ..., 2.2591e-05,
          7.5502e-03, 7.5266e-03],
         [8.1609e-03, 7.6095e-03, 8.0115e-03,  ..., 2.2591e-05,
          7.5502e-03, 7.5266e-03],
         [8.1609e-03, 7.6095e-03, 8.0115e-03,  ..., 9.9993e-01,
          7.5502e-03, 7.5266e-03],
         [9.7552e-01, 9.7717e-01, 9.7597e-01,  ..., 2.2591e-05,
          9.7735e-01, 9.7742e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 396:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:15:59,382 [Process: 0] Synchronize training processes
2024-08-16 16:15:59,382 [Process: 0] Evaluating...
2024-08-16 16:15:59,384 [Process: 0] EPOCH 396:
2024-08-16 16:15:59,386 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0093, 0.0091, 0.0090,  ..., 0.0093, 0.0092, 0.0093],
         [0.0093, 0.0091, 0.0090,  ..., 0.0093, 0.0092, 0.0093],
         [0.0093, 0.0091, 0.0090,  ..., 0.0093, 0.0092, 0.0093],
         [0.9721, 0.9728, 0.9730,  ..., 0.9721, 0.9725, 0.9721]],
        [[0.0093, 0.0093, 0.0093,  ..., 0.0092, 0.0095, 0.0092],
         [0.0093, 0.0093, 0.0093,  ..., 0.0092, 0.0095, 0.0092],
         [0.0093, 0.0093, 0.0093,  ..., 0.0092, 0.0095, 0.0092],
         [0.9722, 0.9720, 0.9722,  ..., 0.9724, 0.9716, 0.9724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6182e-03, 7.7112e-03, 7.8688e-03,  ..., 7.7437e-03,
          7.6558e-03, 7.7801e-03],
         [7.6182e-03, 7.7112e-03, 7.8688e-03,  ..., 7.7437e-03,
          7.6558e-03, 7.7801e-03],
         [7.6182e-03, 7.7112e-03, 7.8688e-03,  ..., 7.7437e-03,
          7.6558e-03, 7.7801e-03],
         [9.7715e-01, 9.7687e-01, 9.7639e-01,  ..., 9.7677e-01,
          9.7703e-01, 9.7666e-01]],
        [[7.8376e-03, 7.7290e-03, 7.8173e-03,  ..., 5.5868e-04,
          7.8380e-03, 7.5332e-03],
         [7.8376e-03, 7.7290e-03, 7.8173e-03,  ..., 5.5868e-04,
          7.8380e-03, 7.5332e-03],
         [7.8376e-03, 7.7290e-03, 7.8173e-03,  ..., 9.9832e-01,
          7.8380e-03, 7.5332e-03],
         [9.7649e-01, 9.7681e-01, 9.7655e-01,  ..., 5.5868e-04,
          9.7649e-01, 9.7740e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 397:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:16:01,483 [Process: 0] Synchronize training processes
2024-08-16 16:16:01,483 [Process: 0] Evaluating...
2024-08-16 16:16:01,485 [Process: 0] EPOCH 397:
2024-08-16 16:16:01,487 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0091, 0.0090,  ..., 0.0090, 0.0091, 0.0090],
         [0.0090, 0.0091, 0.0090,  ..., 0.0090, 0.0091, 0.0090],
         [0.0090, 0.0091, 0.0090,  ..., 0.0090, 0.0091, 0.0090],
         [0.9731, 0.9726, 0.9731,  ..., 0.9730, 0.9728, 0.9729]],
        [[0.0091, 0.0090, 0.0091,  ..., 0.0091, 0.0091, 0.0092],
         [0.0091, 0.0090, 0.0091,  ..., 0.0091, 0.0091, 0.0092],
         [0.0091, 0.0090, 0.0091,  ..., 0.0091, 0.0091, 0.0092],
         [0.9726, 0.9730, 0.9727,  ..., 0.9726, 0.9726, 0.9724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5057e-03, 7.6363e-03, 7.5674e-03,  ..., 7.8419e-03,
          7.5321e-03, 7.6031e-03],
         [7.5057e-03, 7.6363e-03, 7.5674e-03,  ..., 7.8419e-03,
          7.5321e-03, 7.6031e-03],
         [7.5057e-03, 7.6363e-03, 7.5674e-03,  ..., 7.8419e-03,
          7.5321e-03, 7.6031e-03],
         [9.7748e-01, 9.7709e-01, 9.7730e-01,  ..., 9.7647e-01,
          9.7740e-01, 9.7719e-01]],
        [[7.9418e-03, 7.5364e-03, 7.6707e-03,  ..., 5.2995e-04,
          7.7113e-03, 7.6718e-03],
         [7.9418e-03, 7.5364e-03, 7.6707e-03,  ..., 5.2995e-04,
          7.7113e-03, 7.6718e-03],
         [7.9418e-03, 7.5364e-03, 7.6707e-03,  ..., 9.9841e-01,
          7.7113e-03, 7.6718e-03],
         [9.7617e-01, 9.7739e-01, 9.7699e-01,  ..., 5.2995e-04,
          9.7687e-01, 9.7698e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:03,581 [Process: 0] Synchronize training processes
2024-08-16 16:16:03,582 [Process: 0] Evaluating...
2024-08-16 16:16:03,584 [Process: 0] EPOCH 398:
2024-08-16 16:16:03,586 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 398:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0089, 0.0088,  ..., 0.0089, 0.0089, 0.0090],
         [0.0090, 0.0089, 0.0088,  ..., 0.0089, 0.0089, 0.0090],
         [0.0090, 0.0089, 0.0088,  ..., 0.0089, 0.0089, 0.0090],
         [0.9730, 0.9733, 0.9736,  ..., 0.9733, 0.9732, 0.9731]],
        [[0.0090, 0.0091, 0.0091,  ..., 0.0090, 0.0091, 0.0089],
         [0.0090, 0.0091, 0.0091,  ..., 0.0090, 0.0091, 0.0089],
         [0.0090, 0.0091, 0.0091,  ..., 0.0090, 0.0091, 0.0089],
         [0.9729, 0.9727, 0.9726,  ..., 0.9731, 0.9727, 0.9734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5980e-03, 7.7882e-03, 7.7075e-03,  ..., 7.4058e-03,
          7.5688e-03, 7.5683e-03],
         [7.5980e-03, 7.7882e-03, 7.7075e-03,  ..., 7.4058e-03,
          7.5688e-03, 7.5683e-03],
         [7.5980e-03, 7.7882e-03, 7.7075e-03,  ..., 7.4058e-03,
          7.5688e-03, 7.5683e-03],
         [9.7721e-01, 9.7664e-01, 9.7688e-01,  ..., 9.7778e-01,
          9.7729e-01, 9.7730e-01]],
        [[7.9290e-03, 7.7955e-03, 7.5009e-03,  ..., 3.2052e-04,
          8.3106e-03, 8.0008e-03],
         [7.9290e-03, 7.7955e-03, 7.5009e-03,  ..., 3.2052e-04,
          8.3106e-03, 8.0008e-03],
         [7.9290e-03, 7.7955e-03, 7.5009e-03,  ..., 9.9904e-01,
          8.3106e-03, 8.0008e-03],
         [9.7621e-01, 9.7661e-01, 9.7750e-01,  ..., 3.2052e-04,
          9.7507e-01, 9.7600e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:05,664 [Process: 0] Synchronize training processes
2024-08-16 16:16:05,665 [Process: 0] Evaluating...
2024-08-16 16:16:05,667 [Process: 0] EPOCH 399:
2024-08-16 16:16:05,669 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 399:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0090, 0.0089,  ..., 0.0089, 0.0090, 0.0088],
         [0.0090, 0.0090, 0.0089,  ..., 0.0089, 0.0090, 0.0088],
         [0.0090, 0.0090, 0.0089,  ..., 0.0089, 0.0090, 0.0088],
         [0.9730, 0.9730, 0.9732,  ..., 0.9734, 0.9731, 0.9736]],
        [[0.0092, 0.0090, 0.0091,  ..., 0.0090, 0.0091, 0.0090],
         [0.0092, 0.0090, 0.0091,  ..., 0.0090, 0.0091, 0.0090],
         [0.0092, 0.0090, 0.0091,  ..., 0.0090, 0.0091, 0.0090],
         [0.9725, 0.9731, 0.9727,  ..., 0.9729, 0.9727, 0.9730]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:16:07,765 [Process: 0] Synchronize training processes
2024-08-16 16:16:07,766 [Process: 0] Evaluating...
2024-08-16 16:16:07,768 [Process: 0] EPOCH 400:
2024-08-16 16:16:07,770 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5996e-03, 7.5836e-03, 7.4226e-03,  ..., 7.7692e-03,
          7.5572e-03, 7.6831e-03],
         [7.5996e-03, 7.5836e-03, 7.4226e-03,  ..., 7.7692e-03,
          7.5572e-03, 7.6831e-03],
         [7.5996e-03, 7.5836e-03, 7.4226e-03,  ..., 7.7692e-03,
          7.5572e-03, 7.6831e-03],
         [9.7720e-01, 9.7725e-01, 9.7773e-01,  ..., 9.7669e-01,
          9.7733e-01, 9.7695e-01]],
        [[7.7453e-03, 8.2029e-03, 8.2943e-03,  ..., 3.6885e-04,
          7.7271e-03, 7.7547e-03],
         [7.7453e-03, 8.2029e-03, 8.2943e-03,  ..., 3.6885e-04,
          7.7271e-03, 7.7547e-03],
         [7.7453e-03, 8.2029e-03, 8.2943e-03,  ..., 9.9889e-01,
          7.7271e-03, 7.7547e-03],
         [9.7676e-01, 9.7539e-01, 9.7512e-01,  ..., 3.6885e-04,
          9.7682e-01, 9.7674e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 400:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0088, 0.0087,  ..., 0.0091, 0.0090, 0.0089],
         [0.0089, 0.0088, 0.0087,  ..., 0.0091, 0.0090, 0.0089],
         [0.0089, 0.0088, 0.0087,  ..., 0.0091, 0.0090, 0.0089],
         [0.9733, 0.9735, 0.9738,  ..., 0.9728, 0.9731, 0.9734]],
        [[0.0088, 0.0087, 0.0090,  ..., 0.0087, 0.0088, 0.0089],
         [0.0088, 0.0087, 0.0090,  ..., 0.0087, 0.0088, 0.0089],
         [0.0088, 0.0087, 0.0090,  ..., 0.0087, 0.0088, 0.0089],
         [0.9736, 0.9739, 0.9729,  ..., 0.9738, 0.9736, 0.9734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:09,852 [Process: 0] Synchronize training processes
2024-08-16 16:16:09,852 [Process: 0] Evaluating...
2024-08-16 16:16:09,854 [Process: 0] EPOCH 401:
2024-08-16 16:16:09,856 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.2285e-03, 7.2816e-03, 7.4314e-03,  ..., 7.2824e-03,
          7.3406e-03, 7.1442e-03],
         [7.2285e-03, 7.2816e-03, 7.4314e-03,  ..., 7.2824e-03,
          7.3406e-03, 7.1442e-03],
         [7.2285e-03, 7.2816e-03, 7.4314e-03,  ..., 7.2824e-03,
          7.3406e-03, 7.1442e-03],
         [9.7831e-01, 9.7816e-01, 9.7771e-01,  ..., 9.7815e-01,
          9.7798e-01, 9.7857e-01]],
        [[7.7537e-03, 7.6542e-03, 7.7967e-03,  ..., 4.8065e-05,
          7.4277e-03, 7.7698e-03],
         [7.7537e-03, 7.6542e-03, 7.7967e-03,  ..., 4.8065e-05,
          7.4277e-03, 7.7698e-03],
         [7.7537e-03, 7.6542e-03, 7.7967e-03,  ..., 9.9986e-01,
          7.4277e-03, 7.7698e-03],
         [9.7674e-01, 9.7704e-01, 9.7661e-01,  ..., 4.8065e-05,
          9.7772e-01, 9.7669e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 401:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0087, 0.0086,  ..., 0.0087, 0.0087, 0.0089],
         [0.0088, 0.0087, 0.0086,  ..., 0.0087, 0.0087, 0.0089],
         [0.0088, 0.0087, 0.0086,  ..., 0.0087, 0.0087, 0.0089],
         [0.9737, 0.9740, 0.9743,  ..., 0.9739, 0.9738, 0.9733]],
        [[0.0089, 0.0088, 0.0089,  ..., 0.0089, 0.0087, 0.0088],
         [0.0089, 0.0088, 0.0089,  ..., 0.0089, 0.0087, 0.0088],
         [0.0089, 0.0088, 0.0089,  ..., 0.0089, 0.0087, 0.0088],
         [0.9732, 0.9736, 0.9733,  ..., 0.9732, 0.9738, 0.9735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:11,960 [Process: 0] Synchronize training processes
2024-08-16 16:16:11,961 [Process: 0] Evaluating...
2024-08-16 16:16:11,969 [Process: 0] EPOCH 402:
2024-08-16 16:16:11,971 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0076, 0.0075,  ..., 0.0075, 0.0074, 0.0074],
         [0.0073, 0.0076, 0.0075,  ..., 0.0075, 0.0074, 0.0074],
         [0.0073, 0.0076, 0.0075,  ..., 0.0075, 0.0074, 0.0074],
         [0.9782, 0.9773, 0.9776,  ..., 0.9776, 0.9779, 0.9778]],
        [[0.0076, 0.0076, 0.0074,  ..., 0.0012, 0.0074, 0.0076],
         [0.0076, 0.0076, 0.0074,  ..., 0.0012, 0.0074, 0.0076],
         [0.0076, 0.0076, 0.0074,  ..., 0.9964, 0.0074, 0.0076],
         [0.9773, 0.9773, 0.9777,  ..., 0.0012, 0.9777, 0.9773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 402:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0092, 0.0092,  ..., 0.0093, 0.0089, 0.0091],
         [0.0089, 0.0092, 0.0092,  ..., 0.0093, 0.0089, 0.0091],
         [0.0089, 0.0092, 0.0092,  ..., 0.0093, 0.0089, 0.0091],
         [0.9733, 0.9725, 0.9725,  ..., 0.9721, 0.9733, 0.9726]],
        [[0.0091, 0.0091, 0.0092,  ..., 0.0091, 0.0090, 0.0090],
         [0.0091, 0.0091, 0.0092,  ..., 0.0091, 0.0090, 0.0090],
         [0.0091, 0.0091, 0.0092,  ..., 0.0091, 0.0090, 0.0090],
         [0.9728, 0.9726, 0.9723,  ..., 0.9727, 0.9729, 0.9730]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:14,054 [Process: 0] Synchronize training processes
2024-08-16 16:16:14,055 [Process: 0] Evaluating...
2024-08-16 16:16:14,057 [Process: 0] EPOCH 403:
2024-08-16 16:16:14,059 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0076, 0.0076,  ..., 0.0076, 0.0076, 0.0076],
         [0.0076, 0.0076, 0.0076,  ..., 0.0076, 0.0076, 0.0076],
         [0.0076, 0.0076, 0.0076,  ..., 0.0076, 0.0076, 0.0076],
         [0.9773, 0.9772, 0.9771,  ..., 0.9773, 0.9773, 0.9773]],
        [[0.0075, 0.0076, 0.0078,  ..., 0.0023, 0.0080, 0.0078],
         [0.0075, 0.0076, 0.0078,  ..., 0.0023, 0.0080, 0.0078],
         [0.0075, 0.0076, 0.0078,  ..., 0.9931, 0.0080, 0.0078],
         [0.9774, 0.9773, 0.9767,  ..., 0.0023, 0.9761, 0.9767]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 403:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0091, 0.0091,  ..., 0.0093, 0.0091, 0.0091],
         [0.0092, 0.0091, 0.0091,  ..., 0.0093, 0.0091, 0.0091],
         [0.0092, 0.0091, 0.0091,  ..., 0.0093, 0.0091, 0.0091],
         [0.9725, 0.9728, 0.9727,  ..., 0.9720, 0.9726, 0.9728]],
        [[0.0094, 0.0092, 0.0094,  ..., 0.0092, 0.0092, 0.0092],
         [0.0094, 0.0092, 0.0094,  ..., 0.0092, 0.0092, 0.0092],
         [0.0094, 0.0092, 0.0094,  ..., 0.0092, 0.0092, 0.0092],
         [0.9717, 0.9723, 0.9717,  ..., 0.9725, 0.9723, 0.9724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:16,112 [Process: 0] Synchronize training processes
2024-08-16 16:16:16,112 [Process: 0] Evaluating...
2024-08-16 16:16:16,114 [Process: 0] EPOCH 404:
2024-08-16 16:16:16,116 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.4420e-03, 7.3285e-03, 7.3117e-03,  ..., 7.3383e-03,
          7.4254e-03, 7.2138e-03],
         [7.4420e-03, 7.3285e-03, 7.3117e-03,  ..., 7.3383e-03,
          7.4254e-03, 7.2138e-03],
         [7.4420e-03, 7.3285e-03, 7.3117e-03,  ..., 7.3383e-03,
          7.4254e-03, 7.2138e-03],
         [9.7767e-01, 9.7801e-01, 9.7807e-01,  ..., 9.7799e-01,
          9.7772e-01, 9.7836e-01]],
        [[7.2140e-03, 7.3974e-03, 7.6299e-03,  ..., 5.0160e-04,
          7.5845e-03, 7.9869e-03],
         [7.2140e-03, 7.3974e-03, 7.6299e-03,  ..., 1.7541e-04,
          7.5845e-03, 7.9869e-03],
         [7.2140e-03, 7.3974e-03, 7.6299e-03,  ..., 9.9915e-01,
          7.5845e-03, 7.9869e-03],
         [9.7836e-01, 9.7781e-01, 9.7711e-01,  ..., 1.7541e-04,
          9.7725e-01, 9.7604e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 404:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0088, 0.0088,  ..., 0.0092, 0.0085, 0.0087],
         [0.0088, 0.0088, 0.0088,  ..., 0.0092, 0.0085, 0.0087],
         [0.0088, 0.0088, 0.0088,  ..., 0.0092, 0.0085, 0.0087],
         [0.9737, 0.9737, 0.9736,  ..., 0.9724, 0.9744, 0.9739]],
        [[0.0090, 0.0089, 0.0089,  ..., 0.0088, 0.0090, 0.0088],
         [0.0090, 0.0089, 0.0089,  ..., 0.0088, 0.0090, 0.0088],
         [0.0090, 0.0089, 0.0089,  ..., 0.0088, 0.0090, 0.0088],
         [0.9730, 0.9732, 0.9734,  ..., 0.9735, 0.9729, 0.9736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:18,206 [Process: 0] Synchronize training processes
2024-08-16 16:16:18,206 [Process: 0] Evaluating...
2024-08-16 16:16:18,208 [Process: 0] EPOCH 405:
2024-08-16 16:16:18,210 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0071, 0.0071,  ..., 0.0073, 0.0070, 0.0071],
         [0.0070, 0.0071, 0.0071,  ..., 0.0073, 0.0070, 0.0071],
         [0.0070, 0.0071, 0.0071,  ..., 0.0073, 0.0070, 0.0071],
         [0.9789, 0.9786, 0.9786,  ..., 0.9781, 0.9790, 0.9787]],
        [[0.0070, 0.0074, 0.0073,  ..., 0.0016, 0.0081, 0.0075],
         [0.0070, 0.0074, 0.0073,  ..., 0.0016, 0.0081, 0.0075],
         [0.0070, 0.0074, 0.0073,  ..., 0.9951, 0.0081, 0.0075],
         [0.9790, 0.9778, 0.9782,  ..., 0.0016, 0.9756, 0.9775]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 405:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0086, 0.0086,  ..., 0.0088, 0.0092, 0.0093],
         [0.0086, 0.0086, 0.0086,  ..., 0.0088, 0.0092, 0.0093],
         [0.0086, 0.0086, 0.0086,  ..., 0.0088, 0.0092, 0.0093],
         [0.9742, 0.9742, 0.9743,  ..., 0.9737, 0.9723, 0.9721]],
        [[0.0087, 0.0088, 0.0087,  ..., 0.0086, 0.0088, 0.0087],
         [0.0087, 0.0088, 0.0087,  ..., 0.0086, 0.0088, 0.0087],
         [0.0087, 0.0088, 0.0087,  ..., 0.0086, 0.0088, 0.0087],
         [0.9739, 0.9735, 0.9740,  ..., 0.9743, 0.9737, 0.9738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:20,299 [Process: 0] Synchronize training processes
2024-08-16 16:16:20,299 [Process: 0] Evaluating...
2024-08-16 16:16:20,301 [Process: 0] EPOCH 406:
2024-08-16 16:16:20,303 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0077, 0.0074,  ..., 0.0076, 0.0075, 0.0074],
         [0.0073, 0.0077, 0.0074,  ..., 0.0076, 0.0075, 0.0074],
         [0.0073, 0.0077, 0.0074,  ..., 0.0076, 0.0075, 0.0074],
         [0.9781, 0.9770, 0.9779,  ..., 0.9771, 0.9776, 0.9777]],
        [[0.0074, 0.0076, 0.0081,  ..., 0.0023, 0.0081, 0.0079],
         [0.0074, 0.0076, 0.0081,  ..., 0.0023, 0.0081, 0.0079],
         [0.0074, 0.0076, 0.0081,  ..., 0.9931, 0.0081, 0.0079],
         [0.9778, 0.9773, 0.9758,  ..., 0.0023, 0.9758, 0.9764]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 406:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0090, 0.0086,  ..., 0.0088, 0.0089, 0.0097],
         [0.0089, 0.0090, 0.0086,  ..., 0.0088, 0.0089, 0.0097],
         [0.0089, 0.0090, 0.0086,  ..., 0.0088, 0.0089, 0.0097],
         [0.9734, 0.9730, 0.9741,  ..., 0.9735, 0.9733, 0.9709]],
        [[0.0088, 0.0089, 0.0086,  ..., 0.0086, 0.0091, 0.0087],
         [0.0088, 0.0089, 0.0086,  ..., 0.0086, 0.0091, 0.0087],
         [0.0088, 0.0089, 0.0086,  ..., 0.0086, 0.0091, 0.0087],
         [0.9736, 0.9733, 0.9742,  ..., 0.9741, 0.9727, 0.9738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:22,393 [Process: 0] Synchronize training processes
2024-08-16 16:16:22,393 [Process: 0] Evaluating...
2024-08-16 16:16:22,395 [Process: 0] EPOCH 407:
2024-08-16 16:16:22,397 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5048e-03, 7.3987e-03, 7.3771e-03,  ..., 7.3935e-03,
          8.0389e-03, 7.6360e-03],
         [7.5048e-03, 7.3987e-03, 7.3771e-03,  ..., 7.3935e-03,
          8.0389e-03, 7.6360e-03],
         [7.5048e-03, 7.3987e-03, 7.3771e-03,  ..., 7.3935e-03,
          8.0389e-03, 7.6360e-03],
         [9.7749e-01, 9.7780e-01, 9.7787e-01,  ..., 9.7782e-01,
          9.7588e-01, 9.7709e-01]],
        [[7.3873e-03, 7.3881e-03, 7.7525e-03,  ..., 2.5463e-05,
          7.3930e-03, 7.6230e-03],
         [7.3873e-03, 7.3881e-03, 7.7525e-03,  ..., 2.5463e-05,
          7.3930e-03, 7.6230e-03],
         [7.3873e-03, 7.3881e-03, 7.7525e-03,  ..., 9.9992e-01,
          7.3930e-03, 7.6230e-03],
         [9.7784e-01, 9.7784e-01, 9.7674e-01,  ..., 2.5463e-05,
          9.7782e-01, 9.7713e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 407:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0087, 0.0088,  ..., 0.0088, 0.0090, 0.0087],
         [0.0088, 0.0087, 0.0088,  ..., 0.0088, 0.0090, 0.0087],
         [0.0088, 0.0087, 0.0088,  ..., 0.0088, 0.0090, 0.0087],
         [0.9736, 0.9738, 0.9735,  ..., 0.9735, 0.9729, 0.9740]],
        [[0.0089, 0.0089, 0.0088,  ..., 0.0089, 0.0088, 0.0087],
         [0.0089, 0.0089, 0.0088,  ..., 0.0089, 0.0088, 0.0087],
         [0.0089, 0.0089, 0.0088,  ..., 0.0089, 0.0088, 0.0087],
         [0.9734, 0.9734, 0.9736,  ..., 0.9733, 0.9735, 0.9739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:24,458 [Process: 0] Synchronize training processes
2024-08-16 16:16:24,459 [Process: 0] Evaluating...
2024-08-16 16:16:24,461 [Process: 0] EPOCH 408:
2024-08-16 16:16:24,463 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.7400e-03, 7.6124e-03, 7.6983e-03,  ..., 7.7010e-03,
          7.4842e-03, 7.7043e-03],
         [7.7400e-03, 7.6124e-03, 7.6983e-03,  ..., 7.7010e-03,
          7.4842e-03, 7.7043e-03],
         [7.7400e-03, 7.6124e-03, 7.6983e-03,  ..., 7.7010e-03,
          7.4842e-03, 7.7043e-03],
         [9.7678e-01, 9.7716e-01, 9.7691e-01,  ..., 9.7690e-01,
          9.7755e-01, 9.7689e-01]],
        [[7.5736e-03, 7.6317e-03, 7.7326e-03,  ..., 4.0795e-04,
          7.5849e-03, 7.5746e-03],
         [7.5736e-03, 7.6317e-03, 7.7326e-03,  ..., 1.8644e-04,
          7.5849e-03, 7.5746e-03],
         [7.5736e-03, 7.6317e-03, 7.7326e-03,  ..., 9.9922e-01,
          7.5849e-03, 7.5746e-03],
         [9.7728e-01, 9.7710e-01, 9.7680e-01,  ..., 1.8644e-04,
          9.7725e-01, 9.7728e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 408:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0089, 0.0089,  ..., 0.0089, 0.0088, 0.0090],
         [0.0089, 0.0089, 0.0089,  ..., 0.0089, 0.0088, 0.0090],
         [0.0089, 0.0089, 0.0089,  ..., 0.0089, 0.0088, 0.0090],
         [0.9732, 0.9733, 0.9732,  ..., 0.9734, 0.9735, 0.9731]],
        [[0.0091, 0.0088, 0.0090,  ..., 0.0089, 0.0090, 0.0091],
         [0.0091, 0.0088, 0.0090,  ..., 0.0089, 0.0090, 0.0091],
         [0.0091, 0.0088, 0.0090,  ..., 0.0089, 0.0090, 0.0091],
         [0.9727, 0.9735, 0.9730,  ..., 0.9734, 0.9731, 0.9726]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:26,536 [Process: 0] Synchronize training processes
2024-08-16 16:16:26,537 [Process: 0] Evaluating...
2024-08-16 16:16:26,539 [Process: 0] EPOCH 409:
2024-08-16 16:16:26,541 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6802e-03, 7.3265e-03, 7.5757e-03,  ..., 7.4155e-03,
          7.3450e-03, 7.4055e-03],
         [7.6802e-03, 7.3265e-03, 7.5757e-03,  ..., 7.4155e-03,
          7.3450e-03, 7.4055e-03],
         [7.6802e-03, 7.3265e-03, 7.5757e-03,  ..., 7.4155e-03,
          7.3450e-03, 7.4055e-03],
         [9.7696e-01, 9.7802e-01, 9.7727e-01,  ..., 9.7775e-01,
          9.7797e-01, 9.7778e-01]],
        [[7.5414e-03, 7.0772e-03, 7.5938e-03,  ..., 1.1388e-04,
          7.1915e-03, 7.1691e-03],
         [7.5414e-03, 7.0772e-03, 7.5938e-03,  ..., 1.1388e-04,
          7.1915e-03, 7.1691e-03],
         [7.5414e-03, 7.0772e-03, 7.5938e-03,  ..., 9.9966e-01,
          7.1915e-03, 7.1691e-03],
         [9.7738e-01, 9.7877e-01, 9.7722e-01,  ..., 1.1388e-04,
          9.7843e-01, 9.7849e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 409:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0088, 0.0090,  ..., 0.0088, 0.0090, 0.0084],
         [0.0087, 0.0088, 0.0090,  ..., 0.0088, 0.0090, 0.0084],
         [0.0087, 0.0088, 0.0090,  ..., 0.0088, 0.0090, 0.0084],
         [0.9738, 0.9735, 0.9731,  ..., 0.9735, 0.9730, 0.9748]],
        [[0.0088, 0.0088, 0.0090,  ..., 0.0089, 0.0089, 0.0088],
         [0.0088, 0.0088, 0.0090,  ..., 0.0089, 0.0089, 0.0088],
         [0.0088, 0.0088, 0.0090,  ..., 0.0089, 0.0089, 0.0088],
         [0.9737, 0.9736, 0.9730,  ..., 0.9732, 0.9734, 0.9735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:28,620 [Process: 0] Synchronize training processes
2024-08-16 16:16:28,620 [Process: 0] Evaluating...
2024-08-16 16:16:28,622 [Process: 0] EPOCH 410:
2024-08-16 16:16:28,624 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0074, 0.0073,  ..., 0.0073, 0.0076, 0.0077],
         [0.0075, 0.0074, 0.0073,  ..., 0.0073, 0.0076, 0.0077],
         [0.0075, 0.0074, 0.0073,  ..., 0.0073, 0.0076, 0.0077],
         [0.9774, 0.9778, 0.9780,  ..., 0.9781, 0.9772, 0.9769]],
        [[0.0074, 0.0072, 0.0076,  ..., 0.0032, 0.0072, 0.0074],
         [0.0074, 0.0072, 0.0076,  ..., 0.0022, 0.0072, 0.0074],
         [0.0074, 0.0072, 0.0076,  ..., 0.9923, 0.0072, 0.0074],
         [0.9779, 0.9784, 0.9773,  ..., 0.0022, 0.9783, 0.9778]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 410:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0088, 0.0086,  ..., 0.0087, 0.0088, 0.0086],
         [0.0083, 0.0088, 0.0086,  ..., 0.0087, 0.0088, 0.0086],
         [0.0083, 0.0088, 0.0086,  ..., 0.0087, 0.0088, 0.0086],
         [0.9752, 0.9736, 0.9742,  ..., 0.9740, 0.9736, 0.9741]],
        [[0.0086, 0.0089, 0.0088,  ..., 0.0086, 0.0087, 0.0087],
         [0.0086, 0.0089, 0.0088,  ..., 0.0086, 0.0087, 0.0087],
         [0.0086, 0.0089, 0.0088,  ..., 0.0086, 0.0087, 0.0087],
         [0.9742, 0.9732, 0.9737,  ..., 0.9741, 0.9740, 0.9740]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:30,687 [Process: 0] Synchronize training processes
2024-08-16 16:16:30,687 [Process: 0] Evaluating...
2024-08-16 16:16:30,689 [Process: 0] EPOCH 411:
2024-08-16 16:16:30,691 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5679e-03, 7.5810e-03, 7.4272e-03,  ..., 7.3487e-03,
          7.5538e-03, 7.4055e-03],
         [7.5679e-03, 7.5810e-03, 7.4272e-03,  ..., 7.3487e-03,
          7.5538e-03, 7.4055e-03],
         [7.5679e-03, 7.5810e-03, 7.4272e-03,  ..., 7.3487e-03,
          7.5538e-03, 7.4055e-03],
         [9.7730e-01, 9.7726e-01, 9.7772e-01,  ..., 9.7795e-01,
          9.7734e-01, 9.7778e-01]],
        [[7.1701e-03, 7.4375e-03, 7.3206e-03,  ..., 2.1355e-04,
          6.9570e-03, 7.7453e-03],
         [7.1701e-03, 7.4375e-03, 7.3206e-03,  ..., 2.1355e-04,
          6.9570e-03, 7.7453e-03],
         [7.1701e-03, 7.4375e-03, 7.3206e-03,  ..., 9.9936e-01,
          6.9570e-03, 7.7453e-03],
         [9.7849e-01, 9.7769e-01, 9.7804e-01,  ..., 2.1355e-04,
          9.7913e-01, 9.7676e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 411:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0085, 0.0086,  ..., 0.0088, 0.0086, 0.0086],
         [0.0088, 0.0085, 0.0086,  ..., 0.0088, 0.0086, 0.0086],
         [0.0088, 0.0085, 0.0086,  ..., 0.0088, 0.0086, 0.0086],
         [0.9737, 0.9745, 0.9741,  ..., 0.9737, 0.9742, 0.9741]],
        [[0.0087, 0.0086, 0.0087,  ..., 0.0085, 0.0089, 0.0086],
         [0.0087, 0.0086, 0.0087,  ..., 0.0085, 0.0089, 0.0086],
         [0.0087, 0.0086, 0.0087,  ..., 0.0085, 0.0089, 0.0086],
         [0.9740, 0.9743, 0.9738,  ..., 0.9744, 0.9734, 0.9742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:32,765 [Process: 0] Synchronize training processes
2024-08-16 16:16:32,765 [Process: 0] Evaluating...
2024-08-16 16:16:32,773 [Process: 0] EPOCH 412:
2024-08-16 16:16:32,775 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0073, 0.0072,  ..., 0.0078, 0.0073, 0.0074],
         [0.0073, 0.0073, 0.0072,  ..., 0.0078, 0.0073, 0.0074],
         [0.0073, 0.0073, 0.0072,  ..., 0.0078, 0.0073, 0.0074],
         [0.9780, 0.9780, 0.9783,  ..., 0.9767, 0.9781, 0.9777]],
        [[0.0073, 0.0073, 0.0071,  ..., 0.0011, 0.0075, 0.0074],
         [0.0073, 0.0073, 0.0071,  ..., 0.0011, 0.0075, 0.0074],
         [0.0073, 0.0073, 0.0071,  ..., 0.9967, 0.0075, 0.0074],
         [0.9782, 0.9782, 0.9787,  ..., 0.0011, 0.9776, 0.9777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 412:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:16:34,916 [Process: 0] Synchronize training processes
2024-08-16 16:16:34,917 [Process: 0] Evaluating...
2024-08-16 16:16:34,919 [Process: 0] EPOCH 413:
2024-08-16 16:16:34,920 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0085, 0.0087,  ..., 0.0086, 0.0085, 0.0084],
         [0.0083, 0.0085, 0.0087,  ..., 0.0086, 0.0085, 0.0084],
         [0.0083, 0.0085, 0.0087,  ..., 0.0086, 0.0085, 0.0084],
         [0.9750, 0.9746, 0.9738,  ..., 0.9741, 0.9746, 0.9747]],
        [[0.0088, 0.0086, 0.0085,  ..., 0.0088, 0.0090, 0.0088],
         [0.0088, 0.0086, 0.0085,  ..., 0.0088, 0.0090, 0.0088],
         [0.0088, 0.0086, 0.0085,  ..., 0.0088, 0.0090, 0.0088],
         [0.9737, 0.9741, 0.9744,  ..., 0.9736, 0.9731, 0.9735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.3769e-03, 7.4374e-03, 7.2072e-03,  ..., 7.2797e-03,
          7.2286e-03, 7.2595e-03],
         [7.3769e-03, 7.4374e-03, 7.2072e-03,  ..., 7.2797e-03,
          7.2286e-03, 7.2595e-03],
         [7.3769e-03, 7.4374e-03, 7.2072e-03,  ..., 7.2797e-03,
          7.2286e-03, 7.2595e-03],
         [9.7787e-01, 9.7769e-01, 9.7838e-01,  ..., 9.7816e-01,
          9.7831e-01, 9.7822e-01]],
        [[7.1251e-03, 7.1923e-03, 7.2930e-03,  ..., 7.7853e-06,
          7.2676e-03, 7.4514e-03],
         [7.1251e-03, 7.1923e-03, 7.2930e-03,  ..., 7.7853e-06,
          7.2676e-03, 7.4514e-03],
         [7.1251e-03, 7.1923e-03, 7.2930e-03,  ..., 9.9998e-01,
          7.2676e-03, 7.4514e-03],
         [9.7862e-01, 9.7842e-01, 9.7812e-01,  ..., 7.7853e-06,
          9.7820e-01, 9.7765e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 413:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0086, 0.0085,  ..., 0.0089, 0.0087, 0.0085],
         [0.0086, 0.0086, 0.0085,  ..., 0.0089, 0.0087, 0.0085],
         [0.0086, 0.0086, 0.0085,  ..., 0.0089, 0.0087, 0.0085],
         [0.9742, 0.9742, 0.9744,  ..., 0.9733, 0.9740, 0.9744]],
        [[0.0088, 0.0087, 0.0090,  ..., 0.0086, 0.0089, 0.0087],
         [0.0088, 0.0087, 0.0090,  ..., 0.0086, 0.0089, 0.0087],
         [0.0088, 0.0087, 0.0090,  ..., 0.0086, 0.0089, 0.0087],
         [0.9736, 0.9738, 0.9731,  ..., 0.9742, 0.9734, 0.9739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5300e-03, 7.4876e-03, 7.4841e-03,  ..., 8.0962e-03,
          7.3734e-03, 7.5267e-03],
         [7.5300e-03, 7.4876e-03, 7.4841e-03,  ..., 8.0962e-03,
          7.3734e-03, 7.5267e-03],
         [7.5300e-03, 7.4876e-03, 7.4841e-03,  ..., 8.0962e-03,
          7.3734e-03, 7.5267e-03],
         [9.7741e-01, 9.7754e-01, 9.7755e-01,  ..., 9.7571e-01,
          9.7788e-01, 9.7742e-01]],
        [[7.5688e-03, 7.2583e-03, 7.3524e-03,  ..., 3.2318e-05,
          7.7509e-03, 7.2903e-03],
         [7.5688e-03, 7.2583e-03, 7.3524e-03,  ..., 3.2318e-05,
          7.7509e-03, 7.2903e-03],
         [7.5688e-03, 7.2583e-03, 7.3524e-03,  ..., 9.9990e-01,
          7.7509e-03, 7.2903e-03],
         [9.7729e-01, 9.7823e-01, 9.7794e-01,  ..., 3.2318e-05,
          9.7675e-01, 9.7813e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 414:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:16:37,029 [Process: 0] Synchronize training processes
2024-08-16 16:16:37,029 [Process: 0] Evaluating...
2024-08-16 16:16:37,031 [Process: 0] EPOCH 414:
2024-08-16 16:16:37,033 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0086, 0.0085,  ..., 0.0087, 0.0086, 0.0085],
         [0.0085, 0.0086, 0.0085,  ..., 0.0087, 0.0086, 0.0085],
         [0.0085, 0.0086, 0.0085,  ..., 0.0087, 0.0086, 0.0085],
         [0.9745, 0.9741, 0.9745,  ..., 0.9738, 0.9743, 0.9746]],
        [[0.0085, 0.0084, 0.0085,  ..., 0.0085, 0.0086, 0.0087],
         [0.0085, 0.0084, 0.0085,  ..., 0.0085, 0.0086, 0.0087],
         [0.0085, 0.0084, 0.0085,  ..., 0.0085, 0.0086, 0.0087],
         [0.9745, 0.9747, 0.9744,  ..., 0.9746, 0.9742, 0.9740]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.3981e-03, 7.4031e-03, 7.7435e-03,  ..., 8.0293e-03,
          7.4359e-03, 7.3180e-03],
         [7.3981e-03, 7.4031e-03, 7.7435e-03,  ..., 8.0293e-03,
          7.4359e-03, 7.3180e-03],
         [7.3981e-03, 7.4031e-03, 7.7435e-03,  ..., 8.0293e-03,
          7.4359e-03, 7.3180e-03],
         [9.7781e-01, 9.7779e-01, 9.7677e-01,  ..., 9.7591e-01,
          9.7769e-01, 9.7805e-01]],
        [[7.3607e-03, 7.2669e-03, 7.2137e-03,  ..., 5.9534e-05,
          7.0893e-03, 7.7139e-03],
         [7.3607e-03, 7.2669e-03, 7.2137e-03,  ..., 5.9534e-05,
          7.0893e-03, 7.7139e-03],
         [7.3607e-03, 7.2669e-03, 7.2137e-03,  ..., 9.9982e-01,
          7.0893e-03, 7.7139e-03],
         [9.7792e-01, 9.7820e-01, 9.7836e-01,  ..., 5.9534e-05,
          9.7873e-01, 9.7686e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 415:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:16:39,137 [Process: 0] Synchronize training processes
2024-08-16 16:16:39,137 [Process: 0] Evaluating...
2024-08-16 16:16:39,139 [Process: 0] EPOCH 415:
2024-08-16 16:16:39,141 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0083, 0.0086,  ..., 0.0085, 0.0082, 0.0081],
         [0.0083, 0.0083, 0.0086,  ..., 0.0085, 0.0082, 0.0081],
         [0.0083, 0.0083, 0.0086,  ..., 0.0085, 0.0082, 0.0081],
         [0.9750, 0.9750, 0.9742,  ..., 0.9746, 0.9754, 0.9756]],
        [[0.0084, 0.0084, 0.0084,  ..., 0.0083, 0.0085, 0.0084],
         [0.0084, 0.0084, 0.0084,  ..., 0.0083, 0.0085, 0.0084],
         [0.0084, 0.0084, 0.0084,  ..., 0.0083, 0.0085, 0.0084],
         [0.9749, 0.9749, 0.9747,  ..., 0.9750, 0.9744, 0.9748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6706e-03, 6.9437e-03, 7.0462e-03,  ..., 7.9959e-03,
          6.8837e-03, 7.0806e-03],
         [6.6706e-03, 6.9437e-03, 7.0462e-03,  ..., 7.9959e-03,
          6.8837e-03, 7.0806e-03],
         [6.6706e-03, 6.9437e-03, 7.0462e-03,  ..., 7.9959e-03,
          6.8837e-03, 7.0806e-03],
         [9.7999e-01, 9.7917e-01, 9.7886e-01,  ..., 9.7601e-01,
          9.7935e-01, 9.7876e-01]],
        [[7.1864e-03, 6.8398e-03, 6.6598e-03,  ..., 3.5437e-04,
          7.5781e-03, 7.2725e-03],
         [7.1864e-03, 6.8398e-03, 6.6598e-03,  ..., 3.5437e-04,
          7.5781e-03, 7.2725e-03],
         [7.1864e-03, 6.8398e-03, 6.6598e-03,  ..., 9.9894e-01,
          7.5781e-03, 7.2725e-03],
         [9.7844e-01, 9.7948e-01, 9.8002e-01,  ..., 3.5437e-04,
          9.7727e-01, 9.7818e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 416:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:16:41,217 [Process: 0] Synchronize training processes
2024-08-16 16:16:41,217 [Process: 0] Evaluating...
2024-08-16 16:16:41,219 [Process: 0] EPOCH 416:
2024-08-16 16:16:41,221 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0077, 0.0081, 0.0078,  ..., 0.0083, 0.0078, 0.0081],
         [0.0077, 0.0081, 0.0078,  ..., 0.0083, 0.0078, 0.0081],
         [0.0077, 0.0081, 0.0078,  ..., 0.0083, 0.0078, 0.0081],
         [0.9769, 0.9756, 0.9765,  ..., 0.9752, 0.9767, 0.9757]],
        [[0.0084, 0.0082, 0.0082,  ..., 0.0084, 0.0082, 0.0081],
         [0.0084, 0.0082, 0.0082,  ..., 0.0084, 0.0082, 0.0081],
         [0.0084, 0.0082, 0.0082,  ..., 0.0084, 0.0082, 0.0081],
         [0.9747, 0.9753, 0.9754,  ..., 0.9749, 0.9754, 0.9756]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0073, 0.0071,  ..., 0.0073, 0.0071, 0.0070],
         [0.0069, 0.0073, 0.0071,  ..., 0.0073, 0.0071, 0.0070],
         [0.0069, 0.0073, 0.0071,  ..., 0.0073, 0.0071, 0.0070],
         [0.9792, 0.9782, 0.9787,  ..., 0.9781, 0.9786, 0.9789]],
        [[0.0071, 0.0071, 0.0070,  ..., 0.0099, 0.0072, 0.0073],
         [0.0071, 0.0071, 0.0070,  ..., 0.0041, 0.0072, 0.0073],
         [0.0071, 0.0071, 0.0070,  ..., 0.9820, 0.0072, 0.0073],
         [0.9788, 0.9787, 0.9791,  ..., 0.0041, 0.9783, 0.9780]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 417:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:16:43,312 [Process: 0] Synchronize training processes
2024-08-16 16:16:43,313 [Process: 0] Evaluating...
2024-08-16 16:16:43,314 [Process: 0] EPOCH 417:
2024-08-16 16:16:43,316 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0082, 0.0081,  ..., 0.0085, 0.0080, 0.0080],
         [0.0082, 0.0082, 0.0081,  ..., 0.0085, 0.0080, 0.0080],
         [0.0082, 0.0082, 0.0081,  ..., 0.0085, 0.0080, 0.0080],
         [0.9755, 0.9754, 0.9756,  ..., 0.9744, 0.9760, 0.9761]],
        [[0.0083, 0.0082, 0.0083,  ..., 0.0081, 0.0085, 0.0083],
         [0.0083, 0.0082, 0.0083,  ..., 0.0081, 0.0085, 0.0083],
         [0.0083, 0.0082, 0.0083,  ..., 0.0081, 0.0085, 0.0083],
         [0.9750, 0.9754, 0.9752,  ..., 0.9756, 0.9744, 0.9750]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.1196e-03, 7.0132e-03, 7.0465e-03,  ..., 8.0595e-03,
          6.9700e-03, 6.6645e-03],
         [7.1196e-03, 7.0132e-03, 7.0465e-03,  ..., 8.0595e-03,
          6.9700e-03, 6.6645e-03],
         [7.1196e-03, 7.0132e-03, 7.0465e-03,  ..., 8.0595e-03,
          6.9700e-03, 6.6645e-03],
         [9.7864e-01, 9.7896e-01, 9.7886e-01,  ..., 9.7582e-01,
          9.7909e-01, 9.8001e-01]],
        [[6.9392e-03, 6.9479e-03, 6.8949e-03,  ..., 3.3700e-04,
          7.0076e-03, 7.0653e-03],
         [6.9392e-03, 6.9479e-03, 6.8949e-03,  ..., 3.3700e-04,
          7.0076e-03, 7.0653e-03],
         [6.9392e-03, 6.9479e-03, 6.8949e-03,  ..., 9.9899e-01,
          7.0076e-03, 7.0653e-03],
         [9.7918e-01, 9.7916e-01, 9.7932e-01,  ..., 3.3700e-04,
          9.7898e-01, 9.7880e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 418:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:16:45,403 [Process: 0] Synchronize training processes
2024-08-16 16:16:45,404 [Process: 0] Evaluating...
2024-08-16 16:16:45,406 [Process: 0] EPOCH 418:
2024-08-16 16:16:45,408 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0085, 0.0085,  ..., 0.0082, 0.0085, 0.0083],
         [0.0082, 0.0085, 0.0085,  ..., 0.0082, 0.0085, 0.0083],
         [0.0082, 0.0085, 0.0085,  ..., 0.0082, 0.0085, 0.0083],
         [0.9755, 0.9746, 0.9745,  ..., 0.9753, 0.9745, 0.9752]],
        [[0.0084, 0.0082, 0.0080,  ..., 0.0083, 0.0084, 0.0081],
         [0.0084, 0.0082, 0.0080,  ..., 0.0083, 0.0084, 0.0081],
         [0.0084, 0.0082, 0.0080,  ..., 0.0083, 0.0084, 0.0081],
         [0.9749, 0.9755, 0.9759,  ..., 0.9751, 0.9749, 0.9758]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.9438e-03, 6.9331e-03, 7.0390e-03,  ..., 8.3161e-03,
          6.8067e-03, 6.9913e-03],
         [6.9438e-03, 6.9331e-03, 7.0390e-03,  ..., 8.3161e-03,
          6.8067e-03, 6.9913e-03],
         [6.9438e-03, 6.9331e-03, 7.0390e-03,  ..., 8.3161e-03,
          6.8067e-03, 6.9913e-03],
         [9.7917e-01, 9.7920e-01, 9.7888e-01,  ..., 9.7505e-01,
          9.7958e-01, 9.7903e-01]],
        [[7.2010e-03, 6.9802e-03, 7.0915e-03,  ..., 9.6846e-05,
          6.9435e-03, 6.7425e-03],
         [7.2010e-03, 6.9802e-03, 7.0915e-03,  ..., 9.6846e-05,
          6.9435e-03, 6.7425e-03],
         [7.2010e-03, 6.9802e-03, 7.0915e-03,  ..., 9.9971e-01,
          6.9435e-03, 6.7425e-03],
         [9.7840e-01, 9.7906e-01, 9.7873e-01,  ..., 9.6846e-05,
          9.7917e-01, 9.7977e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 419:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:16:47,485 [Process: 0] Synchronize training processes
2024-08-16 16:16:47,485 [Process: 0] Evaluating...
2024-08-16 16:16:47,487 [Process: 0] EPOCH 419:
2024-08-16 16:16:47,489 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0085, 0.0084,  ..., 0.0082, 0.0086, 0.0082],
         [0.0083, 0.0085, 0.0084,  ..., 0.0082, 0.0086, 0.0082],
         [0.0083, 0.0085, 0.0084,  ..., 0.0082, 0.0086, 0.0082],
         [0.9752, 0.9746, 0.9749,  ..., 0.9753, 0.9743, 0.9753]],
        [[0.0086, 0.0084, 0.0084,  ..., 0.0085, 0.0086, 0.0085],
         [0.0086, 0.0084, 0.0084,  ..., 0.0085, 0.0086, 0.0085],
         [0.0086, 0.0084, 0.0084,  ..., 0.0085, 0.0086, 0.0085],
         [0.9742, 0.9749, 0.9747,  ..., 0.9746, 0.9743, 0.9746]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0071, 0.0070,  ..., 0.0073, 0.0072, 0.0069],
         [0.0073, 0.0071, 0.0070,  ..., 0.0073, 0.0072, 0.0069],
         [0.0073, 0.0071, 0.0070,  ..., 0.0073, 0.0072, 0.0069],
         [0.9782, 0.9787, 0.9791,  ..., 0.9782, 0.9785, 0.9794]],
        [[0.0071, 0.0069, 0.0071,  ..., 0.0034, 0.0070, 0.0072],
         [0.0071, 0.0069, 0.0071,  ..., 0.0034, 0.0070, 0.0072],
         [0.0071, 0.0069, 0.0071,  ..., 0.9897, 0.0070, 0.0072],
         [0.9786, 0.9793, 0.9786,  ..., 0.0034, 0.9791, 0.9785]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 420:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:16:49,568 [Process: 0] Synchronize training processes
2024-08-16 16:16:49,568 [Process: 0] Evaluating...
2024-08-16 16:16:49,570 [Process: 0] EPOCH 420:
2024-08-16 16:16:49,572 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0084, 0.0085,  ..., 0.0085, 0.0086, 0.0085],
         [0.0084, 0.0084, 0.0085,  ..., 0.0085, 0.0086, 0.0085],
         [0.0084, 0.0084, 0.0085,  ..., 0.0085, 0.0086, 0.0085],
         [0.9749, 0.9748, 0.9744,  ..., 0.9745, 0.9743, 0.9745]],
        [[0.0086, 0.0085, 0.0084,  ..., 0.0086, 0.0085, 0.0085],
         [0.0086, 0.0085, 0.0084,  ..., 0.0086, 0.0085, 0.0085],
         [0.0086, 0.0085, 0.0084,  ..., 0.0086, 0.0085, 0.0085],
         [0.9742, 0.9745, 0.9749,  ..., 0.9741, 0.9745, 0.9745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0071, 0.0070, 0.0071,  ..., 0.0075, 0.0071, 0.0070],
         [0.0071, 0.0070, 0.0071,  ..., 0.0075, 0.0071, 0.0070],
         [0.0071, 0.0070, 0.0071,  ..., 0.0075, 0.0071, 0.0070],
         [0.9787, 0.9789, 0.9787,  ..., 0.9776, 0.9788, 0.9791]],
        [[0.0067, 0.0068, 0.0071,  ..., 0.0044, 0.0069, 0.0069],
         [0.0067, 0.0068, 0.0071,  ..., 0.0044, 0.0069, 0.0069],
         [0.0067, 0.0068, 0.0071,  ..., 0.9868, 0.0069, 0.0069],
         [0.9799, 0.9797, 0.9788,  ..., 0.0044, 0.9794, 0.9792]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 421:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:16:51,645 [Process: 0] Synchronize training processes
2024-08-16 16:16:51,645 [Process: 0] Evaluating...
2024-08-16 16:16:51,647 [Process: 0] EPOCH 421:
2024-08-16 16:16:51,649 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0081, 0.0083,  ..., 0.0085, 0.0083, 0.0086],
         [0.0082, 0.0081, 0.0083,  ..., 0.0085, 0.0083, 0.0086],
         [0.0082, 0.0081, 0.0083,  ..., 0.0085, 0.0083, 0.0086],
         [0.9754, 0.9757, 0.9752,  ..., 0.9746, 0.9751, 0.9743]],
        [[0.0081, 0.0081, 0.0084,  ..., 0.0082, 0.0084, 0.0083],
         [0.0081, 0.0081, 0.0084,  ..., 0.0082, 0.0084, 0.0083],
         [0.0081, 0.0081, 0.0084,  ..., 0.0082, 0.0084, 0.0083],
         [0.9757, 0.9757, 0.9747,  ..., 0.9754, 0.9748, 0.9752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.0479e-03, 6.9821e-03, 7.2267e-03,  ..., 7.7084e-03,
          6.7069e-03, 7.1707e-03],
         [7.0479e-03, 6.9821e-03, 7.2267e-03,  ..., 7.7084e-03,
          6.7069e-03, 7.1707e-03],
         [7.0479e-03, 6.9821e-03, 7.2267e-03,  ..., 7.7084e-03,
          6.7069e-03, 7.1707e-03],
         [9.7886e-01, 9.7905e-01, 9.7832e-01,  ..., 9.7687e-01,
          9.7988e-01, 9.7849e-01]],
        [[6.9243e-03, 7.0340e-03, 6.9012e-03,  ..., 2.8495e-04,
          6.8310e-03, 6.9674e-03],
         [6.9243e-03, 7.0340e-03, 6.9012e-03,  ..., 2.8495e-04,
          6.8310e-03, 6.9674e-03],
         [6.9243e-03, 7.0340e-03, 6.9012e-03,  ..., 9.9915e-01,
          6.8310e-03, 6.9674e-03],
         [9.7923e-01, 9.7890e-01, 9.7930e-01,  ..., 2.8495e-04,
          9.7951e-01, 9.7910e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:53,732 [Process: 0] Synchronize training processes
2024-08-16 16:16:53,732 [Process: 0] Evaluating...
2024-08-16 16:16:53,740 [Process: 0] EPOCH 422:
2024-08-16 16:16:53,742 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 422:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0084, 0.0084,  ..., 0.0082, 0.0083, 0.0083],
         [0.0084, 0.0084, 0.0084,  ..., 0.0082, 0.0083, 0.0083],
         [0.0084, 0.0084, 0.0084,  ..., 0.0082, 0.0083, 0.0083],
         [0.9748, 0.9749, 0.9749,  ..., 0.9755, 0.9751, 0.9751]],
        [[0.0084, 0.0083, 0.0083,  ..., 0.0082, 0.0083, 0.0083],
         [0.0084, 0.0083, 0.0083,  ..., 0.0082, 0.0083, 0.0083],
         [0.0084, 0.0083, 0.0083,  ..., 0.0082, 0.0083, 0.0083],
         [0.9749, 0.9750, 0.9752,  ..., 0.9753, 0.9752, 0.9751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.2774e-03, 7.0977e-03, 6.9677e-03,  ..., 7.1306e-03,
          7.0908e-03, 6.9616e-03],
         [7.2774e-03, 7.0977e-03, 6.9677e-03,  ..., 7.1306e-03,
          7.0908e-03, 6.9616e-03],
         [7.2774e-03, 7.0977e-03, 6.9677e-03,  ..., 7.1306e-03,
          7.0908e-03, 6.9616e-03],
         [9.7817e-01, 9.7871e-01, 9.7910e-01,  ..., 9.7861e-01,
          9.7873e-01, 9.7912e-01]],
        [[6.8660e-03, 6.9883e-03, 6.9750e-03,  ..., 3.2704e-04,
          7.1242e-03, 6.7899e-03],
         [6.8660e-03, 6.9883e-03, 6.9750e-03,  ..., 3.2704e-04,
          7.1242e-03, 6.7899e-03],
         [6.8660e-03, 6.9883e-03, 6.9750e-03,  ..., 9.9902e-01,
          7.1242e-03, 6.7899e-03],
         [9.7940e-01, 9.7904e-01, 9.7908e-01,  ..., 3.2704e-04,
          9.7863e-01, 9.7963e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:16:55,836 [Process: 0] Synchronize training processes
2024-08-16 16:16:55,837 [Process: 0] Evaluating...
2024-08-16 16:16:55,838 [Process: 0] EPOCH 423:
2024-08-16 16:16:55,840 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 423:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0083, 0.0082,  ..., 0.0082, 0.0086, 0.0086],
         [0.0084, 0.0083, 0.0082,  ..., 0.0082, 0.0086, 0.0086],
         [0.0084, 0.0083, 0.0082,  ..., 0.0082, 0.0086, 0.0086],
         [0.9747, 0.9750, 0.9754,  ..., 0.9753, 0.9743, 0.9742]],
        [[0.0084, 0.0082, 0.0084,  ..., 0.0083, 0.0086, 0.0086],
         [0.0084, 0.0082, 0.0084,  ..., 0.0083, 0.0086, 0.0086],
         [0.0084, 0.0082, 0.0084,  ..., 0.0083, 0.0086, 0.0086],
         [0.9747, 0.9754, 0.9749,  ..., 0.9751, 0.9743, 0.9743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:16:57,920 [Process: 0] Synchronize training processes
2024-08-16 16:16:57,920 [Process: 0] Evaluating...
2024-08-16 16:16:57,922 [Process: 0] EPOCH 424:
2024-08-16 16:16:57,924 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0071, 0.0072,  ..., 0.0072, 0.0071, 0.0070],
         [0.0069, 0.0071, 0.0072,  ..., 0.0072, 0.0071, 0.0070],
         [0.0069, 0.0071, 0.0072,  ..., 0.0072, 0.0071, 0.0070],
         [0.9793, 0.9788, 0.9785,  ..., 0.9784, 0.9787, 0.9791]],
        [[0.0070, 0.0071, 0.0069,  ..., 0.0029, 0.0071, 0.0071],
         [0.0070, 0.0071, 0.0069,  ..., 0.0029, 0.0071, 0.0071],
         [0.0070, 0.0071, 0.0069,  ..., 0.9913, 0.0071, 0.0071],
         [0.9789, 0.9787, 0.9793,  ..., 0.0029, 0.9787, 0.9786]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 424:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0082, 0.0084,  ..., 0.0083, 0.0083, 0.0083],
         [0.0083, 0.0082, 0.0084,  ..., 0.0083, 0.0083, 0.0083],
         [0.0083, 0.0082, 0.0084,  ..., 0.0083, 0.0083, 0.0083],
         [0.9752, 0.9753, 0.9748,  ..., 0.9752, 0.9750, 0.9750]],
        [[0.0082, 0.0084, 0.0083,  ..., 0.0083, 0.0084, 0.0084],
         [0.0082, 0.0084, 0.0083,  ..., 0.0083, 0.0084, 0.0084],
         [0.0082, 0.0084, 0.0083,  ..., 0.0083, 0.0084, 0.0084],
         [0.9753, 0.9748, 0.9750,  ..., 0.9752, 0.9749, 0.9747]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 16:16:59,992 [Process: 0] Synchronize training processes
2024-08-16 16:16:59,992 [Process: 0] Evaluating...
2024-08-16 16:16:59,994 [Process: 0] EPOCH 425:
2024-08-16 16:16:59,996 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8651e-03, 6.9502e-03, 6.9904e-03,  ..., 7.2956e-03,
          7.1407e-03, 7.1118e-03],
         [6.8651e-03, 6.9502e-03, 6.9904e-03,  ..., 7.2956e-03,
          7.1407e-03, 7.1118e-03],
         [6.8651e-03, 6.9502e-03, 6.9904e-03,  ..., 7.2956e-03,
          7.1407e-03, 7.1118e-03],
         [9.7940e-01, 9.7915e-01, 9.7903e-01,  ..., 9.7811e-01,
          9.7858e-01, 9.7866e-01]],
        [[6.9994e-03, 6.8004e-03, 6.6164e-03,  ..., 2.5760e-04,
          6.6847e-03, 7.0218e-03],
         [6.9994e-03, 6.8004e-03, 6.6164e-03,  ..., 2.5760e-04,
          6.6847e-03, 7.0218e-03],
         [6.9994e-03, 6.8004e-03, 6.6164e-03,  ..., 9.9923e-01,
          6.6847e-03, 7.0218e-03],
         [9.7900e-01, 9.7960e-01, 9.8015e-01,  ..., 2.5760e-04,
          9.7995e-01, 9.7893e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 425:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0084, 0.0083,  ..., 0.0083, 0.0083, 0.0081],
         [0.0083, 0.0084, 0.0083,  ..., 0.0083, 0.0083, 0.0081],
         [0.0083, 0.0084, 0.0083,  ..., 0.0083, 0.0083, 0.0081],
         [0.9750, 0.9749, 0.9751,  ..., 0.9751, 0.9751, 0.9757]],
        [[0.0083, 0.0083, 0.0084,  ..., 0.0084, 0.0084, 0.0084],
         [0.0083, 0.0083, 0.0084,  ..., 0.0084, 0.0084, 0.0084],
         [0.0083, 0.0083, 0.0084,  ..., 0.0084, 0.0084, 0.0084],
         [0.9752, 0.9752, 0.9749,  ..., 0.9749, 0.9749, 0.9748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:02,075 [Process: 0] Synchronize training processes
2024-08-16 16:17:02,075 [Process: 0] Evaluating...
2024-08-16 16:17:02,077 [Process: 0] EPOCH 426:
2024-08-16 16:17:02,079 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.0600e-03, 7.0474e-03, 6.7909e-03,  ..., 6.9863e-03,
          7.0154e-03, 6.9859e-03],
         [7.0600e-03, 7.0474e-03, 6.7909e-03,  ..., 6.9863e-03,
          7.0154e-03, 6.9859e-03],
         [7.0600e-03, 7.0474e-03, 6.7909e-03,  ..., 6.9863e-03,
          7.0154e-03, 6.9859e-03],
         [9.7882e-01, 9.7886e-01, 9.7963e-01,  ..., 9.7904e-01,
          9.7895e-01, 9.7904e-01]],
        [[6.9772e-03, 7.0398e-03, 6.8229e-03,  ..., 8.3087e-06,
          6.8177e-03, 6.8327e-03],
         [6.9772e-03, 7.0398e-03, 6.8229e-03,  ..., 8.3087e-06,
          6.8177e-03, 6.8327e-03],
         [6.9772e-03, 7.0398e-03, 6.8229e-03,  ..., 9.9998e-01,
          6.8177e-03, 6.8327e-03],
         [9.7907e-01, 9.7888e-01, 9.7953e-01,  ..., 8.3087e-06,
          9.7955e-01, 9.7950e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 426:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0082, 0.0083,  ..., 0.0082, 0.0081, 0.0082],
         [0.0083, 0.0082, 0.0083,  ..., 0.0082, 0.0081, 0.0082],
         [0.0083, 0.0082, 0.0083,  ..., 0.0082, 0.0081, 0.0082],
         [0.9752, 0.9753, 0.9752,  ..., 0.9754, 0.9757, 0.9753]],
        [[0.0083, 0.0083, 0.0084,  ..., 0.0081, 0.0082, 0.0082],
         [0.0083, 0.0083, 0.0084,  ..., 0.0081, 0.0082, 0.0082],
         [0.0083, 0.0083, 0.0084,  ..., 0.0081, 0.0082, 0.0082],
         [0.9751, 0.9750, 0.9747,  ..., 0.9757, 0.9755, 0.9753]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:04,155 [Process: 0] Synchronize training processes
2024-08-16 16:17:04,156 [Process: 0] Evaluating...
2024-08-16 16:17:04,158 [Process: 0] EPOCH 427:
2024-08-16 16:17:04,160 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0069, 0.0068,  ..., 0.0068, 0.0068, 0.0068],
         [0.0070, 0.0069, 0.0068,  ..., 0.0068, 0.0068, 0.0068],
         [0.0070, 0.0069, 0.0068,  ..., 0.0068, 0.0068, 0.0068],
         [0.9790, 0.9794, 0.9795,  ..., 0.9796, 0.9796, 0.9796]],
        [[0.0069, 0.0070, 0.0067,  ..., 0.0014, 0.0069, 0.0069],
         [0.0069, 0.0070, 0.0067,  ..., 0.0014, 0.0069, 0.0069],
         [0.0069, 0.0070, 0.0067,  ..., 0.9957, 0.0069, 0.0069],
         [0.9794, 0.9791, 0.9799,  ..., 0.0014, 0.9794, 0.9794]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 427:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0082, 0.0082,  ..., 0.0083, 0.0081, 0.0081],
         [0.0083, 0.0082, 0.0082,  ..., 0.0083, 0.0081, 0.0081],
         [0.0083, 0.0082, 0.0082,  ..., 0.0083, 0.0081, 0.0081],
         [0.9751, 0.9754, 0.9755,  ..., 0.9752, 0.9756, 0.9756]],
        [[0.0082, 0.0082, 0.0084,  ..., 0.0082, 0.0083, 0.0083],
         [0.0082, 0.0082, 0.0084,  ..., 0.0082, 0.0083, 0.0083],
         [0.0082, 0.0082, 0.0084,  ..., 0.0082, 0.0083, 0.0083],
         [0.9755, 0.9755, 0.9749,  ..., 0.9753, 0.9750, 0.9752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:06,272 [Process: 0] Synchronize training processes
2024-08-16 16:17:06,272 [Process: 0] Evaluating...
2024-08-16 16:17:06,274 [Process: 0] EPOCH 428:
2024-08-16 16:17:06,277 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.9170e-03, 6.9638e-03, 6.7809e-03,  ..., 6.8530e-03,
          6.8015e-03, 6.6722e-03],
         [6.9170e-03, 6.9638e-03, 6.7809e-03,  ..., 6.8530e-03,
          6.8015e-03, 6.6722e-03],
         [6.9170e-03, 6.9638e-03, 6.7809e-03,  ..., 6.8530e-03,
          6.8015e-03, 6.6722e-03],
         [9.7925e-01, 9.7911e-01, 9.7966e-01,  ..., 9.7944e-01,
          9.7960e-01, 9.7998e-01]],
        [[6.7785e-03, 6.7897e-03, 6.9360e-03,  ..., 1.1982e-04,
          6.9640e-03, 7.1194e-03],
         [6.7785e-03, 6.7897e-03, 6.9360e-03,  ..., 1.1982e-04,
          6.9640e-03, 7.1194e-03],
         [6.7785e-03, 6.7897e-03, 6.9360e-03,  ..., 9.9964e-01,
          6.9640e-03, 7.1194e-03],
         [9.7966e-01, 9.7963e-01, 9.7919e-01,  ..., 1.1982e-04,
          9.7911e-01, 9.7864e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 428:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0081, 0.0082,  ..., 0.0080, 0.0082, 0.0080],
         [0.0080, 0.0081, 0.0082,  ..., 0.0080, 0.0082, 0.0080],
         [0.0080, 0.0081, 0.0082,  ..., 0.0080, 0.0082, 0.0080],
         [0.9759, 0.9756, 0.9755,  ..., 0.9760, 0.9754, 0.9759]],
        [[0.0080, 0.0080, 0.0081,  ..., 0.0082, 0.0082, 0.0081],
         [0.0080, 0.0080, 0.0081,  ..., 0.0082, 0.0082, 0.0081],
         [0.0080, 0.0080, 0.0081,  ..., 0.0082, 0.0082, 0.0081],
         [0.9761, 0.9759, 0.9757,  ..., 0.9754, 0.9753, 0.9756]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:08,364 [Process: 0] Synchronize training processes
2024-08-16 16:17:08,364 [Process: 0] Evaluating...
2024-08-16 16:17:08,366 [Process: 0] EPOCH 429:
2024-08-16 16:17:08,368 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7969e-03, 6.9167e-03, 7.0959e-03,  ..., 6.7856e-03,
          6.7820e-03, 6.8330e-03],
         [6.7969e-03, 6.9167e-03, 7.0959e-03,  ..., 6.7856e-03,
          6.7820e-03, 6.8330e-03],
         [6.7969e-03, 6.9167e-03, 7.0959e-03,  ..., 6.7856e-03,
          6.7820e-03, 6.8330e-03],
         [9.7961e-01, 9.7925e-01, 9.7871e-01,  ..., 9.7964e-01,
          9.7965e-01, 9.7950e-01]],
        [[6.9304e-03, 6.7728e-03, 6.6493e-03,  ..., 4.6086e-05,
          6.9015e-03, 6.8266e-03],
         [6.9304e-03, 6.7728e-03, 6.6493e-03,  ..., 4.6086e-05,
          6.9015e-03, 6.8266e-03],
         [6.9304e-03, 6.7728e-03, 6.6493e-03,  ..., 9.9986e-01,
          6.9015e-03, 6.8266e-03],
         [9.7921e-01, 9.7968e-01, 9.8005e-01,  ..., 4.6086e-05,
          9.7930e-01, 9.7952e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 429:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0079, 0.0079,  ..., 0.0078, 0.0080, 0.0078],
         [0.0081, 0.0079, 0.0079,  ..., 0.0078, 0.0080, 0.0078],
         [0.0081, 0.0079, 0.0079,  ..., 0.0078, 0.0080, 0.0078],
         [0.9757, 0.9764, 0.9763,  ..., 0.9765, 0.9761, 0.9767]],
        [[0.0078, 0.0081, 0.0079,  ..., 0.0080, 0.0081, 0.0080],
         [0.0078, 0.0081, 0.0079,  ..., 0.0080, 0.0081, 0.0080],
         [0.0078, 0.0081, 0.0079,  ..., 0.0080, 0.0081, 0.0080],
         [0.9765, 0.9756, 0.9762,  ..., 0.9761, 0.9757, 0.9759]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:10,443 [Process: 0] Synchronize training processes
2024-08-16 16:17:10,443 [Process: 0] Evaluating...
2024-08-16 16:17:10,445 [Process: 0] EPOCH 430:
2024-08-16 16:17:10,447 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8105e-03, 6.7117e-03, 6.6244e-03,  ..., 7.0932e-03,
          6.8339e-03, 6.6852e-03],
         [6.8105e-03, 6.7117e-03, 6.6244e-03,  ..., 7.0932e-03,
          6.8339e-03, 6.6852e-03],
         [6.8105e-03, 6.7117e-03, 6.6244e-03,  ..., 7.0932e-03,
          6.8339e-03, 6.6852e-03],
         [9.7957e-01, 9.7986e-01, 9.8013e-01,  ..., 9.7872e-01,
          9.7950e-01, 9.7994e-01]],
        [[6.6432e-03, 6.6959e-03, 6.8003e-03,  ..., 1.1306e-04,
          6.6382e-03, 6.5480e-03],
         [6.6432e-03, 6.6959e-03, 6.8003e-03,  ..., 1.1306e-04,
          6.6382e-03, 6.5480e-03],
         [6.6432e-03, 6.6959e-03, 6.8003e-03,  ..., 9.9966e-01,
          6.6382e-03, 6.5480e-03],
         [9.8007e-01, 9.7991e-01, 9.7960e-01,  ..., 1.1306e-04,
          9.8009e-01, 9.8036e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 430:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0081, 0.0081,  ..., 0.0081, 0.0081, 0.0081],
         [0.0082, 0.0081, 0.0081,  ..., 0.0081, 0.0081, 0.0081],
         [0.0082, 0.0081, 0.0081,  ..., 0.0081, 0.0081, 0.0081],
         [0.9755, 0.9758, 0.9756,  ..., 0.9757, 0.9758, 0.9756]],
        [[0.0081, 0.0081, 0.0081,  ..., 0.0079, 0.0081, 0.0080],
         [0.0081, 0.0081, 0.0081,  ..., 0.0079, 0.0081, 0.0080],
         [0.0081, 0.0081, 0.0081,  ..., 0.0079, 0.0081, 0.0080],
         [0.9756, 0.9756, 0.9757,  ..., 0.9763, 0.9756, 0.9759]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:12,518 [Process: 0] Synchronize training processes
2024-08-16 16:17:12,519 [Process: 0] Evaluating...
2024-08-16 16:17:12,520 [Process: 0] EPOCH 431:
2024-08-16 16:17:12,522 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7522e-03, 6.7318e-03, 6.9308e-03,  ..., 7.7231e-03,
          7.0015e-03, 6.9249e-03],
         [6.7522e-03, 6.7318e-03, 6.9308e-03,  ..., 7.7231e-03,
          7.0015e-03, 6.9249e-03],
         [6.7522e-03, 6.7318e-03, 6.9308e-03,  ..., 7.7231e-03,
          7.0015e-03, 6.9249e-03],
         [9.7974e-01, 9.7980e-01, 9.7921e-01,  ..., 9.7683e-01,
          9.7900e-01, 9.7923e-01]],
        [[6.7403e-03, 6.7822e-03, 6.8599e-03,  ..., 4.4196e-05,
          6.9461e-03, 6.5693e-03],
         [6.7403e-03, 6.7822e-03, 6.8599e-03,  ..., 4.4196e-05,
          6.9461e-03, 6.5693e-03],
         [6.7403e-03, 6.7822e-03, 6.8599e-03,  ..., 9.9987e-01,
          6.9461e-03, 6.5693e-03],
         [9.7978e-01, 9.7965e-01, 9.7942e-01,  ..., 4.4196e-05,
          9.7916e-01, 9.8029e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 431:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0082, 0.0081,  ..., 0.0080, 0.0080, 0.0082],
         [0.0081, 0.0082, 0.0081,  ..., 0.0080, 0.0080, 0.0082],
         [0.0081, 0.0082, 0.0081,  ..., 0.0080, 0.0080, 0.0082],
         [0.9758, 0.9754, 0.9756,  ..., 0.9760, 0.9761, 0.9755]],
        [[0.0082, 0.0080, 0.0081,  ..., 0.0078, 0.0081, 0.0081],
         [0.0082, 0.0080, 0.0081,  ..., 0.0078, 0.0081, 0.0081],
         [0.0082, 0.0080, 0.0081,  ..., 0.0078, 0.0081, 0.0081],
         [0.9755, 0.9760, 0.9758,  ..., 0.9765, 0.9758, 0.9756]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:14,577 [Process: 0] Synchronize training processes
2024-08-16 16:17:14,577 [Process: 0] Evaluating...
2024-08-16 16:17:14,585 [Process: 0] EPOCH 432:
2024-08-16 16:17:14,587 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7709e-03, 6.6829e-03, 6.8347e-03,  ..., 7.3573e-03,
          6.7734e-03, 6.7658e-03],
         [6.7709e-03, 6.6829e-03, 6.8347e-03,  ..., 7.3573e-03,
          6.7734e-03, 6.7658e-03],
         [6.7709e-03, 6.6829e-03, 6.8347e-03,  ..., 7.3573e-03,
          6.7734e-03, 6.7658e-03],
         [9.7969e-01, 9.7995e-01, 9.7950e-01,  ..., 9.7793e-01,
          9.7968e-01, 9.7970e-01]],
        [[6.7499e-03, 6.6657e-03, 6.5740e-03,  ..., 1.2150e-04,
          6.8166e-03, 6.8983e-03],
         [6.7499e-03, 6.6657e-03, 6.5740e-03,  ..., 1.2150e-04,
          6.8166e-03, 6.8983e-03],
         [6.7499e-03, 6.6657e-03, 6.5740e-03,  ..., 9.9964e-01,
          6.8166e-03, 6.8983e-03],
         [9.7975e-01, 9.8000e-01, 9.8028e-01,  ..., 1.2150e-04,
          9.7955e-01, 9.7931e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 432:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0080, 0.0080,  ..., 0.0080, 0.0080, 0.0082],
         [0.0081, 0.0080, 0.0080,  ..., 0.0080, 0.0080, 0.0082],
         [0.0081, 0.0080, 0.0080,  ..., 0.0080, 0.0080, 0.0082],
         [0.9756, 0.9760, 0.9759,  ..., 0.9761, 0.9759, 0.9755]],
        [[0.0080, 0.0082, 0.0082,  ..., 0.0079, 0.0079, 0.0082],
         [0.0080, 0.0082, 0.0082,  ..., 0.0079, 0.0079, 0.0082],
         [0.0080, 0.0082, 0.0082,  ..., 0.0079, 0.0079, 0.0082],
         [0.9759, 0.9755, 0.9755,  ..., 0.9764, 0.9762, 0.9753]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:16,670 [Process: 0] Synchronize training processes
2024-08-16 16:17:16,671 [Process: 0] Evaluating...
2024-08-16 16:17:16,673 [Process: 0] EPOCH 433:
2024-08-16 16:17:16,675 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2992e-03, 6.8054e-03, 6.4791e-03,  ..., 6.8002e-03,
          6.5472e-03, 6.8483e-03],
         [6.2992e-03, 6.8054e-03, 6.4791e-03,  ..., 6.8002e-03,
          6.5472e-03, 6.8483e-03],
         [6.2992e-03, 6.8054e-03, 6.4791e-03,  ..., 6.8002e-03,
          6.5472e-03, 6.8483e-03],
         [9.8110e-01, 9.7958e-01, 9.8056e-01,  ..., 9.7960e-01,
          9.8036e-01, 9.7946e-01]],
        [[6.7667e-03, 6.5922e-03, 6.7365e-03,  ..., 8.4177e-06,
          6.6944e-03, 6.7012e-03],
         [6.7667e-03, 6.5922e-03, 6.7365e-03,  ..., 8.4177e-06,
          6.6944e-03, 6.7012e-03],
         [6.7667e-03, 6.5922e-03, 6.7365e-03,  ..., 9.9997e-01,
          6.6944e-03, 6.7012e-03],
         [9.7970e-01, 9.8022e-01, 9.7979e-01,  ..., 8.4177e-06,
          9.7992e-01, 9.7990e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 433:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0079, 0.0078, 0.0077,  ..., 0.0079, 0.0078, 0.0078],
         [0.0079, 0.0078, 0.0077,  ..., 0.0079, 0.0078, 0.0078],
         [0.0079, 0.0078, 0.0077,  ..., 0.0079, 0.0078, 0.0078],
         [0.9763, 0.9765, 0.9768,  ..., 0.9764, 0.9766, 0.9766]],
        [[0.0076, 0.0080, 0.0079,  ..., 0.0080, 0.0081, 0.0078],
         [0.0076, 0.0080, 0.0079,  ..., 0.0080, 0.0081, 0.0078],
         [0.0076, 0.0080, 0.0079,  ..., 0.0080, 0.0081, 0.0078],
         [0.9771, 0.9759, 0.9764,  ..., 0.9761, 0.9757, 0.9766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:18,768 [Process: 0] Synchronize training processes
2024-08-16 16:17:18,768 [Process: 0] Evaluating...
2024-08-16 16:17:18,770 [Process: 0] EPOCH 434:
2024-08-16 16:17:18,772 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.4947e-03, 6.4741e-03, 6.3998e-03,  ..., 7.1389e-03,
          6.6338e-03, 6.7433e-03],
         [6.4947e-03, 6.4741e-03, 6.3998e-03,  ..., 7.1389e-03,
          6.6338e-03, 6.7433e-03],
         [6.4947e-03, 6.4741e-03, 6.3998e-03,  ..., 7.1389e-03,
          6.6338e-03, 6.7433e-03],
         [9.8052e-01, 9.8058e-01, 9.8080e-01,  ..., 9.7858e-01,
          9.8010e-01, 9.7977e-01]],
        [[6.4321e-03, 6.6041e-03, 6.5091e-03,  ..., 2.1074e-04,
          6.5269e-03, 6.7705e-03],
         [6.4321e-03, 6.6041e-03, 6.5091e-03,  ..., 2.1074e-04,
          6.5269e-03, 6.7705e-03],
         [6.4321e-03, 6.6041e-03, 6.5091e-03,  ..., 9.9937e-01,
          6.5269e-03, 6.7705e-03],
         [9.8070e-01, 9.8019e-01, 9.8047e-01,  ..., 2.1074e-04,
          9.8042e-01, 9.7969e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 434:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0080, 0.0077,  ..., 0.0077, 0.0079, 0.0078],
         [0.0078, 0.0080, 0.0077,  ..., 0.0077, 0.0079, 0.0078],
         [0.0078, 0.0080, 0.0077,  ..., 0.0077, 0.0079, 0.0078],
         [0.9767, 0.9760, 0.9769,  ..., 0.9768, 0.9762, 0.9765]],
        [[0.0078, 0.0078, 0.0080,  ..., 0.0078, 0.0079, 0.0079],
         [0.0078, 0.0078, 0.0080,  ..., 0.0078, 0.0079, 0.0079],
         [0.0078, 0.0078, 0.0080,  ..., 0.0078, 0.0079, 0.0079],
         [0.9765, 0.9767, 0.9761,  ..., 0.9766, 0.9764, 0.9764]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:20,849 [Process: 0] Synchronize training processes
2024-08-16 16:17:20,849 [Process: 0] Evaluating...
2024-08-16 16:17:20,851 [Process: 0] EPOCH 435:
2024-08-16 16:17:20,853 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6165e-03, 6.3996e-03, 6.6035e-03,  ..., 6.5608e-03,
          6.2696e-03, 6.5108e-03],
         [6.6165e-03, 6.3996e-03, 6.6035e-03,  ..., 6.5608e-03,
          6.2696e-03, 6.5108e-03],
         [6.6165e-03, 6.3996e-03, 6.6035e-03,  ..., 6.5608e-03,
          6.2696e-03, 6.5108e-03],
         [9.8015e-01, 9.8080e-01, 9.8019e-01,  ..., 9.8032e-01,
          9.8119e-01, 9.8047e-01]],
        [[6.6030e-03, 6.8061e-03, 6.4986e-03,  ..., 8.3490e-05,
          6.6820e-03, 6.5797e-03],
         [6.6030e-03, 6.8061e-03, 6.4986e-03,  ..., 8.3490e-05,
          6.6820e-03, 6.5797e-03],
         [6.6030e-03, 6.8061e-03, 6.4986e-03,  ..., 9.9975e-01,
          6.6820e-03, 6.5797e-03],
         [9.8019e-01, 9.7958e-01, 9.8050e-01,  ..., 8.3490e-05,
          9.7995e-01, 9.8026e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 435:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0079, 0.0079, 0.0079,  ..., 0.0077, 0.0077, 0.0079],
         [0.0079, 0.0079, 0.0079,  ..., 0.0077, 0.0077, 0.0079],
         [0.0079, 0.0079, 0.0079,  ..., 0.0077, 0.0077, 0.0079],
         [0.9764, 0.9762, 0.9764,  ..., 0.9769, 0.9770, 0.9763]],
        [[0.0079, 0.0078, 0.0080,  ..., 0.0081, 0.0079, 0.0079],
         [0.0079, 0.0078, 0.0080,  ..., 0.0081, 0.0079, 0.0079],
         [0.0079, 0.0078, 0.0080,  ..., 0.0081, 0.0079, 0.0079],
         [0.9764, 0.9767, 0.9761,  ..., 0.9758, 0.9762, 0.9763]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:22,937 [Process: 0] Synchronize training processes
2024-08-16 16:17:22,937 [Process: 0] Evaluating...
2024-08-16 16:17:22,939 [Process: 0] EPOCH 436:
2024-08-16 16:17:22,941 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0063, 0.0065, 0.0064,  ..., 0.0070, 0.0063, 0.0066],
         [0.0063, 0.0065, 0.0064,  ..., 0.0070, 0.0063, 0.0066],
         [0.0063, 0.0065, 0.0064,  ..., 0.0070, 0.0063, 0.0066],
         [0.9810, 0.9804, 0.9807,  ..., 0.9791, 0.9811, 0.9801]],
        [[0.0067, 0.0064, 0.0065,  ..., 0.0017, 0.0065, 0.0070],
         [0.0067, 0.0064, 0.0065,  ..., 0.0014, 0.0065, 0.0070],
         [0.0067, 0.0064, 0.0065,  ..., 0.9956, 0.0065, 0.0070],
         [0.9800, 0.9809, 0.9806,  ..., 0.0014, 0.9806, 0.9791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 436:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0076, 0.0077,  ..., 0.0076, 0.0075, 0.0074],
         [0.0078, 0.0076, 0.0077,  ..., 0.0076, 0.0075, 0.0074],
         [0.0078, 0.0076, 0.0077,  ..., 0.0076, 0.0075, 0.0074],
         [0.9766, 0.9772, 0.9769,  ..., 0.9771, 0.9774, 0.9778]],
        [[0.0077, 0.0076, 0.0078,  ..., 0.0075, 0.0077, 0.0075],
         [0.0077, 0.0076, 0.0078,  ..., 0.0075, 0.0077, 0.0075],
         [0.0077, 0.0076, 0.0078,  ..., 0.0075, 0.0077, 0.0075],
         [0.9768, 0.9773, 0.9767,  ..., 0.9775, 0.9770, 0.9775]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7795e-03, 6.6010e-03, 6.5792e-03,  ..., 6.8515e-03,
          6.5486e-03, 6.6955e-03],
         [6.7795e-03, 6.6010e-03, 6.5792e-03,  ..., 6.8515e-03,
          6.5486e-03, 6.6955e-03],
         [6.7795e-03, 6.6010e-03, 6.5792e-03,  ..., 6.8515e-03,
          6.5486e-03, 6.6955e-03],
         [9.7966e-01, 9.8020e-01, 9.8026e-01,  ..., 9.7945e-01,
          9.8035e-01, 9.7991e-01]],
        [[6.4944e-03, 6.5558e-03, 6.6341e-03,  ..., 5.1316e-04,
          6.5190e-03, 6.6585e-03],
         [6.4944e-03, 6.5558e-03, 6.6341e-03,  ..., 5.1316e-04,
          6.5190e-03, 6.6585e-03],
         [6.4944e-03, 6.5558e-03, 6.6341e-03,  ..., 9.9846e-01,
          6.5190e-03, 6.6585e-03],
         [9.8052e-01, 9.8033e-01, 9.8010e-01,  ..., 5.1316e-04,
          9.8044e-01, 9.8002e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 437:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:17:25,017 [Process: 0] Synchronize training processes
2024-08-16 16:17:25,018 [Process: 0] Evaluating...
2024-08-16 16:17:25,020 [Process: 0] EPOCH 437:
2024-08-16 16:17:25,022 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0077, 0.0081, 0.0078,  ..., 0.0078, 0.0078, 0.0077],
         [0.0077, 0.0081, 0.0078,  ..., 0.0078, 0.0078, 0.0077],
         [0.0077, 0.0081, 0.0078,  ..., 0.0078, 0.0078, 0.0077],
         [0.9769, 0.9757, 0.9766,  ..., 0.9766, 0.9765, 0.9770]],
        [[0.0078, 0.0077, 0.0077,  ..., 0.0078, 0.0078, 0.0078],
         [0.0078, 0.0077, 0.0077,  ..., 0.0078, 0.0078, 0.0078],
         [0.0078, 0.0077, 0.0077,  ..., 0.0078, 0.0078, 0.0078],
         [0.9767, 0.9768, 0.9770,  ..., 0.9767, 0.9767, 0.9766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8287e-03, 6.7777e-03, 6.9157e-03,  ..., 7.0596e-03,
          6.3570e-03, 6.5723e-03],
         [6.8287e-03, 6.7777e-03, 6.9157e-03,  ..., 7.0596e-03,
          6.3570e-03, 6.5723e-03],
         [6.8287e-03, 6.7777e-03, 6.9157e-03,  ..., 7.0596e-03,
          6.3570e-03, 6.5723e-03],
         [9.7951e-01, 9.7967e-01, 9.7925e-01,  ..., 9.7882e-01,
          9.8093e-01, 9.8028e-01]],
        [[7.1554e-03, 6.7785e-03, 6.6967e-03,  ..., 5.1266e-04,
          6.8449e-03, 6.7291e-03],
         [7.1554e-03, 6.7785e-03, 6.6967e-03,  ..., 5.1266e-04,
          6.8449e-03, 6.7291e-03],
         [7.1554e-03, 6.7785e-03, 6.6967e-03,  ..., 9.9846e-01,
          6.8449e-03, 6.7291e-03],
         [9.7853e-01, 9.7966e-01, 9.7991e-01,  ..., 5.1266e-04,
          9.7947e-01, 9.7981e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 438:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:17:27,088 [Process: 0] Synchronize training processes
2024-08-16 16:17:27,089 [Process: 0] Evaluating...
2024-08-16 16:17:27,091 [Process: 0] EPOCH 438:
2024-08-16 16:17:27,092 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0076, 0.0081,  ..., 0.0080, 0.0078, 0.0079],
         [0.0078, 0.0076, 0.0081,  ..., 0.0080, 0.0078, 0.0079],
         [0.0078, 0.0076, 0.0081,  ..., 0.0080, 0.0078, 0.0079],
         [0.9766, 0.9772, 0.9758,  ..., 0.9761, 0.9765, 0.9762]],
        [[0.0079, 0.0079, 0.0077,  ..., 0.0077, 0.0080, 0.0078],
         [0.0079, 0.0079, 0.0077,  ..., 0.0077, 0.0080, 0.0078],
         [0.0079, 0.0079, 0.0077,  ..., 0.0077, 0.0080, 0.0078],
         [0.9764, 0.9762, 0.9769,  ..., 0.9769, 0.9760, 0.9765]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7945e-03, 6.5177e-03, 6.6293e-03,  ..., 8.5361e-03,
          6.5603e-03, 6.7110e-03],
         [6.7945e-03, 6.5177e-03, 6.6293e-03,  ..., 8.5361e-03,
          6.5603e-03, 6.7110e-03],
         [6.7945e-03, 6.5177e-03, 6.6293e-03,  ..., 8.5361e-03,
          6.5603e-03, 6.7110e-03],
         [9.7962e-01, 9.8045e-01, 9.8011e-01,  ..., 9.7439e-01,
          9.8032e-01, 9.7987e-01]],
        [[6.4567e-03, 6.7294e-03, 6.9114e-03,  ..., 8.3484e-05,
          6.8266e-03, 6.7580e-03],
         [6.4567e-03, 6.7294e-03, 6.9114e-03,  ..., 8.3484e-05,
          6.8266e-03, 6.7580e-03],
         [6.4567e-03, 6.7294e-03, 6.9114e-03,  ..., 9.9975e-01,
          6.8266e-03, 6.7580e-03],
         [9.8063e-01, 9.7981e-01, 9.7927e-01,  ..., 8.3484e-05,
          9.7952e-01, 9.7973e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 439:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:17:29,162 [Process: 0] Synchronize training processes
2024-08-16 16:17:29,163 [Process: 0] Evaluating...
2024-08-16 16:17:29,164 [Process: 0] EPOCH 439:
2024-08-16 16:17:29,166 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0078, 0.0076,  ..., 0.0080, 0.0081, 0.0080],
         [0.0078, 0.0078, 0.0076,  ..., 0.0080, 0.0081, 0.0080],
         [0.0078, 0.0078, 0.0076,  ..., 0.0080, 0.0081, 0.0080],
         [0.9767, 0.9766, 0.9773,  ..., 0.9761, 0.9758, 0.9761]],
        [[0.0078, 0.0078, 0.0076,  ..., 0.0077, 0.0079, 0.0077],
         [0.0078, 0.0078, 0.0076,  ..., 0.0077, 0.0079, 0.0077],
         [0.0078, 0.0078, 0.0076,  ..., 0.0077, 0.0079, 0.0077],
         [0.9767, 0.9767, 0.9773,  ..., 0.9768, 0.9764, 0.9770]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6036e-03, 6.1971e-03, 6.4168e-03,  ..., 7.9644e-03,
          6.7551e-03, 6.5693e-03],
         [6.6036e-03, 6.1971e-03, 6.4168e-03,  ..., 7.9644e-03,
          6.7551e-03, 6.5693e-03],
         [6.6036e-03, 6.1971e-03, 6.4168e-03,  ..., 7.9644e-03,
          6.7551e-03, 6.5693e-03],
         [9.8019e-01, 9.8141e-01, 9.8075e-01,  ..., 9.7611e-01,
          9.7973e-01, 9.8029e-01]],
        [[6.4119e-03, 6.7069e-03, 6.3082e-03,  ..., 9.1019e-04,
          6.6550e-03, 6.5834e-03],
         [6.4119e-03, 6.7069e-03, 6.3082e-03,  ..., 9.1019e-04,
          6.6550e-03, 6.5834e-03],
         [6.4119e-03, 6.7069e-03, 6.3082e-03,  ..., 9.9727e-01,
          6.6550e-03, 6.5834e-03],
         [9.8076e-01, 9.7988e-01, 9.8108e-01,  ..., 9.1019e-04,
          9.8003e-01, 9.8025e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 440:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:17:31,238 [Process: 0] Synchronize training processes
2024-08-16 16:17:31,239 [Process: 0] Evaluating...
2024-08-16 16:17:31,240 [Process: 0] EPOCH 440:
2024-08-16 16:17:31,243 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0077, 0.0077, 0.0075,  ..., 0.0078, 0.0074, 0.0076],
         [0.0077, 0.0077, 0.0075,  ..., 0.0078, 0.0074, 0.0076],
         [0.0077, 0.0077, 0.0075,  ..., 0.0078, 0.0074, 0.0076],
         [0.9770, 0.9770, 0.9774,  ..., 0.9767, 0.9777, 0.9771]],
        [[0.0076, 0.0077, 0.0076,  ..., 0.0075, 0.0078, 0.0076],
         [0.0076, 0.0077, 0.0076,  ..., 0.0075, 0.0078, 0.0076],
         [0.0076, 0.0077, 0.0076,  ..., 0.0075, 0.0078, 0.0076],
         [0.9772, 0.9768, 0.9771,  ..., 0.9775, 0.9765, 0.9773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.0064, 0.0068,  ..., 0.0076, 0.0071, 0.0066],
         [0.0065, 0.0064, 0.0068,  ..., 0.0076, 0.0071, 0.0066],
         [0.0065, 0.0064, 0.0068,  ..., 0.0076, 0.0071, 0.0066],
         [0.9805, 0.9809, 0.9797,  ..., 0.9772, 0.9786, 0.9801]],
        [[0.0068, 0.0068, 0.0065,  ..., 0.0015, 0.0066, 0.0066],
         [0.0068, 0.0068, 0.0065,  ..., 0.0015, 0.0066, 0.0066],
         [0.0068, 0.0068, 0.0065,  ..., 0.9955, 0.0066, 0.0066],
         [0.9796, 0.9797, 0.9806,  ..., 0.0015, 0.9802, 0.9803]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 441:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:17:33,346 [Process: 0] Synchronize training processes
2024-08-16 16:17:33,346 [Process: 0] Evaluating...
2024-08-16 16:17:33,348 [Process: 0] EPOCH 441:
2024-08-16 16:17:33,350 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0077, 0.0078, 0.0076,  ..., 0.0078, 0.0080, 0.0077],
         [0.0077, 0.0078, 0.0076,  ..., 0.0078, 0.0080, 0.0077],
         [0.0077, 0.0078, 0.0076,  ..., 0.0078, 0.0080, 0.0077],
         [0.9769, 0.9765, 0.9771,  ..., 0.9766, 0.9760, 0.9768]],
        [[0.0076, 0.0075, 0.0077,  ..., 0.0075, 0.0076, 0.0076],
         [0.0076, 0.0075, 0.0077,  ..., 0.0075, 0.0076, 0.0076],
         [0.0076, 0.0075, 0.0077,  ..., 0.0075, 0.0076, 0.0076],
         [0.9771, 0.9774, 0.9770,  ..., 0.9774, 0.9772, 0.9771]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0066, 0.0064, 0.0064,  ..., 0.0080, 0.0072, 0.0063],
         [0.0066, 0.0064, 0.0064,  ..., 0.0080, 0.0072, 0.0063],
         [0.0066, 0.0064, 0.0064,  ..., 0.0080, 0.0072, 0.0063],
         [0.9802, 0.9809, 0.9808,  ..., 0.9759, 0.9783, 0.9811]],
        [[0.0065, 0.0064, 0.0065,  ..., 0.0012, 0.0063, 0.0063],
         [0.0065, 0.0064, 0.0065,  ..., 0.0012, 0.0063, 0.0063],
         [0.0065, 0.0064, 0.0065,  ..., 0.9963, 0.0063, 0.0063],
         [0.9806, 0.9807, 0.9806,  ..., 0.0012, 0.9811, 0.9812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 442:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:17:35,528 [Process: 0] Synchronize training processes
2024-08-16 16:17:35,529 [Process: 0] Evaluating...
2024-08-16 16:17:35,537 [Process: 0] EPOCH 442:
2024-08-16 16:17:35,539 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0076, 0.0076,  ..., 0.0075, 0.0075, 0.0077],
         [0.0075, 0.0076, 0.0076,  ..., 0.0075, 0.0075, 0.0077],
         [0.0075, 0.0076, 0.0076,  ..., 0.0075, 0.0075, 0.0077],
         [0.9775, 0.9771, 0.9772,  ..., 0.9774, 0.9776, 0.9770]],
        [[0.0073, 0.0072, 0.0075,  ..., 0.0075, 0.0075, 0.0075],
         [0.0073, 0.0072, 0.0075,  ..., 0.0075, 0.0075, 0.0075],
         [0.0073, 0.0072, 0.0075,  ..., 0.0075, 0.0075, 0.0075],
         [0.9780, 0.9783, 0.9775,  ..., 0.9776, 0.9774, 0.9776]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0062, 0.0064, 0.0061,  ..., 0.0086, 0.0071, 0.0062],
         [0.0062, 0.0064, 0.0061,  ..., 0.0086, 0.0071, 0.0062],
         [0.0062, 0.0064, 0.0061,  ..., 0.0086, 0.0071, 0.0062],
         [0.9815, 0.9808, 0.9816,  ..., 0.9742, 0.9787, 0.9813]],
        [[0.0064, 0.0063, 0.0062,  ..., 0.0025, 0.0065, 0.0063],
         [0.0064, 0.0063, 0.0062,  ..., 0.0025, 0.0065, 0.0063],
         [0.0064, 0.0063, 0.0062,  ..., 0.9925, 0.0065, 0.0063],
         [0.9808, 0.9811, 0.9813,  ..., 0.0025, 0.9806, 0.9812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 443:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:17:37,659 [Process: 0] Synchronize training processes
2024-08-16 16:17:37,659 [Process: 0] Evaluating...
2024-08-16 16:17:37,661 [Process: 0] EPOCH 443:
2024-08-16 16:17:37,663 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0074, 0.0076, 0.0076,  ..., 0.0075, 0.0077, 0.0075],
         [0.0074, 0.0076, 0.0076,  ..., 0.0075, 0.0077, 0.0075],
         [0.0074, 0.0076, 0.0076,  ..., 0.0075, 0.0077, 0.0075],
         [0.9777, 0.9772, 0.9771,  ..., 0.9775, 0.9770, 0.9776]],
        [[0.0075, 0.0073, 0.0075,  ..., 0.0075, 0.0078, 0.0077],
         [0.0075, 0.0073, 0.0075,  ..., 0.0075, 0.0078, 0.0077],
         [0.0075, 0.0073, 0.0075,  ..., 0.0075, 0.0078, 0.0077],
         [0.9776, 0.9781, 0.9774,  ..., 0.9774, 0.9765, 0.9769]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.3441e-03, 6.4042e-03, 6.0761e-03,  ..., 7.2342e-03,
          6.4672e-03, 6.3715e-03],
         [6.3441e-03, 6.4042e-03, 6.0761e-03,  ..., 7.2342e-03,
          6.4672e-03, 6.3715e-03],
         [6.3441e-03, 6.4042e-03, 6.0761e-03,  ..., 7.2342e-03,
          6.4672e-03, 6.3715e-03],
         [9.8097e-01, 9.8079e-01, 9.8177e-01,  ..., 9.7830e-01,
          9.8060e-01, 9.8089e-01]],
        [[6.3326e-03, 6.2927e-03, 6.0464e-03,  ..., 8.4780e-05,
          6.3487e-03, 6.3117e-03],
         [6.3326e-03, 6.2927e-03, 6.0464e-03,  ..., 8.4780e-05,
          6.3487e-03, 6.3117e-03],
         [6.3326e-03, 6.2927e-03, 6.0464e-03,  ..., 9.9975e-01,
          6.3487e-03, 6.3117e-03],
         [9.8100e-01, 9.8112e-01, 9.8186e-01,  ..., 8.4780e-05,
          9.8095e-01, 9.8106e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 444:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:17:39,753 [Process: 0] Synchronize training processes
2024-08-16 16:17:39,754 [Process: 0] Evaluating...
2024-08-16 16:17:39,756 [Process: 0] EPOCH 444:
2024-08-16 16:17:39,758 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0077, 0.0076, 0.0079,  ..., 0.0076, 0.0076, 0.0079],
         [0.0077, 0.0076, 0.0079,  ..., 0.0076, 0.0076, 0.0079],
         [0.0077, 0.0076, 0.0079,  ..., 0.0076, 0.0076, 0.0079],
         [0.9769, 0.9771, 0.9763,  ..., 0.9773, 0.9773, 0.9762]],
        [[0.0078, 0.0076, 0.0077,  ..., 0.0076, 0.0077, 0.0078],
         [0.0078, 0.0076, 0.0077,  ..., 0.0076, 0.0077, 0.0078],
         [0.0078, 0.0076, 0.0077,  ..., 0.0076, 0.0077, 0.0078],
         [0.9767, 0.9772, 0.9768,  ..., 0.9771, 0.9768, 0.9766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0064, 0.0063, 0.0060,  ..., 0.0065, 0.0067, 0.0063],
         [0.0064, 0.0063, 0.0060,  ..., 0.0065, 0.0067, 0.0063],
         [0.0064, 0.0063, 0.0060,  ..., 0.0065, 0.0067, 0.0063],
         [0.9807, 0.9812, 0.9819,  ..., 0.9805, 0.9799, 0.9812]],
        [[0.0065, 0.0065, 0.0062,  ..., 0.0024, 0.0062, 0.0063],
         [0.0065, 0.0065, 0.0062,  ..., 0.0024, 0.0062, 0.0063],
         [0.0065, 0.0065, 0.0062,  ..., 0.9929, 0.0062, 0.0063],
         [0.9806, 0.9804, 0.9815,  ..., 0.0024, 0.9815, 0.9810]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 445:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:17:41,840 [Process: 0] Synchronize training processes
2024-08-16 16:17:41,840 [Process: 0] Evaluating...
2024-08-16 16:17:41,842 [Process: 0] EPOCH 445:
2024-08-16 16:17:41,844 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0074, 0.0075, 0.0075,  ..., 0.0076, 0.0075, 0.0075],
         [0.0074, 0.0075, 0.0075,  ..., 0.0076, 0.0075, 0.0075],
         [0.0074, 0.0075, 0.0075,  ..., 0.0076, 0.0075, 0.0075],
         [0.9779, 0.9776, 0.9775,  ..., 0.9772, 0.9776, 0.9774]],
        [[0.0075, 0.0073, 0.0074,  ..., 0.0073, 0.0075, 0.0076],
         [0.0075, 0.0073, 0.0074,  ..., 0.0073, 0.0075, 0.0076],
         [0.0075, 0.0073, 0.0074,  ..., 0.0073, 0.0075, 0.0076],
         [0.9774, 0.9781, 0.9779,  ..., 0.9781, 0.9774, 0.9772]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.0063, 0.0063,  ..., 0.0068, 0.0067, 0.0065],
         [0.0065, 0.0063, 0.0063,  ..., 0.0068, 0.0067, 0.0065],
         [0.0065, 0.0063, 0.0063,  ..., 0.0068, 0.0067, 0.0065],
         [0.9804, 0.9812, 0.9810,  ..., 0.9796, 0.9800, 0.9805]],
        [[0.0061, 0.0063, 0.0062,  ..., 0.0013, 0.0063, 0.0067],
         [0.0061, 0.0063, 0.0062,  ..., 0.0013, 0.0063, 0.0067],
         [0.0061, 0.0063, 0.0062,  ..., 0.9960, 0.0063, 0.0067],
         [0.9817, 0.9811, 0.9813,  ..., 0.0013, 0.9810, 0.9799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:43,933 [Process: 0] Synchronize training processes
2024-08-16 16:17:43,933 [Process: 0] Evaluating...
2024-08-16 16:17:43,935 [Process: 0] EPOCH 446:
2024-08-16 16:17:43,937 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 446:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0074, 0.0073, 0.0073,  ..., 0.0075, 0.0074, 0.0072],
         [0.0074, 0.0073, 0.0073,  ..., 0.0075, 0.0074, 0.0072],
         [0.0074, 0.0073, 0.0073,  ..., 0.0075, 0.0074, 0.0072],
         [0.9778, 0.9782, 0.9780,  ..., 0.9775, 0.9778, 0.9783]],
        [[0.0074, 0.0070, 0.0073,  ..., 0.0071, 0.0073, 0.0075],
         [0.0074, 0.0070, 0.0073,  ..., 0.0071, 0.0073, 0.0075],
         [0.0074, 0.0070, 0.0073,  ..., 0.0071, 0.0073, 0.0075],
         [0.9779, 0.9789, 0.9780,  ..., 0.9786, 0.9780, 0.9776]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.4993e-03, 6.1816e-03, 6.4011e-03,  ..., 6.7023e-03,
          6.4372e-03, 6.2299e-03],
         [6.4993e-03, 6.1816e-03, 6.4011e-03,  ..., 6.7023e-03,
          6.4372e-03, 6.2299e-03],
         [6.4993e-03, 6.1816e-03, 6.4011e-03,  ..., 6.7023e-03,
          6.4372e-03, 6.2299e-03],
         [9.8050e-01, 9.8146e-01, 9.8080e-01,  ..., 9.7989e-01,
          9.8069e-01, 9.8131e-01]],
        [[6.4287e-03, 6.3151e-03, 6.5654e-03,  ..., 7.0402e-05,
          6.4159e-03, 6.3519e-03],
         [6.4287e-03, 6.3151e-03, 6.5654e-03,  ..., 7.0402e-05,
          6.4159e-03, 6.3519e-03],
         [6.4287e-03, 6.3151e-03, 6.5654e-03,  ..., 9.9979e-01,
          6.4159e-03, 6.3519e-03],
         [9.8071e-01, 9.8105e-01, 9.8030e-01,  ..., 7.0402e-05,
          9.8075e-01, 9.8094e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:46,022 [Process: 0] Synchronize training processes
2024-08-16 16:17:46,022 [Process: 0] Evaluating...
2024-08-16 16:17:46,024 [Process: 0] EPOCH 447:
2024-08-16 16:17:46,026 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 447:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0071, 0.0075, 0.0073,  ..., 0.0076, 0.0073, 0.0074],
         [0.0071, 0.0075, 0.0073,  ..., 0.0076, 0.0073, 0.0074],
         [0.0071, 0.0075, 0.0073,  ..., 0.0076, 0.0073, 0.0074],
         [0.9787, 0.9775, 0.9780,  ..., 0.9772, 0.9780, 0.9778]],
        [[0.0074, 0.0072, 0.0072,  ..., 0.0069, 0.0075, 0.0075],
         [0.0074, 0.0072, 0.0072,  ..., 0.0069, 0.0075, 0.0075],
         [0.0074, 0.0072, 0.0072,  ..., 0.0069, 0.0075, 0.0075],
         [0.9779, 0.9783, 0.9785,  ..., 0.9792, 0.9776, 0.9775]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:17:48,104 [Process: 0] Synchronize training processes
2024-08-16 16:17:48,105 [Process: 0] Evaluating...
2024-08-16 16:17:48,107 [Process: 0] EPOCH 448:
2024-08-16 16:17:48,109 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.4096e-03, 6.2293e-03, 6.2133e-03,  ..., 6.3577e-03,
          6.3584e-03, 6.2176e-03],
         [6.4096e-03, 6.2293e-03, 6.2133e-03,  ..., 6.3577e-03,
          6.3584e-03, 6.2176e-03],
         [6.4096e-03, 6.2293e-03, 6.2133e-03,  ..., 6.3577e-03,
          6.3584e-03, 6.2176e-03],
         [9.8077e-01, 9.8131e-01, 9.8136e-01,  ..., 9.8093e-01,
          9.8092e-01, 9.8135e-01]],
        [[6.2277e-03, 6.3618e-03, 6.5502e-03,  ..., 1.2808e-03,
          6.4496e-03, 6.1392e-03],
         [6.2277e-03, 6.3618e-03, 6.5502e-03,  ..., 5.6625e-04,
          6.4496e-03, 6.1392e-03],
         [6.2277e-03, 6.3618e-03, 6.5502e-03,  ..., 9.9759e-01,
          6.4496e-03, 6.1392e-03],
         [9.8132e-01, 9.8091e-01, 9.8035e-01,  ..., 5.6625e-04,
          9.8065e-01, 9.8158e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 448:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0074, 0.0073, 0.0075,  ..., 0.0075, 0.0074, 0.0074],
         [0.0074, 0.0073, 0.0075,  ..., 0.0075, 0.0074, 0.0074],
         [0.0074, 0.0073, 0.0075,  ..., 0.0075, 0.0074, 0.0074],
         [0.9778, 0.9781, 0.9775,  ..., 0.9776, 0.9779, 0.9778]],
        [[0.0075, 0.0075, 0.0071,  ..., 0.0074, 0.0074, 0.0074],
         [0.0075, 0.0075, 0.0071,  ..., 0.0074, 0.0074, 0.0074],
         [0.0075, 0.0075, 0.0071,  ..., 0.0074, 0.0074, 0.0074],
         [0.9776, 0.9775, 0.9786,  ..., 0.9778, 0.9777, 0.9777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 16:17:50,174 [Process: 0] Synchronize training processes
2024-08-16 16:17:50,174 [Process: 0] Evaluating...
2024-08-16 16:17:50,176 [Process: 0] EPOCH 449:
2024-08-16 16:17:50,178 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2262e-03, 6.2322e-03, 6.1943e-03,  ..., 6.3575e-03,
          6.2569e-03, 6.0481e-03],
         [6.2262e-03, 6.2322e-03, 6.1943e-03,  ..., 6.3575e-03,
          6.2569e-03, 6.0481e-03],
         [6.2262e-03, 6.2322e-03, 6.1943e-03,  ..., 6.3575e-03,
          6.2569e-03, 6.0481e-03],
         [9.8132e-01, 9.8130e-01, 9.8142e-01,  ..., 9.8093e-01,
          9.8123e-01, 9.8186e-01]],
        [[6.3980e-03, 6.4567e-03, 6.3298e-03,  ..., 2.6733e-04,
          6.3662e-03, 6.4509e-03],
         [6.3980e-03, 6.4567e-03, 6.3298e-03,  ..., 2.6733e-04,
          6.3662e-03, 6.4509e-03],
         [6.3980e-03, 6.4567e-03, 6.3298e-03,  ..., 9.9920e-01,
          6.3662e-03, 6.4509e-03],
         [9.8081e-01, 9.8063e-01, 9.8101e-01,  ..., 2.6733e-04,
          9.8090e-01, 9.8065e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 449:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0074, 0.0076, 0.0077,  ..., 0.0077, 0.0075, 0.0074],
         [0.0074, 0.0076, 0.0077,  ..., 0.0077, 0.0075, 0.0074],
         [0.0074, 0.0076, 0.0077,  ..., 0.0077, 0.0075, 0.0074],
         [0.9779, 0.9773, 0.9770,  ..., 0.9770, 0.9776, 0.9778]],
        [[0.0074, 0.0075, 0.0074,  ..., 0.0075, 0.0075, 0.0075],
         [0.0074, 0.0075, 0.0074,  ..., 0.0075, 0.0075, 0.0075],
         [0.0074, 0.0075, 0.0074,  ..., 0.0075, 0.0075, 0.0075],
         [0.9779, 0.9776, 0.9777,  ..., 0.9774, 0.9775, 0.9775]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:52,258 [Process: 0] Synchronize training processes
2024-08-16 16:17:52,259 [Process: 0] Evaluating...
2024-08-16 16:17:52,260 [Process: 0] EPOCH 450:
2024-08-16 16:17:52,262 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.3128e-03, 5.9271e-03, 6.3792e-03,  ..., 6.3264e-03,
          6.2293e-03, 6.2584e-03],
         [6.3128e-03, 5.9271e-03, 6.3792e-03,  ..., 6.3264e-03,
          6.2293e-03, 6.2584e-03],
         [6.3128e-03, 5.9271e-03, 6.3792e-03,  ..., 6.3264e-03,
          6.2293e-03, 6.2584e-03],
         [9.8106e-01, 9.8222e-01, 9.8086e-01,  ..., 9.8102e-01,
          9.8131e-01, 9.8122e-01]],
        [[6.3194e-03, 6.3800e-03, 6.3381e-03,  ..., 3.2226e-05,
          6.3408e-03, 6.4092e-03],
         [6.3194e-03, 6.3800e-03, 6.3381e-03,  ..., 3.2226e-05,
          6.3408e-03, 6.4092e-03],
         [6.3194e-03, 6.3800e-03, 6.3381e-03,  ..., 9.9990e-01,
          6.3408e-03, 6.4092e-03],
         [9.8104e-01, 9.8086e-01, 9.8099e-01,  ..., 3.2226e-05,
          9.8098e-01, 9.8077e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 450:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0075, 0.0075,  ..., 0.0075, 0.0075, 0.0076],
         [0.0076, 0.0075, 0.0075,  ..., 0.0075, 0.0075, 0.0076],
         [0.0076, 0.0075, 0.0075,  ..., 0.0075, 0.0075, 0.0076],
         [0.9771, 0.9776, 0.9776,  ..., 0.9774, 0.9774, 0.9773]],
        [[0.0075, 0.0072, 0.0076,  ..., 0.0073, 0.0076, 0.0077],
         [0.0075, 0.0072, 0.0076,  ..., 0.0073, 0.0076, 0.0077],
         [0.0075, 0.0072, 0.0076,  ..., 0.0073, 0.0076, 0.0077],
         [0.9776, 0.9783, 0.9773,  ..., 0.9780, 0.9773, 0.9769]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:54,343 [Process: 0] Synchronize training processes
2024-08-16 16:17:54,344 [Process: 0] Evaluating...
2024-08-16 16:17:54,346 [Process: 0] EPOCH 451:
2024-08-16 16:17:54,348 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.3318e-03, 6.3393e-03, 6.1834e-03,  ..., 6.2208e-03,
          6.1432e-03, 6.0645e-03],
         [6.3318e-03, 6.3393e-03, 6.1834e-03,  ..., 6.2208e-03,
          6.1432e-03, 6.0645e-03],
         [6.3318e-03, 6.3393e-03, 6.1834e-03,  ..., 6.2208e-03,
          6.1432e-03, 6.0645e-03],
         [9.8100e-01, 9.8098e-01, 9.8145e-01,  ..., 9.8134e-01,
          9.8157e-01, 9.8181e-01]],
        [[6.2923e-03, 6.2181e-03, 6.1872e-03,  ..., 2.3934e-04,
          6.2007e-03, 6.4300e-03],
         [6.2923e-03, 6.2181e-03, 6.1872e-03,  ..., 2.3934e-04,
          6.2007e-03, 6.4300e-03],
         [6.2923e-03, 6.2181e-03, 6.1872e-03,  ..., 9.9928e-01,
          6.2007e-03, 6.4300e-03],
         [9.8112e-01, 9.8135e-01, 9.8144e-01,  ..., 2.3934e-04,
          9.8140e-01, 9.8071e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 451:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0076, 0.0074,  ..., 0.0076, 0.0075, 0.0076],
         [0.0075, 0.0076, 0.0074,  ..., 0.0076, 0.0075, 0.0076],
         [0.0075, 0.0076, 0.0074,  ..., 0.0076, 0.0075, 0.0076],
         [0.9775, 0.9772, 0.9777,  ..., 0.9771, 0.9776, 0.9771]],
        [[0.0074, 0.0075, 0.0074,  ..., 0.0074, 0.0074, 0.0074],
         [0.0074, 0.0075, 0.0074,  ..., 0.0074, 0.0074, 0.0074],
         [0.0074, 0.0075, 0.0074,  ..., 0.0074, 0.0074, 0.0074],
         [0.9778, 0.9774, 0.9779,  ..., 0.9778, 0.9779, 0.9778]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:56,407 [Process: 0] Synchronize training processes
2024-08-16 16:17:56,407 [Process: 0] Evaluating...
2024-08-16 16:17:56,415 [Process: 0] EPOCH 452:
2024-08-16 16:17:56,418 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0229e-03, 6.0781e-03, 6.3230e-03,  ..., 6.3865e-03,
          5.8881e-03, 6.1778e-03],
         [6.0229e-03, 6.0781e-03, 6.3230e-03,  ..., 6.3865e-03,
          5.8881e-03, 6.1778e-03],
         [6.0229e-03, 6.0781e-03, 6.3230e-03,  ..., 6.3865e-03,
          5.8881e-03, 6.1778e-03],
         [9.8193e-01, 9.8177e-01, 9.8103e-01,  ..., 9.8084e-01,
          9.8234e-01, 9.8147e-01]],
        [[6.3069e-03, 6.3406e-03, 6.0516e-03,  ..., 7.2616e-04,
          6.2162e-03, 6.1116e-03],
         [6.3069e-03, 6.3406e-03, 6.0516e-03,  ..., 7.2616e-04,
          6.2162e-03, 6.1116e-03],
         [6.3069e-03, 6.3406e-03, 6.0516e-03,  ..., 9.9782e-01,
          6.2162e-03, 6.1116e-03],
         [9.8108e-01, 9.8098e-01, 9.8185e-01,  ..., 7.2616e-04,
          9.8135e-01, 9.8167e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 452:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0073, 0.0075,  ..., 0.0073, 0.0072, 0.0074],
         [0.0076, 0.0073, 0.0075,  ..., 0.0073, 0.0072, 0.0074],
         [0.0076, 0.0073, 0.0075,  ..., 0.0073, 0.0072, 0.0074],
         [0.9772, 0.9782, 0.9776,  ..., 0.9782, 0.9784, 0.9777]],
        [[0.0074, 0.0073, 0.0073,  ..., 0.0072, 0.0073, 0.0073],
         [0.0074, 0.0073, 0.0073,  ..., 0.0072, 0.0073, 0.0073],
         [0.0074, 0.0073, 0.0073,  ..., 0.0072, 0.0073, 0.0073],
         [0.9779, 0.9780, 0.9780,  ..., 0.9783, 0.9780, 0.9782]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:17:58,483 [Process: 0] Synchronize training processes
2024-08-16 16:17:58,484 [Process: 0] Evaluating...
2024-08-16 16:17:58,485 [Process: 0] EPOCH 453:
2024-08-16 16:17:58,487 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2677e-03, 6.0244e-03, 6.2371e-03,  ..., 6.1603e-03,
          5.8912e-03, 6.0303e-03],
         [6.2677e-03, 6.0244e-03, 6.2371e-03,  ..., 6.1603e-03,
          5.8912e-03, 6.0303e-03],
         [6.2677e-03, 6.0244e-03, 6.2371e-03,  ..., 6.1603e-03,
          5.8912e-03, 6.0303e-03],
         [9.8120e-01, 9.8193e-01, 9.8129e-01,  ..., 9.8152e-01,
          9.8233e-01, 9.8191e-01]],
        [[6.0132e-03, 6.3146e-03, 5.9543e-03,  ..., 5.0581e-04,
          6.0592e-03, 6.2276e-03],
         [6.0132e-03, 6.3146e-03, 5.9543e-03,  ..., 5.0581e-04,
          6.0592e-03, 6.2276e-03],
         [6.0132e-03, 6.3146e-03, 5.9543e-03,  ..., 9.9848e-01,
          6.0592e-03, 6.2276e-03],
         [9.8196e-01, 9.8106e-01, 9.8214e-01,  ..., 5.0581e-04,
          9.8182e-01, 9.8132e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 453:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0073, 0.0074,  ..., 0.0075, 0.0071, 0.0070],
         [0.0073, 0.0073, 0.0074,  ..., 0.0075, 0.0071, 0.0070],
         [0.0073, 0.0073, 0.0074,  ..., 0.0075, 0.0071, 0.0070],
         [0.9780, 0.9782, 0.9778,  ..., 0.9776, 0.9786, 0.9790]],
        [[0.0073, 0.0072, 0.0070,  ..., 0.0072, 0.0072, 0.0073],
         [0.0073, 0.0072, 0.0070,  ..., 0.0072, 0.0072, 0.0073],
         [0.0073, 0.0072, 0.0070,  ..., 0.0072, 0.0072, 0.0073],
         [0.9782, 0.9785, 0.9790,  ..., 0.9784, 0.9783, 0.9781]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:00,566 [Process: 0] Synchronize training processes
2024-08-16 16:18:00,567 [Process: 0] Evaluating...
2024-08-16 16:18:00,568 [Process: 0] EPOCH 454:
2024-08-16 16:18:00,570 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0470e-03, 6.0488e-03, 6.1077e-03,  ..., 6.0358e-03,
          6.0006e-03, 6.2551e-03],
         [6.0470e-03, 6.0488e-03, 6.1077e-03,  ..., 6.0358e-03,
          6.0006e-03, 6.2551e-03],
         [6.0470e-03, 6.0488e-03, 6.1077e-03,  ..., 6.0358e-03,
          6.0006e-03, 6.2551e-03],
         [9.8186e-01, 9.8185e-01, 9.8168e-01,  ..., 9.8189e-01,
          9.8200e-01, 9.8123e-01]],
        [[6.1507e-03, 6.0558e-03, 6.0978e-03,  ..., 2.6744e-04,
          5.9984e-03, 6.0484e-03],
         [6.1507e-03, 6.0558e-03, 6.0978e-03,  ..., 2.6744e-04,
          5.9984e-03, 6.0484e-03],
         [6.1507e-03, 6.0558e-03, 6.0978e-03,  ..., 9.9920e-01,
          5.9984e-03, 6.0484e-03],
         [9.8155e-01, 9.8183e-01, 9.8171e-01,  ..., 2.6744e-04,
          9.8200e-01, 9.8185e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 454:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0072, 0.0073,  ..., 0.0073, 0.0076, 0.0072],
         [0.0075, 0.0072, 0.0073,  ..., 0.0073, 0.0076, 0.0072],
         [0.0075, 0.0072, 0.0073,  ..., 0.0073, 0.0076, 0.0072],
         [0.9776, 0.9784, 0.9782,  ..., 0.9781, 0.9773, 0.9783]],
        [[0.0073, 0.0073, 0.0073,  ..., 0.0072, 0.0073, 0.0075],
         [0.0073, 0.0073, 0.0073,  ..., 0.0072, 0.0073, 0.0075],
         [0.0073, 0.0073, 0.0073,  ..., 0.0072, 0.0073, 0.0075],
         [0.9780, 0.9780, 0.9782,  ..., 0.9783, 0.9782, 0.9775]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:02,652 [Process: 0] Synchronize training processes
2024-08-16 16:18:02,652 [Process: 0] Evaluating...
2024-08-16 16:18:02,654 [Process: 0] EPOCH 455:
2024-08-16 16:18:02,656 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.3109e-03, 6.1692e-03, 6.3204e-03,  ..., 6.4493e-03,
          6.0467e-03, 6.3130e-03],
         [6.3109e-03, 6.1692e-03, 6.3204e-03,  ..., 6.4493e-03,
          6.0467e-03, 6.3130e-03],
         [6.3109e-03, 6.1692e-03, 6.3204e-03,  ..., 6.4493e-03,
          6.0467e-03, 6.3130e-03],
         [9.8107e-01, 9.8149e-01, 9.8104e-01,  ..., 9.8065e-01,
          9.8186e-01, 9.8106e-01]],
        [[6.1618e-03, 6.2198e-03, 6.2557e-03,  ..., 2.1053e-04,
          6.4702e-03, 6.2685e-03],
         [6.1618e-03, 6.2198e-03, 6.2557e-03,  ..., 2.1053e-04,
          6.4702e-03, 6.2685e-03],
         [6.1618e-03, 6.2198e-03, 6.2557e-03,  ..., 9.9937e-01,
          6.4702e-03, 6.2685e-03],
         [9.8151e-01, 9.8134e-01, 9.8123e-01,  ..., 2.1053e-04,
          9.8059e-01, 9.8119e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 455:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0071, 0.0073,  ..., 0.0075, 0.0076, 0.0075],
         [0.0075, 0.0071, 0.0073,  ..., 0.0075, 0.0076, 0.0075],
         [0.0075, 0.0071, 0.0073,  ..., 0.0075, 0.0076, 0.0075],
         [0.9776, 0.9787, 0.9780,  ..., 0.9775, 0.9772, 0.9776]],
        [[0.0072, 0.0072, 0.0072,  ..., 0.0071, 0.0073, 0.0074],
         [0.0072, 0.0072, 0.0072,  ..., 0.0071, 0.0073, 0.0074],
         [0.0072, 0.0072, 0.0072,  ..., 0.0071, 0.0073, 0.0074],
         [0.9784, 0.9785, 0.9783,  ..., 0.9786, 0.9782, 0.9778]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:04,752 [Process: 0] Synchronize training processes
2024-08-16 16:18:04,752 [Process: 0] Evaluating...
2024-08-16 16:18:04,754 [Process: 0] EPOCH 456:
2024-08-16 16:18:04,756 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.4092e-03, 6.2730e-03, 6.1136e-03,  ..., 6.1855e-03,
          6.1425e-03, 6.1320e-03],
         [6.4092e-03, 6.2730e-03, 6.1136e-03,  ..., 6.1855e-03,
          6.1425e-03, 6.1320e-03],
         [6.4092e-03, 6.2730e-03, 6.1136e-03,  ..., 6.1855e-03,
          6.1425e-03, 6.1320e-03],
         [9.8077e-01, 9.8118e-01, 9.8166e-01,  ..., 9.8144e-01,
          9.8157e-01, 9.8160e-01]],
        [[6.2963e-03, 6.2401e-03, 6.1313e-03,  ..., 1.0524e-06,
          6.2206e-03, 6.2667e-03],
         [6.2963e-03, 6.2401e-03, 6.1313e-03,  ..., 1.0524e-06,
          6.2206e-03, 6.2667e-03],
         [6.2963e-03, 6.2401e-03, 6.1313e-03,  ..., 1.0000e+00,
          6.2206e-03, 6.2667e-03],
         [9.8111e-01, 9.8128e-01, 9.8161e-01,  ..., 1.0524e-06,
          9.8134e-01, 9.8120e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 456:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0071, 0.0073, 0.0073,  ..., 0.0073, 0.0075, 0.0073],
         [0.0071, 0.0073, 0.0073,  ..., 0.0073, 0.0075, 0.0073],
         [0.0071, 0.0073, 0.0073,  ..., 0.0073, 0.0075, 0.0073],
         [0.9786, 0.9780, 0.9781,  ..., 0.9780, 0.9776, 0.9780]],
        [[0.0073, 0.0071, 0.0071,  ..., 0.0072, 0.0072, 0.0073],
         [0.0073, 0.0071, 0.0071,  ..., 0.0072, 0.0072, 0.0073],
         [0.0073, 0.0071, 0.0071,  ..., 0.0072, 0.0072, 0.0073],
         [0.9782, 0.9786, 0.9786,  ..., 0.9785, 0.9785, 0.9780]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:06,833 [Process: 0] Synchronize training processes
2024-08-16 16:18:06,834 [Process: 0] Evaluating...
2024-08-16 16:18:06,835 [Process: 0] EPOCH 457:
2024-08-16 16:18:06,837 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0826e-03, 6.1593e-03, 6.1393e-03,  ..., 6.2925e-03,
          6.2029e-03, 6.2637e-03],
         [6.0826e-03, 6.1593e-03, 6.1393e-03,  ..., 6.2925e-03,
          6.2029e-03, 6.2637e-03],
         [6.0826e-03, 6.1593e-03, 6.1393e-03,  ..., 6.2925e-03,
          6.2029e-03, 6.2637e-03],
         [9.8175e-01, 9.8152e-01, 9.8158e-01,  ..., 9.8112e-01,
          9.8139e-01, 9.8121e-01]],
        [[6.2645e-03, 6.1934e-03, 6.2512e-03,  ..., 1.8000e-05,
          6.1360e-03, 6.2931e-03],
         [6.2645e-03, 6.1934e-03, 6.2512e-03,  ..., 1.8000e-05,
          6.1360e-03, 6.2931e-03],
         [6.2645e-03, 6.1934e-03, 6.2512e-03,  ..., 9.9995e-01,
          6.1360e-03, 6.2931e-03],
         [9.8121e-01, 9.8142e-01, 9.8125e-01,  ..., 1.8000e-05,
          9.8159e-01, 9.8112e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 457:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0072, 0.0073,  ..., 0.0072, 0.0074, 0.0070],
         [0.0072, 0.0072, 0.0073,  ..., 0.0072, 0.0074, 0.0070],
         [0.0072, 0.0072, 0.0073,  ..., 0.0072, 0.0074, 0.0070],
         [0.9785, 0.9784, 0.9782,  ..., 0.9785, 0.9778, 0.9790]],
        [[0.0071, 0.0073, 0.0071,  ..., 0.0071, 0.0072, 0.0072],
         [0.0071, 0.0073, 0.0071,  ..., 0.0071, 0.0072, 0.0072],
         [0.0071, 0.0073, 0.0071,  ..., 0.0071, 0.0072, 0.0072],
         [0.9787, 0.9780, 0.9787,  ..., 0.9786, 0.9784, 0.9785]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:08,909 [Process: 0] Synchronize training processes
2024-08-16 16:18:08,909 [Process: 0] Evaluating...
2024-08-16 16:18:08,911 [Process: 0] EPOCH 458:
2024-08-16 16:18:08,913 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0062, 0.0062, 0.0062,  ..., 0.0061, 0.0061, 0.0062],
         [0.0062, 0.0062, 0.0062,  ..., 0.0061, 0.0061, 0.0062],
         [0.0062, 0.0062, 0.0062,  ..., 0.0061, 0.0061, 0.0062],
         [0.9815, 0.9813, 0.9815,  ..., 0.9817, 0.9818, 0.9815]],
        [[0.0062, 0.0062, 0.0063,  ..., 0.0029, 0.0062, 0.0061],
         [0.0062, 0.0062, 0.0063,  ..., 0.0029, 0.0062, 0.0061],
         [0.0062, 0.0062, 0.0063,  ..., 0.9913, 0.0062, 0.0061],
         [0.9814, 0.9814, 0.9812,  ..., 0.0029, 0.9815, 0.9816]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 458:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0071, 0.0071, 0.0071,  ..., 0.0071, 0.0074, 0.0070],
         [0.0071, 0.0071, 0.0071,  ..., 0.0071, 0.0074, 0.0070],
         [0.0071, 0.0071, 0.0071,  ..., 0.0071, 0.0074, 0.0070],
         [0.9788, 0.9788, 0.9787,  ..., 0.9787, 0.9778, 0.9789]],
        [[0.0071, 0.0072, 0.0070,  ..., 0.0069, 0.0071, 0.0072],
         [0.0071, 0.0072, 0.0070,  ..., 0.0069, 0.0071, 0.0072],
         [0.0071, 0.0072, 0.0070,  ..., 0.0069, 0.0071, 0.0072],
         [0.9787, 0.9785, 0.9789,  ..., 0.9792, 0.9786, 0.9784]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:10,974 [Process: 0] Synchronize training processes
2024-08-16 16:18:10,974 [Process: 0] Evaluating...
2024-08-16 16:18:10,976 [Process: 0] EPOCH 459:
2024-08-16 16:18:10,978 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.1584e-03, 6.0976e-03, 6.1129e-03,  ..., 6.4224e-03,
          6.2011e-03, 6.1292e-03],
         [6.1584e-03, 6.0976e-03, 6.1129e-03,  ..., 6.4224e-03,
          6.2011e-03, 6.1292e-03],
         [6.1584e-03, 6.0976e-03, 6.1129e-03,  ..., 6.4224e-03,
          6.2011e-03, 6.1292e-03],
         [9.8152e-01, 9.8171e-01, 9.8166e-01,  ..., 9.8073e-01,
          9.8140e-01, 9.8161e-01]],
        [[6.1953e-03, 6.1411e-03, 6.2834e-03,  ..., 2.0898e-05,
          6.2442e-03, 6.2226e-03],
         [6.1953e-03, 6.1411e-03, 6.2834e-03,  ..., 2.0898e-05,
          6.2442e-03, 6.2226e-03],
         [6.1953e-03, 6.1411e-03, 6.2834e-03,  ..., 9.9994e-01,
          6.2442e-03, 6.2226e-03],
         [9.8141e-01, 9.8158e-01, 9.8115e-01,  ..., 2.0898e-05,
          9.8127e-01, 9.8133e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 459:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0071, 0.0071, 0.0070,  ..., 0.0070, 0.0073, 0.0072],
         [0.0071, 0.0071, 0.0070,  ..., 0.0070, 0.0073, 0.0072],
         [0.0071, 0.0071, 0.0070,  ..., 0.0070, 0.0073, 0.0072],
         [0.9787, 0.9787, 0.9789,  ..., 0.9790, 0.9780, 0.9783]],
        [[0.0071, 0.0069, 0.0070,  ..., 0.0070, 0.0071, 0.0071],
         [0.0071, 0.0069, 0.0070,  ..., 0.0070, 0.0071, 0.0071],
         [0.0071, 0.0069, 0.0070,  ..., 0.0070, 0.0071, 0.0071],
         [0.9788, 0.9792, 0.9789,  ..., 0.9790, 0.9787, 0.9788]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:13,035 [Process: 0] Synchronize training processes
2024-08-16 16:18:13,035 [Process: 0] Evaluating...
2024-08-16 16:18:13,037 [Process: 0] EPOCH 460:
2024-08-16 16:18:13,039 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0061, 0.0059,  ..., 0.0063, 0.0060, 0.0062],
         [0.0061, 0.0061, 0.0059,  ..., 0.0063, 0.0060, 0.0062],
         [0.0061, 0.0061, 0.0059,  ..., 0.0063, 0.0060, 0.0062],
         [0.9818, 0.9817, 0.9822,  ..., 0.9810, 0.9819, 0.9814]],
        [[0.0062, 0.0061, 0.0062,  ..., 0.0027, 0.0061, 0.0062],
         [0.0062, 0.0061, 0.0062,  ..., 0.0027, 0.0061, 0.0062],
         [0.0062, 0.0061, 0.0062,  ..., 0.9919, 0.0061, 0.0062],
         [0.9815, 0.9817, 0.9815,  ..., 0.0027, 0.9817, 0.9815]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 460:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0070, 0.0070,  ..., 0.0071, 0.0073, 0.0069],
         [0.0070, 0.0070, 0.0070,  ..., 0.0071, 0.0073, 0.0069],
         [0.0070, 0.0070, 0.0070,  ..., 0.0071, 0.0073, 0.0069],
         [0.9789, 0.9789, 0.9791,  ..., 0.9786, 0.9780, 0.9792]],
        [[0.0070, 0.0069, 0.0071,  ..., 0.0069, 0.0070, 0.0071],
         [0.0070, 0.0069, 0.0071,  ..., 0.0069, 0.0070, 0.0071],
         [0.0070, 0.0069, 0.0071,  ..., 0.0069, 0.0070, 0.0071],
         [0.9790, 0.9792, 0.9787,  ..., 0.9792, 0.9790, 0.9786]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8953e-03, 5.8276e-03, 5.9203e-03,  ..., 6.3303e-03,
          5.8705e-03, 6.0271e-03],
         [5.8953e-03, 5.8276e-03, 5.9203e-03,  ..., 6.3303e-03,
          5.8705e-03, 6.0271e-03],
         [5.8953e-03, 5.8276e-03, 5.9203e-03,  ..., 6.3303e-03,
          5.8705e-03, 6.0271e-03],
         [9.8231e-01, 9.8252e-01, 9.8224e-01,  ..., 9.8101e-01,
          9.8239e-01, 9.8192e-01]],
        [[6.0163e-03, 6.0856e-03, 5.9477e-03,  ..., 2.7035e-04,
          5.9779e-03, 6.0021e-03],
         [6.0163e-03, 6.0856e-03, 5.9477e-03,  ..., 2.7035e-04,
          5.9779e-03, 6.0021e-03],
         [6.0163e-03, 6.0856e-03, 5.9477e-03,  ..., 9.9919e-01,
          5.9779e-03, 6.0021e-03],
         [9.8195e-01, 9.8174e-01, 9.8216e-01,  ..., 2.7035e-04,
          9.8207e-01, 9.8199e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 461:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0071, 0.0071, 0.0071,  ..., 0.0072, 0.0078, 0.0071],
         [0.0071, 0.0071, 0.0071,  ..., 0.0072, 0.0078, 0.0071],
         [0.0071, 0.0071, 0.0071,  ..., 0.0072, 0.0078, 0.0071],
         [0.9787, 0.9786, 0.9786,  ..., 0.9784, 0.9767, 0.9788]],
        [[0.0072, 0.0076, 0.0074,  ..., 0.0070, 0.0072, 0.0071],
         [0.0072, 0.0076, 0.0074,  ..., 0.0070, 0.0072, 0.0071],
         [0.0072, 0.0076, 0.0074,  ..., 0.0070, 0.0072, 0.0071],
         [0.9785, 0.9773, 0.9779,  ..., 0.9790, 0.9785, 0.9786]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:15,110 [Process: 0] Synchronize training processes
2024-08-16 16:18:15,111 [Process: 0] Evaluating...
2024-08-16 16:18:15,113 [Process: 0] EPOCH 461:
2024-08-16 16:18:15,115 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0059, 0.0060,  ..., 0.0060, 0.0059, 0.0059],
         [0.0060, 0.0059, 0.0060,  ..., 0.0060, 0.0059, 0.0059],
         [0.0060, 0.0059, 0.0060,  ..., 0.0060, 0.0059, 0.0059],
         [0.9821, 0.9824, 0.9821,  ..., 0.9820, 0.9823, 0.9824]],
        [[0.0060, 0.0060, 0.0059,  ..., 0.0016, 0.0059, 0.0059],
         [0.0060, 0.0060, 0.0059,  ..., 0.0016, 0.0059, 0.0059],
         [0.0060, 0.0060, 0.0059,  ..., 0.9953, 0.0059, 0.0059],
         [0.9821, 0.9821, 0.9822,  ..., 0.0016, 0.9824, 0.9822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 462:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:18:17,193 [Process: 0] Synchronize training processes
2024-08-16 16:18:17,193 [Process: 0] Evaluating...
2024-08-16 16:18:17,201 [Process: 0] EPOCH 462:
2024-08-16 16:18:17,204 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0071, 0.0072, 0.0073,  ..., 0.0072, 0.0072, 0.0077],
         [0.0071, 0.0072, 0.0073,  ..., 0.0072, 0.0072, 0.0077],
         [0.0071, 0.0072, 0.0073,  ..., 0.0072, 0.0072, 0.0077],
         [0.9788, 0.9784, 0.9782,  ..., 0.9783, 0.9785, 0.9769]],
        [[0.0072, 0.0072, 0.0073,  ..., 0.0071, 0.0072, 0.0071],
         [0.0072, 0.0072, 0.0073,  ..., 0.0071, 0.0072, 0.0071],
         [0.0072, 0.0072, 0.0073,  ..., 0.0071, 0.0072, 0.0071],
         [0.9784, 0.9785, 0.9782,  ..., 0.9788, 0.9783, 0.9787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8685e-03, 5.9566e-03, 5.8788e-03,  ..., 6.1348e-03,
          5.9387e-03, 5.9444e-03],
         [5.8685e-03, 5.9566e-03, 5.8788e-03,  ..., 6.1348e-03,
          5.9387e-03, 5.9444e-03],
         [5.8685e-03, 5.9566e-03, 5.8788e-03,  ..., 6.1348e-03,
          5.9387e-03, 5.9444e-03],
         [9.8239e-01, 9.8213e-01, 9.8236e-01,  ..., 9.8160e-01,
          9.8218e-01, 9.8217e-01]],
        [[6.1702e-03, 6.1945e-03, 5.9173e-03,  ..., 2.8249e-04,
          5.8597e-03, 6.1091e-03],
         [6.1702e-03, 6.1945e-03, 5.9173e-03,  ..., 2.8249e-04,
          5.8597e-03, 6.1091e-03],
         [6.1702e-03, 6.1945e-03, 5.9173e-03,  ..., 9.9915e-01,
          5.8597e-03, 6.1091e-03],
         [9.8149e-01, 9.8142e-01, 9.8225e-01,  ..., 2.8249e-04,
          9.8242e-01, 9.8167e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 463:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:18:19,294 [Process: 0] Synchronize training processes
2024-08-16 16:18:19,295 [Process: 0] Evaluating...
2024-08-16 16:18:19,296 [Process: 0] EPOCH 463:
2024-08-16 16:18:19,298 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0070, 0.0071,  ..., 0.0072, 0.0074, 0.0071],
         [0.0069, 0.0070, 0.0071,  ..., 0.0072, 0.0074, 0.0071],
         [0.0069, 0.0070, 0.0071,  ..., 0.0072, 0.0074, 0.0071],
         [0.9793, 0.9790, 0.9786,  ..., 0.9783, 0.9779, 0.9786]],
        [[0.0069, 0.0070, 0.0069,  ..., 0.0069, 0.0069, 0.0071],
         [0.0069, 0.0070, 0.0069,  ..., 0.0069, 0.0069, 0.0071],
         [0.0069, 0.0070, 0.0069,  ..., 0.0069, 0.0069, 0.0071],
         [0.9792, 0.9791, 0.9792,  ..., 0.9793, 0.9792, 0.9787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2949e-03, 6.1941e-03, 6.1793e-03,  ..., 6.2168e-03,
          6.3751e-03, 6.2321e-03],
         [6.2949e-03, 6.1941e-03, 6.1793e-03,  ..., 6.2168e-03,
          6.3751e-03, 6.2321e-03],
         [6.2949e-03, 6.1941e-03, 6.1793e-03,  ..., 6.2168e-03,
          6.3751e-03, 6.2321e-03],
         [9.8112e-01, 9.8142e-01, 9.8146e-01,  ..., 9.8135e-01,
          9.8087e-01, 9.8130e-01]],
        [[6.3272e-03, 6.6457e-03, 6.2815e-03,  ..., 1.0952e-04,
          6.5849e-03, 6.2230e-03],
         [6.3272e-03, 6.6457e-03, 6.2815e-03,  ..., 1.0952e-04,
          6.5849e-03, 6.2230e-03],
         [6.3272e-03, 6.6457e-03, 6.2815e-03,  ..., 9.9967e-01,
          6.5849e-03, 6.2230e-03],
         [9.8102e-01, 9.8006e-01, 9.8116e-01,  ..., 1.0952e-04,
          9.8025e-01, 9.8133e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 464:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:18:21,365 [Process: 0] Synchronize training processes
2024-08-16 16:18:21,366 [Process: 0] Evaluating...
2024-08-16 16:18:21,368 [Process: 0] EPOCH 464:
2024-08-16 16:18:21,369 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0077, 0.0079,  ..., 0.0077, 0.0077, 0.0080],
         [0.0080, 0.0077, 0.0079,  ..., 0.0077, 0.0077, 0.0080],
         [0.0080, 0.0077, 0.0079,  ..., 0.0077, 0.0077, 0.0080],
         [0.9760, 0.9769, 0.9763,  ..., 0.9770, 0.9768, 0.9761]],
        [[0.0079, 0.0079, 0.0077,  ..., 0.0078, 0.0079, 0.0078],
         [0.0079, 0.0079, 0.0077,  ..., 0.0078, 0.0079, 0.0078],
         [0.0079, 0.0079, 0.0077,  ..., 0.0078, 0.0079, 0.0078],
         [0.9764, 0.9764, 0.9770,  ..., 0.9766, 0.9764, 0.9765]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.7027e-03, 5.9831e-03, 5.9084e-03,  ..., 5.9549e-03,
          1.0711e-02, 5.8646e-03],
         [5.7027e-03, 5.9831e-03, 5.9084e-03,  ..., 5.9549e-03,
          9.0256e-03, 5.8646e-03],
         [5.7027e-03, 5.9831e-03, 5.9084e-03,  ..., 5.9549e-03,
          9.0256e-03, 5.8646e-03],
         [9.8289e-01, 9.8205e-01, 9.8227e-01,  ..., 9.8214e-01,
          9.7124e-01, 9.8241e-01]],
        [[5.7364e-03, 6.1311e-03, 5.7469e-03,  ..., 2.1350e-04,
          5.8134e-03, 5.9884e-03],
         [5.7364e-03, 6.1311e-03, 5.7469e-03,  ..., 2.1350e-04,
          5.8134e-03, 5.9884e-03],
         [5.7364e-03, 6.1311e-03, 5.7469e-03,  ..., 9.9936e-01,
          5.8134e-03, 5.9884e-03],
         [9.8279e-01, 9.8161e-01, 9.8276e-01,  ..., 2.1350e-04,
          9.8256e-01, 9.8203e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 465:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:18:23,433 [Process: 0] Synchronize training processes
2024-08-16 16:18:23,433 [Process: 0] Evaluating...
2024-08-16 16:18:23,435 [Process: 0] EPOCH 465:
2024-08-16 16:18:23,437 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0078, 0.0075,  ..., 0.0076, 0.0079, 0.0075],
         [0.0076, 0.0078, 0.0075,  ..., 0.0076, 0.0079, 0.0075],
         [0.0076, 0.0078, 0.0075,  ..., 0.0076, 0.0079, 0.0075],
         [0.9772, 0.9766, 0.9774,  ..., 0.9772, 0.9764, 0.9775]],
        [[0.0074, 0.0078, 0.0075,  ..., 0.0076, 0.0077, 0.0077],
         [0.0074, 0.0078, 0.0075,  ..., 0.0076, 0.0077, 0.0077],
         [0.0074, 0.0078, 0.0075,  ..., 0.0076, 0.0077, 0.0077],
         [0.9777, 0.9767, 0.9775,  ..., 0.9771, 0.9769, 0.9770]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0056, 0.0054,  ..., 0.0055, 0.0055, 0.0054],
         [0.0055, 0.0056, 0.0054,  ..., 0.0055, 0.0055, 0.0054],
         [0.0055, 0.0056, 0.0054,  ..., 0.0055, 0.0055, 0.0054],
         [0.9834, 0.9832, 0.9837,  ..., 0.9834, 0.9836, 0.9837]],
        [[0.0053, 0.0054, 0.0057,  ..., 0.0020, 0.0056, 0.0054],
         [0.0053, 0.0054, 0.0057,  ..., 0.0020, 0.0056, 0.0054],
         [0.0053, 0.0054, 0.0057,  ..., 0.9941, 0.0056, 0.0054],
         [0.9841, 0.9838, 0.9829,  ..., 0.0020, 0.9831, 0.9837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 466:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:18:25,511 [Process: 0] Synchronize training processes
2024-08-16 16:18:25,512 [Process: 0] Evaluating...
2024-08-16 16:18:25,514 [Process: 0] EPOCH 466:
2024-08-16 16:18:25,516 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0072, 0.0073,  ..., 0.0072, 0.0073, 0.0073],
         [0.0072, 0.0072, 0.0073,  ..., 0.0072, 0.0073, 0.0073],
         [0.0072, 0.0072, 0.0073,  ..., 0.0072, 0.0073, 0.0073],
         [0.9785, 0.9783, 0.9780,  ..., 0.9785, 0.9780, 0.9781]],
        [[0.0072, 0.0071, 0.0074,  ..., 0.0071, 0.0073, 0.0071],
         [0.0072, 0.0071, 0.0074,  ..., 0.0071, 0.0073, 0.0071],
         [0.0072, 0.0071, 0.0074,  ..., 0.0071, 0.0073, 0.0071],
         [0.9784, 0.9787, 0.9777,  ..., 0.9786, 0.9781, 0.9787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.6169e-03, 5.8772e-03, 5.6763e-03,  ..., 5.8479e-03,
          5.5775e-03, 5.7106e-03],
         [5.6169e-03, 5.8772e-03, 5.6763e-03,  ..., 5.8479e-03,
          5.5775e-03, 5.7106e-03],
         [5.6169e-03, 5.8772e-03, 5.6763e-03,  ..., 5.8479e-03,
          5.5775e-03, 5.7106e-03],
         [9.8315e-01, 9.8237e-01, 9.8297e-01,  ..., 9.8246e-01,
          9.8327e-01, 9.8287e-01]],
        [[5.7755e-03, 5.8245e-03, 5.6328e-03,  ..., 9.3140e-04,
          5.3928e-03, 5.6331e-03],
         [5.7755e-03, 5.8245e-03, 5.6328e-03,  ..., 9.3140e-04,
          5.3928e-03, 5.6331e-03],
         [5.7755e-03, 5.8245e-03, 5.6328e-03,  ..., 9.9721e-01,
          5.3928e-03, 5.6331e-03],
         [9.8267e-01, 9.8253e-01, 9.8310e-01,  ..., 9.3140e-04,
          9.8382e-01, 9.8310e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 467:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:18:27,564 [Process: 0] Synchronize training processes
2024-08-16 16:18:27,564 [Process: 0] Evaluating...
2024-08-16 16:18:27,566 [Process: 0] EPOCH 467:
2024-08-16 16:18:27,568 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0069, 0.0069,  ..., 0.0069, 0.0069, 0.0070],
         [0.0070, 0.0069, 0.0069,  ..., 0.0069, 0.0069, 0.0070],
         [0.0070, 0.0069, 0.0069,  ..., 0.0069, 0.0069, 0.0070],
         [0.9789, 0.9794, 0.9792,  ..., 0.9794, 0.9794, 0.9790]],
        [[0.0071, 0.0069, 0.0070,  ..., 0.0071, 0.0072, 0.0071],
         [0.0071, 0.0069, 0.0070,  ..., 0.0071, 0.0072, 0.0071],
         [0.0071, 0.0069, 0.0070,  ..., 0.0071, 0.0072, 0.0071],
         [0.9787, 0.9793, 0.9791,  ..., 0.9786, 0.9785, 0.9788]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0056, 0.0054,  ..., 0.0054, 0.0055, 0.0053],
         [0.0054, 0.0056, 0.0054,  ..., 0.0054, 0.0055, 0.0053],
         [0.0054, 0.0056, 0.0054,  ..., 0.0054, 0.0055, 0.0053],
         [0.9839, 0.9832, 0.9838,  ..., 0.9838, 0.9834, 0.9840]],
        [[0.0053, 0.0055, 0.0055,  ..., 0.0145, 0.0058, 0.0056],
         [0.0053, 0.0055, 0.0055,  ..., 0.0103, 0.0058, 0.0056],
         [0.0053, 0.0055, 0.0055,  ..., 0.9650, 0.0058, 0.0056],
         [0.9840, 0.9834, 0.9834,  ..., 0.0103, 0.9826, 0.9831]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 468:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:18:29,651 [Process: 0] Synchronize training processes
2024-08-16 16:18:29,652 [Process: 0] Evaluating...
2024-08-16 16:18:29,654 [Process: 0] EPOCH 468:
2024-08-16 16:18:29,656 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0071, 0.0070, 0.0070,  ..., 0.0072, 0.0071, 0.0074],
         [0.0071, 0.0070, 0.0070,  ..., 0.0072, 0.0071, 0.0074],
         [0.0071, 0.0070, 0.0070,  ..., 0.0072, 0.0071, 0.0074],
         [0.9787, 0.9789, 0.9791,  ..., 0.9785, 0.9788, 0.9779]],
        [[0.0072, 0.0075, 0.0070,  ..., 0.0072, 0.0073, 0.0073],
         [0.0072, 0.0075, 0.0070,  ..., 0.0072, 0.0073, 0.0073],
         [0.0072, 0.0075, 0.0070,  ..., 0.0072, 0.0073, 0.0073],
         [0.9783, 0.9775, 0.9789,  ..., 0.9784, 0.9780, 0.9780]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.0567e-03, 5.2709e-03, 5.3070e-03,  ..., 5.1826e-03,
          5.3874e-03, 5.1277e-03],
         [5.0567e-03, 5.2709e-03, 5.3070e-03,  ..., 5.1826e-03,
          5.3874e-03, 5.1277e-03],
         [5.0567e-03, 5.2709e-03, 5.3070e-03,  ..., 5.1826e-03,
          5.3874e-03, 5.1277e-03],
         [9.8483e-01, 9.8419e-01, 9.8408e-01,  ..., 9.8445e-01,
          9.8384e-01, 9.8462e-01]],
        [[5.2478e-03, 4.9960e-03, 5.5935e-03,  ..., 4.5600e-07,
          5.5016e-03, 5.2692e-03],
         [5.2478e-03, 4.9960e-03, 5.5935e-03,  ..., 4.5600e-07,
          5.5016e-03, 5.2692e-03],
         [5.2478e-03, 4.9960e-03, 5.5935e-03,  ..., 1.0000e+00,
          5.5016e-03, 5.2692e-03],
         [9.8426e-01, 9.8501e-01, 9.8322e-01,  ..., 4.5600e-07,
          9.8350e-01, 9.8419e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 469:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:18:31,742 [Process: 0] Synchronize training processes
2024-08-16 16:18:31,742 [Process: 0] Evaluating...
2024-08-16 16:18:31,744 [Process: 0] EPOCH 469:
2024-08-16 16:18:31,747 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0069, 0.0069,  ..., 0.0070, 0.0070, 0.0071],
         [0.0072, 0.0069, 0.0069,  ..., 0.0070, 0.0070, 0.0071],
         [0.0072, 0.0069, 0.0069,  ..., 0.0070, 0.0070, 0.0071],
         [0.9785, 0.9794, 0.9793,  ..., 0.9791, 0.9790, 0.9788]],
        [[0.0073, 0.0070, 0.0072,  ..., 0.0069, 0.0071, 0.0069],
         [0.0073, 0.0070, 0.0072,  ..., 0.0069, 0.0071, 0.0069],
         [0.0073, 0.0070, 0.0072,  ..., 0.0069, 0.0071, 0.0069],
         [0.9781, 0.9791, 0.9785,  ..., 0.9793, 0.9786, 0.9792]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.0190e-03, 5.4435e-03, 5.4727e-03,  ..., 5.2585e-03,
          5.2887e-03, 5.5560e-03],
         [5.0190e-03, 5.4435e-03, 5.4727e-03,  ..., 5.2585e-03,
          5.2887e-03, 5.5560e-03],
         [5.0190e-03, 5.4435e-03, 5.4727e-03,  ..., 5.2585e-03,
          5.2887e-03, 5.5560e-03],
         [9.8494e-01, 9.8367e-01, 9.8358e-01,  ..., 9.8422e-01,
          9.8413e-01, 9.8333e-01]],
        [[5.5033e-03, 5.3767e-03, 5.4930e-03,  ..., 5.4796e-06,
          5.2381e-03, 5.5568e-03],
         [5.5033e-03, 5.3767e-03, 5.4930e-03,  ..., 5.4796e-06,
          5.2381e-03, 5.5568e-03],
         [5.5033e-03, 5.3767e-03, 5.4930e-03,  ..., 9.9998e-01,
          5.2381e-03, 5.5568e-03],
         [9.8349e-01, 9.8387e-01, 9.8352e-01,  ..., 5.4796e-06,
          9.8429e-01, 9.8333e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 470:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:18:33,826 [Process: 0] Synchronize training processes
2024-08-16 16:18:33,826 [Process: 0] Evaluating...
2024-08-16 16:18:33,828 [Process: 0] EPOCH 470:
2024-08-16 16:18:33,830 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0068, 0.0068, 0.0067,  ..., 0.0064, 0.0069, 0.0069],
         [0.0068, 0.0068, 0.0067,  ..., 0.0064, 0.0069, 0.0069],
         [0.0068, 0.0068, 0.0067,  ..., 0.0064, 0.0069, 0.0069],
         [0.9797, 0.9797, 0.9800,  ..., 0.9807, 0.9792, 0.9792]],
        [[0.0066, 0.0069, 0.0068,  ..., 0.0069, 0.0075, 0.0069],
         [0.0066, 0.0069, 0.0068,  ..., 0.0069, 0.0075, 0.0069],
         [0.0066, 0.0069, 0.0068,  ..., 0.0069, 0.0075, 0.0069],
         [0.9802, 0.9792, 0.9797,  ..., 0.9792, 0.9775, 0.9793]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.0463e-03, 5.2513e-03, 5.1835e-03,  ..., 4.9865e-03,
          4.9899e-03, 5.2076e-03],
         [5.0463e-03, 5.2513e-03, 5.1835e-03,  ..., 4.9865e-03,
          4.9899e-03, 5.2076e-03],
         [5.0463e-03, 5.2513e-03, 5.1835e-03,  ..., 4.9865e-03,
          4.9899e-03, 5.2076e-03],
         [9.8486e-01, 9.8425e-01, 9.8445e-01,  ..., 9.8504e-01,
          9.8503e-01, 9.8438e-01]],
        [[4.8498e-03, 4.8244e-03, 4.9734e-03,  ..., 2.2635e-06,
          5.1367e-03, 5.3693e-03],
         [4.8498e-03, 4.8244e-03, 4.9734e-03,  ..., 2.2635e-06,
          5.1367e-03, 5.3693e-03],
         [4.8498e-03, 4.8244e-03, 4.9734e-03,  ..., 9.9999e-01,
          5.1367e-03, 5.3693e-03],
         [9.8545e-01, 9.8553e-01, 9.8508e-01,  ..., 2.2635e-06,
          9.8459e-01, 9.8389e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 471:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:18:35,897 [Process: 0] Synchronize training processes
2024-08-16 16:18:35,898 [Process: 0] Evaluating...
2024-08-16 16:18:35,900 [Process: 0] EPOCH 471:
2024-08-16 16:18:35,902 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0044, 0.0039, 0.0037,  ..., 0.0041, 0.0045, 0.0039],
         [0.0044, 0.0040, 0.0038,  ..., 0.0042, 0.0046, 0.0039],
         [0.0044, 0.0039, 0.0037,  ..., 0.0041, 0.0045, 0.0039],
         [0.9869, 0.9882, 0.9888,  ..., 0.9875, 0.9864, 0.9883]],
        [[0.0040, 0.0042, 0.0040,  ..., 0.0043, 0.0043, 0.0046],
         [0.0041, 0.0043, 0.0041,  ..., 0.0043, 0.0043, 0.0045],
         [0.0040, 0.0042, 0.0040,  ..., 0.0043, 0.0043, 0.0044],
         [0.9879, 0.9873, 0.9879,  ..., 0.9871, 0.9870, 0.9865]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.1960e-03, 5.9653e-03, 5.9322e-03,  ..., 5.6943e-03,
          5.3942e-03, 5.9434e-03],
         [6.1960e-03, 5.9653e-03, 5.9322e-03,  ..., 5.6943e-03,
          5.3942e-03, 5.9434e-03],
         [6.1960e-03, 5.9653e-03, 5.9322e-03,  ..., 5.6943e-03,
          5.3942e-03, 5.9434e-03],
         [9.8141e-01, 9.8210e-01, 9.8220e-01,  ..., 9.8292e-01,
          9.8382e-01, 9.8217e-01]],
        [[5.7687e-03, 6.2339e-03, 5.6460e-03,  ..., 4.3557e-07,
          6.0854e-03, 6.0361e-03],
         [5.7687e-03, 6.2339e-03, 5.6460e-03,  ..., 4.3557e-07,
          6.0854e-03, 6.0361e-03],
         [5.7687e-03, 6.2339e-03, 5.6460e-03,  ..., 1.0000e+00,
          6.0854e-03, 6.0361e-03],
         [9.8269e-01, 9.8130e-01, 9.8306e-01,  ..., 4.3557e-07,
          9.8174e-01, 9.8189e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 472:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:18:38,003 [Process: 0] Synchronize training processes
2024-08-16 16:18:38,003 [Process: 0] Evaluating...
2024-08-16 16:18:38,011 [Process: 0] EPOCH 472:
2024-08-16 16:18:38,013 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0071, 0.0066, 0.0070,  ..., 0.0071, 0.0074, 0.0068],
         [0.0070, 0.0066, 0.0070,  ..., 0.0071, 0.0074, 0.0068],
         [0.0070, 0.0066, 0.0070,  ..., 0.0071, 0.0074, 0.0068],
         [0.9790, 0.9803, 0.9790,  ..., 0.9786, 0.9778, 0.9795]],
        [[0.0073, 0.0079, 0.0070,  ..., 0.0071, 0.0080, 0.0072],
         [0.0070, 0.0071, 0.0070,  ..., 0.0071, 0.0072, 0.0072],
         [0.0070, 0.0071, 0.0070,  ..., 0.0071, 0.0072, 0.0072],
         [0.9787, 0.9779, 0.9790,  ..., 0.9787, 0.9777, 0.9784]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8755e-03, 7.3515e-03, 6.6764e-03,  ..., 7.6034e-03,
          7.9420e-03, 6.8843e-03],
         [6.1874e-03, 6.3978e-03, 6.5692e-03,  ..., 6.5509e-03,
          6.7215e-03, 6.5382e-03],
         [6.1874e-03, 6.3978e-03, 6.5692e-03,  ..., 6.5509e-03,
          6.7215e-03, 6.5382e-03],
         [9.8075e-01, 9.7985e-01, 9.8019e-01,  ..., 9.7929e-01,
          9.7862e-01, 9.8004e-01]],
        [[7.5085e-03, 6.8419e-03, 7.3430e-03,  ..., 8.2349e-09,
          7.2946e-03, 8.1298e-03],
         [6.4995e-03, 6.2466e-03, 6.2974e-03,  ..., 4.7659e-10,
          6.3618e-03, 6.9648e-03],
         [6.4995e-03, 6.2466e-03, 6.2974e-03,  ..., 1.0000e+00,
          6.3618e-03, 6.9648e-03],
         [9.7949e-01, 9.8066e-01, 9.8006e-01,  ..., 4.7659e-10,
          9.7998e-01, 9.7794e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 473:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:18:40,072 [Process: 0] Synchronize training processes
2024-08-16 16:18:40,072 [Process: 0] Evaluating...
2024-08-16 16:18:40,074 [Process: 0] EPOCH 473:
2024-08-16 16:18:40,076 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0066, 0.0067, 0.0071,  ..., 0.0067, 0.0088, 0.0081],
         [0.0066, 0.0067, 0.0068,  ..., 0.0065, 0.0073, 0.0069],
         [0.0066, 0.0067, 0.0068,  ..., 0.0065, 0.0073, 0.0069],
         [0.9802, 0.9800, 0.9794,  ..., 0.9802, 0.9765, 0.9780]],
        [[0.0125, 0.0184, 0.0202,  ..., 0.0071, 0.0109, 0.0076],
         [0.0087, 0.0107, 0.0113,  ..., 0.0071, 0.0078, 0.0073],
         [0.0087, 0.0107, 0.0113,  ..., 0.0071, 0.0078, 0.0073],
         [0.9701, 0.9603, 0.9572,  ..., 0.9788, 0.9735, 0.9777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0565e-03, 6.1090e-03, 6.1228e-03,  ..., 6.2937e-03,
          7.4303e-03, 6.6901e-03],
         [6.0292e-03, 6.1090e-03, 6.0030e-03,  ..., 6.1514e-03,
          6.4775e-03, 6.5578e-03],
         [6.0292e-03, 6.1090e-03, 6.0030e-03,  ..., 6.1514e-03,
          6.4775e-03, 6.5578e-03],
         [9.8189e-01, 9.8167e-01, 9.8187e-01,  ..., 9.8140e-01,
          9.7961e-01, 9.8019e-01]],
        [[6.4479e-03, 7.5880e-03, 5.8532e-03,  ..., 8.9297e-10,
          6.1062e-03, 6.6833e-03],
         [6.1198e-03, 6.6764e-03, 5.8408e-03,  ..., 8.9297e-10,
          6.0346e-03, 6.1320e-03],
         [6.1198e-03, 6.6764e-03, 5.8408e-03,  ..., 1.0000e+00,
          6.0346e-03, 6.1320e-03],
         [9.8131e-01, 9.7906e-01, 9.8247e-01,  ..., 8.9297e-10,
          9.8182e-01, 9.8105e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:42,149 [Process: 0] Synchronize training processes
2024-08-16 16:18:42,150 [Process: 0] Evaluating...
2024-08-16 16:18:42,152 [Process: 0] EPOCH 474:
2024-08-16 16:18:42,153 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 474:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0075, 0.0070,  ..., 0.0077, 0.0088, 0.0083],
         [0.0075, 0.0075, 0.0070,  ..., 0.0077, 0.0082, 0.0083],
         [0.0075, 0.0075, 0.0070,  ..., 0.0077, 0.0082, 0.0083],
         [0.9775, 0.9775, 0.9790,  ..., 0.9770, 0.9748, 0.9750]],
        [[0.0074, 0.0084, 0.0092,  ..., 0.0075, 0.0078, 0.0081],
         [0.0074, 0.0081, 0.0087,  ..., 0.0075, 0.0076, 0.0081],
         [0.0074, 0.0081, 0.0087,  ..., 0.0075, 0.0076, 0.0081],
         [0.9778, 0.9754, 0.9734,  ..., 0.9775, 0.9770, 0.9756]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8945e-03, 5.4317e-03, 5.2229e-03,  ..., 5.2976e-03,
          6.4585e-03, 5.8240e-03],
         [5.8945e-03, 5.4317e-03, 5.2229e-03,  ..., 5.2976e-03,
          6.4585e-03, 5.8240e-03],
         [5.8945e-03, 5.4317e-03, 5.2229e-03,  ..., 5.2976e-03,
          6.4585e-03, 5.8240e-03],
         [9.8232e-01, 9.8370e-01, 9.8433e-01,  ..., 9.8411e-01,
          9.8062e-01, 9.8253e-01]],
        [[5.4180e-03, 5.3413e-03, 5.2117e-03,  ..., 8.7981e-06,
          5.7287e-03, 5.3131e-03],
         [5.4180e-03, 5.3413e-03, 5.2117e-03,  ..., 8.7981e-06,
          5.7287e-03, 5.3131e-03],
         [5.4180e-03, 5.3413e-03, 5.2117e-03,  ..., 9.9997e-01,
          5.7287e-03, 5.3131e-03],
         [9.8375e-01, 9.8398e-01, 9.8436e-01,  ..., 8.7981e-06,
          9.8281e-01, 9.8406e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:44,252 [Process: 0] Synchronize training processes
2024-08-16 16:18:44,252 [Process: 0] Evaluating...
2024-08-16 16:18:44,254 [Process: 0] EPOCH 475:
2024-08-16 16:18:44,256 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 475:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0075, 0.0082,  ..., 0.0082, 0.0095, 0.0094],
         [0.0084, 0.0075, 0.0082,  ..., 0.0082, 0.0095, 0.0094],
         [0.0084, 0.0075, 0.0082,  ..., 0.0082, 0.0095, 0.0094],
         [0.9747, 0.9775, 0.9755,  ..., 0.9754, 0.9715, 0.9718]],
        [[0.0089, 0.0079, 0.0086,  ..., 0.0083, 0.0079, 0.0081],
         [0.0087, 0.0079, 0.0086,  ..., 0.0083, 0.0079, 0.0081],
         [0.0087, 0.0079, 0.0086,  ..., 0.0083, 0.0079, 0.0081],
         [0.9736, 0.9764, 0.9742,  ..., 0.9752, 0.9763, 0.9757]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:18:46,346 [Process: 0] Synchronize training processes
2024-08-16 16:18:46,346 [Process: 0] Evaluating...
2024-08-16 16:18:46,348 [Process: 0] EPOCH 476:
2024-08-16 16:18:46,350 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2946e-03, 5.8059e-03, 5.7094e-03,  ..., 5.9413e-03,
          9.9055e-02, 6.1454e-03],
         [5.2946e-03, 5.8059e-03, 5.7094e-03,  ..., 5.9413e-03,
          9.9055e-02, 6.1454e-03],
         [5.2946e-03, 5.8059e-03, 5.7094e-03,  ..., 5.9413e-03,
          7.0284e-01, 6.1454e-03],
         [9.8412e-01, 9.8258e-01, 9.8287e-01,  ..., 9.8218e-01,
          9.9055e-02, 9.8156e-01]],
        [[5.4588e-03, 5.2188e-03, 5.0002e-03,  ..., 2.2363e-04,
          5.5148e-03, 5.9373e-03],
         [5.4588e-03, 5.2188e-03, 5.0002e-03,  ..., 2.2363e-04,
          5.5148e-03, 5.9373e-03],
         [5.4588e-03, 5.2188e-03, 5.0002e-03,  ..., 9.9933e-01,
          5.5148e-03, 5.9373e-03],
         [9.8362e-01, 9.8434e-01, 9.8500e-01,  ..., 2.2363e-04,
          9.8346e-01, 9.8219e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 476:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0087, 0.0080,  ..., 0.0083, 0.0099, 0.0099],
         [0.0080, 0.0087, 0.0080,  ..., 0.0083, 0.0099, 0.0099],
         [0.0080, 0.0087, 0.0080,  ..., 0.0083, 0.0099, 0.0099],
         [0.9761, 0.9739, 0.9760,  ..., 0.9750, 0.9704, 0.9704]],
        [[0.0091, 0.0078, 0.0085,  ..., 0.0080, 0.0079, 0.0077],
         [0.0091, 0.0078, 0.0085,  ..., 0.0080, 0.0079, 0.0077],
         [0.0091, 0.0078, 0.0085,  ..., 0.0080, 0.0079, 0.0077],
         [0.9727, 0.9765, 0.9744,  ..., 0.9760, 0.9762, 0.9768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:48,438 [Process: 0] Synchronize training processes
2024-08-16 16:18:48,439 [Process: 0] Evaluating...
2024-08-16 16:18:48,441 [Process: 0] EPOCH 477:
2024-08-16 16:18:48,443 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.9337e-03, 5.8005e-03, 6.4805e-03,  ..., 6.3698e-03,
          7.2807e-03, 6.3829e-03],
         [5.9337e-03, 5.8005e-03, 6.4805e-03,  ..., 6.3698e-03,
          7.2807e-03, 6.3829e-03],
         [5.9337e-03, 5.8005e-03, 6.4805e-03,  ..., 6.3698e-03,
          7.2807e-03, 6.3829e-03],
         [9.8220e-01, 9.8260e-01, 9.8056e-01,  ..., 9.8089e-01,
          9.7816e-01, 9.8085e-01]],
        [[5.4418e-03, 5.2333e-03, 5.7691e-03,  ..., 2.1564e-06,
          5.9079e-03, 5.5967e-03],
         [5.4418e-03, 5.2333e-03, 5.7691e-03,  ..., 2.1564e-06,
          5.9079e-03, 5.5967e-03],
         [5.4418e-03, 5.2333e-03, 5.7691e-03,  ..., 9.9999e-01,
          5.9079e-03, 5.5967e-03],
         [9.8367e-01, 9.8430e-01, 9.8269e-01,  ..., 2.1564e-06,
          9.8228e-01, 9.8321e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 477:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0081, 0.0080,  ..., 0.0079, 0.0101, 0.0095],
         [0.0083, 0.0081, 0.0080,  ..., 0.0079, 0.0101, 0.0095],
         [0.0083, 0.0081, 0.0080,  ..., 0.0079, 0.0101, 0.0095],
         [0.9750, 0.9758, 0.9759,  ..., 0.9763, 0.9696, 0.9715]],
        [[0.0086, 0.0083, 0.0086,  ..., 0.0078, 0.0075, 0.0073],
         [0.0086, 0.0083, 0.0086,  ..., 0.0078, 0.0075, 0.0073],
         [0.0086, 0.0083, 0.0086,  ..., 0.0078, 0.0075, 0.0073],
         [0.9743, 0.9750, 0.9742,  ..., 0.9767, 0.9774, 0.9780]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:50,533 [Process: 0] Synchronize training processes
2024-08-16 16:18:50,534 [Process: 0] Evaluating...
2024-08-16 16:18:50,535 [Process: 0] EPOCH 478:
2024-08-16 16:18:50,537 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6006e-03, 6.7888e-03, 7.1687e-03,  ..., 5.9446e-03,
          6.3061e-03, 6.1944e-03],
         [6.6006e-03, 6.7888e-03, 7.1687e-03,  ..., 5.9446e-03,
          6.3061e-03, 6.1944e-03],
         [6.6006e-03, 6.7888e-03, 7.1687e-03,  ..., 5.9446e-03,
          6.3061e-03, 6.1944e-03],
         [9.8020e-01, 9.7963e-01, 9.7849e-01,  ..., 9.8217e-01,
          9.8108e-01, 9.8142e-01]],
        [[5.6142e-03, 5.3852e-03, 5.2693e-03,  ..., 1.4374e-06,
          5.6381e-03, 6.2232e-03],
         [5.6142e-03, 5.3852e-03, 5.2693e-03,  ..., 9.5750e-08,
          5.6381e-03, 6.2232e-03],
         [5.6142e-03, 5.3852e-03, 5.2693e-03,  ..., 1.0000e+00,
          5.6381e-03, 6.2232e-03],
         [9.8316e-01, 9.8384e-01, 9.8419e-01,  ..., 9.5750e-08,
          9.8309e-01, 9.8133e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 478:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0072, 0.0075,  ..., 0.0083, 0.0097, 0.0091],
         [0.0081, 0.0072, 0.0075,  ..., 0.0083, 0.0097, 0.0091],
         [0.0081, 0.0072, 0.0075,  ..., 0.0083, 0.0097, 0.0091],
         [0.9757, 0.9784, 0.9774,  ..., 0.9751, 0.9709, 0.9727]],
        [[0.0080, 0.0078, 0.0078,  ..., 0.0081, 0.0081, 0.0072],
         [0.0080, 0.0078, 0.0078,  ..., 0.0081, 0.0081, 0.0072],
         [0.0080, 0.0078, 0.0078,  ..., 0.0081, 0.0081, 0.0072],
         [0.9759, 0.9767, 0.9766,  ..., 0.9758, 0.9756, 0.9785]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:52,632 [Process: 0] Synchronize training processes
2024-08-16 16:18:52,632 [Process: 0] Evaluating...
2024-08-16 16:18:52,634 [Process: 0] EPOCH 479:
2024-08-16 16:18:52,636 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8828e-03, 6.7902e-03, 6.6494e-03,  ..., 6.1855e-03,
          7.7664e-03, 5.7058e-03],
         [6.8828e-03, 6.7902e-03, 6.6494e-03,  ..., 6.1855e-03,
          7.7664e-03, 5.7058e-03],
         [6.8828e-03, 6.7902e-03, 6.6494e-03,  ..., 6.1855e-03,
          7.7664e-03, 5.7058e-03],
         [9.7935e-01, 9.7963e-01, 9.8005e-01,  ..., 9.8144e-01,
          9.7670e-01, 9.8288e-01]],
        [[5.8515e-03, 5.0367e-03, 5.7485e-03,  ..., 1.7572e-04,
          6.0411e-03, 5.9313e-03],
         [5.8515e-03, 5.0367e-03, 5.7485e-03,  ..., 1.7572e-04,
          6.0411e-03, 5.9313e-03],
         [5.8515e-03, 5.0367e-03, 5.7485e-03,  ..., 9.9947e-01,
          6.0411e-03, 5.9313e-03],
         [9.8245e-01, 9.8489e-01, 9.8275e-01,  ..., 1.7572e-04,
          9.8188e-01, 9.8221e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 479:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0071, 0.0081,  ..., 0.0076, 0.0087, 0.0084],
         [0.0073, 0.0071, 0.0081,  ..., 0.0076, 0.0087, 0.0084],
         [0.0073, 0.0071, 0.0081,  ..., 0.0076, 0.0087, 0.0084],
         [0.9781, 0.9786, 0.9757,  ..., 0.9773, 0.9739, 0.9747]],
        [[0.0077, 0.0083, 0.0071,  ..., 0.0096, 0.0074, 0.0070],
         [0.0077, 0.0083, 0.0071,  ..., 0.0096, 0.0074, 0.0070],
         [0.0077, 0.0083, 0.0071,  ..., 0.0096, 0.0074, 0.0070],
         [0.9768, 0.9752, 0.9787,  ..., 0.9713, 0.9779, 0.9791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:54,732 [Process: 0] Synchronize training processes
2024-08-16 16:18:54,733 [Process: 0] Evaluating...
2024-08-16 16:18:54,735 [Process: 0] EPOCH 480:
2024-08-16 16:18:54,736 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3154e-03, 6.8939e-03, 5.4195e-03,  ..., 6.2970e-03,
          7.1894e-03, 6.6207e-03],
         [5.3154e-03, 6.8939e-03, 5.4195e-03,  ..., 6.2970e-03,
          7.1894e-03, 6.6207e-03],
         [5.3154e-03, 6.8939e-03, 5.4195e-03,  ..., 6.2970e-03,
          7.1894e-03, 6.6207e-03],
         [9.8405e-01, 9.7932e-01, 9.8374e-01,  ..., 9.8111e-01,
          9.7843e-01, 9.8014e-01]],
        [[5.7985e-03, 6.0659e-03, 4.9398e-03,  ..., 1.0025e-04,
          5.5925e-03, 5.3856e-03],
         [5.7985e-03, 6.0659e-03, 4.9398e-03,  ..., 5.4913e-05,
          5.5925e-03, 5.3856e-03],
         [5.7985e-03, 6.0659e-03, 4.9398e-03,  ..., 9.9979e-01,
          5.5925e-03, 5.3856e-03],
         [9.8260e-01, 9.8180e-01, 9.8518e-01,  ..., 5.4913e-05,
          9.8322e-01, 9.8384e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 480:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0068, 0.0072,  ..., 0.0070, 0.0084, 0.0074],
         [0.0073, 0.0068, 0.0072,  ..., 0.0070, 0.0084, 0.0074],
         [0.0073, 0.0068, 0.0072,  ..., 0.0070, 0.0084, 0.0074],
         [0.9781, 0.9796, 0.9785,  ..., 0.9791, 0.9749, 0.9778]],
        [[0.0068, 0.0055, 0.0067,  ..., 0.0114, 0.0073, 0.0059],
         [0.0068, 0.0055, 0.0067,  ..., 0.0114, 0.0073, 0.0059],
         [0.0068, 0.0055, 0.0067,  ..., 0.0114, 0.0073, 0.0059],
         [0.9797, 0.9834, 0.9798,  ..., 0.9659, 0.9780, 0.9822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:56,812 [Process: 0] Synchronize training processes
2024-08-16 16:18:56,813 [Process: 0] Evaluating...
2024-08-16 16:18:56,815 [Process: 0] EPOCH 481:
2024-08-16 16:18:56,816 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4606e-03, 5.1913e-03, 5.0523e-03,  ..., 5.1064e-03,
          6.6517e-03, 5.7977e-03],
         [5.4606e-03, 5.1913e-03, 5.0523e-03,  ..., 5.1064e-03,
          6.6517e-03, 5.7977e-03],
         [5.4606e-03, 5.1913e-03, 5.0523e-03,  ..., 5.1064e-03,
          6.6517e-03, 5.7977e-03],
         [9.8362e-01, 9.8443e-01, 9.8484e-01,  ..., 9.8468e-01,
          9.8004e-01, 9.8261e-01]],
        [[4.2049e-03, 5.4347e-03, 4.4277e-03,  ..., 6.7974e-04,
          5.4504e-03, 5.4516e-03],
         [4.2049e-03, 5.4347e-03, 4.4277e-03,  ..., 9.1603e-06,
          5.4504e-03, 5.4516e-03],
         [4.2049e-03, 5.4347e-03, 4.4277e-03,  ..., 9.9930e-01,
          5.4504e-03, 5.4516e-03],
         [9.8739e-01, 9.8370e-01, 9.8672e-01,  ..., 9.1603e-06,
          9.8365e-01, 9.8365e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 481:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0043, 0.0052,  ..., 0.0061, 0.0069, 0.0054],
         [0.0050, 0.0043, 0.0052,  ..., 0.0061, 0.0069, 0.0054],
         [0.0050, 0.0043, 0.0052,  ..., 0.0061, 0.0069, 0.0054],
         [0.9850, 0.9870, 0.9845,  ..., 0.9816, 0.9794, 0.9839]],
        [[0.0055, 0.0048, 0.0048,  ..., 0.0056, 0.0057, 0.0043],
         [0.0055, 0.0048, 0.0048,  ..., 0.0056, 0.0057, 0.0043],
         [0.0055, 0.0048, 0.0048,  ..., 0.0056, 0.0057, 0.0043],
         [0.9836, 0.9855, 0.9857,  ..., 0.9831, 0.9828, 0.9870]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:18:58,900 [Process: 0] Synchronize training processes
2024-08-16 16:18:58,900 [Process: 0] Evaluating...
2024-08-16 16:18:58,909 [Process: 0] EPOCH 482:
2024-08-16 16:18:58,911 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.9391e-03, 4.3437e-03, 4.6168e-03,  ..., 5.9731e-03,
          5.1836e-03, 4.2604e-03],
         [5.9391e-03, 4.3437e-03, 4.6168e-03,  ..., 5.9731e-03,
          5.1836e-03, 4.2604e-03],
         [5.9391e-03, 4.3437e-03, 4.6168e-03,  ..., 5.9731e-03,
          5.1836e-03, 4.2604e-03],
         [9.8218e-01, 9.8697e-01, 9.8615e-01,  ..., 9.8208e-01,
          9.8445e-01, 9.8722e-01]],
        [[5.7445e-03, 6.0993e-03, 4.7696e-03,  ..., 6.7132e-04,
          6.3052e-03, 9.1571e-03],
         [5.7445e-03, 6.0993e-03, 4.7696e-03,  ..., 4.1863e-06,
          6.3052e-03, 9.1571e-03],
         [5.7445e-03, 6.0993e-03, 4.7696e-03,  ..., 9.9932e-01,
          6.3052e-03, 9.1571e-03],
         [9.8277e-01, 9.8170e-01, 9.8569e-01,  ..., 4.1863e-06,
          9.8108e-01, 9.7253e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 482:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0071, 0.0053, 0.0061,  ..., 0.0066, 0.0065, 0.0066],
         [0.0071, 0.0053, 0.0061,  ..., 0.0066, 0.0065, 0.0066],
         [0.0071, 0.0053, 0.0061,  ..., 0.0066, 0.0065, 0.0066],
         [0.9786, 0.9842, 0.9817,  ..., 0.9801, 0.9804, 0.9803]],
        [[0.0061, 0.0063, 0.0047,  ..., 0.0060, 0.0063, 0.0074],
         [0.0061, 0.0063, 0.0047,  ..., 0.0060, 0.0063, 0.0074],
         [0.0061, 0.0063, 0.0047,  ..., 0.0060, 0.0063, 0.0074],
         [0.9817, 0.9811, 0.9858,  ..., 0.9820, 0.9810, 0.9778]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:00,992 [Process: 0] Synchronize training processes
2024-08-16 16:19:00,993 [Process: 0] Evaluating...
2024-08-16 16:19:00,995 [Process: 0] EPOCH 483:
2024-08-16 16:19:00,996 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.6154e-03, 5.5678e-03, 6.7456e-03,  ..., 6.4499e-03,
          5.3536e-03, 4.9047e-03],
         [4.3936e-03, 5.5528e-03, 4.8514e-03,  ..., 4.8417e-03,
          5.3536e-03, 4.5808e-03],
         [4.3868e-03, 5.5528e-03, 4.8514e-03,  ..., 4.8417e-03,
          5.3536e-03, 4.5808e-03],
         [9.8560e-01, 9.8333e-01, 9.8355e-01,  ..., 9.8387e-01,
          9.8394e-01, 9.8593e-01]],
        [[4.4826e-03, 5.3566e-03, 3.9506e-03,  ..., 3.6049e-04,
          1.1025e-02, 1.1753e-02],
         [4.4826e-03, 4.9422e-03, 3.9506e-03,  ..., 3.6049e-04,
          8.7027e-03, 8.9067e-03],
         [4.4826e-03, 4.9422e-03, 3.9506e-03,  ..., 9.9892e-01,
          8.7027e-03, 8.9067e-03],
         [9.8655e-01, 9.8476e-01, 9.8815e-01,  ..., 3.6049e-04,
          9.7157e-01, 9.7043e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 483:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0066, 0.0055, 0.0066,  ..., 0.0076, 0.0061, 0.0082],
         [0.0055, 0.0048, 0.0060,  ..., 0.0067, 0.0055, 0.0070],
         [0.0055, 0.0048, 0.0060,  ..., 0.0067, 0.0055, 0.0070],
         [0.9824, 0.9849, 0.9814,  ..., 0.9790, 0.9828, 0.9777]],
        [[0.0079, 0.0072, 0.0055,  ..., 0.0071, 0.0052, 0.0055],
         [0.0066, 0.0054, 0.0055,  ..., 0.0063, 0.0052, 0.0053],
         [0.0066, 0.0054, 0.0055,  ..., 0.0063, 0.0052, 0.0053],
         [0.9789, 0.9821, 0.9834,  ..., 0.9803, 0.9843, 0.9840]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:03,080 [Process: 0] Synchronize training processes
2024-08-16 16:19:03,081 [Process: 0] Evaluating...
2024-08-16 16:19:03,083 [Process: 0] EPOCH 484:
2024-08-16 16:19:03,085 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.4357e-03, 7.2972e-03, 7.7897e-03,  ..., 6.7983e-03,
          7.2089e-03, 9.5545e-03],
         [7.4357e-03, 7.2972e-03, 7.7897e-03,  ..., 6.7983e-03,
          7.2089e-03, 9.2353e-03],
         [7.4357e-03, 7.2972e-03, 7.7897e-03,  ..., 6.7983e-03,
          7.2089e-03, 9.2353e-03],
         [9.7769e-01, 9.7811e-01, 9.7663e-01,  ..., 9.7961e-01,
          9.7837e-01, 9.7198e-01]],
        [[7.8669e-03, 7.7351e-03, 6.7936e-03,  ..., 5.7821e-11,
          1.0502e-02, 1.1718e-02],
         [7.5122e-03, 7.7351e-03, 6.7514e-03,  ..., 5.7821e-11,
          9.2272e-03, 1.0769e-02],
         [7.5122e-03, 7.7351e-03, 6.7514e-03,  ..., 1.0000e+00,
          9.2272e-03, 1.0769e-02],
         [9.7711e-01, 9.7679e-01, 9.7970e-01,  ..., 5.7821e-11,
          9.7104e-01, 9.6674e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 484:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0052, 0.0051,  ..., 0.0046, 0.2500, 0.1776],
         [0.0061, 0.0052, 0.0051,  ..., 0.0046, 0.2500, 0.1776],
         [0.0061, 0.0052, 0.0051,  ..., 0.0046, 0.2500, 0.1776],
         [0.9818, 0.9845, 0.9846,  ..., 0.9861, 0.2500, 0.4671]],
        [[0.0053, 0.0058, 0.0060,  ..., 0.0058, 0.0071, 0.0058],
         [0.0053, 0.0058, 0.0060,  ..., 0.0058, 0.0071, 0.0058],
         [0.0053, 0.0058, 0.0060,  ..., 0.0058, 0.0071, 0.0058],
         [0.9842, 0.9827, 0.9819,  ..., 0.9826, 0.9786, 0.9826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0084, 0.0087,  ..., 0.0081, 0.0070, 0.0085],
         [0.0084, 0.0084, 0.0087,  ..., 0.0081, 0.0070, 0.0085],
         [0.0084, 0.0084, 0.0087,  ..., 0.0081, 0.0070, 0.0085],
         [0.9748, 0.9749, 0.9739,  ..., 0.9756, 0.9790, 0.9744]],
        [[0.0083, 0.0080, 0.0080,  ..., 0.0181, 0.0071, 0.0068],
         [0.0083, 0.0080, 0.0080,  ..., 0.0181, 0.0071, 0.0068],
         [0.0083, 0.0080, 0.0080,  ..., 0.0181, 0.0071, 0.0068],
         [0.9750, 0.9760, 0.9761,  ..., 0.9458, 0.9786, 0.9797]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 485:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0092, 0.0089,  ..., 0.0078, 0.0095, 0.0088],
         [0.0086, 0.0092, 0.0089,  ..., 0.0078, 0.0095, 0.0088],
         [0.0086, 0.0092, 0.0089,  ..., 0.0078, 0.0095, 0.0088],
         [0.9742, 0.9725, 0.9734,  ..., 0.9767, 0.9715, 0.9736]],
        [[0.0089, 0.0086, 0.0094,  ..., 0.0093, 0.0091, 0.0089],
         [0.0089, 0.0086, 0.0094,  ..., 0.0093, 0.0091, 0.0089],
         [0.0089, 0.0086, 0.0094,  ..., 0.0093, 0.0091, 0.0089],
         [0.9734, 0.9741, 0.9719,  ..., 0.9722, 0.9728, 0.9734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:05,215 [Process: 0] Synchronize training processes
2024-08-16 16:19:05,215 [Process: 0] Evaluating...
2024-08-16 16:19:05,217 [Process: 0] EPOCH 485:
2024-08-16 16:19:05,219 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2282e-03, 7.8739e-03, 8.2498e-03,  ..., 9.9993e-01,
          8.0386e-03, 8.2428e-03],
         [8.2282e-03, 7.8739e-03, 8.2498e-03,  ..., 2.1958e-05,
          8.0386e-03, 8.2428e-03],
         [8.2282e-03, 7.8739e-03, 8.2498e-03,  ..., 2.1958e-05,
          8.0386e-03, 8.2428e-03],
         [9.7532e-01, 9.7638e-01, 9.7525e-01,  ..., 2.1958e-05,
          9.7588e-01, 9.7527e-01]],
        [[7.2760e-03, 7.4667e-03, 7.7463e-03,  ..., 9.2040e-03,
          7.3769e-03, 6.5526e-03],
         [7.2760e-03, 7.4667e-03, 7.7463e-03,  ..., 9.2040e-03,
          7.3769e-03, 6.5526e-03],
         [7.2760e-03, 7.4667e-03, 7.7463e-03,  ..., 9.2040e-03,
          7.3769e-03, 6.5526e-03],
         [9.7817e-01, 9.7760e-01, 9.7676e-01,  ..., 9.7239e-01,
          9.7787e-01, 9.8034e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 486:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:19:07,334 [Process: 0] Synchronize training processes
2024-08-16 16:19:07,334 [Process: 0] Evaluating...
2024-08-16 16:19:07,336 [Process: 0] EPOCH 486:
2024-08-16 16:19:07,338 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0086, 0.0090,  ..., 0.0100, 0.0106, 0.0092],
         [0.0099, 0.0086, 0.0090,  ..., 0.0091, 0.0095, 0.0086],
         [0.0099, 0.0086, 0.0090,  ..., 0.0091, 0.0095, 0.0086],
         [0.9704, 0.9741, 0.9729,  ..., 0.9718, 0.9703, 0.9735]],
        [[0.0107, 0.0104, 0.0102,  ..., 0.0113, 0.0102, 0.0105],
         [0.0100, 0.0095, 0.0092,  ..., 0.0105, 0.0093, 0.0090],
         [0.0100, 0.0095, 0.0092,  ..., 0.0105, 0.0093, 0.0090],
         [0.9694, 0.9707, 0.9713,  ..., 0.9678, 0.9713, 0.9715]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0094, 0.0095,  ..., 0.0093, 0.0087, 0.0100],
         [0.0095, 0.0094, 0.0095,  ..., 0.0093, 0.0087, 0.0100],
         [0.0113, 0.0114, 0.0115,  ..., 0.0112, 0.0106, 0.0124],
         [0.9696, 0.9698, 0.9696,  ..., 0.9702, 0.9720, 0.9675]],
        [[0.0092, 0.0090, 0.0095,  ..., 0.0115, 0.0087, 0.0084],
         [0.0092, 0.0090, 0.0095,  ..., 0.0115, 0.0087, 0.0084],
         [0.0109, 0.0110, 0.0116,  ..., 0.0156, 0.0103, 0.0097],
         [0.9706, 0.9710, 0.9694,  ..., 0.9614, 0.9723, 0.9735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 487:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:19:09,538 [Process: 0] Synchronize training processes
2024-08-16 16:19:09,539 [Process: 0] Evaluating...
2024-08-16 16:19:09,541 [Process: 0] EPOCH 487:
2024-08-16 16:19:09,543 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0070, 0.0078,  ..., 0.0083, 0.0081, 0.0075],
         [0.0070, 0.0070, 0.0078,  ..., 0.0082, 0.0074, 0.0072],
         [0.0088, 0.0089, 0.0098,  ..., 0.0107, 0.0095, 0.0090],
         [0.9770, 0.9770, 0.9747,  ..., 0.9728, 0.9751, 0.9764]],
        [[0.0082, 0.0082, 0.0084,  ..., 0.2500, 0.0083, 0.0084],
         [0.0082, 0.0082, 0.0084,  ..., 0.2500, 0.0083, 0.0084],
         [0.0103, 0.0103, 0.0110,  ..., 0.2500, 0.0104, 0.0106],
         [0.9733, 0.9734, 0.9722,  ..., 0.2500, 0.9730, 0.9725]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0098, 0.0095,  ..., 0.0092, 0.0097, 0.0092],
         [0.0084, 0.0089, 0.0082,  ..., 0.0075, 0.0081, 0.0078],
         [0.0110, 0.0115, 0.0109,  ..., 0.0100, 0.0110, 0.0100],
         [0.9712, 0.9699, 0.9714,  ..., 0.9732, 0.9711, 0.9730]],
        [[0.0085, 0.0084, 0.0086,  ..., 0.0099, 0.0082, 0.0086],
         [0.0072, 0.0073, 0.0073,  ..., 0.0089, 0.0071, 0.0073],
         [0.0093, 0.0093, 0.0093,  ..., 0.0122, 0.0092, 0.0095],
         [0.9749, 0.9750, 0.9748,  ..., 0.9689, 0.9755, 0.9745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 488:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:19:11,738 [Process: 0] Synchronize training processes
2024-08-16 16:19:11,738 [Process: 0] Evaluating...
2024-08-16 16:19:11,740 [Process: 0] EPOCH 488:
2024-08-16 16:19:11,742 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0110, 0.0105, 0.0107,  ..., 0.0106, 0.0112, 0.0111],
         [0.0102, 0.0093, 0.0095,  ..., 0.0097, 0.0104, 0.0104],
         [0.0127, 0.0112, 0.0116,  ..., 0.0119, 0.0127, 0.0129],
         [0.9662, 0.9690, 0.9682,  ..., 0.9678, 0.9657, 0.9657]],
        [[0.0109, 0.0111, 0.0104,  ..., 0.0113, 0.0107, 0.0109],
         [0.0101, 0.0106, 0.0096,  ..., 0.0110, 0.0097, 0.0101],
         [0.0124, 0.0130, 0.0117,  ..., 0.0134, 0.0117, 0.0124],
         [0.9666, 0.9653, 0.9684,  ..., 0.9642, 0.9679, 0.9665]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0108, 0.0112, 0.0111,  ..., 0.0111, 0.0107, 0.0112],
         [0.0094, 0.0098, 0.0098,  ..., 0.0099, 0.0092, 0.0100],
         [0.0122, 0.0127, 0.0130,  ..., 0.0130, 0.0120, 0.0132],
         [0.9675, 0.9663, 0.9661,  ..., 0.9660, 0.9680, 0.9655]],
        [[0.0114, 0.0113, 0.0109,  ..., 0.0115, 0.0110, 0.0112],
         [0.0103, 0.0102, 0.0096,  ..., 0.0105, 0.0095, 0.0099],
         [0.0136, 0.0134, 0.0127,  ..., 0.0138, 0.0124, 0.0128],
         [0.9647, 0.9651, 0.9668,  ..., 0.9641, 0.9672, 0.9661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 489:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:19:13,861 [Process: 0] Synchronize training processes
2024-08-16 16:19:13,862 [Process: 0] Evaluating...
2024-08-16 16:19:13,864 [Process: 0] EPOCH 489:
2024-08-16 16:19:13,866 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0114, 0.0111, 0.0111,  ..., 0.0113, 0.0113, 0.0112],
         [0.0114, 0.0111, 0.0111,  ..., 0.0113, 0.0113, 0.0112],
         [0.0124, 0.0121, 0.0121,  ..., 0.0123, 0.0123, 0.0121],
         [0.9647, 0.9657, 0.9657,  ..., 0.9651, 0.9651, 0.9656]],
        [[0.0114, 0.0108, 0.0116,  ..., 0.0108, 0.0108, 0.0110],
         [0.0114, 0.0108, 0.0116,  ..., 0.0108, 0.0108, 0.0110],
         [0.0122, 0.0117, 0.0125,  ..., 0.0116, 0.0117, 0.0119],
         [0.9651, 0.9666, 0.9643,  ..., 0.9669, 0.9667, 0.9661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0103, 0.0102, 0.0099,  ..., 0.0104, 0.0100, 0.0100],
         [0.0095, 0.0092, 0.0089,  ..., 0.0096, 0.0091, 0.0091],
         [0.0120, 0.0116, 0.0112,  ..., 0.0121, 0.0115, 0.0114],
         [0.9682, 0.9689, 0.9701,  ..., 0.9680, 0.9695, 0.9694]],
        [[0.0100, 0.0104, 0.0104,  ..., 0.0110, 0.0101, 0.0101],
         [0.0090, 0.0096, 0.0097,  ..., 0.0106, 0.0091, 0.0091],
         [0.0114, 0.0121, 0.0121,  ..., 0.0138, 0.0116, 0.0114],
         [0.9696, 0.9679, 0.9678,  ..., 0.9647, 0.9692, 0.9695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 490:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:19:16,035 [Process: 0] Synchronize training processes
2024-08-16 16:19:16,035 [Process: 0] Evaluating...
2024-08-16 16:19:16,037 [Process: 0] EPOCH 490:
2024-08-16 16:19:16,039 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0106, 0.0101, 0.0101,  ..., 0.0098, 0.0102, 0.0106],
         [0.0106, 0.0101, 0.0101,  ..., 0.0098, 0.0102, 0.0106],
         [0.0113, 0.0108, 0.0107,  ..., 0.0105, 0.0109, 0.0114],
         [0.9674, 0.9689, 0.9691,  ..., 0.9699, 0.9687, 0.9674]],
        [[0.0117, 0.2500, 0.0137,  ..., 0.0099, 0.0104, 0.0094],
         [0.0117, 0.2500, 0.0137,  ..., 0.0099, 0.0104, 0.0094],
         [0.0123, 0.2500, 0.0137,  ..., 0.0105, 0.0110, 0.0100],
         [0.9642, 0.2500, 0.9588,  ..., 0.9697, 0.9682, 0.9712]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0100, 0.0099, 0.0099,  ..., 0.0099, 0.0102, 0.0102],
         [0.0099, 0.0095, 0.0096,  ..., 0.0096, 0.0102, 0.0100],
         [0.0116, 0.0112, 0.0113,  ..., 0.0112, 0.0119, 0.0117],
         [0.9685, 0.9694, 0.9692,  ..., 0.9693, 0.9676, 0.9682]],
        [[0.0103, 0.0103, 0.0102,  ..., 0.0111, 0.0099, 0.0101],
         [0.0102, 0.0103, 0.0101,  ..., 0.0111, 0.0096, 0.0098],
         [0.0120, 0.0121, 0.0119,  ..., 0.0132, 0.0113, 0.0116],
         [0.9676, 0.9673, 0.9678,  ..., 0.9647, 0.9693, 0.9685]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 491:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:19:18,133 [Process: 0] Synchronize training processes
2024-08-16 16:19:18,133 [Process: 0] Evaluating...
2024-08-16 16:19:18,135 [Process: 0] EPOCH 491:
2024-08-16 16:19:18,137 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0088, 0.0086,  ..., 0.0082, 0.0144, 0.0084],
         [0.0075, 0.0086, 0.0084,  ..., 0.0076, 0.0144, 0.0079],
         [0.0081, 0.0095, 0.0091,  ..., 0.0084, 0.0144, 0.0086],
         [0.9764, 0.9731, 0.9739,  ..., 0.9759, 0.9568, 0.9752]],
        [[0.0082, 0.0082, 0.0078,  ..., 0.0080, 0.0077, 0.0083],
         [0.0078, 0.0078, 0.0073,  ..., 0.0077, 0.0071, 0.0080],
         [0.0085, 0.0083, 0.0079,  ..., 0.0084, 0.0076, 0.0088],
         [0.9755, 0.9757, 0.9771,  ..., 0.9758, 0.9775, 0.9749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0100, 0.0094, 0.0098,  ..., 0.0095, 0.0106, 0.0100],
         [0.0100, 0.0094, 0.0098,  ..., 0.0095, 0.0106, 0.0100],
         [0.0109, 0.0103, 0.0107,  ..., 0.0103, 0.0116, 0.0109],
         [0.9691, 0.9710, 0.9696,  ..., 0.9708, 0.9671, 0.9691]],
        [[0.0103, 0.0103, 0.0099,  ..., 0.0114, 0.0104, 0.0108],
         [0.0103, 0.0103, 0.0099,  ..., 0.0114, 0.0104, 0.0108],
         [0.0112, 0.0112, 0.0108,  ..., 0.0129, 0.0113, 0.0118],
         [0.9681, 0.9681, 0.9693,  ..., 0.9642, 0.9680, 0.9667]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:20,261 [Process: 0] Synchronize training processes
2024-08-16 16:19:20,261 [Process: 0] Evaluating...
2024-08-16 16:19:20,276 [Process: 0] EPOCH 492:
2024-08-16 16:19:20,278 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 492:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0133, 0.0136, 0.0136,  ..., 0.0118, 0.0129, 0.0121],
         [0.0133, 0.0136, 0.0136,  ..., 0.0118, 0.0129, 0.0121],
         [0.0133, 0.0136, 0.0136,  ..., 0.0118, 0.0129, 0.0121],
         [0.9601, 0.9591, 0.9593,  ..., 0.9647, 0.9614, 0.9636]],
        [[0.0119, 0.0123, 0.0127,  ..., 0.0116, 0.0108, 0.0115],
         [0.0119, 0.0123, 0.0127,  ..., 0.0116, 0.0108, 0.0115],
         [0.0119, 0.0123, 0.0127,  ..., 0.0116, 0.0108, 0.0115],
         [0.9642, 0.9632, 0.9619,  ..., 0.9651, 0.9677, 0.9655]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0100, 0.0099, 0.0094,  ..., 0.0095, 0.0094, 0.0099],
         [0.0100, 0.0099, 0.0094,  ..., 0.0095, 0.0094, 0.0099],
         [0.0108, 0.0106, 0.0100,  ..., 0.0102, 0.0101, 0.0107],
         [0.9692, 0.9696, 0.9712,  ..., 0.9707, 0.9710, 0.9696]],
        [[0.0102, 0.0108, 0.0108,  ..., 0.0117, 0.0099, 0.0098],
         [0.0102, 0.0108, 0.0108,  ..., 0.0117, 0.0099, 0.0098],
         [0.0109, 0.0116, 0.0115,  ..., 0.0131, 0.0106, 0.0105],
         [0.9688, 0.9667, 0.9669,  ..., 0.9635, 0.9695, 0.9699]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:22,395 [Process: 0] Synchronize training processes
2024-08-16 16:19:22,395 [Process: 0] Evaluating...
2024-08-16 16:19:22,397 [Process: 0] EPOCH 493:
2024-08-16 16:19:22,399 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 493:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0134, 0.0142, 0.0184,  ..., 0.0114, 0.0105, 0.0111],
         [0.0134, 0.0142, 0.0184,  ..., 0.0114, 0.0105, 0.0111],
         [0.0134, 0.0142, 0.0184,  ..., 0.0114, 0.0105, 0.0111],
         [0.9598, 0.9574, 0.9449,  ..., 0.9659, 0.9684, 0.9666]],
        [[0.0102, 0.0116, 0.0104,  ..., 0.0115, 0.0117, 0.0117],
         [0.0102, 0.0116, 0.0104,  ..., 0.0115, 0.0117, 0.0117],
         [0.0102, 0.0116, 0.0104,  ..., 0.0115, 0.0117, 0.0117],
         [0.9694, 0.9651, 0.9688,  ..., 0.9654, 0.9648, 0.9650]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:19:24,477 [Process: 0] Synchronize training processes
2024-08-16 16:19:24,478 [Process: 0] Evaluating...
2024-08-16 16:19:24,480 [Process: 0] EPOCH 494:
2024-08-16 16:19:24,481 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0086, 0.0089,  ..., 0.0088, 0.0085, 0.0085],
         [0.0087, 0.0086, 0.0089,  ..., 0.0088, 0.0085, 0.0085],
         [0.0090, 0.0089, 0.0092,  ..., 0.0092, 0.0089, 0.0087],
         [0.9736, 0.9739, 0.9730,  ..., 0.9732, 0.9741, 0.9743]],
        [[0.0087, 0.0095, 0.0084,  ..., 0.0114, 0.0102, 0.0097],
         [0.0087, 0.0095, 0.0084,  ..., 0.0114, 0.0102, 0.0097],
         [0.0090, 0.0098, 0.0087,  ..., 0.0118, 0.0105, 0.0100],
         [0.9735, 0.9712, 0.9745,  ..., 0.9653, 0.9691, 0.9707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 494:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0226, 0.0164, 0.0225,  ..., 0.0111, 0.0101, 0.0077],
         [0.0226, 0.0164, 0.0225,  ..., 0.0111, 0.0101, 0.0077],
         [0.0226, 0.0164, 0.0225,  ..., 0.0111, 0.0101, 0.0077],
         [0.9322, 0.9508, 0.9325,  ..., 0.9667, 0.9696, 0.9768]],
        [[0.0092, 0.0092, 0.0090,  ..., 0.0097, 0.0085, 0.0073],
         [0.0092, 0.0092, 0.0090,  ..., 0.0097, 0.0085, 0.0073],
         [0.0092, 0.0092, 0.0090,  ..., 0.0097, 0.0085, 0.0073],
         [0.9725, 0.9724, 0.9730,  ..., 0.9709, 0.9745, 0.9781]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:26,571 [Process: 0] Synchronize training processes
2024-08-16 16:19:26,571 [Process: 0] Evaluating...
2024-08-16 16:19:26,573 [Process: 0] EPOCH 495:
2024-08-16 16:19:26,575 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0081, 0.0080,  ..., 0.0072, 0.0085, 0.0076],
         [0.0078, 0.0081, 0.0080,  ..., 0.0070, 0.0085, 0.0076],
         [0.0079, 0.0082, 0.0080,  ..., 0.0072, 0.0086, 0.0078],
         [0.9765, 0.9756, 0.9760,  ..., 0.9786, 0.9744, 0.9769]],
        [[0.0083, 0.0082, 0.0096,  ..., 0.0113, 0.0087, 0.0083],
         [0.0083, 0.0082, 0.0096,  ..., 0.0113, 0.0087, 0.0083],
         [0.0085, 0.0083, 0.0099,  ..., 0.0118, 0.0090, 0.0085],
         [0.9750, 0.9754, 0.9708,  ..., 0.9655, 0.9736, 0.9748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 495:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0068, 0.0084, 0.0395,  ..., 0.0073, 0.0071, 0.0065],
         [0.0068, 0.0084, 0.0395,  ..., 0.0073, 0.0071, 0.0065],
         [0.0068, 0.0084, 0.0395,  ..., 0.0073, 0.0071, 0.0065],
         [0.9795, 0.9748, 0.8815,  ..., 0.9781, 0.9788, 0.9804]],
        [[0.0072, 0.0090, 0.0075,  ..., 0.0074, 0.0085, 0.0063],
         [0.0072, 0.0090, 0.0075,  ..., 0.0074, 0.0085, 0.0063],
         [0.0072, 0.0090, 0.0075,  ..., 0.0074, 0.0085, 0.0063],
         [0.9784, 0.9731, 0.9774,  ..., 0.9779, 0.9746, 0.9812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:28,672 [Process: 0] Synchronize training processes
2024-08-16 16:19:28,672 [Process: 0] Evaluating...
2024-08-16 16:19:28,674 [Process: 0] EPOCH 496:
2024-08-16 16:19:28,676 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0078, 0.0065,  ..., 0.0075, 0.0085, 0.0076],
         [0.0084, 0.0078, 0.0062,  ..., 0.0075, 0.0085, 0.0076],
         [0.0084, 0.0078, 0.0062,  ..., 0.0075, 0.0085, 0.0076],
         [0.9747, 0.9765, 0.9812,  ..., 0.9775, 0.9746, 0.9771]],
        [[0.0103, 0.0088, 0.0092,  ..., 0.0122, 0.0081, 0.0084],
         [0.0103, 0.0088, 0.0092,  ..., 0.0122, 0.0081, 0.0084],
         [0.0103, 0.0088, 0.0092,  ..., 0.0122, 0.0081, 0.0084],
         [0.9691, 0.9735, 0.9725,  ..., 0.9635, 0.9756, 0.9747]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 496:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0091, 0.0092,  ..., 0.0091, 0.0106, 0.0105],
         [0.0091, 0.0091, 0.0092,  ..., 0.0091, 0.0106, 0.0105],
         [0.0091, 0.0091, 0.0092,  ..., 0.0091, 0.0106, 0.0105],
         [0.9727, 0.9728, 0.9724,  ..., 0.9726, 0.9681, 0.9684]],
        [[0.0077, 0.0081, 0.0098,  ..., 0.0194, 0.0100, 0.0091],
         [0.0077, 0.0081, 0.0098,  ..., 0.0194, 0.0100, 0.0091],
         [0.0077, 0.0081, 0.0098,  ..., 0.0194, 0.0100, 0.0091],
         [0.9770, 0.9756, 0.9707,  ..., 0.9419, 0.9699, 0.9728]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:30,774 [Process: 0] Synchronize training processes
2024-08-16 16:19:30,774 [Process: 0] Evaluating...
2024-08-16 16:19:30,776 [Process: 0] EPOCH 497:
2024-08-16 16:19:30,778 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0091, 0.0080,  ..., 0.0115, 0.0084, 0.0076],
         [0.0088, 0.0091, 0.0077,  ..., 0.0115, 0.0083, 0.0072],
         [0.0088, 0.0091, 0.0077,  ..., 0.0115, 0.0083, 0.0072],
         [0.9735, 0.9727, 0.9765,  ..., 0.9656, 0.9749, 0.9779]],
        [[0.0114, 0.0108, 0.0092,  ..., 0.0133, 0.0083, 0.0082],
         [0.0114, 0.0108, 0.0092,  ..., 0.0133, 0.0081, 0.0080],
         [0.0114, 0.0108, 0.0092,  ..., 0.0133, 0.0081, 0.0080],
         [0.9658, 0.9676, 0.9724,  ..., 0.9600, 0.9754, 0.9758]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 497:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0117, 0.0115, 0.0144,  ..., 0.0117, 0.0120, 0.0112],
         [0.0117, 0.0115, 0.0144,  ..., 0.0117, 0.0120, 0.0112],
         [0.0117, 0.0115, 0.0144,  ..., 0.0117, 0.0120, 0.0112],
         [0.9649, 0.9655, 0.9569,  ..., 0.9650, 0.9639, 0.9664]],
        [[0.0107, 0.0109, 0.0095,  ..., 0.0109, 0.0122, 0.0103],
         [0.0107, 0.0109, 0.0095,  ..., 0.0109, 0.0122, 0.0103],
         [0.0107, 0.0109, 0.0095,  ..., 0.0109, 0.0122, 0.0103],
         [0.9678, 0.9673, 0.9715,  ..., 0.9674, 0.9633, 0.9692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:32,864 [Process: 0] Synchronize training processes
2024-08-16 16:19:32,864 [Process: 0] Evaluating...
2024-08-16 16:19:32,866 [Process: 0] EPOCH 498:
2024-08-16 16:19:32,868 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0102, 0.0095,  ..., 0.0096, 0.0087, 0.0105],
         [0.0087, 0.0102, 0.0093,  ..., 0.0095, 0.0081, 0.0105],
         [0.0087, 0.0102, 0.0093,  ..., 0.0095, 0.0081, 0.0105],
         [0.9735, 0.9695, 0.9718,  ..., 0.9715, 0.9752, 0.9685]],
        [[0.0113, 0.0110, 0.0099,  ..., 0.0143, 0.0100, 0.0100],
         [0.0113, 0.0110, 0.0099,  ..., 0.0143, 0.0100, 0.0100],
         [0.0113, 0.0110, 0.0099,  ..., 0.0143, 0.0100, 0.0100],
         [0.9661, 0.9670, 0.9703,  ..., 0.9572, 0.9701, 0.9700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 498:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0102, 0.0093,  ..., 0.0118, 0.0103, 0.0098],
         [0.0085, 0.0102, 0.0093,  ..., 0.0118, 0.0103, 0.0098],
         [0.0085, 0.0102, 0.0093,  ..., 0.0118, 0.0103, 0.0098],
         [0.9744, 0.9693, 0.9720,  ..., 0.9645, 0.9692, 0.9707]],
        [[0.0133, 0.0130, 0.0124,  ..., 0.0116, 0.0135, 0.0140],
         [0.0133, 0.0130, 0.0124,  ..., 0.0116, 0.0135, 0.0140],
         [0.0133, 0.0130, 0.0124,  ..., 0.0116, 0.0135, 0.0140],
         [0.9602, 0.9609, 0.9628,  ..., 0.9653, 0.9596, 0.9580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:34,948 [Process: 0] Synchronize training processes
2024-08-16 16:19:34,948 [Process: 0] Evaluating...
2024-08-16 16:19:34,950 [Process: 0] EPOCH 499:
2024-08-16 16:19:34,952 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.0116, 0.0094,  ..., 0.0087, 0.0109, 0.0100],
         [0.0102, 0.0116, 0.0094,  ..., 0.0087, 0.0109, 0.0100],
         [0.0102, 0.0116, 0.0094,  ..., 0.0087, 0.0109, 0.0100],
         [0.9693, 0.9651, 0.9718,  ..., 0.9739, 0.9674, 0.9699]],
        [[0.0095, 0.0110, 0.0109,  ..., 0.0155, 0.0094, 0.0088],
         [0.0095, 0.0110, 0.0109,  ..., 0.0155, 0.0094, 0.0088],
         [0.0095, 0.0110, 0.0109,  ..., 0.0155, 0.0094, 0.0088],
         [0.9715, 0.9670, 0.9672,  ..., 0.9534, 0.9718, 0.9737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 499:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0103, 0.0099,  ..., 0.0106, 0.0113, 0.0097],
         [0.0096, 0.0103, 0.0099,  ..., 0.0106, 0.0113, 0.0097],
         [0.0096, 0.0103, 0.0099,  ..., 0.0106, 0.0113, 0.0097],
         [0.9713, 0.9690, 0.9703,  ..., 0.9681, 0.9660, 0.9709]],
        [[0.0160, 0.0156, 0.0125,  ..., 0.0126, 0.0123, 0.0147],
         [0.0160, 0.0156, 0.0125,  ..., 0.0126, 0.0123, 0.0147],
         [0.0160, 0.0156, 0.0125,  ..., 0.0126, 0.0123, 0.0147],
         [0.9520, 0.9531, 0.9625,  ..., 0.9621, 0.9632, 0.9560]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:37,018 [Process: 0] Synchronize training processes
2024-08-16 16:19:37,018 [Process: 0] Evaluating...
2024-08-16 16:19:37,020 [Process: 0] EPOCH 500:
2024-08-16 16:19:37,022 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0096, 0.0108,  ..., 0.0085, 0.0088, 0.0099],
         [0.0095, 0.0096, 0.0108,  ..., 0.0085, 0.0088, 0.0099],
         [0.0095, 0.0096, 0.0108,  ..., 0.0085, 0.0088, 0.0099],
         [0.9714, 0.9712, 0.9675,  ..., 0.9745, 0.9735, 0.9703]],
        [[0.0089, 0.0107, 0.0090,  ..., 0.0146, 0.0105, 0.0103],
         [0.0089, 0.0107, 0.0090,  ..., 0.0146, 0.0105, 0.0103],
         [0.0089, 0.0107, 0.0090,  ..., 0.0146, 0.0105, 0.0103],
         [0.9734, 0.9678, 0.9730,  ..., 0.9562, 0.9685, 0.9690]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 500:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0076, 0.0091,  ..., 0.0087, 0.0089, 0.0081],
         [0.0096, 0.0076, 0.0091,  ..., 0.0087, 0.0089, 0.0081],
         [0.0096, 0.0076, 0.0091,  ..., 0.0087, 0.0089, 0.0081],
         [0.9711, 0.9771, 0.9727,  ..., 0.9739, 0.9732, 0.9756]],
        [[0.2500, 0.2500, 0.0092,  ..., 0.0089, 0.0088, 0.0080],
         [0.2500, 0.2500, 0.0092,  ..., 0.0089, 0.0088, 0.0080],
         [0.2500, 0.2500, 0.0092,  ..., 0.0089, 0.0088, 0.0080],
         [0.2500, 0.2500, 0.9723,  ..., 0.9734, 0.9736, 0.9759]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:39,120 [Process: 0] Synchronize training processes
2024-08-16 16:19:39,121 [Process: 0] Evaluating...
2024-08-16 16:19:39,123 [Process: 0] EPOCH 501:
2024-08-16 16:19:39,125 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.0077, 0.0069,  ..., 0.0097, 0.0086, 0.0086],
         [0.0065, 0.0077, 0.0069,  ..., 0.0097, 0.0086, 0.0086],
         [0.0065, 0.0077, 0.0069,  ..., 0.0097, 0.0086, 0.0086],
         [0.9804, 0.9768, 0.9794,  ..., 0.9710, 0.9742, 0.9741]],
        [[0.0107, 0.0089, 0.0089,  ..., 0.0167, 0.0092, 0.0092],
         [0.0107, 0.0089, 0.0089,  ..., 0.0167, 0.0092, 0.0092],
         [0.0107, 0.0089, 0.0089,  ..., 0.0167, 0.0092, 0.0092],
         [0.9678, 0.9732, 0.9734,  ..., 0.9498, 0.9723, 0.9725]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 501:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0120, 0.0095, 0.0111,  ..., 0.0082, 0.0081, 0.0108],
         [0.0120, 0.0095, 0.0111,  ..., 0.0082, 0.0081, 0.0108],
         [0.0120, 0.0095, 0.0111,  ..., 0.0082, 0.0081, 0.0108],
         [0.9641, 0.9716, 0.9667,  ..., 0.9754, 0.9756, 0.9675]],
        [[0.0127, 0.0105, 0.0100,  ..., 0.0109, 0.0153, 0.0138],
         [0.0127, 0.0105, 0.0100,  ..., 0.0109, 0.0153, 0.0138],
         [0.0127, 0.0105, 0.0100,  ..., 0.0109, 0.0153, 0.0138],
         [0.9618, 0.9686, 0.9701,  ..., 0.9672, 0.9542, 0.9587]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0080, 0.0079,  ..., 0.0067, 0.0071, 0.0059],
         [0.0084, 0.0080, 0.0079,  ..., 0.0067, 0.0071, 0.0059],
         [0.0084, 0.0080, 0.0079,  ..., 0.0067, 0.0071, 0.0059],
         [0.9749, 0.9761, 0.9762,  ..., 0.9799, 0.9787, 0.9824]],
        [[0.0072, 0.0081, 0.0068,  ..., 0.0178, 0.0075, 0.0063],
         [0.0072, 0.0081, 0.0068,  ..., 0.0178, 0.0075, 0.0063],
         [0.0072, 0.0081, 0.0068,  ..., 0.0178, 0.0075, 0.0063],
         [0.9784, 0.9756, 0.9797,  ..., 0.9467, 0.9774, 0.9811]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 502:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0103, 0.0119,  ..., 0.0114, 0.0130, 0.0140],
         [0.0099, 0.0103, 0.0119,  ..., 0.0114, 0.0130, 0.0140],
         [0.0099, 0.0103, 0.0119,  ..., 0.0114, 0.0130, 0.0140],
         [0.9703, 0.9692, 0.9642,  ..., 0.9657, 0.9609, 0.9579]],
        [[0.0135, 0.0154, 0.0132,  ..., 0.0129, 0.0104, 0.0104],
         [0.0135, 0.0154, 0.0132,  ..., 0.0129, 0.0104, 0.0104],
         [0.0135, 0.0154, 0.0132,  ..., 0.0129, 0.0104, 0.0104],
         [0.9596, 0.9538, 0.9604,  ..., 0.9614, 0.9689, 0.9688]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:41,196 [Process: 0] Synchronize training processes
2024-08-16 16:19:41,196 [Process: 0] Evaluating...
2024-08-16 16:19:41,205 [Process: 0] EPOCH 502:
2024-08-16 16:19:41,207 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0106, 0.0066,  ..., 0.0058, 0.0072, 0.0077],
         [0.0060, 0.0106, 0.0066,  ..., 0.0058, 0.0072, 0.0077],
         [0.0060, 0.0106, 0.0066,  ..., 0.0058, 0.0072, 0.0077],
         [0.9821, 0.9682, 0.9802,  ..., 0.9825, 0.9785, 0.9768]],
        [[0.0085, 0.0090, 0.0082,  ..., 0.0206, 0.0087, 0.0067],
         [0.0085, 0.0090, 0.0082,  ..., 0.0206, 0.0087, 0.0067],
         [0.0085, 0.0090, 0.0082,  ..., 0.0206, 0.0087, 0.0067],
         [0.9745, 0.9729, 0.9755,  ..., 0.9383, 0.9738, 0.9800]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 503:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0117, 0.0092,  ..., 0.0117, 0.0140, 0.0122],
         [0.0094, 0.0117, 0.0092,  ..., 0.0117, 0.0140, 0.0122],
         [0.0094, 0.0117, 0.0092,  ..., 0.0117, 0.0140, 0.0122],
         [0.9718, 0.9650, 0.9723,  ..., 0.9649, 0.9580, 0.9634]],
        [[0.0098, 0.0110, 0.0095,  ..., 0.0139, 0.0107, 0.0107],
         [0.0098, 0.0110, 0.0095,  ..., 0.0139, 0.0107, 0.0107],
         [0.0098, 0.0110, 0.0095,  ..., 0.0139, 0.0107, 0.0107],
         [0.9707, 0.9669, 0.9715,  ..., 0.9583, 0.9678, 0.9678]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:43,300 [Process: 0] Synchronize training processes
2024-08-16 16:19:43,301 [Process: 0] Evaluating...
2024-08-16 16:19:43,303 [Process: 0] EPOCH 503:
2024-08-16 16:19:43,305 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0059, 0.0062,  ..., 0.0099, 0.0102, 0.0067],
         [0.0060, 0.0059, 0.0062,  ..., 0.0099, 0.0102, 0.0067],
         [0.0060, 0.0059, 0.0062,  ..., 0.0099, 0.0102, 0.0067],
         [0.9819, 0.9823, 0.9815,  ..., 0.9704, 0.9693, 0.9800]],
        [[0.0062, 0.0067, 0.0080,  ..., 0.0258, 0.0091, 0.0071],
         [0.0062, 0.0067, 0.0080,  ..., 0.0258, 0.0091, 0.0071],
         [0.0062, 0.0067, 0.0080,  ..., 0.0258, 0.0091, 0.0071],
         [0.9814, 0.9799, 0.9761,  ..., 0.9225, 0.9726, 0.9788]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 504:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0133, 0.0101, 0.0129,  ..., 0.0138, 0.0110, 0.0133],
         [0.0133, 0.0101, 0.0129,  ..., 0.0138, 0.0110, 0.0133],
         [0.0133, 0.0101, 0.0129,  ..., 0.0138, 0.0110, 0.0133],
         [0.9602, 0.9696, 0.9613,  ..., 0.9586, 0.9671, 0.9602]],
        [[0.0139, 0.0136, 0.0098,  ..., 0.0106, 0.0100, 0.0112],
         [0.0139, 0.0136, 0.0098,  ..., 0.0106, 0.0100, 0.0112],
         [0.0139, 0.0136, 0.0098,  ..., 0.0106, 0.0100, 0.0112],
         [0.9584, 0.9593, 0.9707,  ..., 0.9681, 0.9699, 0.9665]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:45,386 [Process: 0] Synchronize training processes
2024-08-16 16:19:45,386 [Process: 0] Evaluating...
2024-08-16 16:19:45,388 [Process: 0] EPOCH 504:
2024-08-16 16:19:45,390 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0097, 0.0095,  ..., 0.0090, 0.0075, 0.0077],
         [0.0097, 0.0097, 0.0095,  ..., 0.0090, 0.0075, 0.0077],
         [0.0097, 0.0097, 0.0095,  ..., 0.0090, 0.0075, 0.0077],
         [0.9708, 0.9708, 0.9716,  ..., 0.9730, 0.9776, 0.9770]],
        [[0.0068, 0.0072, 0.0061,  ..., 0.0416, 0.0061, 0.0074],
         [0.0068, 0.0072, 0.0060,  ..., 0.0416, 0.0060, 0.0074],
         [0.0068, 0.0072, 0.0060,  ..., 0.0416, 0.0060, 0.0074],
         [0.9796, 0.9785, 0.9819,  ..., 0.8751, 0.9820, 0.9777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 505:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:19:47,473 [Process: 0] Synchronize training processes
2024-08-16 16:19:47,474 [Process: 0] Evaluating...
2024-08-16 16:19:47,476 [Process: 0] EPOCH 505:
2024-08-16 16:19:47,478 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0068, 0.0065,  ..., 0.0069, 0.0057, 0.0073],
         [0.0070, 0.0068, 0.0065,  ..., 0.0069, 0.0056, 0.0073],
         [0.0070, 0.0068, 0.0065,  ..., 0.0069, 0.0056, 0.0073],
         [0.9790, 0.9797, 0.9805,  ..., 0.9793, 0.9831, 0.9782]],
        [[0.0054, 0.0076, 0.0062,  ..., 0.0141, 0.0085, 0.0089],
         [0.0051, 0.0076, 0.0061,  ..., 0.0141, 0.0085, 0.0089],
         [0.0051, 0.0076, 0.0061,  ..., 0.0141, 0.0085, 0.0089],
         [0.9843, 0.9772, 0.9816,  ..., 0.9577, 0.9744, 0.9734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 506:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:19:49,564 [Process: 0] Synchronize training processes
2024-08-16 16:19:49,564 [Process: 0] Evaluating...
2024-08-16 16:19:49,566 [Process: 0] EPOCH 506:
2024-08-16 16:19:49,568 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0085, 0.0125,  ..., 0.0063, 0.0102, 0.0062],
         [0.0050, 0.0085, 0.0125,  ..., 0.0063, 0.0102, 0.0062],
         [0.0050, 0.0085, 0.0125,  ..., 0.0063, 0.0102, 0.0062],
         [0.9849, 0.9746, 0.9624,  ..., 0.9811, 0.9694, 0.9815]],
        [[0.0104, 0.0078, 0.0101,  ..., 0.0077, 0.0069, 0.0092],
         [0.0104, 0.0078, 0.0101,  ..., 0.0077, 0.0069, 0.0092],
         [0.0104, 0.0078, 0.0101,  ..., 0.0077, 0.0069, 0.0092],
         [0.9687, 0.9766, 0.9696,  ..., 0.9770, 0.9792, 0.9723]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0079, 0.0053,  ..., 0.0075, 0.0082, 0.0074],
         [0.0059, 0.0079, 0.0052,  ..., 0.0075, 0.0082, 0.0074],
         [0.0059, 0.0079, 0.0052,  ..., 0.0075, 0.0082, 0.0074],
         [0.9824, 0.9762, 0.9844,  ..., 0.9774, 0.9755, 0.9779]],
        [[0.0075, 0.0069, 0.0071,  ..., 0.2416, 0.0065, 0.0079],
         [0.0075, 0.0069, 0.0071,  ..., 0.2416, 0.0065, 0.0079],
         [0.0075, 0.0069, 0.0071,  ..., 0.2416, 0.0065, 0.0079],
         [0.9775, 0.9792, 0.9787,  ..., 0.2751, 0.9805, 0.9764]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 507:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:19:51,654 [Process: 0] Synchronize training processes
2024-08-16 16:19:51,654 [Process: 0] Evaluating...
2024-08-16 16:19:51,656 [Process: 0] EPOCH 507:
2024-08-16 16:19:51,659 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0096, 0.0091,  ..., 0.0055, 0.0077, 0.0081],
         [0.0099, 0.0096, 0.0091,  ..., 0.0055, 0.0077, 0.0081],
         [0.0099, 0.0096, 0.0091,  ..., 0.0055, 0.0077, 0.0081],
         [0.9703, 0.9711, 0.9728,  ..., 0.9835, 0.9768, 0.9758]],
        [[0.2500, 0.0089, 0.2500,  ..., 0.0088, 0.0078, 0.0072],
         [0.2500, 0.0089, 0.2500,  ..., 0.0088, 0.0078, 0.0072],
         [0.2500, 0.0089, 0.2500,  ..., 0.0088, 0.0078, 0.0072],
         [0.2500, 0.9733, 0.2500,  ..., 0.9736, 0.9765, 0.9783]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6561e-03, 8.2859e-03, 6.1079e-03,  ..., 8.0536e-03,
          6.3434e-03, 7.7092e-03],
         [7.6561e-03, 8.2859e-03, 6.1079e-03,  ..., 8.0536e-03,
          6.3434e-03, 7.7092e-03],
         [7.6561e-03, 8.2859e-03, 6.1079e-03,  ..., 8.0536e-03,
          6.3434e-03, 7.7092e-03],
         [9.7703e-01, 9.7514e-01, 9.8168e-01,  ..., 9.7584e-01,
          9.8097e-01, 9.7687e-01]],
        [[8.1502e-03, 8.3048e-03, 5.7608e-03,  ..., 2.2190e-03,
          7.2061e-03, 5.5023e-03],
         [8.1502e-03, 8.3048e-03, 5.7001e-03,  ..., 3.2289e-04,
          7.2061e-03, 5.3562e-03],
         [8.1502e-03, 8.3048e-03, 5.7001e-03,  ..., 9.9714e-01,
          7.2061e-03, 5.3562e-03],
         [9.7555e-01, 9.7509e-01, 9.8284e-01,  ..., 3.2289e-04,
          9.7838e-01, 9.8379e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 508:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:19:53,765 [Process: 0] Synchronize training processes
2024-08-16 16:19:53,765 [Process: 0] Evaluating...
2024-08-16 16:19:53,767 [Process: 0] EPOCH 508:
2024-08-16 16:19:53,769 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0077, 0.0086, 0.0090,  ..., 0.0084, 0.0058, 0.0084],
         [0.0077, 0.0086, 0.0090,  ..., 0.0084, 0.0058, 0.0084],
         [0.0077, 0.0086, 0.0090,  ..., 0.0084, 0.0058, 0.0084],
         [0.9768, 0.9743, 0.9729,  ..., 0.9748, 0.9826, 0.9748]],
        [[0.0094, 0.0072, 0.0188,  ..., 0.0063, 0.0107, 0.0069],
         [0.0094, 0.0072, 0.0188,  ..., 0.0063, 0.0107, 0.0069],
         [0.0094, 0.0072, 0.0188,  ..., 0.0063, 0.0107, 0.0069],
         [0.9717, 0.9783, 0.9437,  ..., 0.9810, 0.9679, 0.9792]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0081, 0.0071,  ..., 0.0077, 0.0072, 0.0063],
         [0.0076, 0.0081, 0.0071,  ..., 0.0077, 0.0072, 0.0062],
         [0.0076, 0.0081, 0.0071,  ..., 0.0077, 0.0072, 0.0062],
         [0.9771, 0.9757, 0.9788,  ..., 0.9768, 0.9785, 0.9812]],
        [[0.0071, 0.0080, 0.0097,  ..., 0.0179, 0.0089, 0.0073],
         [0.0071, 0.0080, 0.0097,  ..., 0.0179, 0.0089, 0.0073],
         [0.0071, 0.0080, 0.0097,  ..., 0.9462, 0.0089, 0.0073],
         [0.9788, 0.9759, 0.9709,  ..., 0.0179, 0.9734, 0.9780]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-16 16:19:55,886 [Process: 0] Synchronize training processes
2024-08-16 16:19:55,887 [Process: 0] Evaluating...
2024-08-16 16:19:55,889 [Process: 0] EPOCH 509:
2024-08-16 16:19:55,890 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 509:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0068, 0.0095, 0.0933,  ..., 0.0061, 0.0080, 0.0094],
         [0.0068, 0.0095, 0.0933,  ..., 0.0061, 0.0080, 0.0094],
         [0.0068, 0.0095, 0.0933,  ..., 0.0061, 0.0080, 0.0094],
         [0.9797, 0.9715, 0.7202,  ..., 0.9818, 0.9760, 0.9719]],
        [[0.0059, 0.0095, 0.0087,  ..., 0.0068, 0.0072, 0.0081],
         [0.0059, 0.0095, 0.0087,  ..., 0.0068, 0.0072, 0.0081],
         [0.0059, 0.0095, 0.0087,  ..., 0.0068, 0.0072, 0.0081],
         [0.9822, 0.9716, 0.9740,  ..., 0.9796, 0.9784, 0.9756]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.8202e-03, 7.0365e-03, 5.3956e-03,  ..., 8.1954e-03,
          8.0885e-03, 8.4216e-03],
         [8.8202e-03, 7.0365e-03, 5.3956e-03,  ..., 8.1954e-03,
          8.0885e-03, 8.4216e-03],
         [8.8202e-03, 7.0365e-03, 5.3956e-03,  ..., 8.1954e-03,
          8.0885e-03, 8.4216e-03],
         [9.7354e-01, 9.7889e-01, 9.8381e-01,  ..., 9.7541e-01,
          9.7573e-01, 9.7474e-01]],
        [[5.3672e-03, 8.1882e-03, 6.8065e-03,  ..., 6.2224e-04,
          7.0725e-03, 7.9914e-03],
         [5.3672e-03, 8.1882e-03, 6.8065e-03,  ..., 2.0968e-05,
          7.0725e-03, 7.9914e-03],
         [5.3672e-03, 8.1882e-03, 6.8065e-03,  ..., 9.9934e-01,
          7.0725e-03, 7.9914e-03],
         [9.8390e-01, 9.7544e-01, 9.7958e-01,  ..., 2.0968e-05,
          9.7878e-01, 9.7603e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:19:58,018 [Process: 0] Synchronize training processes
2024-08-16 16:19:58,018 [Process: 0] Evaluating...
2024-08-16 16:19:58,020 [Process: 0] EPOCH 510:
2024-08-16 16:19:58,022 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 510:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0060, 0.0062,  ..., 0.0083, 0.0061, 0.0055],
         [0.0097, 0.0060, 0.0062,  ..., 0.0083, 0.0061, 0.0055],
         [0.0097, 0.0060, 0.0062,  ..., 0.0083, 0.0061, 0.0055],
         [0.9710, 0.9820, 0.9813,  ..., 0.9750, 0.9818, 0.9834]],
        [[0.0075, 0.0081, 0.0050,  ..., 0.0073, 0.0097, 0.0062],
         [0.0075, 0.0081, 0.0050,  ..., 0.0073, 0.0097, 0.0062],
         [0.0075, 0.0081, 0.0050,  ..., 0.0073, 0.0097, 0.0062],
         [0.9774, 0.9757, 0.9851,  ..., 0.9782, 0.9710, 0.9815]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:00,232 [Process: 0] Synchronize training processes
2024-08-16 16:20:00,232 [Process: 0] Evaluating...
2024-08-16 16:20:00,234 [Process: 0] EPOCH 511:
2024-08-16 16:20:00,236 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0060, 0.0077,  ..., 0.0075, 0.0062, 0.0075],
         [0.0085, 0.0060, 0.0077,  ..., 0.0075, 0.0062, 0.0075],
         [0.0085, 0.0060, 0.0077,  ..., 0.0075, 0.0062, 0.0075],
         [0.9744, 0.9820, 0.9768,  ..., 0.9775, 0.9813, 0.9776]],
        [[0.0053, 0.0060, 0.0074,  ..., 0.0010, 0.0076, 0.0074],
         [0.0053, 0.0060, 0.0074,  ..., 0.0010, 0.0076, 0.0074],
         [0.0053, 0.0060, 0.0074,  ..., 0.9969, 0.0076, 0.0074],
         [0.9841, 0.9821, 0.9779,  ..., 0.0010, 0.9773, 0.9777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 511:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0110, 0.0088, 0.0085,  ..., 0.0063, 0.0070, 0.0097],
         [0.0110, 0.0088, 0.0085,  ..., 0.0063, 0.0070, 0.0097],
         [0.0110, 0.0088, 0.0085,  ..., 0.0063, 0.0070, 0.0097],
         [0.9670, 0.9737, 0.9745,  ..., 0.9812, 0.9790, 0.9708]],
        [[0.0094, 0.0053, 0.0075,  ..., 0.0065, 0.0085, 0.0108],
         [0.0094, 0.0053, 0.0075,  ..., 0.0065, 0.0085, 0.0108],
         [0.0094, 0.0053, 0.0075,  ..., 0.0065, 0.0085, 0.0108],
         [0.9717, 0.9840, 0.9775,  ..., 0.9804, 0.9745, 0.9677]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:02,416 [Process: 0] Synchronize training processes
2024-08-16 16:20:02,417 [Process: 0] Evaluating...
2024-08-16 16:20:02,424 [Process: 0] EPOCH 512:
2024-08-16 16:20:02,427 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.6404e-03, 8.5931e-03, 8.9421e-03,  ..., 6.6925e-03,
          5.9091e-03, 6.0435e-03],
         [5.6404e-03, 8.5931e-03, 8.9421e-03,  ..., 6.6925e-03,
          5.9091e-03, 6.0435e-03],
         [5.6404e-03, 8.5931e-03, 8.9421e-03,  ..., 6.6925e-03,
          5.9091e-03, 6.0435e-03],
         [9.8308e-01, 9.7422e-01, 9.7317e-01,  ..., 9.7992e-01,
          9.8227e-01, 9.8187e-01]],
        [[9.0595e-03, 5.1489e-03, 5.1535e-03,  ..., 3.8942e-04,
          5.8365e-03, 7.2735e-03],
         [9.0595e-03, 5.1489e-03, 5.1535e-03,  ..., 1.0190e-04,
          5.8365e-03, 7.2735e-03],
         [9.0595e-03, 5.1489e-03, 5.1535e-03,  ..., 9.9941e-01,
          5.8365e-03, 7.2735e-03],
         [9.7282e-01, 9.8455e-01, 9.8454e-01,  ..., 1.0190e-04,
          9.8249e-01, 9.7818e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 512:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0093, 0.0077,  ..., 0.0058, 0.0066, 0.0063],
         [0.0045, 0.0093, 0.0077,  ..., 0.0058, 0.0066, 0.0063],
         [0.0045, 0.0093, 0.0077,  ..., 0.0058, 0.0066, 0.0063],
         [0.9866, 0.9721, 0.9769,  ..., 0.9827, 0.9803, 0.9811]],
        [[0.0050, 0.0088, 0.0089,  ..., 0.0099, 0.0058, 0.0077],
         [0.0050, 0.0088, 0.0089,  ..., 0.0099, 0.0058, 0.0077],
         [0.0050, 0.0088, 0.0089,  ..., 0.0099, 0.0058, 0.0077],
         [0.9850, 0.9736, 0.9734,  ..., 0.9702, 0.9825, 0.9770]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:04,525 [Process: 0] Synchronize training processes
2024-08-16 16:20:04,525 [Process: 0] Evaluating...
2024-08-16 16:20:04,527 [Process: 0] EPOCH 513:
2024-08-16 16:20:04,529 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2475e-03, 6.0201e-03, 5.8886e-03,  ..., 6.9015e-03,
          7.3152e-03, 8.7553e-03],
         [5.2475e-03, 6.0201e-03, 5.8886e-03,  ..., 6.9015e-03,
          7.3152e-03, 8.7553e-03],
         [5.2475e-03, 6.0201e-03, 5.8886e-03,  ..., 6.9015e-03,
          7.3152e-03, 8.7553e-03],
         [9.8426e-01, 9.8194e-01, 9.8233e-01,  ..., 9.7930e-01,
          9.7805e-01, 9.7373e-01]],
        [[7.9829e-03, 6.5946e-03, 9.8231e-03,  ..., 6.8862e-06,
          5.4943e-03, 6.1693e-03],
         [7.9829e-03, 6.5946e-03, 9.8231e-03,  ..., 1.0141e-08,
          5.4943e-03, 6.1693e-03],
         [7.9829e-03, 6.5946e-03, 9.8231e-03,  ..., 9.9999e-01,
          5.4943e-03, 6.1693e-03],
         [9.7605e-01, 9.8022e-01, 9.7053e-01,  ..., 1.0141e-08,
          9.8352e-01, 9.8149e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 513:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0064, 0.0055, 0.0080,  ..., 0.0122, 0.0071, 0.0062],
         [0.0064, 0.0055, 0.0080,  ..., 0.0122, 0.0071, 0.0062],
         [0.0064, 0.0055, 0.0080,  ..., 0.0122, 0.0071, 0.0062],
         [0.9807, 0.9836, 0.9761,  ..., 0.9633, 0.9787, 0.9814]],
        [[0.0062, 0.0065, 0.0085,  ..., 0.0056, 0.0066, 0.0065],
         [0.0062, 0.0065, 0.0085,  ..., 0.0056, 0.0066, 0.0065],
         [0.0062, 0.0065, 0.0085,  ..., 0.0056, 0.0066, 0.0065],
         [0.9814, 0.9804, 0.9744,  ..., 0.9833, 0.9802, 0.9804]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:06,673 [Process: 0] Synchronize training processes
2024-08-16 16:20:06,674 [Process: 0] Evaluating...
2024-08-16 16:20:06,676 [Process: 0] EPOCH 514:
2024-08-16 16:20:06,678 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.5428e-03, 4.9223e-03, 5.0273e-03,  ..., 7.0292e-03,
          6.0486e-03, 7.3881e-03],
         [4.5428e-03, 4.9223e-03, 5.0273e-03,  ..., 7.0292e-03,
          6.0486e-03, 7.3881e-03],
         [4.5428e-03, 4.9223e-03, 5.0273e-03,  ..., 7.0292e-03,
          6.0486e-03, 7.3881e-03],
         [9.8637e-01, 9.8523e-01, 9.8492e-01,  ..., 9.7891e-01,
          9.8185e-01, 9.7784e-01]],
        [[8.2560e-03, 7.3302e-03, 4.4086e-03,  ..., 2.4136e-03,
          8.3162e-03, 7.5338e-03],
         [8.2560e-03, 7.3302e-03, 4.4086e-03,  ..., 2.6967e-07,
          8.3162e-03, 7.5338e-03],
         [8.2560e-03, 7.3302e-03, 4.4086e-03,  ..., 9.9759e-01,
          8.3162e-03, 7.5338e-03],
         [9.7523e-01, 9.7801e-01, 9.8677e-01,  ..., 2.6967e-07,
          9.7505e-01, 9.7740e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 514:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0077, 0.0097, 0.0065,  ..., 0.0079, 0.0083, 0.0064],
         [0.0077, 0.0097, 0.0065,  ..., 0.0079, 0.0083, 0.0064],
         [0.0077, 0.0097, 0.0065,  ..., 0.0079, 0.0083, 0.0064],
         [0.9769, 0.9710, 0.9804,  ..., 0.9764, 0.9750, 0.9809]],
        [[0.0321, 0.0077, 0.0063,  ..., 0.0079, 0.0119, 0.0140],
         [0.0321, 0.0077, 0.0063,  ..., 0.0079, 0.0119, 0.0140],
         [0.0321, 0.0077, 0.0063,  ..., 0.0079, 0.0119, 0.0140],
         [0.9038, 0.9769, 0.9812,  ..., 0.9763, 0.9642, 0.9580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:08,792 [Process: 0] Synchronize training processes
2024-08-16 16:20:08,793 [Process: 0] Evaluating...
2024-08-16 16:20:08,795 [Process: 0] EPOCH 515:
2024-08-16 16:20:08,797 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.5608e-03, 7.3455e-03, 3.4569e-03,  ..., 4.5466e-03,
          5.0355e-03, 4.3604e-03],
         [4.5608e-03, 7.3455e-03, 3.5075e-03,  ..., 4.5466e-03,
          5.0355e-03, 4.3604e-03],
         [4.5608e-03, 7.3455e-03, 3.4569e-03,  ..., 4.5466e-03,
          5.0355e-03, 4.3604e-03],
         [9.8632e-01, 9.7796e-01, 9.8958e-01,  ..., 9.8636e-01,
          9.8489e-01, 9.8692e-01]],
        [[4.7786e-03, 4.6029e-03, 3.7293e-03,  ..., 2.2191e-05,
          8.8323e-03, 1.2107e-02],
         [4.7786e-03, 4.6029e-03, 3.7322e-03,  ..., 1.1993e-10,
          8.8323e-03, 1.2107e-02],
         [4.7786e-03, 4.6029e-03, 3.7293e-03,  ..., 9.9998e-01,
          8.8323e-03, 1.2107e-02],
         [9.8566e-01, 9.8619e-01, 9.8881e-01,  ..., 1.1993e-10,
          9.7350e-01, 9.6368e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 515:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0093, 0.0084,  ..., 0.0075, 0.0078, 0.0067],
         [0.0088, 0.0093, 0.0084,  ..., 0.0075, 0.0078, 0.0067],
         [0.0088, 0.0093, 0.0084,  ..., 0.0075, 0.0078, 0.0067],
         [0.9736, 0.9720, 0.9749,  ..., 0.9776, 0.9766, 0.9799]],
        [[0.0235, 0.0100, 0.0081,  ..., 0.0064, 0.0093, 0.0073],
         [0.0235, 0.0100, 0.0081,  ..., 0.0064, 0.0093, 0.0073],
         [0.0235, 0.0100, 0.0081,  ..., 0.0064, 0.0093, 0.0073],
         [0.9294, 0.9699, 0.9756,  ..., 0.9808, 0.9722, 0.9781]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:10,924 [Process: 0] Synchronize training processes
2024-08-16 16:20:10,924 [Process: 0] Evaluating...
2024-08-16 16:20:10,926 [Process: 0] EPOCH 516:
2024-08-16 16:20:10,928 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7339e-03, 4.5408e-03, 4.5345e-03,  ..., 4.5835e-03,
          4.9375e-03, 4.1076e-03],
         [3.7730e-03, 4.5408e-03, 4.5345e-03,  ..., 4.5835e-03,
          4.9375e-03, 4.1076e-03],
         [3.7339e-03, 4.5408e-03, 4.5345e-03,  ..., 4.5835e-03,
          4.9375e-03, 4.1076e-03],
         [9.8876e-01, 9.8638e-01, 9.8640e-01,  ..., 9.8625e-01,
          9.8519e-01, 9.8768e-01]],
        [[6.1804e-03, 5.2153e-03, 4.3776e-03,  ..., 2.6449e-05,
          4.6738e-03, 3.9385e-03],
         [6.1804e-03, 5.2153e-03, 4.3776e-03,  ..., 1.5523e-08,
          4.6738e-03, 3.9385e-03],
         [6.1804e-03, 5.2153e-03, 4.3776e-03,  ..., 9.9997e-01,
          4.6738e-03, 3.9385e-03],
         [9.8146e-01, 9.8435e-01, 9.8687e-01,  ..., 1.5523e-08,
          9.8598e-01, 9.8818e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 516:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0074, 0.0107, 0.0069,  ..., 0.0063, 0.0092, 0.0090],
         [0.0074, 0.0107, 0.0069,  ..., 0.0063, 0.0092, 0.0090],
         [0.0074, 0.0107, 0.0069,  ..., 0.0063, 0.0092, 0.0090],
         [0.9777, 0.9679, 0.9793,  ..., 0.9810, 0.9725, 0.9731]],
        [[0.0426, 0.0095, 0.0114,  ..., 0.0060, 0.0050, 0.0089],
         [0.0426, 0.0095, 0.0114,  ..., 0.0060, 0.0050, 0.0089],
         [0.0426, 0.0095, 0.0114,  ..., 0.0060, 0.0050, 0.0089],
         [0.8721, 0.9716, 0.9659,  ..., 0.9820, 0.9850, 0.9733]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:13,062 [Process: 0] Synchronize training processes
2024-08-16 16:20:13,062 [Process: 0] Evaluating...
2024-08-16 16:20:13,064 [Process: 0] EPOCH 517:
2024-08-16 16:20:13,066 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7857e-03, 5.1279e-03, 4.2514e-03,  ..., 5.8023e-03,
          4.9149e-03, 5.7472e-03],
         [3.7857e-03, 5.1279e-03, 4.2514e-03,  ..., 5.8023e-03,
          4.9149e-03, 5.7472e-03],
         [3.7857e-03, 5.1279e-03, 4.2514e-03,  ..., 5.8023e-03,
          4.9149e-03, 5.7472e-03],
         [9.8864e-01, 9.8462e-01, 9.8725e-01,  ..., 9.8259e-01,
          9.8526e-01, 9.8276e-01]],
        [[4.4905e-03, 6.5938e-03, 5.4215e-03,  ..., 6.2001e-04,
          7.2325e-03, 9.8000e-03],
         [4.4905e-03, 6.5938e-03, 5.4215e-03,  ..., 6.7550e-08,
          7.2325e-03, 9.8000e-03],
         [4.4905e-03, 6.5938e-03, 5.4215e-03,  ..., 9.9938e-01,
          7.2325e-03, 9.8000e-03],
         [9.8653e-01, 9.8022e-01, 9.8374e-01,  ..., 6.7550e-08,
          9.7830e-01, 9.7060e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 517:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0079, 0.0074,  ..., 0.0067, 0.0078, 0.0070],
         [0.0075, 0.0079, 0.0074,  ..., 0.0067, 0.0078, 0.0070],
         [0.0075, 0.0079, 0.0074,  ..., 0.0067, 0.0078, 0.0070],
         [0.9776, 0.9762, 0.9777,  ..., 0.9799, 0.9766, 0.9789]],
        [[0.0176, 0.0063, 0.0072,  ..., 0.0068, 0.0074, 0.0073],
         [0.0176, 0.0063, 0.0072,  ..., 0.0068, 0.0074, 0.0073],
         [0.0176, 0.0063, 0.0072,  ..., 0.0068, 0.0074, 0.0073],
         [0.9472, 0.9812, 0.9784,  ..., 0.9795, 0.9777, 0.9781]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:15,147 [Process: 0] Synchronize training processes
2024-08-16 16:20:15,147 [Process: 0] Evaluating...
2024-08-16 16:20:15,149 [Process: 0] EPOCH 518:
2024-08-16 16:20:15,151 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2318e-03, 4.5771e-03, 3.6604e-03,  ..., 4.8311e-03,
          4.5180e-03, 5.4581e-03],
         [5.2318e-03, 4.5771e-03, 3.6604e-03,  ..., 4.8311e-03,
          4.5180e-03, 5.4581e-03],
         [5.2318e-03, 4.5771e-03, 3.6604e-03,  ..., 4.8311e-03,
          4.5180e-03, 5.4581e-03],
         [9.8430e-01, 9.8627e-01, 9.8902e-01,  ..., 9.8551e-01,
          9.8645e-01, 9.8363e-01]],
        [[5.7108e-03, 5.2036e-03, 6.9669e-03,  ..., 6.1782e-05,
          5.3356e-03, 5.9681e-03],
         [5.7108e-03, 5.2036e-03, 6.9669e-03,  ..., 2.0172e-10,
          5.3356e-03, 5.9681e-03],
         [5.7108e-03, 5.2036e-03, 6.9669e-03,  ..., 9.9994e-01,
          5.3356e-03, 5.9681e-03],
         [9.8287e-01, 9.8439e-01, 9.7910e-01,  ..., 2.0172e-10,
          9.8399e-01, 9.8210e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 518:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0102, 0.0071,  ..., 0.0070, 0.0088, 0.0070],
         [0.0070, 0.0102, 0.0071,  ..., 0.0070, 0.0088, 0.0070],
         [0.0070, 0.0102, 0.0071,  ..., 0.0070, 0.0088, 0.0070],
         [0.9790, 0.9695, 0.9788,  ..., 0.9791, 0.9735, 0.9790]],
        [[0.0107, 0.0093, 0.0067,  ..., 0.0074, 0.0073, 0.0079],
         [0.0107, 0.0093, 0.0067,  ..., 0.0074, 0.0073, 0.0079],
         [0.0107, 0.0093, 0.0067,  ..., 0.0074, 0.0073, 0.0079],
         [0.9678, 0.9721, 0.9799,  ..., 0.9779, 0.9782, 0.9764]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5681e-03, 5.6762e-03, 5.4865e-03,  ..., 6.0082e-03,
          6.0414e-03, 6.3974e-03],
         [5.5681e-03, 5.6762e-03, 5.4865e-03,  ..., 6.0082e-03,
          6.0414e-03, 6.3974e-03],
         [5.5681e-03, 5.6762e-03, 5.4865e-03,  ..., 6.0082e-03,
          6.0414e-03, 6.3974e-03],
         [9.8330e-01, 9.8297e-01, 9.8354e-01,  ..., 9.8198e-01,
          9.8188e-01, 9.8081e-01]],
        [[6.1211e-03, 5.6131e-03, 6.0172e-03,  ..., 6.8994e-06,
          5.3628e-03, 5.2132e-03],
         [6.1211e-03, 5.6131e-03, 6.0172e-03,  ..., 2.7452e-11,
          5.3628e-03, 5.2132e-03],
         [6.1211e-03, 5.6131e-03, 6.0172e-03,  ..., 9.9999e-01,
          5.3628e-03, 5.2132e-03],
         [9.8164e-01, 9.8316e-01, 9.8195e-01,  ..., 2.7452e-11,
          9.8391e-01, 9.8436e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 519:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:20:17,275 [Process: 0] Synchronize training processes
2024-08-16 16:20:17,276 [Process: 0] Evaluating...
2024-08-16 16:20:17,278 [Process: 0] EPOCH 519:
2024-08-16 16:20:17,280 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0079, 0.0086,  ..., 0.0073, 0.0072, 0.0080],
         [0.0076, 0.0079, 0.0086,  ..., 0.0073, 0.0072, 0.0080],
         [0.0076, 0.0079, 0.0086,  ..., 0.0073, 0.0072, 0.0080],
         [0.9772, 0.9763, 0.9741,  ..., 0.9780, 0.9785, 0.9759]],
        [[0.0068, 0.0082, 0.0063,  ..., 0.0073, 0.0068, 0.0078],
         [0.0068, 0.0082, 0.0063,  ..., 0.0073, 0.0068, 0.0078],
         [0.0068, 0.0082, 0.0063,  ..., 0.0073, 0.0068, 0.0078],
         [0.9797, 0.9754, 0.9812,  ..., 0.9782, 0.9797, 0.9766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.7871e-03, 5.1827e-03, 5.8802e-03,  ..., 5.9472e-03,
          6.5919e-03, 4.9864e-03],
         [5.7871e-03, 5.1827e-03, 5.8802e-03,  ..., 5.9472e-03,
          6.5919e-03, 4.9864e-03],
         [5.7871e-03, 5.1827e-03, 5.8802e-03,  ..., 5.9472e-03,
          6.5919e-03, 4.9864e-03],
         [9.8264e-01, 9.8445e-01, 9.8236e-01,  ..., 9.8216e-01,
          9.8022e-01, 9.8504e-01]],
        [[6.2149e-03, 7.2659e-03, 6.9385e-03,  ..., 9.3960e-05,
          4.9523e-03, 5.8081e-03],
         [6.2149e-03, 7.2659e-03, 6.9385e-03,  ..., 2.2197e-06,
          4.9523e-03, 5.8081e-03],
         [6.2149e-03, 7.2659e-03, 6.9385e-03,  ..., 9.9990e-01,
          4.9523e-03, 5.8081e-03],
         [9.8136e-01, 9.7820e-01, 9.7918e-01,  ..., 2.2197e-06,
          9.8514e-01, 9.8258e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 520:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:20:19,358 [Process: 0] Synchronize training processes
2024-08-16 16:20:19,358 [Process: 0] Evaluating...
2024-08-16 16:20:19,360 [Process: 0] EPOCH 520:
2024-08-16 16:20:19,362 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0078, 0.0079,  ..., 0.0077, 0.0066, 0.0079],
         [0.0069, 0.0078, 0.0079,  ..., 0.0077, 0.0066, 0.0079],
         [0.0069, 0.0078, 0.0079,  ..., 0.0077, 0.0066, 0.0079],
         [0.9793, 0.9766, 0.9764,  ..., 0.9769, 0.9802, 0.9764]],
        [[0.0072, 0.0076, 0.0064,  ..., 0.0067, 0.0067, 0.0077],
         [0.0072, 0.0076, 0.0064,  ..., 0.0067, 0.0067, 0.0077],
         [0.0072, 0.0076, 0.0064,  ..., 0.0067, 0.0067, 0.0077],
         [0.9785, 0.9771, 0.9807,  ..., 0.9799, 0.9799, 0.9768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3257e-03, 4.7510e-03, 5.1249e-03,  ..., 5.4574e-03,
          5.4629e-03, 4.8337e-03],
         [5.3257e-03, 4.7510e-03, 5.1249e-03,  ..., 5.4574e-03,
          5.4629e-03, 4.8337e-03],
         [5.3257e-03, 4.7510e-03, 5.1249e-03,  ..., 5.4574e-03,
          5.4629e-03, 4.8337e-03],
         [9.8402e-01, 9.8575e-01, 9.8463e-01,  ..., 9.8363e-01,
          9.8361e-01, 9.8550e-01]],
        [[6.5391e-03, 5.5470e-03, 5.3736e-03,  ..., 1.2379e-06,
          5.3752e-03, 5.0672e-03],
         [6.5391e-03, 5.5470e-03, 5.3736e-03,  ..., 1.4521e-09,
          5.3752e-03, 5.0672e-03],
         [6.5391e-03, 5.5470e-03, 5.3736e-03,  ..., 1.0000e+00,
          5.3752e-03, 5.0672e-03],
         [9.8038e-01, 9.8336e-01, 9.8388e-01,  ..., 1.4521e-09,
          9.8387e-01, 9.8480e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 521:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:20:21,338 [Process: 0] Synchronize training processes
2024-08-16 16:20:21,338 [Process: 0] Evaluating...
2024-08-16 16:20:21,340 [Process: 0] EPOCH 521:
2024-08-16 16:20:21,342 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0075, 0.0074,  ..., 0.0079, 0.0069, 0.0071],
         [0.0072, 0.0075, 0.0074,  ..., 0.0079, 0.0069, 0.0071],
         [0.0072, 0.0075, 0.0074,  ..., 0.0079, 0.0069, 0.0071],
         [0.9785, 0.9776, 0.9779,  ..., 0.9763, 0.9792, 0.9787]],
        [[0.0064, 0.0070, 0.0064,  ..., 0.0067, 0.0076, 0.0068],
         [0.0064, 0.0070, 0.0064,  ..., 0.0067, 0.0076, 0.0068],
         [0.0064, 0.0070, 0.0064,  ..., 0.0067, 0.0076, 0.0068],
         [0.9809, 0.9790, 0.9809,  ..., 0.9800, 0.9773, 0.9797]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4284e-03, 5.0561e-03, 5.6654e-03,  ..., 6.2272e-03,
          5.9775e-03, 5.6263e-03],
         [5.4284e-03, 5.0561e-03, 5.6654e-03,  ..., 6.2272e-03,
          5.9775e-03, 5.6263e-03],
         [5.4284e-03, 5.0561e-03, 5.6654e-03,  ..., 6.2272e-03,
          5.9775e-03, 5.6263e-03],
         [9.8371e-01, 9.8483e-01, 9.8300e-01,  ..., 9.8132e-01,
          9.8207e-01, 9.8312e-01]],
        [[5.8796e-03, 7.0041e-03, 5.6060e-03,  ..., 1.8343e-04,
          5.3695e-03, 6.2866e-03],
         [5.8796e-03, 7.0041e-03, 5.6060e-03,  ..., 5.7256e-06,
          5.3695e-03, 6.2866e-03],
         [5.8796e-03, 7.0041e-03, 5.6060e-03,  ..., 9.9981e-01,
          5.3695e-03, 6.2866e-03],
         [9.8236e-01, 9.7899e-01, 9.8318e-01,  ..., 5.7256e-06,
          9.8389e-01, 9.8114e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 522:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:20:23,375 [Process: 0] Synchronize training processes
2024-08-16 16:20:23,376 [Process: 0] Evaluating...
2024-08-16 16:20:23,383 [Process: 0] EPOCH 522:
2024-08-16 16:20:23,385 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0078, 0.0074,  ..., 0.0078, 0.0079, 0.0073],
         [0.0073, 0.0078, 0.0074,  ..., 0.0078, 0.0079, 0.0073],
         [0.0073, 0.0078, 0.0074,  ..., 0.0078, 0.0079, 0.0073],
         [0.9782, 0.9766, 0.9777,  ..., 0.9765, 0.9763, 0.9781]],
        [[0.0086, 0.0068, 0.0065,  ..., 0.0068, 0.0076, 0.0072],
         [0.0086, 0.0068, 0.0065,  ..., 0.0068, 0.0076, 0.0072],
         [0.0086, 0.0068, 0.0065,  ..., 0.0068, 0.0076, 0.0072],
         [0.9742, 0.9797, 0.9804,  ..., 0.9797, 0.9772, 0.9783]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1037e-03, 5.3919e-03, 5.6692e-03,  ..., 5.8804e-03,
          5.9592e-03, 5.7255e-03],
         [5.1037e-03, 5.3919e-03, 5.6692e-03,  ..., 5.8804e-03,
          5.9592e-03, 5.7255e-03],
         [5.1037e-03, 5.3919e-03, 5.6692e-03,  ..., 5.8804e-03,
          5.9592e-03, 5.7255e-03],
         [9.8469e-01, 9.8382e-01, 9.8299e-01,  ..., 9.8236e-01,
          9.8212e-01, 9.8282e-01]],
        [[5.5819e-03, 8.4304e-03, 5.7706e-03,  ..., 6.4427e-06,
          6.1861e-03, 6.1245e-03],
         [5.5819e-03, 8.4304e-03, 5.7706e-03,  ..., 1.6557e-10,
          6.1861e-03, 6.1245e-03],
         [5.5819e-03, 8.4304e-03, 5.7706e-03,  ..., 9.9999e-01,
          6.1861e-03, 6.1245e-03],
         [9.8325e-01, 9.7471e-01, 9.8269e-01,  ..., 1.6557e-10,
          9.8144e-01, 9.8163e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 523:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:20:25,478 [Process: 0] Synchronize training processes
2024-08-16 16:20:25,479 [Process: 0] Evaluating...
2024-08-16 16:20:25,480 [Process: 0] EPOCH 523:
2024-08-16 16:20:25,483 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0078, 0.0072,  ..., 0.0078, 0.0074, 0.0076],
         [0.0069, 0.0078, 0.0072,  ..., 0.0078, 0.0074, 0.0076],
         [0.0069, 0.0078, 0.0072,  ..., 0.0078, 0.0074, 0.0076],
         [0.9793, 0.9765, 0.9784,  ..., 0.9767, 0.9778, 0.9771]],
        [[0.0071, 0.0078, 0.0073,  ..., 0.0070, 0.0078, 0.0070],
         [0.0071, 0.0078, 0.0073,  ..., 0.0070, 0.0078, 0.0070],
         [0.0071, 0.0078, 0.0073,  ..., 0.0070, 0.0078, 0.0070],
         [0.9786, 0.9766, 0.9780,  ..., 0.9789, 0.9767, 0.9790]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1257e-03, 6.1212e-03, 4.7221e-03,  ..., 4.9833e-03,
          5.1006e-03, 5.3841e-03],
         [5.1257e-03, 6.1212e-03, 4.7221e-03,  ..., 4.9833e-03,
          5.1006e-03, 5.3841e-03],
         [5.1257e-03, 6.1212e-03, 4.7221e-03,  ..., 4.9833e-03,
          5.1006e-03, 5.3841e-03],
         [9.8462e-01, 9.8164e-01, 9.8583e-01,  ..., 9.8505e-01,
          9.8470e-01, 9.8385e-01]],
        [[5.7235e-03, 5.9945e-03, 5.2094e-03,  ..., 1.5831e-03,
          5.3885e-03, 5.5192e-03],
         [5.7235e-03, 5.9945e-03, 5.2094e-03,  ..., 4.3813e-06,
          5.3885e-03, 5.5192e-03],
         [5.7235e-03, 5.9945e-03, 5.2094e-03,  ..., 9.9841e-01,
          5.3885e-03, 5.5192e-03],
         [9.8283e-01, 9.8202e-01, 9.8437e-01,  ..., 4.3813e-06,
          9.8383e-01, 9.8344e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 524:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:20:27,563 [Process: 0] Synchronize training processes
2024-08-16 16:20:27,563 [Process: 0] Evaluating...
2024-08-16 16:20:27,565 [Process: 0] EPOCH 524:
2024-08-16 16:20:27,567 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0068, 0.0069, 0.0062,  ..., 0.0068, 0.0074, 0.0070],
         [0.0068, 0.0069, 0.0062,  ..., 0.0068, 0.0074, 0.0070],
         [0.0068, 0.0069, 0.0062,  ..., 0.0068, 0.0074, 0.0070],
         [0.9797, 0.9793, 0.9813,  ..., 0.9797, 0.9777, 0.9791]],
        [[0.0085, 0.0068, 0.0073,  ..., 0.0067, 0.0069, 0.0070],
         [0.0085, 0.0068, 0.0073,  ..., 0.0067, 0.0069, 0.0070],
         [0.0085, 0.0068, 0.0073,  ..., 0.0067, 0.0069, 0.0070],
         [0.9746, 0.9795, 0.9780,  ..., 0.9799, 0.9793, 0.9789]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3145e-03, 4.9640e-03, 5.2493e-03,  ..., 4.9743e-03,
          5.3774e-03, 5.6099e-03],
         [5.3145e-03, 4.9640e-03, 5.2493e-03,  ..., 4.9743e-03,
          5.3774e-03, 5.6099e-03],
         [5.3145e-03, 4.9640e-03, 5.2493e-03,  ..., 4.9743e-03,
          5.3774e-03, 5.6099e-03],
         [9.8406e-01, 9.8511e-01, 9.8425e-01,  ..., 9.8508e-01,
          9.8387e-01, 9.8317e-01]],
        [[5.6040e-03, 5.5378e-03, 6.0541e-03,  ..., 1.6842e-04,
          5.5334e-03, 5.9063e-03],
         [5.6040e-03, 5.5378e-03, 6.0541e-03,  ..., 1.1386e-07,
          5.5334e-03, 5.9063e-03],
         [5.6040e-03, 5.5378e-03, 6.0541e-03,  ..., 9.9983e-01,
          5.5334e-03, 5.9063e-03],
         [9.8319e-01, 9.8339e-01, 9.8184e-01,  ..., 1.1386e-07,
          9.8340e-01, 9.8228e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 525:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:20:29,645 [Process: 0] Synchronize training processes
2024-08-16 16:20:29,646 [Process: 0] Evaluating...
2024-08-16 16:20:29,647 [Process: 0] EPOCH 525:
2024-08-16 16:20:29,649 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0062, 0.0065, 0.0066,  ..., 0.0067, 0.0069, 0.0067],
         [0.0062, 0.0065, 0.0066,  ..., 0.0067, 0.0069, 0.0067],
         [0.0062, 0.0065, 0.0066,  ..., 0.0067, 0.0069, 0.0067],
         [0.9814, 0.9806, 0.9803,  ..., 0.9798, 0.9794, 0.9799]],
        [[0.0069, 0.0080, 0.0061,  ..., 0.0077, 0.0067, 0.0071],
         [0.0069, 0.0080, 0.0061,  ..., 0.0077, 0.0067, 0.0071],
         [0.0069, 0.0080, 0.0061,  ..., 0.0077, 0.0067, 0.0071],
         [0.9794, 0.9759, 0.9818,  ..., 0.9769, 0.9800, 0.9787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.7133e-03, 5.6490e-03, 5.6467e-03,  ..., 5.9379e-03,
          5.3312e-03, 5.2441e-03],
         [5.7133e-03, 5.6490e-03, 5.6467e-03,  ..., 5.9379e-03,
          5.3312e-03, 5.2441e-03],
         [5.7133e-03, 5.6490e-03, 5.6467e-03,  ..., 5.9379e-03,
          5.3312e-03, 5.2441e-03],
         [9.8286e-01, 9.8305e-01, 9.8306e-01,  ..., 9.8219e-01,
          9.8401e-01, 9.8427e-01]],
        [[4.9998e-03, 6.7373e-03, 5.5533e-03,  ..., 1.1949e-05,
          5.3745e-03, 5.0978e-03],
         [4.9998e-03, 6.7373e-03, 5.5533e-03,  ..., 3.1126e-09,
          5.3745e-03, 5.0978e-03],
         [4.9998e-03, 6.7373e-03, 5.5533e-03,  ..., 9.9999e-01,
          5.3745e-03, 5.0978e-03],
         [9.8500e-01, 9.7979e-01, 9.8334e-01,  ..., 3.1126e-09,
          9.8388e-01, 9.8471e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 526:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:20:31,731 [Process: 0] Synchronize training processes
2024-08-16 16:20:31,731 [Process: 0] Evaluating...
2024-08-16 16:20:31,733 [Process: 0] EPOCH 526:
2024-08-16 16:20:31,735 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0063, 0.0070, 0.0067,  ..., 0.0064, 0.0068, 0.0069],
         [0.0063, 0.0070, 0.0067,  ..., 0.0064, 0.0068, 0.0069],
         [0.0063, 0.0070, 0.0067,  ..., 0.0064, 0.0068, 0.0069],
         [0.9811, 0.9791, 0.9798,  ..., 0.9809, 0.9797, 0.9793]],
        [[0.0069, 0.0072, 0.0068,  ..., 0.0068, 0.0068, 0.0073],
         [0.0069, 0.0072, 0.0068,  ..., 0.0068, 0.0068, 0.0073],
         [0.0069, 0.0072, 0.0068,  ..., 0.0068, 0.0068, 0.0073],
         [0.9793, 0.9783, 0.9796,  ..., 0.9795, 0.9797, 0.9781]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5020e-03, 5.6969e-03, 5.3676e-03,  ..., 5.0876e-03,
          4.8744e-03, 5.8006e-03],
         [5.5020e-03, 5.6969e-03, 5.3676e-03,  ..., 5.0876e-03,
          4.8744e-03, 5.8006e-03],
         [5.5020e-03, 5.6969e-03, 5.3676e-03,  ..., 5.0876e-03,
          4.8744e-03, 5.8006e-03],
         [9.8349e-01, 9.8291e-01, 9.8390e-01,  ..., 9.8474e-01,
          9.8538e-01, 9.8260e-01]],
        [[5.2453e-03, 5.6532e-03, 5.4089e-03,  ..., 2.1632e-05,
          5.7425e-03, 5.1996e-03],
         [5.2453e-03, 5.6532e-03, 5.4089e-03,  ..., 5.8479e-08,
          5.7425e-03, 5.1996e-03],
         [5.2453e-03, 5.6532e-03, 5.4089e-03,  ..., 9.9998e-01,
          5.7425e-03, 5.1996e-03],
         [9.8426e-01, 9.8304e-01, 9.8377e-01,  ..., 5.8479e-08,
          9.8277e-01, 9.8440e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 527:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:20:33,810 [Process: 0] Synchronize training processes
2024-08-16 16:20:33,810 [Process: 0] Evaluating...
2024-08-16 16:20:33,812 [Process: 0] EPOCH 527:
2024-08-16 16:20:33,814 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0069, 0.0067,  ..., 0.0067, 0.0068, 0.0066],
         [0.0072, 0.0069, 0.0067,  ..., 0.0067, 0.0068, 0.0066],
         [0.0072, 0.0069, 0.0067,  ..., 0.0067, 0.0068, 0.0066],
         [0.9783, 0.9792, 0.9800,  ..., 0.9799, 0.9796, 0.9803]],
        [[0.0067, 0.0074, 0.0058,  ..., 0.0071, 0.0065, 0.0064],
         [0.0067, 0.0074, 0.0058,  ..., 0.0071, 0.0065, 0.0064],
         [0.0067, 0.0074, 0.0058,  ..., 0.0071, 0.0065, 0.0064],
         [0.9799, 0.9777, 0.9826,  ..., 0.9788, 0.9805, 0.9808]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0609e-03, 5.5923e-03, 5.0192e-03,  ..., 5.4988e-03,
          5.3122e-03, 5.2071e-03],
         [6.0609e-03, 5.5923e-03, 5.0192e-03,  ..., 5.4988e-03,
          5.3122e-03, 5.2071e-03],
         [6.0609e-03, 5.5923e-03, 5.0192e-03,  ..., 5.4988e-03,
          5.3122e-03, 5.2071e-03],
         [9.8182e-01, 9.8322e-01, 9.8494e-01,  ..., 9.8350e-01,
          9.8406e-01, 9.8438e-01]],
        [[4.8662e-03, 6.5701e-03, 4.9400e-03,  ..., 3.2307e-05,
          5.0451e-03, 5.7626e-03],
         [4.8662e-03, 6.5701e-03, 4.9400e-03,  ..., 3.8412e-07,
          5.0451e-03, 5.7626e-03],
         [4.8662e-03, 6.5701e-03, 4.9400e-03,  ..., 9.9997e-01,
          5.0451e-03, 5.7626e-03],
         [9.8540e-01, 9.8029e-01, 9.8518e-01,  ..., 3.8412e-07,
          9.8486e-01, 9.8271e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 528:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:20:35,886 [Process: 0] Synchronize training processes
2024-08-16 16:20:35,886 [Process: 0] Evaluating...
2024-08-16 16:20:35,888 [Process: 0] EPOCH 528:
2024-08-16 16:20:35,890 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0069, 0.0067,  ..., 0.0067, 0.0067, 0.0066],
         [0.0072, 0.0069, 0.0067,  ..., 0.0067, 0.0067, 0.0066],
         [0.0072, 0.0069, 0.0067,  ..., 0.0067, 0.0067, 0.0066],
         [0.9785, 0.9793, 0.9800,  ..., 0.9799, 0.9800, 0.9803]],
        [[0.0064, 0.0066, 0.0064,  ..., 0.0063, 0.0062, 0.0069],
         [0.0064, 0.0066, 0.0064,  ..., 0.0063, 0.0062, 0.0069],
         [0.0064, 0.0066, 0.0064,  ..., 0.0063, 0.0062, 0.0069],
         [0.9808, 0.9802, 0.9808,  ..., 0.9810, 0.9815, 0.9793]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.9918e-03, 5.6254e-03, 5.6510e-03,  ..., 4.7856e-03,
          5.0838e-03, 5.3229e-03],
         [4.9918e-03, 5.6254e-03, 5.6510e-03,  ..., 4.7856e-03,
          5.0838e-03, 5.3229e-03],
         [4.9918e-03, 5.6254e-03, 5.6510e-03,  ..., 4.7856e-03,
          5.0838e-03, 5.3229e-03],
         [9.8502e-01, 9.8312e-01, 9.8305e-01,  ..., 9.8564e-01,
          9.8475e-01, 9.8403e-01]],
        [[5.5223e-03, 6.3363e-03, 5.4935e-03,  ..., 1.3374e-04,
          6.0867e-03, 5.8427e-03],
         [5.5223e-03, 6.3363e-03, 5.4935e-03,  ..., 1.4693e-07,
          6.0867e-03, 5.8427e-03],
         [5.5223e-03, 6.3363e-03, 5.4935e-03,  ..., 9.9987e-01,
          6.0867e-03, 5.8427e-03],
         [9.8343e-01, 9.8099e-01, 9.8352e-01,  ..., 1.4693e-07,
          9.8174e-01, 9.8247e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 529:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:20:37,964 [Process: 0] Synchronize training processes
2024-08-16 16:20:37,965 [Process: 0] Evaluating...
2024-08-16 16:20:37,967 [Process: 0] EPOCH 529:
2024-08-16 16:20:37,969 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0068, 0.0071,  ..., 0.0070, 0.0066, 0.0068],
         [0.0072, 0.0068, 0.0071,  ..., 0.0070, 0.0066, 0.0068],
         [0.0072, 0.0068, 0.0071,  ..., 0.0070, 0.0066, 0.0068],
         [0.9784, 0.9795, 0.9788,  ..., 0.9791, 0.9803, 0.9797]],
        [[0.0065, 0.0070, 0.0069,  ..., 0.0068, 0.0072, 0.0067],
         [0.0065, 0.0070, 0.0069,  ..., 0.0068, 0.0072, 0.0067],
         [0.0065, 0.0070, 0.0069,  ..., 0.0068, 0.0072, 0.0067],
         [0.9804, 0.9790, 0.9794,  ..., 0.9796, 0.9785, 0.9800]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5741e-03, 5.4053e-03, 5.1329e-03,  ..., 5.2132e-03,
          5.2620e-03, 5.3155e-03],
         [5.5741e-03, 5.4053e-03, 5.1329e-03,  ..., 5.2132e-03,
          5.2620e-03, 5.3155e-03],
         [5.5741e-03, 5.4053e-03, 5.1329e-03,  ..., 5.2132e-03,
          5.2620e-03, 5.3155e-03],
         [9.8328e-01, 9.8378e-01, 9.8460e-01,  ..., 9.8436e-01,
          9.8421e-01, 9.8405e-01]],
        [[6.6015e-03, 6.2521e-03, 5.1795e-03,  ..., 1.1762e-04,
          5.6948e-03, 5.3493e-03],
         [6.6015e-03, 6.2521e-03, 5.1795e-03,  ..., 3.7811e-06,
          5.6948e-03, 5.3493e-03],
         [6.6015e-03, 6.2521e-03, 5.1795e-03,  ..., 9.9987e-01,
          5.6948e-03, 5.3493e-03],
         [9.8020e-01, 9.8124e-01, 9.8446e-01,  ..., 3.7811e-06,
          9.8292e-01, 9.8395e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:40,042 [Process: 0] Synchronize training processes
2024-08-16 16:20:40,042 [Process: 0] Evaluating...
2024-08-16 16:20:40,044 [Process: 0] EPOCH 530:
2024-08-16 16:20:40,046 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 530:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0067, 0.0067,  ..., 0.0066, 0.0066, 0.0070],
         [0.0069, 0.0067, 0.0067,  ..., 0.0066, 0.0066, 0.0070],
         [0.0069, 0.0067, 0.0067,  ..., 0.0066, 0.0066, 0.0070],
         [0.9793, 0.9799, 0.9799,  ..., 0.9801, 0.9802, 0.9791]],
        [[0.0058, 0.0074, 0.0062,  ..., 0.0068, 0.0060, 0.0067],
         [0.0058, 0.0074, 0.0062,  ..., 0.0068, 0.0060, 0.0067],
         [0.0058, 0.0074, 0.0062,  ..., 0.0068, 0.0060, 0.0067],
         [0.9826, 0.9777, 0.9813,  ..., 0.9795, 0.9821, 0.9798]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2636e-03, 5.3953e-03, 5.0207e-03,  ..., 6.0416e-03,
          5.4588e-03, 4.7273e-03],
         [5.2636e-03, 5.3953e-03, 5.0207e-03,  ..., 6.0416e-03,
          5.4588e-03, 4.7273e-03],
         [5.2636e-03, 5.3953e-03, 5.0207e-03,  ..., 6.0416e-03,
          5.4588e-03, 4.7273e-03],
         [9.8421e-01, 9.8381e-01, 9.8494e-01,  ..., 9.8188e-01,
          9.8362e-01, 9.8582e-01]],
        [[6.5451e-03, 5.4731e-03, 5.4326e-03,  ..., 9.2604e-04,
          5.5125e-03, 6.0190e-03],
         [6.5451e-03, 5.4731e-03, 5.4326e-03,  ..., 9.6262e-05,
          5.5125e-03, 6.0190e-03],
         [6.5451e-03, 5.4731e-03, 5.4326e-03,  ..., 9.9888e-01,
          5.5125e-03, 6.0190e-03],
         [9.8036e-01, 9.8358e-01, 9.8370e-01,  ..., 9.6262e-05,
          9.8346e-01, 9.8194e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:42,105 [Process: 0] Synchronize training processes
2024-08-16 16:20:42,105 [Process: 0] Evaluating...
2024-08-16 16:20:42,107 [Process: 0] EPOCH 531:
2024-08-16 16:20:42,109 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 531:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0069, 0.0071,  ..., 0.0064, 0.0069, 0.0069],
         [0.0072, 0.0069, 0.0071,  ..., 0.0064, 0.0069, 0.0069],
         [0.0072, 0.0069, 0.0071,  ..., 0.0064, 0.0069, 0.0069],
         [0.9785, 0.9793, 0.9786,  ..., 0.9807, 0.9794, 0.9792]],
        [[0.0071, 0.0071, 0.0063,  ..., 0.0062, 0.0063, 0.0067],
         [0.0071, 0.0071, 0.0063,  ..., 0.0062, 0.0063, 0.0067],
         [0.0071, 0.0071, 0.0063,  ..., 0.0062, 0.0063, 0.0067],
         [0.9787, 0.9787, 0.9811,  ..., 0.9815, 0.9812, 0.9798]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.9609e-03, 5.0263e-03, 5.7693e-03,  ..., 5.4958e-03,
          5.0346e-03, 5.1736e-03],
         [4.9609e-03, 5.0263e-03, 5.7693e-03,  ..., 5.4958e-03,
          5.0346e-03, 5.1736e-03],
         [4.9609e-03, 5.0263e-03, 5.7693e-03,  ..., 5.4958e-03,
          5.0346e-03, 5.1736e-03],
         [9.8512e-01, 9.8492e-01, 9.8269e-01,  ..., 9.8351e-01,
          9.8490e-01, 9.8448e-01]],
        [[5.7668e-03, 5.8396e-03, 5.5442e-03,  ..., 4.2879e-05,
          5.0172e-03, 5.7341e-03],
         [5.7668e-03, 5.8396e-03, 5.5442e-03,  ..., 2.7190e-07,
          5.0172e-03, 5.7341e-03],
         [5.7668e-03, 5.8396e-03, 5.5442e-03,  ..., 9.9996e-01,
          5.0172e-03, 5.7341e-03],
         [9.8270e-01, 9.8248e-01, 9.8337e-01,  ..., 2.7190e-07,
          9.8495e-01, 9.8280e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:44,178 [Process: 0] Synchronize training processes
2024-08-16 16:20:44,178 [Process: 0] Evaluating...
2024-08-16 16:20:44,186 [Process: 0] EPOCH 532:
2024-08-16 16:20:44,188 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 532:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0068, 0.0067, 0.0067,  ..., 0.0069, 0.0066, 0.0067],
         [0.0068, 0.0067, 0.0067,  ..., 0.0069, 0.0066, 0.0067],
         [0.0068, 0.0067, 0.0067,  ..., 0.0069, 0.0066, 0.0067],
         [0.9795, 0.9799, 0.9798,  ..., 0.9794, 0.9801, 0.9798]],
        [[0.0061, 0.0057, 0.0064,  ..., 0.0061, 0.0067, 0.0064],
         [0.0061, 0.0057, 0.0064,  ..., 0.0061, 0.0067, 0.0064],
         [0.0061, 0.0057, 0.0064,  ..., 0.0061, 0.0067, 0.0064],
         [0.9816, 0.9829, 0.9809,  ..., 0.9818, 0.9800, 0.9808]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:20:46,260 [Process: 0] Synchronize training processes
2024-08-16 16:20:46,260 [Process: 0] Evaluating...
2024-08-16 16:20:46,262 [Process: 0] EPOCH 533:
2024-08-16 16:20:46,264 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.6666e-03, 5.0155e-03, 4.6653e-03,  ..., 5.6916e-03,
          5.5342e-03, 4.8000e-03],
         [5.6666e-03, 5.0155e-03, 4.6653e-03,  ..., 5.6916e-03,
          5.5342e-03, 4.8000e-03],
         [5.6666e-03, 5.0155e-03, 4.6653e-03,  ..., 5.6916e-03,
          5.5342e-03, 4.8000e-03],
         [9.8300e-01, 9.8495e-01, 9.8600e-01,  ..., 9.8293e-01,
          9.8340e-01, 9.8560e-01]],
        [[5.1762e-03, 5.6991e-03, 6.1607e-03,  ..., 2.9953e-05,
          6.2635e-03, 5.7621e-03],
         [5.1762e-03, 5.6991e-03, 6.1607e-03,  ..., 6.3082e-08,
          6.2635e-03, 5.7621e-03],
         [5.1762e-03, 5.6991e-03, 6.1607e-03,  ..., 9.9997e-01,
          6.2635e-03, 5.7621e-03],
         [9.8447e-01, 9.8290e-01, 9.8152e-01,  ..., 6.3082e-08,
          9.8121e-01, 9.8271e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 533:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0067, 0.0060, 0.0062,  ..., 0.0064, 0.0065, 0.0069],
         [0.0067, 0.0060, 0.0062,  ..., 0.0064, 0.0065, 0.0069],
         [0.0067, 0.0060, 0.0062,  ..., 0.0064, 0.0065, 0.0069],
         [0.9798, 0.9819, 0.9813,  ..., 0.9809, 0.9804, 0.9794]],
        [[0.0070, 0.0062, 0.0063,  ..., 0.0066, 0.0061, 0.0063],
         [0.0070, 0.0062, 0.0063,  ..., 0.0066, 0.0061, 0.0063],
         [0.0070, 0.0062, 0.0063,  ..., 0.0066, 0.0061, 0.0063],
         [0.9789, 0.9814, 0.9812,  ..., 0.9801, 0.9816, 0.9812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:48,346 [Process: 0] Synchronize training processes
2024-08-16 16:20:48,346 [Process: 0] Evaluating...
2024-08-16 16:20:48,348 [Process: 0] EPOCH 534:
2024-08-16 16:20:48,350 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4232e-03, 4.6858e-03, 5.3824e-03,  ..., 5.6781e-03,
          5.6007e-03, 5.6753e-03],
         [5.4232e-03, 4.6463e-03, 5.3824e-03,  ..., 5.6781e-03,
          5.6007e-03, 5.6753e-03],
         [5.4232e-03, 4.6463e-03, 5.3824e-03,  ..., 5.6781e-03,
          5.6007e-03, 5.6753e-03],
         [9.8373e-01, 9.8602e-01, 9.8385e-01,  ..., 9.8297e-01,
          9.8320e-01, 9.8297e-01]],
        [[5.9652e-03, 6.2598e-03, 5.8241e-03,  ..., 3.8873e-05,
          5.4467e-03, 5.2011e-03],
         [5.9652e-03, 6.2598e-03, 5.8241e-03,  ..., 3.3706e-07,
          5.4467e-03, 5.2011e-03],
         [5.9652e-03, 6.2598e-03, 5.8241e-03,  ..., 9.9996e-01,
          5.4467e-03, 5.2011e-03],
         [9.8210e-01, 9.8122e-01, 9.8253e-01,  ..., 3.3706e-07,
          9.8366e-01, 9.8440e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 534:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0065, 0.0061,  ..., 0.0062, 0.0061, 0.0066],
         [0.0058, 0.0065, 0.0061,  ..., 0.0062, 0.0061, 0.0066],
         [0.0058, 0.0065, 0.0061,  ..., 0.0062, 0.0061, 0.0066],
         [0.9827, 0.9805, 0.9817,  ..., 0.9813, 0.9818, 0.9803]],
        [[0.0093, 0.0073, 0.0058,  ..., 0.0063, 0.0059, 0.0060],
         [0.0093, 0.0073, 0.0058,  ..., 0.0063, 0.0059, 0.0060],
         [0.0093, 0.0073, 0.0058,  ..., 0.0063, 0.0059, 0.0060],
         [0.9720, 0.9781, 0.9826,  ..., 0.9811, 0.9823, 0.9821]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:50,415 [Process: 0] Synchronize training processes
2024-08-16 16:20:50,415 [Process: 0] Evaluating...
2024-08-16 16:20:50,417 [Process: 0] EPOCH 535:
2024-08-16 16:20:50,419 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7145e-03, 4.9562e-03, 5.1557e-03,  ..., 5.2213e-03,
          5.4960e-03, 5.8288e-03],
         [4.6521e-03, 4.9562e-03, 5.1557e-03,  ..., 5.2213e-03,
          5.4960e-03, 5.8288e-03],
         [4.6521e-03, 4.9562e-03, 5.1557e-03,  ..., 5.2213e-03,
          5.4960e-03, 5.8288e-03],
         [9.8598e-01, 9.8513e-01, 9.8453e-01,  ..., 9.8434e-01,
          9.8351e-01, 9.8251e-01]],
        [[5.7308e-03, 4.9131e-03, 6.6150e-03,  ..., 4.6244e-05,
          5.1444e-03, 5.5363e-03],
         [5.7308e-03, 4.9131e-03, 6.6150e-03,  ..., 5.2237e-07,
          5.1444e-03, 5.5363e-03],
         [5.7308e-03, 4.9131e-03, 6.6150e-03,  ..., 9.9995e-01,
          5.1444e-03, 5.5363e-03],
         [9.8281e-01, 9.8526e-01, 9.8015e-01,  ..., 5.2237e-07,
          9.8457e-01, 9.8339e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 535:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0063, 0.0060, 0.0060,  ..., 0.0061, 0.0062, 0.0060],
         [0.0063, 0.0060, 0.0060,  ..., 0.0061, 0.0062, 0.0060],
         [0.0063, 0.0060, 0.0060,  ..., 0.0061, 0.0062, 0.0060],
         [0.9812, 0.9820, 0.9820,  ..., 0.9817, 0.9814, 0.9820]],
        [[0.0207, 0.0141, 0.0053,  ..., 0.0053, 0.0054, 0.0065],
         [0.0207, 0.0141, 0.0053,  ..., 0.0053, 0.0054, 0.0065],
         [0.0207, 0.0141, 0.0053,  ..., 0.0053, 0.0054, 0.0065],
         [0.9379, 0.9576, 0.9842,  ..., 0.9840, 0.9839, 0.9806]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:52,500 [Process: 0] Synchronize training processes
2024-08-16 16:20:52,500 [Process: 0] Evaluating...
2024-08-16 16:20:52,502 [Process: 0] EPOCH 536:
2024-08-16 16:20:52,504 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.9558e-03, 5.0466e-03, 5.1899e-03,  ..., 5.0537e-03,
          4.9349e-03, 5.7041e-03],
         [4.9558e-03, 5.0466e-03, 5.1899e-03,  ..., 5.0521e-03,
          4.9349e-03, 5.7041e-03],
         [4.9558e-03, 5.0466e-03, 5.1899e-03,  ..., 5.0521e-03,
          4.9349e-03, 5.7041e-03],
         [9.8513e-01, 9.8486e-01, 9.8443e-01,  ..., 9.8484e-01,
          9.8520e-01, 9.8289e-01]],
        [[6.3268e-03, 5.2006e-03, 5.5070e-03,  ..., 6.8572e-06,
          5.9013e-03, 5.5976e-03],
         [6.3268e-03, 5.2006e-03, 5.5070e-03,  ..., 3.9858e-08,
          5.9013e-03, 5.5976e-03],
         [6.3268e-03, 5.2006e-03, 5.5070e-03,  ..., 9.9999e-01,
          5.9013e-03, 5.5976e-03],
         [9.8102e-01, 9.8440e-01, 9.8348e-01,  ..., 3.9858e-08,
          9.8230e-01, 9.8321e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 536:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0082, 0.0090,  ..., 0.0065, 0.0087, 0.0082],
         [0.0095, 0.0082, 0.0090,  ..., 0.0065, 0.0087, 0.0082],
         [0.0095, 0.0082, 0.0090,  ..., 0.0065, 0.0087, 0.0082],
         [0.9714, 0.9753, 0.9730,  ..., 0.9804, 0.9739, 0.9754]],
        [[0.0074, 0.0080, 0.0052,  ..., 0.0051, 0.0057, 0.0053],
         [0.0074, 0.0080, 0.0052,  ..., 0.0051, 0.0057, 0.0053],
         [0.0074, 0.0080, 0.0052,  ..., 0.0051, 0.0057, 0.0053],
         [0.9778, 0.9761, 0.9845,  ..., 0.9846, 0.9828, 0.9841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:54,586 [Process: 0] Synchronize training processes
2024-08-16 16:20:54,586 [Process: 0] Evaluating...
2024-08-16 16:20:54,588 [Process: 0] EPOCH 537:
2024-08-16 16:20:54,590 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.6351e-03, 5.4542e-03, 5.1307e-03,  ..., 5.0698e-03,
          5.5207e-03, 4.5115e-03],
         [4.6351e-03, 5.4542e-03, 5.1307e-03,  ..., 5.0384e-03,
          5.5207e-03, 4.4112e-03],
         [4.6351e-03, 5.4542e-03, 5.1307e-03,  ..., 5.0384e-03,
          5.5207e-03, 4.4112e-03],
         [9.8609e-01, 9.8364e-01, 9.8461e-01,  ..., 9.8485e-01,
          9.8344e-01, 9.8667e-01]],
        [[6.4556e-03, 5.8092e-03, 5.3656e-03,  ..., 1.5463e-04,
          5.9193e-03, 5.4339e-03],
         [6.4556e-03, 5.8092e-03, 5.3656e-03,  ..., 1.5538e-06,
          5.9193e-03, 5.4339e-03],
         [6.4556e-03, 5.8092e-03, 5.3656e-03,  ..., 9.9984e-01,
          5.9193e-03, 5.4339e-03],
         [9.8063e-01, 9.8257e-01, 9.8390e-01,  ..., 1.5538e-06,
          9.8224e-01, 9.8370e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 537:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0072, 0.0080,  ..., 0.0075, 0.0078, 0.0071],
         [0.0090, 0.0072, 0.0080,  ..., 0.0075, 0.0078, 0.0071],
         [0.0090, 0.0072, 0.0080,  ..., 0.0075, 0.0078, 0.0071],
         [0.9729, 0.9784, 0.9760,  ..., 0.9776, 0.9767, 0.9787]],
        [[0.0121, 0.0062, 0.0052,  ..., 0.0054, 0.0056, 0.0053],
         [0.0121, 0.0062, 0.0052,  ..., 0.0054, 0.0056, 0.0053],
         [0.0121, 0.0062, 0.0052,  ..., 0.0054, 0.0056, 0.0053],
         [0.9636, 0.9815, 0.9843,  ..., 0.9839, 0.9833, 0.9840]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:56,658 [Process: 0] Synchronize training processes
2024-08-16 16:20:56,659 [Process: 0] Evaluating...
2024-08-16 16:20:56,661 [Process: 0] EPOCH 538:
2024-08-16 16:20:56,662 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1764e-03, 4.8932e-03, 5.0437e-03,  ..., 5.7869e-03,
          5.2644e-03, 5.1891e-03],
         [5.1764e-03, 4.8932e-03, 5.0437e-03,  ..., 5.7869e-03,
          5.2644e-03, 5.1891e-03],
         [5.1764e-03, 4.8932e-03, 5.0437e-03,  ..., 5.7869e-03,
          5.2644e-03, 5.1891e-03],
         [9.8447e-01, 9.8532e-01, 9.8487e-01,  ..., 9.8264e-01,
          9.8421e-01, 9.8443e-01]],
        [[6.9433e-03, 4.9365e-03, 5.1800e-03,  ..., 3.2903e-04,
          5.7463e-03, 5.5115e-03],
         [6.9433e-03, 4.9251e-03, 5.1800e-03,  ..., 6.4464e-07,
          5.7463e-03, 5.5115e-03],
         [6.9433e-03, 4.9251e-03, 5.1800e-03,  ..., 9.9967e-01,
          5.7463e-03, 5.5115e-03],
         [9.7917e-01, 9.8521e-01, 9.8446e-01,  ..., 6.4464e-07,
          9.8276e-01, 9.8347e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 538:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0065, 0.0063,  ..., 0.0062, 0.0067, 0.0060],
         [0.0061, 0.0065, 0.0063,  ..., 0.0062, 0.0067, 0.0060],
         [0.0061, 0.0065, 0.0063,  ..., 0.0062, 0.0067, 0.0060],
         [0.9818, 0.9806, 0.9811,  ..., 0.9815, 0.9800, 0.9819]],
        [[0.0317, 0.0062, 0.0056,  ..., 0.0057, 0.0055, 0.0057],
         [0.0317, 0.0062, 0.0056,  ..., 0.0057, 0.0055, 0.0057],
         [0.0317, 0.0062, 0.0056,  ..., 0.0057, 0.0055, 0.0057],
         [0.9049, 0.9814, 0.9833,  ..., 0.9829, 0.9836, 0.9828]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:20:58,731 [Process: 0] Synchronize training processes
2024-08-16 16:20:58,731 [Process: 0] Evaluating...
2024-08-16 16:20:58,733 [Process: 0] EPOCH 539:
2024-08-16 16:20:58,735 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4497e-03, 4.6864e-03, 5.1984e-03,  ..., 5.5592e-03,
          5.3690e-03, 5.7437e-03],
         [5.4497e-03, 4.5340e-03, 5.1984e-03,  ..., 5.5592e-03,
          5.3690e-03, 5.7437e-03],
         [5.4497e-03, 4.5340e-03, 5.1984e-03,  ..., 5.5592e-03,
          5.3690e-03, 5.7437e-03],
         [9.8365e-01, 9.8625e-01, 9.8440e-01,  ..., 9.8332e-01,
          9.8389e-01, 9.8277e-01]],
        [[6.2057e-03, 5.3429e-03, 5.4061e-03,  ..., 8.7401e-06,
          5.2385e-03, 5.2068e-03],
         [6.2057e-03, 5.3429e-03, 5.4061e-03,  ..., 8.2293e-09,
          5.2385e-03, 5.2068e-03],
         [6.2057e-03, 5.3429e-03, 5.4061e-03,  ..., 9.9999e-01,
          5.2385e-03, 5.2068e-03],
         [9.8138e-01, 9.8397e-01, 9.8378e-01,  ..., 8.2293e-09,
          9.8428e-01, 9.8438e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 539:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0062, 0.0060,  ..., 0.0059, 0.0056, 0.0060],
         [0.0061, 0.0062, 0.0060,  ..., 0.0059, 0.0056, 0.0060],
         [0.0061, 0.0062, 0.0060,  ..., 0.0059, 0.0056, 0.0060],
         [0.9818, 0.9815, 0.9821,  ..., 0.9822, 0.9833, 0.9821]],
        [[0.0297, 0.0126, 0.0051,  ..., 0.0054, 0.0053, 0.0053],
         [0.0297, 0.0126, 0.0050,  ..., 0.0054, 0.0053, 0.0053],
         [0.0297, 0.0126, 0.0050,  ..., 0.0054, 0.0053, 0.0053],
         [0.9109, 0.9623, 0.9849,  ..., 0.9839, 0.9840, 0.9841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:00,842 [Process: 0] Synchronize training processes
2024-08-16 16:21:00,842 [Process: 0] Evaluating...
2024-08-16 16:21:00,844 [Process: 0] EPOCH 540:
2024-08-16 16:21:00,846 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.5587e-03, 4.9441e-03, 5.0037e-03,  ..., 6.0067e-03,
          5.3371e-03, 5.4604e-03],
         [4.4317e-03, 4.9441e-03, 5.0037e-03,  ..., 6.0067e-03,
          5.3371e-03, 5.4604e-03],
         [4.4317e-03, 4.9441e-03, 5.0037e-03,  ..., 6.0067e-03,
          5.3371e-03, 5.4604e-03],
         [9.8658e-01, 9.8517e-01, 9.8499e-01,  ..., 9.8198e-01,
          9.8399e-01, 9.8362e-01]],
        [[6.7495e-03, 5.0615e-03, 6.6540e-03,  ..., 4.7022e-05,
          4.9821e-03, 5.4231e-03],
         [6.7495e-03, 5.0615e-03, 6.6540e-03,  ..., 1.4529e-06,
          4.9150e-03, 5.4231e-03],
         [6.7495e-03, 5.0615e-03, 6.6540e-03,  ..., 9.9995e-01,
          4.9150e-03, 5.4231e-03],
         [9.7975e-01, 9.8482e-01, 9.8004e-01,  ..., 1.4529e-06,
          9.8519e-01, 9.8373e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 540:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0063, 0.0064, 0.0062,  ..., 0.0063, 0.0063, 0.0063],
         [0.0063, 0.0064, 0.0062,  ..., 0.0063, 0.0063, 0.0063],
         [0.0063, 0.0064, 0.0062,  ..., 0.0063, 0.0063, 0.0063],
         [0.9812, 0.9809, 0.9814,  ..., 0.9810, 0.9812, 0.9811]],
        [[0.0868, 0.0054, 0.0063,  ..., 0.0053, 0.0049, 0.0055],
         [0.0868, 0.0054, 0.0063,  ..., 0.0053, 0.0049, 0.0055],
         [0.0868, 0.0054, 0.0063,  ..., 0.0053, 0.0049, 0.0055],
         [0.7396, 0.9837, 0.9812,  ..., 0.9842, 0.9852, 0.9835]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:02,930 [Process: 0] Synchronize training processes
2024-08-16 16:21:02,930 [Process: 0] Evaluating...
2024-08-16 16:21:02,932 [Process: 0] EPOCH 541:
2024-08-16 16:21:02,934 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.3630e-03, 5.0694e-03, 5.3941e-03,  ..., 5.3334e-03,
          5.3240e-03, 4.9179e-03],
         [4.3056e-03, 4.9768e-03, 5.3941e-03,  ..., 5.3334e-03,
          5.3240e-03, 4.8690e-03],
         [4.3056e-03, 4.9768e-03, 5.3941e-03,  ..., 5.3334e-03,
          5.3240e-03, 4.8690e-03],
         [9.8703e-01, 9.8498e-01, 9.8382e-01,  ..., 9.8400e-01,
          9.8403e-01, 9.8534e-01]],
        [[5.9476e-03, 5.1807e-03, 6.2339e-03,  ..., 4.9388e-05,
          4.8334e-03, 5.8582e-03],
         [5.9476e-03, 5.1807e-03, 6.2339e-03,  ..., 1.6277e-07,
          4.7723e-03, 5.8582e-03],
         [5.9476e-03, 5.1807e-03, 6.2339e-03,  ..., 9.9995e-01,
          4.7723e-03, 5.8582e-03],
         [9.8216e-01, 9.8446e-01, 9.8130e-01,  ..., 1.6277e-07,
          9.8562e-01, 9.8243e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 541:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.0062, 0.0065,  ..., 0.0064, 0.0061, 0.0063],
         [0.0065, 0.0062, 0.0065,  ..., 0.0064, 0.0061, 0.0063],
         [0.0065, 0.0062, 0.0065,  ..., 0.0064, 0.0061, 0.0063],
         [0.9805, 0.9815, 0.9806,  ..., 0.9807, 0.9816, 0.9810]],
        [[0.0094, 0.0058, 0.0053,  ..., 0.0053, 0.0046, 0.0054],
         [0.0094, 0.0058, 0.0053,  ..., 0.0053, 0.0045, 0.0054],
         [0.0094, 0.0058, 0.0053,  ..., 0.0053, 0.0045, 0.0054],
         [0.9719, 0.9826, 0.9842,  ..., 0.9842, 0.9864, 0.9839]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:05,010 [Process: 0] Synchronize training processes
2024-08-16 16:21:05,011 [Process: 0] Evaluating...
2024-08-16 16:21:05,019 [Process: 0] EPOCH 542:
2024-08-16 16:21:05,021 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.8950e-03, 4.7703e-03, 4.8276e-03,  ..., 5.5361e-03,
          5.5728e-03, 5.1438e-03],
         [4.8022e-03, 4.7703e-03, 4.8276e-03,  ..., 5.5361e-03,
          5.5728e-03, 5.1438e-03],
         [4.8022e-03, 4.7703e-03, 4.8276e-03,  ..., 5.5361e-03,
          5.5728e-03, 5.1438e-03],
         [9.8550e-01, 9.8569e-01, 9.8552e-01,  ..., 9.8339e-01,
          9.8328e-01, 9.8457e-01]],
        [[5.3565e-03, 5.9197e-03, 6.2220e-03,  ..., 1.1901e-05,
          5.0879e-03, 5.1213e-03],
         [5.3565e-03, 5.9197e-03, 6.2220e-03,  ..., 1.7728e-07,
          5.0879e-03, 5.1213e-03],
         [5.3565e-03, 5.9197e-03, 6.2220e-03,  ..., 9.9999e-01,
          5.0879e-03, 5.1213e-03],
         [9.8393e-01, 9.8224e-01, 9.8133e-01,  ..., 1.7728e-07,
          9.8474e-01, 9.8464e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 542:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0062, 0.0062,  ..., 0.0060, 0.0063, 0.0062],
         [0.0061, 0.0062, 0.0062,  ..., 0.0060, 0.0063, 0.0062],
         [0.0061, 0.0062, 0.0062,  ..., 0.0060, 0.0063, 0.0062],
         [0.9818, 0.9814, 0.9814,  ..., 0.9820, 0.9810, 0.9815]],
        [[0.0084, 0.0050, 0.0058,  ..., 0.0051, 0.0055, 0.0054],
         [0.0084, 0.0050, 0.0058,  ..., 0.0051, 0.0055, 0.0054],
         [0.0084, 0.0050, 0.0058,  ..., 0.0051, 0.0055, 0.0054],
         [0.9747, 0.9849, 0.9825,  ..., 0.9847, 0.9836, 0.9837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:07,105 [Process: 0] Synchronize training processes
2024-08-16 16:21:07,106 [Process: 0] Evaluating...
2024-08-16 16:21:07,108 [Process: 0] EPOCH 543:
2024-08-16 16:21:07,109 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1709e-03, 4.6235e-03, 5.0470e-03,  ..., 5.0054e-03,
          5.9155e-03, 4.9154e-03],
         [5.1503e-03, 4.6120e-03, 5.0470e-03,  ..., 5.0054e-03,
          5.9155e-03, 4.9065e-03],
         [5.1503e-03, 4.6120e-03, 5.0470e-03,  ..., 5.0054e-03,
          5.9155e-03, 4.9065e-03],
         [9.8453e-01, 9.8615e-01, 9.8486e-01,  ..., 9.8498e-01,
          9.8225e-01, 9.8527e-01]],
        [[4.8572e-03, 4.9790e-03, 5.7248e-03,  ..., 2.4570e-05,
          5.0768e-03, 5.5032e-03],
         [4.8425e-03, 4.9790e-03, 5.7248e-03,  ..., 1.8577e-07,
          5.0768e-03, 5.5032e-03],
         [4.8425e-03, 4.9790e-03, 5.7248e-03,  ..., 9.9997e-01,
          5.0768e-03, 5.5032e-03],
         [9.8546e-01, 9.8506e-01, 9.8283e-01,  ..., 1.8577e-07,
          9.8477e-01, 9.8349e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 543:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0066, 0.0069, 0.0067,  ..., 0.0059, 0.0065, 0.0061],
         [0.0066, 0.0069, 0.0067,  ..., 0.0059, 0.0065, 0.0061],
         [0.0066, 0.0069, 0.0067,  ..., 0.0059, 0.0065, 0.0061],
         [0.9803, 0.9792, 0.9799,  ..., 0.9824, 0.9804, 0.9816]],
        [[0.0076, 0.0050, 0.0055,  ..., 0.0049, 0.0053, 0.0053],
         [0.0076, 0.0050, 0.0055,  ..., 0.0049, 0.0053, 0.0053],
         [0.0076, 0.0050, 0.0055,  ..., 0.0049, 0.0053, 0.0053],
         [0.9772, 0.9849, 0.9836,  ..., 0.9854, 0.9841, 0.9841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:09,190 [Process: 0] Synchronize training processes
2024-08-16 16:21:09,190 [Process: 0] Evaluating...
2024-08-16 16:21:09,192 [Process: 0] EPOCH 544:
2024-08-16 16:21:09,194 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3167e-03, 4.9731e-03, 4.9473e-03,  ..., 5.2988e-03,
          5.5432e-03, 4.9953e-03],
         [5.3167e-03, 4.9731e-03, 4.9473e-03,  ..., 5.2988e-03,
          5.5432e-03, 4.9953e-03],
         [5.3167e-03, 4.9731e-03, 4.9473e-03,  ..., 5.2988e-03,
          5.5432e-03, 4.9953e-03],
         [9.8405e-01, 9.8508e-01, 9.8516e-01,  ..., 9.8410e-01,
          9.8337e-01, 9.8501e-01]],
        [[5.2395e-03, 5.0103e-03, 5.5816e-03,  ..., 1.0945e-04,
          5.7622e-03, 4.9180e-03],
         [5.2395e-03, 5.0103e-03, 5.5816e-03,  ..., 1.4189e-06,
          5.7622e-03, 4.9180e-03],
         [5.2395e-03, 5.0103e-03, 5.5816e-03,  ..., 9.9989e-01,
          5.7622e-03, 4.9180e-03],
         [9.8428e-01, 9.8497e-01, 9.8326e-01,  ..., 1.4189e-06,
          9.8271e-01, 9.8525e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 544:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.0069, 0.0067,  ..., 0.0061, 0.0064, 0.0063],
         [0.0065, 0.0069, 0.0067,  ..., 0.0061, 0.0064, 0.0063],
         [0.0065, 0.0069, 0.0067,  ..., 0.0061, 0.0064, 0.0063],
         [0.9804, 0.9794, 0.9800,  ..., 0.9816, 0.9807, 0.9812]],
        [[0.0070, 0.0054, 0.0057,  ..., 0.0052, 0.0052, 0.0052],
         [0.0070, 0.0054, 0.0057,  ..., 0.0052, 0.0052, 0.0052],
         [0.0070, 0.0054, 0.0057,  ..., 0.0052, 0.0052, 0.0052],
         [0.9789, 0.9839, 0.9828,  ..., 0.9845, 0.9845, 0.9844]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:11,280 [Process: 0] Synchronize training processes
2024-08-16 16:21:11,280 [Process: 0] Evaluating...
2024-08-16 16:21:11,282 [Process: 0] EPOCH 545:
2024-08-16 16:21:11,284 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.6565e-03, 5.4282e-03, 5.1178e-03,  ..., 5.5386e-03,
          5.9943e-03, 5.4243e-03],
         [4.6124e-03, 5.4282e-03, 5.1178e-03,  ..., 5.5386e-03,
          5.9943e-03, 5.4243e-03],
         [4.6124e-03, 5.4282e-03, 5.1178e-03,  ..., 5.5386e-03,
          5.9943e-03, 5.4243e-03],
         [9.8612e-01, 9.8372e-01, 9.8465e-01,  ..., 9.8338e-01,
          9.8202e-01, 9.8373e-01]],
        [[5.2158e-03, 5.8161e-03, 6.1193e-03,  ..., 1.0375e-05,
          5.3854e-03, 5.1845e-03],
         [5.2158e-03, 5.8161e-03, 6.1193e-03,  ..., 7.6169e-09,
          5.3854e-03, 5.1845e-03],
         [5.2158e-03, 5.8161e-03, 6.1193e-03,  ..., 9.9999e-01,
          5.3854e-03, 5.1845e-03],
         [9.8435e-01, 9.8255e-01, 9.8164e-01,  ..., 7.6169e-09,
          9.8384e-01, 9.8445e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 545:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0065, 0.0063,  ..., 0.0062, 0.0064, 0.0061],
         [0.0061, 0.0065, 0.0063,  ..., 0.0062, 0.0064, 0.0061],
         [0.0061, 0.0065, 0.0063,  ..., 0.0062, 0.0064, 0.0061],
         [0.9817, 0.9806, 0.9812,  ..., 0.9815, 0.9809, 0.9817]],
        [[0.0069, 0.0058, 0.0055,  ..., 0.0050, 0.0052, 0.0054],
         [0.0069, 0.0058, 0.0055,  ..., 0.0050, 0.0052, 0.0054],
         [0.0069, 0.0058, 0.0055,  ..., 0.0050, 0.0052, 0.0054],
         [0.9792, 0.9826, 0.9834,  ..., 0.9849, 0.9843, 0.9837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1907e-03, 4.8004e-03, 5.2191e-03,  ..., 4.6691e-03,
          5.1828e-03, 4.8305e-03],
         [5.1907e-03, 4.8004e-03, 5.2191e-03,  ..., 4.6687e-03,
          5.1828e-03, 4.8305e-03],
         [5.1907e-03, 4.8004e-03, 5.2191e-03,  ..., 4.6687e-03,
          5.1828e-03, 4.8305e-03],
         [9.8443e-01, 9.8560e-01, 9.8434e-01,  ..., 9.8599e-01,
          9.8445e-01, 9.8551e-01]],
        [[5.2949e-03, 5.1825e-03, 7.1030e-03,  ..., 4.4031e-05,
          5.5010e-03, 5.1678e-03],
         [5.2949e-03, 5.1825e-03, 7.1030e-03,  ..., 2.5855e-08,
          5.5010e-03, 5.1678e-03],
         [5.2949e-03, 5.1825e-03, 7.1030e-03,  ..., 9.9996e-01,
          5.5010e-03, 5.1678e-03],
         [9.8412e-01, 9.8445e-01, 9.7869e-01,  ..., 2.5855e-08,
          9.8350e-01, 9.8450e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 546:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:21:13,365 [Process: 0] Synchronize training processes
2024-08-16 16:21:13,365 [Process: 0] Evaluating...
2024-08-16 16:21:13,367 [Process: 0] EPOCH 546:
2024-08-16 16:21:13,369 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0059, 0.0058,  ..., 0.0059, 0.0058, 0.0062],
         [0.0061, 0.0059, 0.0058,  ..., 0.0059, 0.0058, 0.0062],
         [0.0061, 0.0059, 0.0058,  ..., 0.0059, 0.0058, 0.0062],
         [0.9817, 0.9823, 0.9825,  ..., 0.9823, 0.9825, 0.9814]],
        [[0.0098, 0.0053, 0.0053,  ..., 0.0056, 0.0057, 0.0056],
         [0.0098, 0.0053, 0.0053,  ..., 0.0056, 0.0057, 0.0056],
         [0.0098, 0.0053, 0.0053,  ..., 0.0056, 0.0057, 0.0056],
         [0.9706, 0.9840, 0.9841,  ..., 0.9832, 0.9828, 0.9832]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7724e-03, 4.9147e-03, 4.5437e-03,  ..., 5.1806e-03,
          4.7128e-03, 5.2440e-03],
         [4.6819e-03, 4.9018e-03, 4.5282e-03,  ..., 5.1806e-03,
          4.6907e-03, 5.2440e-03],
         [4.6819e-03, 4.9018e-03, 4.5282e-03,  ..., 5.1806e-03,
          4.6907e-03, 5.2440e-03],
         [9.8586e-01, 9.8528e-01, 9.8640e-01,  ..., 9.8446e-01,
          9.8591e-01, 9.8427e-01]],
        [[5.7959e-03, 5.0912e-03, 6.5885e-03,  ..., 3.5264e-06,
          5.2861e-03, 5.2624e-03],
         [5.7959e-03, 5.0912e-03, 6.5885e-03,  ..., 8.0162e-09,
          5.2861e-03, 5.2624e-03],
         [5.7959e-03, 5.0912e-03, 6.5885e-03,  ..., 1.0000e+00,
          5.2861e-03, 5.2624e-03],
         [9.8261e-01, 9.8473e-01, 9.8023e-01,  ..., 8.0162e-09,
          9.8414e-01, 9.8421e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 547:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:21:15,435 [Process: 0] Synchronize training processes
2024-08-16 16:21:15,436 [Process: 0] Evaluating...
2024-08-16 16:21:15,437 [Process: 0] EPOCH 547:
2024-08-16 16:21:15,439 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0064, 0.0058,  ..., 0.0061, 0.0061, 0.0060],
         [0.0060, 0.0064, 0.0058,  ..., 0.0061, 0.0061, 0.0060],
         [0.0060, 0.0064, 0.0058,  ..., 0.0061, 0.0061, 0.0060],
         [0.9819, 0.9809, 0.9825,  ..., 0.9818, 0.9817, 0.9821]],
        [[0.0070, 0.0053, 0.0059,  ..., 0.0059, 0.0054, 0.0054],
         [0.0070, 0.0053, 0.0059,  ..., 0.0059, 0.0054, 0.0054],
         [0.0070, 0.0053, 0.0059,  ..., 0.0059, 0.0054, 0.0054],
         [0.9790, 0.9840, 0.9822,  ..., 0.9823, 0.9837, 0.9837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2450e-03, 4.8413e-03, 5.4415e-03,  ..., 5.3320e-03,
          5.5196e-03, 5.4330e-03],
         [5.2450e-03, 4.8359e-03, 5.4415e-03,  ..., 5.3320e-03,
          5.5196e-03, 5.4330e-03],
         [5.2450e-03, 4.8359e-03, 5.4415e-03,  ..., 5.3320e-03,
          5.5196e-03, 5.4330e-03],
         [9.8426e-01, 9.8549e-01, 9.8368e-01,  ..., 9.8400e-01,
          9.8344e-01, 9.8370e-01]],
        [[5.0471e-03, 4.8524e-03, 5.0769e-03,  ..., 1.7067e-05,
          5.0722e-03, 5.1835e-03],
         [5.0471e-03, 4.8524e-03, 5.0769e-03,  ..., 1.8599e-08,
          5.0722e-03, 5.1835e-03],
         [5.0471e-03, 4.8524e-03, 5.0769e-03,  ..., 9.9998e-01,
          5.0722e-03, 5.1835e-03],
         [9.8486e-01, 9.8544e-01, 9.8477e-01,  ..., 1.8599e-08,
          9.8478e-01, 9.8445e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 548:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:21:17,525 [Process: 0] Synchronize training processes
2024-08-16 16:21:17,525 [Process: 0] Evaluating...
2024-08-16 16:21:17,527 [Process: 0] EPOCH 548:
2024-08-16 16:21:17,529 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0055, 0.0058,  ..., 0.0056, 0.0057, 0.0056],
         [0.0055, 0.0055, 0.0058,  ..., 0.0056, 0.0057, 0.0056],
         [0.0055, 0.0055, 0.0058,  ..., 0.0056, 0.0057, 0.0056],
         [0.9836, 0.9835, 0.9827,  ..., 0.9832, 0.9830, 0.9831]],
        [[0.0084, 0.0054, 0.0056,  ..., 0.0050, 0.0049, 0.0055],
         [0.0084, 0.0054, 0.0056,  ..., 0.0050, 0.0049, 0.0055],
         [0.0084, 0.0054, 0.0056,  ..., 0.0050, 0.0049, 0.0055],
         [0.9748, 0.9839, 0.9832,  ..., 0.9849, 0.9852, 0.9836]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4031e-03, 4.9217e-03, 4.7773e-03,  ..., 5.1568e-03,
          4.6957e-03, 4.9245e-03],
         [5.4031e-03, 4.9217e-03, 4.7583e-03,  ..., 5.1568e-03,
          4.6957e-03, 4.9245e-03],
         [5.4031e-03, 4.9217e-03, 4.7583e-03,  ..., 5.1568e-03,
          4.6957e-03, 4.9245e-03],
         [9.8379e-01, 9.8523e-01, 9.8571e-01,  ..., 9.8453e-01,
          9.8591e-01, 9.8523e-01]],
        [[4.9173e-03, 4.8426e-03, 5.6608e-03,  ..., 9.6851e-06,
          5.3885e-03, 5.3900e-03],
         [4.9173e-03, 4.8370e-03, 5.6608e-03,  ..., 1.7877e-07,
          5.3885e-03, 5.3900e-03],
         [4.9173e-03, 4.8370e-03, 5.6608e-03,  ..., 9.9999e-01,
          5.3885e-03, 5.3900e-03],
         [9.8525e-01, 9.8548e-01, 9.8302e-01,  ..., 1.7877e-07,
          9.8383e-01, 9.8383e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 549:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:21:19,607 [Process: 0] Synchronize training processes
2024-08-16 16:21:19,607 [Process: 0] Evaluating...
2024-08-16 16:21:19,609 [Process: 0] EPOCH 549:
2024-08-16 16:21:19,611 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0062, 0.0060,  ..., 0.0059, 0.0060, 0.0059],
         [0.0060, 0.0062, 0.0060,  ..., 0.0059, 0.0060, 0.0059],
         [0.0060, 0.0062, 0.0060,  ..., 0.0059, 0.0060, 0.0059],
         [0.9819, 0.9813, 0.9819,  ..., 0.9824, 0.9820, 0.9823]],
        [[0.1561, 0.0055, 0.0064,  ..., 0.0050, 0.0059, 0.0058],
         [0.1561, 0.0055, 0.0064,  ..., 0.0050, 0.0059, 0.0058],
         [0.1561, 0.0055, 0.0064,  ..., 0.0050, 0.0059, 0.0058],
         [0.5317, 0.9836, 0.9809,  ..., 0.9850, 0.9824, 0.9827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.8346e-03, 4.9314e-03, 5.1989e-03,  ..., 5.0001e-03,
          4.9910e-03, 5.4375e-03],
         [4.8052e-03, 4.8689e-03, 5.1989e-03,  ..., 5.0001e-03,
          4.9910e-03, 5.4375e-03],
         [4.8052e-03, 4.8689e-03, 5.1989e-03,  ..., 5.0001e-03,
          4.9910e-03, 5.4375e-03],
         [9.8556e-01, 9.8533e-01, 9.8440e-01,  ..., 9.8500e-01,
          9.8503e-01, 9.8369e-01]],
        [[5.3150e-03, 5.1573e-03, 5.4214e-03,  ..., 5.3732e-06,
          5.3059e-03, 5.5235e-03],
         [5.3150e-03, 5.1573e-03, 5.4214e-03,  ..., 1.9096e-07,
          5.3059e-03, 5.5235e-03],
         [5.3150e-03, 5.1573e-03, 5.4214e-03,  ..., 9.9999e-01,
          5.3059e-03, 5.5235e-03],
         [9.8405e-01, 9.8453e-01, 9.8374e-01,  ..., 1.9096e-07,
          9.8408e-01, 9.8343e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 550:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:21:21,696 [Process: 0] Synchronize training processes
2024-08-16 16:21:21,696 [Process: 0] Evaluating...
2024-08-16 16:21:21,698 [Process: 0] EPOCH 550:
2024-08-16 16:21:21,700 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0064, 0.0061,  ..., 0.0062, 0.0062, 0.0062],
         [0.0061, 0.0064, 0.0061,  ..., 0.0062, 0.0062, 0.0062],
         [0.0061, 0.0064, 0.0061,  ..., 0.0062, 0.0062, 0.0062],
         [0.9816, 0.9807, 0.9816,  ..., 0.9814, 0.9814, 0.9813]],
        [[0.0060, 0.0057, 0.0059,  ..., 0.0056, 0.0051, 0.0055],
         [0.0060, 0.0057, 0.0059,  ..., 0.0056, 0.0051, 0.0055],
         [0.0060, 0.0057, 0.0059,  ..., 0.0056, 0.0051, 0.0055],
         [0.9821, 0.9828, 0.9824,  ..., 0.9833, 0.9847, 0.9835]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.8126e-03, 4.9631e-03, 4.9634e-03,  ..., 4.9035e-03,
          4.9640e-03, 5.2983e-03],
         [4.8126e-03, 4.9631e-03, 4.9634e-03,  ..., 4.9035e-03,
          4.9640e-03, 5.2983e-03],
         [4.8126e-03, 4.9631e-03, 4.9634e-03,  ..., 4.9035e-03,
          4.9640e-03, 5.2983e-03],
         [9.8556e-01, 9.8511e-01, 9.8511e-01,  ..., 9.8529e-01,
          9.8511e-01, 9.8411e-01]],
        [[4.7554e-03, 5.5645e-03, 5.2030e-03,  ..., 2.2370e-05,
          4.9834e-03, 5.3924e-03],
         [4.7554e-03, 5.5645e-03, 5.2030e-03,  ..., 5.2660e-07,
          4.9834e-03, 5.3924e-03],
         [4.7554e-03, 5.5645e-03, 5.2030e-03,  ..., 9.9998e-01,
          4.9834e-03, 5.3924e-03],
         [9.8573e-01, 9.8331e-01, 9.8439e-01,  ..., 5.2660e-07,
          9.8505e-01, 9.8382e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 551:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:21:23,798 [Process: 0] Synchronize training processes
2024-08-16 16:21:23,798 [Process: 0] Evaluating...
2024-08-16 16:21:23,800 [Process: 0] EPOCH 551:
2024-08-16 16:21:23,802 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0061, 0.0060,  ..., 0.0058, 0.0059, 0.0059],
         [0.0059, 0.0061, 0.0060,  ..., 0.0058, 0.0059, 0.0059],
         [0.0059, 0.0061, 0.0060,  ..., 0.0058, 0.0059, 0.0059],
         [0.9822, 0.9817, 0.9819,  ..., 0.9826, 0.9824, 0.9822]],
        [[0.0053, 0.0054, 0.0050,  ..., 0.0053, 0.0055, 0.0048],
         [0.0053, 0.0054, 0.0050,  ..., 0.0053, 0.0055, 0.0048],
         [0.0053, 0.0054, 0.0050,  ..., 0.0053, 0.0055, 0.0048],
         [0.9840, 0.9839, 0.9850,  ..., 0.9841, 0.9836, 0.9855]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1555e-03, 5.3882e-03, 4.9845e-03,  ..., 4.7792e-03,
          4.7328e-03, 4.8880e-03],
         [5.1555e-03, 5.3882e-03, 4.9845e-03,  ..., 4.7792e-03,
          4.7328e-03, 4.8880e-03],
         [5.1555e-03, 5.3882e-03, 4.9845e-03,  ..., 4.7792e-03,
          4.7328e-03, 4.8880e-03],
         [9.8453e-01, 9.8384e-01, 9.8505e-01,  ..., 9.8566e-01,
          9.8580e-01, 9.8534e-01]],
        [[5.1521e-03, 5.4988e-03, 5.5745e-03,  ..., 3.3688e-05,
          5.4078e-03, 5.1802e-03],
         [5.1521e-03, 5.4988e-03, 5.5745e-03,  ..., 3.4594e-07,
          5.4078e-03, 5.1802e-03],
         [5.1521e-03, 5.4988e-03, 5.5745e-03,  ..., 9.9997e-01,
          5.4078e-03, 5.1802e-03],
         [9.8454e-01, 9.8350e-01, 9.8328e-01,  ..., 3.4594e-07,
          9.8378e-01, 9.8446e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 552:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:21:25,903 [Process: 0] Synchronize training processes
2024-08-16 16:21:25,903 [Process: 0] Evaluating...
2024-08-16 16:21:25,911 [Process: 0] EPOCH 552:
2024-08-16 16:21:25,913 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0056, 0.0061, 0.0059,  ..., 0.0056, 0.0060, 0.0057],
         [0.0056, 0.0061, 0.0059,  ..., 0.0056, 0.0060, 0.0057],
         [0.0056, 0.0061, 0.0059,  ..., 0.0056, 0.0060, 0.0057],
         [0.9832, 0.9817, 0.9824,  ..., 0.9831, 0.9821, 0.9828]],
        [[0.0051, 0.0053, 0.0055,  ..., 0.0053, 0.0053, 0.0051],
         [0.0051, 0.0053, 0.0055,  ..., 0.0053, 0.0053, 0.0051],
         [0.0051, 0.0053, 0.0055,  ..., 0.0053, 0.0053, 0.0051],
         [0.9848, 0.9841, 0.9834,  ..., 0.9842, 0.9840, 0.9846]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7342e-03, 5.1685e-03, 5.0604e-03,  ..., 5.0243e-03,
          4.9887e-03, 5.0253e-03],
         [4.7271e-03, 5.1685e-03, 5.0604e-03,  ..., 5.0243e-03,
          4.9887e-03, 5.0253e-03],
         [4.7271e-03, 5.1685e-03, 5.0604e-03,  ..., 5.0243e-03,
          4.9887e-03, 5.0253e-03],
         [9.8581e-01, 9.8449e-01, 9.8482e-01,  ..., 9.8493e-01,
          9.8503e-01, 9.8492e-01]],
        [[5.4746e-03, 5.0518e-03, 5.3348e-03,  ..., 2.1517e-04,
          5.5980e-03, 4.8750e-03],
         [5.4746e-03, 5.0518e-03, 5.3348e-03,  ..., 1.2470e-05,
          5.5980e-03, 4.8750e-03],
         [5.4746e-03, 5.0518e-03, 5.3348e-03,  ..., 9.9976e-01,
          5.5980e-03, 4.8750e-03],
         [9.8358e-01, 9.8484e-01, 9.8400e-01,  ..., 1.2470e-05,
          9.8321e-01, 9.8538e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 553:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:21:27,985 [Process: 0] Synchronize training processes
2024-08-16 16:21:27,985 [Process: 0] Evaluating...
2024-08-16 16:21:27,987 [Process: 0] EPOCH 553:
2024-08-16 16:21:27,989 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0059, 0.0057,  ..., 0.0056, 0.0058, 0.0057],
         [0.0057, 0.0059, 0.0057,  ..., 0.0056, 0.0058, 0.0057],
         [0.0057, 0.0059, 0.0057,  ..., 0.0056, 0.0058, 0.0057],
         [0.9829, 0.9823, 0.9829,  ..., 0.9832, 0.9827, 0.9830]],
        [[0.0049, 0.0053, 0.0048,  ..., 0.0051, 0.0050, 0.0048],
         [0.0049, 0.0053, 0.0048,  ..., 0.0051, 0.0050, 0.0048],
         [0.0049, 0.0053, 0.0048,  ..., 0.0051, 0.0050, 0.0048],
         [0.9853, 0.9842, 0.9855,  ..., 0.9847, 0.9849, 0.9855]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7538e-03, 4.6017e-03, 4.9648e-03,  ..., 4.8799e-03,
          5.1309e-03, 5.0961e-03],
         [4.7538e-03, 4.6017e-03, 4.9648e-03,  ..., 4.8799e-03,
          5.1309e-03, 5.0961e-03],
         [4.7538e-03, 4.6017e-03, 4.9648e-03,  ..., 4.8799e-03,
          5.1309e-03, 5.0961e-03],
         [9.8574e-01, 9.8619e-01, 9.8511e-01,  ..., 9.8536e-01,
          9.8461e-01, 9.8471e-01]],
        [[5.1110e-03, 5.1016e-03, 5.3023e-03,  ..., 1.1955e-05,
          5.2085e-03, 5.0027e-03],
         [5.1110e-03, 5.1016e-03, 5.3023e-03,  ..., 1.5177e-08,
          5.2085e-03, 5.0027e-03],
         [5.1110e-03, 5.1016e-03, 5.3023e-03,  ..., 9.9999e-01,
          5.2085e-03, 5.0027e-03],
         [9.8467e-01, 9.8470e-01, 9.8409e-01,  ..., 1.5177e-08,
          9.8437e-01, 9.8499e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 554:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:21:30,057 [Process: 0] Synchronize training processes
2024-08-16 16:21:30,058 [Process: 0] Evaluating...
2024-08-16 16:21:30,060 [Process: 0] EPOCH 554:
2024-08-16 16:21:30,062 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0058, 0.0058,  ..., 0.0058, 0.0057, 0.0059],
         [0.0055, 0.0058, 0.0058,  ..., 0.0058, 0.0057, 0.0059],
         [0.0055, 0.0058, 0.0058,  ..., 0.0058, 0.0057, 0.0059],
         [0.9834, 0.9826, 0.9825,  ..., 0.9825, 0.9829, 0.9824]],
        [[0.0054, 0.0057, 0.0052,  ..., 0.0051, 0.0052, 0.0052],
         [0.0054, 0.0057, 0.0052,  ..., 0.0051, 0.0052, 0.0052],
         [0.0054, 0.0057, 0.0052,  ..., 0.0051, 0.0052, 0.0052],
         [0.9839, 0.9829, 0.9845,  ..., 0.9847, 0.9845, 0.9844]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1076e-03, 5.1758e-03, 5.1195e-03,  ..., 5.2857e-03,
          5.3404e-03, 5.3641e-03],
         [5.1076e-03, 5.1758e-03, 5.1195e-03,  ..., 5.2857e-03,
          5.3404e-03, 5.3641e-03],
         [5.1076e-03, 5.1758e-03, 5.1195e-03,  ..., 5.2857e-03,
          5.3404e-03, 5.3641e-03],
         [9.8468e-01, 9.8447e-01, 9.8464e-01,  ..., 9.8414e-01,
          9.8398e-01, 9.8391e-01]],
        [[5.0635e-03, 5.7724e-03, 5.7573e-03,  ..., 3.0174e-06,
          5.3126e-03, 5.3658e-03],
         [5.0635e-03, 5.7724e-03, 5.7573e-03,  ..., 3.7912e-10,
          5.3126e-03, 5.3658e-03],
         [5.0635e-03, 5.7724e-03, 5.7573e-03,  ..., 1.0000e+00,
          5.3126e-03, 5.3658e-03],
         [9.8481e-01, 9.8268e-01, 9.8273e-01,  ..., 3.7912e-10,
          9.8406e-01, 9.8390e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 555:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:21:32,136 [Process: 0] Synchronize training processes
2024-08-16 16:21:32,136 [Process: 0] Evaluating...
2024-08-16 16:21:32,138 [Process: 0] EPOCH 555:
2024-08-16 16:21:32,140 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0060, 0.0058,  ..., 0.0058, 0.0059, 0.0061],
         [0.0059, 0.0060, 0.0058,  ..., 0.0058, 0.0059, 0.0061],
         [0.0059, 0.0060, 0.0058,  ..., 0.0058, 0.0059, 0.0061],
         [0.9822, 0.9820, 0.9826,  ..., 0.9825, 0.9823, 0.9817]],
        [[0.0053, 0.0057, 0.0052,  ..., 0.0052, 0.0050, 0.0051],
         [0.0053, 0.0057, 0.0052,  ..., 0.0052, 0.0050, 0.0051],
         [0.0053, 0.0057, 0.0052,  ..., 0.0052, 0.0050, 0.0051],
         [0.9840, 0.9830, 0.9844,  ..., 0.9844, 0.9850, 0.9847]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.6221e-03, 5.0945e-03, 4.8472e-03,  ..., 5.0006e-03,
          4.9051e-03, 5.0022e-03],
         [4.6221e-03, 5.0945e-03, 4.8472e-03,  ..., 5.0006e-03,
          4.9051e-03, 5.0022e-03],
         [4.6221e-03, 5.0945e-03, 4.8472e-03,  ..., 5.0006e-03,
          4.9051e-03, 5.0022e-03],
         [9.8613e-01, 9.8472e-01, 9.8546e-01,  ..., 9.8500e-01,
          9.8528e-01, 9.8499e-01]],
        [[5.5458e-03, 5.1203e-03, 6.2202e-03,  ..., 4.3547e-05,
          5.2278e-03, 5.3833e-03],
         [5.5458e-03, 5.1203e-03, 6.2202e-03,  ..., 1.6079e-07,
          5.2278e-03, 5.3833e-03],
         [5.5458e-03, 5.1203e-03, 6.2202e-03,  ..., 9.9996e-01,
          5.2278e-03, 5.3833e-03],
         [9.8336e-01, 9.8464e-01, 9.8134e-01,  ..., 1.6079e-07,
          9.8432e-01, 9.8385e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 556:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:21:34,208 [Process: 0] Synchronize training processes
2024-08-16 16:21:34,208 [Process: 0] Evaluating...
2024-08-16 16:21:34,210 [Process: 0] EPOCH 556:
2024-08-16 16:21:34,212 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0057, 0.0056,  ..., 0.0059, 0.0055, 0.0058],
         [0.0058, 0.0057, 0.0056,  ..., 0.0059, 0.0055, 0.0058],
         [0.0058, 0.0057, 0.0056,  ..., 0.0059, 0.0055, 0.0058],
         [0.9827, 0.9828, 0.9832,  ..., 0.9824, 0.9834, 0.9825]],
        [[0.0049, 0.0052, 0.0056,  ..., 0.0054, 0.0054, 0.0055],
         [0.0049, 0.0052, 0.0056,  ..., 0.0054, 0.0054, 0.0055],
         [0.0049, 0.0052, 0.0056,  ..., 0.0054, 0.0054, 0.0055],
         [0.9854, 0.9843, 0.9832,  ..., 0.9838, 0.9838, 0.9836]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.8080e-03, 5.1990e-03, 5.1749e-03,  ..., 5.1577e-03,
          5.0567e-03, 5.0420e-03],
         [4.8080e-03, 5.1990e-03, 5.1749e-03,  ..., 5.1577e-03,
          5.0567e-03, 5.0420e-03],
         [4.8080e-03, 5.1990e-03, 5.1749e-03,  ..., 5.1577e-03,
          5.0567e-03, 5.0420e-03],
         [9.8558e-01, 9.8440e-01, 9.8448e-01,  ..., 9.8453e-01,
          9.8483e-01, 9.8487e-01]],
        [[5.6289e-03, 4.9886e-03, 8.1452e-03,  ..., 2.7130e-05,
          5.0104e-03, 5.5966e-03],
         [5.6289e-03, 4.9886e-03, 8.1452e-03,  ..., 5.4723e-08,
          5.0104e-03, 5.5966e-03],
         [5.6289e-03, 4.9886e-03, 8.1452e-03,  ..., 9.9997e-01,
          5.0104e-03, 5.5966e-03],
         [9.8311e-01, 9.8503e-01, 9.7556e-01,  ..., 5.4723e-08,
          9.8497e-01, 9.8321e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:36,317 [Process: 0] Synchronize training processes
2024-08-16 16:21:36,317 [Process: 0] Evaluating...
2024-08-16 16:21:36,319 [Process: 0] EPOCH 557:
2024-08-16 16:21:36,321 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 557:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0056, 0.0056,  ..., 0.0055, 0.0055, 0.0056],
         [0.0057, 0.0056, 0.0056,  ..., 0.0055, 0.0055, 0.0056],
         [0.0057, 0.0056, 0.0056,  ..., 0.0055, 0.0055, 0.0056],
         [0.9829, 0.9831, 0.9831,  ..., 0.9835, 0.9836, 0.9831]],
        [[0.0051, 0.0052, 0.0054,  ..., 0.0052, 0.0049, 0.0054],
         [0.0051, 0.0052, 0.0054,  ..., 0.0052, 0.0049, 0.0054],
         [0.0051, 0.0052, 0.0054,  ..., 0.0052, 0.0049, 0.0054],
         [0.9847, 0.9844, 0.9839,  ..., 0.9845, 0.9854, 0.9837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-16 16:21:38,407 [Process: 0] Synchronize training processes
2024-08-16 16:21:38,407 [Process: 0] Evaluating...
2024-08-16 16:21:38,409 [Process: 0] EPOCH 558:
2024-08-16 16:21:38,411 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.4406e-03, 4.6404e-03, 4.5246e-03,  ..., 5.1820e-03,
          4.6340e-03, 5.0010e-03],
         [4.4406e-03, 4.6404e-03, 4.5246e-03,  ..., 5.1820e-03,
          4.6340e-03, 5.0010e-03],
         [4.4406e-03, 4.6404e-03, 4.5246e-03,  ..., 5.1820e-03,
          4.6340e-03, 5.0010e-03],
         [9.8668e-01, 9.8608e-01, 9.8643e-01,  ..., 9.8445e-01,
          9.8610e-01, 9.8500e-01]],
        [[5.0670e-03, 5.2180e-03, 7.9134e-03,  ..., 1.2711e-03,
          5.5502e-03, 5.4332e-03],
         [5.0670e-03, 5.2180e-03, 7.9134e-03,  ..., 1.7172e-05,
          5.5502e-03, 5.4332e-03],
         [5.0670e-03, 5.2180e-03, 7.9134e-03,  ..., 9.9869e-01,
          5.5502e-03, 5.4332e-03],
         [9.8480e-01, 9.8435e-01, 9.7626e-01,  ..., 1.7172e-05,
          9.8335e-01, 9.8370e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 558:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0056, 0.0058, 0.0056,  ..., 0.0057, 0.0056, 0.0056],
         [0.0056, 0.0058, 0.0056,  ..., 0.0057, 0.0056, 0.0056],
         [0.0056, 0.0058, 0.0056,  ..., 0.0057, 0.0056, 0.0056],
         [0.9831, 0.9827, 0.9831,  ..., 0.9828, 0.9832, 0.9832]],
        [[0.0050, 0.0056, 0.0051,  ..., 0.0053, 0.0053, 0.0051],
         [0.0050, 0.0056, 0.0051,  ..., 0.0053, 0.0053, 0.0051],
         [0.0050, 0.0056, 0.0051,  ..., 0.0053, 0.0053, 0.0051],
         [0.9849, 0.9833, 0.9846,  ..., 0.9842, 0.9842, 0.9846]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:21:40,479 [Process: 0] Synchronize training processes
2024-08-16 16:21:40,480 [Process: 0] Evaluating...
2024-08-16 16:21:40,482 [Process: 0] EPOCH 559:
2024-08-16 16:21:40,483 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7399e-03, 5.0675e-03, 4.8672e-03,  ..., 5.3196e-03,
          5.5590e-03, 5.1009e-03],
         [4.7399e-03, 5.0675e-03, 4.8672e-03,  ..., 5.3196e-03,
          5.5590e-03, 5.1009e-03],
         [4.7399e-03, 5.0675e-03, 4.8672e-03,  ..., 5.3196e-03,
          5.5590e-03, 5.1009e-03],
         [9.8578e-01, 9.8480e-01, 9.8540e-01,  ..., 9.8404e-01,
          9.8332e-01, 9.8470e-01]],
        [[1.2412e-02, 5.2657e-03, 5.6287e-03,  ..., 7.6362e-04,
          5.1629e-03, 5.0196e-03],
         [1.2412e-02, 5.2657e-03, 5.6287e-03,  ..., 1.5855e-05,
          5.1629e-03, 5.0196e-03],
         [1.2412e-02, 5.2657e-03, 5.6287e-03,  ..., 9.9920e-01,
          5.1629e-03, 5.0196e-03],
         [9.6276e-01, 9.8420e-01, 9.8311e-01,  ..., 1.5855e-05,
          9.8451e-01, 9.8494e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 559:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0062, 0.0058,  ..., 0.0061, 0.0059, 0.0059],
         [0.0061, 0.0062, 0.0058,  ..., 0.0061, 0.0059, 0.0059],
         [0.0061, 0.0062, 0.0058,  ..., 0.0061, 0.0059, 0.0059],
         [0.9818, 0.9814, 0.9825,  ..., 0.9818, 0.9823, 0.9823]],
        [[0.0051, 0.0051, 0.0056,  ..., 0.0054, 0.0051, 0.0049],
         [0.0051, 0.0051, 0.0056,  ..., 0.0054, 0.0051, 0.0049],
         [0.0051, 0.0051, 0.0056,  ..., 0.0054, 0.0051, 0.0049],
         [0.9846, 0.9847, 0.9831,  ..., 0.9837, 0.9847, 0.9854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:42,563 [Process: 0] Synchronize training processes
2024-08-16 16:21:42,564 [Process: 0] Evaluating...
2024-08-16 16:21:42,566 [Process: 0] EPOCH 560:
2024-08-16 16:21:42,568 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.8626e-03, 5.1815e-03, 5.0297e-03,  ..., 4.9969e-03,
          6.7957e-03, 4.8140e-03],
         [4.8626e-03, 5.1815e-03, 5.0297e-03,  ..., 4.9969e-03,
          6.7957e-03, 4.8140e-03],
         [4.8626e-03, 5.1815e-03, 5.0297e-03,  ..., 4.9969e-03,
          6.7957e-03, 4.8140e-03],
         [9.8541e-01, 9.8446e-01, 9.8491e-01,  ..., 9.8501e-01,
          9.7961e-01, 9.8556e-01]],
        [[8.8786e-03, 5.2825e-03, 6.2460e-03,  ..., 7.3561e-06,
          5.0821e-03, 5.1409e-03],
         [8.8786e-03, 5.2825e-03, 6.2460e-03,  ..., 4.0918e-08,
          5.0821e-03, 5.1409e-03],
         [8.8786e-03, 5.2825e-03, 6.2460e-03,  ..., 9.9999e-01,
          5.0821e-03, 5.1409e-03],
         [9.7336e-01, 9.8415e-01, 9.8126e-01,  ..., 4.0918e-08,
          9.8475e-01, 9.8458e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 560:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0066, 0.0062,  ..., 0.0061, 0.0060, 0.0064],
         [0.0069, 0.0066, 0.0062,  ..., 0.0061, 0.0060, 0.0064],
         [0.0069, 0.0066, 0.0062,  ..., 0.0061, 0.0060, 0.0064],
         [0.9793, 0.9801, 0.9814,  ..., 0.9818, 0.9819, 0.9808]],
        [[0.0047, 0.0050, 0.0056,  ..., 0.0049, 0.0053, 0.0050],
         [0.0047, 0.0050, 0.0056,  ..., 0.0049, 0.0053, 0.0050],
         [0.0047, 0.0050, 0.0056,  ..., 0.0049, 0.0053, 0.0050],
         [0.9860, 0.9849, 0.9833,  ..., 0.9852, 0.9842, 0.9849]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:44,660 [Process: 0] Synchronize training processes
2024-08-16 16:21:44,661 [Process: 0] Evaluating...
2024-08-16 16:21:44,662 [Process: 0] EPOCH 561:
2024-08-16 16:21:44,664 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.5504e-03, 4.9730e-03, 4.6317e-03,  ..., 5.1285e-03,
          5.3908e-03, 4.8638e-03],
         [4.5504e-03, 4.9730e-03, 4.6317e-03,  ..., 5.1285e-03,
          5.3908e-03, 4.8638e-03],
         [4.5504e-03, 4.9730e-03, 4.6317e-03,  ..., 5.1285e-03,
          5.3908e-03, 4.8638e-03],
         [9.8635e-01, 9.8508e-01, 9.8611e-01,  ..., 9.8461e-01,
          9.8383e-01, 9.8541e-01]],
        [[1.3470e-02, 5.0309e-03, 7.4818e-03,  ..., 9.7052e-04,
          5.4747e-03, 5.1527e-03],
         [1.3470e-02, 5.0309e-03, 7.4818e-03,  ..., 6.3239e-06,
          5.4747e-03, 5.1527e-03],
         [1.3470e-02, 5.0309e-03, 7.4818e-03,  ..., 9.9902e-01,
          5.4747e-03, 5.1527e-03],
         [9.5959e-01, 9.8491e-01, 9.7755e-01,  ..., 6.3239e-06,
          9.8358e-01, 9.8454e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 561:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0052, 0.0053,  ..., 0.0056, 0.0053, 0.0053],
         [0.0055, 0.0052, 0.0053,  ..., 0.0056, 0.0053, 0.0053],
         [0.0055, 0.0052, 0.0053,  ..., 0.0056, 0.0053, 0.0053],
         [0.9836, 0.9845, 0.9841,  ..., 0.9833, 0.9841, 0.9842]],
        [[0.0053, 0.0057, 0.0045,  ..., 0.0044, 0.0050, 0.0051],
         [0.0053, 0.0057, 0.0045,  ..., 0.0044, 0.0050, 0.0051],
         [0.0053, 0.0057, 0.0045,  ..., 0.0044, 0.0050, 0.0051],
         [0.9842, 0.9830, 0.9866,  ..., 0.9869, 0.9851, 0.9847]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:46,753 [Process: 0] Synchronize training processes
2024-08-16 16:21:46,753 [Process: 0] Evaluating...
2024-08-16 16:21:46,761 [Process: 0] EPOCH 562:
2024-08-16 16:21:46,763 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.6996e-03, 4.7819e-03, 4.2786e-03,  ..., 4.7074e-03,
          4.4531e-03, 4.8097e-03],
         [4.6996e-03, 4.7819e-03, 4.2786e-03,  ..., 4.7074e-03,
          4.4531e-03, 4.8097e-03],
         [4.6996e-03, 4.7819e-03, 4.2786e-03,  ..., 4.7074e-03,
          4.4531e-03, 4.8097e-03],
         [9.8590e-01, 9.8565e-01, 9.8716e-01,  ..., 9.8588e-01,
          9.8664e-01, 9.8557e-01]],
        [[8.0395e-03, 5.0716e-03, 2.2464e-02,  ..., 1.7704e-06,
          5.2185e-03, 5.5534e-03],
         [8.0395e-03, 5.0716e-03, 2.2464e-02,  ..., 6.5070e-10,
          5.2185e-03, 5.5534e-03],
         [8.0395e-03, 5.0716e-03, 2.2464e-02,  ..., 1.0000e+00,
          5.2185e-03, 5.5534e-03],
         [9.7588e-01, 9.8479e-01, 9.3261e-01,  ..., 6.5070e-10,
          9.8434e-01, 9.8334e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 562:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0051, 0.0053, 0.0054,  ..., 0.0053, 0.0052, 0.0053],
         [0.0051, 0.0053, 0.0054,  ..., 0.0053, 0.0052, 0.0053],
         [0.0051, 0.0053, 0.0054,  ..., 0.0053, 0.0052, 0.0053],
         [0.9846, 0.9840, 0.9839,  ..., 0.9840, 0.9844, 0.9841]],
        [[0.0048, 0.0055, 0.0050,  ..., 0.0052, 0.0050, 0.0048],
         [0.0048, 0.0055, 0.0050,  ..., 0.0052, 0.0050, 0.0048],
         [0.0048, 0.0055, 0.0050,  ..., 0.0052, 0.0050, 0.0048],
         [0.9857, 0.9835, 0.9850,  ..., 0.9845, 0.9850, 0.9856]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:48,831 [Process: 0] Synchronize training processes
2024-08-16 16:21:48,832 [Process: 0] Evaluating...
2024-08-16 16:21:48,834 [Process: 0] EPOCH 563:
2024-08-16 16:21:48,836 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.9212e-03, 4.9185e-03, 4.4416e-03,  ..., 4.6241e-03,
          4.2454e-03, 4.1331e-03],
         [3.8983e-03, 4.9185e-03, 4.4416e-03,  ..., 4.6241e-03,
          4.2454e-03, 4.1331e-03],
         [3.8983e-03, 4.9185e-03, 4.4416e-03,  ..., 4.6241e-03,
          4.2454e-03, 4.1331e-03],
         [9.8828e-01, 9.8524e-01, 9.8668e-01,  ..., 9.8613e-01,
          9.8726e-01, 9.8760e-01]],
        [[4.2661e-03, 4.3733e-03, 6.6792e-03,  ..., 3.7593e-06,
          5.9602e-03, 5.6260e-03],
         [4.2661e-03, 4.3733e-03, 6.6792e-03,  ..., 1.8339e-08,
          5.9602e-03, 5.6260e-03],
         [4.2661e-03, 4.3733e-03, 6.6792e-03,  ..., 1.0000e+00,
          5.9602e-03, 5.6260e-03],
         [9.8720e-01, 9.8688e-01, 9.7996e-01,  ..., 1.8339e-08,
          9.8212e-01, 9.8312e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 563:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0063, 0.0061,  ..., 0.0057, 0.0056, 0.0059],
         [0.0061, 0.0063, 0.0061,  ..., 0.0057, 0.0056, 0.0059],
         [0.0061, 0.0063, 0.0061,  ..., 0.0057, 0.0056, 0.0059],
         [0.9816, 0.9810, 0.9817,  ..., 0.9829, 0.9831, 0.9822]],
        [[0.0050, 0.0046, 0.0048,  ..., 0.0049, 0.0047, 0.0051],
         [0.0050, 0.0046, 0.0048,  ..., 0.0049, 0.0047, 0.0051],
         [0.0050, 0.0046, 0.0048,  ..., 0.0049, 0.0047, 0.0051],
         [0.9849, 0.9861, 0.9855,  ..., 0.9854, 0.9859, 0.9846]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:50,906 [Process: 0] Synchronize training processes
2024-08-16 16:21:50,906 [Process: 0] Evaluating...
2024-08-16 16:21:50,908 [Process: 0] EPOCH 564:
2024-08-16 16:21:50,910 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5894e-03, 4.0889e-03, 4.1915e-03,  ..., 3.8685e-03,
          3.6411e-03, 3.7609e-03],
         [3.4599e-03, 4.0889e-03, 4.1915e-03,  ..., 3.8685e-03,
          3.5595e-03, 3.7609e-03],
         [3.4599e-03, 4.0889e-03, 4.1915e-03,  ..., 3.8685e-03,
          3.5595e-03, 3.7609e-03],
         [9.8949e-01, 9.8773e-01, 9.8743e-01,  ..., 9.8839e-01,
          9.8924e-01, 9.8872e-01]],
        [[9.8701e-03, 4.6481e-03, 1.0322e-02,  ..., 1.2451e-05,
          6.8421e-03, 5.7331e-03],
         [9.8701e-03, 4.6481e-03, 1.0322e-02,  ..., 1.9929e-09,
          6.8421e-03, 5.7331e-03],
         [9.8701e-03, 4.6481e-03, 1.0322e-02,  ..., 9.9999e-01,
          6.8421e-03, 5.7331e-03],
         [9.7039e-01, 9.8606e-01, 9.6903e-01,  ..., 1.9929e-09,
          9.7947e-01, 9.8280e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 564:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0094, 0.0075,  ..., 0.0061, 0.0076, 0.0085],
         [0.0076, 0.0094, 0.0075,  ..., 0.0061, 0.0076, 0.0085],
         [0.0076, 0.0094, 0.0075,  ..., 0.0061, 0.0076, 0.0085],
         [0.9771, 0.9718, 0.9776,  ..., 0.9816, 0.9771, 0.9746]],
        [[0.0039, 0.0043, 0.0046,  ..., 0.0044, 0.0048, 0.0044],
         [0.0039, 0.0043, 0.0046,  ..., 0.0044, 0.0048, 0.0044],
         [0.0039, 0.0043, 0.0046,  ..., 0.0044, 0.0048, 0.0044],
         [0.9882, 0.9871, 0.9863,  ..., 0.9868, 0.9856, 0.9867]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:52,986 [Process: 0] Synchronize training processes
2024-08-16 16:21:52,986 [Process: 0] Evaluating...
2024-08-16 16:21:52,988 [Process: 0] EPOCH 565:
2024-08-16 16:21:52,990 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.8546e-03, 4.0641e-03, 4.1768e-03,  ..., 4.1883e-03,
          4.2174e-03, 4.3379e-03],
         [3.7758e-03, 4.0641e-03, 4.1768e-03,  ..., 4.1883e-03,
          4.2174e-03, 4.3379e-03],
         [3.7758e-03, 4.0641e-03, 4.1768e-03,  ..., 4.1883e-03,
          4.2174e-03, 4.3379e-03],
         [9.8859e-01, 9.8781e-01, 9.8747e-01,  ..., 9.8744e-01,
          9.8735e-01, 9.8699e-01]],
        [[5.3259e-03, 4.7600e-03, 6.2548e-03,  ..., 6.5407e-05,
          5.5871e-03, 5.0343e-03],
         [5.3259e-03, 4.7600e-03, 6.2548e-03,  ..., 3.1598e-07,
          5.5871e-03, 5.0343e-03],
         [5.3259e-03, 4.7600e-03, 6.2548e-03,  ..., 9.9993e-01,
          5.5871e-03, 5.0343e-03],
         [9.8402e-01, 9.8572e-01, 9.8124e-01,  ..., 3.1598e-07,
          9.8324e-01, 9.8490e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 565:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0055, 0.0054,  ..., 0.0053, 0.0055, 0.0053],
         [0.0053, 0.0055, 0.0054,  ..., 0.0053, 0.0055, 0.0053],
         [0.0053, 0.0055, 0.0054,  ..., 0.0053, 0.0055, 0.0053],
         [0.9840, 0.9835, 0.9838,  ..., 0.9840, 0.9836, 0.9842]],
        [[0.0053, 0.0053, 0.0049,  ..., 0.0050, 0.0050, 0.0048],
         [0.0053, 0.0053, 0.0049,  ..., 0.0050, 0.0050, 0.0048],
         [0.0053, 0.0053, 0.0049,  ..., 0.0050, 0.0050, 0.0048],
         [0.9840, 0.9842, 0.9852,  ..., 0.9849, 0.9850, 0.9855]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:55,074 [Process: 0] Synchronize training processes
2024-08-16 16:21:55,074 [Process: 0] Evaluating...
2024-08-16 16:21:55,076 [Process: 0] EPOCH 566:
2024-08-16 16:21:55,078 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7597e-03, 4.4384e-03, 4.0249e-03,  ..., 4.5191e-03,
          4.5243e-03, 4.7986e-03],
         [4.7597e-03, 4.4384e-03, 4.0239e-03,  ..., 4.5191e-03,
          4.5243e-03, 4.7986e-03],
         [4.7597e-03, 4.4384e-03, 4.0239e-03,  ..., 4.5191e-03,
          4.5243e-03, 4.7986e-03],
         [9.8572e-01, 9.8668e-01, 9.8793e-01,  ..., 9.8644e-01,
          9.8643e-01, 9.8560e-01]],
        [[4.9392e-03, 4.7415e-03, 4.6566e-03,  ..., 1.0409e-04,
          5.0397e-03, 4.9567e-03],
         [4.9392e-03, 4.7415e-03, 4.6566e-03,  ..., 8.5556e-07,
          5.0397e-03, 4.9567e-03],
         [4.9392e-03, 4.7415e-03, 4.6566e-03,  ..., 9.9989e-01,
          5.0397e-03, 4.9567e-03],
         [9.8518e-01, 9.8578e-01, 9.8603e-01,  ..., 8.5556e-07,
          9.8488e-01, 9.8513e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 566:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0049, 0.0047, 0.0047,  ..., 0.0050, 0.0048, 0.0047],
         [0.0049, 0.0047, 0.0047,  ..., 0.0050, 0.0048, 0.0047],
         [0.0049, 0.0047, 0.0047,  ..., 0.0050, 0.0048, 0.0047],
         [0.9853, 0.9860, 0.9859,  ..., 0.9851, 0.9857, 0.9858]],
        [[0.0045, 0.0236, 0.0048,  ..., 0.0050, 0.0044, 0.0048],
         [0.0044, 0.0236, 0.0048,  ..., 0.0050, 0.0044, 0.0048],
         [0.0044, 0.0236, 0.0048,  ..., 0.0050, 0.0044, 0.0048],
         [0.9866, 0.9292, 0.9855,  ..., 0.9849, 0.9867, 0.9857]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:57,145 [Process: 0] Synchronize training processes
2024-08-16 16:21:57,146 [Process: 0] Evaluating...
2024-08-16 16:21:57,148 [Process: 0] EPOCH 567:
2024-08-16 16:21:57,150 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1863e-03, 2.7289e-03, 2.6081e-03,  ..., 3.0672e-03,
          3.1937e-03, 3.3198e-03],
         [3.0657e-03, 2.5987e-03, 2.5603e-03,  ..., 3.0156e-03,
          3.0496e-03, 3.2217e-03],
         [2.9093e-03, 2.4309e-03, 2.4087e-03,  ..., 2.8935e-03,
          2.9197e-03, 3.1032e-03],
         [9.9084e-01, 9.9224e-01, 9.9242e-01,  ..., 9.9102e-01,
          9.9084e-01, 9.9036e-01]],
        [[8.1946e-03, 4.7797e-03, 5.8170e-03,  ..., 1.2012e-05,
          6.1312e-03, 4.8672e-03],
         [8.1946e-03, 4.7797e-03, 5.8170e-03,  ..., 4.7777e-09,
          6.1312e-03, 4.8672e-03],
         [8.1946e-03, 4.7797e-03, 5.8170e-03,  ..., 9.9999e-01,
          6.1312e-03, 4.8672e-03],
         [9.7542e-01, 9.8566e-01, 9.8255e-01,  ..., 4.7777e-09,
          9.8161e-01, 9.8540e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 567:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0069, 0.0070,  ..., 0.0064, 0.0057, 0.0065],
         [0.0073, 0.0069, 0.0070,  ..., 0.0064, 0.0057, 0.0065],
         [0.0073, 0.0069, 0.0070,  ..., 0.0064, 0.0057, 0.0065],
         [0.9780, 0.9794, 0.9791,  ..., 0.9807, 0.9829, 0.9806]],
        [[0.0042, 0.0040, 0.0046,  ..., 0.0041, 0.0038, 0.0043],
         [0.0042, 0.0040, 0.0046,  ..., 0.0041, 0.0037, 0.0043],
         [0.0042, 0.0040, 0.0046,  ..., 0.0041, 0.0037, 0.0043],
         [0.9875, 0.9881, 0.9861,  ..., 0.9877, 0.9888, 0.9871]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:21:59,230 [Process: 0] Synchronize training processes
2024-08-16 16:21:59,230 [Process: 0] Evaluating...
2024-08-16 16:21:59,232 [Process: 0] EPOCH 568:
2024-08-16 16:21:59,234 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2183e-03, 3.4162e-03, 3.5222e-03,  ..., 3.5495e-03,
          3.6720e-03, 3.2256e-03],
         [3.1171e-03, 3.2632e-03, 3.4290e-03,  ..., 3.4579e-03,
          3.5960e-03, 3.1761e-03],
         [3.0698e-03, 3.2361e-03, 3.4178e-03,  ..., 3.4579e-03,
          3.5960e-03, 3.1140e-03],
         [9.9059e-01, 9.9008e-01, 9.8963e-01,  ..., 9.8953e-01,
          9.8914e-01, 9.9048e-01]],
        [[4.0750e-03, 4.9253e-03, 3.9967e-03,  ..., 9.5211e-07,
          4.2308e-03, 4.5226e-03],
         [3.9941e-03, 4.9253e-03, 3.9308e-03,  ..., 5.9014e-11,
          4.2308e-03, 4.5226e-03],
         [3.9941e-03, 4.9253e-03, 3.9308e-03,  ..., 1.0000e+00,
          4.2308e-03, 4.5226e-03],
         [9.8794e-01, 9.8522e-01, 9.8814e-01,  ..., 5.9014e-11,
          9.8731e-01, 9.8643e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 568:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0056, 0.0055,  ..., 0.0055, 0.0059, 0.0058],
         [0.0058, 0.0056, 0.0055,  ..., 0.0055, 0.0059, 0.0058],
         [0.0058, 0.0056, 0.0055,  ..., 0.0055, 0.0059, 0.0058],
         [0.9826, 0.9832, 0.9835,  ..., 0.9835, 0.9823, 0.9825]],
        [[0.0049, 0.0047, 0.0050,  ..., 0.0046, 0.0043, 0.0046],
         [0.0049, 0.0047, 0.0050,  ..., 0.0046, 0.0043, 0.0046],
         [0.0049, 0.0047, 0.0050,  ..., 0.0046, 0.0043, 0.0046],
         [0.9854, 0.9860, 0.9850,  ..., 0.9861, 0.9870, 0.9862]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:01,351 [Process: 0] Synchronize training processes
2024-08-16 16:22:01,352 [Process: 0] Evaluating...
2024-08-16 16:22:01,354 [Process: 0] EPOCH 569:
2024-08-16 16:22:01,356 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.0845e-03, 3.7654e-03, 3.7349e-03,  ..., 4.2113e-03,
          3.6205e-03, 3.7764e-03],
         [3.8373e-03, 3.4426e-03, 3.5446e-03,  ..., 4.0717e-03,
          3.4625e-03, 3.5244e-03],
         [3.8373e-03, 3.4426e-03, 3.5446e-03,  ..., 4.0717e-03,
          3.4625e-03, 3.5244e-03],
         [9.8824e-01, 9.8935e-01, 9.8918e-01,  ..., 9.8765e-01,
          9.8945e-01, 9.8917e-01]],
        [[3.8962e-03, 3.8672e-03, 3.8838e-03,  ..., 1.0222e-03,
          3.6829e-03, 3.9737e-03],
         [3.6547e-03, 3.7143e-03, 3.6431e-03,  ..., 5.4788e-05,
          3.4400e-03, 3.8249e-03],
         [3.6547e-03, 3.7143e-03, 3.6431e-03,  ..., 9.9887e-01,
          3.4400e-03, 3.8249e-03],
         [9.8879e-01, 9.8870e-01, 9.8883e-01,  ..., 5.4788e-05,
          9.8944e-01, 9.8838e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 569:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0051, 0.0053, 0.0055,  ..., 0.0055, 0.0054, 0.0055],
         [0.0051, 0.0053, 0.0055,  ..., 0.0055, 0.0054, 0.0055],
         [0.0051, 0.0053, 0.0055,  ..., 0.0055, 0.0054, 0.0055],
         [0.9848, 0.9840, 0.9836,  ..., 0.9835, 0.9837, 0.9835]],
        [[0.0050, 0.0051, 0.0049,  ..., 0.0048, 0.0050, 0.0049],
         [0.0050, 0.0051, 0.0049,  ..., 0.0048, 0.0050, 0.0049],
         [0.0050, 0.0051, 0.0049,  ..., 0.0048, 0.0050, 0.0049],
         [0.9849, 0.9848, 0.9852,  ..., 0.9855, 0.9849, 0.9852]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.0983e-03, 3.8690e-03, 3.9119e-03,  ..., 4.1358e-03,
          3.9086e-03, 3.7019e-03],
         [3.8580e-03, 3.7156e-03, 3.6494e-03,  ..., 4.0153e-03,
          3.6717e-03, 3.4272e-03],
         [3.8580e-03, 3.7156e-03, 3.6494e-03,  ..., 4.0153e-03,
          3.6717e-03, 3.4272e-03],
         [9.8819e-01, 9.8870e-01, 9.8879e-01,  ..., 9.8783e-01,
          9.8875e-01, 9.8944e-01]],
        [[3.8836e-03, 3.9581e-03, 4.1639e-03,  ..., 1.1338e-04,
          4.0667e-03, 4.1333e-03],
         [3.7674e-03, 3.7825e-03, 4.0519e-03,  ..., 1.5804e-06,
          3.9356e-03, 3.9906e-03],
         [3.7674e-03, 3.7825e-03, 4.0519e-03,  ..., 9.9988e-01,
          3.9356e-03, 3.9906e-03],
         [9.8858e-01, 9.8848e-01, 9.8773e-01,  ..., 1.5804e-06,
          9.8806e-01, 9.8789e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 570:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0056, 0.0054, 0.0053,  ..., 0.0053, 0.0051, 0.0052],
         [0.0056, 0.0054, 0.0053,  ..., 0.0053, 0.0051, 0.0052],
         [0.0056, 0.0054, 0.0053,  ..., 0.0053, 0.0051, 0.0052],
         [0.9831, 0.9837, 0.9841,  ..., 0.9842, 0.9848, 0.9844]],
        [[0.0051, 0.0049, 0.0050,  ..., 0.0049, 0.0051, 0.0051],
         [0.0051, 0.0049, 0.0050,  ..., 0.0049, 0.0051, 0.0051],
         [0.0051, 0.0049, 0.0050,  ..., 0.0049, 0.0051, 0.0051],
         [0.9847, 0.9852, 0.9851,  ..., 0.9853, 0.9846, 0.9848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:03,440 [Process: 0] Synchronize training processes
2024-08-16 16:22:03,440 [Process: 0] Evaluating...
2024-08-16 16:22:03,442 [Process: 0] EPOCH 570:
2024-08-16 16:22:03,444 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7153e-03, 3.8834e-03, 3.9982e-03,  ..., 3.8140e-03,
          4.0984e-03, 3.6047e-03],
         [3.5660e-03, 3.7600e-03, 3.8396e-03,  ..., 3.6992e-03,
          3.8726e-03, 3.4176e-03],
         [3.5660e-03, 3.7600e-03, 3.8396e-03,  ..., 3.6992e-03,
          3.8726e-03, 3.4176e-03],
         [9.8915e-01, 9.8860e-01, 9.8832e-01,  ..., 9.8879e-01,
          9.8816e-01, 9.8956e-01]],
        [[3.8349e-03, 4.1034e-03, 3.9831e-03,  ..., 6.0817e-05,
          4.0527e-03, 3.9259e-03],
         [3.6140e-03, 3.9892e-03, 3.8327e-03,  ..., 6.8918e-07,
          3.8574e-03, 3.8018e-03],
         [3.6140e-03, 3.9892e-03, 3.8327e-03,  ..., 9.9994e-01,
          3.8574e-03, 3.8018e-03],
         [9.8894e-01, 9.8792e-01, 9.8835e-01,  ..., 6.8918e-07,
          9.8823e-01, 9.8847e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 571:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:22:05,525 [Process: 0] Synchronize training processes
2024-08-16 16:22:05,525 [Process: 0] Evaluating...
2024-08-16 16:22:05,527 [Process: 0] EPOCH 571:
2024-08-16 16:22:05,529 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0055, 0.0055,  ..., 0.0054, 0.0053, 0.0053],
         [0.0053, 0.0055, 0.0055,  ..., 0.0054, 0.0053, 0.0053],
         [0.0053, 0.0055, 0.0055,  ..., 0.0054, 0.0053, 0.0053],
         [0.9842, 0.9834, 0.9836,  ..., 0.9838, 0.9840, 0.9840]],
        [[0.0053, 0.0049, 0.0051,  ..., 0.0053, 0.0049, 0.0053],
         [0.0053, 0.0049, 0.0051,  ..., 0.0053, 0.0049, 0.0053],
         [0.0053, 0.0049, 0.0051,  ..., 0.0053, 0.0049, 0.0053],
         [0.9842, 0.9853, 0.9846,  ..., 0.9841, 0.9853, 0.9840]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.9030e-03, 4.2212e-03, 3.6201e-03,  ..., 3.7412e-03,
          3.9768e-03, 3.6892e-03],
         [3.8889e-03, 4.1182e-03, 3.4767e-03,  ..., 3.6272e-03,
          3.9768e-03, 3.5605e-03],
         [3.8889e-03, 4.1182e-03, 3.4767e-03,  ..., 3.6272e-03,
          3.9768e-03, 3.5605e-03],
         [9.8832e-01, 9.8754e-01, 9.8943e-01,  ..., 9.8900e-01,
          9.8807e-01, 9.8919e-01]],
        [[3.9095e-03, 3.7442e-03, 3.7332e-03,  ..., 3.3654e-05,
          3.5807e-03, 3.9186e-03],
         [3.8224e-03, 3.6123e-03, 3.6956e-03,  ..., 3.7251e-07,
          3.5459e-03, 3.9186e-03],
         [3.8224e-03, 3.6123e-03, 3.6956e-03,  ..., 9.9997e-01,
          3.5459e-03, 3.9186e-03],
         [9.8845e-01, 9.8903e-01, 9.8888e-01,  ..., 3.7251e-07,
          9.8933e-01, 9.8824e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 572:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:22:07,619 [Process: 0] Synchronize training processes
2024-08-16 16:22:07,620 [Process: 0] Evaluating...
2024-08-16 16:22:07,628 [Process: 0] EPOCH 572:
2024-08-16 16:22:07,630 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0054, 0.0053,  ..., 0.0056, 0.0049, 0.0053],
         [0.0053, 0.0054, 0.0053,  ..., 0.0056, 0.0049, 0.0053],
         [0.0053, 0.0054, 0.0053,  ..., 0.0056, 0.0049, 0.0053],
         [0.9842, 0.9839, 0.9841,  ..., 0.9832, 0.9852, 0.9840]],
        [[0.0053, 0.0052, 0.0053,  ..., 0.0051, 0.0054, 0.0047],
         [0.0053, 0.0052, 0.0053,  ..., 0.0051, 0.0054, 0.0047],
         [0.0053, 0.0052, 0.0053,  ..., 0.0051, 0.0054, 0.0047],
         [0.9840, 0.9845, 0.9841,  ..., 0.9848, 0.9838, 0.9859]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.9092e-03, 3.7448e-03, 3.9353e-03,  ..., 3.7852e-03,
          3.5808e-03, 3.8541e-03],
         [3.9092e-03, 3.7391e-03, 3.9353e-03,  ..., 3.7245e-03,
          3.4960e-03, 3.7804e-03],
         [3.9092e-03, 3.7391e-03, 3.9353e-03,  ..., 3.7245e-03,
          3.4960e-03, 3.7804e-03],
         [9.8827e-01, 9.8878e-01, 9.8819e-01,  ..., 9.8877e-01,
          9.8943e-01, 9.8859e-01]],
        [[3.9131e-03, 3.9508e-03, 3.9486e-03,  ..., 8.0765e-04,
          3.8177e-03, 3.8184e-03],
         [3.8554e-03, 3.8899e-03, 3.9486e-03,  ..., 3.5862e-05,
          3.7948e-03, 3.7693e-03],
         [3.8554e-03, 3.8899e-03, 3.9486e-03,  ..., 9.9912e-01,
          3.7948e-03, 3.7693e-03],
         [9.8838e-01, 9.8827e-01, 9.8815e-01,  ..., 3.5862e-05,
          9.8859e-01, 9.8864e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 573:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:22:09,706 [Process: 0] Synchronize training processes
2024-08-16 16:22:09,706 [Process: 0] Evaluating...
2024-08-16 16:22:09,708 [Process: 0] EPOCH 573:
2024-08-16 16:22:09,710 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0052, 0.0049,  ..., 0.0053, 0.0054, 0.0053],
         [0.0053, 0.0052, 0.0049,  ..., 0.0053, 0.0054, 0.0053],
         [0.0053, 0.0052, 0.0049,  ..., 0.0053, 0.0054, 0.0053],
         [0.9842, 0.9845, 0.9853,  ..., 0.9842, 0.9839, 0.9841]],
        [[0.0051, 0.0047, 0.0054,  ..., 0.0050, 0.0050, 0.0054],
         [0.0051, 0.0047, 0.0054,  ..., 0.0050, 0.0050, 0.0054],
         [0.0051, 0.0047, 0.0054,  ..., 0.0050, 0.0050, 0.0054],
         [0.9848, 0.9859, 0.9839,  ..., 0.9849, 0.9849, 0.9839]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7403e-03, 3.8356e-03, 3.5972e-03,  ..., 3.6874e-03,
          3.8938e-03, 3.9295e-03],
         [3.7403e-03, 3.8356e-03, 3.5972e-03,  ..., 3.6874e-03,
          3.8938e-03, 3.9295e-03],
         [3.7403e-03, 3.8356e-03, 3.5972e-03,  ..., 3.6874e-03,
          3.8938e-03, 3.9295e-03],
         [9.8878e-01, 9.8849e-01, 9.8921e-01,  ..., 9.8894e-01,
          9.8832e-01, 9.8821e-01]],
        [[3.8737e-03, 3.7827e-03, 4.0485e-03,  ..., 9.1087e-05,
          3.7930e-03, 3.6040e-03],
         [3.8737e-03, 3.7827e-03, 4.0485e-03,  ..., 3.2800e-07,
          3.7930e-03, 3.6040e-03],
         [3.8737e-03, 3.7827e-03, 4.0485e-03,  ..., 9.9991e-01,
          3.7930e-03, 3.6040e-03],
         [9.8838e-01, 9.8865e-01, 9.8785e-01,  ..., 3.2800e-07,
          9.8862e-01, 9.8919e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 574:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:22:11,786 [Process: 0] Synchronize training processes
2024-08-16 16:22:11,787 [Process: 0] Evaluating...
2024-08-16 16:22:11,789 [Process: 0] EPOCH 574:
2024-08-16 16:22:11,791 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0051, 0.0053,  ..., 0.0052, 0.0053, 0.0053],
         [0.0053, 0.0051, 0.0053,  ..., 0.0052, 0.0053, 0.0053],
         [0.0053, 0.0051, 0.0053,  ..., 0.0052, 0.0053, 0.0053],
         [0.9840, 0.9847, 0.9841,  ..., 0.9843, 0.9840, 0.9841]],
        [[0.0062, 0.0048, 0.0054,  ..., 0.0051, 0.0048, 0.0053],
         [0.0062, 0.0048, 0.0054,  ..., 0.0051, 0.0048, 0.0053],
         [0.0062, 0.0048, 0.0054,  ..., 0.0051, 0.0048, 0.0053],
         [0.9814, 0.9855, 0.9838,  ..., 0.9848, 0.9855, 0.9840]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0043, 0.0043, 0.0042,  ..., 0.0044, 0.0042, 0.0041],
         [0.0043, 0.0043, 0.0042,  ..., 0.0044, 0.0042, 0.0041],
         [0.0043, 0.0043, 0.0042,  ..., 0.0044, 0.0042, 0.0041],
         [0.9870, 0.9871, 0.9875,  ..., 0.9868, 0.9873, 0.9878]],
        [[0.0043, 0.0043, 0.0045,  ..., 0.2500, 0.0042, 0.0040],
         [0.0043, 0.0043, 0.0045,  ..., 0.2500, 0.0042, 0.0040],
         [0.0043, 0.0043, 0.0045,  ..., 0.2500, 0.0042, 0.0040],
         [0.9872, 0.9870, 0.9865,  ..., 0.2500, 0.9875, 0.9881]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 575:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:22:13,861 [Process: 0] Synchronize training processes
2024-08-16 16:22:13,861 [Process: 0] Evaluating...
2024-08-16 16:22:13,863 [Process: 0] EPOCH 575:
2024-08-16 16:22:13,865 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0052, 0.0050,  ..., 0.0051, 0.0053, 0.0053],
         [0.0054, 0.0052, 0.0050,  ..., 0.0051, 0.0053, 0.0053],
         [0.0054, 0.0052, 0.0050,  ..., 0.0051, 0.0053, 0.0053],
         [0.9838, 0.9845, 0.9850,  ..., 0.9847, 0.9841, 0.9842]],
        [[0.0078, 0.0049, 0.0054,  ..., 0.0049, 0.0053, 0.0050],
         [0.0078, 0.0049, 0.0054,  ..., 0.0049, 0.0053, 0.0050],
         [0.0078, 0.0049, 0.0054,  ..., 0.0049, 0.0053, 0.0050],
         [0.9766, 0.9853, 0.9839,  ..., 0.9852, 0.9841, 0.9851]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.0658e-03, 4.1703e-03, 4.5143e-03,  ..., 4.3919e-03,
          4.5511e-03, 4.3938e-03],
         [4.0658e-03, 4.1703e-03, 4.5143e-03,  ..., 4.3919e-03,
          4.5511e-03, 4.3938e-03],
         [4.0658e-03, 4.1703e-03, 4.5143e-03,  ..., 4.3919e-03,
          4.5511e-03, 4.3938e-03],
         [9.8780e-01, 9.8749e-01, 9.8646e-01,  ..., 9.8682e-01,
          9.8635e-01, 9.8682e-01]],
        [[4.5216e-03, 4.7062e-03, 4.6118e-03,  ..., 1.0062e-04,
          4.7507e-03, 4.7771e-03],
         [4.5216e-03, 4.7062e-03, 4.6118e-03,  ..., 1.1977e-06,
          4.7507e-03, 4.7771e-03],
         [4.5216e-03, 4.7062e-03, 4.6118e-03,  ..., 9.9990e-01,
          4.7507e-03, 4.7771e-03],
         [9.8644e-01, 9.8588e-01, 9.8616e-01,  ..., 1.1977e-06,
          9.8575e-01, 9.8567e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 576:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:22:15,931 [Process: 0] Synchronize training processes
2024-08-16 16:22:15,932 [Process: 0] Evaluating...
2024-08-16 16:22:15,934 [Process: 0] EPOCH 576:
2024-08-16 16:22:15,936 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0050, 0.0054,  ..., 0.0055, 0.0052, 0.0051],
         [0.0053, 0.0050, 0.0054,  ..., 0.0055, 0.0052, 0.0051],
         [0.0053, 0.0050, 0.0054,  ..., 0.0055, 0.0052, 0.0051],
         [0.9840, 0.9849, 0.9839,  ..., 0.9836, 0.9843, 0.9847]],
        [[0.0083, 0.0051, 0.0053,  ..., 0.0051, 0.0052, 0.0053],
         [0.0083, 0.0051, 0.0053,  ..., 0.0051, 0.0052, 0.0053],
         [0.0083, 0.0051, 0.0053,  ..., 0.0051, 0.0052, 0.0053],
         [0.9751, 0.9848, 0.9842,  ..., 0.9848, 0.9843, 0.9841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.4006e-03, 4.4825e-03, 4.4170e-03,  ..., 4.3977e-03,
          4.5243e-03, 3.9420e-03],
         [4.4006e-03, 4.4825e-03, 4.4170e-03,  ..., 4.3977e-03,
          4.5243e-03, 3.9420e-03],
         [4.4006e-03, 4.4825e-03, 4.4170e-03,  ..., 4.3977e-03,
          4.5243e-03, 3.9420e-03],
         [9.8680e-01, 9.8655e-01, 9.8675e-01,  ..., 9.8681e-01,
          9.8643e-01, 9.8817e-01]],
        [[5.3696e-03, 5.3849e-03, 5.9618e-03,  ..., 1.7167e-05,
          5.8706e-03, 5.0906e-03],
         [5.3696e-03, 5.3849e-03, 5.9618e-03,  ..., 1.1632e-09,
          5.8706e-03, 5.0906e-03],
         [5.3696e-03, 5.3849e-03, 5.9618e-03,  ..., 9.9998e-01,
          5.8706e-03, 5.0906e-03],
         [9.8389e-01, 9.8385e-01, 9.8211e-01,  ..., 1.1632e-09,
          9.8239e-01, 9.8473e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 577:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:22:17,996 [Process: 0] Synchronize training processes
2024-08-16 16:22:17,996 [Process: 0] Evaluating...
2024-08-16 16:22:17,998 [Process: 0] EPOCH 577:
2024-08-16 16:22:18,000 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0054, 0.0055,  ..., 0.0052, 0.0053, 0.0054],
         [0.0053, 0.0054, 0.0055,  ..., 0.0052, 0.0053, 0.0054],
         [0.0053, 0.0054, 0.0055,  ..., 0.0052, 0.0053, 0.0054],
         [0.9841, 0.9839, 0.9836,  ..., 0.9843, 0.9842, 0.9839]],
        [[0.0062, 0.0051, 0.0053,  ..., 0.0052, 0.0052, 0.0053],
         [0.0062, 0.0051, 0.0053,  ..., 0.0052, 0.0052, 0.0053],
         [0.0062, 0.0051, 0.0053,  ..., 0.0052, 0.0052, 0.0053],
         [0.9814, 0.9847, 0.9841,  ..., 0.9845, 0.9843, 0.9841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2383e-03, 3.3335e-03, 3.6636e-03,  ..., 3.1152e-03,
          3.1552e-03, 3.5387e-03],
         [3.2876e-03, 3.3348e-03, 3.6636e-03,  ..., 3.1691e-03,
          3.1843e-03, 3.5540e-03],
         [3.2383e-03, 3.3335e-03, 3.6636e-03,  ..., 3.1152e-03,
          3.1552e-03, 3.5387e-03],
         [9.9024e-01, 9.9000e-01, 9.8901e-01,  ..., 9.9060e-01,
          9.9051e-01, 9.8937e-01]],
        [[1.0448e-02, 6.7486e-03, 7.8724e-03,  ..., 8.5471e-04,
          5.8525e-03, 5.9312e-03],
         [1.0448e-02, 6.7486e-03, 7.8724e-03,  ..., 1.2795e-06,
          5.8525e-03, 5.9312e-03],
         [1.0448e-02, 6.7486e-03, 7.8724e-03,  ..., 9.9914e-01,
          5.8525e-03, 5.9312e-03],
         [9.6866e-01, 9.7975e-01, 9.7638e-01,  ..., 1.2795e-06,
          9.8244e-01, 9.8221e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 578:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:22:20,067 [Process: 0] Synchronize training processes
2024-08-16 16:22:20,068 [Process: 0] Evaluating...
2024-08-16 16:22:20,069 [Process: 0] EPOCH 578:
2024-08-16 16:22:20,071 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0053, 0.0052,  ..., 0.0054, 0.0052, 0.0051],
         [0.0055, 0.0053, 0.0052,  ..., 0.0054, 0.0052, 0.0051],
         [0.0055, 0.0053, 0.0052,  ..., 0.0054, 0.0052, 0.0051],
         [0.9835, 0.9840, 0.9845,  ..., 0.9837, 0.9844, 0.9846]],
        [[0.0051, 0.0051, 0.0053,  ..., 0.0053, 0.0053, 0.0053],
         [0.0051, 0.0051, 0.0053,  ..., 0.0053, 0.0053, 0.0053],
         [0.0051, 0.0051, 0.0053,  ..., 0.0053, 0.0053, 0.0053],
         [0.9846, 0.9847, 0.9842,  ..., 0.9841, 0.9842, 0.9842]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1949e-03, 3.0430e-03, 2.9267e-03,  ..., 3.0436e-03,
          3.1311e-03, 3.1712e-03],
         [3.2172e-03, 3.0987e-03, 3.0092e-03,  ..., 3.1222e-03,
          3.2119e-03, 3.1961e-03],
         [3.1949e-03, 3.0430e-03, 2.9267e-03,  ..., 3.0436e-03,
          3.1311e-03, 3.1712e-03],
         [9.9039e-01, 9.9082e-01, 9.9114e-01,  ..., 9.9079e-01,
          9.9053e-01, 9.9046e-01]],
        [[7.8855e-03, 6.9747e-03, 8.6216e-03,  ..., 1.0553e-04,
          5.8500e-03, 7.5654e-03],
         [7.8855e-03, 6.9747e-03, 8.6216e-03,  ..., 1.7527e-07,
          5.8500e-03, 7.5654e-03],
         [7.8855e-03, 6.9747e-03, 8.6216e-03,  ..., 9.9989e-01,
          5.8500e-03, 7.5654e-03],
         [9.7634e-01, 9.7908e-01, 9.7414e-01,  ..., 1.7527e-07,
          9.8245e-01, 9.7730e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 579:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:22:22,144 [Process: 0] Synchronize training processes
2024-08-16 16:22:22,144 [Process: 0] Evaluating...
2024-08-16 16:22:22,146 [Process: 0] EPOCH 579:
2024-08-16 16:22:22,148 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0052, 0.0052, 0.0050,  ..., 0.0051, 0.0053, 0.0053],
         [0.0052, 0.0052, 0.0050,  ..., 0.0051, 0.0053, 0.0053],
         [0.0052, 0.0052, 0.0050,  ..., 0.0051, 0.0053, 0.0053],
         [0.9844, 0.9845, 0.9851,  ..., 0.9846, 0.9840, 0.9840]],
        [[0.0049, 0.0048, 0.0051,  ..., 0.0049, 0.0051, 0.0051],
         [0.0049, 0.0048, 0.0051,  ..., 0.0049, 0.0051, 0.0051],
         [0.0049, 0.0048, 0.0051,  ..., 0.0049, 0.0051, 0.0051],
         [0.9852, 0.9856, 0.9847,  ..., 0.9852, 0.9848, 0.9848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7090e-03, 3.8412e-03, 3.7969e-03,  ..., 4.1097e-03,
          3.9001e-03, 3.8026e-03],
         [3.7090e-03, 3.8412e-03, 3.7969e-03,  ..., 4.1097e-03,
          3.9001e-03, 3.8026e-03],
         [3.7090e-03, 3.8412e-03, 3.7969e-03,  ..., 4.1097e-03,
          3.9001e-03, 3.8026e-03],
         [9.8887e-01, 9.8848e-01, 9.8861e-01,  ..., 9.8767e-01,
          9.8830e-01, 9.8859e-01]],
        [[6.3360e-03, 6.0089e-03, 5.9173e-03,  ..., 1.8447e-04,
          5.0289e-03, 5.3202e-03],
         [6.3360e-03, 6.0089e-03, 5.9173e-03,  ..., 1.6905e-06,
          5.0289e-03, 5.3202e-03],
         [6.3360e-03, 6.0089e-03, 5.9173e-03,  ..., 9.9981e-01,
          5.0289e-03, 5.3202e-03],
         [9.8099e-01, 9.8197e-01, 9.8225e-01,  ..., 1.6905e-06,
          9.8491e-01, 9.8404e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 580:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:22:24,237 [Process: 0] Synchronize training processes
2024-08-16 16:22:24,237 [Process: 0] Evaluating...
2024-08-16 16:22:24,239 [Process: 0] EPOCH 580:
2024-08-16 16:22:24,241 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0050, 0.0053,  ..., 0.0052, 0.0051, 0.0053],
         [0.0053, 0.0050, 0.0053,  ..., 0.0052, 0.0051, 0.0053],
         [0.0053, 0.0050, 0.0053,  ..., 0.0052, 0.0051, 0.0053],
         [0.9842, 0.9850, 0.9842,  ..., 0.9845, 0.9846, 0.9841]],
        [[0.0050, 0.0049, 0.0048,  ..., 0.0050, 0.0049, 0.0051],
         [0.0050, 0.0049, 0.0048,  ..., 0.0050, 0.0049, 0.0051],
         [0.0050, 0.0049, 0.0048,  ..., 0.0050, 0.0049, 0.0051],
         [0.9851, 0.9854, 0.9856,  ..., 0.9851, 0.9852, 0.9847]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.2700e-03, 4.4080e-03, 4.3687e-03,  ..., 4.2530e-03,
          4.1876e-03, 4.1366e-03],
         [4.2700e-03, 4.4080e-03, 4.3687e-03,  ..., 4.2530e-03,
          4.1876e-03, 4.1366e-03],
         [4.2700e-03, 4.4080e-03, 4.3687e-03,  ..., 4.2530e-03,
          4.1876e-03, 4.1366e-03],
         [9.8719e-01, 9.8678e-01, 9.8689e-01,  ..., 9.8724e-01,
          9.8744e-01, 9.8759e-01]],
        [[4.4597e-03, 4.7956e-03, 5.2606e-03,  ..., 1.6877e-05,
          5.3188e-03, 5.2636e-03],
         [4.4597e-03, 4.7956e-03, 5.2606e-03,  ..., 2.0808e-10,
          5.3188e-03, 5.2636e-03],
         [4.4597e-03, 4.7956e-03, 5.2606e-03,  ..., 9.9998e-01,
          5.3188e-03, 5.2636e-03],
         [9.8662e-01, 9.8561e-01, 9.8422e-01,  ..., 2.0808e-10,
          9.8404e-01, 9.8421e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 581:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:22:26,321 [Process: 0] Synchronize training processes
2024-08-16 16:22:26,321 [Process: 0] Evaluating...
2024-08-16 16:22:26,323 [Process: 0] EPOCH 581:
2024-08-16 16:22:26,325 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0053, 0.0053,  ..., 0.0052, 0.0053, 0.0054],
         [0.0053, 0.0053, 0.0053,  ..., 0.0052, 0.0053, 0.0054],
         [0.0053, 0.0053, 0.0053,  ..., 0.0052, 0.0053, 0.0054],
         [0.9841, 0.9841, 0.9842,  ..., 0.9843, 0.9840, 0.9838]],
        [[0.0051, 0.0052, 0.0049,  ..., 0.0053, 0.0050, 0.0051],
         [0.0051, 0.0052, 0.0049,  ..., 0.0053, 0.0050, 0.0051],
         [0.0051, 0.0052, 0.0049,  ..., 0.0053, 0.0050, 0.0051],
         [0.9848, 0.9843, 0.9852,  ..., 0.9841, 0.9849, 0.9847]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.2929e-03, 4.5649e-03, 4.3806e-03,  ..., 4.2119e-03,
          4.3632e-03, 4.4191e-03],
         [4.2929e-03, 4.5649e-03, 4.3806e-03,  ..., 4.2119e-03,
          4.3632e-03, 4.4191e-03],
         [4.2929e-03, 4.5649e-03, 4.3806e-03,  ..., 4.2119e-03,
          4.3632e-03, 4.4191e-03],
         [9.8712e-01, 9.8631e-01, 9.8686e-01,  ..., 9.8736e-01,
          9.8691e-01, 9.8674e-01]],
        [[4.8689e-03, 4.6696e-03, 4.8236e-03,  ..., 1.4521e-04,
          4.3199e-03, 4.5864e-03],
         [4.8689e-03, 4.6696e-03, 4.8236e-03,  ..., 4.5872e-07,
          4.3199e-03, 4.5864e-03],
         [4.8689e-03, 4.6696e-03, 4.8236e-03,  ..., 9.9985e-01,
          4.3199e-03, 4.5864e-03],
         [9.8539e-01, 9.8599e-01, 9.8553e-01,  ..., 4.5872e-07,
          9.8704e-01, 9.8624e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:28,449 [Process: 0] Synchronize training processes
2024-08-16 16:22:28,450 [Process: 0] Evaluating...
2024-08-16 16:22:28,458 [Process: 0] EPOCH 582:
2024-08-16 16:22:28,460 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 582:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0053, 0.0053,  ..., 0.0055, 0.0055, 0.0052],
         [0.0054, 0.0053, 0.0053,  ..., 0.0055, 0.0055, 0.0052],
         [0.0054, 0.0053, 0.0053,  ..., 0.0055, 0.0055, 0.0052],
         [0.9839, 0.9841, 0.9840,  ..., 0.9836, 0.9834, 0.9843]],
        [[0.0053, 0.0053, 0.0051,  ..., 0.0054, 0.0052, 0.0053],
         [0.0053, 0.0053, 0.0051,  ..., 0.0054, 0.0052, 0.0053],
         [0.0053, 0.0053, 0.0051,  ..., 0.0054, 0.0052, 0.0053],
         [0.9842, 0.9840, 0.9848,  ..., 0.9839, 0.9845, 0.9841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.2462e-03, 4.1151e-03, 4.2594e-03,  ..., 4.2021e-03,
          4.0291e-03, 4.4697e-03],
         [4.2462e-03, 4.1151e-03, 4.2594e-03,  ..., 4.2021e-03,
          4.0291e-03, 4.4697e-03],
         [4.2462e-03, 4.1151e-03, 4.2594e-03,  ..., 4.2021e-03,
          4.0291e-03, 4.4697e-03],
         [9.8726e-01, 9.8765e-01, 9.8722e-01,  ..., 9.8739e-01,
          9.8791e-01, 9.8659e-01]],
        [[5.2272e-03, 4.6443e-03, 5.2943e-03,  ..., 1.6995e-05,
          5.0315e-03, 4.6842e-03],
         [5.2272e-03, 4.6443e-03, 5.2943e-03,  ..., 2.9455e-09,
          5.0315e-03, 4.6842e-03],
         [5.2272e-03, 4.6443e-03, 5.2943e-03,  ..., 9.9998e-01,
          5.0315e-03, 4.6842e-03],
         [9.8432e-01, 9.8607e-01, 9.8412e-01,  ..., 2.9455e-09,
          9.8491e-01, 9.8595e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:30,559 [Process: 0] Synchronize training processes
2024-08-16 16:22:30,559 [Process: 0] Evaluating...
2024-08-16 16:22:30,561 [Process: 0] EPOCH 583:
2024-08-16 16:22:30,563 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 583:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0051, 0.0052, 0.0053,  ..., 0.0051, 0.0051, 0.0053],
         [0.0051, 0.0052, 0.0053,  ..., 0.0051, 0.0051, 0.0053],
         [0.0051, 0.0052, 0.0053,  ..., 0.0051, 0.0051, 0.0053],
         [0.9846, 0.9843, 0.9840,  ..., 0.9848, 0.9848, 0.9842]],
        [[0.0050, 0.0051, 0.0052,  ..., 0.0052, 0.0050, 0.0052],
         [0.0050, 0.0051, 0.0052,  ..., 0.0052, 0.0050, 0.0052],
         [0.0050, 0.0051, 0.0052,  ..., 0.0052, 0.0050, 0.0052],
         [0.9849, 0.9846, 0.9845,  ..., 0.9845, 0.9851, 0.9843]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:22:32,629 [Process: 0] Synchronize training processes
2024-08-16 16:22:32,629 [Process: 0] Evaluating...
2024-08-16 16:22:32,631 [Process: 0] EPOCH 584:
2024-08-16 16:22:32,633 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.0114e-03, 4.2257e-03, 4.4615e-03,  ..., 3.9121e-03,
          4.2419e-03, 4.2788e-03],
         [4.0114e-03, 4.2257e-03, 4.4615e-03,  ..., 3.9121e-03,
          4.2419e-03, 4.2788e-03],
         [4.0114e-03, 4.2257e-03, 4.4615e-03,  ..., 3.9121e-03,
          4.2419e-03, 4.2788e-03],
         [9.8797e-01, 9.8732e-01, 9.8662e-01,  ..., 9.8826e-01,
          9.8727e-01, 9.8716e-01]],
        [[4.9220e-03, 4.6712e-03, 5.1322e-03,  ..., 4.7287e-05,
          4.5604e-03, 4.0950e-03],
         [4.9220e-03, 4.6712e-03, 5.1322e-03,  ..., 1.4270e-10,
          4.5604e-03, 4.0950e-03],
         [4.9220e-03, 4.6712e-03, 5.1322e-03,  ..., 9.9995e-01,
          4.5604e-03, 4.0950e-03],
         [9.8523e-01, 9.8599e-01, 9.8460e-01,  ..., 1.4270e-10,
          9.8632e-01, 9.8771e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 584:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0051, 0.0051,  ..., 0.0051, 0.0052, 0.0052],
         [0.0050, 0.0051, 0.0051,  ..., 0.0051, 0.0052, 0.0052],
         [0.0050, 0.0051, 0.0051,  ..., 0.0051, 0.0052, 0.0052],
         [0.9849, 0.9847, 0.9848,  ..., 0.9846, 0.9845, 0.9845]],
        [[0.0049, 0.0047, 0.0051,  ..., 0.0049, 0.0049, 0.0052],
         [0.0049, 0.0047, 0.0051,  ..., 0.0049, 0.0049, 0.0052],
         [0.0049, 0.0047, 0.0051,  ..., 0.0049, 0.0049, 0.0052],
         [0.9852, 0.9860, 0.9847,  ..., 0.9853, 0.9852, 0.9845]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:34,718 [Process: 0] Synchronize training processes
2024-08-16 16:22:34,719 [Process: 0] Evaluating...
2024-08-16 16:22:34,720 [Process: 0] EPOCH 585:
2024-08-16 16:22:34,722 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.3628e-03, 4.4787e-03, 4.3860e-03,  ..., 4.1605e-03,
          4.1693e-03, 4.2101e-03],
         [4.3628e-03, 4.4787e-03, 4.3860e-03,  ..., 4.1605e-03,
          4.1693e-03, 4.2101e-03],
         [4.3628e-03, 4.4787e-03, 4.3860e-03,  ..., 4.1605e-03,
          4.1693e-03, 4.2101e-03],
         [9.8691e-01, 9.8656e-01, 9.8684e-01,  ..., 9.8752e-01,
          9.8749e-01, 9.8737e-01]],
        [[4.6154e-03, 4.8016e-03, 4.7755e-03,  ..., 7.8459e-05,
          4.4650e-03, 4.6175e-03],
         [4.6154e-03, 4.8016e-03, 4.7755e-03,  ..., 6.7117e-07,
          4.4650e-03, 4.6175e-03],
         [4.6154e-03, 4.8016e-03, 4.7755e-03,  ..., 9.9992e-01,
          4.4650e-03, 4.6175e-03],
         [9.8615e-01, 9.8560e-01, 9.8567e-01,  ..., 6.7117e-07,
          9.8660e-01, 9.8615e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 585:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0052, 0.0051, 0.0052,  ..., 0.0049, 0.0051, 0.0050],
         [0.0052, 0.0051, 0.0052,  ..., 0.0049, 0.0051, 0.0050],
         [0.0052, 0.0051, 0.0052,  ..., 0.0049, 0.0051, 0.0050],
         [0.9843, 0.9847, 0.9845,  ..., 0.9853, 0.9846, 0.9849]],
        [[0.0049, 0.0050, 0.0049,  ..., 0.0050, 0.0048, 0.0049],
         [0.0049, 0.0050, 0.0049,  ..., 0.0050, 0.0048, 0.0049],
         [0.0049, 0.0050, 0.0049,  ..., 0.0050, 0.0048, 0.0049],
         [0.9853, 0.9849, 0.9852,  ..., 0.9851, 0.9855, 0.9854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:36,801 [Process: 0] Synchronize training processes
2024-08-16 16:22:36,801 [Process: 0] Evaluating...
2024-08-16 16:22:36,803 [Process: 0] EPOCH 586:
2024-08-16 16:22:36,805 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.0057e-03, 4.4649e-03, 4.2814e-03,  ..., 4.2423e-03,
          4.2145e-03, 4.0805e-03],
         [4.0057e-03, 4.4649e-03, 4.2814e-03,  ..., 4.2423e-03,
          4.2145e-03, 4.0805e-03],
         [4.0057e-03, 4.4649e-03, 4.2814e-03,  ..., 4.2423e-03,
          4.2145e-03, 4.0805e-03],
         [9.8798e-01, 9.8661e-01, 9.8716e-01,  ..., 9.8727e-01,
          9.8736e-01, 9.8776e-01]],
        [[4.8421e-03, 4.2049e-03, 5.3196e-03,  ..., 9.3292e-05,
          4.4051e-03, 4.5141e-03],
         [4.8421e-03, 4.2049e-03, 5.3196e-03,  ..., 5.5460e-07,
          4.4051e-03, 4.5141e-03],
         [4.8421e-03, 4.2049e-03, 5.3196e-03,  ..., 9.9991e-01,
          4.4051e-03, 4.5141e-03],
         [9.8547e-01, 9.8739e-01, 9.8404e-01,  ..., 5.5460e-07,
          9.8678e-01, 9.8646e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 586:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0051, 0.0053, 0.0051,  ..., 0.0052, 0.0053, 0.0050],
         [0.0051, 0.0053, 0.0051,  ..., 0.0052, 0.0053, 0.0050],
         [0.0051, 0.0053, 0.0051,  ..., 0.0052, 0.0053, 0.0050],
         [0.9847, 0.9840, 0.9847,  ..., 0.9844, 0.9842, 0.9850]],
        [[0.0049, 0.0047, 0.0048,  ..., 0.0049, 0.0047, 0.0050],
         [0.0049, 0.0047, 0.0048,  ..., 0.0049, 0.0047, 0.0050],
         [0.0049, 0.0047, 0.0048,  ..., 0.0049, 0.0047, 0.0050],
         [0.9852, 0.9860, 0.9855,  ..., 0.9854, 0.9858, 0.9850]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:38,880 [Process: 0] Synchronize training processes
2024-08-16 16:22:38,881 [Process: 0] Evaluating...
2024-08-16 16:22:38,883 [Process: 0] EPOCH 587:
2024-08-16 16:22:38,884 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3772e-03, 3.6620e-03, 3.4039e-03,  ..., 3.3159e-03,
          3.4967e-03, 3.4125e-03],
         [3.3772e-03, 3.6620e-03, 3.4039e-03,  ..., 3.3261e-03,
          3.4967e-03, 3.4125e-03],
         [3.3772e-03, 3.6620e-03, 3.4039e-03,  ..., 3.3159e-03,
          3.4967e-03, 3.4125e-03],
         [9.8987e-01, 9.8901e-01, 9.8979e-01,  ..., 9.9004e-01,
          9.8951e-01, 9.8976e-01]],
        [[4.4629e-03, 4.0417e-03, 4.4130e-03,  ..., 1.7453e-05,
          4.1178e-03, 4.2653e-03],
         [4.4629e-03, 4.0417e-03, 4.4130e-03,  ..., 1.1748e-08,
          4.1178e-03, 4.2653e-03],
         [4.4629e-03, 4.0417e-03, 4.4130e-03,  ..., 9.9998e-01,
          4.1178e-03, 4.2653e-03],
         [9.8661e-01, 9.8787e-01, 9.8676e-01,  ..., 1.1748e-08,
          9.8765e-01, 9.8720e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 587:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0061, 0.0060,  ..., 0.0056, 0.0055, 0.0055],
         [0.0059, 0.0061, 0.0060,  ..., 0.0056, 0.0055, 0.0055],
         [0.0059, 0.0061, 0.0060,  ..., 0.0056, 0.0055, 0.0055],
         [0.9823, 0.9817, 0.9819,  ..., 0.9833, 0.9834, 0.9834]],
        [[0.0051, 0.0050, 0.0049,  ..., 0.0050, 0.0047, 0.0050],
         [0.0051, 0.0050, 0.0049,  ..., 0.0050, 0.0047, 0.0050],
         [0.0051, 0.0050, 0.0049,  ..., 0.0050, 0.0047, 0.0050],
         [0.9847, 0.9849, 0.9854,  ..., 0.9849, 0.9859, 0.9850]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:40,942 [Process: 0] Synchronize training processes
2024-08-16 16:22:40,942 [Process: 0] Evaluating...
2024-08-16 16:22:40,944 [Process: 0] EPOCH 588:
2024-08-16 16:22:40,946 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2437e-03, 3.6096e-03, 3.5189e-03,  ..., 3.5078e-03,
          3.3719e-03, 3.5212e-03],
         [3.2437e-03, 3.6096e-03, 3.5189e-03,  ..., 3.5078e-03,
          3.3719e-03, 3.5212e-03],
         [3.2437e-03, 3.6096e-03, 3.5189e-03,  ..., 3.5078e-03,
          3.3719e-03, 3.5212e-03],
         [9.9027e-01, 9.8917e-01, 9.8944e-01,  ..., 9.8948e-01,
          9.8988e-01, 9.8944e-01]],
        [[4.2357e-03, 3.7875e-03, 4.7551e-03,  ..., 7.0354e-04,
          3.9484e-03, 3.9545e-03],
         [4.2357e-03, 3.7875e-03, 4.7551e-03,  ..., 1.7928e-05,
          3.9484e-03, 3.9545e-03],
         [4.2357e-03, 3.7875e-03, 4.7551e-03,  ..., 9.9926e-01,
          3.9484e-03, 3.9545e-03],
         [9.8729e-01, 9.8864e-01, 9.8573e-01,  ..., 1.7928e-05,
          9.8815e-01, 9.8814e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 588:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0052, 0.0050, 0.0050,  ..., 0.0052, 0.0052, 0.0052],
         [0.0052, 0.0050, 0.0050,  ..., 0.0052, 0.0052, 0.0052],
         [0.0052, 0.0050, 0.0050,  ..., 0.0052, 0.0052, 0.0052],
         [0.9843, 0.9849, 0.9850,  ..., 0.9843, 0.9845, 0.9844]],
        [[0.0048, 0.0051, 0.0049,  ..., 0.0049, 0.0049, 0.0050],
         [0.0048, 0.0051, 0.0049,  ..., 0.0049, 0.0049, 0.0050],
         [0.0048, 0.0051, 0.0049,  ..., 0.0049, 0.0049, 0.0050],
         [0.9857, 0.9846, 0.9852,  ..., 0.9852, 0.9854, 0.9849]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:43,039 [Process: 0] Synchronize training processes
2024-08-16 16:22:43,039 [Process: 0] Evaluating...
2024-08-16 16:22:43,041 [Process: 0] EPOCH 589:
2024-08-16 16:22:43,043 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7185e-03, 3.8169e-03, 3.5703e-03,  ..., 3.8678e-03,
          3.8807e-03, 3.6610e-03],
         [3.7185e-03, 3.8169e-03, 3.5703e-03,  ..., 3.8678e-03,
          3.8807e-03, 3.6610e-03],
         [3.7185e-03, 3.8169e-03, 3.5703e-03,  ..., 3.8678e-03,
          3.8807e-03, 3.6610e-03],
         [9.8884e-01, 9.8855e-01, 9.8929e-01,  ..., 9.8840e-01,
          9.8836e-01, 9.8902e-01]],
        [[3.5623e-03, 3.8013e-03, 3.7976e-03,  ..., 6.4316e-05,
          3.8338e-03, 3.7833e-03],
         [3.5623e-03, 3.8013e-03, 3.7976e-03,  ..., 2.3188e-07,
          3.8338e-03, 3.7833e-03],
         [3.5623e-03, 3.8013e-03, 3.7976e-03,  ..., 9.9994e-01,
          3.8338e-03, 3.7833e-03],
         [9.8931e-01, 9.8860e-01, 9.8861e-01,  ..., 2.3188e-07,
          9.8850e-01, 9.8865e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 589:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0050, 0.0049,  ..., 0.0050, 0.0052, 0.0048],
         [0.0050, 0.0050, 0.0049,  ..., 0.0050, 0.0052, 0.0048],
         [0.0050, 0.0050, 0.0049,  ..., 0.0050, 0.0052, 0.0048],
         [0.9850, 0.9850, 0.9854,  ..., 0.9851, 0.9843, 0.9855]],
        [[0.0049, 0.0050, 0.0051,  ..., 0.0047, 0.0048, 0.0046],
         [0.0049, 0.0050, 0.0051,  ..., 0.0047, 0.0048, 0.0046],
         [0.0049, 0.0050, 0.0051,  ..., 0.0047, 0.0048, 0.0046],
         [0.9853, 0.9850, 0.9847,  ..., 0.9858, 0.9855, 0.9863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:45,133 [Process: 0] Synchronize training processes
2024-08-16 16:22:45,133 [Process: 0] Evaluating...
2024-08-16 16:22:45,135 [Process: 0] EPOCH 590:
2024-08-16 16:22:45,137 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7215e-03, 3.7606e-03, 3.6139e-03,  ..., 3.5966e-03,
          3.7542e-03, 3.6337e-03],
         [3.7215e-03, 3.7606e-03, 3.6139e-03,  ..., 3.5966e-03,
          3.7542e-03, 3.6337e-03],
         [3.7215e-03, 3.7606e-03, 3.6139e-03,  ..., 3.5966e-03,
          3.7542e-03, 3.6337e-03],
         [9.8884e-01, 9.8872e-01, 9.8916e-01,  ..., 9.8921e-01,
          9.8874e-01, 9.8910e-01]],
        [[3.6477e-03, 3.7545e-03, 3.8361e-03,  ..., 3.1189e-06,
          3.6047e-03, 3.7983e-03],
         [3.6477e-03, 3.7545e-03, 3.8361e-03,  ..., 6.3238e-09,
          3.6047e-03, 3.7983e-03],
         [3.6477e-03, 3.7545e-03, 3.8361e-03,  ..., 1.0000e+00,
          3.6047e-03, 3.7983e-03],
         [9.8906e-01, 9.8874e-01, 9.8849e-01,  ..., 6.3238e-09,
          9.8919e-01, 9.8861e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 590:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0048, 0.0049,  ..., 0.0051, 0.0048, 0.0048],
         [0.0048, 0.0048, 0.0049,  ..., 0.0051, 0.0048, 0.0048],
         [0.0048, 0.0048, 0.0049,  ..., 0.0051, 0.0048, 0.0048],
         [0.9855, 0.9855, 0.9852,  ..., 0.9848, 0.9855, 0.9855]],
        [[0.0047, 0.0049, 0.0046,  ..., 0.0048, 0.0047, 0.0049],
         [0.0047, 0.0049, 0.0046,  ..., 0.0048, 0.0047, 0.0049],
         [0.0047, 0.0049, 0.0046,  ..., 0.0048, 0.0047, 0.0049],
         [0.9859, 0.9854, 0.9863,  ..., 0.9856, 0.9860, 0.9854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:47,215 [Process: 0] Synchronize training processes
2024-08-16 16:22:47,215 [Process: 0] Evaluating...
2024-08-16 16:22:47,217 [Process: 0] EPOCH 591:
2024-08-16 16:22:47,219 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5381e-03, 3.7385e-03, 3.6614e-03,  ..., 3.6258e-03,
          3.7652e-03, 3.9462e-03],
         [3.5381e-03, 3.7385e-03, 3.6614e-03,  ..., 3.6258e-03,
          3.7652e-03, 3.9462e-03],
         [3.5381e-03, 3.7385e-03, 3.6614e-03,  ..., 3.6258e-03,
          3.7652e-03, 3.9462e-03],
         [9.8939e-01, 9.8878e-01, 9.8902e-01,  ..., 9.8912e-01,
          9.8870e-01, 9.8816e-01]],
        [[3.8015e-03, 3.8464e-03, 3.6445e-03,  ..., 2.8345e-04,
          3.8063e-03, 3.7233e-03],
         [3.8015e-03, 3.8464e-03, 3.6445e-03,  ..., 3.1834e-06,
          3.8063e-03, 3.7233e-03],
         [3.8015e-03, 3.8464e-03, 3.6445e-03,  ..., 9.9971e-01,
          3.8063e-03, 3.7233e-03],
         [9.8860e-01, 9.8846e-01, 9.8907e-01,  ..., 3.1834e-06,
          9.8858e-01, 9.8883e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 591:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0051, 0.0047, 0.0047,  ..., 0.0050, 0.0051, 0.0049],
         [0.0051, 0.0047, 0.0047,  ..., 0.0050, 0.0051, 0.0049],
         [0.0051, 0.0047, 0.0047,  ..., 0.0050, 0.0051, 0.0049],
         [0.9847, 0.9858, 0.9858,  ..., 0.9851, 0.9848, 0.9854]],
        [[0.0046, 0.0050, 0.0048,  ..., 0.0049, 0.0050, 0.0048],
         [0.0046, 0.0050, 0.0048,  ..., 0.0049, 0.0050, 0.0048],
         [0.0046, 0.0050, 0.0048,  ..., 0.0049, 0.0050, 0.0048],
         [0.9862, 0.9851, 0.9855,  ..., 0.9853, 0.9851, 0.9857]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:49,309 [Process: 0] Synchronize training processes
2024-08-16 16:22:49,309 [Process: 0] Evaluating...
2024-08-16 16:22:49,318 [Process: 0] EPOCH 592:
2024-08-16 16:22:49,320 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.6484e-03, 3.8210e-03, 3.6392e-03,  ..., 3.4320e-03,
          3.6188e-03, 3.5978e-03],
         [3.6484e-03, 3.8210e-03, 3.6392e-03,  ..., 3.4320e-03,
          3.6188e-03, 3.5978e-03],
         [3.6484e-03, 3.8210e-03, 3.6392e-03,  ..., 3.4320e-03,
          3.6188e-03, 3.5978e-03],
         [9.8905e-01, 9.8854e-01, 9.8908e-01,  ..., 9.8970e-01,
          9.8914e-01, 9.8921e-01]],
        [[3.4514e-03, 3.7564e-03, 3.9833e-03,  ..., 2.5011e-04,
          3.7619e-03, 3.4514e-03],
         [3.4514e-03, 3.7564e-03, 3.9833e-03,  ..., 2.0151e-06,
          3.7619e-03, 3.4514e-03],
         [3.4514e-03, 3.7564e-03, 3.9833e-03,  ..., 9.9975e-01,
          3.7619e-03, 3.4514e-03],
         [9.8965e-01, 9.8873e-01, 9.8805e-01,  ..., 2.0151e-06,
          9.8871e-01, 9.8965e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 592:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0049, 0.0050, 0.0051,  ..., 0.0048, 0.0050, 0.0050],
         [0.0049, 0.0050, 0.0051,  ..., 0.0048, 0.0050, 0.0050],
         [0.0049, 0.0050, 0.0051,  ..., 0.0048, 0.0050, 0.0050],
         [0.9853, 0.9850, 0.9847,  ..., 0.9855, 0.9849, 0.9851]],
        [[0.0048, 0.0049, 0.0047,  ..., 0.0051, 0.0048, 0.0046],
         [0.0048, 0.0049, 0.0047,  ..., 0.0051, 0.0048, 0.0046],
         [0.0048, 0.0049, 0.0047,  ..., 0.0051, 0.0048, 0.0046],
         [0.9855, 0.9854, 0.9860,  ..., 0.9848, 0.9856, 0.9861]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:51,397 [Process: 0] Synchronize training processes
2024-08-16 16:22:51,397 [Process: 0] Evaluating...
2024-08-16 16:22:51,399 [Process: 0] EPOCH 593:
2024-08-16 16:22:51,401 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.6161e-03, 3.8273e-03, 3.4960e-03,  ..., 3.9355e-03,
          3.8911e-03, 3.8845e-03],
         [3.6161e-03, 3.8273e-03, 3.4960e-03,  ..., 3.9355e-03,
          3.8911e-03, 3.8845e-03],
         [3.6161e-03, 3.8273e-03, 3.4960e-03,  ..., 3.9355e-03,
          3.8911e-03, 3.8845e-03],
         [9.8915e-01, 9.8852e-01, 9.8951e-01,  ..., 9.8819e-01,
          9.8833e-01, 9.8835e-01]],
        [[3.6839e-03, 3.9250e-03, 3.8509e-03,  ..., 1.9661e-04,
          4.1461e-03, 4.0273e-03],
         [3.6839e-03, 3.9250e-03, 3.8509e-03,  ..., 8.3911e-06,
          4.1461e-03, 4.0273e-03],
         [3.6839e-03, 3.9250e-03, 3.8509e-03,  ..., 9.9979e-01,
          4.1461e-03, 4.0273e-03],
         [9.8895e-01, 9.8822e-01, 9.8845e-01,  ..., 8.3911e-06,
          9.8756e-01, 9.8792e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 593:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0050, 0.0049,  ..., 0.0048, 0.0050, 0.0051],
         [0.0048, 0.0050, 0.0049,  ..., 0.0048, 0.0050, 0.0051],
         [0.0048, 0.0050, 0.0049,  ..., 0.0048, 0.0050, 0.0051],
         [0.9855, 0.9849, 0.9852,  ..., 0.9855, 0.9849, 0.9848]],
        [[0.0049, 0.0049, 0.0050,  ..., 0.0048, 0.0048, 0.0045],
         [0.0049, 0.0049, 0.0050,  ..., 0.0048, 0.0048, 0.0045],
         [0.0049, 0.0049, 0.0050,  ..., 0.0048, 0.0048, 0.0045],
         [0.9854, 0.9854, 0.9849,  ..., 0.9855, 0.9856, 0.9864]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7469e-03, 3.6312e-03, 3.6074e-03,  ..., 3.5958e-03,
          3.4751e-03, 3.3886e-03],
         [3.7469e-03, 3.6312e-03, 3.6074e-03,  ..., 3.5958e-03,
          3.4751e-03, 3.3886e-03],
         [3.7469e-03, 3.6312e-03, 3.6074e-03,  ..., 3.5958e-03,
          3.4751e-03, 3.3886e-03],
         [9.8876e-01, 9.8911e-01, 9.8918e-01,  ..., 9.8921e-01,
          9.8957e-01, 9.8983e-01]],
        [[3.4432e-03, 3.6040e-03, 3.4973e-03,  ..., 1.6560e-05,
          3.6969e-03, 3.4773e-03],
         [3.4432e-03, 3.6040e-03, 3.4973e-03,  ..., 6.5185e-08,
          3.6969e-03, 3.4773e-03],
         [3.4432e-03, 3.6040e-03, 3.4973e-03,  ..., 9.9998e-01,
          3.6969e-03, 3.4773e-03],
         [9.8967e-01, 9.8919e-01, 9.8951e-01,  ..., 6.5185e-08,
          9.8891e-01, 9.8957e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 594:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0051, 0.0050, 0.0051,  ..., 0.0052, 0.0049, 0.0050],
         [0.0051, 0.0050, 0.0051,  ..., 0.0052, 0.0049, 0.0050],
         [0.0051, 0.0050, 0.0051,  ..., 0.0052, 0.0049, 0.0050],
         [0.9848, 0.9849, 0.9847,  ..., 0.9843, 0.9852, 0.9850]],
        [[0.0049, 0.0047, 0.0049,  ..., 0.0048, 0.0048, 0.0048],
         [0.0049, 0.0047, 0.0049,  ..., 0.0048, 0.0048, 0.0048],
         [0.0049, 0.0047, 0.0049,  ..., 0.0048, 0.0048, 0.0048],
         [0.9854, 0.9858, 0.9852,  ..., 0.9855, 0.9857, 0.9855]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:53,489 [Process: 0] Synchronize training processes
2024-08-16 16:22:53,489 [Process: 0] Evaluating...
2024-08-16 16:22:53,491 [Process: 0] EPOCH 594:
2024-08-16 16:22:53,493 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.6493e-03, 3.5596e-03, 3.8081e-03,  ..., 3.8451e-03,
          3.3457e-03, 3.4302e-03],
         [3.6493e-03, 3.5596e-03, 3.8081e-03,  ..., 3.8451e-03,
          3.3457e-03, 3.4302e-03],
         [3.6493e-03, 3.5596e-03, 3.8081e-03,  ..., 3.8451e-03,
          3.3457e-03, 3.4302e-03],
         [9.8905e-01, 9.8932e-01, 9.8858e-01,  ..., 9.8846e-01,
          9.8996e-01, 9.8971e-01]],
        [[3.5143e-03, 3.6003e-03, 3.6656e-03,  ..., 3.0273e-05,
          3.6196e-03, 3.4816e-03],
         [3.5143e-03, 3.6003e-03, 3.6656e-03,  ..., 4.3993e-09,
          3.6196e-03, 3.4816e-03],
         [3.5143e-03, 3.6003e-03, 3.6656e-03,  ..., 9.9997e-01,
          3.6196e-03, 3.4816e-03],
         [9.8946e-01, 9.8920e-01, 9.8900e-01,  ..., 4.3993e-09,
          9.8914e-01, 9.8956e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 595:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0051, 0.0051,  ..., 0.0050, 0.0052, 0.0049],
         [0.0050, 0.0051, 0.0051,  ..., 0.0050, 0.0052, 0.0049],
         [0.0050, 0.0051, 0.0051,  ..., 0.0050, 0.0052, 0.0049],
         [0.9849, 0.9846, 0.9847,  ..., 0.9850, 0.9845, 0.9854]],
        [[0.0050, 0.0050, 0.0047,  ..., 0.0048, 0.0050, 0.0050],
         [0.0050, 0.0050, 0.0047,  ..., 0.0048, 0.0050, 0.0050],
         [0.0050, 0.0050, 0.0047,  ..., 0.0048, 0.0050, 0.0050],
         [0.9849, 0.9849, 0.9859,  ..., 0.9856, 0.9849, 0.9851]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:22:55,569 [Process: 0] Synchronize training processes
2024-08-16 16:22:55,569 [Process: 0] Evaluating...
2024-08-16 16:22:55,571 [Process: 0] EPOCH 595:
2024-08-16 16:22:55,573 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.6400e-03, 3.6924e-03, 3.7468e-03,  ..., 3.8116e-03,
          3.6934e-03, 3.8701e-03],
         [3.6400e-03, 3.6924e-03, 3.7468e-03,  ..., 3.8116e-03,
          3.6934e-03, 3.8701e-03],
         [3.6400e-03, 3.6924e-03, 3.7468e-03,  ..., 3.8116e-03,
          3.6934e-03, 3.8701e-03],
         [9.8908e-01, 9.8892e-01, 9.8876e-01,  ..., 9.8857e-01,
          9.8892e-01, 9.8839e-01]],
        [[3.4993e-03, 3.4701e-03, 3.5721e-03,  ..., 2.4943e-04,
          3.7132e-03, 3.6633e-03],
         [3.4993e-03, 3.4701e-03, 3.5721e-03,  ..., 1.0108e-05,
          3.7132e-03, 3.6633e-03],
         [3.4993e-03, 3.4701e-03, 3.5721e-03,  ..., 9.9973e-01,
          3.7132e-03, 3.6633e-03],
         [9.8950e-01, 9.8959e-01, 9.8928e-01,  ..., 1.0108e-05,
          9.8886e-01, 9.8901e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 596:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:22:57,672 [Process: 0] Synchronize training processes
2024-08-16 16:22:57,672 [Process: 0] Evaluating...
2024-08-16 16:22:57,674 [Process: 0] EPOCH 596:
2024-08-16 16:22:57,676 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0050, 0.0051,  ..., 0.0050, 0.0049, 0.0050],
         [0.0050, 0.0050, 0.0051,  ..., 0.0050, 0.0049, 0.0050],
         [0.0050, 0.0050, 0.0051,  ..., 0.0050, 0.0049, 0.0050],
         [0.9850, 0.9851, 0.9848,  ..., 0.9850, 0.9852, 0.9850]],
        [[0.0047, 0.0047, 0.0047,  ..., 0.0051, 0.0049, 0.0050],
         [0.0047, 0.0047, 0.0047,  ..., 0.0051, 0.0049, 0.0050],
         [0.0047, 0.0047, 0.0047,  ..., 0.0051, 0.0049, 0.0050],
         [0.9859, 0.9860, 0.9860,  ..., 0.9847, 0.9853, 0.9851]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7430e-03, 3.7921e-03, 3.7492e-03,  ..., 3.8977e-03,
          3.6337e-03, 3.4898e-03],
         [3.7430e-03, 3.7921e-03, 3.7492e-03,  ..., 3.8977e-03,
          3.6337e-03, 3.4898e-03],
         [3.7430e-03, 3.7921e-03, 3.7492e-03,  ..., 3.8977e-03,
          3.6337e-03, 3.4898e-03],
         [9.8877e-01, 9.8862e-01, 9.8875e-01,  ..., 9.8831e-01,
          9.8910e-01, 9.8953e-01]],
        [[3.5431e-03, 3.7842e-03, 3.7595e-03,  ..., 4.9751e-05,
          3.6645e-03, 3.6228e-03],
         [3.5431e-03, 3.7842e-03, 3.7595e-03,  ..., 4.0347e-07,
          3.6645e-03, 3.6228e-03],
         [3.5431e-03, 3.7842e-03, 3.7595e-03,  ..., 9.9995e-01,
          3.6645e-03, 3.6228e-03],
         [9.8937e-01, 9.8865e-01, 9.8872e-01,  ..., 4.0347e-07,
          9.8901e-01, 9.8913e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 597:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:22:59,864 [Process: 0] Synchronize training processes
2024-08-16 16:22:59,865 [Process: 0] Evaluating...
2024-08-16 16:22:59,867 [Process: 0] EPOCH 597:
2024-08-16 16:22:59,868 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0049, 0.0049,  ..., 0.0050, 0.0048, 0.0049],
         [0.0048, 0.0049, 0.0049,  ..., 0.0050, 0.0048, 0.0049],
         [0.0048, 0.0049, 0.0049,  ..., 0.0050, 0.0048, 0.0049],
         [0.9855, 0.9852, 0.9854,  ..., 0.9850, 0.9855, 0.9852]],
        [[0.0048, 0.0048, 0.0046,  ..., 0.0047, 0.0047, 0.0047],
         [0.0048, 0.0048, 0.0046,  ..., 0.0047, 0.0047, 0.0047],
         [0.0048, 0.0048, 0.0046,  ..., 0.0047, 0.0047, 0.0047],
         [0.9857, 0.9855, 0.9861,  ..., 0.9858, 0.9859, 0.9860]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.8988e-03, 3.8177e-03, 3.5463e-03,  ..., 3.7184e-03,
          3.8630e-03, 3.8168e-03],
         [3.8988e-03, 3.8177e-03, 3.5463e-03,  ..., 3.7184e-03,
          3.8630e-03, 3.8168e-03],
         [3.8988e-03, 3.8177e-03, 3.5463e-03,  ..., 3.7184e-03,
          3.8630e-03, 3.8168e-03],
         [9.8830e-01, 9.8855e-01, 9.8936e-01,  ..., 9.8884e-01,
          9.8841e-01, 9.8855e-01]],
        [[3.7162e-03, 4.1258e-03, 3.8747e-03,  ..., 2.3546e-05,
          3.7143e-03, 3.8770e-03],
         [3.7162e-03, 4.1258e-03, 3.8747e-03,  ..., 3.0983e-07,
          3.7143e-03, 3.8770e-03],
         [3.7162e-03, 4.1258e-03, 3.8747e-03,  ..., 9.9998e-01,
          3.7143e-03, 3.8770e-03],
         [9.8885e-01, 9.8762e-01, 9.8838e-01,  ..., 3.0983e-07,
          9.8886e-01, 9.8837e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 598:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:23:02,041 [Process: 0] Synchronize training processes
2024-08-16 16:23:02,041 [Process: 0] Evaluating...
2024-08-16 16:23:02,043 [Process: 0] EPOCH 598:
2024-08-16 16:23:02,045 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0049, 0.0049, 0.0049,  ..., 0.0050, 0.0051, 0.0050],
         [0.0049, 0.0049, 0.0049,  ..., 0.0050, 0.0051, 0.0050],
         [0.0049, 0.0049, 0.0049,  ..., 0.0050, 0.0051, 0.0050],
         [0.9853, 0.9852, 0.9853,  ..., 0.9851, 0.9846, 0.9849]],
        [[0.0046, 0.0050, 0.0045,  ..., 0.0051, 0.0049, 0.0047],
         [0.0046, 0.0050, 0.0045,  ..., 0.0051, 0.0049, 0.0047],
         [0.0046, 0.0050, 0.0045,  ..., 0.0051, 0.0049, 0.0047],
         [0.9862, 0.9851, 0.9864,  ..., 0.9848, 0.9854, 0.9858]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.0372e-03, 4.0339e-03, 4.0413e-03,  ..., 3.9270e-03,
          3.9577e-03, 3.8829e-03],
         [4.0372e-03, 4.0339e-03, 4.0413e-03,  ..., 3.9270e-03,
          3.9577e-03, 3.8829e-03],
         [4.0372e-03, 4.0339e-03, 4.0413e-03,  ..., 3.9270e-03,
          3.9577e-03, 3.8829e-03],
         [9.8789e-01, 9.8790e-01, 9.8788e-01,  ..., 9.8822e-01,
          9.8813e-01, 9.8835e-01]],
        [[4.0276e-03, 3.9176e-03, 3.8346e-03,  ..., 2.7578e-05,
          3.9490e-03, 4.0648e-03],
         [4.0276e-03, 3.9176e-03, 3.8346e-03,  ..., 4.1572e-07,
          3.9490e-03, 4.0648e-03],
         [4.0276e-03, 3.9176e-03, 3.8346e-03,  ..., 9.9997e-01,
          3.9490e-03, 4.0648e-03],
         [9.8792e-01, 9.8825e-01, 9.8850e-01,  ..., 4.1572e-07,
          9.8815e-01, 9.8781e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 599:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:23:04,179 [Process: 0] Synchronize training processes
2024-08-16 16:23:04,179 [Process: 0] Evaluating...
2024-08-16 16:23:04,181 [Process: 0] EPOCH 599:
2024-08-16 16:23:04,183 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0050, 0.0049,  ..., 0.0049, 0.0049, 0.0048],
         [0.0050, 0.0050, 0.0049,  ..., 0.0049, 0.0049, 0.0048],
         [0.0050, 0.0050, 0.0049,  ..., 0.0049, 0.0049, 0.0048],
         [0.9850, 0.9849, 0.9854,  ..., 0.9853, 0.9853, 0.9855]],
        [[0.0048, 0.0045, 0.0047,  ..., 0.0047, 0.0047, 0.0046],
         [0.0048, 0.0045, 0.0047,  ..., 0.0047, 0.0047, 0.0046],
         [0.0048, 0.0045, 0.0047,  ..., 0.0047, 0.0047, 0.0046],
         [0.9857, 0.9865, 0.9858,  ..., 0.9859, 0.9860, 0.9863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5925e-03, 3.6750e-03, 3.5690e-03,  ..., 3.7364e-03,
          3.6099e-03, 3.6890e-03],
         [3.5925e-03, 3.6750e-03, 3.5690e-03,  ..., 3.7364e-03,
          3.6099e-03, 3.6890e-03],
         [3.5925e-03, 3.6750e-03, 3.5690e-03,  ..., 3.7364e-03,
          3.6099e-03, 3.6890e-03],
         [9.8922e-01, 9.8897e-01, 9.8929e-01,  ..., 9.8879e-01,
          9.8917e-01, 9.8893e-01]],
        [[3.6524e-03, 3.6751e-03, 3.7864e-03,  ..., 1.3796e-03,
          3.6325e-03, 3.6598e-03],
         [3.6524e-03, 3.6751e-03, 3.7864e-03,  ..., 2.5456e-04,
          3.6325e-03, 3.6598e-03],
         [3.6524e-03, 3.6751e-03, 3.7864e-03,  ..., 9.9811e-01,
          3.6325e-03, 3.6598e-03],
         [9.8904e-01, 9.8897e-01, 9.8864e-01,  ..., 2.5456e-04,
          9.8910e-01, 9.8902e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 600:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:23:06,309 [Process: 0] Synchronize training processes
2024-08-16 16:23:06,309 [Process: 0] Evaluating...
2024-08-16 16:23:06,311 [Process: 0] EPOCH 600:
2024-08-16 16:23:06,313 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0049, 0.0047, 0.0049,  ..., 0.0050, 0.0048, 0.0048],
         [0.0049, 0.0047, 0.0049,  ..., 0.0050, 0.0048, 0.0048],
         [0.0049, 0.0047, 0.0049,  ..., 0.0050, 0.0048, 0.0048],
         [0.9853, 0.9859, 0.9853,  ..., 0.9850, 0.9855, 0.9855]],
        [[0.0047, 0.0046, 0.0044,  ..., 0.0049, 0.0045, 0.0046],
         [0.0047, 0.0046, 0.0044,  ..., 0.0049, 0.0045, 0.0046],
         [0.0047, 0.0046, 0.0044,  ..., 0.0049, 0.0045, 0.0046],
         [0.9859, 0.9861, 0.9867,  ..., 0.9853, 0.9864, 0.9863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5786e-03, 3.8318e-03, 3.5818e-03,  ..., 3.5106e-03,
          3.4116e-03, 3.6488e-03],
         [3.5786e-03, 3.8318e-03, 3.5818e-03,  ..., 3.5106e-03,
          3.4116e-03, 3.6488e-03],
         [3.5786e-03, 3.8318e-03, 3.5818e-03,  ..., 3.5106e-03,
          3.4116e-03, 3.6488e-03],
         [9.8926e-01, 9.8850e-01, 9.8925e-01,  ..., 9.8947e-01,
          9.8977e-01, 9.8905e-01]],
        [[3.5967e-03, 3.5733e-03, 3.4909e-03,  ..., 3.6664e-05,
          3.3675e-03, 3.6767e-03],
         [3.5967e-03, 3.5733e-03, 3.4909e-03,  ..., 1.9394e-07,
          3.3675e-03, 3.6767e-03],
         [3.5967e-03, 3.5733e-03, 3.4909e-03,  ..., 9.9996e-01,
          3.3675e-03, 3.6767e-03],
         [9.8921e-01, 9.8928e-01, 9.8953e-01,  ..., 1.9394e-07,
          9.8990e-01, 9.8897e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 601:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:23:08,437 [Process: 0] Synchronize training processes
2024-08-16 16:23:08,438 [Process: 0] Evaluating...
2024-08-16 16:23:08,439 [Process: 0] EPOCH 601:
2024-08-16 16:23:08,441 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0049, 0.0047,  ..., 0.0049, 0.0051, 0.0052],
         [0.0050, 0.0049, 0.0047,  ..., 0.0049, 0.0051, 0.0052],
         [0.0050, 0.0049, 0.0047,  ..., 0.0049, 0.0051, 0.0052],
         [0.9850, 0.9854, 0.9858,  ..., 0.9854, 0.9847, 0.9845]],
        [[0.0049, 0.0051, 0.0049,  ..., 0.0048, 0.0046, 0.0049],
         [0.0049, 0.0051, 0.0049,  ..., 0.0048, 0.0046, 0.0049],
         [0.0049, 0.0051, 0.0049,  ..., 0.0048, 0.0046, 0.0049],
         [0.9852, 0.9848, 0.9853,  ..., 0.9857, 0.9863, 0.9853]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7098e-03, 3.4691e-03, 3.7413e-03,  ..., 3.7402e-03,
          3.6136e-03, 3.6772e-03],
         [3.7098e-03, 3.4691e-03, 3.7413e-03,  ..., 3.7402e-03,
          3.6136e-03, 3.6772e-03],
         [3.7098e-03, 3.4691e-03, 3.7413e-03,  ..., 3.7402e-03,
          3.6136e-03, 3.6772e-03],
         [9.8887e-01, 9.8959e-01, 9.8878e-01,  ..., 9.8878e-01,
          9.8916e-01, 9.8897e-01]],
        [[3.9918e-03, 3.8790e-03, 3.5794e-03,  ..., 2.9342e-05,
          3.6336e-03, 3.7075e-03],
         [3.9918e-03, 3.8790e-03, 3.5794e-03,  ..., 1.7220e-07,
          3.6336e-03, 3.7075e-03],
         [3.9918e-03, 3.8790e-03, 3.5794e-03,  ..., 9.9997e-01,
          3.6336e-03, 3.7075e-03],
         [9.8802e-01, 9.8836e-01, 9.8926e-01,  ..., 1.7220e-07,
          9.8910e-01, 9.8888e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 602:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:23:10,560 [Process: 0] Synchronize training processes
2024-08-16 16:23:10,561 [Process: 0] Evaluating...
2024-08-16 16:23:10,569 [Process: 0] EPOCH 602:
2024-08-16 16:23:10,572 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0049, 0.0049, 0.0050,  ..., 0.0051, 0.0051, 0.0050],
         [0.0049, 0.0049, 0.0050,  ..., 0.0051, 0.0051, 0.0050],
         [0.0049, 0.0049, 0.0050,  ..., 0.0051, 0.0051, 0.0050],
         [0.9852, 0.9852, 0.9850,  ..., 0.9848, 0.9847, 0.9851]],
        [[0.0051, 0.0046, 0.0050,  ..., 0.0048, 0.0047, 0.0050],
         [0.0051, 0.0046, 0.0050,  ..., 0.0048, 0.0047, 0.0050],
         [0.0051, 0.0046, 0.0050,  ..., 0.0048, 0.0047, 0.0050],
         [0.9848, 0.9861, 0.9851,  ..., 0.9856, 0.9860, 0.9851]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4930e-03, 3.5911e-03, 3.4549e-03,  ..., 3.8002e-03,
          3.6557e-03, 3.4839e-03],
         [3.4908e-03, 3.5911e-03, 3.4549e-03,  ..., 3.7811e-03,
          3.6557e-03, 3.4839e-03],
         [3.4908e-03, 3.5911e-03, 3.4549e-03,  ..., 3.7811e-03,
          3.6557e-03, 3.4839e-03],
         [9.8953e-01, 9.8923e-01, 9.8964e-01,  ..., 9.8864e-01,
          9.8903e-01, 9.8955e-01]],
        [[3.4504e-03, 3.4296e-03, 3.6512e-03,  ..., 2.5747e-05,
          3.7583e-03, 3.6845e-03],
         [3.4504e-03, 3.4296e-03, 3.6512e-03,  ..., 1.8358e-07,
          3.7583e-03, 3.6845e-03],
         [3.4504e-03, 3.4296e-03, 3.6512e-03,  ..., 9.9997e-01,
          3.7583e-03, 3.6845e-03],
         [9.8965e-01, 9.8971e-01, 9.8905e-01,  ..., 1.8358e-07,
          9.8873e-01, 9.8895e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:12,719 [Process: 0] Synchronize training processes
2024-08-16 16:23:12,719 [Process: 0] Evaluating...
2024-08-16 16:23:12,721 [Process: 0] EPOCH 603:
2024-08-16 16:23:12,723 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 603:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0051, 0.0049,  ..., 0.0050, 0.0047, 0.0048],
         [0.0050, 0.0051, 0.0049,  ..., 0.0050, 0.0047, 0.0048],
         [0.0050, 0.0051, 0.0049,  ..., 0.0050, 0.0047, 0.0048],
         [0.9851, 0.9846, 0.9854,  ..., 0.9850, 0.9859, 0.9856]],
        [[0.0045, 0.0049, 0.0049,  ..., 0.0047, 0.0048, 0.0046],
         [0.0045, 0.0049, 0.0049,  ..., 0.0047, 0.0048, 0.0046],
         [0.0045, 0.0049, 0.0049,  ..., 0.0047, 0.0048, 0.0046],
         [0.9864, 0.9852, 0.9853,  ..., 0.9860, 0.9856, 0.9861]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 16:23:14,849 [Process: 0] Synchronize training processes
2024-08-16 16:23:14,850 [Process: 0] Evaluating...
2024-08-16 16:23:14,852 [Process: 0] EPOCH 604:
2024-08-16 16:23:14,854 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7043e-03, 3.6986e-03, 3.5043e-03,  ..., 3.5339e-03,
          3.6831e-03, 3.5379e-03],
         [3.7043e-03, 3.6986e-03, 3.5043e-03,  ..., 3.5339e-03,
          3.6831e-03, 3.5379e-03],
         [3.7043e-03, 3.6986e-03, 3.5043e-03,  ..., 3.5339e-03,
          3.6831e-03, 3.5379e-03],
         [9.8889e-01, 9.8890e-01, 9.8949e-01,  ..., 9.8940e-01,
          9.8895e-01, 9.8939e-01]],
        [[3.7606e-03, 3.4561e-03, 3.7071e-03,  ..., 1.6163e-05,
          3.9068e-03, 3.6111e-03],
         [3.7606e-03, 3.4561e-03, 3.7071e-03,  ..., 3.2702e-07,
          3.9068e-03, 3.6111e-03],
         [3.7606e-03, 3.4561e-03, 3.7071e-03,  ..., 9.9998e-01,
          3.9068e-03, 3.6111e-03],
         [9.8872e-01, 9.8963e-01, 9.8888e-01,  ..., 3.2702e-07,
          9.8828e-01, 9.8917e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 604:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0047, 0.0048,  ..., 0.0046, 0.0048, 0.0049],
         [0.0047, 0.0047, 0.0048,  ..., 0.0046, 0.0048, 0.0049],
         [0.0047, 0.0047, 0.0048,  ..., 0.0046, 0.0048, 0.0049],
         [0.9858, 0.9859, 0.9855,  ..., 0.9862, 0.9856, 0.9852]],
        [[0.0046, 0.0055, 0.0046,  ..., 0.0047, 0.0048, 0.0045],
         [0.0046, 0.0055, 0.0046,  ..., 0.0047, 0.0048, 0.0045],
         [0.0046, 0.0055, 0.0046,  ..., 0.0047, 0.0048, 0.0045],
         [0.9861, 0.9835, 0.9861,  ..., 0.9860, 0.9857, 0.9864]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:16,887 [Process: 0] Synchronize training processes
2024-08-16 16:23:16,888 [Process: 0] Evaluating...
2024-08-16 16:23:16,890 [Process: 0] EPOCH 605:
2024-08-16 16:23:16,892 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5338e-03, 3.5503e-03, 3.8135e-03,  ..., 3.6439e-03,
          3.7867e-03, 3.6898e-03],
         [3.5338e-03, 3.5503e-03, 3.8135e-03,  ..., 3.6439e-03,
          3.7867e-03, 3.6898e-03],
         [3.5338e-03, 3.5503e-03, 3.8135e-03,  ..., 3.6439e-03,
          3.7867e-03, 3.6898e-03],
         [9.8940e-01, 9.8935e-01, 9.8856e-01,  ..., 9.8907e-01,
          9.8864e-01, 9.8893e-01]],
        [[3.9333e-03, 3.6723e-03, 3.7487e-03,  ..., 4.5401e-04,
          3.7301e-03, 3.6856e-03],
         [3.9333e-03, 3.6723e-03, 3.7487e-03,  ..., 5.3595e-06,
          3.7301e-03, 3.6856e-03],
         [3.9333e-03, 3.6723e-03, 3.7487e-03,  ..., 9.9954e-01,
          3.7301e-03, 3.6856e-03],
         [9.8820e-01, 9.8898e-01, 9.8875e-01,  ..., 5.3595e-06,
          9.8881e-01, 9.8894e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 605:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0047, 0.0050,  ..., 0.0046, 0.0047, 0.0049],
         [0.0047, 0.0047, 0.0050,  ..., 0.0046, 0.0047, 0.0049],
         [0.0047, 0.0047, 0.0050,  ..., 0.0046, 0.0047, 0.0049],
         [0.9858, 0.9859, 0.9851,  ..., 0.9862, 0.9860, 0.9854]],
        [[0.0046, 0.0067, 0.0046,  ..., 0.0052, 0.0046, 0.0046],
         [0.0046, 0.0067, 0.0046,  ..., 0.0052, 0.0046, 0.0046],
         [0.0046, 0.0067, 0.0046,  ..., 0.0052, 0.0046, 0.0046],
         [0.9863, 0.9800, 0.9863,  ..., 0.9843, 0.9862, 0.9861]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:18,869 [Process: 0] Synchronize training processes
2024-08-16 16:23:18,869 [Process: 0] Evaluating...
2024-08-16 16:23:18,871 [Process: 0] EPOCH 606:
2024-08-16 16:23:18,873 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.6321e-03, 3.6575e-03, 3.9011e-03,  ..., 3.7270e-03,
          3.7240e-03, 3.7573e-03],
         [3.6321e-03, 3.6575e-03, 3.9011e-03,  ..., 3.7270e-03,
          3.6988e-03, 3.7573e-03],
         [3.6321e-03, 3.6575e-03, 3.9011e-03,  ..., 3.7270e-03,
          3.6988e-03, 3.7573e-03],
         [9.8910e-01, 9.8903e-01, 9.8830e-01,  ..., 9.8882e-01,
          9.8888e-01, 9.8873e-01]],
        [[3.5885e-03, 3.6937e-03, 3.5973e-03,  ..., 1.0182e-04,
          3.9075e-03, 3.7611e-03],
         [3.5885e-03, 3.6937e-03, 3.5973e-03,  ..., 5.5311e-07,
          3.9075e-03, 3.7611e-03],
         [3.5885e-03, 3.6937e-03, 3.5973e-03,  ..., 9.9990e-01,
          3.9075e-03, 3.7611e-03],
         [9.8923e-01, 9.8892e-01, 9.8921e-01,  ..., 5.5311e-07,
          9.8828e-01, 9.8872e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 606:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0049, 0.0050, 0.0048,  ..., 0.0049, 0.0051, 0.0050],
         [0.0049, 0.0050, 0.0048,  ..., 0.0049, 0.0051, 0.0050],
         [0.0049, 0.0050, 0.0048,  ..., 0.0049, 0.0051, 0.0050],
         [0.9854, 0.9849, 0.9855,  ..., 0.9853, 0.9848, 0.9849]],
        [[0.0044, 0.0051, 0.0046,  ..., 0.0048, 0.0045, 0.0048],
         [0.0044, 0.0051, 0.0046,  ..., 0.0048, 0.0045, 0.0048],
         [0.0044, 0.0051, 0.0046,  ..., 0.0048, 0.0045, 0.0048],
         [0.9868, 0.9848, 0.9862,  ..., 0.9857, 0.9864, 0.9857]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:20,965 [Process: 0] Synchronize training processes
2024-08-16 16:23:20,965 [Process: 0] Evaluating...
2024-08-16 16:23:20,967 [Process: 0] EPOCH 607:
2024-08-16 16:23:20,969 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.6375e-03, 3.7656e-03, 3.6127e-03,  ..., 3.4781e-03,
          3.7482e-03, 3.4270e-03],
         [3.6375e-03, 3.7656e-03, 3.6127e-03,  ..., 3.4781e-03,
          3.7482e-03, 3.4270e-03],
         [3.6375e-03, 3.7656e-03, 3.6127e-03,  ..., 3.4781e-03,
          3.7482e-03, 3.4270e-03],
         [9.8909e-01, 9.8870e-01, 9.8916e-01,  ..., 9.8957e-01,
          9.8876e-01, 9.8972e-01]],
        [[3.6952e-03, 3.7431e-03, 3.5825e-03,  ..., 1.7895e-04,
          3.8623e-03, 3.6998e-03],
         [3.6952e-03, 3.7431e-03, 3.5825e-03,  ..., 1.8755e-06,
          3.8623e-03, 3.6998e-03],
         [3.6952e-03, 3.7431e-03, 3.5825e-03,  ..., 9.9982e-01,
          3.8623e-03, 3.6998e-03],
         [9.8891e-01, 9.8877e-01, 9.8925e-01,  ..., 1.8755e-06,
          9.8841e-01, 9.8890e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 607:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0048, 0.0048,  ..., 0.0049, 0.0050, 0.0049],
         [0.0047, 0.0048, 0.0048,  ..., 0.0049, 0.0050, 0.0049],
         [0.0047, 0.0048, 0.0048,  ..., 0.0049, 0.0050, 0.0049],
         [0.9859, 0.9855, 0.9857,  ..., 0.9853, 0.9851, 0.9854]],
        [[0.0046, 0.0046, 0.0044,  ..., 0.0046, 0.0046, 0.0047],
         [0.0046, 0.0046, 0.0044,  ..., 0.0046, 0.0046, 0.0047],
         [0.0046, 0.0046, 0.0044,  ..., 0.0046, 0.0046, 0.0047],
         [0.9862, 0.9861, 0.9869,  ..., 0.9863, 0.9861, 0.9859]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:23,035 [Process: 0] Synchronize training processes
2024-08-16 16:23:23,035 [Process: 0] Evaluating...
2024-08-16 16:23:23,037 [Process: 0] EPOCH 608:
2024-08-16 16:23:23,039 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4115e-03, 3.6258e-03, 3.5215e-03,  ..., 3.7972e-03,
          3.9255e-03, 3.9540e-03],
         [3.4115e-03, 3.6258e-03, 3.5029e-03,  ..., 3.7972e-03,
          3.9255e-03, 3.9540e-03],
         [3.4115e-03, 3.6258e-03, 3.5029e-03,  ..., 3.7972e-03,
          3.9255e-03, 3.9540e-03],
         [9.8977e-01, 9.8912e-01, 9.8947e-01,  ..., 9.8861e-01,
          9.8822e-01, 9.8814e-01]],
        [[3.5161e-03, 3.5109e-03, 3.4571e-03,  ..., 5.5695e-04,
          3.4976e-03, 3.4411e-03],
         [3.5161e-03, 3.5109e-03, 3.4571e-03,  ..., 9.0972e-06,
          3.4976e-03, 3.4411e-03],
         [3.5161e-03, 3.5109e-03, 3.4571e-03,  ..., 9.9942e-01,
          3.4976e-03, 3.4411e-03],
         [9.8945e-01, 9.8947e-01, 9.8963e-01,  ..., 9.0972e-06,
          9.8951e-01, 9.8968e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 608:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0049, 0.0049, 0.0051,  ..., 0.0048, 0.0049, 0.0050],
         [0.0049, 0.0049, 0.0051,  ..., 0.0048, 0.0049, 0.0050],
         [0.0049, 0.0049, 0.0051,  ..., 0.0048, 0.0049, 0.0050],
         [0.9854, 0.9852, 0.9846,  ..., 0.9855, 0.9854, 0.9849]],
        [[0.0047, 0.0049, 0.0046,  ..., 0.0049, 0.0046, 0.0048],
         [0.0047, 0.0049, 0.0046,  ..., 0.0049, 0.0046, 0.0048],
         [0.0047, 0.0049, 0.0046,  ..., 0.0049, 0.0046, 0.0048],
         [0.9859, 0.9854, 0.9862,  ..., 0.9854, 0.9863, 0.9857]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:25,123 [Process: 0] Synchronize training processes
2024-08-16 16:23:25,124 [Process: 0] Evaluating...
2024-08-16 16:23:25,126 [Process: 0] EPOCH 609:
2024-08-16 16:23:25,128 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5882e-03, 3.9453e-03, 3.7049e-03,  ..., 3.8784e-03,
          3.6538e-03, 3.7887e-03],
         [3.5882e-03, 3.9279e-03, 3.7049e-03,  ..., 3.8784e-03,
          3.6538e-03, 3.7887e-03],
         [3.5882e-03, 3.9279e-03, 3.7049e-03,  ..., 3.8784e-03,
          3.6538e-03, 3.7887e-03],
         [9.8924e-01, 9.8820e-01, 9.8889e-01,  ..., 9.8836e-01,
          9.8904e-01, 9.8863e-01]],
        [[3.9412e-03, 3.5107e-03, 3.4619e-03,  ..., 3.2174e-04,
          3.7238e-03, 3.4946e-03],
         [3.9412e-03, 3.5107e-03, 3.4619e-03,  ..., 9.6757e-06,
          3.7238e-03, 3.4946e-03],
         [3.9412e-03, 3.5107e-03, 3.4619e-03,  ..., 9.9966e-01,
          3.7238e-03, 3.4946e-03],
         [9.8818e-01, 9.8947e-01, 9.8961e-01,  ..., 9.6757e-06,
          9.8883e-01, 9.8952e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 609:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0049, 0.0049,  ..., 0.0049, 0.0049, 0.0050],
         [0.0050, 0.0049, 0.0049,  ..., 0.0049, 0.0049, 0.0050],
         [0.0050, 0.0049, 0.0049,  ..., 0.0049, 0.0049, 0.0050],
         [0.9850, 0.9853, 0.9853,  ..., 0.9852, 0.9853, 0.9849]],
        [[0.0046, 0.0045, 0.0047,  ..., 0.0045, 0.0045, 0.0044],
         [0.0046, 0.0045, 0.0047,  ..., 0.0045, 0.0045, 0.0044],
         [0.0046, 0.0045, 0.0047,  ..., 0.0045, 0.0045, 0.0044],
         [0.9863, 0.9866, 0.9859,  ..., 0.9864, 0.9865, 0.9867]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:27,214 [Process: 0] Synchronize training processes
2024-08-16 16:23:27,214 [Process: 0] Evaluating...
2024-08-16 16:23:27,216 [Process: 0] EPOCH 610:
2024-08-16 16:23:27,218 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5881e-03, 3.7708e-03, 3.6086e-03,  ..., 3.8508e-03,
          3.5857e-03, 3.4333e-03],
         [3.5548e-03, 3.7708e-03, 3.5793e-03,  ..., 3.8508e-03,
          3.5668e-03, 3.3972e-03],
         [3.5548e-03, 3.7708e-03, 3.5793e-03,  ..., 3.8508e-03,
          3.5668e-03, 3.3972e-03],
         [9.8930e-01, 9.8869e-01, 9.8923e-01,  ..., 9.8845e-01,
          9.8928e-01, 9.8977e-01]],
        [[3.9016e-03, 3.5406e-03, 3.6954e-03,  ..., 1.3975e-04,
          3.6272e-03, 3.3458e-03],
         [3.9016e-03, 3.5331e-03, 3.6954e-03,  ..., 1.1431e-06,
          3.6272e-03, 3.3458e-03],
         [3.9016e-03, 3.5331e-03, 3.6954e-03,  ..., 9.9986e-01,
          3.6272e-03, 3.3458e-03],
         [9.8830e-01, 9.8939e-01, 9.8891e-01,  ..., 1.1431e-06,
          9.8912e-01, 9.8996e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 610:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0049, 0.0047,  ..., 0.0049, 0.0049, 0.0048],
         [0.0053, 0.0049, 0.0047,  ..., 0.0049, 0.0049, 0.0048],
         [0.0053, 0.0049, 0.0047,  ..., 0.0049, 0.0049, 0.0048],
         [0.9842, 0.9853, 0.9858,  ..., 0.9853, 0.9853, 0.9855]],
        [[0.0044, 0.0044, 0.0047,  ..., 0.0047, 0.0047, 0.0044],
         [0.0044, 0.0044, 0.0047,  ..., 0.0047, 0.0047, 0.0044],
         [0.0044, 0.0044, 0.0047,  ..., 0.0047, 0.0047, 0.0044],
         [0.9867, 0.9868, 0.9858,  ..., 0.9860, 0.9860, 0.9869]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:29,302 [Process: 0] Synchronize training processes
2024-08-16 16:23:29,303 [Process: 0] Evaluating...
2024-08-16 16:23:29,305 [Process: 0] EPOCH 611:
2024-08-16 16:23:29,307 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5166e-03, 3.8907e-03, 3.7210e-03,  ..., 3.9737e-03,
          3.7895e-03, 3.7139e-03],
         [3.4581e-03, 3.8907e-03, 3.7210e-03,  ..., 3.8800e-03,
          3.7895e-03, 3.7139e-03],
         [3.4581e-03, 3.8907e-03, 3.7210e-03,  ..., 3.8800e-03,
          3.7895e-03, 3.7139e-03],
         [9.8957e-01, 9.8833e-01, 9.8884e-01,  ..., 9.8827e-01,
          9.8863e-01, 9.8886e-01]],
        [[3.5067e-03, 3.5474e-03, 3.2540e-03,  ..., 3.9567e-05,
          3.6229e-03, 3.3758e-03],
         [3.5067e-03, 3.5474e-03, 3.2119e-03,  ..., 4.2166e-07,
          3.6229e-03, 3.3319e-03],
         [3.5067e-03, 3.5474e-03, 3.2119e-03,  ..., 9.9996e-01,
          3.6229e-03, 3.3319e-03],
         [9.8948e-01, 9.8936e-01, 9.9032e-01,  ..., 4.2166e-07,
          9.8913e-01, 9.8996e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 611:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0048, 0.0049,  ..., 0.0051, 0.0049, 0.0047],
         [0.0048, 0.0048, 0.0049,  ..., 0.0051, 0.0049, 0.0047],
         [0.0048, 0.0048, 0.0049,  ..., 0.0051, 0.0049, 0.0047],
         [0.9855, 0.9856, 0.9854,  ..., 0.9848, 0.9853, 0.9860]],
        [[0.0045, 0.0048, 0.0047,  ..., 0.0045, 0.0047, 0.0046],
         [0.0045, 0.0048, 0.0047,  ..., 0.0045, 0.0047, 0.0046],
         [0.0045, 0.0048, 0.0047,  ..., 0.0045, 0.0047, 0.0046],
         [0.9866, 0.9856, 0.9860,  ..., 0.9864, 0.9858, 0.9863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:31,378 [Process: 0] Synchronize training processes
2024-08-16 16:23:31,379 [Process: 0] Evaluating...
2024-08-16 16:23:31,387 [Process: 0] EPOCH 612:
2024-08-16 16:23:31,389 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5677e-03, 3.8856e-03, 3.6926e-03,  ..., 3.6547e-03,
          3.6977e-03, 3.6718e-03],
         [3.5677e-03, 3.8856e-03, 3.6926e-03,  ..., 3.6015e-03,
          3.6325e-03, 3.6131e-03],
         [3.5677e-03, 3.8856e-03, 3.6926e-03,  ..., 3.6015e-03,
          3.6325e-03, 3.6131e-03],
         [9.8930e-01, 9.8834e-01, 9.8892e-01,  ..., 9.8914e-01,
          9.8904e-01, 9.8910e-01]],
        [[3.7300e-03, 3.6782e-03, 3.5981e-03,  ..., 2.7492e-04,
          3.8365e-03, 3.6263e-03],
         [3.7085e-03, 3.6782e-03, 3.5811e-03,  ..., 6.9392e-07,
          3.8081e-03, 3.6045e-03],
         [3.7085e-03, 3.6782e-03, 3.5811e-03,  ..., 9.9972e-01,
          3.8081e-03, 3.6045e-03],
         [9.8885e-01, 9.8897e-01, 9.8924e-01,  ..., 6.9392e-07,
          9.8855e-01, 9.8916e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 612:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0048, 0.0048,  ..., 0.0049, 0.0048, 0.0049],
         [0.0048, 0.0048, 0.0048,  ..., 0.0049, 0.0048, 0.0049],
         [0.0048, 0.0048, 0.0048,  ..., 0.0049, 0.0048, 0.0049],
         [0.9856, 0.9857, 0.9857,  ..., 0.9852, 0.9857, 0.9852]],
        [[0.0044, 0.0046, 0.0049,  ..., 0.0047, 0.0044, 0.0046],
         [0.0044, 0.0046, 0.0049,  ..., 0.0047, 0.0044, 0.0046],
         [0.0044, 0.0046, 0.0049,  ..., 0.0047, 0.0044, 0.0046],
         [0.9868, 0.9862, 0.9854,  ..., 0.9860, 0.9868, 0.9861]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:33,465 [Process: 0] Synchronize training processes
2024-08-16 16:23:33,465 [Process: 0] Evaluating...
2024-08-16 16:23:33,467 [Process: 0] EPOCH 613:
2024-08-16 16:23:33,469 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.8027e-03, 3.7501e-03, 3.5145e-03,  ..., 3.6816e-03,
          3.5498e-03, 3.4508e-03],
         [3.8027e-03, 3.7501e-03, 3.4985e-03,  ..., 3.6816e-03,
          3.5498e-03, 3.4508e-03],
         [3.8027e-03, 3.7501e-03, 3.4985e-03,  ..., 3.6816e-03,
          3.5498e-03, 3.4508e-03],
         [9.8859e-01, 9.8875e-01, 9.8949e-01,  ..., 9.8896e-01,
          9.8935e-01, 9.8965e-01]],
        [[3.4713e-03, 3.6270e-03, 3.4279e-03,  ..., 6.3083e-06,
          3.7220e-03, 3.9479e-03],
         [3.4713e-03, 3.6270e-03, 3.4279e-03,  ..., 6.6524e-08,
          3.7220e-03, 3.9479e-03],
         [3.4713e-03, 3.6270e-03, 3.4279e-03,  ..., 9.9999e-01,
          3.7220e-03, 3.9479e-03],
         [9.8959e-01, 9.8912e-01, 9.8972e-01,  ..., 6.6524e-08,
          9.8883e-01, 9.8816e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 613:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0049, 0.0050, 0.0050,  ..., 0.0049, 0.0051, 0.0050],
         [0.0049, 0.0050, 0.0050,  ..., 0.0049, 0.0051, 0.0050],
         [0.0049, 0.0050, 0.0050,  ..., 0.0049, 0.0051, 0.0050],
         [0.9853, 0.9850, 0.9851,  ..., 0.9854, 0.9847, 0.9849]],
        [[0.0046, 0.0049, 0.0050,  ..., 0.0046, 0.0048, 0.0046],
         [0.0046, 0.0049, 0.0050,  ..., 0.0046, 0.0048, 0.0046],
         [0.0046, 0.0049, 0.0050,  ..., 0.0046, 0.0048, 0.0046],
         [0.9861, 0.9854, 0.9849,  ..., 0.9863, 0.9857, 0.9863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5709e-03, 3.7827e-03, 3.6614e-03,  ..., 3.6886e-03,
          3.6218e-03, 3.7069e-03],
         [3.5709e-03, 3.7675e-03, 3.6614e-03,  ..., 3.6886e-03,
          3.6151e-03, 3.7069e-03],
         [3.5709e-03, 3.7675e-03, 3.6614e-03,  ..., 3.6886e-03,
          3.6151e-03, 3.7069e-03],
         [9.8929e-01, 9.8868e-01, 9.8902e-01,  ..., 9.8893e-01,
          9.8915e-01, 9.8888e-01]],
        [[4.0275e-03, 3.5786e-03, 3.9032e-03,  ..., 9.3624e-06,
          3.5729e-03, 3.4085e-03],
         [4.0275e-03, 3.5786e-03, 3.9032e-03,  ..., 4.5041e-08,
          3.5729e-03, 3.4085e-03],
         [4.0275e-03, 3.5786e-03, 3.9032e-03,  ..., 9.9999e-01,
          3.5729e-03, 3.4085e-03],
         [9.8792e-01, 9.8926e-01, 9.8829e-01,  ..., 4.5041e-08,
          9.8928e-01, 9.8977e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 614:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0049, 0.0049,  ..., 0.0049, 0.0051, 0.0048],
         [0.0048, 0.0049, 0.0049,  ..., 0.0049, 0.0051, 0.0048],
         [0.0048, 0.0049, 0.0049,  ..., 0.0049, 0.0051, 0.0048],
         [0.9857, 0.9852, 0.9854,  ..., 0.9854, 0.9848, 0.9855]],
        [[0.0046, 0.0046, 0.0046,  ..., 0.0047, 0.0044, 0.0044],
         [0.0046, 0.0046, 0.0046,  ..., 0.0047, 0.0044, 0.0044],
         [0.0046, 0.0046, 0.0046,  ..., 0.0047, 0.0044, 0.0044],
         [0.9862, 0.9862, 0.9861,  ..., 0.9860, 0.9867, 0.9867]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:35,550 [Process: 0] Synchronize training processes
2024-08-16 16:23:35,550 [Process: 0] Evaluating...
2024-08-16 16:23:35,552 [Process: 0] EPOCH 614:
2024-08-16 16:23:35,554 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7374e-03, 3.8679e-03, 3.8560e-03,  ..., 3.9337e-03,
          3.6987e-03, 3.7157e-03],
         [3.7374e-03, 3.8679e-03, 3.8560e-03,  ..., 3.9337e-03,
          3.6987e-03, 3.7157e-03],
         [3.7374e-03, 3.8679e-03, 3.8560e-03,  ..., 3.9337e-03,
          3.6987e-03, 3.7157e-03],
         [9.8879e-01, 9.8840e-01, 9.8843e-01,  ..., 9.8820e-01,
          9.8890e-01, 9.8885e-01]],
        [[3.6616e-03, 3.5204e-03, 3.5848e-03,  ..., 1.6726e-06,
          3.8525e-03, 3.2976e-03],
         [3.6616e-03, 3.5204e-03, 3.5848e-03,  ..., 1.0665e-09,
          3.8525e-03, 3.2976e-03],
         [3.6616e-03, 3.5204e-03, 3.5848e-03,  ..., 1.0000e+00,
          3.8525e-03, 3.2976e-03],
         [9.8902e-01, 9.8944e-01, 9.8925e-01,  ..., 1.0665e-09,
          9.8844e-01, 9.9011e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 615:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0049, 0.0046,  ..., 0.0045, 0.0049, 0.0050],
         [0.0048, 0.0049, 0.0046,  ..., 0.0045, 0.0049, 0.0050],
         [0.0048, 0.0049, 0.0046,  ..., 0.0045, 0.0049, 0.0050],
         [0.9857, 0.9853, 0.9861,  ..., 0.9865, 0.9853, 0.9849]],
        [[0.0045, 0.0045, 0.0044,  ..., 0.0046, 0.0045, 0.0048],
         [0.0045, 0.0045, 0.0044,  ..., 0.0046, 0.0045, 0.0048],
         [0.0045, 0.0045, 0.0044,  ..., 0.0046, 0.0045, 0.0048],
         [0.9864, 0.9866, 0.9868,  ..., 0.9862, 0.9864, 0.9857]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:37,642 [Process: 0] Synchronize training processes
2024-08-16 16:23:37,642 [Process: 0] Evaluating...
2024-08-16 16:23:37,644 [Process: 0] EPOCH 615:
2024-08-16 16:23:37,646 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7290e-03, 3.9860e-03, 3.6133e-03,  ..., 3.9347e-03,
          3.4838e-03, 3.4303e-03],
         [3.7290e-03, 3.9403e-03, 3.5405e-03,  ..., 3.8629e-03,
          3.4465e-03, 3.4303e-03],
         [3.7290e-03, 3.9403e-03, 3.5405e-03,  ..., 3.8629e-03,
          3.4465e-03, 3.4303e-03],
         [9.8881e-01, 9.8813e-01, 9.8931e-01,  ..., 9.8834e-01,
          9.8962e-01, 9.8971e-01]],
        [[3.4478e-03, 3.5027e-03, 3.8847e-03,  ..., 8.2675e-06,
          3.7207e-03, 3.3511e-03],
         [3.4337e-03, 3.4814e-03, 3.8847e-03,  ..., 2.0473e-07,
          3.7207e-03, 3.3348e-03],
         [3.4337e-03, 3.4814e-03, 3.8847e-03,  ..., 9.9999e-01,
          3.7207e-03, 3.3348e-03],
         [9.8968e-01, 9.8953e-01, 9.8835e-01,  ..., 2.0473e-07,
          9.8884e-01, 9.8998e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 616:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0049, 0.0050, 0.0047,  ..., 0.0050, 0.0049, 0.0048],
         [0.0049, 0.0050, 0.0047,  ..., 0.0050, 0.0049, 0.0048],
         [0.0049, 0.0050, 0.0047,  ..., 0.0050, 0.0049, 0.0048],
         [0.9854, 0.9851, 0.9858,  ..., 0.9851, 0.9854, 0.9856]],
        [[0.0044, 0.0047, 0.0046,  ..., 0.0046, 0.0047, 0.0044],
         [0.0044, 0.0047, 0.0046,  ..., 0.0046, 0.0047, 0.0044],
         [0.0044, 0.0047, 0.0046,  ..., 0.0046, 0.0047, 0.0044],
         [0.9868, 0.9860, 0.9863,  ..., 0.9863, 0.9858, 0.9869]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:39,743 [Process: 0] Synchronize training processes
2024-08-16 16:23:39,744 [Process: 0] Evaluating...
2024-08-16 16:23:39,746 [Process: 0] EPOCH 616:
2024-08-16 16:23:39,748 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7522e-03, 4.0272e-03, 3.5182e-03,  ..., 3.5652e-03,
          3.1726e-03, 3.4597e-03],
         [3.7427e-03, 4.0272e-03, 3.5182e-03,  ..., 3.5194e-03,
          3.1547e-03, 3.4597e-03],
         [3.7427e-03, 4.0272e-03, 3.5182e-03,  ..., 3.5194e-03,
          3.1547e-03, 3.4597e-03],
         [9.8876e-01, 9.8792e-01, 9.8945e-01,  ..., 9.8940e-01,
          9.9052e-01, 9.8962e-01]],
        [[3.2954e-03, 3.4620e-03, 3.7595e-03,  ..., 2.2065e-05,
          3.7736e-03, 3.5537e-03],
         [3.2954e-03, 3.4188e-03, 3.7595e-03,  ..., 2.1189e-07,
          3.7736e-03, 3.5537e-03],
         [3.2954e-03, 3.4188e-03, 3.7595e-03,  ..., 9.9998e-01,
          3.7736e-03, 3.5537e-03],
         [9.9011e-01, 9.8970e-01, 9.8872e-01,  ..., 2.1189e-07,
          9.8868e-01, 9.8934e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 617:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:23:41,848 [Process: 0] Synchronize training processes
2024-08-16 16:23:41,849 [Process: 0] Evaluating...
2024-08-16 16:23:41,851 [Process: 0] EPOCH 617:
2024-08-16 16:23:41,853 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0046, 0.0048,  ..., 0.0050, 0.0049, 0.0049],
         [0.0047, 0.0046, 0.0048,  ..., 0.0050, 0.0049, 0.0049],
         [0.0047, 0.0046, 0.0048,  ..., 0.0050, 0.0049, 0.0049],
         [0.9858, 0.9861, 0.9857,  ..., 0.9850, 0.9854, 0.9854]],
        [[0.0043, 0.0045, 0.0044,  ..., 0.0048, 0.0047, 0.0050],
         [0.0043, 0.0045, 0.0044,  ..., 0.0048, 0.0047, 0.0050],
         [0.0043, 0.0045, 0.0044,  ..., 0.0048, 0.0047, 0.0050],
         [0.9871, 0.9864, 0.9868,  ..., 0.9857, 0.9859, 0.9850]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4147e-03, 3.8336e-03, 3.5765e-03,  ..., 3.4702e-03,
          3.6530e-03, 3.4629e-03],
         [3.4147e-03, 3.8336e-03, 3.5556e-03,  ..., 3.4702e-03,
          3.6360e-03, 3.4629e-03],
         [3.4147e-03, 3.8336e-03, 3.5556e-03,  ..., 3.4702e-03,
          3.6360e-03, 3.4629e-03],
         [9.8976e-01, 9.8850e-01, 9.8931e-01,  ..., 9.8959e-01,
          9.8908e-01, 9.8961e-01]],
        [[3.5524e-03, 3.4357e-03, 3.4618e-03,  ..., 3.1722e-06,
          3.7650e-03, 3.3336e-03],
         [3.5524e-03, 3.3991e-03, 3.4618e-03,  ..., 1.7098e-08,
          3.7597e-03, 3.3336e-03],
         [3.5524e-03, 3.3991e-03, 3.4618e-03,  ..., 1.0000e+00,
          3.7597e-03, 3.3336e-03],
         [9.8934e-01, 9.8977e-01, 9.8961e-01,  ..., 1.7098e-08,
          9.8872e-01, 9.9000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 618:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:23:44,034 [Process: 0] Synchronize training processes
2024-08-16 16:23:44,035 [Process: 0] Evaluating...
2024-08-16 16:23:44,037 [Process: 0] EPOCH 618:
2024-08-16 16:23:44,040 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0049, 0.0049,  ..., 0.0049, 0.0048, 0.0050],
         [0.0050, 0.0049, 0.0049,  ..., 0.0049, 0.0048, 0.0050],
         [0.0050, 0.0049, 0.0049,  ..., 0.0049, 0.0048, 0.0050],
         [0.9851, 0.9853, 0.9854,  ..., 0.9854, 0.9855, 0.9851]],
        [[0.0047, 0.0045, 0.0048,  ..., 0.0045, 0.0046, 0.0046],
         [0.0047, 0.0045, 0.0048,  ..., 0.0045, 0.0046, 0.0046],
         [0.0047, 0.0045, 0.0048,  ..., 0.0045, 0.0046, 0.0046],
         [0.9858, 0.9865, 0.9857,  ..., 0.9866, 0.9861, 0.9863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2713e-03, 4.0096e-03, 3.5845e-03,  ..., 3.4189e-03,
          3.5203e-03, 3.4574e-03],
         [3.2688e-03, 3.9951e-03, 3.5845e-03,  ..., 3.4189e-03,
          3.5203e-03, 3.4574e-03],
         [3.2688e-03, 3.9951e-03, 3.5845e-03,  ..., 3.4189e-03,
          3.5203e-03, 3.4574e-03],
         [9.9019e-01, 9.8800e-01, 9.8925e-01,  ..., 9.8974e-01,
          9.8944e-01, 9.8963e-01]],
        [[3.6106e-03, 3.7311e-03, 3.3269e-03,  ..., 3.8436e-05,
          3.7161e-03, 3.7150e-03],
         [3.6106e-03, 3.7311e-03, 3.3269e-03,  ..., 4.1549e-06,
          3.7161e-03, 3.7150e-03],
         [3.6106e-03, 3.7311e-03, 3.3269e-03,  ..., 9.9995e-01,
          3.7161e-03, 3.7150e-03],
         [9.8917e-01, 9.8881e-01, 9.9002e-01,  ..., 4.1549e-06,
          9.8885e-01, 9.8886e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 619:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:23:46,219 [Process: 0] Synchronize training processes
2024-08-16 16:23:46,220 [Process: 0] Evaluating...
2024-08-16 16:23:46,222 [Process: 0] EPOCH 619:
2024-08-16 16:23:46,224 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0049, 0.0047,  ..., 0.0047, 0.0047, 0.0049],
         [0.0048, 0.0049, 0.0047,  ..., 0.0047, 0.0047, 0.0049],
         [0.0048, 0.0049, 0.0047,  ..., 0.0047, 0.0047, 0.0049],
         [0.9856, 0.9853, 0.9859,  ..., 0.9858, 0.9859, 0.9853]],
        [[0.0044, 0.0045, 0.0047,  ..., 0.0046, 0.0047, 0.0045],
         [0.0044, 0.0045, 0.0047,  ..., 0.0046, 0.0047, 0.0045],
         [0.0044, 0.0045, 0.0047,  ..., 0.0046, 0.0047, 0.0045],
         [0.9867, 0.9864, 0.9859,  ..., 0.9861, 0.9858, 0.9865]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4877e-03, 3.9887e-03, 3.3055e-03,  ..., 3.6601e-03,
          3.3332e-03, 3.5718e-03],
         [3.4735e-03, 3.9887e-03, 3.3055e-03,  ..., 3.6601e-03,
          3.3332e-03, 3.5718e-03],
         [3.4735e-03, 3.9887e-03, 3.3055e-03,  ..., 3.6601e-03,
          3.3332e-03, 3.5718e-03],
         [9.8957e-01, 9.8803e-01, 9.9008e-01,  ..., 9.8902e-01,
          9.9000e-01, 9.8928e-01]],
        [[3.5742e-03, 3.5605e-03, 3.4431e-03,  ..., 5.2858e-05,
          3.4311e-03, 3.7355e-03],
         [3.5742e-03, 3.5605e-03, 3.4431e-03,  ..., 7.3575e-07,
          3.4311e-03, 3.7355e-03],
         [3.5742e-03, 3.5605e-03, 3.4431e-03,  ..., 9.9995e-01,
          3.4311e-03, 3.7355e-03],
         [9.8928e-01, 9.8932e-01, 9.8967e-01,  ..., 7.3575e-07,
          9.8971e-01, 9.8879e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 620:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:23:48,337 [Process: 0] Synchronize training processes
2024-08-16 16:23:48,337 [Process: 0] Evaluating...
2024-08-16 16:23:48,339 [Process: 0] EPOCH 620:
2024-08-16 16:23:48,341 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0049, 0.0048, 0.0048,  ..., 0.0048, 0.0049, 0.0049],
         [0.0049, 0.0048, 0.0048,  ..., 0.0048, 0.0049, 0.0049],
         [0.0049, 0.0048, 0.0048,  ..., 0.0048, 0.0049, 0.0049],
         [0.9853, 0.9856, 0.9855,  ..., 0.9857, 0.9853, 0.9854]],
        [[0.0041, 0.0046, 0.0044,  ..., 0.0045, 0.0044, 0.0043],
         [0.0041, 0.0046, 0.0044,  ..., 0.0045, 0.0044, 0.0043],
         [0.0041, 0.0046, 0.0044,  ..., 0.0045, 0.0044, 0.0043],
         [0.9877, 0.9862, 0.9869,  ..., 0.9866, 0.9869, 0.9870]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3866e-03, 3.8626e-03, 3.3718e-03,  ..., 3.5302e-03,
          3.5148e-03, 3.6644e-03],
         [3.3866e-03, 3.8626e-03, 3.3718e-03,  ..., 3.5302e-03,
          3.5148e-03, 3.6644e-03],
         [3.3866e-03, 3.8626e-03, 3.3718e-03,  ..., 3.5302e-03,
          3.5148e-03, 3.6644e-03],
         [9.8984e-01, 9.8841e-01, 9.8988e-01,  ..., 9.8941e-01,
          9.8946e-01, 9.8901e-01]],
        [[3.5090e-03, 3.8600e-03, 3.2438e-03,  ..., 5.5280e-04,
          3.1676e-03, 3.3964e-03],
         [3.5090e-03, 3.8600e-03, 3.2438e-03,  ..., 8.9860e-06,
          3.1676e-03, 3.3964e-03],
         [3.5090e-03, 3.8600e-03, 3.2438e-03,  ..., 9.9943e-01,
          3.1676e-03, 3.3964e-03],
         [9.8947e-01, 9.8842e-01, 9.9027e-01,  ..., 8.9860e-06,
          9.9050e-01, 9.8981e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 621:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:23:50,440 [Process: 0] Synchronize training processes
2024-08-16 16:23:50,440 [Process: 0] Evaluating...
2024-08-16 16:23:50,442 [Process: 0] EPOCH 621:
2024-08-16 16:23:50,444 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0048, 0.0048,  ..., 0.0050, 0.0049, 0.0049],
         [0.0047, 0.0048, 0.0048,  ..., 0.0050, 0.0049, 0.0049],
         [0.0047, 0.0048, 0.0048,  ..., 0.0050, 0.0049, 0.0049],
         [0.9858, 0.9855, 0.9857,  ..., 0.9851, 0.9853, 0.9852]],
        [[0.0043, 0.0047, 0.0044,  ..., 0.0045, 0.0045, 0.0044],
         [0.0043, 0.0047, 0.0044,  ..., 0.0045, 0.0045, 0.0044],
         [0.0043, 0.0047, 0.0044,  ..., 0.0045, 0.0045, 0.0044],
         [0.9871, 0.9859, 0.9868,  ..., 0.9864, 0.9864, 0.9869]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5149e-03, 4.0086e-03, 3.6636e-03,  ..., 3.4601e-03,
          3.4031e-03, 3.4632e-03],
         [3.5149e-03, 4.0086e-03, 3.6636e-03,  ..., 3.4601e-03,
          3.4031e-03, 3.4632e-03],
         [3.5149e-03, 4.0086e-03, 3.6636e-03,  ..., 3.4601e-03,
          3.4031e-03, 3.4632e-03],
         [9.8946e-01, 9.8797e-01, 9.8901e-01,  ..., 9.8962e-01,
          9.8979e-01, 9.8961e-01]],
        [[3.4071e-03, 3.6589e-03, 3.4961e-03,  ..., 3.3453e-03,
          3.6503e-03, 3.6805e-03],
         [3.4071e-03, 3.6589e-03, 3.4961e-03,  ..., 6.0696e-04,
          3.6503e-03, 3.6805e-03],
         [3.4071e-03, 3.6589e-03, 3.4961e-03,  ..., 9.9544e-01,
          3.6503e-03, 3.6805e-03],
         [9.8978e-01, 9.8902e-01, 9.8951e-01,  ..., 6.0696e-04,
          9.8905e-01, 9.8896e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 622:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:23:52,551 [Process: 0] Synchronize training processes
2024-08-16 16:23:52,551 [Process: 0] Evaluating...
2024-08-16 16:23:52,560 [Process: 0] EPOCH 622:
2024-08-16 16:23:52,562 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0047, 0.0047,  ..., 0.0048, 0.0047, 0.0049],
         [0.0048, 0.0047, 0.0047,  ..., 0.0048, 0.0047, 0.0049],
         [0.0048, 0.0047, 0.0047,  ..., 0.0048, 0.0047, 0.0049],
         [0.9856, 0.9858, 0.9860,  ..., 0.9856, 0.9858, 0.9854]],
        [[0.0043, 0.0043, 0.0045,  ..., 0.0043, 0.0047, 0.0047],
         [0.0043, 0.0043, 0.0045,  ..., 0.0043, 0.0047, 0.0047],
         [0.0043, 0.0043, 0.0045,  ..., 0.0043, 0.0047, 0.0047],
         [0.9870, 0.9870, 0.9866,  ..., 0.9870, 0.9859, 0.9858]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3547e-03, 3.8585e-03, 3.4791e-03,  ..., 3.7424e-03,
          3.4121e-03, 3.4255e-03],
         [3.3547e-03, 3.8585e-03, 3.4791e-03,  ..., 3.7424e-03,
          3.4121e-03, 3.4255e-03],
         [3.3547e-03, 3.8585e-03, 3.4791e-03,  ..., 3.7424e-03,
          3.4121e-03, 3.4255e-03],
         [9.8994e-01, 9.8842e-01, 9.8956e-01,  ..., 9.8877e-01,
          9.8976e-01, 9.8972e-01]],
        [[3.3274e-03, 3.7869e-03, 3.6847e-03,  ..., 6.5350e-04,
          3.6327e-03, 3.6184e-03],
         [3.3274e-03, 3.7869e-03, 3.6847e-03,  ..., 1.2386e-04,
          3.6327e-03, 3.6184e-03],
         [3.3274e-03, 3.7869e-03, 3.6847e-03,  ..., 9.9910e-01,
          3.6327e-03, 3.6184e-03],
         [9.9002e-01, 9.8864e-01, 9.8895e-01,  ..., 1.2386e-04,
          9.8910e-01, 9.8914e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 623:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:23:54,667 [Process: 0] Synchronize training processes
2024-08-16 16:23:54,667 [Process: 0] Evaluating...
2024-08-16 16:23:54,669 [Process: 0] EPOCH 623:
2024-08-16 16:23:54,671 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0047, 0.0047,  ..., 0.0049, 0.0049, 0.0048],
         [0.0048, 0.0047, 0.0047,  ..., 0.0049, 0.0049, 0.0048],
         [0.0048, 0.0047, 0.0047,  ..., 0.0049, 0.0049, 0.0048],
         [0.9855, 0.9859, 0.9860,  ..., 0.9853, 0.9854, 0.9857]],
        [[0.0041, 0.0046, 0.0049,  ..., 0.0043, 0.0045, 0.0046],
         [0.0041, 0.0046, 0.0049,  ..., 0.0043, 0.0045, 0.0046],
         [0.0041, 0.0046, 0.0049,  ..., 0.0043, 0.0045, 0.0046],
         [0.9876, 0.9863, 0.9854,  ..., 0.9871, 0.9864, 0.9862]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7183e-03, 4.0622e-03, 3.1276e-03,  ..., 3.5842e-03,
          3.4414e-03, 3.2659e-03],
         [3.7183e-03, 4.0622e-03, 3.1276e-03,  ..., 3.5842e-03,
          3.4414e-03, 3.2659e-03],
         [3.7183e-03, 4.0622e-03, 3.1276e-03,  ..., 3.5842e-03,
          3.4414e-03, 3.2659e-03],
         [9.8885e-01, 9.8781e-01, 9.9062e-01,  ..., 9.8925e-01,
          9.8968e-01, 9.9020e-01]],
        [[3.6346e-03, 3.7264e-03, 3.7418e-03,  ..., 1.2633e-05,
          3.2928e-03, 3.6036e-03],
         [3.6346e-03, 3.7264e-03, 3.7418e-03,  ..., 2.7102e-08,
          3.2928e-03, 3.6036e-03],
         [3.6346e-03, 3.7264e-03, 3.7418e-03,  ..., 9.9999e-01,
          3.2928e-03, 3.6036e-03],
         [9.8910e-01, 9.8882e-01, 9.8877e-01,  ..., 2.7102e-08,
          9.9012e-01, 9.8919e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:56,761 [Process: 0] Synchronize training processes
2024-08-16 16:23:56,761 [Process: 0] Evaluating...
2024-08-16 16:23:56,763 [Process: 0] EPOCH 624:
2024-08-16 16:23:56,765 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 624:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0047, 0.0047,  ..., 0.0048, 0.0048, 0.0050],
         [0.0047, 0.0047, 0.0047,  ..., 0.0048, 0.0048, 0.0050],
         [0.0047, 0.0047, 0.0047,  ..., 0.0048, 0.0048, 0.0050],
         [0.9859, 0.9860, 0.9860,  ..., 0.9855, 0.9855, 0.9850]],
        [[0.0043, 0.0049, 0.0045,  ..., 0.0044, 0.0046, 0.0044],
         [0.0043, 0.0049, 0.0045,  ..., 0.0044, 0.0046, 0.0044],
         [0.0043, 0.0049, 0.0045,  ..., 0.0044, 0.0046, 0.0044],
         [0.9870, 0.9854, 0.9864,  ..., 0.9869, 0.9862, 0.9868]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3590e-03, 3.8612e-03, 3.6087e-03,  ..., 3.6138e-03,
          3.5652e-03, 3.3071e-03],
         [3.3590e-03, 3.8612e-03, 3.6087e-03,  ..., 3.6138e-03,
          3.5652e-03, 3.3071e-03],
         [3.3590e-03, 3.8612e-03, 3.6087e-03,  ..., 3.6138e-03,
          3.5652e-03, 3.3071e-03],
         [9.8992e-01, 9.8842e-01, 9.8917e-01,  ..., 9.8916e-01,
          9.8930e-01, 9.9008e-01]],
        [[3.5496e-03, 3.6144e-03, 3.5543e-03,  ..., 2.1230e-05,
          3.5331e-03, 3.5593e-03],
         [3.5496e-03, 3.6144e-03, 3.5543e-03,  ..., 1.5844e-08,
          3.5331e-03, 3.5593e-03],
         [3.5496e-03, 3.6144e-03, 3.5543e-03,  ..., 9.9998e-01,
          3.5331e-03, 3.5593e-03],
         [9.8935e-01, 9.8916e-01, 9.8934e-01,  ..., 1.5844e-08,
          9.8940e-01, 9.8932e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:23:58,850 [Process: 0] Synchronize training processes
2024-08-16 16:23:58,850 [Process: 0] Evaluating...
2024-08-16 16:23:58,852 [Process: 0] EPOCH 625:
2024-08-16 16:23:58,854 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 625:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0047, 0.0048,  ..., 0.0048, 0.0048, 0.0047],
         [0.0047, 0.0047, 0.0048,  ..., 0.0048, 0.0048, 0.0047],
         [0.0047, 0.0047, 0.0048,  ..., 0.0048, 0.0048, 0.0047],
         [0.9858, 0.9859, 0.9855,  ..., 0.9856, 0.9857, 0.9859]],
        [[0.0043, 0.0045, 0.0044,  ..., 0.0043, 0.0045, 0.0044],
         [0.0043, 0.0045, 0.0044,  ..., 0.0043, 0.0045, 0.0044],
         [0.0043, 0.0045, 0.0044,  ..., 0.0043, 0.0045, 0.0044],
         [0.9870, 0.9866, 0.9868,  ..., 0.9871, 0.9866, 0.9869]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:24:00,930 [Process: 0] Synchronize training processes
2024-08-16 16:24:00,931 [Process: 0] Evaluating...
2024-08-16 16:24:00,932 [Process: 0] EPOCH 626:
2024-08-16 16:24:00,935 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.6649e-03, 3.8130e-03, 3.4541e-03,  ..., 3.4048e-03,
          3.3359e-03, 3.3111e-03],
         [3.6649e-03, 3.8130e-03, 3.4541e-03,  ..., 3.4048e-03,
          3.3359e-03, 3.3111e-03],
         [3.6649e-03, 3.8130e-03, 3.4541e-03,  ..., 3.4048e-03,
          3.3359e-03, 3.3111e-03],
         [9.8901e-01, 9.8856e-01, 9.8964e-01,  ..., 9.8979e-01,
          9.8999e-01, 9.9007e-01]],
        [[3.5096e-03, 3.5693e-03, 3.5289e-03,  ..., 7.6584e-04,
          3.3964e-03, 3.3189e-03],
         [3.5096e-03, 3.5693e-03, 3.5289e-03,  ..., 8.2768e-05,
          3.3964e-03, 3.3189e-03],
         [3.5096e-03, 3.5693e-03, 3.5289e-03,  ..., 9.9907e-01,
          3.3964e-03, 3.3189e-03],
         [9.8947e-01, 9.8929e-01, 9.8941e-01,  ..., 8.2768e-05,
          9.8981e-01, 9.9004e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 626:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0046, 0.0050,  ..., 0.0048, 0.0047, 0.0047],
         [0.0046, 0.0046, 0.0050,  ..., 0.0048, 0.0047, 0.0047],
         [0.0046, 0.0046, 0.0050,  ..., 0.0048, 0.0047, 0.0047],
         [0.9862, 0.9863, 0.9851,  ..., 0.9855, 0.9858, 0.9858]],
        [[0.0043, 0.0040, 0.0045,  ..., 0.0046, 0.0046, 0.0045],
         [0.0043, 0.0040, 0.0045,  ..., 0.0046, 0.0046, 0.0045],
         [0.0043, 0.0040, 0.0045,  ..., 0.0046, 0.0046, 0.0045],
         [0.9871, 0.9880, 0.9864,  ..., 0.9861, 0.9862, 0.9864]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:24:02,967 [Process: 0] Synchronize training processes
2024-08-16 16:24:02,967 [Process: 0] Evaluating...
2024-08-16 16:24:02,969 [Process: 0] EPOCH 627:
2024-08-16 16:24:02,971 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3389e-03, 3.7849e-03, 3.2121e-03,  ..., 3.6225e-03,
          3.1807e-03, 3.2572e-03],
         [3.3389e-03, 3.7849e-03, 3.2121e-03,  ..., 3.6225e-03,
          3.1807e-03, 3.2572e-03],
         [3.3389e-03, 3.7849e-03, 3.2121e-03,  ..., 3.6225e-03,
          3.1807e-03, 3.2572e-03],
         [9.8998e-01, 9.8865e-01, 9.9036e-01,  ..., 9.8913e-01,
          9.9046e-01, 9.9023e-01]],
        [[3.4346e-03, 3.6998e-03, 3.5427e-03,  ..., 1.6012e-04,
          3.2638e-03, 3.6226e-03],
         [3.4346e-03, 3.6998e-03, 3.5427e-03,  ..., 7.6589e-06,
          3.2638e-03, 3.6226e-03],
         [3.4346e-03, 3.6998e-03, 3.5427e-03,  ..., 9.9982e-01,
          3.2638e-03, 3.6226e-03],
         [9.8970e-01, 9.8890e-01, 9.8937e-01,  ..., 7.6589e-06,
          9.9021e-01, 9.8913e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 627:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0048, 0.0047,  ..., 0.0049, 0.0047, 0.0049],
         [0.0047, 0.0048, 0.0047,  ..., 0.0049, 0.0047, 0.0049],
         [0.0047, 0.0048, 0.0047,  ..., 0.0049, 0.0047, 0.0049],
         [0.9859, 0.9856, 0.9860,  ..., 0.9854, 0.9858, 0.9853]],
        [[0.0045, 0.0048, 0.0045,  ..., 0.0047, 0.0044, 0.0043],
         [0.0045, 0.0048, 0.0045,  ..., 0.0047, 0.0044, 0.0043],
         [0.0045, 0.0048, 0.0045,  ..., 0.0047, 0.0044, 0.0043],
         [0.9864, 0.9857, 0.9866,  ..., 0.9860, 0.9867, 0.9870]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:24:04,940 [Process: 0] Synchronize training processes
2024-08-16 16:24:04,940 [Process: 0] Evaluating...
2024-08-16 16:24:04,942 [Process: 0] EPOCH 628:
2024-08-16 16:24:04,944 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7717e-03, 3.8838e-03, 3.6408e-03,  ..., 3.8371e-03,
          3.7388e-03, 3.3318e-03],
         [3.7717e-03, 3.8838e-03, 3.6408e-03,  ..., 3.8371e-03,
          3.7388e-03, 3.3318e-03],
         [3.7717e-03, 3.8838e-03, 3.6408e-03,  ..., 3.8371e-03,
          3.7388e-03, 3.3318e-03],
         [9.8868e-01, 9.8835e-01, 9.8908e-01,  ..., 9.8849e-01,
          9.8878e-01, 9.9000e-01]],
        [[3.4997e-03, 3.3512e-03, 3.6866e-03,  ..., 6.1896e-05,
          3.4267e-03, 3.5315e-03],
         [3.4997e-03, 3.3442e-03, 3.6866e-03,  ..., 5.6994e-07,
          3.4267e-03, 3.5315e-03],
         [3.4997e-03, 3.3442e-03, 3.6866e-03,  ..., 9.9994e-01,
          3.4267e-03, 3.5315e-03],
         [9.8950e-01, 9.8996e-01, 9.8894e-01,  ..., 5.6994e-07,
          9.8972e-01, 9.8941e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 628:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0049, 0.0048,  ..., 0.0048, 0.0049, 0.0048],
         [0.0047, 0.0049, 0.0048,  ..., 0.0048, 0.0049, 0.0048],
         [0.0047, 0.0049, 0.0048,  ..., 0.0048, 0.0049, 0.0048],
         [0.9858, 0.9853, 0.9857,  ..., 0.9857, 0.9853, 0.9856]],
        [[0.0045, 0.0045, 0.0044,  ..., 0.0046, 0.0045, 0.0042],
         [0.0045, 0.0045, 0.0044,  ..., 0.0046, 0.0045, 0.0042],
         [0.0045, 0.0045, 0.0044,  ..., 0.0046, 0.0045, 0.0042],
         [0.9866, 0.9865, 0.9868,  ..., 0.9863, 0.9866, 0.9874]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:07,039 [Process: 0] Synchronize training processes
2024-08-16 16:24:07,040 [Process: 0] Evaluating...
2024-08-16 16:24:07,041 [Process: 0] EPOCH 629:
2024-08-16 16:24:07,043 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4566e-03, 3.9474e-03, 3.6610e-03,  ..., 3.5043e-03,
          3.5965e-03, 3.8302e-03],
         [3.4566e-03, 3.9474e-03, 3.6610e-03,  ..., 3.5043e-03,
          3.5965e-03, 3.8302e-03],
         [3.4566e-03, 3.9474e-03, 3.6610e-03,  ..., 3.5043e-03,
          3.5965e-03, 3.8302e-03],
         [9.8963e-01, 9.8816e-01, 9.8902e-01,  ..., 9.8949e-01,
          9.8921e-01, 9.8851e-01]],
        [[3.4177e-03, 3.3791e-03, 3.5358e-03,  ..., 2.9115e-06,
          3.6257e-03, 3.3181e-03],
         [3.4177e-03, 3.3744e-03, 3.5358e-03,  ..., 5.6992e-09,
          3.6257e-03, 3.3181e-03],
         [3.4177e-03, 3.3744e-03, 3.5358e-03,  ..., 1.0000e+00,
          3.6257e-03, 3.3181e-03],
         [9.8975e-01, 9.8987e-01, 9.8939e-01,  ..., 5.6992e-09,
          9.8912e-01, 9.9005e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 629:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0048, 0.0048,  ..., 0.0048, 0.0048, 0.0047],
         [0.0046, 0.0048, 0.0048,  ..., 0.0048, 0.0048, 0.0047],
         [0.0046, 0.0048, 0.0048,  ..., 0.0048, 0.0048, 0.0047],
         [0.9861, 0.9856, 0.9855,  ..., 0.9856, 0.9857, 0.9860]],
        [[0.0046, 0.0044, 0.0045,  ..., 0.0046, 0.0044, 0.0048],
         [0.0046, 0.0044, 0.0045,  ..., 0.0046, 0.0044, 0.0048],
         [0.0046, 0.0044, 0.0045,  ..., 0.0046, 0.0044, 0.0048],
         [0.9861, 0.9869, 0.9864,  ..., 0.9862, 0.9869, 0.9856]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:09,148 [Process: 0] Synchronize training processes
2024-08-16 16:24:09,149 [Process: 0] Evaluating...
2024-08-16 16:24:09,151 [Process: 0] EPOCH 630:
2024-08-16 16:24:09,153 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4587e-03, 3.8119e-03, 3.5696e-03,  ..., 3.6190e-03,
          3.2382e-03, 3.4943e-03],
         [3.4587e-03, 3.8119e-03, 3.5556e-03,  ..., 3.6127e-03,
          3.2323e-03, 3.4351e-03],
         [3.4587e-03, 3.8119e-03, 3.5556e-03,  ..., 3.6127e-03,
          3.2323e-03, 3.4351e-03],
         [9.8962e-01, 9.8856e-01, 9.8932e-01,  ..., 9.8916e-01,
          9.9030e-01, 9.8964e-01]],
        [[3.4506e-03, 3.8064e-03, 3.4580e-03,  ..., 2.7563e-05,
          3.4841e-03, 3.3508e-03],
         [3.4318e-03, 3.7660e-03, 3.4580e-03,  ..., 1.6645e-07,
          3.4841e-03, 3.3508e-03],
         [3.4318e-03, 3.7660e-03, 3.4580e-03,  ..., 9.9997e-01,
          3.4841e-03, 3.3508e-03],
         [9.8969e-01, 9.8866e-01, 9.8963e-01,  ..., 1.6645e-07,
          9.8955e-01, 9.8995e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 630:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0048, 0.0049,  ..., 0.0047, 0.0048, 0.0047],
         [0.0046, 0.0048, 0.0049,  ..., 0.0047, 0.0048, 0.0047],
         [0.0046, 0.0048, 0.0049,  ..., 0.0047, 0.0048, 0.0047],
         [0.9862, 0.9857, 0.9852,  ..., 0.9859, 0.9856, 0.9858]],
        [[0.0043, 0.0042, 0.0046,  ..., 0.0044, 0.0044, 0.0045],
         [0.0043, 0.0042, 0.0046,  ..., 0.0044, 0.0044, 0.0045],
         [0.0043, 0.0042, 0.0046,  ..., 0.0044, 0.0044, 0.0045],
         [0.9872, 0.9873, 0.9862,  ..., 0.9867, 0.9867, 0.9864]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:11,265 [Process: 0] Synchronize training processes
2024-08-16 16:24:11,265 [Process: 0] Evaluating...
2024-08-16 16:24:11,267 [Process: 0] EPOCH 631:
2024-08-16 16:24:11,269 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4473e-03, 3.8938e-03, 3.6453e-03,  ..., 3.6297e-03,
          3.4522e-03, 3.3165e-03],
         [3.4473e-03, 3.8938e-03, 3.6083e-03,  ..., 3.6297e-03,
          3.4522e-03, 3.3165e-03],
         [3.4473e-03, 3.8938e-03, 3.6083e-03,  ..., 3.6297e-03,
          3.4522e-03, 3.3165e-03],
         [9.8966e-01, 9.8832e-01, 9.8914e-01,  ..., 9.8911e-01,
          9.8964e-01, 9.9005e-01]],
        [[3.1072e-03, 3.4598e-03, 3.4618e-03,  ..., 4.7195e-07,
          3.5750e-03, 3.5973e-03],
         [3.1072e-03, 3.4598e-03, 3.4618e-03,  ..., 3.1776e-09,
          3.5750e-03, 3.5973e-03],
         [3.1072e-03, 3.4598e-03, 3.4618e-03,  ..., 1.0000e+00,
          3.5750e-03, 3.5973e-03],
         [9.9068e-01, 9.8962e-01, 9.8961e-01,  ..., 3.1776e-09,
          9.8928e-01, 9.8921e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 631:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0045, 0.0048,  ..., 0.0047, 0.0048, 0.0048],
         [0.0047, 0.0045, 0.0048,  ..., 0.0047, 0.0048, 0.0048],
         [0.0047, 0.0045, 0.0048,  ..., 0.0047, 0.0048, 0.0048],
         [0.9858, 0.9864, 0.9855,  ..., 0.9860, 0.9857, 0.9856]],
        [[0.0044, 0.0046, 0.0044,  ..., 0.0043, 0.0042, 0.0046],
         [0.0044, 0.0046, 0.0044,  ..., 0.0043, 0.0042, 0.0046],
         [0.0044, 0.0046, 0.0044,  ..., 0.0043, 0.0042, 0.0046],
         [0.9867, 0.9862, 0.9869,  ..., 0.9870, 0.9873, 0.9863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:13,353 [Process: 0] Synchronize training processes
2024-08-16 16:24:13,354 [Process: 0] Evaluating...
2024-08-16 16:24:13,361 [Process: 0] EPOCH 632:
2024-08-16 16:24:13,363 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2943e-03, 3.7862e-03, 3.4509e-03,  ..., 3.4696e-03,
          3.2245e-03, 3.4843e-03],
         [3.2943e-03, 3.7862e-03, 3.4395e-03,  ..., 3.4696e-03,
          3.2245e-03, 3.4843e-03],
         [3.2943e-03, 3.7862e-03, 3.4395e-03,  ..., 3.4696e-03,
          3.2245e-03, 3.4843e-03],
         [9.9012e-01, 9.8864e-01, 9.8967e-01,  ..., 9.8959e-01,
          9.9033e-01, 9.8955e-01]],
        [[3.2343e-03, 3.6329e-03, 3.3225e-03,  ..., 3.1118e-04,
          3.2600e-03, 3.5474e-03],
         [3.2343e-03, 3.6284e-03, 3.3225e-03,  ..., 2.5828e-05,
          3.2600e-03, 3.5474e-03],
         [3.2343e-03, 3.6284e-03, 3.3225e-03,  ..., 9.9964e-01,
          3.2600e-03, 3.5474e-03],
         [9.9030e-01, 9.8911e-01, 9.9003e-01,  ..., 2.5828e-05,
          9.9022e-01, 9.8936e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 632:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0047, 0.0047,  ..., 0.0047, 0.0047, 0.0047],
         [0.0047, 0.0047, 0.0047,  ..., 0.0047, 0.0047, 0.0047],
         [0.0047, 0.0047, 0.0047,  ..., 0.0047, 0.0047, 0.0047],
         [0.9860, 0.9859, 0.9860,  ..., 0.9858, 0.9858, 0.9859]],
        [[0.0043, 0.0042, 0.0041,  ..., 0.0044, 0.0043, 0.0042],
         [0.0043, 0.0042, 0.0041,  ..., 0.0044, 0.0043, 0.0042],
         [0.0043, 0.0042, 0.0041,  ..., 0.0044, 0.0043, 0.0042],
         [0.9872, 0.9874, 0.9877,  ..., 0.9868, 0.9872, 0.9873]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:15,441 [Process: 0] Synchronize training processes
2024-08-16 16:24:15,441 [Process: 0] Evaluating...
2024-08-16 16:24:15,443 [Process: 0] EPOCH 633:
2024-08-16 16:24:15,445 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4674e-03, 3.8526e-03, 3.3490e-03,  ..., 3.3100e-03,
          3.3606e-03, 3.4607e-03],
         [3.4674e-03, 3.8526e-03, 3.3490e-03,  ..., 3.3100e-03,
          3.3606e-03, 3.4607e-03],
         [3.4674e-03, 3.8526e-03, 3.3490e-03,  ..., 3.3100e-03,
          3.3606e-03, 3.4607e-03],
         [9.8960e-01, 9.8844e-01, 9.8995e-01,  ..., 9.9007e-01,
          9.8992e-01, 9.8962e-01]],
        [[3.6098e-03, 3.4280e-03, 3.7650e-03,  ..., 4.3968e-05,
          3.7106e-03, 3.4301e-03],
         [3.6098e-03, 3.4280e-03, 3.7650e-03,  ..., 2.7679e-07,
          3.7106e-03, 3.4301e-03],
         [3.6098e-03, 3.4280e-03, 3.7650e-03,  ..., 9.9996e-01,
          3.7106e-03, 3.4301e-03],
         [9.8917e-01, 9.8972e-01, 9.8870e-01,  ..., 2.7679e-07,
          9.8887e-01, 9.8971e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 633:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0048, 0.0049,  ..., 0.0047, 0.0047, 0.0047],
         [0.0048, 0.0048, 0.0049,  ..., 0.0047, 0.0047, 0.0047],
         [0.0048, 0.0048, 0.0049,  ..., 0.0047, 0.0047, 0.0047],
         [0.9857, 0.9856, 0.9854,  ..., 0.9860, 0.9858, 0.9858]],
        [[0.0043, 0.0042, 0.0045,  ..., 0.0040, 0.0042, 0.0043],
         [0.0043, 0.0042, 0.0045,  ..., 0.0040, 0.0042, 0.0043],
         [0.0043, 0.0042, 0.0045,  ..., 0.0040, 0.0042, 0.0043],
         [0.9871, 0.9874, 0.9866,  ..., 0.9880, 0.9873, 0.9872]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:17,484 [Process: 0] Synchronize training processes
2024-08-16 16:24:17,484 [Process: 0] Evaluating...
2024-08-16 16:24:17,486 [Process: 0] EPOCH 634:
2024-08-16 16:24:17,488 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2783e-03, 3.9613e-03, 3.3510e-03,  ..., 3.4045e-03,
          3.6271e-03, 3.4577e-03],
         [3.2783e-03, 3.9613e-03, 3.3188e-03,  ..., 3.4045e-03,
          3.6075e-03, 3.3798e-03],
         [3.2783e-03, 3.9613e-03, 3.3188e-03,  ..., 3.4045e-03,
          3.6075e-03, 3.3798e-03],
         [9.9017e-01, 9.8812e-01, 9.9001e-01,  ..., 9.8979e-01,
          9.8916e-01, 9.8978e-01]],
        [[3.6424e-03, 3.5135e-03, 3.5684e-03,  ..., 2.1921e-04,
          3.4583e-03, 3.4541e-03],
         [3.6424e-03, 3.4794e-03, 3.5684e-03,  ..., 2.2139e-06,
          3.4182e-03, 3.4398e-03],
         [3.6424e-03, 3.4794e-03, 3.5684e-03,  ..., 9.9978e-01,
          3.4182e-03, 3.4398e-03],
         [9.8907e-01, 9.8953e-01, 9.8929e-01,  ..., 2.2139e-06,
          9.8971e-01, 9.8967e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 634:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0048, 0.0045,  ..., 0.0046, 0.0046, 0.0047],
         [0.0047, 0.0048, 0.0045,  ..., 0.0046, 0.0046, 0.0047],
         [0.0047, 0.0048, 0.0045,  ..., 0.0046, 0.0046, 0.0047],
         [0.9860, 0.9857, 0.9865,  ..., 0.9861, 0.9862, 0.9860]],
        [[0.0041, 0.0044, 0.0042,  ..., 0.0043, 0.0042, 0.0042],
         [0.0041, 0.0044, 0.0042,  ..., 0.0043, 0.0042, 0.0042],
         [0.0041, 0.0044, 0.0042,  ..., 0.0043, 0.0042, 0.0042],
         [0.9877, 0.9869, 0.9874,  ..., 0.9870, 0.9875, 0.9875]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:19,495 [Process: 0] Synchronize training processes
2024-08-16 16:24:19,495 [Process: 0] Evaluating...
2024-08-16 16:24:19,497 [Process: 0] EPOCH 635:
2024-08-16 16:24:19,500 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3636e-03, 3.8701e-03, 3.3677e-03,  ..., 3.3116e-03,
          3.5210e-03, 3.3793e-03],
         [3.3369e-03, 3.8701e-03, 3.3460e-03,  ..., 3.3116e-03,
          3.4987e-03, 3.3793e-03],
         [3.3369e-03, 3.8701e-03, 3.3460e-03,  ..., 3.3116e-03,
          3.4987e-03, 3.3793e-03],
         [9.8996e-01, 9.8839e-01, 9.8994e-01,  ..., 9.9007e-01,
          9.8948e-01, 9.8986e-01]],
        [[3.3907e-03, 3.5477e-03, 3.3641e-03,  ..., 3.5712e-05,
          3.2820e-03, 3.5145e-03],
         [3.3907e-03, 3.5428e-03, 3.3641e-03,  ..., 2.9898e-07,
          3.2820e-03, 3.5145e-03],
         [3.3907e-03, 3.5428e-03, 3.3641e-03,  ..., 9.9996e-01,
          3.2820e-03, 3.5145e-03],
         [9.8983e-01, 9.8937e-01, 9.8991e-01,  ..., 2.9898e-07,
          9.9015e-01, 9.8946e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 635:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0046, 0.0047,  ..., 0.0047, 0.0046, 0.0046],
         [0.0046, 0.0046, 0.0047,  ..., 0.0047, 0.0046, 0.0046],
         [0.0046, 0.0046, 0.0047,  ..., 0.0047, 0.0046, 0.0046],
         [0.9863, 0.9863, 0.9858,  ..., 0.9860, 0.9863, 0.9861]],
        [[0.0044, 0.0045, 0.0043,  ..., 0.0045, 0.0043, 0.0044],
         [0.0044, 0.0045, 0.0043,  ..., 0.0045, 0.0043, 0.0044],
         [0.0044, 0.0045, 0.0043,  ..., 0.0045, 0.0043, 0.0044],
         [0.9869, 0.9866, 0.9871,  ..., 0.9865, 0.9871, 0.9869]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:21,463 [Process: 0] Synchronize training processes
2024-08-16 16:24:21,464 [Process: 0] Evaluating...
2024-08-16 16:24:21,465 [Process: 0] EPOCH 636:
2024-08-16 16:24:21,467 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2324e-03, 3.8960e-03, 3.5606e-03,  ..., 3.5537e-03,
          3.2165e-03, 3.5750e-03],
         [3.2324e-03, 3.8960e-03, 3.5606e-03,  ..., 3.5537e-03,
          3.2165e-03, 3.5750e-03],
         [3.2324e-03, 3.8960e-03, 3.5606e-03,  ..., 3.5537e-03,
          3.2165e-03, 3.5750e-03],
         [9.9030e-01, 9.8831e-01, 9.8932e-01,  ..., 9.8934e-01,
          9.9035e-01, 9.8927e-01]],
        [[3.2609e-03, 3.3864e-03, 3.4260e-03,  ..., 1.6082e-04,
          3.6871e-03, 3.5167e-03],
         [3.2609e-03, 3.3864e-03, 3.4260e-03,  ..., 4.9664e-06,
          3.6871e-03, 3.5167e-03],
         [3.2609e-03, 3.3864e-03, 3.4260e-03,  ..., 9.9983e-01,
          3.6871e-03, 3.5167e-03],
         [9.9022e-01, 9.8984e-01, 9.8972e-01,  ..., 4.9664e-06,
          9.8894e-01, 9.8945e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 636:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0047, 0.0046,  ..., 0.0047, 0.0047, 0.0048],
         [0.0047, 0.0047, 0.0046,  ..., 0.0047, 0.0047, 0.0048],
         [0.0047, 0.0047, 0.0046,  ..., 0.0047, 0.0047, 0.0048],
         [0.9860, 0.9858, 0.9863,  ..., 0.9858, 0.9859, 0.9857]],
        [[0.0043, 0.0045, 0.0042,  ..., 0.0039, 0.0045, 0.0043],
         [0.0043, 0.0045, 0.0042,  ..., 0.0039, 0.0045, 0.0043],
         [0.0043, 0.0045, 0.0042,  ..., 0.0039, 0.0045, 0.0043],
         [0.9872, 0.9866, 0.9875,  ..., 0.9882, 0.9866, 0.9871]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:23,434 [Process: 0] Synchronize training processes
2024-08-16 16:24:23,434 [Process: 0] Evaluating...
2024-08-16 16:24:23,436 [Process: 0] EPOCH 637:
2024-08-16 16:24:23,439 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4291e-03, 3.9081e-03, 3.4254e-03,  ..., 3.3888e-03,
          3.5757e-03, 3.4012e-03],
         [3.4291e-03, 3.9081e-03, 3.4254e-03,  ..., 3.3888e-03,
          3.5757e-03, 3.4012e-03],
         [3.4291e-03, 3.9081e-03, 3.4254e-03,  ..., 3.3888e-03,
          3.5757e-03, 3.4012e-03],
         [9.8971e-01, 9.8828e-01, 9.8972e-01,  ..., 9.8983e-01,
          9.8927e-01, 9.8980e-01]],
        [[3.3015e-03, 3.5204e-03, 3.5027e-03,  ..., 1.9821e-04,
          3.3664e-03, 3.2856e-03],
         [3.3015e-03, 3.5204e-03, 3.5027e-03,  ..., 3.0104e-06,
          3.3664e-03, 3.2856e-03],
         [3.3015e-03, 3.5204e-03, 3.5027e-03,  ..., 9.9980e-01,
          3.3664e-03, 3.2856e-03],
         [9.9010e-01, 9.8944e-01, 9.8949e-01,  ..., 3.0104e-06,
          9.8990e-01, 9.9014e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 637:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0047, 0.0048,  ..., 0.0048, 0.0048, 0.0046],
         [0.0047, 0.0047, 0.0048,  ..., 0.0048, 0.0048, 0.0046],
         [0.0047, 0.0047, 0.0048,  ..., 0.0048, 0.0048, 0.0046],
         [0.9860, 0.9860, 0.9856,  ..., 0.9857, 0.9857, 0.9862]],
        [[0.0041, 0.0043, 0.0042,  ..., 0.0045, 0.0044, 0.0041],
         [0.0041, 0.0043, 0.0042,  ..., 0.0045, 0.0044, 0.0041],
         [0.0041, 0.0043, 0.0042,  ..., 0.0045, 0.0044, 0.0041],
         [0.9878, 0.9870, 0.9874,  ..., 0.9866, 0.9867, 0.9877]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:25,430 [Process: 0] Synchronize training processes
2024-08-16 16:24:25,431 [Process: 0] Evaluating...
2024-08-16 16:24:25,433 [Process: 0] EPOCH 638:
2024-08-16 16:24:25,435 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3500e-03, 4.0446e-03, 3.2622e-03,  ..., 3.4157e-03,
          3.1661e-03, 3.3892e-03],
         [3.3500e-03, 4.0446e-03, 3.2622e-03,  ..., 3.4157e-03,
          3.1661e-03, 3.3892e-03],
         [3.3500e-03, 4.0446e-03, 3.2622e-03,  ..., 3.4157e-03,
          3.1661e-03, 3.3892e-03],
         [9.8995e-01, 9.8787e-01, 9.9021e-01,  ..., 9.8975e-01,
          9.9050e-01, 9.8983e-01]],
        [[3.1479e-03, 3.4220e-03, 3.5984e-03,  ..., 6.5845e-05,
          3.4191e-03, 3.2844e-03],
         [3.1479e-03, 3.4220e-03, 3.5984e-03,  ..., 2.7086e-07,
          3.4191e-03, 3.2844e-03],
         [3.1479e-03, 3.4220e-03, 3.5984e-03,  ..., 9.9993e-01,
          3.4191e-03, 3.2844e-03],
         [9.9056e-01, 9.8973e-01, 9.8920e-01,  ..., 2.7086e-07,
          9.8974e-01, 9.9015e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 638:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0047, 0.0046,  ..., 0.0045, 0.0048, 0.0047],
         [0.0047, 0.0047, 0.0046,  ..., 0.0045, 0.0048, 0.0047],
         [0.0047, 0.0047, 0.0046,  ..., 0.0045, 0.0048, 0.0047],
         [0.9859, 0.9858, 0.9861,  ..., 0.9865, 0.9857, 0.9859]],
        [[0.0045, 0.0044, 0.0042,  ..., 0.0044, 0.0042, 0.0046],
         [0.0045, 0.0044, 0.0042,  ..., 0.0044, 0.0042, 0.0046],
         [0.0045, 0.0044, 0.0042,  ..., 0.0044, 0.0042, 0.0046],
         [0.9866, 0.9868, 0.9873,  ..., 0.9867, 0.9873, 0.9862]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:27,465 [Process: 0] Synchronize training processes
2024-08-16 16:24:27,465 [Process: 0] Evaluating...
2024-08-16 16:24:27,467 [Process: 0] EPOCH 639:
2024-08-16 16:24:27,469 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3632e-03, 3.8069e-03, 3.3631e-03,  ..., 3.5066e-03,
          3.5185e-03, 3.5017e-03],
         [3.3632e-03, 3.8069e-03, 3.3631e-03,  ..., 3.5066e-03,
          3.5185e-03, 3.5017e-03],
         [3.3632e-03, 3.8069e-03, 3.3631e-03,  ..., 3.5066e-03,
          3.5185e-03, 3.5017e-03],
         [9.8991e-01, 9.8858e-01, 9.8991e-01,  ..., 9.8948e-01,
          9.8944e-01, 9.8949e-01]],
        [[3.4431e-03, 3.4847e-03, 3.3068e-03,  ..., 3.6457e-05,
          3.3980e-03, 3.6272e-03],
         [3.4431e-03, 3.4847e-03, 3.3068e-03,  ..., 1.0301e-06,
          3.3980e-03, 3.6272e-03],
         [3.4431e-03, 3.4847e-03, 3.3068e-03,  ..., 9.9996e-01,
          3.3980e-03, 3.6272e-03],
         [9.8967e-01, 9.8955e-01, 9.9008e-01,  ..., 1.0301e-06,
          9.8981e-01, 9.8912e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 639:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0048, 0.0046,  ..., 0.0045, 0.0047, 0.0048],
         [0.0048, 0.0048, 0.0046,  ..., 0.0045, 0.0047, 0.0048],
         [0.0048, 0.0048, 0.0046,  ..., 0.0045, 0.0047, 0.0048],
         [0.9856, 0.9856, 0.9861,  ..., 0.9864, 0.9858, 0.9856]],
        [[0.0047, 0.0043, 0.0041,  ..., 0.0043, 0.0044, 0.0043],
         [0.0047, 0.0043, 0.0041,  ..., 0.0043, 0.0044, 0.0043],
         [0.0047, 0.0043, 0.0041,  ..., 0.0043, 0.0044, 0.0043],
         [0.9860, 0.9870, 0.9876,  ..., 0.9871, 0.9869, 0.9872]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:29,438 [Process: 0] Synchronize training processes
2024-08-16 16:24:29,439 [Process: 0] Evaluating...
2024-08-16 16:24:29,441 [Process: 0] EPOCH 640:
2024-08-16 16:24:29,442 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2406e-03, 3.8976e-03, 3.1414e-03,  ..., 3.3747e-03,
          3.3067e-03, 3.0948e-03],
         [3.2406e-03, 3.8753e-03, 3.1414e-03,  ..., 3.3747e-03,
          3.3067e-03, 3.0948e-03],
         [3.2406e-03, 3.8753e-03, 3.1414e-03,  ..., 3.3747e-03,
          3.3067e-03, 3.0948e-03],
         [9.9028e-01, 9.8835e-01, 9.9058e-01,  ..., 9.8988e-01,
          9.9008e-01, 9.9072e-01]],
        [[3.4431e-03, 3.4664e-03, 3.2468e-03,  ..., 9.7965e-04,
          3.3144e-03, 3.2854e-03],
         [3.4431e-03, 3.4325e-03, 3.2432e-03,  ..., 3.4583e-04,
          3.3144e-03, 3.2854e-03],
         [3.4431e-03, 3.4325e-03, 3.2432e-03,  ..., 9.9833e-01,
          3.3144e-03, 3.2854e-03],
         [9.8967e-01, 9.8967e-01, 9.9027e-01,  ..., 3.4583e-04,
          9.9006e-01, 9.9014e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 640:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0047, 0.0046,  ..., 0.0047, 0.0048, 0.0047],
         [0.0047, 0.0047, 0.0046,  ..., 0.0047, 0.0048, 0.0047],
         [0.0047, 0.0047, 0.0046,  ..., 0.0047, 0.0048, 0.0047],
         [0.9859, 0.9858, 0.9861,  ..., 0.9859, 0.9857, 0.9860]],
        [[0.0042, 0.0043, 0.0040,  ..., 0.0043, 0.0042, 0.0045],
         [0.0042, 0.0043, 0.0040,  ..., 0.0043, 0.0042, 0.0045],
         [0.0042, 0.0043, 0.0040,  ..., 0.0043, 0.0042, 0.0045],
         [0.9875, 0.9871, 0.9879,  ..., 0.9872, 0.9875, 0.9866]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:31,489 [Process: 0] Synchronize training processes
2024-08-16 16:24:31,490 [Process: 0] Evaluating...
2024-08-16 16:24:31,492 [Process: 0] EPOCH 641:
2024-08-16 16:24:31,494 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4742e-03, 3.9040e-03, 3.5409e-03,  ..., 3.3944e-03,
          3.0723e-03, 3.1907e-03],
         [3.4238e-03, 3.8465e-03, 3.4925e-03,  ..., 3.3944e-03,
          3.0505e-03, 3.1907e-03],
         [3.4238e-03, 3.8465e-03, 3.4925e-03,  ..., 3.3944e-03,
          3.0505e-03, 3.1907e-03],
         [9.8968e-01, 9.8840e-01, 9.8947e-01,  ..., 9.8982e-01,
          9.9083e-01, 9.9043e-01]],
        [[3.5451e-03, 3.3900e-03, 3.6058e-03,  ..., 8.3660e-05,
          3.6246e-03, 3.3794e-03],
         [3.5451e-03, 3.3900e-03, 3.6058e-03,  ..., 1.6913e-06,
          3.6246e-03, 3.3794e-03],
         [3.5451e-03, 3.3900e-03, 3.6058e-03,  ..., 9.9991e-01,
          3.6246e-03, 3.3794e-03],
         [9.8936e-01, 9.8983e-01, 9.8918e-01,  ..., 1.6913e-06,
          9.8913e-01, 9.8986e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 641:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0049, 0.0046,  ..., 0.0047, 0.0048, 0.0047],
         [0.0046, 0.0049, 0.0046,  ..., 0.0047, 0.0048, 0.0047],
         [0.0046, 0.0049, 0.0046,  ..., 0.0047, 0.0048, 0.0047],
         [0.9861, 0.9852, 0.9861,  ..., 0.9859, 0.9857, 0.9858]],
        [[0.0039, 0.0042, 0.0041,  ..., 0.0042, 0.0042, 0.0043],
         [0.0039, 0.0042, 0.0041,  ..., 0.0042, 0.0042, 0.0043],
         [0.0039, 0.0042, 0.0041,  ..., 0.0042, 0.0042, 0.0043],
         [0.9884, 0.9875, 0.9877,  ..., 0.9873, 0.9874, 0.9872]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:33,484 [Process: 0] Synchronize training processes
2024-08-16 16:24:33,485 [Process: 0] Evaluating...
2024-08-16 16:24:33,493 [Process: 0] EPOCH 642:
2024-08-16 16:24:33,495 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1100e-03, 3.9073e-03, 3.5224e-03,  ..., 3.5968e-03,
          3.4904e-03, 3.4430e-03],
         [3.1100e-03, 3.9073e-03, 3.5224e-03,  ..., 3.5968e-03,
          3.4904e-03, 3.4430e-03],
         [3.1100e-03, 3.9073e-03, 3.5224e-03,  ..., 3.5968e-03,
          3.4904e-03, 3.4430e-03],
         [9.9067e-01, 9.8828e-01, 9.8943e-01,  ..., 9.8921e-01,
          9.8953e-01, 9.8967e-01]],
        [[3.7051e-03, 3.3831e-03, 3.6944e-03,  ..., 5.7654e-05,
          3.2754e-03, 3.3787e-03],
         [3.7051e-03, 3.3831e-03, 3.6944e-03,  ..., 4.3192e-06,
          3.2754e-03, 3.3787e-03],
         [3.7051e-03, 3.3831e-03, 3.6944e-03,  ..., 9.9993e-01,
          3.2754e-03, 3.3787e-03],
         [9.8888e-01, 9.8985e-01, 9.8892e-01,  ..., 4.3192e-06,
          9.9017e-01, 9.8986e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 642:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0049, 0.0046, 0.0048,  ..., 0.0046, 0.0047, 0.0046],
         [0.0049, 0.0046, 0.0048,  ..., 0.0046, 0.0047, 0.0046],
         [0.0049, 0.0046, 0.0048,  ..., 0.0046, 0.0047, 0.0046],
         [0.9852, 0.9863, 0.9856,  ..., 0.9862, 0.9859, 0.9861]],
        [[0.0040, 0.0039, 0.0042,  ..., 0.0043, 0.0042, 0.0041],
         [0.0040, 0.0039, 0.0042,  ..., 0.0043, 0.0042, 0.0041],
         [0.0040, 0.0039, 0.0042,  ..., 0.0043, 0.0042, 0.0041],
         [0.9879, 0.9884, 0.9873,  ..., 0.9872, 0.9875, 0.9877]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:35,541 [Process: 0] Synchronize training processes
2024-08-16 16:24:35,542 [Process: 0] Evaluating...
2024-08-16 16:24:35,544 [Process: 0] EPOCH 643:
2024-08-16 16:24:35,546 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.9617e-03, 3.8135e-03, 3.4113e-03,  ..., 3.2979e-03,
          3.5214e-03, 3.0544e-03],
         [2.9617e-03, 3.8135e-03, 3.4113e-03,  ..., 3.2979e-03,
          3.5214e-03, 3.0544e-03],
         [2.9617e-03, 3.8135e-03, 3.4113e-03,  ..., 3.2979e-03,
          3.5214e-03, 3.0544e-03],
         [9.9111e-01, 9.8856e-01, 9.8977e-01,  ..., 9.9011e-01,
          9.8944e-01, 9.9084e-01]],
        [[3.3169e-03, 3.2234e-03, 3.4339e-03,  ..., 8.6107e-05,
          3.6397e-03, 3.5220e-03],
         [3.3169e-03, 3.2234e-03, 3.4339e-03,  ..., 1.5979e-06,
          3.6397e-03, 3.5220e-03],
         [3.3169e-03, 3.2234e-03, 3.4339e-03,  ..., 9.9991e-01,
          3.6397e-03, 3.5220e-03],
         [9.9005e-01, 9.9033e-01, 9.8970e-01,  ..., 1.5979e-06,
          9.8908e-01, 9.8943e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 643:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0045, 0.0045,  ..., 0.0045, 0.0047, 0.0045],
         [0.0046, 0.0045, 0.0045,  ..., 0.0045, 0.0047, 0.0045],
         [0.0046, 0.0045, 0.0045,  ..., 0.0045, 0.0047, 0.0045],
         [0.9863, 0.9866, 0.9864,  ..., 0.9864, 0.9860, 0.9865]],
        [[0.0042, 0.0046, 0.0041,  ..., 0.0043, 0.0038, 0.0039],
         [0.0042, 0.0046, 0.0041,  ..., 0.0043, 0.0038, 0.0039],
         [0.0042, 0.0046, 0.0041,  ..., 0.0043, 0.0038, 0.0039],
         [0.9873, 0.9862, 0.9878,  ..., 0.9870, 0.9885, 0.9882]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4494e-03, 3.8135e-03, 3.0251e-03,  ..., 3.4319e-03,
          3.4768e-03, 3.3890e-03],
         [3.4494e-03, 3.8135e-03, 3.0251e-03,  ..., 3.4319e-03,
          3.4768e-03, 3.3890e-03],
         [3.4494e-03, 3.8135e-03, 3.0251e-03,  ..., 3.4319e-03,
          3.4768e-03, 3.3890e-03],
         [9.8965e-01, 9.8856e-01, 9.9092e-01,  ..., 9.8970e-01,
          9.8957e-01, 9.8983e-01]],
        [[3.3444e-03, 3.3003e-03, 3.5445e-03,  ..., 1.1616e-04,
          3.2652e-03, 3.5450e-03],
         [3.3444e-03, 3.3003e-03, 3.5445e-03,  ..., 2.8090e-06,
          3.2652e-03, 3.5450e-03],
         [3.3444e-03, 3.3003e-03, 3.5445e-03,  ..., 9.9988e-01,
          3.2652e-03, 3.5450e-03],
         [9.8997e-01, 9.9010e-01, 9.8937e-01,  ..., 2.8090e-06,
          9.9020e-01, 9.8936e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 644:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0046, 0.0046,  ..., 0.0047, 0.0047, 0.0047],
         [0.0047, 0.0046, 0.0046,  ..., 0.0047, 0.0047, 0.0047],
         [0.0047, 0.0046, 0.0046,  ..., 0.0047, 0.0047, 0.0047],
         [0.9859, 0.9861, 0.9861,  ..., 0.9860, 0.9860, 0.9860]],
        [[0.0041, 0.0040, 0.0042,  ..., 0.0043, 0.0041, 0.0041],
         [0.0041, 0.0040, 0.0042,  ..., 0.0043, 0.0041, 0.0041],
         [0.0041, 0.0040, 0.0042,  ..., 0.0043, 0.0041, 0.0041],
         [0.9877, 0.9881, 0.9873,  ..., 0.9871, 0.9876, 0.9876]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:37,630 [Process: 0] Synchronize training processes
2024-08-16 16:24:37,630 [Process: 0] Evaluating...
2024-08-16 16:24:37,632 [Process: 0] EPOCH 644:
2024-08-16 16:24:37,634 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2340e-03, 3.8371e-03, 3.2272e-03,  ..., 3.2762e-03,
          3.3006e-03, 3.5517e-03],
         [3.2340e-03, 3.8371e-03, 3.2272e-03,  ..., 3.2762e-03,
          3.3006e-03, 3.5517e-03],
         [3.2340e-03, 3.8371e-03, 3.2272e-03,  ..., 3.2762e-03,
          3.3006e-03, 3.5517e-03],
         [9.9030e-01, 9.8849e-01, 9.9032e-01,  ..., 9.9017e-01,
          9.9010e-01, 9.8934e-01]],
        [[3.5775e-03, 3.3260e-03, 3.4663e-03,  ..., 3.2482e-04,
          3.4870e-03, 3.0489e-03],
         [3.5775e-03, 3.3260e-03, 3.4663e-03,  ..., 1.0006e-05,
          3.4870e-03, 3.0489e-03],
         [3.5775e-03, 3.3260e-03, 3.4663e-03,  ..., 9.9966e-01,
          3.4870e-03, 3.0489e-03],
         [9.8927e-01, 9.9002e-01, 9.8960e-01,  ..., 1.0006e-05,
          9.8954e-01, 9.9085e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 645:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0049, 0.0046,  ..., 0.0048, 0.0048, 0.0048],
         [0.0047, 0.0049, 0.0046,  ..., 0.0048, 0.0048, 0.0048],
         [0.0047, 0.0049, 0.0046,  ..., 0.0048, 0.0048, 0.0048],
         [0.9860, 0.9854, 0.9863,  ..., 0.9857, 0.9856, 0.9857]],
        [[0.0043, 0.0041, 0.0044,  ..., 0.0042, 0.0043, 0.0044],
         [0.0043, 0.0041, 0.0044,  ..., 0.0042, 0.0043, 0.0044],
         [0.0043, 0.0041, 0.0044,  ..., 0.0042, 0.0043, 0.0044],
         [0.9872, 0.9876, 0.9869,  ..., 0.9875, 0.9871, 0.9868]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:39,732 [Process: 0] Synchronize training processes
2024-08-16 16:24:39,733 [Process: 0] Evaluating...
2024-08-16 16:24:39,735 [Process: 0] EPOCH 645:
2024-08-16 16:24:39,737 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2887e-03, 3.8224e-03, 3.4166e-03,  ..., 3.4374e-03,
          3.2258e-03, 3.4357e-03],
         [3.2887e-03, 3.8224e-03, 3.4166e-03,  ..., 3.4374e-03,
          3.2258e-03, 3.4357e-03],
         [3.2887e-03, 3.8224e-03, 3.4166e-03,  ..., 3.4374e-03,
          3.2258e-03, 3.4357e-03],
         [9.9013e-01, 9.8853e-01, 9.8975e-01,  ..., 9.8969e-01,
          9.9032e-01, 9.8969e-01]],
        [[3.5600e-03, 3.4997e-03, 3.7475e-03,  ..., 4.2066e-04,
          3.4651e-03, 3.3083e-03],
         [3.5600e-03, 3.4997e-03, 3.7475e-03,  ..., 7.2952e-06,
          3.4651e-03, 3.3083e-03],
         [3.5600e-03, 3.4997e-03, 3.7475e-03,  ..., 9.9956e-01,
          3.4651e-03, 3.3083e-03],
         [9.8932e-01, 9.8950e-01, 9.8876e-01,  ..., 7.2952e-06,
          9.8960e-01, 9.9008e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 646:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0047, 0.0048,  ..., 0.0048, 0.0046, 0.0046],
         [0.0046, 0.0047, 0.0048,  ..., 0.0048, 0.0046, 0.0046],
         [0.0046, 0.0047, 0.0048,  ..., 0.0048, 0.0046, 0.0046],
         [0.9861, 0.9858, 0.9857,  ..., 0.9857, 0.9861, 0.9862]],
        [[0.0042, 0.0041, 0.0041,  ..., 0.0043, 0.0043, 0.0042],
         [0.0042, 0.0041, 0.0041,  ..., 0.0043, 0.0043, 0.0042],
         [0.0042, 0.0041, 0.0041,  ..., 0.0043, 0.0043, 0.0042],
         [0.9875, 0.9876, 0.9876,  ..., 0.9870, 0.9870, 0.9873]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:41,831 [Process: 0] Synchronize training processes
2024-08-16 16:24:41,831 [Process: 0] Evaluating...
2024-08-16 16:24:41,833 [Process: 0] EPOCH 646:
2024-08-16 16:24:41,835 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.0986e-03, 3.6826e-03, 3.1743e-03,  ..., 3.4295e-03,
          3.4362e-03, 3.4279e-03],
         [3.0986e-03, 3.6826e-03, 3.1743e-03,  ..., 3.4295e-03,
          3.4362e-03, 3.4279e-03],
         [3.0986e-03, 3.6826e-03, 3.1743e-03,  ..., 3.4295e-03,
          3.4362e-03, 3.4279e-03],
         [9.9070e-01, 9.8895e-01, 9.9048e-01,  ..., 9.8971e-01,
          9.8969e-01, 9.8972e-01]],
        [[3.3210e-03, 3.3201e-03, 3.2714e-03,  ..., 1.0165e-04,
          3.4356e-03, 3.8075e-03],
         [3.3210e-03, 3.3201e-03, 3.2714e-03,  ..., 2.4813e-06,
          3.4356e-03, 3.8075e-03],
         [3.3210e-03, 3.3201e-03, 3.2714e-03,  ..., 9.9989e-01,
          3.4356e-03, 3.8075e-03],
         [9.9004e-01, 9.9004e-01, 9.9019e-01,  ..., 2.4813e-06,
          9.8969e-01, 9.8858e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 647:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0046, 0.0045,  ..., 0.0046, 0.0044, 0.0045],
         [0.0045, 0.0046, 0.0045,  ..., 0.0046, 0.0044, 0.0045],
         [0.0045, 0.0046, 0.0045,  ..., 0.0046, 0.0044, 0.0045],
         [0.9865, 0.9861, 0.9866,  ..., 0.9862, 0.9868, 0.9864]],
        [[0.0042, 0.0046, 0.0044,  ..., 0.0042, 0.0044, 0.0043],
         [0.0042, 0.0046, 0.0044,  ..., 0.0042, 0.0044, 0.0043],
         [0.0042, 0.0046, 0.0044,  ..., 0.0042, 0.0044, 0.0043],
         [0.9875, 0.9863, 0.9868,  ..., 0.9875, 0.9867, 0.9870]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:43,919 [Process: 0] Synchronize training processes
2024-08-16 16:24:43,919 [Process: 0] Evaluating...
2024-08-16 16:24:43,921 [Process: 0] EPOCH 647:
2024-08-16 16:24:43,923 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3594e-03, 3.8388e-03, 3.2437e-03,  ..., 3.3676e-03,
          3.2479e-03, 3.1976e-03],
         [3.3594e-03, 3.8388e-03, 3.2437e-03,  ..., 3.3676e-03,
          3.2479e-03, 3.1976e-03],
         [3.3594e-03, 3.8388e-03, 3.2437e-03,  ..., 3.3676e-03,
          3.2479e-03, 3.1976e-03],
         [9.8992e-01, 9.8848e-01, 9.9027e-01,  ..., 9.8990e-01,
          9.9026e-01, 9.9041e-01]],
        [[3.1879e-03, 3.3584e-03, 3.2406e-03,  ..., 1.6675e-04,
          3.3806e-03, 3.1922e-03],
         [3.1879e-03, 3.3584e-03, 3.2406e-03,  ..., 2.4404e-05,
          3.3806e-03, 3.1922e-03],
         [3.1879e-03, 3.3584e-03, 3.2406e-03,  ..., 9.9978e-01,
          3.3806e-03, 3.1922e-03],
         [9.9044e-01, 9.8992e-01, 9.9028e-01,  ..., 2.4404e-05,
          9.8986e-01, 9.9042e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 648:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:46,046 [Process: 0] Synchronize training processes
2024-08-16 16:24:46,046 [Process: 0] Evaluating...
2024-08-16 16:24:46,048 [Process: 0] EPOCH 648:
2024-08-16 16:24:46,050 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.0044, 0.0044, 0.0044,  ..., 0.0043, 0.0044, 0.0042],
         [0.0044, 0.0044, 0.0044,  ..., 0.0043, 0.0044, 0.0042],
         [0.0044, 0.0044, 0.0044,  ..., 0.0043, 0.0044, 0.0042],
         [0.9868, 0.9868, 0.9869,  ..., 0.9870, 0.9869, 0.9874]],
        [[0.0043, 0.0050, 0.0048,  ..., 0.0041, 0.0045, 0.0047],
         [0.0043, 0.0050, 0.0048,  ..., 0.0041, 0.0045, 0.0047],
         [0.0043, 0.0050, 0.0048,  ..., 0.0041, 0.0045, 0.0047],
         [0.9870, 0.9850, 0.9856,  ..., 0.9878, 0.9866, 0.9858]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5454e-03, 3.7583e-03, 3.5188e-03,  ..., 3.5023e-03,
          3.3850e-03, 3.3627e-03],
         [3.5454e-03, 3.7583e-03, 3.5188e-03,  ..., 3.5023e-03,
          3.3850e-03, 3.3627e-03],
         [3.5454e-03, 3.7583e-03, 3.5188e-03,  ..., 3.5023e-03,
          3.3850e-03, 3.3627e-03],
         [9.8936e-01, 9.8872e-01, 9.8944e-01,  ..., 9.8949e-01,
          9.8984e-01, 9.8991e-01]],
        [[3.3458e-03, 3.2773e-03, 3.2969e-03,  ..., 2.3646e-06,
          3.3728e-03, 3.3094e-03],
         [3.3458e-03, 3.2773e-03, 3.2969e-03,  ..., 1.0422e-08,
          3.3728e-03, 3.3094e-03],
         [3.3458e-03, 3.2773e-03, 3.2969e-03,  ..., 1.0000e+00,
          3.3728e-03, 3.3094e-03],
         [9.8996e-01, 9.9017e-01, 9.9011e-01,  ..., 1.0422e-08,
          9.8988e-01, 9.9007e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 649:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:24:48,103 [Process: 0] Synchronize training processes
2024-08-16 16:24:48,104 [Process: 0] Evaluating...
2024-08-16 16:24:48,106 [Process: 0] EPOCH 649:
2024-08-16 16:24:48,107 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0047, 0.0045,  ..., 0.0045, 0.0047, 0.0046],
         [0.0046, 0.0047, 0.0045,  ..., 0.0045, 0.0047, 0.0046],
         [0.0046, 0.0047, 0.0045,  ..., 0.0045, 0.0047, 0.0046],
         [0.9861, 0.9859, 0.9864,  ..., 0.9864, 0.9860, 0.9863]],
        [[0.0044, 0.0041, 0.0043,  ..., 0.0042, 0.0038, 0.0041],
         [0.0044, 0.0041, 0.0043,  ..., 0.0042, 0.0038, 0.0041],
         [0.0044, 0.0041, 0.0043,  ..., 0.0042, 0.0038, 0.0041],
         [0.9869, 0.9876, 0.9872,  ..., 0.9875, 0.9885, 0.9876]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4102e-03, 3.6473e-03, 3.1487e-03,  ..., 3.4647e-03,
          3.2696e-03, 3.1881e-03],
         [3.4102e-03, 3.6473e-03, 3.1487e-03,  ..., 3.4647e-03,
          3.2696e-03, 3.1881e-03],
         [3.4102e-03, 3.6473e-03, 3.1487e-03,  ..., 3.4647e-03,
          3.2696e-03, 3.1881e-03],
         [9.8977e-01, 9.8906e-01, 9.9055e-01,  ..., 9.8961e-01,
          9.9019e-01, 9.9044e-01]],
        [[3.4448e-03, 3.3019e-03, 3.3797e-03,  ..., 2.3307e-05,
          3.1327e-03, 3.5166e-03],
         [3.4448e-03, 3.3019e-03, 3.3797e-03,  ..., 2.9593e-07,
          3.1327e-03, 3.5166e-03],
         [3.4448e-03, 3.3019e-03, 3.3797e-03,  ..., 9.9998e-01,
          3.1327e-03, 3.5166e-03],
         [9.8967e-01, 9.9009e-01, 9.8986e-01,  ..., 2.9593e-07,
          9.9060e-01, 9.8945e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 650:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0046, 0.0048,  ..., 0.0046, 0.0048, 0.0047],
         [0.0046, 0.0046, 0.0048,  ..., 0.0046, 0.0048, 0.0047],
         [0.0046, 0.0046, 0.0048,  ..., 0.0046, 0.0048, 0.0047],
         [0.9861, 0.9862, 0.9856,  ..., 0.9861, 0.9857, 0.9859]],
        [[0.0040, 0.0044, 0.0038,  ..., 0.0042, 0.0044, 0.0042],
         [0.0040, 0.0044, 0.0038,  ..., 0.0042, 0.0044, 0.0042],
         [0.0040, 0.0044, 0.0038,  ..., 0.0042, 0.0044, 0.0042],
         [0.9880, 0.9869, 0.9885,  ..., 0.9874, 0.9869, 0.9873]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:24:50,101 [Process: 0] Synchronize training processes
2024-08-16 16:24:50,101 [Process: 0] Evaluating...
2024-08-16 16:24:50,103 [Process: 0] EPOCH 650:
2024-08-16 16:24:50,105 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4702e-03, 3.7329e-03, 3.4775e-03,  ..., 3.3689e-03,
          3.0708e-03, 3.2320e-03],
         [3.4702e-03, 3.7329e-03, 3.4775e-03,  ..., 3.3689e-03,
          3.0708e-03, 3.2320e-03],
         [3.4702e-03, 3.7329e-03, 3.4775e-03,  ..., 3.3689e-03,
          3.0708e-03, 3.2320e-03],
         [9.8959e-01, 9.8880e-01, 9.8957e-01,  ..., 9.8989e-01,
          9.9079e-01, 9.9030e-01]],
        [[3.2524e-03, 3.3597e-03, 3.3419e-03,  ..., 1.1546e-05,
          3.2315e-03, 3.2102e-03],
         [3.2524e-03, 3.3597e-03, 3.3419e-03,  ..., 1.7382e-08,
          3.2315e-03, 3.2102e-03],
         [3.2524e-03, 3.3597e-03, 3.3419e-03,  ..., 9.9999e-01,
          3.2315e-03, 3.2102e-03],
         [9.9024e-01, 9.8992e-01, 9.8997e-01,  ..., 1.7382e-08,
          9.9031e-01, 9.9037e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 651:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:24:52,109 [Process: 0] Synchronize training processes
2024-08-16 16:24:52,110 [Process: 0] Evaluating...
2024-08-16 16:24:52,112 [Process: 0] EPOCH 651:
2024-08-16 16:24:52,114 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0047, 0.0047,  ..., 0.0046, 0.0047, 0.0046],
         [0.0047, 0.0047, 0.0047,  ..., 0.0046, 0.0047, 0.0046],
         [0.0047, 0.0047, 0.0047,  ..., 0.0046, 0.0047, 0.0046],
         [0.9860, 0.9858, 0.9859,  ..., 0.9861, 0.9860, 0.9861]],
        [[0.0043, 0.0040, 0.0039,  ..., 0.0043, 0.0042, 0.0041],
         [0.0043, 0.0040, 0.0039,  ..., 0.0043, 0.0042, 0.0041],
         [0.0043, 0.0040, 0.0039,  ..., 0.0043, 0.0042, 0.0041],
         [0.9872, 0.9881, 0.9882,  ..., 0.9872, 0.9873, 0.9878]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2776e-03, 3.7694e-03, 3.2402e-03,  ..., 3.1160e-03,
          3.0904e-03, 3.2219e-03],
         [3.2776e-03, 3.7694e-03, 3.2402e-03,  ..., 3.1160e-03,
          3.0904e-03, 3.2219e-03],
         [3.2776e-03, 3.7694e-03, 3.2402e-03,  ..., 3.1160e-03,
          3.0904e-03, 3.2219e-03],
         [9.9017e-01, 9.8869e-01, 9.9028e-01,  ..., 9.9065e-01,
          9.9073e-01, 9.9033e-01]],
        [[3.4442e-03, 3.4525e-03, 3.2704e-03,  ..., 1.2008e-04,
          3.4955e-03, 3.4843e-03],
         [3.4442e-03, 3.4525e-03, 3.2704e-03,  ..., 2.2013e-06,
          3.4955e-03, 3.4843e-03],
         [3.4442e-03, 3.4525e-03, 3.2704e-03,  ..., 9.9988e-01,
          3.4955e-03, 3.4843e-03],
         [9.8967e-01, 9.8964e-01, 9.9019e-01,  ..., 2.2013e-06,
          9.8951e-01, 9.8955e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 652:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:24:54,187 [Process: 0] Synchronize training processes
2024-08-16 16:24:54,187 [Process: 0] Evaluating...
2024-08-16 16:24:54,196 [Process: 0] EPOCH 652:
2024-08-16 16:24:54,198 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0045, 0.0044,  ..., 0.0044, 0.0046, 0.0046],
         [0.0046, 0.0045, 0.0044,  ..., 0.0044, 0.0046, 0.0046],
         [0.0046, 0.0045, 0.0044,  ..., 0.0044, 0.0046, 0.0046],
         [0.9863, 0.9864, 0.9867,  ..., 0.9868, 0.9861, 0.9861]],
        [[0.0042, 0.0043, 0.0042,  ..., 0.0043, 0.0042, 0.0038],
         [0.0042, 0.0043, 0.0042,  ..., 0.0043, 0.0042, 0.0038],
         [0.0042, 0.0043, 0.0042,  ..., 0.0043, 0.0042, 0.0038],
         [0.9875, 0.9870, 0.9873,  ..., 0.9872, 0.9875, 0.9885]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2046e-03, 3.8609e-03, 3.4523e-03,  ..., 3.2923e-03,
          3.4861e-03, 3.3493e-03],
         [3.2046e-03, 3.8609e-03, 3.4523e-03,  ..., 3.2923e-03,
          3.4861e-03, 3.3493e-03],
         [3.2046e-03, 3.8609e-03, 3.4523e-03,  ..., 3.2923e-03,
          3.4861e-03, 3.3493e-03],
         [9.9039e-01, 9.8842e-01, 9.8964e-01,  ..., 9.9012e-01,
          9.8954e-01, 9.8995e-01]],
        [[3.3886e-03, 3.5134e-03, 3.4039e-03,  ..., 2.2953e-05,
          3.3215e-03, 3.1710e-03],
         [3.3886e-03, 3.5134e-03, 3.4039e-03,  ..., 7.4400e-08,
          3.3215e-03, 3.1710e-03],
         [3.3886e-03, 3.5134e-03, 3.4039e-03,  ..., 9.9998e-01,
          3.3215e-03, 3.1710e-03],
         [9.8983e-01, 9.8946e-01, 9.8979e-01,  ..., 7.4400e-08,
          9.9004e-01, 9.9049e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 653:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:24:56,261 [Process: 0] Synchronize training processes
2024-08-16 16:24:56,261 [Process: 0] Evaluating...
2024-08-16 16:24:56,263 [Process: 0] EPOCH 653:
2024-08-16 16:24:56,265 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0044, 0.0047, 0.0046,  ..., 0.0045, 0.0046, 0.0045],
         [0.0044, 0.0047, 0.0046,  ..., 0.0045, 0.0046, 0.0045],
         [0.0044, 0.0047, 0.0046,  ..., 0.0045, 0.0046, 0.0045],
         [0.9867, 0.9860, 0.9863,  ..., 0.9864, 0.9863, 0.9864]],
        [[0.0044, 0.0043, 0.0041,  ..., 0.0040, 0.0042, 0.0042],
         [0.0044, 0.0043, 0.0041,  ..., 0.0040, 0.0042, 0.0042],
         [0.0044, 0.0043, 0.0041,  ..., 0.0040, 0.0042, 0.0042],
         [0.9869, 0.9870, 0.9877,  ..., 0.9880, 0.9875, 0.9874]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1027e-03, 3.6713e-03, 3.0633e-03,  ..., 3.5326e-03,
          3.5236e-03, 3.4189e-03],
         [3.1027e-03, 3.6713e-03, 3.0633e-03,  ..., 3.5326e-03,
          3.5236e-03, 3.4189e-03],
         [3.1027e-03, 3.6713e-03, 3.0633e-03,  ..., 3.5326e-03,
          3.5236e-03, 3.4189e-03],
         [9.9069e-01, 9.8899e-01, 9.9081e-01,  ..., 9.8940e-01,
          9.8943e-01, 9.8974e-01]],
        [[3.2467e-03, 3.6245e-03, 3.2596e-03,  ..., 3.8587e-05,
          3.4100e-03, 3.3397e-03],
         [3.2467e-03, 3.6245e-03, 3.2596e-03,  ..., 2.4592e-07,
          3.4100e-03, 3.3397e-03],
         [3.2467e-03, 3.6245e-03, 3.2596e-03,  ..., 9.9996e-01,
          3.4100e-03, 3.3397e-03],
         [9.9026e-01, 9.8913e-01, 9.9022e-01,  ..., 2.4592e-07,
          9.8977e-01, 9.8998e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 654:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:24:58,245 [Process: 0] Synchronize training processes
2024-08-16 16:24:58,245 [Process: 0] Evaluating...
2024-08-16 16:24:58,247 [Process: 0] EPOCH 654:
2024-08-16 16:24:58,249 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0047, 0.0045,  ..., 0.0045, 0.0045, 0.0046],
         [0.0046, 0.0047, 0.0045,  ..., 0.0045, 0.0045, 0.0046],
         [0.0046, 0.0047, 0.0045,  ..., 0.0045, 0.0045, 0.0046],
         [0.9862, 0.9860, 0.9865,  ..., 0.9866, 0.9866, 0.9862]],
        [[0.0040, 0.0043, 0.0042,  ..., 0.0041, 0.0043, 0.0041],
         [0.0040, 0.0043, 0.0042,  ..., 0.0041, 0.0043, 0.0041],
         [0.0040, 0.0043, 0.0042,  ..., 0.0041, 0.0043, 0.0041],
         [0.9881, 0.9871, 0.9875,  ..., 0.9876, 0.9871, 0.9877]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3540e-03, 3.8378e-03, 3.0926e-03,  ..., 3.2880e-03,
          3.2316e-03, 3.3035e-03],
         [3.3540e-03, 3.8378e-03, 3.0926e-03,  ..., 3.2880e-03,
          3.2316e-03, 3.3035e-03],
         [3.3540e-03, 3.8378e-03, 3.0926e-03,  ..., 3.2880e-03,
          3.2316e-03, 3.3035e-03],
         [9.8994e-01, 9.8849e-01, 9.9072e-01,  ..., 9.9014e-01,
          9.9031e-01, 9.9009e-01]],
        [[3.2370e-03, 3.5323e-03, 3.4247e-03,  ..., 3.6984e-04,
          3.3063e-03, 3.1432e-03],
         [3.2370e-03, 3.5323e-03, 3.4247e-03,  ..., 1.3944e-05,
          3.3063e-03, 3.1432e-03],
         [3.2370e-03, 3.5323e-03, 3.4247e-03,  ..., 9.9960e-01,
          3.3063e-03, 3.1432e-03],
         [9.9029e-01, 9.8940e-01, 9.8973e-01,  ..., 1.3944e-05,
          9.9008e-01, 9.9057e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 655:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:00,276 [Process: 0] Synchronize training processes
2024-08-16 16:25:00,276 [Process: 0] Evaluating...
2024-08-16 16:25:00,278 [Process: 0] EPOCH 655:
2024-08-16 16:25:00,280 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0046, 0.0045,  ..., 0.0044, 0.0046, 0.0046],
         [0.0045, 0.0046, 0.0045,  ..., 0.0044, 0.0046, 0.0046],
         [0.0045, 0.0046, 0.0045,  ..., 0.0044, 0.0046, 0.0046],
         [0.9865, 0.9861, 0.9864,  ..., 0.9867, 0.9861, 0.9862]],
        [[0.0040, 0.0038, 0.0040,  ..., 0.0041, 0.0041, 0.0040],
         [0.0040, 0.0038, 0.0040,  ..., 0.0041, 0.0041, 0.0040],
         [0.0040, 0.0038, 0.0040,  ..., 0.0041, 0.0041, 0.0040],
         [0.9880, 0.9886, 0.9879,  ..., 0.9877, 0.9876, 0.9881]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1899e-03, 3.7558e-03, 3.2218e-03,  ..., 3.1326e-03,
          3.0341e-03, 3.1521e-03],
         [3.1899e-03, 3.7558e-03, 3.2218e-03,  ..., 3.1326e-03,
          3.0341e-03, 3.1521e-03],
         [3.1899e-03, 3.7558e-03, 3.2218e-03,  ..., 3.1326e-03,
          3.0341e-03, 3.1521e-03],
         [9.9043e-01, 9.8873e-01, 9.9033e-01,  ..., 9.9060e-01,
          9.9090e-01, 9.9054e-01]],
        [[3.3449e-03, 3.3415e-03, 3.4500e-03,  ..., 8.7861e-05,
          3.3164e-03, 3.4517e-03],
         [3.3449e-03, 3.3415e-03, 3.4500e-03,  ..., 1.2258e-05,
          3.3164e-03, 3.4517e-03],
         [3.3449e-03, 3.3415e-03, 3.4500e-03,  ..., 9.9989e-01,
          3.3164e-03, 3.4517e-03],
         [9.8997e-01, 9.8998e-01, 9.8965e-01,  ..., 1.2258e-05,
          9.9005e-01, 9.8965e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 656:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:02,372 [Process: 0] Synchronize training processes
2024-08-16 16:25:02,373 [Process: 0] Evaluating...
2024-08-16 16:25:02,375 [Process: 0] EPOCH 656:
2024-08-16 16:25:02,376 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0047, 0.0045,  ..., 0.0046, 0.0045, 0.0047],
         [0.0046, 0.0047, 0.0045,  ..., 0.0046, 0.0045, 0.0047],
         [0.0046, 0.0047, 0.0045,  ..., 0.0046, 0.0045, 0.0047],
         [0.9863, 0.9860, 0.9864,  ..., 0.9862, 0.9865, 0.9859]],
        [[0.0042, 0.0041, 0.0041,  ..., 0.0042, 0.0041, 0.0044],
         [0.0042, 0.0041, 0.0041,  ..., 0.0042, 0.0041, 0.0044],
         [0.0042, 0.0041, 0.0041,  ..., 0.0042, 0.0041, 0.0044],
         [0.9874, 0.9878, 0.9876,  ..., 0.9873, 0.9878, 0.9867]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2338e-03, 3.6958e-03, 3.2053e-03,  ..., 3.1232e-03,
          3.1802e-03, 3.2882e-03],
         [3.1824e-03, 3.6603e-03, 3.1652e-03,  ..., 3.1110e-03,
          3.1802e-03, 3.2858e-03],
         [3.1824e-03, 3.6603e-03, 3.1652e-03,  ..., 3.1110e-03,
          3.1802e-03, 3.2858e-03],
         [9.9040e-01, 9.8898e-01, 9.9046e-01,  ..., 9.9065e-01,
          9.9046e-01, 9.9014e-01]],
        [[3.0982e-03, 3.4379e-03, 3.2888e-03,  ..., 1.3795e-05,
          3.1997e-03, 3.5633e-03],
         [3.0766e-03, 3.4234e-03, 3.2888e-03,  ..., 3.8057e-08,
          3.1997e-03, 3.5633e-03],
         [3.0766e-03, 3.4234e-03, 3.2888e-03,  ..., 9.9999e-01,
          3.1997e-03, 3.5633e-03],
         [9.9075e-01, 9.8972e-01, 9.9013e-01,  ..., 3.8057e-08,
          9.9040e-01, 9.8931e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 657:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:04,434 [Process: 0] Synchronize training processes
2024-08-16 16:25:04,434 [Process: 0] Evaluating...
2024-08-16 16:25:04,436 [Process: 0] EPOCH 657:
2024-08-16 16:25:04,440 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0045, 0.0044,  ..., 0.0047, 0.0046, 0.0045],
         [0.0046, 0.0045, 0.0044,  ..., 0.0047, 0.0046, 0.0045],
         [0.0046, 0.0045, 0.0044,  ..., 0.0047, 0.0046, 0.0045],
         [0.9862, 0.9865, 0.9869,  ..., 0.9860, 0.9861, 0.9864]],
        [[0.0040, 0.0039, 0.0042,  ..., 0.0039, 0.0042, 0.0040],
         [0.0040, 0.0039, 0.0042,  ..., 0.0039, 0.0042, 0.0040],
         [0.0040, 0.0039, 0.0042,  ..., 0.0039, 0.0042, 0.0040],
         [0.9879, 0.9883, 0.9874,  ..., 0.9883, 0.9874, 0.9880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1564e-03, 3.6686e-03, 3.3037e-03,  ..., 3.1900e-03,
          3.4607e-03, 3.4682e-03],
         [3.1564e-03, 3.6680e-03, 3.3037e-03,  ..., 3.1624e-03,
          3.4607e-03, 3.4682e-03],
         [3.1564e-03, 3.6680e-03, 3.3037e-03,  ..., 3.1624e-03,
          3.4607e-03, 3.4682e-03],
         [9.9053e-01, 9.8900e-01, 9.9009e-01,  ..., 9.9049e-01,
          9.8962e-01, 9.8960e-01]],
        [[3.2828e-03, 3.6019e-03, 3.3863e-03,  ..., 1.5215e-04,
          3.1722e-03, 3.0832e-03],
         [3.2828e-03, 3.5898e-03, 3.3863e-03,  ..., 1.2823e-05,
          3.1722e-03, 3.0832e-03],
         [3.2828e-03, 3.5898e-03, 3.3863e-03,  ..., 9.9982e-01,
          3.1722e-03, 3.0832e-03],
         [9.9015e-01, 9.8922e-01, 9.8984e-01,  ..., 1.2823e-05,
          9.9048e-01, 9.9075e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 658:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:06,362 [Process: 0] Synchronize training processes
2024-08-16 16:25:06,362 [Process: 0] Evaluating...
2024-08-16 16:25:06,364 [Process: 0] EPOCH 658:
2024-08-16 16:25:06,366 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0044, 0.0046, 0.0045,  ..., 0.0044, 0.0046, 0.0046],
         [0.0044, 0.0046, 0.0045,  ..., 0.0044, 0.0046, 0.0046],
         [0.0044, 0.0046, 0.0045,  ..., 0.0044, 0.0046, 0.0046],
         [0.9867, 0.9863, 0.9864,  ..., 0.9867, 0.9861, 0.9863]],
        [[0.0041, 0.0042, 0.0042,  ..., 0.0040, 0.0042, 0.0039],
         [0.0041, 0.0042, 0.0042,  ..., 0.0040, 0.0042, 0.0039],
         [0.0041, 0.0042, 0.0042,  ..., 0.0040, 0.0042, 0.0039],
         [0.9878, 0.9873, 0.9874,  ..., 0.9879, 0.9874, 0.9884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1034e-03, 3.7364e-03, 3.2386e-03,  ..., 3.1013e-03,
          3.1464e-03, 3.3002e-03],
         [3.1034e-03, 3.7364e-03, 3.2386e-03,  ..., 3.1013e-03,
          3.1464e-03, 3.3002e-03],
         [3.1034e-03, 3.7364e-03, 3.2386e-03,  ..., 3.1013e-03,
          3.1464e-03, 3.3002e-03],
         [9.9069e-01, 9.8879e-01, 9.9028e-01,  ..., 9.9070e-01,
          9.9056e-01, 9.9010e-01]],
        [[3.4701e-03, 3.5889e-03, 3.1103e-03,  ..., 2.7230e-05,
          3.1650e-03, 3.5484e-03],
         [3.4701e-03, 3.5889e-03, 3.1103e-03,  ..., 2.1214e-07,
          3.1650e-03, 3.5484e-03],
         [3.4701e-03, 3.5889e-03, 3.1103e-03,  ..., 9.9997e-01,
          3.1650e-03, 3.5484e-03],
         [9.8959e-01, 9.8923e-01, 9.9067e-01,  ..., 2.1214e-07,
          9.9050e-01, 9.8935e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 659:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:25:08,276 [Process: 0] Synchronize training processes
2024-08-16 16:25:08,277 [Process: 0] Evaluating...
2024-08-16 16:25:08,278 [Process: 0] EPOCH 659:
2024-08-16 16:25:08,280 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0045, 0.0046,  ..., 0.0045, 0.0046, 0.0046],
         [0.0046, 0.0045, 0.0046,  ..., 0.0045, 0.0046, 0.0046],
         [0.0046, 0.0045, 0.0046,  ..., 0.0045, 0.0046, 0.0046],
         [0.9862, 0.9864, 0.9861,  ..., 0.9865, 0.9861, 0.9863]],
        [[0.0040, 0.0038, 0.0040,  ..., 0.0040, 0.0039, 0.0042],
         [0.0040, 0.0038, 0.0040,  ..., 0.0040, 0.0039, 0.0042],
         [0.0040, 0.0038, 0.0040,  ..., 0.0040, 0.0039, 0.0042],
         [0.9881, 0.9886, 0.9879,  ..., 0.9879, 0.9883, 0.9874]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3538e-03, 3.7295e-03, 3.3810e-03,  ..., 3.5136e-03,
          3.1993e-03, 3.5337e-03],
         [3.3538e-03, 3.7295e-03, 3.3810e-03,  ..., 3.5136e-03,
          3.1993e-03, 3.5337e-03],
         [3.3538e-03, 3.7295e-03, 3.3810e-03,  ..., 3.5136e-03,
          3.1993e-03, 3.5337e-03],
         [9.8994e-01, 9.8881e-01, 9.8986e-01,  ..., 9.8946e-01,
          9.9040e-01, 9.8940e-01]],
        [[3.1740e-03, 3.3661e-03, 3.2626e-03,  ..., 9.6596e-05,
          3.5167e-03, 3.3572e-03],
         [3.1740e-03, 3.3661e-03, 3.2626e-03,  ..., 3.4571e-06,
          3.5167e-03, 3.3572e-03],
         [3.1740e-03, 3.3661e-03, 3.2626e-03,  ..., 9.9990e-01,
          3.5167e-03, 3.3572e-03],
         [9.9048e-01, 9.8990e-01, 9.9021e-01,  ..., 3.4571e-06,
          9.8945e-01, 9.8993e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 660:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:25:10,194 [Process: 0] Synchronize training processes
2024-08-16 16:25:10,194 [Process: 0] Evaluating...
2024-08-16 16:25:10,196 [Process: 0] EPOCH 660:
2024-08-16 16:25:10,198 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.0045, 0.0047, 0.0046,  ..., 0.0045, 0.0046, 0.0045],
         [0.0045, 0.0047, 0.0046,  ..., 0.0045, 0.0046, 0.0045],
         [0.0045, 0.0047, 0.0046,  ..., 0.0045, 0.0046, 0.0045],
         [0.9865, 0.9860, 0.9862,  ..., 0.9864, 0.9862, 0.9864]],
        [[0.0039, 0.0043, 0.0040,  ..., 0.0036, 0.0043, 0.0040],
         [0.0039, 0.0043, 0.0040,  ..., 0.0036, 0.0043, 0.0040],
         [0.0039, 0.0043, 0.0040,  ..., 0.0036, 0.0043, 0.0040],
         [0.9882, 0.9872, 0.9881,  ..., 0.9891, 0.9872, 0.9879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1324e-03, 3.7014e-03, 3.3574e-03,  ..., 3.1355e-03,
          2.8987e-03, 3.2273e-03],
         [3.1324e-03, 3.7014e-03, 3.3574e-03,  ..., 3.1355e-03,
          2.8987e-03, 3.2273e-03],
         [3.1324e-03, 3.7014e-03, 3.3574e-03,  ..., 3.1355e-03,
          2.8987e-03, 3.2273e-03],
         [9.9060e-01, 9.8890e-01, 9.8993e-01,  ..., 9.9059e-01,
          9.9130e-01, 9.9032e-01]],
        [[3.1252e-03, 3.4356e-03, 3.2119e-03,  ..., 2.0267e-04,
          3.3673e-03, 3.3793e-03],
         [3.1252e-03, 3.4356e-03, 3.2119e-03,  ..., 1.6263e-06,
          3.3673e-03, 3.3793e-03],
         [3.1252e-03, 3.4356e-03, 3.2119e-03,  ..., 9.9979e-01,
          3.3673e-03, 3.3793e-03],
         [9.9062e-01, 9.8969e-01, 9.9036e-01,  ..., 1.6263e-06,
          9.8990e-01, 9.8986e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 661:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:25:12,159 [Process: 0] Synchronize training processes
2024-08-16 16:25:12,159 [Process: 0] Evaluating...
2024-08-16 16:25:12,161 [Process: 0] EPOCH 661:
2024-08-16 16:25:12,163 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.0046, 0.0045, 0.0046,  ..., 0.0045, 0.0045, 0.0044],
         [0.0046, 0.0045, 0.0046,  ..., 0.0045, 0.0045, 0.0044],
         [0.0046, 0.0045, 0.0046,  ..., 0.0045, 0.0045, 0.0044],
         [0.9862, 0.9864, 0.9863,  ..., 0.9865, 0.9864, 0.9868]],
        [[0.0040, 0.0042, 0.0042,  ..., 0.0040, 0.0042, 0.0040],
         [0.0040, 0.0042, 0.0042,  ..., 0.0040, 0.0042, 0.0040],
         [0.0040, 0.0042, 0.0042,  ..., 0.0040, 0.0042, 0.0040],
         [0.9880, 0.9874, 0.9875,  ..., 0.9880, 0.9874, 0.9880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3896e-03, 3.6411e-03, 3.3839e-03,  ..., 3.2298e-03,
          3.1756e-03, 3.0975e-03],
         [3.3896e-03, 3.6411e-03, 3.3839e-03,  ..., 3.2298e-03,
          3.1756e-03, 3.0975e-03],
         [3.3896e-03, 3.6411e-03, 3.3839e-03,  ..., 3.2298e-03,
          3.1756e-03, 3.0975e-03],
         [9.8983e-01, 9.8908e-01, 9.8985e-01,  ..., 9.9031e-01,
          9.9047e-01, 9.9071e-01]],
        [[3.2330e-03, 3.3681e-03, 3.0978e-03,  ..., 5.2647e-05,
          3.3171e-03, 3.4112e-03],
         [3.2330e-03, 3.3681e-03, 3.0978e-03,  ..., 1.4809e-06,
          3.3171e-03, 3.4112e-03],
         [3.2330e-03, 3.3681e-03, 3.0978e-03,  ..., 9.9994e-01,
          3.3171e-03, 3.4112e-03],
         [9.9030e-01, 9.8990e-01, 9.9071e-01,  ..., 1.4809e-06,
          9.9005e-01, 9.8977e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 662:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0043, 0.0046, 0.0043,  ..., 0.0044, 0.0046, 0.0046],
         [0.0043, 0.0046, 0.0043,  ..., 0.0044, 0.0046, 0.0046],
         [0.0043, 0.0046, 0.0043,  ..., 0.0044, 0.0046, 0.0046],
         [0.9871, 0.9861, 0.9870,  ..., 0.9867, 0.9863, 0.9863]],
        [[0.0040, 0.0045, 0.0037,  ..., 0.0041, 0.0040, 0.0038],
         [0.0040, 0.0045, 0.0037,  ..., 0.0041, 0.0040, 0.0038],
         [0.0040, 0.0045, 0.0037,  ..., 0.0041, 0.0040, 0.0038],
         [0.9879, 0.9865, 0.9888,  ..., 0.9878, 0.9880, 0.9885]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:25:14,178 [Process: 0] Synchronize training processes
2024-08-16 16:25:14,179 [Process: 0] Evaluating...
2024-08-16 16:25:14,186 [Process: 0] EPOCH 662:
2024-08-16 16:25:14,188 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.9587e-03, 3.7089e-03, 3.4319e-03,  ..., 3.1954e-03,
          3.1350e-03, 3.1803e-03],
         [2.9587e-03, 3.7089e-03, 3.4319e-03,  ..., 3.1954e-03,
          3.1350e-03, 3.1803e-03],
         [2.9587e-03, 3.7089e-03, 3.4319e-03,  ..., 3.1954e-03,
          3.1350e-03, 3.1803e-03],
         [9.9112e-01, 9.8887e-01, 9.8970e-01,  ..., 9.9041e-01,
          9.9059e-01, 9.9046e-01]],
        [[3.2387e-03, 3.5218e-03, 3.2134e-03,  ..., 1.8913e-03,
          3.3316e-03, 3.2754e-03],
         [3.2387e-03, 3.5218e-03, 3.2134e-03,  ..., 2.7924e-05,
          3.3316e-03, 3.2754e-03],
         [3.2387e-03, 3.5218e-03, 3.2134e-03,  ..., 9.9805e-01,
          3.3316e-03, 3.2754e-03],
         [9.9028e-01, 9.8943e-01, 9.9036e-01,  ..., 2.7924e-05,
          9.9001e-01, 9.9017e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 663:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:25:16,190 [Process: 0] Synchronize training processes
2024-08-16 16:25:16,191 [Process: 0] Evaluating...
2024-08-16 16:25:16,193 [Process: 0] EPOCH 663:
2024-08-16 16:25:16,195 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0046, 0.0046,  ..., 0.0046, 0.0045, 0.0044],
         [0.0045, 0.0046, 0.0046,  ..., 0.0046, 0.0045, 0.0044],
         [0.0045, 0.0046, 0.0046,  ..., 0.0046, 0.0045, 0.0044],
         [0.9865, 0.9862, 0.9863,  ..., 0.9863, 0.9865, 0.9867]],
        [[0.0041, 0.0041, 0.0041,  ..., 0.0040, 0.0041, 0.0040],
         [0.0041, 0.0041, 0.0041,  ..., 0.0040, 0.0041, 0.0040],
         [0.0041, 0.0041, 0.0041,  ..., 0.0040, 0.0041, 0.0040],
         [0.9878, 0.9876, 0.9877,  ..., 0.9879, 0.9877, 0.9880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.0745e-03, 3.6960e-03, 3.2166e-03,  ..., 3.3097e-03,
          3.2989e-03, 3.2399e-03],
         [3.0745e-03, 3.6960e-03, 3.2166e-03,  ..., 3.3097e-03,
          3.2989e-03, 3.2399e-03],
         [3.0745e-03, 3.6960e-03, 3.2166e-03,  ..., 3.3097e-03,
          3.2989e-03, 3.2399e-03],
         [9.9078e-01, 9.8891e-01, 9.9035e-01,  ..., 9.9007e-01,
          9.9010e-01, 9.9028e-01]],
        [[3.1715e-03, 3.3846e-03, 3.1064e-03,  ..., 2.3971e-04,
          3.0969e-03, 3.0606e-03],
         [3.1715e-03, 3.3846e-03, 3.1064e-03,  ..., 5.3931e-06,
          3.0969e-03, 3.0606e-03],
         [3.1715e-03, 3.3846e-03, 3.1064e-03,  ..., 9.9975e-01,
          3.0969e-03, 3.0606e-03],
         [9.9049e-01, 9.8985e-01, 9.9068e-01,  ..., 5.3931e-06,
          9.9071e-01, 9.9082e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 664:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:18,279 [Process: 0] Synchronize training processes
2024-08-16 16:25:18,279 [Process: 0] Evaluating...
2024-08-16 16:25:18,281 [Process: 0] EPOCH 664:
2024-08-16 16:25:18,283 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0045, 0.0045,  ..., 0.0045, 0.0045, 0.0045],
         [0.0045, 0.0045, 0.0045,  ..., 0.0045, 0.0045, 0.0045],
         [0.0045, 0.0045, 0.0045,  ..., 0.0045, 0.0045, 0.0045],
         [0.9865, 0.9865, 0.9864,  ..., 0.9866, 0.9865, 0.9864]],
        [[0.0043, 0.0042, 0.0041,  ..., 0.0042, 0.0039, 0.0042],
         [0.0043, 0.0042, 0.0041,  ..., 0.0042, 0.0039, 0.0042],
         [0.0043, 0.0042, 0.0041,  ..., 0.0042, 0.0039, 0.0042],
         [0.9871, 0.9873, 0.9876,  ..., 0.9875, 0.9884, 0.9875]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4148e-03, 3.6808e-03, 3.1032e-03,  ..., 3.1200e-03,
          3.2171e-03, 3.0993e-03],
         [3.4148e-03, 3.6808e-03, 3.1032e-03,  ..., 3.1200e-03,
          3.2171e-03, 3.0993e-03],
         [3.4148e-03, 3.6808e-03, 3.1032e-03,  ..., 3.1200e-03,
          3.2171e-03, 3.0993e-03],
         [9.8976e-01, 9.8896e-01, 9.9069e-01,  ..., 9.9064e-01,
          9.9035e-01, 9.9070e-01]],
        [[3.1998e-03, 3.2976e-03, 3.3748e-03,  ..., 4.9452e-04,
          3.4738e-03, 3.5217e-03],
         [3.1998e-03, 3.2976e-03, 3.3748e-03,  ..., 8.1267e-05,
          3.4738e-03, 3.5217e-03],
         [3.1998e-03, 3.2976e-03, 3.3748e-03,  ..., 9.9934e-01,
          3.4738e-03, 3.5217e-03],
         [9.9040e-01, 9.9011e-01, 9.8988e-01,  ..., 8.1267e-05,
          9.8958e-01, 9.8944e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 665:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:20,353 [Process: 0] Synchronize training processes
2024-08-16 16:25:20,354 [Process: 0] Evaluating...
2024-08-16 16:25:20,356 [Process: 0] EPOCH 665:
2024-08-16 16:25:20,357 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0046, 0.0046,  ..., 0.0044, 0.0046, 0.0045],
         [0.0046, 0.0046, 0.0046,  ..., 0.0044, 0.0046, 0.0045],
         [0.0046, 0.0046, 0.0046,  ..., 0.0044, 0.0046, 0.0045],
         [0.9863, 0.9863, 0.9863,  ..., 0.9867, 0.9862, 0.9866]],
        [[0.0038, 0.0040, 0.0042,  ..., 0.0041, 0.0040, 0.0040],
         [0.0038, 0.0040, 0.0042,  ..., 0.0041, 0.0040, 0.0040],
         [0.0038, 0.0040, 0.0042,  ..., 0.0041, 0.0040, 0.0040],
         [0.9886, 0.9879, 0.9874,  ..., 0.9877, 0.9879, 0.9880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1508e-03, 3.7023e-03, 3.3459e-03,  ..., 3.3446e-03,
          2.9704e-03, 3.4173e-03],
         [3.1508e-03, 3.7023e-03, 3.3459e-03,  ..., 3.3446e-03,
          2.9704e-03, 3.4173e-03],
         [3.1508e-03, 3.7023e-03, 3.3459e-03,  ..., 3.3446e-03,
          2.9704e-03, 3.4173e-03],
         [9.9055e-01, 9.8889e-01, 9.8996e-01,  ..., 9.8997e-01,
          9.9109e-01, 9.8975e-01]],
        [[3.2860e-03, 3.4069e-03, 3.2919e-03,  ..., 1.4213e-04,
          3.2787e-03, 3.2832e-03],
         [3.2860e-03, 3.4069e-03, 3.2919e-03,  ..., 2.1445e-06,
          3.2787e-03, 3.2832e-03],
         [3.2860e-03, 3.4069e-03, 3.2919e-03,  ..., 9.9985e-01,
          3.2787e-03, 3.2832e-03],
         [9.9014e-01, 9.8978e-01, 9.9012e-01,  ..., 2.1445e-06,
          9.9016e-01, 9.9015e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 666:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:22,430 [Process: 0] Synchronize training processes
2024-08-16 16:25:22,431 [Process: 0] Evaluating...
2024-08-16 16:25:22,433 [Process: 0] EPOCH 666:
2024-08-16 16:25:22,435 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0044, 0.0045, 0.0045,  ..., 0.0045, 0.0046, 0.0045],
         [0.0044, 0.0045, 0.0045,  ..., 0.0045, 0.0046, 0.0045],
         [0.0044, 0.0045, 0.0045,  ..., 0.0045, 0.0046, 0.0045],
         [0.9868, 0.9864, 0.9864,  ..., 0.9866, 0.9863, 0.9865]],
        [[0.0039, 0.0037, 0.0038,  ..., 0.0042, 0.0039, 0.0042],
         [0.0039, 0.0037, 0.0038,  ..., 0.0042, 0.0039, 0.0042],
         [0.0039, 0.0037, 0.0038,  ..., 0.0042, 0.0039, 0.0042],
         [0.9882, 0.9889, 0.9885,  ..., 0.9875, 0.9884, 0.9875]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2319e-03, 3.6930e-03, 3.4270e-03,  ..., 3.4889e-03,
          3.3042e-03, 3.2957e-03],
         [3.2319e-03, 3.6930e-03, 3.4270e-03,  ..., 3.4889e-03,
          3.3042e-03, 3.2957e-03],
         [3.2319e-03, 3.6930e-03, 3.4270e-03,  ..., 3.4889e-03,
          3.3042e-03, 3.2957e-03],
         [9.9030e-01, 9.8892e-01, 9.8972e-01,  ..., 9.8953e-01,
          9.9009e-01, 9.9011e-01]],
        [[3.1663e-03, 3.6390e-03, 3.0948e-03,  ..., 2.4705e-04,
          3.3116e-03, 3.2342e-03],
         [3.1663e-03, 3.6390e-03, 3.0948e-03,  ..., 2.0716e-05,
          3.3116e-03, 3.2342e-03],
         [3.1663e-03, 3.6390e-03, 3.0948e-03,  ..., 9.9971e-01,
          3.3116e-03, 3.2342e-03],
         [9.9050e-01, 9.8908e-01, 9.9072e-01,  ..., 2.0716e-05,
          9.9007e-01, 9.9030e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 667:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:24,473 [Process: 0] Synchronize training processes
2024-08-16 16:25:24,474 [Process: 0] Evaluating...
2024-08-16 16:25:24,475 [Process: 0] EPOCH 667:
2024-08-16 16:25:24,478 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0045, 0.0045,  ..., 0.0046, 0.0047, 0.0046],
         [0.0045, 0.0045, 0.0045,  ..., 0.0046, 0.0047, 0.0046],
         [0.0045, 0.0045, 0.0045,  ..., 0.0046, 0.0047, 0.0046],
         [0.9866, 0.9866, 0.9866,  ..., 0.9863, 0.9859, 0.9863]],
        [[0.0040, 0.0039, 0.0042,  ..., 0.0039, 0.0039, 0.0040],
         [0.0040, 0.0039, 0.0042,  ..., 0.0039, 0.0039, 0.0040],
         [0.0040, 0.0039, 0.0042,  ..., 0.0039, 0.0039, 0.0040],
         [0.9881, 0.9883, 0.9873,  ..., 0.9883, 0.9884, 0.9880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.8468e-03, 3.9183e-03, 3.1307e-03,  ..., 3.1565e-03,
          3.1004e-03, 3.4450e-03],
         [2.8468e-03, 3.9183e-03, 3.1307e-03,  ..., 3.1565e-03,
          3.1004e-03, 3.4450e-03],
         [2.8468e-03, 3.9183e-03, 3.1307e-03,  ..., 3.1565e-03,
          3.1004e-03, 3.4450e-03],
         [9.9146e-01, 9.8825e-01, 9.9061e-01,  ..., 9.9053e-01,
          9.9070e-01, 9.8967e-01]],
        [[3.1798e-03, 3.3088e-03, 3.1040e-03,  ..., 2.0759e-04,
          3.1529e-03, 3.4018e-03],
         [3.1798e-03, 3.3088e-03, 3.1040e-03,  ..., 2.5319e-06,
          3.1529e-03, 3.4018e-03],
         [3.1798e-03, 3.3088e-03, 3.1040e-03,  ..., 9.9979e-01,
          3.1529e-03, 3.4018e-03],
         [9.9046e-01, 9.9007e-01, 9.9069e-01,  ..., 2.5319e-06,
          9.9054e-01, 9.8979e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 668:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:26,436 [Process: 0] Synchronize training processes
2024-08-16 16:25:26,436 [Process: 0] Evaluating...
2024-08-16 16:25:26,438 [Process: 0] EPOCH 668:
2024-08-16 16:25:26,440 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0044, 0.0044,  ..., 0.0045, 0.0045, 0.0044],
         [0.0045, 0.0044, 0.0044,  ..., 0.0045, 0.0045, 0.0044],
         [0.0045, 0.0044, 0.0044,  ..., 0.0045, 0.0045, 0.0044],
         [0.9864, 0.9868, 0.9867,  ..., 0.9865, 0.9865, 0.9867]],
        [[0.0039, 0.0041, 0.0040,  ..., 0.0041, 0.0041, 0.0039],
         [0.0039, 0.0041, 0.0040,  ..., 0.0041, 0.0041, 0.0039],
         [0.0039, 0.0041, 0.0040,  ..., 0.0041, 0.0041, 0.0039],
         [0.9882, 0.9876, 0.9880,  ..., 0.9877, 0.9878, 0.9884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1854e-03, 3.6748e-03, 2.8921e-03,  ..., 3.2938e-03,
          3.4642e-03, 3.1407e-03],
         [3.1854e-03, 3.6748e-03, 2.8921e-03,  ..., 3.2938e-03,
          3.4642e-03, 3.1407e-03],
         [3.1854e-03, 3.6748e-03, 2.8921e-03,  ..., 3.2938e-03,
          3.4642e-03, 3.1407e-03],
         [9.9044e-01, 9.8898e-01, 9.9132e-01,  ..., 9.9012e-01,
          9.8961e-01, 9.9058e-01]],
        [[3.2840e-03, 3.4156e-03, 3.1646e-03,  ..., 5.2596e-05,
          3.3292e-03, 3.2806e-03],
         [3.2840e-03, 3.4156e-03, 3.1646e-03,  ..., 2.9162e-07,
          3.3292e-03, 3.2806e-03],
         [3.2840e-03, 3.4156e-03, 3.1646e-03,  ..., 9.9995e-01,
          3.3292e-03, 3.2806e-03],
         [9.9015e-01, 9.8975e-01, 9.9051e-01,  ..., 2.9162e-07,
          9.9001e-01, 9.9016e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 669:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:28,396 [Process: 0] Synchronize training processes
2024-08-16 16:25:28,397 [Process: 0] Evaluating...
2024-08-16 16:25:28,398 [Process: 0] EPOCH 669:
2024-08-16 16:25:28,400 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0044, 0.0045,  ..., 0.0044, 0.0045, 0.0044],
         [0.0045, 0.0044, 0.0045,  ..., 0.0044, 0.0045, 0.0044],
         [0.0045, 0.0044, 0.0045,  ..., 0.0044, 0.0045, 0.0044],
         [0.9865, 0.9867, 0.9865,  ..., 0.9869, 0.9865, 0.9868]],
        [[0.0040, 0.0040, 0.0040,  ..., 0.0041, 0.0040, 0.0041],
         [0.0040, 0.0040, 0.0040,  ..., 0.0041, 0.0040, 0.0041],
         [0.0040, 0.0040, 0.0040,  ..., 0.0041, 0.0040, 0.0041],
         [0.9880, 0.9880, 0.9879,  ..., 0.9876, 0.9881, 0.9876]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1389e-03, 3.6397e-03, 2.9858e-03,  ..., 3.4686e-03,
          3.3307e-03, 3.1628e-03],
         [3.1389e-03, 3.6397e-03, 2.9858e-03,  ..., 3.4686e-03,
          3.3307e-03, 3.1628e-03],
         [3.1389e-03, 3.6397e-03, 2.9858e-03,  ..., 3.4686e-03,
          3.3307e-03, 3.1628e-03],
         [9.9058e-01, 9.8908e-01, 9.9104e-01,  ..., 9.8959e-01,
          9.9001e-01, 9.9051e-01]],
        [[3.0603e-03, 3.2355e-03, 3.6788e-03,  ..., 1.5252e-03,
          3.2649e-03, 3.4162e-03],
         [3.0603e-03, 3.2355e-03, 3.6788e-03,  ..., 4.5858e-05,
          3.2649e-03, 3.4162e-03],
         [3.0603e-03, 3.2355e-03, 3.6788e-03,  ..., 9.9838e-01,
          3.2649e-03, 3.4162e-03],
         [9.9082e-01, 9.9029e-01, 9.8896e-01,  ..., 4.5858e-05,
          9.9021e-01, 9.8975e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 670:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:30,474 [Process: 0] Synchronize training processes
2024-08-16 16:25:30,475 [Process: 0] Evaluating...
2024-08-16 16:25:30,477 [Process: 0] EPOCH 670:
2024-08-16 16:25:30,480 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0044, 0.0045, 0.0044,  ..., 0.0047, 0.0045, 0.0046],
         [0.0044, 0.0045, 0.0044,  ..., 0.0047, 0.0045, 0.0046],
         [0.0044, 0.0045, 0.0044,  ..., 0.0047, 0.0045, 0.0046],
         [0.9867, 0.9864, 0.9867,  ..., 0.9860, 0.9865, 0.9863]],
        [[0.0036, 0.0040, 0.0040,  ..., 0.0041, 0.0040, 0.0039],
         [0.0036, 0.0040, 0.0040,  ..., 0.0041, 0.0040, 0.0039],
         [0.0036, 0.0040, 0.0040,  ..., 0.0041, 0.0040, 0.0039],
         [0.9892, 0.9880, 0.9879,  ..., 0.9876, 0.9881, 0.9884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1032e-03, 3.7224e-03, 3.1484e-03,  ..., 3.1774e-03,
          3.1739e-03, 3.2579e-03],
         [3.1032e-03, 3.7224e-03, 3.1484e-03,  ..., 3.1774e-03,
          3.1739e-03, 3.2579e-03],
         [3.1032e-03, 3.7224e-03, 3.1484e-03,  ..., 3.1774e-03,
          3.1739e-03, 3.2579e-03],
         [9.9069e-01, 9.8883e-01, 9.9055e-01,  ..., 9.9047e-01,
          9.9048e-01, 9.9023e-01]],
        [[3.0815e-03, 3.4328e-03, 3.2519e-03,  ..., 3.6168e-06,
          3.0710e-03, 3.3411e-03],
         [3.0815e-03, 3.4328e-03, 3.2519e-03,  ..., 2.2848e-08,
          3.0710e-03, 3.3411e-03],
         [3.0815e-03, 3.4328e-03, 3.2519e-03,  ..., 1.0000e+00,
          3.0710e-03, 3.3411e-03],
         [9.9076e-01, 9.8970e-01, 9.9024e-01,  ..., 2.2848e-08,
          9.9079e-01, 9.8998e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 671:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:32,574 [Process: 0] Synchronize training processes
2024-08-16 16:25:32,574 [Process: 0] Evaluating...
2024-08-16 16:25:32,576 [Process: 0] EPOCH 671:
2024-08-16 16:25:32,578 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0044, 0.0044,  ..., 0.0045, 0.0045, 0.0045],
         [0.0045, 0.0044, 0.0044,  ..., 0.0045, 0.0045, 0.0045],
         [0.0045, 0.0044, 0.0044,  ..., 0.0045, 0.0045, 0.0045],
         [0.9866, 0.9868, 0.9868,  ..., 0.9865, 0.9866, 0.9865]],
        [[0.0040, 0.0040, 0.0037,  ..., 0.0039, 0.0043, 0.0041],
         [0.0040, 0.0040, 0.0037,  ..., 0.0039, 0.0043, 0.0041],
         [0.0040, 0.0040, 0.0037,  ..., 0.0039, 0.0043, 0.0041],
         [0.9881, 0.9880, 0.9888,  ..., 0.9883, 0.9871, 0.9877]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.0987e-03, 3.6886e-03, 3.3385e-03,  ..., 3.2516e-03,
          3.2847e-03, 3.2448e-03],
         [3.0987e-03, 3.6519e-03, 3.3385e-03,  ..., 3.2516e-03,
          3.2847e-03, 3.2448e-03],
         [3.0987e-03, 3.6519e-03, 3.3385e-03,  ..., 3.2516e-03,
          3.2847e-03, 3.2448e-03],
         [9.9070e-01, 9.8901e-01, 9.8998e-01,  ..., 9.9025e-01,
          9.9015e-01, 9.9027e-01]],
        [[3.4303e-03, 3.4823e-03, 3.2222e-03,  ..., 5.6438e-05,
          3.0776e-03, 3.5446e-03],
         [3.4303e-03, 3.4823e-03, 3.2222e-03,  ..., 2.2314e-06,
          3.0776e-03, 3.5446e-03],
         [3.4303e-03, 3.4823e-03, 3.2222e-03,  ..., 9.9994e-01,
          3.0776e-03, 3.5446e-03],
         [9.8971e-01, 9.8955e-01, 9.9033e-01,  ..., 2.2314e-06,
          9.9077e-01, 9.8937e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 672:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:34,684 [Process: 0] Synchronize training processes
2024-08-16 16:25:34,685 [Process: 0] Evaluating...
2024-08-16 16:25:34,693 [Process: 0] EPOCH 672:
2024-08-16 16:25:34,695 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0044, 0.0044, 0.0044,  ..., 0.0044, 0.0045, 0.0044],
         [0.0044, 0.0044, 0.0044,  ..., 0.0044, 0.0045, 0.0044],
         [0.0044, 0.0044, 0.0044,  ..., 0.0044, 0.0045, 0.0044],
         [0.9868, 0.9868, 0.9867,  ..., 0.9867, 0.9865, 0.9868]],
        [[0.0039, 0.0040, 0.0041,  ..., 0.0040, 0.0042, 0.0040],
         [0.0039, 0.0040, 0.0041,  ..., 0.0040, 0.0042, 0.0040],
         [0.0039, 0.0040, 0.0041,  ..., 0.0040, 0.0042, 0.0040],
         [0.9882, 0.9879, 0.9878,  ..., 0.9880, 0.9873, 0.9881]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3030e-03, 3.6146e-03, 3.0152e-03,  ..., 3.3566e-03,
          2.9807e-03, 3.2208e-03],
         [3.2716e-03, 3.5517e-03, 3.0052e-03,  ..., 3.3053e-03,
          2.9747e-03, 3.2107e-03],
         [3.2716e-03, 3.5517e-03, 3.0052e-03,  ..., 3.3053e-03,
          2.9747e-03, 3.2107e-03],
         [9.9015e-01, 9.8928e-01, 9.9097e-01,  ..., 9.9003e-01,
          9.9107e-01, 9.9036e-01]],
        [[3.3275e-03, 3.2943e-03, 3.2695e-03,  ..., 1.5910e-04,
          3.0652e-03, 3.3328e-03],
         [3.2868e-03, 3.2632e-03, 3.1970e-03,  ..., 1.6355e-05,
          3.0337e-03, 3.2882e-03],
         [3.2868e-03, 3.2632e-03, 3.1970e-03,  ..., 9.9981e-01,
          3.0337e-03, 3.2882e-03],
         [9.9010e-01, 9.9018e-01, 9.9034e-01,  ..., 1.6355e-05,
          9.9087e-01, 9.9009e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 673:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:36,852 [Process: 0] Synchronize training processes
2024-08-16 16:25:36,852 [Process: 0] Evaluating...
2024-08-16 16:25:36,854 [Process: 0] EPOCH 673:
2024-08-16 16:25:36,857 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0044, 0.0043, 0.0044,  ..., 0.0045, 0.0044, 0.0044],
         [0.0044, 0.0043, 0.0044,  ..., 0.0045, 0.0044, 0.0044],
         [0.0044, 0.0043, 0.0044,  ..., 0.0045, 0.0044, 0.0044],
         [0.9868, 0.9872, 0.9869,  ..., 0.9865, 0.9868, 0.9868]],
        [[0.0040, 0.0040, 0.0038,  ..., 0.0035, 0.0039, 0.0041],
         [0.0040, 0.0040, 0.0038,  ..., 0.0035, 0.0039, 0.0041],
         [0.0040, 0.0040, 0.0038,  ..., 0.0035, 0.0039, 0.0041],
         [0.9880, 0.9880, 0.9885,  ..., 0.9894, 0.9882, 0.9878]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1299e-03, 3.7685e-03, 2.8012e-03,  ..., 3.3649e-03,
          2.9937e-03, 3.1205e-03],
         [3.1111e-03, 3.6269e-03, 2.7760e-03,  ..., 3.2717e-03,
          2.9916e-03, 3.1205e-03],
         [3.1111e-03, 3.6269e-03, 2.7760e-03,  ..., 3.2717e-03,
          2.9916e-03, 3.1205e-03],
         [9.9065e-01, 9.8898e-01, 9.9165e-01,  ..., 9.9009e-01,
          9.9102e-01, 9.9064e-01]],
        [[3.2306e-03, 3.6331e-03, 3.2912e-03,  ..., 5.7922e-04,
          3.4055e-03, 2.9727e-03],
         [3.1777e-03, 3.5018e-03, 3.2344e-03,  ..., 5.1707e-05,
          3.3858e-03, 2.9492e-03],
         [3.1777e-03, 3.5018e-03, 3.2344e-03,  ..., 9.9932e-01,
          3.3858e-03, 2.9492e-03],
         [9.9041e-01, 9.8936e-01, 9.9024e-01,  ..., 5.1707e-05,
          9.8982e-01, 9.9113e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 674:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:39,049 [Process: 0] Synchronize training processes
2024-08-16 16:25:39,049 [Process: 0] Evaluating...
2024-08-16 16:25:39,051 [Process: 0] EPOCH 674:
2024-08-16 16:25:39,053 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0038, 0.0037, 0.0039,  ..., 0.0038, 0.0038, 0.0038],
         [0.0038, 0.0037, 0.0039,  ..., 0.0038, 0.0038, 0.0038],
         [0.0038, 0.0037, 0.0039,  ..., 0.0038, 0.0038, 0.0038],
         [0.9886, 0.9889, 0.9884,  ..., 0.9886, 0.9886, 0.9887]],
        [[0.0045, 0.0083, 0.0046,  ..., 0.0056, 0.0043, 0.0048],
         [0.0045, 0.0083, 0.0046,  ..., 0.0056, 0.0043, 0.0048],
         [0.0045, 0.0083, 0.0046,  ..., 0.0056, 0.0043, 0.0048],
         [0.9865, 0.9752, 0.9861,  ..., 0.9833, 0.9872, 0.9855]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4612e-03, 3.6213e-03, 2.9272e-03,  ..., 3.5593e-03,
          2.9796e-03, 2.9987e-03],
         [3.3600e-03, 3.5125e-03, 2.8776e-03,  ..., 3.4115e-03,
          2.9307e-03, 2.9241e-03],
         [3.3600e-03, 3.5125e-03, 2.8776e-03,  ..., 3.4115e-03,
          2.9307e-03, 2.9241e-03],
         [9.8982e-01, 9.8935e-01, 9.9132e-01,  ..., 9.8962e-01,
          9.9116e-01, 9.9115e-01]],
        [[3.3459e-03, 3.4309e-03, 3.0909e-03,  ..., 1.2419e-04,
          3.2760e-03, 3.7736e-03],
         [3.2867e-03, 3.3351e-03, 3.0240e-03,  ..., 9.7666e-06,
          3.1728e-03, 3.6332e-03],
         [3.2867e-03, 3.3351e-03, 3.0240e-03,  ..., 9.9986e-01,
          3.1728e-03, 3.6332e-03],
         [9.9008e-01, 9.8990e-01, 9.9086e-01,  ..., 9.7666e-06,
          9.9038e-01, 9.8896e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:25:41,230 [Process: 0] Synchronize training processes
2024-08-16 16:25:41,230 [Process: 0] Evaluating...
2024-08-16 16:25:41,232 [Process: 0] EPOCH 675:
2024-08-16 16:25:41,234 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 675:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0045, 0.0044,  ..., 0.0046, 0.0047, 0.0046],
         [0.0045, 0.0045, 0.0044,  ..., 0.0046, 0.0047, 0.0046],
         [0.0045, 0.0045, 0.0044,  ..., 0.0046, 0.0047, 0.0046],
         [0.9864, 0.9865, 0.9867,  ..., 0.9863, 0.9858, 0.9863]],
        [[0.0040, 0.0037, 0.0039,  ..., 0.0040, 0.0042, 0.0038],
         [0.0040, 0.0037, 0.0039,  ..., 0.0040, 0.0042, 0.0038],
         [0.0040, 0.0037, 0.0039,  ..., 0.0040, 0.0042, 0.0038],
         [0.9880, 0.9889, 0.9883,  ..., 0.9880, 0.9873, 0.9887]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:25:43,352 [Process: 0] Synchronize training processes
2024-08-16 16:25:43,352 [Process: 0] Evaluating...
2024-08-16 16:25:43,354 [Process: 0] EPOCH 676:
2024-08-16 16:25:43,356 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1017e-03, 3.4422e-03, 3.1268e-03,  ..., 3.1651e-03,
          3.2542e-03, 3.0030e-03],
         [3.0327e-03, 3.4127e-03, 3.0504e-03,  ..., 3.1593e-03,
          3.1448e-03, 2.9967e-03],
         [3.0327e-03, 3.4127e-03, 3.0504e-03,  ..., 3.1593e-03,
          3.1448e-03, 2.9967e-03],
         [9.9083e-01, 9.8973e-01, 9.9077e-01,  ..., 9.9052e-01,
          9.9046e-01, 9.9100e-01]],
        [[3.2656e-03, 3.2573e-03, 3.1544e-03,  ..., 3.4049e-04,
          3.4145e-03, 3.4005e-03],
         [3.2063e-03, 3.2213e-03, 3.0554e-03,  ..., 5.5347e-05,
          3.3587e-03, 3.2717e-03],
         [3.2063e-03, 3.2213e-03, 3.0554e-03,  ..., 9.9955e-01,
          3.3587e-03, 3.2717e-03],
         [9.9032e-01, 9.9030e-01, 9.9073e-01,  ..., 5.5347e-05,
          9.8987e-01, 9.9006e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 676:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0048, 0.0051, 0.0046,  ..., 0.0044, 0.0050, 0.0046],
         [0.0048, 0.0051, 0.0046,  ..., 0.0044, 0.0050, 0.0046],
         [0.0048, 0.0051, 0.0046,  ..., 0.0044, 0.0050, 0.0046],
         [0.9856, 0.9847, 0.9861,  ..., 0.9868, 0.9851, 0.9863]],
        [[0.0040, 0.0034, 0.0034,  ..., 0.0035, 0.0036, 0.0042],
         [0.0040, 0.0034, 0.0034,  ..., 0.0035, 0.0036, 0.0042],
         [0.0040, 0.0034, 0.0034,  ..., 0.0035, 0.0036, 0.0042],
         [0.9881, 0.9899, 0.9897,  ..., 0.9894, 0.9892, 0.9875]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:25:45,441 [Process: 0] Synchronize training processes
2024-08-16 16:25:45,442 [Process: 0] Evaluating...
2024-08-16 16:25:45,444 [Process: 0] EPOCH 677:
2024-08-16 16:25:45,446 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3031e-03, 3.5051e-03, 2.9708e-03,  ..., 3.2943e-03,
          3.7994e-03, 3.4637e-03],
         [3.3031e-03, 3.5051e-03, 2.9708e-03,  ..., 3.2943e-03,
          3.7653e-03, 3.4433e-03],
         [3.3031e-03, 3.5051e-03, 2.9708e-03,  ..., 3.2943e-03,
          3.7653e-03, 3.4433e-03],
         [9.9009e-01, 9.8948e-01, 9.9109e-01,  ..., 9.9012e-01,
          9.8867e-01, 9.8965e-01]],
        [[3.3597e-03, 3.4871e-03, 3.3291e-03,  ..., 3.7055e-04,
          2.9607e-03, 3.0906e-03],
         [3.2419e-03, 3.4871e-03, 3.2776e-03,  ..., 1.7190e-05,
          2.9607e-03, 3.0906e-03],
         [3.2419e-03, 3.4871e-03, 3.2776e-03,  ..., 9.9960e-01,
          2.9607e-03, 3.0906e-03],
         [9.9016e-01, 9.8954e-01, 9.9012e-01,  ..., 1.7190e-05,
          9.9112e-01, 9.9073e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 677:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0044, 0.0045, 0.0043,  ..., 0.0042, 0.0043, 0.0044],
         [0.0044, 0.0045, 0.0043,  ..., 0.0042, 0.0043, 0.0044],
         [0.0044, 0.0045, 0.0043,  ..., 0.0042, 0.0043, 0.0044],
         [0.9867, 0.9864, 0.9870,  ..., 0.9874, 0.9870, 0.9868]],
        [[0.0039, 0.0037, 0.0035,  ..., 0.0037, 0.0037, 0.0040],
         [0.0039, 0.0037, 0.0035,  ..., 0.0037, 0.0037, 0.0040],
         [0.0039, 0.0037, 0.0035,  ..., 0.0037, 0.0037, 0.0040],
         [0.9883, 0.9888, 0.9894,  ..., 0.9888, 0.9888, 0.9879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:25:47,411 [Process: 0] Synchronize training processes
2024-08-16 16:25:47,411 [Process: 0] Evaluating...
2024-08-16 16:25:47,413 [Process: 0] EPOCH 678:
2024-08-16 16:25:47,415 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2091e-03, 3.0301e-03, 4.9558e-03,  ..., 3.1918e-03,
          5.5979e-03, 4.4609e-03],
         [6.2091e-03, 3.0301e-03, 4.9558e-03,  ..., 3.1918e-03,
          5.5979e-03, 4.4609e-03],
         [6.2091e-03, 3.0301e-03, 4.9558e-03,  ..., 3.1918e-03,
          5.5979e-03, 4.4609e-03],
         [9.8137e-01, 9.9091e-01, 9.8513e-01,  ..., 9.9042e-01,
          9.8321e-01, 9.8662e-01]],
        [[2.8809e-03, 3.3278e-03, 2.6409e-03,  ..., 7.8472e-04,
          3.0059e-03, 3.2475e-03],
         [2.8809e-03, 3.3170e-03, 2.6614e-03,  ..., 1.3872e-04,
          3.0040e-03, 3.2475e-03],
         [2.8809e-03, 3.3170e-03, 2.6409e-03,  ..., 9.9894e-01,
          3.0040e-03, 3.2475e-03],
         [9.9136e-01, 9.9004e-01, 9.9206e-01,  ..., 1.3872e-04,
          9.9099e-01, 9.9026e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 678:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0046, 0.0044,  ..., 0.0042, 0.0044, 0.0044],
         [0.0045, 0.0046, 0.0044,  ..., 0.0042, 0.0044, 0.0044],
         [0.0045, 0.0046, 0.0044,  ..., 0.0042, 0.0044, 0.0044],
         [0.9866, 0.9862, 0.9869,  ..., 0.9873, 0.9867, 0.9868]],
        [[0.0038, 0.0040, 0.0038,  ..., 0.0038, 0.0042, 0.0039],
         [0.0038, 0.0040, 0.0038,  ..., 0.0038, 0.0042, 0.0039],
         [0.0038, 0.0040, 0.0038,  ..., 0.0038, 0.0042, 0.0039],
         [0.9885, 0.9881, 0.9886,  ..., 0.9887, 0.9873, 0.9883]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:25:49,343 [Process: 0] Synchronize training processes
2024-08-16 16:25:49,343 [Process: 0] Evaluating...
2024-08-16 16:25:49,345 [Process: 0] EPOCH 679:
2024-08-16 16:25:49,347 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.7747e-03, 3.2150e-03, 3.0126e-03,  ..., 3.0585e-03,
          2.7158e-03, 2.9817e-03],
         [2.7351e-03, 3.1190e-03, 2.9403e-03,  ..., 2.9933e-03,
          2.6911e-03, 2.9817e-03],
         [2.7351e-03, 3.1190e-03, 2.9403e-03,  ..., 2.9933e-03,
          2.6911e-03, 2.9817e-03],
         [9.9176e-01, 9.9055e-01, 9.9111e-01,  ..., 9.9095e-01,
          9.9190e-01, 9.9105e-01]],
        [[3.2951e-03, 3.1394e-03, 3.1679e-03,  ..., 1.2485e-03,
          3.0755e-03, 3.8556e-03],
         [3.1261e-03, 3.0549e-03, 3.0624e-03,  ..., 5.3194e-05,
          3.0281e-03, 3.6647e-03],
         [3.1261e-03, 3.0549e-03, 3.0624e-03,  ..., 9.9865e-01,
          3.0281e-03, 3.9598e-03],
         [9.9045e-01, 9.9075e-01, 9.9071e-01,  ..., 5.3194e-05,
          9.9087e-01, 9.8852e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 679:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0049, 0.0048, 0.0049,  ..., 0.0046, 0.0049, 0.0045],
         [0.0049, 0.0048, 0.0049,  ..., 0.0046, 0.0049, 0.0045],
         [0.0055, 0.0048, 0.0049,  ..., 0.0046, 0.0051, 0.0045],
         [0.9847, 0.9857, 0.9852,  ..., 0.9863, 0.9851, 0.9864]],
        [[0.0040, 0.0040, 0.0040,  ..., 0.0037, 0.0035, 0.0039],
         [0.0040, 0.0040, 0.0040,  ..., 0.0037, 0.0035, 0.0039],
         [0.0040, 0.0040, 0.0040,  ..., 0.0037, 0.0035, 0.0039],
         [0.9881, 0.9880, 0.9879,  ..., 0.9889, 0.9895, 0.9882]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:25:51,274 [Process: 0] Synchronize training processes
2024-08-16 16:25:51,274 [Process: 0] Evaluating...
2024-08-16 16:25:51,276 [Process: 0] EPOCH 680:
2024-08-16 16:25:51,278 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.0028, 0.0028, 0.0027,  ..., 0.0024, 0.0028, 0.0024],
         [0.0027, 0.0028, 0.0027,  ..., 0.0024, 0.0028, 0.0024],
         [0.0027, 0.0028, 0.0027,  ..., 0.0023, 0.0028, 0.0024],
         [0.9918, 0.9916, 0.9920,  ..., 0.9929, 0.9916, 0.9929]],
        [[0.0043, 0.0026, 0.0038,  ..., 0.0319, 0.0034, 0.0047],
         [0.0042, 0.0026, 0.0038,  ..., 0.0164, 0.0032, 0.0047],
         [0.0050, 0.0026, 0.0038,  ..., 0.9352, 0.0032, 0.0058],
         [0.9865, 0.9922, 0.9886,  ..., 0.0164, 0.9902, 0.9848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 680:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0046, 0.0050,  ..., 0.0045, 0.0047, 0.0046],
         [0.0046, 0.0046, 0.0050,  ..., 0.0045, 0.0047, 0.0046],
         [0.0046, 0.0046, 0.0052,  ..., 0.0045, 0.0050, 0.0046],
         [0.9862, 0.9863, 0.9848,  ..., 0.9866, 0.9855, 0.9861]],
        [[0.0040, 0.0037, 0.0040,  ..., 0.0035, 0.0038, 0.0039],
         [0.0040, 0.0037, 0.0040,  ..., 0.0035, 0.0038, 0.0039],
         [0.0040, 0.0037, 0.0040,  ..., 0.0035, 0.0038, 0.0039],
         [0.9881, 0.9888, 0.9879,  ..., 0.9894, 0.9887, 0.9882]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1347e-03, 3.6413e-03, 3.0054e-03,  ..., 3.0656e-03,
          3.5653e-03, 3.2633e-03],
         [3.1347e-03, 3.6413e-03, 3.0054e-03,  ..., 3.0656e-03,
          3.5653e-03, 3.2633e-03],
         [3.1347e-03, 3.6413e-03, 3.0054e-03,  ..., 3.0656e-03,
          3.5653e-03, 3.2633e-03],
         [9.9060e-01, 9.8908e-01, 9.9098e-01,  ..., 9.9080e-01,
          9.8930e-01, 9.9021e-01]],
        [[3.1371e-03, 3.2309e-03, 3.3172e-03,  ..., 7.8359e-05,
          3.3387e-03, 3.7554e-03],
         [3.1371e-03, 3.2309e-03, 3.3172e-03,  ..., 3.8812e-06,
          3.3387e-03, 3.7554e-03],
         [3.1371e-03, 3.2309e-03, 3.3172e-03,  ..., 9.9991e-01,
          3.3387e-03, 3.7554e-03],
         [9.9059e-01, 9.9031e-01, 9.9005e-01,  ..., 3.8812e-06,
          9.8998e-01, 9.8873e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:25:53,186 [Process: 0] Synchronize training processes
2024-08-16 16:25:53,186 [Process: 0] Evaluating...
2024-08-16 16:25:53,188 [Process: 0] EPOCH 681:
2024-08-16 16:25:53,190 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 681:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0044, 0.0047, 0.0045,  ..., 0.0044, 0.0044, 0.0045],
         [0.0044, 0.0047, 0.0045,  ..., 0.0044, 0.0044, 0.0045],
         [0.0044, 0.0047, 0.0045,  ..., 0.0044, 0.0044, 0.0045],
         [0.9867, 0.9858, 0.9865,  ..., 0.9867, 0.9867, 0.9866]],
        [[0.0036, 0.0038, 0.0043,  ..., 0.0039, 0.0038, 0.0036],
         [0.0036, 0.0038, 0.0043,  ..., 0.0039, 0.0038, 0.0036],
         [0.0036, 0.0038, 0.0043,  ..., 0.0039, 0.0038, 0.0036],
         [0.9891, 0.9885, 0.9870,  ..., 0.9882, 0.9887, 0.9891]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2100e-03, 3.3321e-03, 3.3134e-03,  ..., 3.1360e-03,
          3.2044e-03, 3.2216e-03],
         [3.2100e-03, 3.3321e-03, 3.3134e-03,  ..., 3.1360e-03,
          3.2044e-03, 3.2216e-03],
         [3.2100e-03, 3.3321e-03, 3.3134e-03,  ..., 3.1360e-03,
          3.2044e-03, 3.2216e-03],
         [9.9037e-01, 9.9000e-01, 9.9006e-01,  ..., 9.9059e-01,
          9.9039e-01, 9.9034e-01]],
        [[3.3717e-03, 3.2596e-03, 3.1430e-03,  ..., 5.3653e-03,
          3.1018e-03, 2.9496e-03],
         [3.3717e-03, 3.2596e-03, 3.1430e-03,  ..., 1.0189e-04,
          3.1018e-03, 2.9496e-03],
         [3.3717e-03, 3.2596e-03, 3.1430e-03,  ..., 9.9443e-01,
          3.1018e-03, 2.9496e-03],
         [9.8988e-01, 9.9022e-01, 9.9057e-01,  ..., 1.0189e-04,
          9.9069e-01, 9.9115e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 682:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:55,114 [Process: 0] Synchronize training processes
2024-08-16 16:25:55,114 [Process: 0] Evaluating...
2024-08-16 16:25:55,123 [Process: 0] EPOCH 682:
2024-08-16 16:25:55,125 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0043, 0.0046,  ..., 0.0043, 0.0045, 0.0044],
         [0.0046, 0.0043, 0.0046,  ..., 0.0043, 0.0045, 0.0044],
         [0.0046, 0.0043, 0.0046,  ..., 0.0043, 0.0045, 0.0044],
         [0.9863, 0.9870, 0.9863,  ..., 0.9870, 0.9864, 0.9867]],
        [[0.0042, 0.0040, 0.0039,  ..., 0.0039, 0.0039, 0.0041],
         [0.0042, 0.0040, 0.0039,  ..., 0.0039, 0.0039, 0.0041],
         [0.0042, 0.0040, 0.0039,  ..., 0.0039, 0.0039, 0.0041],
         [0.9874, 0.9881, 0.9882,  ..., 0.9882, 0.9884, 0.9877]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.8729e-03, 3.4359e-03, 3.0863e-03,  ..., 3.0653e-03,
          3.0204e-03, 3.2828e-03],
         [2.8729e-03, 3.4359e-03, 3.0863e-03,  ..., 3.0653e-03,
          3.0204e-03, 3.2828e-03],
         [2.8729e-03, 3.4359e-03, 3.0863e-03,  ..., 3.0653e-03,
          3.0204e-03, 3.2828e-03],
         [9.9138e-01, 9.8969e-01, 9.9074e-01,  ..., 9.9080e-01,
          9.9094e-01, 9.9015e-01]],
        [[3.5997e-03, 2.8322e-03, 3.0442e-03,  ..., 4.8483e-03,
          3.2313e-03, 3.0729e-03],
         [3.5997e-03, 2.8322e-03, 3.0442e-03,  ..., 2.3286e-04,
          3.2313e-03, 3.0729e-03],
         [3.5997e-03, 2.8322e-03, 3.0442e-03,  ..., 9.9469e-01,
          3.2313e-03, 3.0729e-03],
         [9.8920e-01, 9.9150e-01, 9.9087e-01,  ..., 2.3286e-04,
          9.9031e-01, 9.9078e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 683:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:57,034 [Process: 0] Synchronize training processes
2024-08-16 16:25:57,035 [Process: 0] Evaluating...
2024-08-16 16:25:57,037 [Process: 0] EPOCH 683:
2024-08-16 16:25:57,039 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0043, 0.0042,  ..., 0.0043, 0.0044, 0.0044],
         [0.0045, 0.0043, 0.0042,  ..., 0.0043, 0.0044, 0.0044],
         [0.0045, 0.0043, 0.0042,  ..., 0.0043, 0.0044, 0.0044],
         [0.9864, 0.9872, 0.9874,  ..., 0.9871, 0.9868, 0.9868]],
        [[0.0038, 0.0040, 0.0039,  ..., 0.0039, 0.0040, 0.0039],
         [0.0038, 0.0040, 0.0039,  ..., 0.0039, 0.0040, 0.0039],
         [0.0038, 0.0040, 0.0039,  ..., 0.0039, 0.0040, 0.0039],
         [0.9886, 0.9881, 0.9882,  ..., 0.9884, 0.9880, 0.9884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0032, 0.0036, 0.0033,  ..., 0.0031, 0.0033, 0.0031],
         [0.0032, 0.0036, 0.0033,  ..., 0.0031, 0.0033, 0.0031],
         [0.0032, 0.0036, 0.0033,  ..., 0.0031, 0.0033, 0.0031],
         [0.9904, 0.9891, 0.9901,  ..., 0.9906, 0.9900, 0.9907]],
        [[0.0031, 0.0029, 0.0034,  ..., 0.0138, 0.0033, 0.0030],
         [0.0031, 0.0029, 0.0034,  ..., 0.0017, 0.0033, 0.0030],
         [0.0031, 0.0029, 0.0034,  ..., 0.9828, 0.0033, 0.0030],
         [0.9908, 0.9912, 0.9898,  ..., 0.0017, 0.9900, 0.9909]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 684:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:25:58,954 [Process: 0] Synchronize training processes
2024-08-16 16:25:58,954 [Process: 0] Evaluating...
2024-08-16 16:25:58,956 [Process: 0] EPOCH 684:
2024-08-16 16:25:58,958 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0043, 0.0044, 0.0044,  ..., 0.0043, 0.0043, 0.0043],
         [0.0043, 0.0044, 0.0044,  ..., 0.0043, 0.0043, 0.0043],
         [0.0043, 0.0044, 0.0044,  ..., 0.0043, 0.0043, 0.0043],
         [0.9872, 0.9867, 0.9868,  ..., 0.9870, 0.9870, 0.9871]],
        [[0.0036, 0.0039, 0.0040,  ..., 0.0041, 0.0039, 0.0040],
         [0.0036, 0.0039, 0.0040,  ..., 0.0041, 0.0039, 0.0040],
         [0.0036, 0.0039, 0.0040,  ..., 0.0041, 0.0039, 0.0040],
         [0.9891, 0.9884, 0.9881,  ..., 0.9877, 0.9882, 0.9879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5614e-03, 3.8769e-03, 3.5167e-03,  ..., 3.4745e-03,
          3.4077e-03, 3.3499e-03],
         [3.5614e-03, 3.8769e-03, 3.5167e-03,  ..., 3.4745e-03,
          3.4077e-03, 3.3499e-03],
         [3.5614e-03, 3.8769e-03, 3.5167e-03,  ..., 3.4745e-03,
          3.4077e-03, 3.3499e-03],
         [9.8932e-01, 9.8837e-01, 9.8945e-01,  ..., 9.8958e-01,
          9.8978e-01, 9.8995e-01]],
        [[3.0713e-03, 2.8800e-03, 2.9580e-03,  ..., 5.4851e-04,
          2.8683e-03, 3.1023e-03],
         [3.0713e-03, 2.8800e-03, 2.9580e-03,  ..., 9.6842e-06,
          2.8683e-03, 3.1023e-03],
         [3.0713e-03, 2.8800e-03, 2.9580e-03,  ..., 9.9943e-01,
          2.8683e-03, 3.1023e-03],
         [9.9079e-01, 9.9136e-01, 9.9113e-01,  ..., 9.6842e-06,
          9.9140e-01, 9.9069e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 685:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:26:00,897 [Process: 0] Synchronize training processes
2024-08-16 16:26:00,898 [Process: 0] Evaluating...
2024-08-16 16:26:00,900 [Process: 0] EPOCH 685:
2024-08-16 16:26:00,902 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0041, 0.0044, 0.0040,  ..., 0.0042, 0.0044, 0.0044],
         [0.0041, 0.0044, 0.0040,  ..., 0.0042, 0.0044, 0.0044],
         [0.0041, 0.0044, 0.0040,  ..., 0.0042, 0.0044, 0.0044],
         [0.9876, 0.9867, 0.9880,  ..., 0.9873, 0.9868, 0.9867]],
        [[0.0037, 0.0037, 0.0040,  ..., 0.0037, 0.0041, 0.0039],
         [0.0037, 0.0037, 0.0040,  ..., 0.0037, 0.0041, 0.0039],
         [0.0037, 0.0037, 0.0040,  ..., 0.0037, 0.0041, 0.0039],
         [0.9888, 0.9890, 0.9881,  ..., 0.9889, 0.9878, 0.9884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4194e-03, 3.8869e-03, 3.2308e-03,  ..., 3.0992e-03,
          3.2678e-03, 3.1703e-03],
         [3.4194e-03, 3.8869e-03, 3.2308e-03,  ..., 3.0992e-03,
          3.2678e-03, 3.1703e-03],
         [3.4194e-03, 3.8869e-03, 3.2308e-03,  ..., 3.0992e-03,
          3.2678e-03, 3.1703e-03],
         [9.8974e-01, 9.8834e-01, 9.9031e-01,  ..., 9.9070e-01,
          9.9020e-01, 9.9049e-01]],
        [[2.8280e-03, 3.2080e-03, 3.0391e-03,  ..., 1.6103e-03,
          2.9242e-03, 3.2375e-03],
         [2.8280e-03, 3.2080e-03, 3.0391e-03,  ..., 2.4931e-05,
          2.9242e-03, 3.2375e-03],
         [2.8280e-03, 3.2080e-03, 3.0391e-03,  ..., 9.9834e-01,
          2.9242e-03, 3.2375e-03],
         [9.9152e-01, 9.9038e-01, 9.9088e-01,  ..., 2.4931e-05,
          9.9123e-01, 9.9029e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 686:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:26:02,918 [Process: 0] Synchronize training processes
2024-08-16 16:26:02,918 [Process: 0] Evaluating...
2024-08-16 16:26:02,920 [Process: 0] EPOCH 686:
2024-08-16 16:26:02,922 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0043, 0.0042, 0.0041,  ..., 0.0042, 0.0043, 0.0043],
         [0.0043, 0.0042, 0.0041,  ..., 0.0042, 0.0043, 0.0043],
         [0.0043, 0.0042, 0.0041,  ..., 0.0042, 0.0043, 0.0043],
         [0.9870, 0.9873, 0.9876,  ..., 0.9875, 0.9870, 0.9871]],
        [[0.0039, 0.0043, 0.0042,  ..., 0.0037, 0.0041, 0.0041],
         [0.0039, 0.0043, 0.0042,  ..., 0.0037, 0.0041, 0.0041],
         [0.0039, 0.0043, 0.0042,  ..., 0.0037, 0.0041, 0.0041],
         [0.9884, 0.9871, 0.9873,  ..., 0.9888, 0.9878, 0.9878]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2767e-03, 3.5760e-03, 3.1380e-03,  ..., 3.1870e-03,
          3.0121e-03, 3.3687e-03],
         [3.2767e-03, 3.5760e-03, 3.1380e-03,  ..., 3.1870e-03,
          3.0121e-03, 3.3687e-03],
         [3.2767e-03, 3.5760e-03, 3.1380e-03,  ..., 3.1870e-03,
          3.0121e-03, 3.3687e-03],
         [9.9017e-01, 9.8927e-01, 9.9059e-01,  ..., 9.9044e-01,
          9.9096e-01, 9.8989e-01]],
        [[3.3872e-03, 3.1283e-03, 3.1754e-03,  ..., 6.1273e-03,
          3.1586e-03, 3.1731e-03],
         [3.3872e-03, 3.1283e-03, 3.1754e-03,  ..., 4.1539e-05,
          3.1586e-03, 3.1731e-03],
         [3.3872e-03, 3.1283e-03, 3.1754e-03,  ..., 9.9379e-01,
          3.1586e-03, 3.1731e-03],
         [9.8984e-01, 9.9062e-01, 9.9047e-01,  ..., 4.1539e-05,
          9.9052e-01, 9.9048e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 687:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-16 16:26:04,881 [Process: 0] Synchronize training processes
2024-08-16 16:26:04,882 [Process: 0] Evaluating...
2024-08-16 16:26:04,883 [Process: 0] EPOCH 687:
2024-08-16 16:26:04,885 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0044, 0.0043, 0.0043,  ..., 0.0042, 0.0045, 0.0043],
         [0.0044, 0.0043, 0.0043,  ..., 0.0042, 0.0045, 0.0043],
         [0.0044, 0.0043, 0.0043,  ..., 0.0042, 0.0045, 0.0043],
         [0.9867, 0.9870, 0.9872,  ..., 0.9875, 0.9866, 0.9871]],
        [[0.0039, 0.0038, 0.0035,  ..., 0.0037, 0.0039, 0.0038],
         [0.0039, 0.0038, 0.0035,  ..., 0.0037, 0.0039, 0.0038],
         [0.0039, 0.0038, 0.0035,  ..., 0.0037, 0.0039, 0.0038],
         [0.9884, 0.9887, 0.9896,  ..., 0.9888, 0.9882, 0.9885]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:26:06,943 [Process: 0] Synchronize training processes
2024-08-16 16:26:06,943 [Process: 0] Evaluating...
2024-08-16 16:26:06,945 [Process: 0] EPOCH 688:
2024-08-16 16:26:06,947 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1721e-03, 3.9512e-03, 3.1398e-03,  ..., 3.0022e-03,
          3.2722e-03, 3.1869e-03],
         [3.1721e-03, 3.9512e-03, 3.1398e-03,  ..., 3.0022e-03,
          3.2722e-03, 3.1869e-03],
         [3.1721e-03, 3.9512e-03, 3.1398e-03,  ..., 3.0022e-03,
          3.2722e-03, 3.1869e-03],
         [9.9048e-01, 9.8815e-01, 9.9058e-01,  ..., 9.9099e-01,
          9.9018e-01, 9.9044e-01]],
        [[3.2456e-03, 3.2650e-03, 3.0737e-03,  ..., 2.2047e-03,
          2.8884e-03, 2.7750e-03],
         [3.2456e-03, 3.2650e-03, 3.0737e-03,  ..., 3.4165e-05,
          2.8884e-03, 2.7750e-03],
         [3.2456e-03, 3.2650e-03, 3.0737e-03,  ..., 9.9773e-01,
          2.8884e-03, 2.7750e-03],
         [9.9026e-01, 9.9021e-01, 9.9078e-01,  ..., 3.4165e-05,
          9.9133e-01, 9.9167e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 688:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0043, 0.0041, 0.0042,  ..., 0.0041, 0.0040, 0.0040],
         [0.0043, 0.0041, 0.0042,  ..., 0.0041, 0.0040, 0.0040],
         [0.0043, 0.0041, 0.0042,  ..., 0.0041, 0.0040, 0.0040],
         [0.9872, 0.9876, 0.9875,  ..., 0.9876, 0.9881, 0.9881]],
        [[0.0036, 0.0041, 0.0041,  ..., 0.0040, 0.0042, 0.0040],
         [0.0036, 0.0041, 0.0041,  ..., 0.0040, 0.0042, 0.0040],
         [0.0036, 0.0041, 0.0041,  ..., 0.0040, 0.0042, 0.0040],
         [0.9891, 0.9878, 0.9877,  ..., 0.9881, 0.9873, 0.9881]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:26:09,051 [Process: 0] Synchronize training processes
2024-08-16 16:26:09,051 [Process: 0] Evaluating...
2024-08-16 16:26:09,053 [Process: 0] EPOCH 689:
2024-08-16 16:26:09,055 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2263e-03, 3.7535e-03, 2.8865e-03,  ..., 3.0269e-03,
          3.1709e-03, 3.0008e-03],
         [3.2263e-03, 3.7535e-03, 2.8865e-03,  ..., 3.0269e-03,
          3.1709e-03, 3.0008e-03],
         [3.2263e-03, 3.7535e-03, 2.8865e-03,  ..., 3.0269e-03,
          3.1709e-03, 3.0008e-03],
         [9.9032e-01, 9.8874e-01, 9.9134e-01,  ..., 9.9092e-01,
          9.9049e-01, 9.9100e-01]],
        [[3.1474e-03, 3.0170e-03, 2.8683e-03,  ..., 2.6559e-04,
          2.8498e-03, 2.9132e-03],
         [3.1474e-03, 3.0170e-03, 2.8683e-03,  ..., 1.7927e-06,
          2.8498e-03, 2.9132e-03],
         [3.1474e-03, 3.0170e-03, 2.8683e-03,  ..., 9.9973e-01,
          2.8498e-03, 2.9132e-03],
         [9.9056e-01, 9.9095e-01, 9.9140e-01,  ..., 1.7927e-06,
          9.9145e-01, 9.9126e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 689:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0042, 0.0042, 0.0040,  ..., 0.0042, 0.0042, 0.0040],
         [0.0042, 0.0042, 0.0040,  ..., 0.0042, 0.0042, 0.0040],
         [0.0042, 0.0042, 0.0040,  ..., 0.0042, 0.0042, 0.0040],
         [0.9874, 0.9874, 0.9879,  ..., 0.9875, 0.9875, 0.9880]],
        [[0.0039, 0.0040, 0.0038,  ..., 0.0039, 0.0042, 0.0042],
         [0.0039, 0.0040, 0.0038,  ..., 0.0039, 0.0042, 0.0042],
         [0.0039, 0.0040, 0.0038,  ..., 0.0039, 0.0042, 0.0042],
         [0.9883, 0.9881, 0.9887,  ..., 0.9884, 0.9873, 0.9875]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:26:11,101 [Process: 0] Synchronize training processes
2024-08-16 16:26:11,102 [Process: 0] Evaluating...
2024-08-16 16:26:11,104 [Process: 0] EPOCH 690:
2024-08-16 16:26:11,105 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.2097e-03, 3.5786e-03, 2.9379e-03,  ..., 3.1350e-03,
          3.0565e-03, 2.8896e-03],
         [3.2097e-03, 3.5786e-03, 2.9379e-03,  ..., 3.1350e-03,
          3.0565e-03, 2.8896e-03],
         [3.2097e-03, 3.5786e-03, 2.9379e-03,  ..., 3.1350e-03,
          3.0565e-03, 2.8896e-03],
         [9.9037e-01, 9.8926e-01, 9.9119e-01,  ..., 9.9059e-01,
          9.9083e-01, 9.9133e-01]],
        [[3.1084e-03, 3.1938e-03, 3.2424e-03,  ..., 2.6082e-04,
          3.1411e-03, 2.8763e-03],
         [3.1084e-03, 3.1938e-03, 3.2424e-03,  ..., 3.1067e-07,
          3.1411e-03, 2.8763e-03],
         [3.1084e-03, 3.1938e-03, 3.2424e-03,  ..., 9.9974e-01,
          3.1411e-03, 2.8763e-03],
         [9.9067e-01, 9.9042e-01, 9.9027e-01,  ..., 3.1067e-07,
          9.9058e-01, 9.9137e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 690:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0040, 0.0041, 0.0042,  ..., 0.0040, 0.0039, 0.0042],
         [0.0040, 0.0041, 0.0042,  ..., 0.0040, 0.0039, 0.0042],
         [0.0040, 0.0041, 0.0042,  ..., 0.0040, 0.0039, 0.0042],
         [0.9880, 0.9878, 0.9874,  ..., 0.9879, 0.9882, 0.9873]],
        [[0.0041, 0.0036, 0.0039,  ..., 0.0038, 0.0037, 0.0037],
         [0.0041, 0.0036, 0.0039,  ..., 0.0038, 0.0037, 0.0037],
         [0.0041, 0.0036, 0.0039,  ..., 0.0038, 0.0037, 0.0037],
         [0.9878, 0.9892, 0.9883,  ..., 0.9885, 0.9889, 0.9889]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:26:13,053 [Process: 0] Synchronize training processes
2024-08-16 16:26:13,053 [Process: 0] Evaluating...
2024-08-16 16:26:13,055 [Process: 0] EPOCH 691:
2024-08-16 16:26:13,057 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.0505e-03, 3.7901e-03, 2.9455e-03,  ..., 3.0133e-03,
          3.0948e-03, 3.2925e-03],
         [3.0505e-03, 3.7901e-03, 2.9455e-03,  ..., 3.0133e-03,
          3.0948e-03, 3.2925e-03],
         [3.0505e-03, 3.7901e-03, 2.9455e-03,  ..., 3.0133e-03,
          3.0948e-03, 3.2925e-03],
         [9.9085e-01, 9.8863e-01, 9.9116e-01,  ..., 9.9096e-01,
          9.9072e-01, 9.9012e-01]],
        [[3.0020e-03, 2.9208e-03, 3.1526e-03,  ..., 1.8477e-03,
          2.8641e-03, 2.7521e-03],
         [3.0020e-03, 2.9208e-03, 3.1526e-03,  ..., 1.0846e-05,
          2.8641e-03, 2.7521e-03],
         [3.0020e-03, 2.9208e-03, 3.1526e-03,  ..., 9.9813e-01,
          2.8641e-03, 2.7521e-03],
         [9.9099e-01, 9.9124e-01, 9.9054e-01,  ..., 1.0846e-05,
          9.9141e-01, 9.9174e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 691:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0039, 0.0041, 0.0040,  ..., 0.0042, 0.0037, 0.0037],
         [0.0039, 0.0041, 0.0040,  ..., 0.0042, 0.0037, 0.0037],
         [0.0039, 0.0041, 0.0040,  ..., 0.0042, 0.0037, 0.0037],
         [0.9884, 0.9877, 0.9879,  ..., 0.9874, 0.9888, 0.9889]],
        [[0.0042, 0.0042, 0.0037,  ..., 0.0040, 0.0042, 0.0040],
         [0.0042, 0.0042, 0.0037,  ..., 0.0040, 0.0042, 0.0040],
         [0.0042, 0.0042, 0.0037,  ..., 0.0040, 0.0042, 0.0040],
         [0.9875, 0.9875, 0.9888,  ..., 0.9879, 0.9874, 0.9880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:26:15,166 [Process: 0] Synchronize training processes
2024-08-16 16:26:15,166 [Process: 0] Evaluating...
2024-08-16 16:26:15,174 [Process: 0] EPOCH 692:
2024-08-16 16:26:15,177 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.9666e-03, 3.7525e-03, 3.1056e-03,  ..., 3.0381e-03,
          3.1712e-03, 3.0290e-03],
         [2.9666e-03, 3.7525e-03, 3.1056e-03,  ..., 3.0381e-03,
          3.1712e-03, 3.0290e-03],
         [2.9666e-03, 3.7525e-03, 3.1056e-03,  ..., 3.0381e-03,
          3.1712e-03, 3.0290e-03],
         [9.9110e-01, 9.8874e-01, 9.9068e-01,  ..., 9.9089e-01,
          9.9049e-01, 9.9091e-01]],
        [[3.0008e-03, 3.1977e-03, 2.9131e-03,  ..., 2.4517e-04,
          3.0082e-03, 2.8810e-03],
         [3.0008e-03, 3.1977e-03, 2.9131e-03,  ..., 1.9061e-06,
          3.0082e-03, 2.8810e-03],
         [3.0008e-03, 3.1977e-03, 2.9131e-03,  ..., 9.9975e-01,
          3.0082e-03, 2.8810e-03],
         [9.9100e-01, 9.9041e-01, 9.9126e-01,  ..., 1.9061e-06,
          9.9098e-01, 9.9136e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 692:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0043, 0.0042, 0.0039,  ..., 0.0040, 0.0041, 0.0041],
         [0.0043, 0.0042, 0.0039,  ..., 0.0040, 0.0041, 0.0041],
         [0.0043, 0.0042, 0.0039,  ..., 0.0040, 0.0041, 0.0041],
         [0.9871, 0.9875, 0.9883,  ..., 0.9879, 0.9878, 0.9878]],
        [[0.0040, 0.0040, 0.0040,  ..., 0.0042, 0.0040, 0.0040],
         [0.0040, 0.0040, 0.0040,  ..., 0.0042, 0.0040, 0.0040],
         [0.0040, 0.0040, 0.0040,  ..., 0.0042, 0.0040, 0.0040],
         [0.9879, 0.9879, 0.9879,  ..., 0.9873, 0.9879, 0.9879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:26:17,233 [Process: 0] Synchronize training processes
2024-08-16 16:26:17,233 [Process: 0] Evaluating...
2024-08-16 16:26:17,235 [Process: 0] EPOCH 693:
2024-08-16 16:26:17,237 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.9567e-03, 3.8526e-03, 3.0588e-03,  ..., 3.2532e-03,
          3.1720e-03, 3.1393e-03],
         [2.9567e-03, 3.8526e-03, 3.0588e-03,  ..., 3.2532e-03,
          3.1720e-03, 3.1393e-03],
         [2.9567e-03, 3.8526e-03, 3.0588e-03,  ..., 3.2532e-03,
          3.1720e-03, 3.1393e-03],
         [9.9113e-01, 9.8844e-01, 9.9082e-01,  ..., 9.9024e-01,
          9.9048e-01, 9.9058e-01]],
        [[3.0454e-03, 3.3145e-03, 3.0575e-03,  ..., 8.1289e-04,
          3.1674e-03, 3.2166e-03],
         [3.0454e-03, 3.3145e-03, 3.0575e-03,  ..., 4.4333e-06,
          3.1674e-03, 3.2166e-03],
         [3.0454e-03, 3.3145e-03, 3.0575e-03,  ..., 9.9918e-01,
          3.1674e-03, 3.2166e-03],
         [9.9086e-01, 9.9006e-01, 9.9083e-01,  ..., 4.4333e-06,
          9.9050e-01, 9.9035e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 693:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0040, 0.0041, 0.0041,  ..., 0.0040, 0.0042, 0.0040],
         [0.0040, 0.0041, 0.0041,  ..., 0.0040, 0.0042, 0.0040],
         [0.0040, 0.0041, 0.0041,  ..., 0.0040, 0.0042, 0.0040],
         [0.9879, 0.9878, 0.9876,  ..., 0.9881, 0.9875, 0.9879]],
        [[0.0041, 0.0042, 0.0037,  ..., 0.0040, 0.0039, 0.0038],
         [0.0041, 0.0042, 0.0037,  ..., 0.0040, 0.0039, 0.0038],
         [0.0041, 0.0042, 0.0037,  ..., 0.0040, 0.0039, 0.0038],
         [0.9876, 0.9875, 0.9888,  ..., 0.9881, 0.9882, 0.9885]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
2024-08-16 16:26:19,227 [Process: 0] Synchronize training processes
2024-08-16 16:26:19,227 [Process: 0] Evaluating...
2024-08-16 16:26:19,229 [Process: 0] EPOCH 694:
2024-08-16 16:26:19,231 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.9352e-03, 3.9239e-03, 3.0439e-03,  ..., 2.9061e-03,
          3.1864e-03, 3.0774e-03],
         [2.9352e-03, 3.9239e-03, 3.0439e-03,  ..., 2.9061e-03,
          3.1864e-03, 3.0774e-03],
         [2.9352e-03, 3.9239e-03, 3.0439e-03,  ..., 2.9061e-03,
          3.1864e-03, 3.0774e-03],
         [9.9119e-01, 9.8823e-01, 9.9087e-01,  ..., 9.9128e-01,
          9.9044e-01, 9.9077e-01]],
        [[3.0503e-03, 3.4281e-03, 3.2762e-03,  ..., 4.4694e-04,
          2.8873e-03, 2.7748e-03],
         [3.0503e-03, 3.4281e-03, 3.2762e-03,  ..., 3.1655e-06,
          2.8873e-03, 2.7748e-03],
         [3.0503e-03, 3.4281e-03, 3.2762e-03,  ..., 9.9955e-01,
          2.8873e-03, 2.7748e-03],
         [9.9085e-01, 9.8972e-01, 9.9017e-01,  ..., 3.1655e-06,
          9.9134e-01, 9.9168e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 694:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0041, 0.0043, 0.0041,  ..., 0.0039, 0.0042, 0.0041],
         [0.0041, 0.0043, 0.0041,  ..., 0.0039, 0.0042, 0.0041],
         [0.0041, 0.0043, 0.0041,  ..., 0.0039, 0.0042, 0.0041],
         [0.9877, 0.9870, 0.9876,  ..., 0.9884, 0.9875, 0.9876]],
        [[0.0038, 0.0041, 0.0042,  ..., 0.0039, 0.0039, 0.0038],
         [0.0038, 0.0041, 0.0042,  ..., 0.0039, 0.0039, 0.0038],
         [0.0038, 0.0041, 0.0042,  ..., 0.0039, 0.0039, 0.0038],
         [0.9885, 0.9877, 0.9875,  ..., 0.9884, 0.9882, 0.9887]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 203, in train_one_epoch
    loss.backward()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/autograd/__init__.py", line 192, in backward
    grad_tensors_ = _tensor_or_tensors_to_tuple(grad_tensors, len(tensors))
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/autograd/__init__.py", line 98, in _tensor_or_tensors_to_tuple
    def _tensor_or_tensors_to_tuple(tensors: Optional[_TensorOrTensors], length: int) -> Tuple[_OptionalTensor, ...]:
KeyboardInterrupt
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.0135e-03, 3.6851e-03, 2.8997e-03,  ..., 3.0452e-03,
          3.1753e-03, 3.0629e-03],
         [3.0135e-03, 3.6851e-03, 2.8997e-03,  ..., 3.0452e-03,
          3.1753e-03, 3.0629e-03],
         [3.0135e-03, 3.6851e-03, 2.8997e-03,  ..., 3.0452e-03,
          3.1753e-03, 3.0629e-03],
         [9.9096e-01, 9.8894e-01, 9.9130e-01,  ..., 9.9086e-01,
          9.9047e-01, 9.9081e-01]],
        [[2.9504e-03, 3.1739e-03, 2.9413e-03,  ..., 9.0065e-05,
          3.0636e-03, 2.8921e-03],
         [2.9504e-03, 3.1739e-03, 2.9413e-03,  ..., 4.2146e-08,
          3.0636e-03, 2.8921e-03],
         [2.9504e-03, 3.1739e-03, 2.9413e-03,  ..., 9.9991e-01,
          3.0636e-03, 2.8921e-03],
         [9.9115e-01, 9.9048e-01, 9.9118e-01,  ..., 4.2146e-08,
          9.9081e-01, 9.9132e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])