2024-08-20 17:40:06,406 [Worker 0] Is distributed: False
2024-08-20 17:40:06,407 [Process: 0] Starting training
2024-08-20 17:40:06,407 [Process: 0] EPOCH 1:
2024-08-20 17:40:06,411 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:07,837 [Process: 0] Synchronize training processes
2024-08-20 17:40:07,838 [Process: 0] Evaluating...
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2028, 0.3592, 0.1945,  ..., 0.1251, 0.4740, 0.1963],
         [0.3724, 0.2667, 0.1582,  ..., 0.1394, 0.1753, 0.4111],
         [0.2220, 0.1966, 0.4491,  ..., 0.5495, 0.1753, 0.1963],
         [0.2028, 0.1774, 0.1982,  ..., 0.1860, 0.1753, 0.1963]],
        [[0.3022, 0.1658, 0.5318,  ..., 0.2739, 0.2172, 0.1463],
         [0.1963, 0.4420, 0.0963,  ..., 0.3728, 0.2172, 0.2151],
         [0.1502, 0.2115, 0.0963,  ..., 0.1767, 0.3485, 0.1463],
         [0.3513, 0.1806, 0.2755,  ..., 0.1767, 0.2172, 0.4923]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2691, 0.2698, 0.2779,  ..., 0.2468, 0.2071, 0.1471],
         [0.2868, 0.2636, 0.2974,  ..., 0.2794, 0.3611, 0.2412],
         [0.2182, 0.2049, 0.1985,  ..., 0.2003, 0.1796, 0.1481],
         [0.2259, 0.2618, 0.2262,  ..., 0.2736, 0.2521, 0.4636]],
        [[0.2227, 0.2456, 0.2324,  ..., 0.3030, 0.2591, 0.2835],
         [0.3019, 0.2551, 0.2671,  ..., 0.2496, 0.2446, 0.2949],
         [0.2037, 0.2441, 0.2090,  ..., 0.1917, 0.2446, 0.2196],
         [0.2717, 0.2552, 0.2916,  ..., 0.2557, 0.2517, 0.2020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:40:09,698 [Process: 0] EPOCH 2:
2024-08-20 17:40:09,703 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:10,593 [Process: 0] Synchronize training processes
2024-08-20 17:40:10,593 [Process: 0] Evaluating...
2024-08-20 17:40:10,595 [Process: 0] EPOCH 3:
2024-08-20 17:40:10,597 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0241, 0.2667, 0.2640,  ..., 0.2827, 0.2029, 0.2702],
         [0.0241, 0.2563, 0.2618,  ..., 0.2471, 0.2281, 0.2668],
         [0.9277, 0.2221, 0.2082,  ..., 0.2115, 0.3599, 0.1970],
         [0.0241, 0.2549, 0.2661,  ..., 0.2587, 0.2090, 0.2659]],
        [[0.1180, 0.2712, 0.2671,  ..., 0.2568, 0.2707, 0.2670],
         [0.1180, 0.2573, 0.2453,  ..., 0.2601, 0.2378, 0.2508],
         [0.6459, 0.1975, 0.2161,  ..., 0.2025, 0.2318, 0.1972],
         [0.1180, 0.2740, 0.2714,  ..., 0.2806, 0.2598, 0.2851]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:40:11,443 [Process: 0] Synchronize training processes
2024-08-20 17:40:11,443 [Process: 0] Evaluating...
2024-08-20 17:40:11,445 [Process: 0] EPOCH 4:
2024-08-20 17:40:11,446 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:12,293 [Process: 0] Synchronize training processes
2024-08-20 17:40:12,293 [Process: 0] Evaluating...
2024-08-20 17:40:12,295 [Process: 0] EPOCH 5:
2024-08-20 17:40:12,296 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2887, 0.2782, 0.2748,  ..., 0.2769, 0.2898, 0.2787],
         [0.2463, 0.2479, 0.2617,  ..., 0.2578, 0.2487, 0.2580],
         [0.1927, 0.1901, 0.1845,  ..., 0.1947, 0.1970, 0.1864],
         [0.2724, 0.2838, 0.2790,  ..., 0.2707, 0.2645, 0.2769]],
        [[0.2738, 0.2722, 0.2730,  ..., 0.2740, 0.2758, 0.2252],
         [0.2396, 0.2489, 0.2582,  ..., 0.2655, 0.2581, 0.2252],
         [0.2140, 0.1840, 0.1983,  ..., 0.1902, 0.2027, 0.3245],
         [0.2725, 0.2948, 0.2705,  ..., 0.2704, 0.2634, 0.2252]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2829, 0.2702, 0.2706,  ..., 0.2750, 0.2796, 0.2751],
         [0.2437, 0.2480, 0.2409,  ..., 0.2524, 0.2494, 0.2574],
         [0.1983, 0.2041, 0.2111,  ..., 0.2016, 0.2041, 0.2027],
         [0.2752, 0.2777, 0.2774,  ..., 0.2710, 0.2669, 0.2648]],
        [[0.2862, 0.2662, 0.2780,  ..., 0.2718, 0.0598, 0.2768],
         [0.2468, 0.2430, 0.2476,  ..., 0.2458, 0.0598, 0.2478],
         [0.2000, 0.2069, 0.1973,  ..., 0.1992, 0.8205, 0.1977],
         [0.2671, 0.2840, 0.2771,  ..., 0.2831, 0.0598, 0.2777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2872, 0.2871, 0.2840,  ..., 0.2754, 0.2943, 0.2682],
         [0.2442, 0.2356, 0.2371,  ..., 0.2398, 0.2421, 0.2460],
         [0.1824, 0.1818, 0.1949,  ..., 0.1958, 0.1817, 0.2008],
         [0.2862, 0.2954, 0.2839,  ..., 0.2890, 0.2818, 0.2849]],
        [[0.0910, 0.2909, 0.2857,  ..., 0.2790, 0.2912, 0.1218],
         [0.0910, 0.2433, 0.2348,  ..., 0.2508, 0.2424, 0.1218],
         [0.7271, 0.1838, 0.1905,  ..., 0.1883, 0.1864, 0.6346],
         [0.0910, 0.2820, 0.2890,  ..., 0.2820, 0.2799, 0.1218]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2871, 0.2931, 0.2780,  ..., 0.2902, 0.2951, 0.2791],
         [0.2342, 0.2402, 0.2351,  ..., 0.2263, 0.2265, 0.2298],
         [0.1922, 0.1895, 0.2100,  ..., 0.1959, 0.1934, 0.2083],
         [0.2865, 0.2771, 0.2769,  ..., 0.2876, 0.2851, 0.2827]],
        [[0.2846, 0.2871, 0.2900,  ..., 0.2944, 0.0503, 0.2823],
         [0.2310, 0.2403, 0.2230,  ..., 0.2235, 0.0503, 0.2344],
         [0.2083, 0.1958, 0.2097,  ..., 0.1996, 0.8491, 0.2010],
         [0.2761, 0.2767, 0.2773,  ..., 0.2825, 0.0503, 0.2823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-20 17:40:13,142 [Process: 0] Synchronize training processes
2024-08-20 17:40:13,142 [Process: 0] Evaluating...
2024-08-20 17:40:13,144 [Process: 0] EPOCH 6:
2024-08-20 17:40:13,146 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:13,998 [Process: 0] Synchronize training processes
2024-08-20 17:40:13,998 [Process: 0] Evaluating...
2024-08-20 17:40:14,000 [Process: 0] EPOCH 7:
2024-08-20 17:40:14,001 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3038, 0.3014, 0.2865,  ..., 0.3002, 0.3018, 0.2992],
         [0.2180, 0.2184, 0.2270,  ..., 0.2138, 0.2200, 0.2235],
         [0.1904, 0.1847, 0.1969,  ..., 0.1979, 0.1930, 0.1812],
         [0.2878, 0.2955, 0.2896,  ..., 0.2881, 0.2853, 0.2961]],
        [[0.1265, 0.3006, 0.2878,  ..., 0.2890, 0.2999, 0.0864],
         [0.1265, 0.2237, 0.2128,  ..., 0.2229, 0.2117, 0.0864],
         [0.6206, 0.2000, 0.2024,  ..., 0.2034, 0.1823, 0.7408],
         [0.1265, 0.2756, 0.2970,  ..., 0.2847, 0.3061, 0.0864]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2949, 0.3067, 0.2876,  ..., 0.2970, 0.3036, 0.2864],
         [0.2102, 0.2052, 0.2107,  ..., 0.2131, 0.2117, 0.2143],
         [0.2013, 0.1932, 0.2107,  ..., 0.2046, 0.2066, 0.2069],
         [0.2935, 0.2949, 0.2910,  ..., 0.2853, 0.2781, 0.2924]],
        [[0.2986, 0.2950, 0.2925,  ..., 0.2929, 0.1502, 0.2931],
         [0.2063, 0.2179, 0.2185,  ..., 0.2170, 0.1502, 0.2188],
         [0.1963, 0.2010, 0.1997,  ..., 0.1975, 0.5493, 0.2126],
         [0.2988, 0.2861, 0.2893,  ..., 0.2926, 0.1502, 0.2754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3061, 0.3002, 0.2982,  ..., 0.3081, 0.3077, 0.3009],
         [0.1973, 0.1961, 0.2118,  ..., 0.2004, 0.2010, 0.2027],
         [0.1973, 0.1937, 0.2055,  ..., 0.1950, 0.1838, 0.1954],
         [0.2994, 0.3100, 0.2845,  ..., 0.2965, 0.3075, 0.3011]],
        [[0.1548, 0.3009, 0.2987,  ..., 0.3136, 0.3007, 0.1684],
         [0.1548, 0.2112, 0.1961,  ..., 0.2005, 0.2012, 0.1684],
         [0.5356, 0.2112, 0.1942,  ..., 0.1937, 0.2012, 0.4948],
         [0.1548, 0.2766, 0.3111,  ..., 0.2922, 0.2969, 0.1684]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3137, 0.3264, 0.3400,  ..., 0.3089, 0.3327, 0.3236],
         [0.1921, 0.1969, 0.1973,  ..., 0.2001, 0.1929, 0.1989],
         [0.1892, 0.1890, 0.1669,  ..., 0.1794, 0.1888, 0.1901],
         [0.3050, 0.2877, 0.2958,  ..., 0.3115, 0.2856, 0.2873]],
        [[0.3324, 0.3223, 0.3162,  ..., 0.3263, 0.1168, 0.3039],
         [0.1886, 0.1853, 0.2047,  ..., 0.2070, 0.1168, 0.1988],
         [0.1782, 0.1806, 0.1810,  ..., 0.1890, 0.6496, 0.1978],
         [0.3009, 0.3118, 0.2981,  ..., 0.2777, 0.1168, 0.2995]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1999, 0.3227, 0.3393,  ..., 0.3274, 0.3286, 0.3284],
         [0.2265, 0.1885, 0.1871,  ..., 0.1892, 0.1979, 0.1959],
         [0.3666, 0.1780, 0.1724,  ..., 0.1892, 0.1773, 0.1858],
         [0.2071, 0.3108, 0.3012,  ..., 0.2942, 0.2962, 0.2899]],
        [[0.1855, 0.2994, 0.3212,  ..., 0.3185, 0.3364, 0.1413],
         [0.1855, 0.2060, 0.1901,  ..., 0.1990, 0.1827, 0.1413],
         [0.4436, 0.2017, 0.1837,  ..., 0.1804, 0.1693, 0.5762],
         [0.1855, 0.2929, 0.3051,  ..., 0.3021, 0.3116, 0.1413]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:14,860 [Process: 0] Synchronize training processes
2024-08-20 17:40:14,860 [Process: 0] Evaluating...
2024-08-20 17:40:14,862 [Process: 0] EPOCH 8:
2024-08-20 17:40:14,864 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:15,715 [Process: 0] Synchronize training processes
2024-08-20 17:40:15,716 [Process: 0] Evaluating...
2024-08-20 17:40:15,718 [Process: 0] EPOCH 9:
2024-08-20 17:40:15,719 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:16,564 [Process: 0] Synchronize training processes
2024-08-20 17:40:16,564 [Process: 0] Evaluating...
2024-08-20 17:40:16,566 [Process: 0] EPOCH 10:
2024-08-20 17:40:16,567 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3069, 0.3418, 0.3311,  ..., 0.3265, 0.3455, 0.3210],
         [0.2032, 0.1891, 0.1858,  ..., 0.1922, 0.1831, 0.1867],
         [0.2032, 0.1754, 0.1778,  ..., 0.1770, 0.1714, 0.1863],
         [0.2868, 0.2936, 0.3053,  ..., 0.3043, 0.3000, 0.3060]],
        [[0.3415, 0.3380, 0.3515,  ..., 0.3330, 0.1339, 0.1734],
         [0.1854, 0.1801, 0.1735,  ..., 0.1934, 0.1339, 0.1756],
         [0.1769, 0.1770, 0.1692,  ..., 0.1843, 0.5983, 0.4776],
         [0.2962, 0.3049, 0.3058,  ..., 0.2893, 0.1339, 0.1734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1478, 0.3377, 0.3769,  ..., 0.3435, 0.3436, 0.3136],
         [0.1478, 0.1784, 0.1769,  ..., 0.1947, 0.1908, 0.2099],
         [0.5567, 0.1761, 0.1439,  ..., 0.1772, 0.1781, 0.1894],
         [0.1478, 0.3078, 0.3023,  ..., 0.2846, 0.2875, 0.2872]],
        [[0.1251, 0.3215, 0.3489,  ..., 0.3395, 0.3415, 0.0860],
         [0.1251, 0.2019, 0.1757,  ..., 0.1981, 0.1859, 0.0860],
         [0.6247, 0.1876, 0.1692,  ..., 0.1840, 0.1846, 0.7420],
         [0.1251, 0.2890, 0.3062,  ..., 0.2784, 0.2879, 0.0860]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3258, 0.3426, 0.3175,  ..., 0.3411, 0.3254, 0.3423],
         [0.1922, 0.1881, 0.1940,  ..., 0.1933, 0.1885, 0.1877],
         [0.1850, 0.1881, 0.1940,  ..., 0.1694, 0.1793, 0.1845],
         [0.2970, 0.2811, 0.2944,  ..., 0.2962, 0.3067, 0.2855]],
        [[0.3600, 0.3576, 0.3505,  ..., 0.3569, 0.1153, 0.2428],
         [0.1854, 0.1835, 0.1763,  ..., 0.1825, 0.1153, 0.2282],
         [0.1564, 0.1571, 0.1763,  ..., 0.1716, 0.6541, 0.2744],
         [0.2982, 0.3018, 0.2970,  ..., 0.2891, 0.1153, 0.2546]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1684, 0.3714, 0.3712,  ..., 0.3829, 0.3162, 0.1785],
         [0.1839, 0.1851, 0.1629,  ..., 0.1748, 0.2018, 0.1785],
         [0.4792, 0.1439, 0.1496,  ..., 0.1416, 0.1819, 0.4645],
         [0.1684, 0.2997, 0.3163,  ..., 0.3008, 0.3001, 0.1785]],
        [[0.1604, 0.3507, 0.3704,  ..., 0.3555, 0.3937, 0.1070],
         [0.1604, 0.1852, 0.1715,  ..., 0.1696, 0.1504, 0.1070],
         [0.5189, 0.1850, 0.1507,  ..., 0.1548, 0.1379, 0.6789],
         [0.1604, 0.2791, 0.3074,  ..., 0.3200, 0.3180, 0.1070]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3528, 0.4124, 0.3664,  ..., 0.3603, 0.3548, 0.3553],
         [0.1896, 0.1607, 0.1829,  ..., 0.1772, 0.1798, 0.1731],
         [0.1624, 0.1304, 0.1598,  ..., 0.1772, 0.1738, 0.1637],
         [0.2953, 0.2964, 0.2909,  ..., 0.2852, 0.2916, 0.3080]],
        [[0.3931, 0.1493, 0.3847,  ..., 0.2798, 0.0560, 0.1761],
         [0.1663, 0.1493, 0.1604,  ..., 0.2078, 0.0560, 0.1761],
         [0.1405, 0.5521, 0.1587,  ..., 0.2078, 0.8320, 0.4717],
         [0.3002, 0.1493, 0.2961,  ..., 0.3046, 0.0560, 0.1761]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:40:17,384 [Process: 0] Synchronize training processes
2024-08-20 17:40:17,385 [Process: 0] Evaluating...
2024-08-20 17:40:17,387 [Process: 0] EPOCH 11:
2024-08-20 17:40:17,388 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:18,225 [Process: 0] Synchronize training processes
2024-08-20 17:40:18,226 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1990, 0.4256, 0.3632,  ..., 0.4499, 0.1537, 0.0820],
         [0.2094, 0.1568, 0.1781,  ..., 0.1445, 0.1541, 0.0820],
         [0.3925, 0.1322, 0.1585,  ..., 0.1245, 0.5385, 0.7540],
         [0.1990, 0.2854, 0.3002,  ..., 0.2811, 0.1537, 0.0820]],
        [[0.0688, 0.3987, 0.4025,  ..., 0.3549, 0.4126, 0.0919],
         [0.0688, 0.1567, 0.1595,  ..., 0.1664, 0.1509, 0.1094],
         [0.7935, 0.1482, 0.1411,  ..., 0.1629, 0.1509, 0.7068],
         [0.0688, 0.2964, 0.2969,  ..., 0.3158, 0.2856, 0.0919]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3536, 0.4292, 0.3403,  ..., 0.3977, 0.3782, 0.3526],
         [0.1745, 0.1504, 0.1859,  ..., 0.1658, 0.1790, 0.1671],
         [0.1713, 0.1433, 0.1859,  ..., 0.1450, 0.1656, 0.1671],
         [0.3005, 0.2771, 0.2879,  ..., 0.2915, 0.2772, 0.3132]],
        [[0.3574, 0.3147, 0.2243,  ..., 0.3111, 0.0860, 0.2105],
         [0.1771, 0.1913, 0.2243,  ..., 0.1946, 0.0860, 0.2105],
         [0.1771, 0.1913, 0.2920,  ..., 0.1907, 0.7420, 0.3633],
         [0.2884, 0.3026, 0.2593,  ..., 0.3036, 0.0860, 0.2156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2240, 0.3575, 0.2203,  ..., 0.4103, 0.1393, 0.1259],
         [0.2240, 0.1629, 0.2203,  ..., 0.1468, 0.1393, 0.1259],
         [0.3149, 0.1569, 0.3009,  ..., 0.1452, 0.5822, 0.6224],
         [0.2370, 0.3227, 0.2585,  ..., 0.2978, 0.1393, 0.1259]],
        [[0.0602, 0.3873, 0.4418,  ..., 0.4188, 0.3617, 0.0809],
         [0.0602, 0.1552, 0.1399,  ..., 0.1467, 0.1554, 0.0809],
         [0.8195, 0.1329, 0.1192,  ..., 0.1392, 0.1554, 0.7572],
         [0.0602, 0.3246, 0.2991,  ..., 0.2953, 0.3276, 0.0809]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3774, 0.4363, 0.3669,  ..., 0.3875, 0.3484, 0.2748],
         [0.1562, 0.1436, 0.1728,  ..., 0.1623, 0.1748, 0.2057],
         [0.1424, 0.1327, 0.1574,  ..., 0.1467, 0.1627, 0.2057],
         [0.3240, 0.2874, 0.3029,  ..., 0.3035, 0.3141, 0.3137]],
        [[0.4224, 0.3017, 0.4020,  ..., 0.2190, 0.0612, 0.2150],
         [0.1529, 0.1885, 0.1605,  ..., 0.2190, 0.0612, 0.2150],
         [0.1354, 0.1885, 0.1605,  ..., 0.3429, 0.8164, 0.3490],
         [0.2893, 0.3214, 0.2770,  ..., 0.2190, 0.0612, 0.2209]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2162, 0.4467, 0.2140,  ..., 0.4525, 0.1871, 0.1851],
         [0.2162, 0.1392, 0.2140,  ..., 0.1524, 0.1871, 0.1851],
         [0.3514, 0.1207, 0.3581,  ..., 0.1224, 0.4387, 0.4448],
         [0.2162, 0.2935, 0.2140,  ..., 0.2726, 0.1871, 0.1851]],
        [[0.0570, 0.3988, 0.4495,  ..., 0.3904, 0.4311, 0.0916],
         [0.0570, 0.1493, 0.1435,  ..., 0.1599, 0.1312, 0.0916],
         [0.8290, 0.1493, 0.1435,  ..., 0.1599, 0.1281, 0.7252],
         [0.0570, 0.3026, 0.2636,  ..., 0.2898, 0.3096, 0.0916]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:40:20,079 [Process: 0] EPOCH 12:
2024-08-20 17:40:20,084 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:20,946 [Process: 0] Synchronize training processes
2024-08-20 17:40:20,947 [Process: 0] Evaluating...
2024-08-20 17:40:20,949 [Process: 0] EPOCH 13:
2024-08-20 17:40:20,950 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:21,797 [Process: 0] Synchronize training processes
2024-08-20 17:40:21,797 [Process: 0] Evaluating...
2024-08-20 17:40:21,799 [Process: 0] EPOCH 14:
2024-08-20 17:40:21,800 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:22,635 [Process: 0] Synchronize training processes
2024-08-20 17:40:22,635 [Process: 0] Evaluating...
2024-08-20 17:40:22,637 [Process: 0] EPOCH 15:
2024-08-20 17:40:22,638 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4234, 0.3722, 0.3855,  ..., 0.3855, 0.4768, 0.3635],
         [0.1430, 0.1585, 0.1614,  ..., 0.1600, 0.1356, 0.1741],
         [0.1403, 0.1585, 0.1324,  ..., 0.1546, 0.1147, 0.1704],
         [0.2933, 0.3109, 0.3206,  ..., 0.2999, 0.2729, 0.2920]],
        [[0.4515, 0.2796, 0.3600,  ..., 0.2420, 0.0777, 0.2104],
         [0.1540, 0.2038, 0.1781,  ..., 0.2145, 0.0777, 0.2104],
         [0.1228, 0.1967, 0.1639,  ..., 0.2361, 0.7670, 0.3539],
         [0.2717, 0.3198, 0.2979,  ..., 0.3074, 0.0777, 0.2252]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2134, 0.5153, 0.2114,  ..., 0.4748, 0.1514, 0.1860],
         [0.2134, 0.1251, 0.2114,  ..., 0.1226, 0.1514, 0.1880],
         [0.3599, 0.0972, 0.3606,  ..., 0.1148, 0.5458, 0.4401],
         [0.2134, 0.2624, 0.2166,  ..., 0.2878, 0.1514, 0.1860]],
        [[0.1200, 0.3243, 0.3974,  ..., 0.3564, 0.3868, 0.1067],
         [0.1200, 0.1752, 0.1544,  ..., 0.1564, 0.1527, 0.1067],
         [0.6399, 0.1752, 0.1432,  ..., 0.1470, 0.1394, 0.6799],
         [0.1200, 0.3254, 0.3050,  ..., 0.3403, 0.3210, 0.1067]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3528, 0.3723, 0.4412,  ..., 0.3254, 0.3515, 0.2779],
         [0.1693, 0.1634, 0.1541,  ..., 0.1871, 0.1784, 0.1965],
         [0.1693, 0.1579, 0.1387,  ..., 0.1871, 0.1646, 0.1965],
         [0.3085, 0.3064, 0.2660,  ..., 0.3003, 0.3054, 0.3291]],
        [[0.4320, 0.2817, 0.3999,  ..., 0.2405, 0.0460, 0.2203],
         [0.1449, 0.2024, 0.1576,  ..., 0.2156, 0.0460, 0.2203],
         [0.1224, 0.2024, 0.1576,  ..., 0.2710, 0.8619, 0.2777],
         [0.3006, 0.3135, 0.2849,  ..., 0.2729, 0.0460, 0.2817]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1940, 0.5021, 0.2361,  ..., 0.4373, 0.1076, 0.1542],
         [0.1940, 0.1209, 0.2119,  ..., 0.1314, 0.1076, 0.1542],
         [0.4181, 0.1015, 0.2132,  ..., 0.1235, 0.6773, 0.5374],
         [0.1940, 0.2755, 0.3389,  ..., 0.3078, 0.1076, 0.1542]],
        [[0.1364, 0.4416, 0.4821,  ..., 0.4857, 0.3749, 0.0910],
         [0.1364, 0.1311, 0.1345,  ..., 0.1162, 0.1570, 0.0950],
         [0.5907, 0.1311, 0.1056,  ..., 0.0972, 0.1570, 0.7230],
         [0.1364, 0.2962, 0.2778,  ..., 0.3009, 0.3112, 0.0910]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3437, 0.4205, 0.4337,  ..., 0.3845, 0.3510, 0.3319],
         [0.1828, 0.1623, 0.1397,  ..., 0.1615, 0.1674, 0.1731],
         [0.1674, 0.1483, 0.1268,  ..., 0.1498, 0.1658, 0.1712],
         [0.3061, 0.2689, 0.2998,  ..., 0.3042, 0.3158, 0.3238]],
        [[0.4891, 0.2171, 0.4349,  ..., 0.2140, 0.1337, 0.2044],
         [0.1361, 0.2171, 0.1459,  ..., 0.2140, 0.1337, 0.2044],
         [0.1150, 0.2917, 0.1331,  ..., 0.3154, 0.5988, 0.3427],
         [0.2598, 0.2741, 0.2861,  ..., 0.2567, 0.1337, 0.2485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:40:23,620 [Process: 0] Synchronize training processes
2024-08-20 17:40:23,620 [Process: 0] Evaluating...
2024-08-20 17:40:23,622 [Process: 0] EPOCH 16:
2024-08-20 17:40:23,623 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1657, 0.6130, 0.2184,  ..., 0.5870, 0.1223, 0.1322],
         [0.1657, 0.1033, 0.2184,  ..., 0.0923, 0.1223, 0.1322],
         [0.5030, 0.0869, 0.2560,  ..., 0.0923, 0.6331, 0.6034],
         [0.1657, 0.1968, 0.3071,  ..., 0.2283, 0.1223, 0.1322]],
        [[0.0994, 0.3903, 0.4038,  ..., 0.3875, 0.3939, 0.1273],
         [0.0994, 0.1498, 0.1547,  ..., 0.1487, 0.1403, 0.1273],
         [0.7017, 0.1493, 0.1547,  ..., 0.1487, 0.1346, 0.6180],
         [0.0994, 0.3107, 0.2869,  ..., 0.3151, 0.3313, 0.1273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2587, 0.4166, 0.3683,  ..., 0.3968, 0.3566, 0.2478],
         [0.1885, 0.1565, 0.1741,  ..., 0.1599, 0.1713, 0.2061],
         [0.1885, 0.1474, 0.1736,  ..., 0.1558, 0.1652, 0.2061],
         [0.3642, 0.2795, 0.2840,  ..., 0.2875, 0.3069, 0.3399]],
        [[0.4945, 0.3665, 0.3567,  ..., 0.1854, 0.0717, 0.2032],
         [0.1368, 0.1696, 0.1765,  ..., 0.1897, 0.0717, 0.2032],
         [0.1251, 0.1653, 0.1765,  ..., 0.3915, 0.7848, 0.3443],
         [0.2436, 0.2986, 0.2904,  ..., 0.2334, 0.0717, 0.2493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1822, 0.5141, 0.2098,  ..., 0.3092, 0.0724, 0.0826],
         [0.1913, 0.1333, 0.2098,  ..., 0.1724, 0.0724, 0.0826],
         [0.4365, 0.1213, 0.3121,  ..., 0.1724, 0.7829, 0.7522],
         [0.1900, 0.2314, 0.2683,  ..., 0.3460, 0.0724, 0.0826]],
        [[0.0802, 0.4687, 0.6186,  ..., 0.4045, 0.5148, 0.0934],
         [0.0802, 0.1367, 0.0987,  ..., 0.1545, 0.1231, 0.0934],
         [0.7593, 0.1237, 0.0870,  ..., 0.1545, 0.1231, 0.7198],
         [0.0802, 0.2710, 0.1957,  ..., 0.2864, 0.2390, 0.0934]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2980, 0.4499, 0.5268,  ..., 0.4591, 0.5600, 0.5123],
         [0.1863, 0.1480, 0.1351,  ..., 0.1450, 0.1178, 0.1293],
         [0.1863, 0.1480, 0.1351,  ..., 0.1450, 0.1178, 0.1217],
         [0.3294, 0.2540, 0.2030,  ..., 0.2508, 0.2044, 0.2367]],
        [[0.3878, 0.2164, 0.2513,  ..., 0.2069, 0.0550, 0.2124],
         [0.1610, 0.1979, 0.2039,  ..., 0.2069, 0.0550, 0.2124],
         [0.1472, 0.1979, 0.2023,  ..., 0.2905, 0.8351, 0.2593],
         [0.3040, 0.3879, 0.3425,  ..., 0.2957, 0.0550, 0.3158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:40:24,592 [Process: 0] Synchronize training processes
2024-08-20 17:40:24,592 [Process: 0] Evaluating...
2024-08-20 17:40:24,594 [Process: 0] EPOCH 17:
2024-08-20 17:40:24,596 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:25,579 [Process: 0] Synchronize training processes
2024-08-20 17:40:25,579 [Process: 0] Evaluating...
2024-08-20 17:40:25,581 [Process: 0] EPOCH 18:
2024-08-20 17:40:25,582 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0830, 0.5330, 0.6391,  ..., 0.6471, 0.1142, 0.1265],
         [0.0830, 0.1227, 0.0952,  ..., 0.1067, 0.1142, 0.1265],
         [0.7509, 0.1227, 0.0866,  ..., 0.1067, 0.6573, 0.6205],
         [0.0830, 0.2217, 0.1792,  ..., 0.1394, 0.1142, 0.1265]],
        [[0.0995, 0.3068, 0.3724,  ..., 0.3719, 0.3672, 0.1438],
         [0.0995, 0.1694, 0.1572,  ..., 0.1528, 0.1566, 0.1438],
         [0.7014, 0.1694, 0.1572,  ..., 0.1473, 0.1564, 0.5687],
         [0.0995, 0.3545, 0.3132,  ..., 0.3280, 0.3199, 0.1438]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2839, 0.2638, 0.2525,  ..., 0.2561, 0.2444, 0.1724],
         [0.1799, 0.1964, 0.1936,  ..., 0.1926, 0.1965, 0.1724],
         [0.1799, 0.1766, 0.1936,  ..., 0.1926, 0.1965, 0.4752],
         [0.3562, 0.3632, 0.3603,  ..., 0.3586, 0.3625, 0.1801]],
        [[0.4964, 0.4440, 0.5220,  ..., 0.2803, 0.0999, 0.2844],
         [0.1597, 0.1577, 0.1295,  ..., 0.1950, 0.0999, 0.1939],
         [0.1157, 0.1359, 0.1189,  ..., 0.1929, 0.7002, 0.1879],
         [0.2281, 0.2623, 0.2297,  ..., 0.3318, 0.0999, 0.3338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0754, 0.3797, 0.4819,  ..., 0.4607, 0.0994, 0.1287],
         [0.0754, 0.1619, 0.1366,  ..., 0.1459, 0.0994, 0.1287],
         [0.7739, 0.1563, 0.1344,  ..., 0.1372, 0.7019, 0.6140],
         [0.0754, 0.3021, 0.2470,  ..., 0.2562, 0.0994, 0.1287]],
        [[0.0619, 0.6161, 0.4714,  ..., 0.6225, 0.6634, 0.1412],
         [0.0619, 0.1058, 0.1422,  ..., 0.1098, 0.0909, 0.1412],
         [0.8143, 0.0952, 0.1227,  ..., 0.0871, 0.0888, 0.5763],
         [0.0619, 0.1829, 0.2638,  ..., 0.1806, 0.1569, 0.1412]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2459, 0.3262, 0.2995,  ..., 0.2907, 0.3129, 0.2228],
         [0.1887, 0.1667, 0.1820,  ..., 0.1736, 0.1966, 0.2031],
         [0.1887, 0.1509, 0.1818,  ..., 0.1736, 0.1750, 0.2146],
         [0.3767, 0.3562, 0.3367,  ..., 0.3622, 0.3155, 0.3595]],
        [[0.7028, 0.2818, 0.5534,  ..., 0.2870, 0.0611, 0.2543],
         [0.0894, 0.1786, 0.1202,  ..., 0.1875, 0.0611, 0.1965],
         [0.0842, 0.1786, 0.1130,  ..., 0.1875, 0.8166, 0.1761],
         [0.1236, 0.3609, 0.2135,  ..., 0.3379, 0.0611, 0.3731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:40:26,550 [Process: 0] Synchronize training processes
2024-08-20 17:40:26,551 [Process: 0] Evaluating...
2024-08-20 17:40:26,553 [Process: 0] EPOCH 19:
2024-08-20 17:40:26,554 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:27,523 [Process: 0] Synchronize training processes
2024-08-20 17:40:27,524 [Process: 0] Evaluating...
2024-08-20 17:40:27,526 [Process: 0] EPOCH 20:
2024-08-20 17:40:27,527 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1601, 0.3734, 0.5863,  ..., 0.5953, 0.1807, 0.1282],
         [0.1601, 0.1631, 0.1135,  ..., 0.1118, 0.1807, 0.1282],
         [0.5198, 0.1631, 0.1017,  ..., 0.1056, 0.4578, 0.6155],
         [0.1601, 0.3005, 0.1985,  ..., 0.1874, 0.1807, 0.1282]],
        [[0.0508, 0.5795, 0.5362,  ..., 0.1711, 0.5221, 0.1566],
         [0.0508, 0.1365, 0.1260,  ..., 0.1711, 0.1349, 0.1566],
         [0.8476, 0.0967, 0.1260,  ..., 0.4868, 0.1349, 0.5303],
         [0.0508, 0.1873, 0.2118,  ..., 0.1711, 0.2081, 0.1566]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3195, 0.3645, 0.3771,  ..., 0.3743, 0.4156, 0.3488],
         [0.1877, 0.1595, 0.1611,  ..., 0.1590, 0.1530, 0.1831],
         [0.1692, 0.1594, 0.1535,  ..., 0.1583, 0.1506, 0.1659],
         [0.3236, 0.3166, 0.3083,  ..., 0.3084, 0.2809, 0.3023]],
        [[0.5486, 0.1932, 0.3984,  ..., 0.3574, 0.0629, 0.2380],
         [0.1383, 0.2076, 0.1513,  ..., 0.1615, 0.0629, 0.1965],
         [0.1274, 0.3597, 0.1513,  ..., 0.1585, 0.8112, 0.1955],
         [0.1858, 0.2395, 0.2991,  ..., 0.3226, 0.0629, 0.3701]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1478, 0.5492, 0.5228,  ..., 0.4942, 0.1397, 0.1314],
         [0.1478, 0.1214, 0.1351,  ..., 0.1315, 0.1397, 0.1314],
         [0.5567, 0.1171, 0.1216,  ..., 0.1315, 0.5808, 0.6057],
         [0.1478, 0.2123, 0.2205,  ..., 0.2427, 0.1397, 0.1314]],
        [[0.0591, 0.4456, 0.4301,  ..., 0.2351, 0.4103, 0.1324],
         [0.0591, 0.1481, 0.1586,  ..., 0.1927, 0.1512, 0.1324],
         [0.8226, 0.1481, 0.1487,  ..., 0.1861, 0.1512, 0.6028],
         [0.0591, 0.2581, 0.2627,  ..., 0.3861, 0.2874, 0.1324]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2850, 0.4647, 0.4081,  ..., 0.4517, 0.3567, 0.2098],
         [0.1792, 0.1426, 0.1597,  ..., 0.1591, 0.1613, 0.1983],
         [0.1792, 0.1377, 0.1474,  ..., 0.1296, 0.1610, 0.2411],
         [0.3566, 0.2551, 0.2847,  ..., 0.2595, 0.3209, 0.3507]],
        [[0.4581, 0.3174, 0.2806,  ..., 0.3040, 0.0955, 0.2190],
         [0.1546, 0.1948, 0.1728,  ..., 0.1787, 0.0955, 0.2023],
         [0.1467, 0.1708, 0.1669,  ..., 0.1778, 0.7136, 0.2739],
         [0.2406, 0.3169, 0.3796,  ..., 0.3396, 0.0955, 0.3047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:40:28,490 [Process: 0] Synchronize training processes
2024-08-20 17:40:28,491 [Process: 0] Evaluating...
2024-08-20 17:40:28,492 [Process: 0] EPOCH 21:
2024-08-20 17:40:28,494 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:29,468 [Process: 0] Synchronize training processes
2024-08-20 17:40:29,469 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0915, 0.3230, 0.5876,  ..., 0.4905, 0.1130, 0.1185],
         [0.0915, 0.1593, 0.1097,  ..., 0.1332, 0.1130, 0.1185],
         [0.7256, 0.1593, 0.1097,  ..., 0.1332, 0.6611, 0.6444],
         [0.0915, 0.3584, 0.1930,  ..., 0.2430, 0.1130, 0.1185]],
        [[0.1349, 0.3896, 0.5426,  ..., 0.4551, 0.3652, 0.0604],
         [0.1349, 0.1601, 0.1239,  ..., 0.1368, 0.1587, 0.0604],
         [0.5953, 0.1575, 0.1239,  ..., 0.1367, 0.1521, 0.8188],
         [0.1349, 0.2927, 0.2097,  ..., 0.2715, 0.3240, 0.0604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4095, 0.4624, 0.3882,  ..., 0.4599, 0.3971, 0.2255],
         [0.1546, 0.1472, 0.1516,  ..., 0.1350, 0.1471, 0.1888],
         [0.1546, 0.1366, 0.1368,  ..., 0.1346, 0.1383, 0.2491],
         [0.2813, 0.2538, 0.3233,  ..., 0.2705, 0.3176, 0.3367]],
        [[0.5164, 0.1522, 0.1989,  ..., 0.2093, 0.0518, 0.1907],
         [0.1351, 0.1522, 0.1949,  ..., 0.1895, 0.0518, 0.1907],
         [0.1351, 0.5434, 0.2910,  ..., 0.2405, 0.8446, 0.3713],
         [0.2133, 0.1522, 0.3152,  ..., 0.3607, 0.0518, 0.2474]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1109, 0.4110, 0.5776,  ..., 0.6010, 0.1301, 0.0700],
         [0.1109, 0.1529, 0.1148,  ..., 0.1121, 0.1301, 0.0700],
         [0.6672, 0.1378, 0.1148,  ..., 0.1121, 0.6098, 0.7899],
         [0.1109, 0.2983, 0.1929,  ..., 0.1747, 0.1301, 0.0700]],
        [[0.1546, 0.2475, 0.5426,  ..., 0.3077, 0.3445, 0.0731],
         [0.1546, 0.1723, 0.1206,  ..., 0.1609, 0.1553, 0.0731],
         [0.5362, 0.1723, 0.1206,  ..., 0.1515, 0.1553, 0.7808],
         [0.1546, 0.4079, 0.2162,  ..., 0.3799, 0.3449, 0.0731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:40:31,353 [Process: 0] EPOCH 22:
2024-08-20 17:40:31,358 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2704, 0.3355, 0.3115,  ..., 0.3407, 0.3088, 0.1889],
         [0.1711, 0.1668, 0.1670,  ..., 0.1636, 0.1786, 0.1889],
         [0.1711, 0.1668, 0.1670,  ..., 0.1575, 0.1786, 0.3112],
         [0.3875, 0.3310, 0.3546,  ..., 0.3382, 0.3339, 0.3109]],
        [[0.7206, 0.1127, 0.2522,  ..., 0.2221, 0.0866, 0.2601],
         [0.0975, 0.1127, 0.1848,  ..., 0.1925, 0.0866, 0.1783],
         [0.0867, 0.6618, 0.2092,  ..., 0.2255, 0.7401, 0.1757],
         [0.0951, 0.1127, 0.3539,  ..., 0.3599, 0.0866, 0.3859]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
2024-08-20 17:40:32,284 [Process: 0] Synchronize training processes
2024-08-20 17:40:32,284 [Process: 0] Evaluating...
2024-08-20 17:40:32,286 [Process: 0] EPOCH 23:
2024-08-20 17:40:32,287 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:33,243 [Process: 0] Synchronize training processes
2024-08-20 17:40:33,244 [Process: 0] Evaluating...
2024-08-20 17:40:33,245 [Process: 0] EPOCH 24:
2024-08-20 17:40:33,247 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1379, 0.2936, 0.4380,  ..., 0.6458, 0.1060, 0.1414],
         [0.1379, 0.1597, 0.1398,  ..., 0.1082, 0.1060, 0.1414],
         [0.5863, 0.1544, 0.1398,  ..., 0.1082, 0.6819, 0.5758],
         [0.1379, 0.3923, 0.2823,  ..., 0.1378, 0.1060, 0.1414]],
        [[0.1069, 0.2368, 0.8545,  ..., 0.4481, 0.3149, 0.0771],
         [0.1069, 0.1703, 0.0485,  ..., 0.1451, 0.1619, 0.0771],
         [0.6793, 0.1703, 0.0485,  ..., 0.1417, 0.1619, 0.7687],
         [0.1069, 0.4227, 0.0485,  ..., 0.2651, 0.3612, 0.0771]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2262, 0.3081, 0.2592,  ..., 0.2947, 0.2909, 0.1963],
         [0.1799, 0.1720, 0.1776,  ..., 0.1647, 0.1774, 0.1828],
         [0.1799, 0.1720, 0.1776,  ..., 0.1647, 0.1774, 0.2190],
         [0.4140, 0.3479, 0.3856,  ..., 0.3760, 0.3543, 0.4019]],
        [[0.8406, 0.1915, 0.2569,  ..., 0.2919, 0.0520, 0.1443],
         [0.0589, 0.1915, 0.1800,  ..., 0.1725, 0.0520, 0.1443],
         [0.0483, 0.3036, 0.1800,  ..., 0.1725, 0.8439, 0.5670],
         [0.0522, 0.3135, 0.3831,  ..., 0.3630, 0.0520, 0.1443]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1107, 0.4642, 0.8089,  ..., 0.6674, 0.1081, 0.1298],
         [0.1278, 0.1385, 0.0637,  ..., 0.1109, 0.1081, 0.1366],
         [0.6508, 0.1385, 0.0637,  ..., 0.1109, 0.6758, 0.6036],
         [0.1107, 0.2588, 0.0637,  ..., 0.1109, 0.1081, 0.1300]],
        [[0.0875, 0.1768, 0.3225,  ..., 0.2187, 0.1918, 0.0918],
         [0.1043, 0.1768, 0.1592,  ..., 0.1577, 0.1733, 0.0918],
         [0.7206, 0.2755, 0.1558,  ..., 0.1577, 0.1733, 0.7246],
         [0.0875, 0.3710, 0.3626,  ..., 0.4660, 0.4615, 0.0918]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2148, 0.2493, 0.2358,  ..., 0.2732, 0.2679, 0.1817],
         [0.1746, 0.1647, 0.1703,  ..., 0.1760, 0.1695, 0.1817],
         [0.1746, 0.1647, 0.1703,  ..., 0.1760, 0.1695, 0.2064],
         [0.4360, 0.4213, 0.4236,  ..., 0.3747, 0.3931, 0.4302]],
        [[0.7541, 0.1829, 0.1780,  ..., 0.2495, 0.0558, 0.1625],
         [0.0820, 0.1829, 0.1780,  ..., 0.1665, 0.0558, 0.1625],
         [0.0820, 0.2210, 0.2566,  ..., 0.1665, 0.8327, 0.4389],
         [0.0820, 0.4133, 0.3875,  ..., 0.4174, 0.0558, 0.2360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0838, 0.1593, 0.2281,  ..., 0.5584, 0.0770, 0.0967],
         [0.0897, 0.1593, 0.1621,  ..., 0.1375, 0.0770, 0.0967],
         [0.7428, 0.3343, 0.1621,  ..., 0.1375, 0.7691, 0.7098],
         [0.0838, 0.3472, 0.4477,  ..., 0.1667, 0.0770, 0.0967]],
        [[0.0787, 0.3190, 0.7402,  ..., 0.7263, 0.5644, 0.0688],
         [0.0787, 0.1531, 0.0855,  ..., 0.0912, 0.1167, 0.0750],
         [0.7639, 0.1497, 0.0855,  ..., 0.0912, 0.1167, 0.7875],
         [0.0787, 0.3781, 0.0888,  ..., 0.0912, 0.2022, 0.0688]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:34,220 [Process: 0] Synchronize training processes
2024-08-20 17:40:34,220 [Process: 0] Evaluating...
2024-08-20 17:40:34,222 [Process: 0] EPOCH 25:
2024-08-20 17:40:34,224 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:35,187 [Process: 0] Synchronize training processes
2024-08-20 17:40:35,187 [Process: 0] Evaluating...
2024-08-20 17:40:35,189 [Process: 0] EPOCH 26:
2024-08-20 17:40:35,191 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:36,149 [Process: 0] Synchronize training processes
2024-08-20 17:40:36,150 [Process: 0] Evaluating...
2024-08-20 17:40:36,151 [Process: 0] EPOCH 27:
2024-08-20 17:40:36,153 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2140, 0.3104, 0.2899,  ..., 0.2864, 0.2767, 0.1670],
         [0.1721, 0.1593, 0.1582,  ..., 0.1590, 0.1711, 0.1649],
         [0.1721, 0.1593, 0.1582,  ..., 0.1590, 0.1711, 0.1835],
         [0.4419, 0.3711, 0.3937,  ..., 0.3955, 0.3811, 0.4846]],
        [[0.8104, 0.1752, 0.2041,  ..., 0.1752, 0.0547, 0.1104],
         [0.0649, 0.1752, 0.1630,  ..., 0.1752, 0.0547, 0.1104],
         [0.0623, 0.3077, 0.1630,  ..., 0.1958, 0.8358, 0.6689],
         [0.0623, 0.3420, 0.4699,  ..., 0.4538, 0.0547, 0.1104]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1125, 0.1732, 0.3894,  ..., 0.6805, 0.0682, 0.1096],
         [0.1125, 0.1502, 0.1491,  ..., 0.1065, 0.0682, 0.1096],
         [0.6624, 0.1502, 0.1491,  ..., 0.1065, 0.7955, 0.6711],
         [0.1125, 0.5265, 0.3124,  ..., 0.1065, 0.0682, 0.1096]],
        [[0.0781, 0.2154, 0.7287,  ..., 0.4478, 0.4858, 0.0745],
         [0.0781, 0.1580, 0.0853,  ..., 0.1332, 0.1400, 0.0745],
         [0.7656, 0.1580, 0.0853,  ..., 0.1332, 0.1400, 0.7766],
         [0.0781, 0.4686, 0.1007,  ..., 0.2857, 0.2343, 0.0745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2142, 0.5975, 0.5312,  ..., 0.4441, 0.4215, 0.3005],
         [0.1691, 0.1109, 0.1316,  ..., 0.1462, 0.1557, 0.1587],
         [0.1691, 0.1109, 0.1316,  ..., 0.1462, 0.1493, 0.1587],
         [0.4477, 0.1807, 0.2056,  ..., 0.2635, 0.2735, 0.3821]],
        [[0.8673, 0.1704, 0.1724,  ..., 0.3277, 0.0445, 0.0836],
         [0.0442, 0.1704, 0.1724,  ..., 0.1643, 0.0445, 0.0836],
         [0.0442, 0.3765, 0.1905,  ..., 0.1633, 0.8666, 0.7492],
         [0.0442, 0.2826, 0.4647,  ..., 0.3448, 0.0445, 0.0836]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0679, 0.3719, 0.7401,  ..., 0.6411, 0.0628, 0.1033],
         [0.0679, 0.1494, 0.0819,  ..., 0.1196, 0.0628, 0.1033],
         [0.7964, 0.1494, 0.0819,  ..., 0.1196, 0.8116, 0.6902],
         [0.0679, 0.3292, 0.0962,  ..., 0.1196, 0.0628, 0.1033]],
        [[0.0906, 0.1711, 0.5652,  ..., 0.5972, 0.4078, 0.0778],
         [0.0944, 0.1658, 0.1267,  ..., 0.1190, 0.1421, 0.0778],
         [0.7244, 0.1561, 0.1202,  ..., 0.1190, 0.1387, 0.7666],
         [0.0906, 0.5070, 0.1879,  ..., 0.1647, 0.3114, 0.0778]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:37,120 [Process: 0] Synchronize training processes
2024-08-20 17:40:37,120 [Process: 0] Evaluating...
2024-08-20 17:40:37,122 [Process: 0] EPOCH 28:
2024-08-20 17:40:37,124 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:38,088 [Process: 0] Synchronize training processes
2024-08-20 17:40:38,088 [Process: 0] Evaluating...
2024-08-20 17:40:38,090 [Process: 0] EPOCH 29:
2024-08-20 17:40:38,092 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1710, 0.2218, 0.3170,  ..., 0.3078, 0.3518, 0.1652],
         [0.1710, 0.1669, 0.1531,  ..., 0.1680, 0.1563, 0.1652],
         [0.1771, 0.1669, 0.1511,  ..., 0.1680, 0.1387, 0.2231],
         [0.4808, 0.4444, 0.3788,  ..., 0.3562, 0.3532, 0.4465]],
        [[0.6449, 0.0950, 0.2078,  ..., 0.1744, 0.0676, 0.1792],
         [0.1088, 0.1045, 0.1736,  ..., 0.1744, 0.0676, 0.1792],
         [0.1064, 0.7056, 0.1660,  ..., 0.1839, 0.7971, 0.1924],
         [0.1400, 0.0950, 0.4525,  ..., 0.4674, 0.0676, 0.4492]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1226, 0.3280, 0.7660,  ..., 0.7871, 0.1177, 0.1134],
         [0.1226, 0.1579, 0.0777,  ..., 0.0777, 0.1177, 0.1134],
         [0.6187, 0.1483, 0.0752,  ..., 0.0660, 0.6468, 0.6598],
         [0.1361, 0.3658, 0.0811,  ..., 0.0692, 0.1177, 0.1134]],
        [[0.0909, 0.1588, 0.5798,  ..., 0.5508, 0.1675, 0.1201],
         [0.0909, 0.1588, 0.1192,  ..., 0.1225, 0.1436, 0.1201],
         [0.7274, 0.1588, 0.1173,  ..., 0.1225, 0.1436, 0.6396],
         [0.0909, 0.5236, 0.1837,  ..., 0.2043, 0.5453, 0.1201]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1748, 0.2670, 0.3790,  ..., 0.4969, 0.3915, 0.2605],
         [0.1748, 0.1756, 0.1536,  ..., 0.1360, 0.1536, 0.1687],
         [0.1748, 0.1552, 0.1536,  ..., 0.1360, 0.1536, 0.1626],
         [0.4757, 0.4022, 0.3137,  ..., 0.2311, 0.3013, 0.4082]],
        [[0.8126, 0.1454, 0.1763,  ..., 0.1640, 0.0525, 0.0522],
         [0.0658, 0.1513, 0.1763,  ..., 0.1640, 0.0525, 0.0522],
         [0.0608, 0.5170, 0.2037,  ..., 0.1640, 0.8424, 0.8433],
         [0.0608, 0.1863, 0.4436,  ..., 0.5081, 0.0525, 0.0522]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0852, 0.2410, 0.8108,  ..., 0.8790, 0.1111, 0.1074],
         [0.0858, 0.1423, 0.0739,  ..., 0.0403, 0.1133, 0.1074],
         [0.7438, 0.1423, 0.0576,  ..., 0.0403, 0.6645, 0.6778],
         [0.0852, 0.4744, 0.0576,  ..., 0.0403, 0.1111, 0.1074]],
        [[0.0965, 0.1360, 0.7997,  ..., 0.5394, 0.1383, 0.0715],
         [0.0965, 0.1351, 0.0668,  ..., 0.1261, 0.1383, 0.0715],
         [0.7106, 0.1351, 0.0668,  ..., 0.1261, 0.1383, 0.7854],
         [0.0965, 0.5937, 0.0668,  ..., 0.2084, 0.5850, 0.0715]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:39,059 [Process: 0] Synchronize training processes
2024-08-20 17:40:39,059 [Process: 0] Evaluating...
2024-08-20 17:40:39,061 [Process: 0] EPOCH 30:
2024-08-20 17:40:39,062 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:40,050 [Process: 0] Synchronize training processes
2024-08-20 17:40:40,050 [Process: 0] Evaluating...
2024-08-20 17:40:40,052 [Process: 0] EPOCH 31:
2024-08-20 17:40:40,053 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1680, 0.2431, 0.3568,  ..., 0.6062, 0.4069, 0.2276],
         [0.1680, 0.1762, 0.1603,  ..., 0.1203, 0.1564, 0.1587],
         [0.1680, 0.1762, 0.1603,  ..., 0.1203, 0.1564, 0.1587],
         [0.4960, 0.4046, 0.3225,  ..., 0.1532, 0.2803, 0.4550]],
        [[0.9660, 0.1715, 0.1799,  ..., 0.1662, 0.0625, 0.1342],
         [0.0113, 0.1715, 0.1657,  ..., 0.1662, 0.0625, 0.1342],
         [0.0113, 0.3335, 0.1657,  ..., 0.1662, 0.8125, 0.5796],
         [0.0113, 0.3234, 0.4888,  ..., 0.5013, 0.0625, 0.1521]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0825, 0.3944, 0.9467,  ..., 0.9465, 0.1166, 0.1032],
         [0.0825, 0.1568, 0.0178,  ..., 0.0178, 0.1166, 0.1032],
         [0.7525, 0.1568, 0.0178,  ..., 0.0178, 0.6503, 0.6905],
         [0.0825, 0.2920, 0.0178,  ..., 0.0178, 0.1166, 0.1032]],
        [[0.1072, 0.1659, 0.7773,  ..., 0.2919, 0.1618, 0.0724],
         [0.1072, 0.1659, 0.0742,  ..., 0.1561, 0.1618, 0.0724],
         [0.6785, 0.2502, 0.0742,  ..., 0.1533, 0.1618, 0.7828],
         [0.1072, 0.4180, 0.0742,  ..., 0.3987, 0.5147, 0.0724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1665, 0.1667, 0.1767,  ..., 0.3317, 0.4509, 0.1671],
         [0.1665, 0.1667, 0.1720,  ..., 0.1731, 0.1476, 0.1671],
         [0.1665, 0.1667, 0.1720,  ..., 0.1731, 0.1476, 0.1671],
         [0.5004, 0.4999, 0.4793,  ..., 0.3221, 0.2540, 0.4987]],
        [[0.8631, 0.1710, 0.1756,  ..., 0.1467, 0.0466, 0.1744],
         [0.0456, 0.1710, 0.1739,  ..., 0.1467, 0.0466, 0.1744],
         [0.0456, 0.1964, 0.1660,  ..., 0.1467, 0.8601, 0.2848],
         [0.0456, 0.4616, 0.4845,  ..., 0.5599, 0.0466, 0.3664]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0786, 0.1552, 0.2859,  ..., 0.8247, 0.0650, 0.0616],
         [0.0786, 0.1530, 0.1740,  ..., 0.0584, 0.0650, 0.0616],
         [0.7641, 0.1530, 0.1740,  ..., 0.0584, 0.8050, 0.8151],
         [0.0786, 0.5388, 0.3661,  ..., 0.0584, 0.0650, 0.0616]],
        [[0.0441, 0.1465, 0.6624,  ..., 0.5360, 0.1390, 0.0962],
         [0.0441, 0.1465, 0.1125,  ..., 0.1422, 0.1390, 0.0962],
         [0.8677, 0.1465, 0.1125,  ..., 0.1422, 0.1390, 0.7115],
         [0.0441, 0.5604, 0.1125,  ..., 0.1796, 0.5829, 0.0962]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:41,038 [Process: 0] Synchronize training processes
2024-08-20 17:40:41,038 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1517, 0.1524, 0.1504,  ..., 0.5507, 0.4620, 0.1573],
         [0.1517, 0.1525, 0.1504,  ..., 0.1493, 0.1620, 0.1573],
         [0.1517, 0.1524, 0.1504,  ..., 0.1493, 0.1620, 0.1573],
         [0.5450, 0.5427, 0.5488,  ..., 0.1506, 0.2140, 0.5280]],
        [[0.8437, 0.1641, 0.1694,  ..., 0.1648, 0.0294, 0.0563],
         [0.0521, 0.1641, 0.1694,  ..., 0.1682, 0.0294, 0.0563],
         [0.0521, 0.1641, 0.1947,  ..., 0.1648, 0.9119, 0.8310],
         [0.0521, 0.5077, 0.4664,  ..., 0.5023, 0.0294, 0.0563]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1264, 0.1908, 0.3230,  ..., 0.8709, 0.0553, 0.1311],
         [0.1264, 0.1511, 0.1684,  ..., 0.0430, 0.0553, 0.1311],
         [0.5864, 0.1511, 0.1572,  ..., 0.0430, 0.8341, 0.5086],
         [0.1609, 0.5070, 0.3514,  ..., 0.0430, 0.0553, 0.2292]],
        [[0.0462, 0.1150, 0.8058,  ..., 0.7694, 0.1088, 0.0851],
         [0.0462, 0.1150, 0.0647,  ..., 0.0769, 0.1088, 0.0851],
         [0.8615, 0.1150, 0.0647,  ..., 0.0769, 0.1088, 0.7447],
         [0.0462, 0.6549, 0.0647,  ..., 0.0769, 0.6735, 0.0851]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:40:42,930 [Process: 0] EPOCH 32:
2024-08-20 17:40:42,935 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:43,907 [Process: 0] Synchronize training processes
2024-08-20 17:40:43,907 [Process: 0] Evaluating...
2024-08-20 17:40:43,909 [Process: 0] EPOCH 33:
2024-08-20 17:40:43,911 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1635, 0.1594, 0.1791,  ..., 0.7089, 0.6564, 0.1331],
         [0.1635, 0.1594, 0.1711,  ..., 0.0970, 0.1260, 0.1331],
         [0.1635, 0.1594, 0.1711,  ..., 0.0970, 0.1088, 0.1331],
         [0.5095, 0.5219, 0.4788,  ..., 0.0970, 0.1088, 0.6008]],
        [[0.8109, 0.1475, 0.1465,  ..., 0.1505, 0.0776, 0.0858],
         [0.0630, 0.1483, 0.1465,  ..., 0.1525, 0.0776, 0.0858],
         [0.0630, 0.1475, 0.1465,  ..., 0.1505, 0.7673, 0.7425],
         [0.0630, 0.5568, 0.5606,  ..., 0.5466, 0.0776, 0.0858]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1026, 0.3403, 0.6043,  ..., 0.7541, 0.0913, 0.0658],
         [0.1026, 0.1626, 0.1319,  ..., 0.0820, 0.0913, 0.0658],
         [0.6278, 0.1626, 0.1319,  ..., 0.0820, 0.7121, 0.8025],
         [0.1670, 0.3346, 0.1319,  ..., 0.0820, 0.1054, 0.0658]],
        [[0.1717, 0.1451, 0.6951,  ..., 0.7628, 0.1048, 0.1136],
         [0.1717, 0.1451, 0.1016,  ..., 0.0791, 0.1048, 0.1136],
         [0.4850, 0.2486, 0.1016,  ..., 0.0791, 0.1048, 0.6592],
         [0.1717, 0.4613, 0.1016,  ..., 0.0791, 0.6855, 0.1136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
2024-08-20 17:40:44,911 [Process: 0] Synchronize training processes
2024-08-20 17:40:44,911 [Process: 0] Evaluating...
2024-08-20 17:40:44,913 [Process: 0] EPOCH 34:
2024-08-20 17:40:44,915 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:45,936 [Process: 0] Synchronize training processes
2024-08-20 17:40:45,936 [Process: 0] Evaluating...
2024-08-20 17:40:45,938 [Process: 0] EPOCH 35:
2024-08-20 17:40:45,940 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1364, 0.1471, 0.1677,  ..., 0.6029, 0.3923, 0.1251],
         [0.1364, 0.1471, 0.1781,  ..., 0.1383, 0.1593, 0.1251],
         [0.1364, 0.1471, 0.1510,  ..., 0.1246, 0.1593, 0.1251],
         [0.5909, 0.5586, 0.5032,  ..., 0.1342, 0.2891, 0.6246]],
        [[0.8170, 0.4667, 0.1173,  ..., 0.1693, 0.0803, 0.1338],
         [0.0610, 0.1548, 0.1173,  ..., 0.1693, 0.0803, 0.1338],
         [0.0610, 0.1548, 0.1173,  ..., 0.1693, 0.7591, 0.5718],
         [0.0610, 0.2237, 0.6480,  ..., 0.4920, 0.0803, 0.1607]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0710, 0.2289, 0.6438,  ..., 0.9089, 0.0715, 0.0755],
         [0.0710, 0.1515, 0.1187,  ..., 0.0304, 0.0715, 0.0755],
         [0.7863, 0.1503, 0.1187,  ..., 0.0304, 0.7855, 0.7734],
         [0.0717, 0.4692, 0.1187,  ..., 0.0304, 0.0715, 0.0755]],
        [[0.2327, 0.1037, 0.7421,  ..., 0.5749, 0.0932, 0.1495],
         [0.2327, 0.1040, 0.0860,  ..., 0.1454, 0.0932, 0.1495],
         [0.3019, 0.1037, 0.0860,  ..., 0.1352, 0.0932, 0.5514],
         [0.2327, 0.6885, 0.0860,  ..., 0.1445, 0.7204, 0.1495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1563, 0.1365, 0.1409,  ..., 0.7791, 0.4604, 0.1398],
         [0.1631, 0.1365, 0.1409,  ..., 0.0736, 0.1648, 0.1398],
         [0.1563, 0.1365, 0.1409,  ..., 0.0736, 0.1533, 0.1398],
         [0.5243, 0.5904, 0.5772,  ..., 0.0736, 0.2214, 0.5805]],
        [[0.9167, 0.1589, 0.1327,  ..., 0.1610, 0.0490, 0.0280],
         [0.0278, 0.1589, 0.1327,  ..., 0.1610, 0.0490, 0.0280],
         [0.0278, 0.1589, 0.1327,  ..., 0.1628, 0.8530, 0.9159],
         [0.0278, 0.5232, 0.6018,  ..., 0.5151, 0.0490, 0.0280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0730, 0.1093, 0.8826,  ..., 0.9409, 0.0710, 0.0891],
         [0.0730, 0.1129, 0.0391,  ..., 0.0197, 0.0710, 0.0891],
         [0.7809, 0.1093, 0.0391,  ..., 0.0197, 0.7799, 0.7326],
         [0.0730, 0.6686, 0.0391,  ..., 0.0197, 0.0781, 0.0891]],
        [[0.2038, 0.0869, 0.7477,  ..., 0.3531, 0.0910, 0.1288],
         [0.2038, 0.0869, 0.0890,  ..., 0.1629, 0.0910, 0.1288],
         [0.3887, 0.0869, 0.0816,  ..., 0.1629, 0.0910, 0.5997],
         [0.2038, 0.7394, 0.0816,  ..., 0.3210, 0.7270, 0.1427]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:40:46,952 [Process: 0] Synchronize training processes
2024-08-20 17:40:46,952 [Process: 0] Evaluating...
2024-08-20 17:40:46,954 [Process: 0] EPOCH 36:
2024-08-20 17:40:46,956 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:47,948 [Process: 0] Synchronize training processes
2024-08-20 17:40:47,948 [Process: 0] Evaluating...
2024-08-20 17:40:47,950 [Process: 0] EPOCH 37:
2024-08-20 17:40:47,951 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1362, 0.1428, 0.1505,  ..., 0.9020, 0.7128, 0.1372],
         [0.1362, 0.1501, 0.1505,  ..., 0.0327, 0.0957, 0.1396],
         [0.1362, 0.1428, 0.1505,  ..., 0.0327, 0.0957, 0.1372],
         [0.5914, 0.5644, 0.5486,  ..., 0.0327, 0.0957, 0.5859]],
        [[0.8853, 0.1521, 0.1422,  ..., 0.1394, 0.0503, 0.0077],
         [0.0434, 0.1521, 0.1422,  ..., 0.1394, 0.0503, 0.0077],
         [0.0356, 0.1521, 0.1422,  ..., 0.1394, 0.8490, 0.9768],
         [0.0356, 0.5436, 0.5735,  ..., 0.5817, 0.0503, 0.0077]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0966, 0.1126, 0.8411,  ..., 0.9401, 0.0748, 0.1027],
         [0.0966, 0.1126, 0.0530,  ..., 0.0200, 0.0748, 0.1027],
         [0.6920, 0.1126, 0.0530,  ..., 0.0200, 0.7658, 0.6919],
         [0.1148, 0.6623, 0.0530,  ..., 0.0200, 0.0847, 0.1027]],
        [[0.1103, 0.0713, 0.7119,  ..., 0.5119, 0.1216, 0.0550],
         [0.1103, 0.0713, 0.0960,  ..., 0.1470, 0.1216, 0.0550],
         [0.6690, 0.0713, 0.0960,  ..., 0.1385, 0.1216, 0.8350],
         [0.1103, 0.7860, 0.0960,  ..., 0.2026, 0.6353, 0.0550]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1490, 0.1042, 0.1400,  ..., 0.8732, 0.7478, 0.1362],
         [0.1490, 0.1042, 0.1400,  ..., 0.0423, 0.0841, 0.1362],
         [0.1490, 0.1042, 0.1400,  ..., 0.0423, 0.0841, 0.1362],
         [0.5531, 0.6874, 0.5799,  ..., 0.0423, 0.0841, 0.5915]],
        [[0.9142, 0.1393, 0.1356,  ..., 0.1581, 0.0457, 0.0930],
         [0.0342, 0.1393, 0.1404,  ..., 0.1581, 0.0457, 0.0930],
         [0.0258, 0.1393, 0.1356,  ..., 0.2814, 0.8630, 0.7210],
         [0.0258, 0.5820, 0.5885,  ..., 0.4024, 0.0457, 0.0930]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0935, 0.1890, 0.7995,  ..., 0.9711, 0.0520, 0.0815],
         [0.0935, 0.1494, 0.0668,  ..., 0.0096, 0.0520, 0.0815],
         [0.6992, 0.1494, 0.0668,  ..., 0.0096, 0.8439, 0.7556],
         [0.1139, 0.5121, 0.0668,  ..., 0.0096, 0.0520, 0.0815]],
        [[0.1382, 0.0955, 0.8428,  ..., 0.3962, 0.0625, 0.0535],
         [0.1382, 0.0955, 0.0568,  ..., 0.1740, 0.0625, 0.0535],
         [0.5853, 0.0955, 0.0502,  ..., 0.1431, 0.0625, 0.8395],
         [0.1382, 0.7134, 0.0502,  ..., 0.2867, 0.8126, 0.0535]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:40:48,996 [Process: 0] Synchronize training processes
2024-08-20 17:40:48,996 [Process: 0] Evaluating...
2024-08-20 17:40:48,998 [Process: 0] EPOCH 38:
2024-08-20 17:40:49,000 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:50,030 [Process: 0] Synchronize training processes
2024-08-20 17:40:50,030 [Process: 0] Evaluating...
2024-08-20 17:40:50,032 [Process: 0] EPOCH 39:
2024-08-20 17:40:50,033 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1502, 0.1446, 0.1522,  ..., 0.8070, 0.5054, 0.1495],
         [0.1502, 0.1446, 0.1656,  ..., 0.0662, 0.1507, 0.1701],
         [0.2107, 0.1446, 0.1522,  ..., 0.0634, 0.1507, 0.1495],
         [0.4890, 0.5662, 0.5300,  ..., 0.0634, 0.1932, 0.5309]],
        [[0.8469, 0.1510, 0.1380,  ..., 0.1733, 0.0770, 0.0234],
         [0.0529, 0.1510, 0.1380,  ..., 0.1733, 0.0770, 0.0234],
         [0.0501, 0.1510, 0.1380,  ..., 0.1993, 0.7691, 0.9298],
         [0.0501, 0.5470, 0.5860,  ..., 0.4540, 0.0770, 0.0234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1011, 0.1257, 0.7048,  ..., 0.8772, 0.0881, 0.0837],
         [0.1011, 0.1210, 0.0984,  ..., 0.0409, 0.0881, 0.0837],
         [0.6942, 0.1210, 0.0984,  ..., 0.0409, 0.7102, 0.7440],
         [0.1036, 0.6324, 0.0984,  ..., 0.0409, 0.1136, 0.0886]],
        [[0.1166, 0.0983, 0.8684,  ..., 0.4783, 0.0798, 0.0931],
         [0.1166, 0.0983, 0.0476,  ..., 0.1418, 0.0798, 0.0931],
         [0.6476, 0.0983, 0.0420,  ..., 0.1391, 0.0798, 0.7206],
         [0.1192, 0.7050, 0.0420,  ..., 0.2408, 0.7606, 0.0931]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1592, 0.1470, 0.1574,  ..., 0.8946, 0.7706, 0.1293],
         [0.1592, 0.1487, 0.1687,  ..., 0.0351, 0.0765, 0.1293],
         [0.1759, 0.1470, 0.1574,  ..., 0.0351, 0.0765, 0.1293],
         [0.5056, 0.5572, 0.5165,  ..., 0.0351, 0.0765, 0.6122]],
        [[0.9638, 0.1359, 0.1430,  ..., 0.1578, 0.0653, 0.0429],
         [0.0121, 0.1359, 0.1452,  ..., 0.1578, 0.0653, 0.0429],
         [0.0121, 0.1359, 0.1430,  ..., 0.3027, 0.8041, 0.8714],
         [0.0121, 0.5924, 0.5687,  ..., 0.3817, 0.0653, 0.0429]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0516, 0.1801, 0.7002,  ..., 0.9216, 0.0719, 0.1142],
         [0.0516, 0.1444, 0.0998,  ..., 0.0261, 0.0719, 0.1142],
         [0.8452, 0.1317, 0.0998,  ..., 0.0261, 0.7697, 0.6575],
         [0.0516, 0.5437, 0.1001,  ..., 0.0261, 0.0864, 0.1142]],
        [[0.1216, 0.0482, 0.7366,  ..., 0.8030, 0.0409, 0.0726],
         [0.1216, 0.0482, 0.0878,  ..., 0.0657, 0.0409, 0.0726],
         [0.6351, 0.0482, 0.0878,  ..., 0.0657, 0.0409, 0.7821],
         [0.1216, 0.8555, 0.0878,  ..., 0.0657, 0.8774, 0.0726]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:51,019 [Process: 0] Synchronize training processes
2024-08-20 17:40:51,020 [Process: 0] Evaluating...
2024-08-20 17:40:51,021 [Process: 0] EPOCH 40:
2024-08-20 17:40:51,023 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:52,003 [Process: 0] Synchronize training processes
2024-08-20 17:40:52,003 [Process: 0] Evaluating...
2024-08-20 17:40:52,005 [Process: 0] EPOCH 41:
2024-08-20 17:40:52,006 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1066, 0.1139, 0.1292,  ..., 0.1246, 0.8025, 0.1379],
         [0.1066, 0.1139, 0.1292,  ..., 0.1246, 0.0658, 0.1379],
         [0.1066, 0.1139, 0.1292,  ..., 0.1246, 0.0658, 0.1379],
         [0.6801, 0.6584, 0.6124,  ..., 0.6261, 0.0658, 0.5862]],
        [[0.8892, 0.1351, 0.1344,  ..., 0.1641, 0.0345, 0.1537],
         [0.0459, 0.1466, 0.1471,  ..., 0.1641, 0.0345, 0.1537],
         [0.0324, 0.1351, 0.1344,  ..., 0.1838, 0.8966, 0.3908],
         [0.0324, 0.5831, 0.5841,  ..., 0.4879, 0.0345, 0.3018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0876, 0.2834, 0.8718,  ..., 0.9025, 0.0731, 0.0940],
         [0.0876, 0.1547, 0.0427,  ..., 0.0325, 0.0731, 0.0940],
         [0.7373, 0.1547, 0.0427,  ..., 0.0325, 0.7808, 0.7181],
         [0.0876, 0.4072, 0.0427,  ..., 0.0325, 0.0731, 0.0940]],
        [[0.1082, 0.0577, 0.8674,  ..., 0.6766, 0.0692, 0.0810],
         [0.1082, 0.0577, 0.0442,  ..., 0.1078, 0.0692, 0.0810],
         [0.3957, 0.0577, 0.0442,  ..., 0.1078, 0.0692, 0.7308],
         [0.3880, 0.8268, 0.0442,  ..., 0.1078, 0.7924, 0.1071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1440, 0.1486, 0.1623,  ..., 0.1636, 0.6107, 0.1137],
         [0.1440, 0.1632, 0.1623,  ..., 0.1636, 0.1394, 0.1137],
         [0.1440, 0.1486, 0.1640,  ..., 0.2424, 0.1199, 0.1137],
         [0.5680, 0.5395, 0.5115,  ..., 0.4305, 0.1301, 0.6590]],
        [[0.8608, 0.1430, 0.1331,  ..., 0.1692, 0.0562, 0.0801],
         [0.0574, 0.1430, 0.1331,  ..., 0.1692, 0.0562, 0.0801],
         [0.0409, 0.1430, 0.1331,  ..., 0.2587, 0.8314, 0.7598],
         [0.0409, 0.5710, 0.6008,  ..., 0.4029, 0.0562, 0.0801]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0966, 0.0763, 0.9412,  ..., 0.8948, 0.0739, 0.0643],
         [0.0966, 0.0851, 0.0196,  ..., 0.0365, 0.0739, 0.0643],
         [0.6854, 0.0763, 0.0196,  ..., 0.0344, 0.7784, 0.8070],
         [0.1214, 0.7623, 0.0196,  ..., 0.0344, 0.0739, 0.0643]],
        [[0.1131, 0.1433, 0.8015,  ..., 0.3844, 0.0810, 0.0640],
         [0.1131, 0.1433, 0.0909,  ..., 0.1422, 0.0810, 0.0640],
         [0.6607, 0.1625, 0.0538,  ..., 0.1422, 0.0810, 0.8080],
         [0.1131, 0.5509, 0.0538,  ..., 0.3312, 0.7571, 0.0640]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-20 17:40:53,010 [Process: 0] Synchronize training processes
2024-08-20 17:40:53,010 [Process: 0] Evaluating...
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1548, 0.1487, 0.1337,  ..., 0.1729, 0.7502, 0.1297],
         [0.1548, 0.1487, 0.1337,  ..., 0.1729, 0.0834, 0.1364],
         [0.1548, 0.1487, 0.1337,  ..., 0.2177, 0.0832, 0.1297],
         [0.5356, 0.5539, 0.5990,  ..., 0.4364, 0.0832, 0.6042]],
        [[0.8031, 0.1068, 0.1183,  ..., 0.1639, 0.0414, 0.0285],
         [0.0774, 0.1068, 0.1192,  ..., 0.1639, 0.0414, 0.0285],
         [0.0598, 0.1068, 0.1183,  ..., 0.4251, 0.8759, 0.9144],
         [0.0598, 0.6796, 0.6441,  ..., 0.2470, 0.0414, 0.0285]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0799, 0.0980, 0.6785,  ..., 0.9292, 0.0563, 0.0732],
         [0.0799, 0.1121, 0.0994,  ..., 0.0236, 0.0563, 0.0732],
         [0.7604, 0.0980, 0.0994,  ..., 0.0236, 0.8311, 0.7803],
         [0.0799, 0.6920, 0.1226,  ..., 0.0236, 0.0563, 0.0732]],
        [[0.1284, 0.0557, 0.8639,  ..., 0.4446, 0.0434, 0.0708],
         [0.1100, 0.0591, 0.0552,  ..., 0.2021, 0.0434, 0.0708],
         [0.6517, 0.0557, 0.0405,  ..., 0.1332, 0.0434, 0.7875],
         [0.1100, 0.8296, 0.0405,  ..., 0.2201, 0.8699, 0.0708]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:40:54,919 [Process: 0] EPOCH 42:
2024-08-20 17:40:54,921 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:55,949 [Process: 0] Synchronize training processes
2024-08-20 17:40:55,949 [Process: 0] Evaluating...
2024-08-20 17:40:55,951 [Process: 0] EPOCH 43:
2024-08-20 17:40:55,952 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1333, 0.1389, 0.1381,  ..., 0.1509, 0.7550, 0.1358],
         [0.1333, 0.1389, 0.1381,  ..., 0.1509, 0.0817, 0.1358],
         [0.1333, 0.1406, 0.1381,  ..., 0.1509, 0.0817, 0.1358],
         [0.6000, 0.5816, 0.5856,  ..., 0.5473, 0.0817, 0.5927]],
        [[0.8961, 0.1493, 0.1193,  ..., 0.1130, 0.0647, 0.0290],
         [0.0376, 0.1671, 0.1193,  ..., 0.1130, 0.0647, 0.0290],
         [0.0331, 0.1479, 0.1193,  ..., 0.1130, 0.8058, 0.9130],
         [0.0331, 0.5356, 0.6422,  ..., 0.6610, 0.0647, 0.0290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0965, 0.0776, 0.8657,  ..., 0.9230, 0.0806, 0.0681],
         [0.0965, 0.0785, 0.0448,  ..., 0.0257, 0.0806, 0.0681],
         [0.7105, 0.0776, 0.0448,  ..., 0.0257, 0.7534, 0.7957],
         [0.0965, 0.7663, 0.0448,  ..., 0.0257, 0.0854, 0.0681]],
        [[0.1046, 0.0626, 0.7848,  ..., 0.7418, 0.0996, 0.0474],
         [0.0974, 0.0708, 0.0717,  ..., 0.0914, 0.1032, 0.0474],
         [0.7005, 0.0626, 0.0717,  ..., 0.0834, 0.0996, 0.8448],
         [0.0974, 0.8039, 0.0717,  ..., 0.0834, 0.6976, 0.0603]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1478, 0.1087, 0.0956,  ..., 0.1473, 0.8746, 0.2683],
         [0.1478, 0.1164, 0.0971,  ..., 0.1473, 0.0418, 0.1647],
         [0.1733, 0.1087, 0.0956,  ..., 0.1492, 0.0418, 0.1640],
         [0.5311, 0.6662, 0.7117,  ..., 0.5563, 0.0418, 0.4030]],
        [[0.8430, 0.1244, 0.0848,  ..., 0.1654, 0.0250, 0.0356],
         [0.0523, 0.1276, 0.0909,  ..., 0.1654, 0.0250, 0.0356],
         [0.0523, 0.1244, 0.0848,  ..., 0.3972, 0.9251, 0.8933],
         [0.0523, 0.6237, 0.7394,  ..., 0.2720, 0.0250, 0.0356]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:40:56,972 [Process: 0] Synchronize training processes
2024-08-20 17:40:56,972 [Process: 0] Evaluating...
2024-08-20 17:40:56,974 [Process: 0] EPOCH 44:
2024-08-20 17:40:56,975 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:40:57,965 [Process: 0] Synchronize training processes
2024-08-20 17:40:57,966 [Process: 0] Evaluating...
2024-08-20 17:40:57,967 [Process: 0] EPOCH 45:
2024-08-20 17:40:57,969 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1046, 0.0810, 0.5992,  ..., 0.8754, 0.0520, 0.0572],
         [0.1046, 0.0975, 0.1336,  ..., 0.0415, 0.0520, 0.0572],
         [0.6586, 0.0810, 0.1336,  ..., 0.0415, 0.8441, 0.8284],
         [0.1321, 0.7405, 0.1336,  ..., 0.0415, 0.0520, 0.0572]],
        [[0.1054, 0.0459, 0.9316,  ..., 0.6917, 0.0739, 0.0691],
         [0.0748, 0.0543, 0.0228,  ..., 0.0942, 0.0938, 0.0691],
         [0.7450, 0.0459, 0.0228,  ..., 0.0942, 0.0739, 0.7927],
         [0.0748, 0.8539, 0.0228,  ..., 0.1199, 0.7584, 0.0691]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1397, 0.1441, 0.1148,  ..., 0.9181, 0.6654, 0.1241],
         [0.1397, 0.1496, 0.1148,  ..., 0.0354, 0.1139, 0.1241],
         [0.1397, 0.1441, 0.1148,  ..., 0.0233, 0.1104, 0.1241],
         [0.5810, 0.5622, 0.6555,  ..., 0.0233, 0.1104, 0.6276]],
        [[0.8307, 0.1164, 0.0990,  ..., 0.1553, 0.0322, 0.1648],
         [0.0564, 0.1233, 0.1072,  ..., 0.1553, 0.0322, 0.1648],
         [0.0564, 0.1164, 0.0990,  ..., 0.1720, 0.9033, 0.3561],
         [0.0564, 0.6438, 0.6947,  ..., 0.5173, 0.0322, 0.3143]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1071, 0.1144, 0.5707,  ..., 0.9303, 0.0498, 0.0397],
         [0.1071, 0.1508, 0.1577,  ..., 0.0232, 0.0498, 0.0397],
         [0.6649, 0.1144, 0.1091,  ..., 0.0232, 0.8506, 0.8809],
         [0.1208, 0.6203, 0.1625,  ..., 0.0232, 0.0498, 0.0397]],
        [[0.1083, 0.0263, 0.9303,  ..., 0.6906, 0.0888, 0.0474],
         [0.1083, 0.0315, 0.0261,  ..., 0.1263, 0.0985, 0.0474],
         [0.6591, 0.0263, 0.0218,  ..., 0.0915, 0.0888, 0.8579],
         [0.1243, 0.9158, 0.0218,  ..., 0.0915, 0.7239, 0.0474]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:40:59,020 [Process: 0] Synchronize training processes
2024-08-20 17:40:59,020 [Process: 0] Evaluating...
2024-08-20 17:40:59,022 [Process: 0] EPOCH 46:
2024-08-20 17:40:59,023 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:00,021 [Process: 0] Synchronize training processes
2024-08-20 17:41:00,022 [Process: 0] Evaluating...
2024-08-20 17:41:00,023 [Process: 0] EPOCH 47:
2024-08-20 17:41:00,025 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1406, 0.1216, 0.1213,  ..., 0.9468, 0.7552, 0.1143],
         [0.1406, 0.1216, 0.1282,  ..., 0.0233, 0.1023, 0.1203],
         [0.1406, 0.1216, 0.1213,  ..., 0.0150, 0.0712, 0.1143],
         [0.5781, 0.6351, 0.6293,  ..., 0.0150, 0.0712, 0.6511]],
        [[0.8604, 0.1045, 0.1161,  ..., 0.1601, 0.0548, 0.1574],
         [0.0528, 0.1096, 0.1256,  ..., 0.1601, 0.0548, 0.1574],
         [0.0434, 0.1045, 0.1161,  ..., 0.2605, 0.8357, 0.4826],
         [0.0434, 0.6815, 0.6421,  ..., 0.4194, 0.0548, 0.2027]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1498, 0.2045, 0.6034,  ..., 0.9667, 0.0571, 0.0822],
         [0.1498, 0.1859, 0.1124,  ..., 0.0111, 0.0571, 0.0822],
         [0.4599, 0.1392, 0.1124,  ..., 0.0111, 0.8273, 0.7534],
         [0.2406, 0.4704, 0.1718,  ..., 0.0111, 0.0585, 0.0822]],
        [[0.0385, 0.0891, 0.8751,  ..., 0.6841, 0.0466, 0.0289],
         [0.0385, 0.0899, 0.0416,  ..., 0.1101, 0.0471, 0.0289],
         [0.8846, 0.0891, 0.0416,  ..., 0.1028, 0.0466, 0.9133],
         [0.0385, 0.7320, 0.0416,  ..., 0.1030, 0.8596, 0.0289]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1318, 0.1248, 0.1060,  ..., 0.9159, 0.9287, 0.0875],
         [0.1318, 0.1248, 0.1060,  ..., 0.0331, 0.0238, 0.0875],
         [0.1318, 0.1248, 0.1060,  ..., 0.0255, 0.0238, 0.0875],
         [0.6047, 0.6256, 0.6821,  ..., 0.0255, 0.0238, 0.7374]],
        [[0.9013, 0.1358, 0.1063,  ..., 0.1609, 0.0915, 0.0281],
         [0.0398, 0.1358, 0.1063,  ..., 0.1609, 0.0915, 0.0281],
         [0.0294, 0.1373, 0.1063,  ..., 0.2454, 0.7254, 0.9157],
         [0.0294, 0.5912, 0.6811,  ..., 0.4327, 0.0915, 0.0281]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1138, 0.0880, 0.8990,  ..., 0.9153, 0.0518, 0.0476],
         [0.1138, 0.1268, 0.0337,  ..., 0.0282, 0.0518, 0.0476],
         [0.6548, 0.0880, 0.0337,  ..., 0.0282, 0.8445, 0.8571],
         [0.1176, 0.6973, 0.0337,  ..., 0.0282, 0.0518, 0.0476]],
        [[0.0995, 0.0370, 0.8446,  ..., 0.7095, 0.0835, 0.0483],
         [0.0995, 0.0578, 0.0518,  ..., 0.1197, 0.0919, 0.0483],
         [0.7015, 0.0370, 0.0518,  ..., 0.0796, 0.0835, 0.8552],
         [0.0995, 0.8683, 0.0518,  ..., 0.0911, 0.7411, 0.0483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:41:01,055 [Process: 0] Synchronize training processes
2024-08-20 17:41:01,055 [Process: 0] Evaluating...
2024-08-20 17:41:01,057 [Process: 0] EPOCH 48:
2024-08-20 17:41:01,058 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:02,058 [Process: 0] Synchronize training processes
2024-08-20 17:41:02,058 [Process: 0] Evaluating...
2024-08-20 17:41:02,060 [Process: 0] EPOCH 49:
2024-08-20 17:41:02,061 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1094, 0.0925, 0.0903,  ..., 0.8217, 0.8026, 0.0950],
         [0.1094, 0.0978, 0.1082,  ..., 0.0594, 0.0686, 0.0950],
         [0.1094, 0.0925, 0.0903,  ..., 0.0594, 0.0644, 0.0950],
         [0.6718, 0.7173, 0.7111,  ..., 0.0594, 0.0644, 0.7150]],
        [[0.8943, 0.0958, 0.0983,  ..., 0.1288, 0.0660, 0.0411],
         [0.0352, 0.1101, 0.1154,  ..., 0.1288, 0.0660, 0.0411],
         [0.0352, 0.0958, 0.0983,  ..., 0.1288, 0.7956, 0.8766],
         [0.0352, 0.6983, 0.6880,  ..., 0.6135, 0.0723, 0.0411]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1593, 0.1289, 0.9080,  ..., 0.9529, 0.0663, 0.0995],
         [0.1222, 0.1289, 0.0307,  ..., 0.0157, 0.0663, 0.0979],
         [0.5790, 0.1289, 0.0307,  ..., 0.0157, 0.7839, 0.6760],
         [0.1395, 0.6133, 0.0307,  ..., 0.0157, 0.0835, 0.1266]],
        [[0.1152, 0.0427, 0.8278,  ..., 0.6585, 0.0165, 0.0668],
         [0.1152, 0.0427, 0.0574,  ..., 0.1620, 0.0320, 0.0668],
         [0.5907, 0.0427, 0.0574,  ..., 0.0897, 0.0165, 0.7941],
         [0.1789, 0.8719, 0.0574,  ..., 0.0897, 0.9350, 0.0722]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1366, 0.1330, 0.1250,  ..., 0.9632, 0.8145, 0.1032],
         [0.1395, 0.1449, 0.1250,  ..., 0.0123, 0.0656, 0.1227],
         [0.1366, 0.1330, 0.1250,  ..., 0.0123, 0.0600, 0.1032],
         [0.5872, 0.5892, 0.6250,  ..., 0.0123, 0.0600, 0.6708]],
        [[0.7162, 0.1235, 0.1439,  ..., 0.1253, 0.0363, 0.0193],
         [0.1088, 0.1398, 0.1439,  ..., 0.1253, 0.0363, 0.0193],
         [0.0875, 0.1235, 0.1568,  ..., 0.1253, 0.8911, 0.9422],
         [0.0875, 0.6131, 0.5553,  ..., 0.6240, 0.0363, 0.0193]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0940, 0.2722, 0.8518,  ..., 0.9637, 0.0911, 0.0401],
         [0.0940, 0.1992, 0.0494,  ..., 0.0121, 0.0911, 0.0401],
         [0.7133, 0.1314, 0.0494,  ..., 0.0121, 0.6578, 0.8798],
         [0.0988, 0.3971, 0.0494,  ..., 0.0121, 0.1599, 0.0401]],
        [[0.1184, 0.0400, 0.8872,  ..., 0.5389, 0.0191, 0.1028],
         [0.1184, 0.0471, 0.0376,  ..., 0.1116, 0.0265, 0.1027],
         [0.4795, 0.0400, 0.0376,  ..., 0.1101, 0.0191, 0.6642],
         [0.2836, 0.8730, 0.0376,  ..., 0.2394, 0.9354, 0.1303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:03,076 [Process: 0] Synchronize training processes
2024-08-20 17:41:03,077 [Process: 0] Evaluating...
2024-08-20 17:41:03,078 [Process: 0] EPOCH 50:
2024-08-20 17:41:03,080 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:04,126 [Process: 0] Synchronize training processes
2024-08-20 17:41:04,126 [Process: 0] Evaluating...
2024-08-20 17:41:04,128 [Process: 0] EPOCH 51:
2024-08-20 17:41:04,130 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1908, 0.0834, 0.1255,  ..., 0.8735, 0.9444, 0.0977],
         [0.1622, 0.0834, 0.1255,  ..., 0.0422, 0.0185, 0.0988],
         [0.1776, 0.0834, 0.1255,  ..., 0.0422, 0.0185, 0.0977],
         [0.4694, 0.7497, 0.6234,  ..., 0.0422, 0.0185, 0.7057]],
        [[0.8446, 0.0837, 0.0937,  ..., 0.1214, 0.0472, 0.0199],
         [0.0518, 0.0903, 0.0937,  ..., 0.1214, 0.0472, 0.0199],
         [0.0518, 0.0837, 0.0937,  ..., 0.1214, 0.8584, 0.9402],
         [0.0518, 0.7422, 0.7190,  ..., 0.6358, 0.0472, 0.0199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1758, 0.0809, 0.8770,  ..., 0.9280, 0.0558, 0.0374],
         [0.1544, 0.1081, 0.0410,  ..., 0.0240, 0.0558, 0.0374],
         [0.4129, 0.0809, 0.0410,  ..., 0.0240, 0.8325, 0.8877],
         [0.2570, 0.7300, 0.0410,  ..., 0.0240, 0.0558, 0.0374]],
        [[0.0326, 0.0378, 0.8448,  ..., 0.5953, 0.0093, 0.0583],
         [0.0326, 0.0378, 0.0517,  ..., 0.1137, 0.0133, 0.0583],
         [0.9021, 0.0378, 0.0517,  ..., 0.1126, 0.0093, 0.8250],
         [0.0326, 0.8865, 0.0517,  ..., 0.1783, 0.9682, 0.0583]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0902, 0.0885, 0.1393,  ..., 0.9531, 0.8739, 0.1343],
         [0.0902, 0.0885, 0.1484,  ..., 0.0156, 0.0420, 0.1343],
         [0.0902, 0.0885, 0.1393,  ..., 0.0156, 0.0420, 0.1536],
         [0.7293, 0.7346, 0.5731,  ..., 0.0156, 0.0420, 0.5777]],
        [[0.8367, 0.1160, 0.0918,  ..., 0.1430, 0.0398, 0.0186],
         [0.0707, 0.1160, 0.0929,  ..., 0.1430, 0.0398, 0.0186],
         [0.0463, 0.1295, 0.0918,  ..., 0.1430, 0.8807, 0.9441],
         [0.0463, 0.6385, 0.7236,  ..., 0.5709, 0.0398, 0.0186]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1921, 0.1112, 0.9385,  ..., 0.9535, 0.0621, 0.0570],
         [0.1511, 0.1239, 0.0205,  ..., 0.0155, 0.0621, 0.0570],
         [0.4395, 0.1112, 0.0205,  ..., 0.0155, 0.8138, 0.8291],
         [0.2173, 0.6538, 0.0205,  ..., 0.0155, 0.0621, 0.0570]],
        [[0.0563, 0.0389, 0.8884,  ..., 0.6969, 0.0544, 0.0455],
         [0.0563, 0.0389, 0.0372,  ..., 0.1181, 0.0544, 0.0455],
         [0.8177, 0.0389, 0.0372,  ..., 0.0892, 0.0544, 0.8634],
         [0.0696, 0.8833, 0.0372,  ..., 0.0958, 0.8368, 0.0455]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:05,136 [Process: 0] Synchronize training processes
2024-08-20 17:41:05,136 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0989, 0.1296, 0.1343,  ..., 0.9588, 0.7544, 0.0832],
         [0.0989, 0.1296, 0.1343,  ..., 0.0137, 0.0869, 0.0832],
         [0.0989, 0.1296, 0.1603,  ..., 0.0137, 0.0793, 0.0832],
         [0.7032, 0.6113, 0.5711,  ..., 0.0137, 0.0793, 0.7505]],
        [[0.9616, 0.1018, 0.0835,  ..., 0.1218, 0.0238, 0.0137],
         [0.0128, 0.1036, 0.0835,  ..., 0.1218, 0.0238, 0.0137],
         [0.0128, 0.1018, 0.0835,  ..., 0.1218, 0.9287, 0.9588],
         [0.0128, 0.6929, 0.7496,  ..., 0.6345, 0.0238, 0.0137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0465, 0.2127, 0.9575,  ..., 0.9728, 0.0461, 0.0482],
         [0.0465, 0.2637, 0.0142,  ..., 0.0091, 0.0461, 0.0482],
         [0.8606, 0.1159, 0.0142,  ..., 0.0091, 0.8617, 0.8538],
         [0.0465, 0.4077, 0.0142,  ..., 0.0091, 0.0461, 0.0497]],
        [[0.0309, 0.0311, 0.9302,  ..., 0.8867, 0.0777, 0.0377],
         [0.0309, 0.0540, 0.0233,  ..., 0.0676, 0.1406, 0.0377],
         [0.9074, 0.0311, 0.0233,  ..., 0.0229, 0.0777, 0.8870],
         [0.0309, 0.8837, 0.0233,  ..., 0.0229, 0.7039, 0.0377]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:41:07,061 [Process: 0] EPOCH 52:
2024-08-20 17:41:07,067 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:08,053 [Process: 0] Synchronize training processes
2024-08-20 17:41:08,054 [Process: 0] Evaluating...
2024-08-20 17:41:08,055 [Process: 0] EPOCH 53:
2024-08-20 17:41:08,057 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1333, 0.1950, 0.0835,  ..., 0.9444, 0.9344, 0.1080],
         [0.1333, 0.1626, 0.0835,  ..., 0.0185, 0.0219, 0.1080],
         [0.1333, 0.1564, 0.0835,  ..., 0.0185, 0.0219, 0.1080],
         [0.6000, 0.4860, 0.7494,  ..., 0.0185, 0.0219, 0.6760]],
        [[0.8732, 0.1369, 0.0586,  ..., 0.1537, 0.0288, 0.0302],
         [0.0423, 0.1481, 0.0598,  ..., 0.1537, 0.0288, 0.0294],
         [0.0423, 0.1369, 0.0586,  ..., 0.2189, 0.9136, 0.9109],
         [0.0423, 0.5781, 0.8230,  ..., 0.4736, 0.0288, 0.0294]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0506, 0.0875, 0.9404,  ..., 0.9439, 0.0431, 0.0854],
         [0.0506, 0.1188, 0.0199,  ..., 0.0187, 0.0431, 0.0854],
         [0.8483, 0.0875, 0.0199,  ..., 0.0187, 0.8708, 0.7295],
         [0.0506, 0.7061, 0.0199,  ..., 0.0187, 0.0431, 0.0997]],
        [[0.0979, 0.0228, 0.8759,  ..., 0.8898, 0.0325, 0.0372],
         [0.0875, 0.0257, 0.0414,  ..., 0.0367, 0.0467, 0.0372],
         [0.7080, 0.0228, 0.0414,  ..., 0.0367, 0.0325, 0.8885],
         [0.1066, 0.9287, 0.0414,  ..., 0.0367, 0.8882, 0.0372]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:41:09,045 [Process: 0] Synchronize training processes
2024-08-20 17:41:09,045 [Process: 0] Evaluating...
2024-08-20 17:41:09,047 [Process: 0] EPOCH 54:
2024-08-20 17:41:09,049 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:10,029 [Process: 0] Synchronize training processes
2024-08-20 17:41:10,029 [Process: 0] Evaluating...
2024-08-20 17:41:10,031 [Process: 0] EPOCH 55:
2024-08-20 17:41:10,033 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1023, 0.1132, 0.0925,  ..., 0.9320, 0.9164, 0.0676],
         [0.1023, 0.1132, 0.0925,  ..., 0.0304, 0.0385, 0.0676],
         [0.1023, 0.1132, 0.0925,  ..., 0.0188, 0.0225, 0.0676],
         [0.6932, 0.6605, 0.7225,  ..., 0.0188, 0.0225, 0.7973]],
        [[0.8340, 0.0988, 0.0871,  ..., 0.1650, 0.0402, 0.0306],
         [0.0553, 0.0988, 0.0871,  ..., 0.1627, 0.0402, 0.0306],
         [0.0553, 0.0988, 0.0871,  ..., 0.2944, 0.8793, 0.9081],
         [0.0553, 0.7037, 0.7388,  ..., 0.3778, 0.0402, 0.0306]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0596, 0.0556, 0.9480,  ..., 0.9650, 0.0633, 0.0494],
         [0.0596, 0.0813, 0.0257,  ..., 0.0117, 0.0633, 0.0494],
         [0.8211, 0.0556, 0.0132,  ..., 0.0117, 0.8100, 0.8496],
         [0.0596, 0.8075, 0.0132,  ..., 0.0117, 0.0633, 0.0516]],
        [[0.0711, 0.0230, 0.7342,  ..., 0.8821, 0.0160, 0.0435],
         [0.0711, 0.0230, 0.0886,  ..., 0.0393, 0.0245, 0.0435],
         [0.7794, 0.0230, 0.0886,  ..., 0.0393, 0.0160, 0.8694],
         [0.0784, 0.9309, 0.0886,  ..., 0.0393, 0.9435, 0.0435]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0659, 0.1082, 0.0796,  ..., 0.9178, 0.8370, 0.1296],
         [0.0659, 0.1082, 0.0796,  ..., 0.0274, 0.0543, 0.1296],
         [0.0659, 0.1082, 0.0796,  ..., 0.0274, 0.0543, 0.1387],
         [0.8023, 0.6754, 0.7611,  ..., 0.0274, 0.0543, 0.6022]],
        [[0.9008, 0.0906, 0.1098,  ..., 0.1205, 0.0377, 0.0139],
         [0.0497, 0.0906, 0.1098,  ..., 0.1205, 0.0377, 0.0139],
         [0.0248, 0.0906, 0.1098,  ..., 0.1205, 0.8869, 0.9582],
         [0.0248, 0.7282, 0.6707,  ..., 0.6385, 0.0377, 0.0139]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0952, 0.1886, 0.9718,  ..., 0.9702, 0.0320, 0.0571],
         [0.0911, 0.2869, 0.0094,  ..., 0.0099, 0.0320, 0.0571],
         [0.7088, 0.0985, 0.0094,  ..., 0.0099, 0.9040, 0.8170],
         [0.1048, 0.4260, 0.0094,  ..., 0.0099, 0.0320, 0.0689]],
        [[0.1394, 0.0412, 0.8204,  ..., 0.2893, 0.0461, 0.0849],
         [0.1104, 0.0412, 0.1160,  ..., 0.3875, 0.0461, 0.0743],
         [0.5891, 0.0412, 0.0318,  ..., 0.1044, 0.0461, 0.7666],
         [0.1612, 0.8765, 0.0318,  ..., 0.2187, 0.8616, 0.0743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-20 17:41:11,016 [Process: 0] Synchronize training processes
2024-08-20 17:41:11,017 [Process: 0] Evaluating...
2024-08-20 17:41:11,019 [Process: 0] EPOCH 56:
2024-08-20 17:41:11,020 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:12,023 [Process: 0] Synchronize training processes
2024-08-20 17:41:12,023 [Process: 0] Evaluating...
2024-08-20 17:41:12,025 [Process: 0] EPOCH 57:
2024-08-20 17:41:12,027 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.1187, 0.1233, 0.1017,  ..., 0.9410, 0.8726, 0.1112],
         [0.1187, 0.1233, 0.1017,  ..., 0.0197, 0.0425, 0.1112],
         [0.1187, 0.1256, 0.1017,  ..., 0.0197, 0.0425, 0.1112],
         [0.6440, 0.6278, 0.6949,  ..., 0.0197, 0.0425, 0.6664]],
        [[0.9369, 0.0803, 0.1012,  ..., 0.0237, 0.0136, 0.0208],
         [0.0235, 0.0803, 0.1012,  ..., 0.0237, 0.0136, 0.0208],
         [0.0198, 0.0803, 0.1012,  ..., 0.9290, 0.9591, 0.9377],
         [0.0198, 0.7592, 0.6963,  ..., 0.0237, 0.0136, 0.0208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0736, 0.1110, 0.9448,  ..., 0.9641, 0.0659, 0.0670],
         [0.0736, 0.2053, 0.0184,  ..., 0.0120, 0.0659, 0.0670],
         [0.7648, 0.1069, 0.0184,  ..., 0.0120, 0.7638, 0.7925],
         [0.0879, 0.5768, 0.0184,  ..., 0.0120, 0.1043, 0.0736]],
        [[0.0767, 0.0229, 0.9446,  ..., 0.9144, 0.0105, 0.0321],
         [0.0767, 0.0229, 0.0185,  ..., 0.0323, 0.0105, 0.0321],
         [0.6165, 0.0229, 0.0185,  ..., 0.0266, 0.0105, 0.9037],
         [0.2301, 0.9313, 0.0185,  ..., 0.0266, 0.9685, 0.0321]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1974, 0.0784, 0.0722,  ..., 0.9231, 0.9350, 0.1592],
         [0.1451, 0.1184, 0.0722,  ..., 0.0278, 0.0217, 0.1556],
         [0.1958, 0.0784, 0.0722,  ..., 0.0245, 0.0217, 0.3622],
         [0.4617, 0.7249, 0.7834,  ..., 0.0245, 0.0217, 0.3231]],
        [[0.9097, 0.0843, 0.0494,  ..., 0.1186, 0.0071, 0.1176],
         [0.0301, 0.0843, 0.0494,  ..., 0.1186, 0.0071, 0.1176],
         [0.0301, 0.0843, 0.0494,  ..., 0.1186, 0.9788, 0.1522],
         [0.0301, 0.7470, 0.8517,  ..., 0.6442, 0.0071, 0.6126]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0530, 0.1192, 0.9301,  ..., 0.9481, 0.0202, 0.0438],
         [0.0530, 0.2681, 0.0233,  ..., 0.0173, 0.0202, 0.0438],
         [0.8410, 0.0945, 0.0233,  ..., 0.0173, 0.9395, 0.8687],
         [0.0530, 0.5182, 0.0233,  ..., 0.0173, 0.0202, 0.0438]],
        [[0.0470, 0.0227, 0.9519,  ..., 0.9399, 0.0615, 0.0365],
         [0.0470, 0.0445, 0.0160,  ..., 0.0200, 0.0893, 0.0365],
         [0.8148, 0.0227, 0.0160,  ..., 0.0200, 0.0615, 0.8905],
         [0.0913, 0.9101, 0.0160,  ..., 0.0200, 0.7878, 0.0365]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9199, 0.0747, 0.1219,  ..., 0.9309, 0.9356, 0.0986],
         [0.0271, 0.0747, 0.1219,  ..., 0.0230, 0.0215, 0.0986],
         [0.0265, 0.0747, 0.1219,  ..., 0.0230, 0.0215, 0.0986],
         [0.0265, 0.7758, 0.6343,  ..., 0.0230, 0.0215, 0.7043]],
        [[0.9218, 0.1198, 0.0738,  ..., 0.1648, 0.0269, 0.1555],
         [0.0261, 0.1314, 0.0738,  ..., 0.1736, 0.0269, 0.1555],
         [0.0261, 0.1198, 0.0738,  ..., 0.2045, 0.9194, 0.3950],
         [0.0261, 0.6290, 0.7785,  ..., 0.4572, 0.0269, 0.2941]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:41:13,024 [Process: 0] Synchronize training processes
2024-08-20 17:41:13,025 [Process: 0] Evaluating...
2024-08-20 17:41:13,026 [Process: 0] EPOCH 58:
2024-08-20 17:41:13,028 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:14,024 [Process: 0] Synchronize training processes
2024-08-20 17:41:14,024 [Process: 0] Evaluating...
2024-08-20 17:41:14,026 [Process: 0] EPOCH 59:
2024-08-20 17:41:14,028 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0680, 0.1025, 0.9289,  ..., 0.9625, 0.0300, 0.0455],
         [0.0680, 0.2888, 0.0237,  ..., 0.0125, 0.0300, 0.0455],
         [0.7913, 0.0779, 0.0237,  ..., 0.0125, 0.9100, 0.8635],
         [0.0727, 0.5309, 0.0237,  ..., 0.0125, 0.0300, 0.0455]],
        [[0.0506, 0.0211, 0.9305,  ..., 0.7240, 0.0293, 0.0337],
         [0.0506, 0.0263, 0.0232,  ..., 0.0935, 0.0687, 0.0337],
         [0.8056, 0.0211, 0.0232,  ..., 0.0792, 0.0293, 0.8990],
         [0.0933, 0.9314, 0.0232,  ..., 0.1033, 0.8727, 0.0337]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9471, 0.0812, 0.0592,  ..., 0.9769, 0.9050, 0.0771],
         [0.0176, 0.0857, 0.0622,  ..., 0.0077, 0.0317, 0.0771],
         [0.0176, 0.0812, 0.0592,  ..., 0.0077, 0.0317, 0.0771],
         [0.0176, 0.7519, 0.8194,  ..., 0.0077, 0.0317, 0.7688]],
        [[0.4347, 0.1017, 0.0802,  ..., 0.1526, 0.0616, 0.0114],
         [0.2053, 0.1017, 0.0978,  ..., 0.1327, 0.0616, 0.0114],
         [0.1353, 0.1017, 0.0802,  ..., 0.5819, 0.8153, 0.9657],
         [0.2248, 0.6949, 0.7418,  ..., 0.1327, 0.0616, 0.0114]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1291, 0.0519, 0.9657,  ..., 0.9773, 0.0311, 0.0333],
         [0.1291, 0.1134, 0.0114,  ..., 0.0076, 0.0311, 0.0333],
         [0.5014, 0.0519, 0.0114,  ..., 0.0076, 0.9067, 0.8959],
         [0.2403, 0.7828, 0.0114,  ..., 0.0076, 0.0311, 0.0376]],
        [[0.0798, 0.0132, 0.9375,  ..., 0.8235, 0.0675, 0.0320],
         [0.0798, 0.0208, 0.0208,  ..., 0.0680, 0.0974, 0.0320],
         [0.5751, 0.0132, 0.0208,  ..., 0.0543, 0.0675, 0.8974],
         [0.2653, 0.9528, 0.0208,  ..., 0.0543, 0.7676, 0.0386]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-20 17:41:15,046 [Process: 0] Synchronize training processes
2024-08-20 17:41:15,047 [Process: 0] Evaluating...
2024-08-20 17:41:15,048 [Process: 0] EPOCH 60:
2024-08-20 17:41:15,050 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:16,059 [Process: 0] Synchronize training processes
2024-08-20 17:41:16,059 [Process: 0] Evaluating...
2024-08-20 17:41:16,061 [Process: 0] EPOCH 61:
2024-08-20 17:41:16,062 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.9152, 0.0841, 0.0513,  ..., 0.9838, 0.9112, 0.1211],
         [0.0316, 0.1045, 0.0513,  ..., 0.0054, 0.0296, 0.1211],
         [0.0266, 0.0841, 0.0513,  ..., 0.0054, 0.0296, 0.1584],
         [0.0266, 0.7273, 0.8462,  ..., 0.0054, 0.0296, 0.5994]],
        [[0.5870, 0.2777, 0.0581,  ..., 0.1524, 0.0678, 0.0088],
         [0.1316, 0.1564, 0.0581,  ..., 0.1524, 0.0678, 0.0088],
         [0.1259, 0.1399, 0.0581,  ..., 0.2729, 0.7966, 0.9737],
         [0.1556, 0.4260, 0.8256,  ..., 0.4223, 0.0678, 0.0088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1451, 0.0884, 0.9520,  ..., 0.9647, 0.0278, 0.0410],
         [0.1443, 0.1958, 0.0160,  ..., 0.0118, 0.0278, 0.0410],
         [0.4737, 0.0884, 0.0160,  ..., 0.0118, 0.9141, 0.8769],
         [0.2368, 0.6274, 0.0160,  ..., 0.0118, 0.0303, 0.0410]],
        [[0.0837, 0.0156, 0.9534,  ..., 0.8294, 0.0084, 0.0477],
         [0.0837, 0.0297, 0.0181,  ..., 0.0569, 0.0105, 0.0477],
         [0.2100, 0.0156, 0.0142,  ..., 0.0569, 0.0084, 0.8172],
         [0.6227, 0.9391, 0.0142,  ..., 0.0569, 0.9727, 0.0874]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9496, 0.0960, 0.0946,  ..., 0.9655, 0.8914, 0.0703],
         [0.0187, 0.0960, 0.0946,  ..., 0.0115, 0.0470, 0.0703],
         [0.0159, 0.0960, 0.0946,  ..., 0.0115, 0.0308, 0.0703],
         [0.0159, 0.7120, 0.7161,  ..., 0.0115, 0.0308, 0.7890]],
        [[0.7499, 0.1005, 0.0995,  ..., 0.0941, 0.0580, 0.0106],
         [0.1237, 0.1005, 0.0995,  ..., 0.0941, 0.0580, 0.0106],
         [0.0632, 0.1005, 0.0995,  ..., 0.0941, 0.8261, 0.9681],
         [0.0632, 0.6985, 0.7015,  ..., 0.7178, 0.0580, 0.0106]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0930, 0.1035, 0.9225,  ..., 0.9518, 0.0425, 0.0381],
         [0.0930, 0.1530, 0.0405,  ..., 0.0161, 0.0425, 0.0381],
         [0.7211, 0.0907, 0.0185,  ..., 0.0161, 0.8724, 0.8856],
         [0.0930, 0.6527, 0.0185,  ..., 0.0161, 0.0425, 0.0381]],
        [[0.1279, 0.0086, 0.9532,  ..., 0.8305, 0.0129, 0.0461],
         [0.1092, 0.0086, 0.0242,  ..., 0.0832, 0.0129, 0.0461],
         [0.5417, 0.0086, 0.0113,  ..., 0.0431, 0.0129, 0.8522],
         [0.2211, 0.9743, 0.0113,  ..., 0.0431, 0.9613, 0.0555]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:41:17,092 [Process: 0] Synchronize training processes
2024-08-20 17:41:17,092 [Process: 0] Evaluating...
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8745, 0.0676, 0.0761,  ..., 0.9557, 0.9577, 0.1166],
         [0.0418, 0.0676, 0.0761,  ..., 0.0152, 0.0213, 0.1167],
         [0.0418, 0.0676, 0.0761,  ..., 0.0145, 0.0105, 0.1118],
         [0.0418, 0.7972, 0.7718,  ..., 0.0145, 0.0105, 0.6549]],
        [[0.6786, 0.0638, 0.0718,  ..., 0.1536, 0.0716, 0.0676],
         [0.1496, 0.0638, 0.0718,  ..., 0.1536, 0.0716, 0.0643],
         [0.0859, 0.0638, 0.0718,  ..., 0.2927, 0.7852, 0.8038],
         [0.0859, 0.8087, 0.7846,  ..., 0.4001, 0.0716, 0.0643]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1378, 0.0795, 0.9672,  ..., 0.9748, 0.0507, 0.0319],
         [0.1270, 0.0795, 0.0109,  ..., 0.0084, 0.0507, 0.0316],
         [0.6056, 0.0795, 0.0109,  ..., 0.0084, 0.8479, 0.9049],
         [0.1296, 0.7616, 0.0109,  ..., 0.0084, 0.0507, 0.0316]],
        [[0.1983, 0.0431, 0.9307,  ..., 0.8201, 0.0239, 0.0417],
         [0.1109, 0.0431, 0.0305,  ..., 0.0880, 0.0239, 0.0417],
         [0.5328, 0.0431, 0.0194,  ..., 0.0459, 0.0239, 0.8720],
         [0.1580, 0.8708, 0.0194,  ..., 0.0459, 0.9283, 0.0446]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:41:18,997 [Process: 0] EPOCH 62:
2024-08-20 17:41:18,999 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:20,051 [Process: 0] Synchronize training processes
2024-08-20 17:41:20,051 [Process: 0] Evaluating...
2024-08-20 17:41:20,053 [Process: 0] EPOCH 63:
2024-08-20 17:41:20,055 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9773, 0.1038, 0.0753,  ..., 0.9273, 0.8461, 0.0918],
         [0.0076, 0.1038, 0.0947,  ..., 0.0243, 0.0669, 0.0967],
         [0.0076, 0.1038, 0.0753,  ..., 0.0242, 0.0435, 0.0918],
         [0.0076, 0.6885, 0.7547,  ..., 0.0242, 0.0435, 0.7196]],
        [[0.7196, 0.0918, 0.0748,  ..., 0.1669, 0.0648, 0.0155],
         [0.1518, 0.0918, 0.0748,  ..., 0.1669, 0.0634, 0.0155],
         [0.0643, 0.0918, 0.0748,  ..., 0.3138, 0.8084, 0.9536],
         [0.0643, 0.7246, 0.7757,  ..., 0.3525, 0.0634, 0.0155]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1404, 0.1323, 0.9714,  ..., 0.9170, 0.0288, 0.0623],
         [0.1404, 0.1703, 0.0095,  ..., 0.0277, 0.0288, 0.0616],
         [0.4171, 0.1551, 0.0095,  ..., 0.0277, 0.9111, 0.8145],
         [0.3022, 0.5424, 0.0095,  ..., 0.0277, 0.0313, 0.0616]],
        [[0.0491, 0.0121, 0.9628,  ..., 0.9170, 0.0054, 0.0413],
         [0.0490, 0.0161, 0.0124,  ..., 0.0275, 0.0054, 0.0413],
         [0.8530, 0.0121, 0.0124,  ..., 0.0275, 0.0054, 0.8760],
         [0.0490, 0.9596, 0.0124,  ..., 0.0279, 0.9837, 0.0413]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:41:21,126 [Process: 0] Synchronize training processes
2024-08-20 17:41:21,126 [Process: 0] Evaluating...
2024-08-20 17:41:21,128 [Process: 0] EPOCH 64:
2024-08-20 17:41:21,130 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:22,161 [Process: 0] Synchronize training processes
2024-08-20 17:41:22,161 [Process: 0] Evaluating...
2024-08-20 17:41:22,163 [Process: 0] EPOCH 65:
2024-08-20 17:41:22,164 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9388, 0.0952, 0.1013,  ..., 0.9760, 0.8751, 0.0515],
         [0.0204, 0.0952, 0.1013,  ..., 0.0080, 0.0567, 0.0515],
         [0.0204, 0.0952, 0.1244,  ..., 0.0080, 0.0341, 0.0515],
         [0.0204, 0.7145, 0.6730,  ..., 0.0080, 0.0341, 0.8456]],
        [[0.6134, 0.0755, 0.0570,  ..., 0.1557, 0.0873, 0.0212],
         [0.1609, 0.0896, 0.0570,  ..., 0.1557, 0.0777, 0.0212],
         [0.1134, 0.0755, 0.0570,  ..., 0.3313, 0.7572, 0.9363],
         [0.1123, 0.7593, 0.8291,  ..., 0.3573, 0.0777, 0.0212]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1011, 0.0559, 0.9357,  ..., 0.9744, 0.0496, 0.0479],
         [0.1011, 0.1477, 0.0214,  ..., 0.0085, 0.0496, 0.0473],
         [0.6952, 0.0559, 0.0214,  ..., 0.0085, 0.8417, 0.8576],
         [0.1025, 0.7406, 0.0214,  ..., 0.0085, 0.0591, 0.0473]],
        [[0.1173, 0.0199, 0.9334,  ..., 0.8758, 0.0486, 0.0577],
         [0.0872, 0.0274, 0.0222,  ..., 0.0508, 0.0486, 0.0537],
         [0.6998, 0.0199, 0.0222,  ..., 0.0367, 0.0486, 0.8350],
         [0.0956, 0.9327, 0.0222,  ..., 0.0367, 0.8542, 0.0537]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9076, 0.0611, 0.0545,  ..., 0.9121, 0.8802, 0.0631],
         [0.0308, 0.0611, 0.0545,  ..., 0.0373, 0.0399, 0.0631],
         [0.0308, 0.0611, 0.0545,  ..., 0.0253, 0.0399, 0.0631],
         [0.0308, 0.8168, 0.8366,  ..., 0.0253, 0.0399, 0.8108]],
        [[0.8342, 0.1085, 0.1217,  ..., 0.1148, 0.0683, 0.0234],
         [0.0890, 0.1504, 0.1217,  ..., 0.1148, 0.0598, 0.0234],
         [0.0384, 0.1085, 0.1463,  ..., 0.1148, 0.8122, 0.9298],
         [0.0384, 0.6326, 0.6103,  ..., 0.6556, 0.0598, 0.0234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0743, 0.1221, 0.9813,  ..., 0.9702, 0.0588, 0.0619],
         [0.0654, 0.3627, 0.0062,  ..., 0.0099, 0.0570, 0.0619],
         [0.7949, 0.0997, 0.0062,  ..., 0.0099, 0.8272, 0.8142],
         [0.0654, 0.4155, 0.0062,  ..., 0.0099, 0.0570, 0.0619]],
        [[0.0809, 0.0192, 0.9687,  ..., 0.7732, 0.0159, 0.0869],
         [0.0766, 0.0268, 0.0104,  ..., 0.1072, 0.0159, 0.0687],
         [0.7622, 0.0192, 0.0104,  ..., 0.0598, 0.0159, 0.7758],
         [0.0802, 0.9349, 0.0104,  ..., 0.0598, 0.9522, 0.0687]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:23,204 [Process: 0] Synchronize training processes
2024-08-20 17:41:23,204 [Process: 0] Evaluating...
2024-08-20 17:41:23,206 [Process: 0] EPOCH 66:
2024-08-20 17:41:23,208 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:24,212 [Process: 0] Synchronize training processes
2024-08-20 17:41:24,212 [Process: 0] Evaluating...
2024-08-20 17:41:24,214 [Process: 0] EPOCH 67:
2024-08-20 17:41:24,215 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9786, 0.0678, 0.1577,  ..., 0.9611, 0.9610, 0.0782],
         [0.0071, 0.0678, 0.1478,  ..., 0.0130, 0.0130, 0.0782],
         [0.0071, 0.0678, 0.1703,  ..., 0.0130, 0.0130, 0.0782],
         [0.0071, 0.7965, 0.5242,  ..., 0.0130, 0.0130, 0.7653]],
        [[0.6618, 0.1112, 0.0990,  ..., 0.1187, 0.0413, 0.0175],
         [0.1779, 0.1112, 0.0990,  ..., 0.1187, 0.0401, 0.0175],
         [0.0801, 0.1119, 0.1098,  ..., 0.1187, 0.8786, 0.9474],
         [0.0801, 0.6657, 0.6923,  ..., 0.6438, 0.0401, 0.0175]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1220, 0.0934, 0.9162,  ..., 0.9003, 0.0396, 0.0519],
         [0.1127, 0.1762, 0.0279,  ..., 0.0332, 0.0396, 0.0519],
         [0.6163, 0.0912, 0.0279,  ..., 0.0332, 0.8813, 0.8443],
         [0.1491, 0.6392, 0.0279,  ..., 0.0332, 0.0396, 0.0519]],
        [[0.1004, 0.0318, 0.9896,  ..., 0.9519, 0.0033, 0.0405],
         [0.0765, 0.0318, 0.0035,  ..., 0.0160, 0.0033, 0.0405],
         [0.7467, 0.0318, 0.0035,  ..., 0.0160, 0.0033, 0.8784],
         [0.0765, 0.9047, 0.0035,  ..., 0.0160, 0.9901, 0.0405]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9456, 0.0251, 0.0969,  ..., 0.8198, 0.9714, 0.0860],
         [0.0281, 0.0251, 0.0969,  ..., 0.0888, 0.0140, 0.0860],
         [0.0131, 0.0251, 0.0969,  ..., 0.0457, 0.0073, 0.0860],
         [0.0131, 0.9246, 0.7093,  ..., 0.0457, 0.0073, 0.7420]],
        [[0.7834, 0.0528, 0.0609,  ..., 0.0806, 0.0230, 0.0175],
         [0.1182, 0.0528, 0.0609,  ..., 0.0806, 0.0230, 0.0175],
         [0.0492, 0.0528, 0.0609,  ..., 0.0806, 0.9310, 0.9476],
         [0.0492, 0.8415, 0.8172,  ..., 0.7582, 0.0230, 0.0175]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0454, 0.0637, 0.9435,  ..., 0.9068, 0.0503, 0.0338],
         [0.0454, 0.0782, 0.0188,  ..., 0.0424, 0.0503, 0.0338],
         [0.8639, 0.0637, 0.0188,  ..., 0.0254, 0.8411, 0.8987],
         [0.0454, 0.7944, 0.0188,  ..., 0.0254, 0.0583, 0.0338]],
        [[0.1004, 0.0170, 0.9318,  ..., 0.9203, 0.0173, 0.0477],
         [0.0728, 0.0178, 0.0227,  ..., 0.0266, 0.0173, 0.0477],
         [0.7528, 0.0170, 0.0227,  ..., 0.0266, 0.0173, 0.8551],
         [0.0740, 0.9481, 0.0227,  ..., 0.0266, 0.9482, 0.0495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:25,238 [Process: 0] Synchronize training processes
2024-08-20 17:41:25,239 [Process: 0] Evaluating...
2024-08-20 17:41:25,240 [Process: 0] EPOCH 68:
2024-08-20 17:41:25,242 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9083, 0.0301, 0.0806,  ..., 0.9160, 0.9094, 0.1063],
         [0.0436, 0.0301, 0.0806,  ..., 0.0451, 0.0374, 0.1063],
         [0.0241, 0.0301, 0.0806,  ..., 0.0195, 0.0266, 0.1235],
         [0.0241, 0.9098, 0.7581,  ..., 0.0195, 0.0266, 0.6638]],
        [[0.8388, 0.0761, 0.0506,  ..., 0.0731, 0.0222, 0.0100],
         [0.0792, 0.0761, 0.0506,  ..., 0.1046, 0.0222, 0.0100],
         [0.0410, 0.0761, 0.0506,  ..., 0.0731, 0.9335, 0.9701],
         [0.0410, 0.7717, 0.8483,  ..., 0.7492, 0.0222, 0.0100]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0680, 0.0343, 0.9750,  ..., 0.9665, 0.0563, 0.0379],
         [0.0680, 0.0343, 0.0083,  ..., 0.0112, 0.0563, 0.0379],
         [0.7960, 0.0343, 0.0083,  ..., 0.0112, 0.8251, 0.8863],
         [0.0680, 0.8971, 0.0083,  ..., 0.0112, 0.0623, 0.0379]],
        [[0.0510, 0.0254, 0.9900,  ..., 0.9154, 0.0153, 0.0803],
         [0.0510, 0.0363, 0.0033,  ..., 0.0282, 0.0153, 0.0708],
         [0.8470, 0.0254, 0.0033,  ..., 0.0282, 0.0153, 0.7781],
         [0.0510, 0.9128, 0.0033,  ..., 0.0282, 0.9540, 0.0708]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9180, 0.1010, 0.1114,  ..., 0.9595, 0.8850, 0.0999],
         [0.0273, 0.1232, 0.1159,  ..., 0.0135, 0.0610, 0.0999],
         [0.0273, 0.1010, 0.1114,  ..., 0.0135, 0.0270, 0.0999],
         [0.0273, 0.6748, 0.6612,  ..., 0.0135, 0.0270, 0.7003]],
        [[0.9332, 0.0547, 0.0536,  ..., 0.1122, 0.0234, 0.0126],
         [0.0308, 0.0556, 0.0536,  ..., 0.1465, 0.0234, 0.0126],
         [0.0180, 0.0547, 0.0536,  ..., 0.1122, 0.9298, 0.9621],
         [0.0180, 0.8350, 0.8393,  ..., 0.6291, 0.0234, 0.0126]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0755, 0.0290, 0.9182,  ..., 0.9319, 0.0340, 0.0258],
         [0.0786, 0.0885, 0.0273,  ..., 0.0227, 0.0340, 0.0258],
         [0.7703, 0.0290, 0.0273,  ..., 0.0227, 0.8980, 0.9225],
         [0.0755, 0.8536, 0.0273,  ..., 0.0227, 0.0340, 0.0258]],
        [[0.0798, 0.0205, 0.9485,  ..., 0.9506, 0.0196, 0.0357],
         [0.0609, 0.0391, 0.0172,  ..., 0.0238, 0.0196, 0.0357],
         [0.7984, 0.0205, 0.0172,  ..., 0.0128, 0.0196, 0.8928],
         [0.0609, 0.9199, 0.0172,  ..., 0.0128, 0.9411, 0.0357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:26,280 [Process: 0] Synchronize training processes
2024-08-20 17:41:26,280 [Process: 0] Evaluating...
2024-08-20 17:41:26,282 [Process: 0] EPOCH 69:
2024-08-20 17:41:26,283 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:27,301 [Process: 0] Synchronize training processes
2024-08-20 17:41:27,301 [Process: 0] Evaluating...
2024-08-20 17:41:27,302 [Process: 0] EPOCH 70:
2024-08-20 17:41:27,304 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9628, 0.0477, 0.1433,  ..., 0.8778, 0.9241, 0.0776],
         [0.0124, 0.0477, 0.2136,  ..., 0.0421, 0.0253, 0.0776],
         [0.0124, 0.0477, 0.1609,  ..., 0.0401, 0.0253, 0.0776],
         [0.0124, 0.8569, 0.4822,  ..., 0.0401, 0.0253, 0.7672]],
        [[0.7800, 0.0858, 0.0445,  ..., 0.1068, 0.0509, 0.0071],
         [0.1342, 0.0858, 0.0445,  ..., 0.1068, 0.0582, 0.0071],
         [0.0429, 0.0858, 0.0445,  ..., 0.1068, 0.8401, 0.9787],
         [0.0429, 0.7427, 0.8664,  ..., 0.6796, 0.0509, 0.0071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0589, 0.0719, 0.9398,  ..., 0.9209, 0.0423, 0.0526],
         [0.0589, 0.0719, 0.0371,  ..., 0.0350, 0.0423, 0.0526],
         [0.8233, 0.0719, 0.0115,  ..., 0.0220, 0.8731, 0.8423],
         [0.0589, 0.7843, 0.0115,  ..., 0.0220, 0.0423, 0.0526]],
        [[0.0432, 0.0163, 0.9734,  ..., 0.9055, 0.0219, 0.0505],
         [0.0432, 0.0201, 0.0089,  ..., 0.0315, 0.0219, 0.0505],
         [0.8705, 0.0163, 0.0089,  ..., 0.0315, 0.0219, 0.8485],
         [0.0432, 0.9472, 0.0089,  ..., 0.0315, 0.9344, 0.0505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9351, 0.0979, 0.1066,  ..., 0.9696, 0.9063, 0.0649],
         [0.0216, 0.1165, 0.1066,  ..., 0.0101, 0.0483, 0.0649],
         [0.0216, 0.0979, 0.1066,  ..., 0.0101, 0.0227, 0.0649],
         [0.0216, 0.6876, 0.6801,  ..., 0.0101, 0.0227, 0.8053]],
        [[0.7508, 0.0834, 0.0624,  ..., 0.1337, 0.0138, 0.0129],
         [0.1153, 0.0834, 0.0694,  ..., 0.1165, 0.0138, 0.0129],
         [0.0675, 0.0834, 0.0624,  ..., 0.1450, 0.9587, 0.9613],
         [0.0664, 0.7499, 0.8059,  ..., 0.6047, 0.0138, 0.0129]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0401, 0.1426, 0.9263,  ..., 0.9513, 0.0426, 0.0565],
         [0.0401, 0.5305, 0.0223,  ..., 0.0162, 0.0426, 0.0565],
         [0.8796, 0.1006, 0.0223,  ..., 0.0162, 0.8723, 0.8295],
         [0.0401, 0.2263, 0.0291,  ..., 0.0162, 0.0426, 0.0575]],
        [[0.0603, 0.0196, 0.9086,  ..., 0.8925, 0.0078, 0.0348],
         [0.0550, 0.0196, 0.0305,  ..., 0.0398, 0.0078, 0.0348],
         [0.8211, 0.0196, 0.0305,  ..., 0.0339, 0.0078, 0.8957],
         [0.0635, 0.9413, 0.0305,  ..., 0.0339, 0.9765, 0.0348]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:28,335 [Process: 0] Synchronize training processes
2024-08-20 17:41:28,335 [Process: 0] Evaluating...
2024-08-20 17:41:28,337 [Process: 0] EPOCH 71:
2024-08-20 17:41:28,339 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:29,386 [Process: 0] Synchronize training processes
2024-08-20 17:41:29,386 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9600, 0.0595, 0.1147,  ..., 0.9827, 0.9419, 0.0743],
         [0.0133, 0.0595, 0.1147,  ..., 0.0058, 0.0194, 0.0899],
         [0.0133, 0.0595, 0.1241,  ..., 0.0058, 0.0194, 0.0743],
         [0.0133, 0.8216, 0.6464,  ..., 0.0058, 0.0194, 0.7615]],
        [[0.5675, 0.0575, 0.0473,  ..., 0.1443, 0.0098, 0.0216],
         [0.2140, 0.0575, 0.0557,  ..., 0.1869, 0.0098, 0.0216],
         [0.1109, 0.0575, 0.0473,  ..., 0.1891, 0.9706, 0.9352],
         [0.1076, 0.8275, 0.8497,  ..., 0.4798, 0.0098, 0.0216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0365, 0.1537, 0.9733,  ..., 0.9495, 0.0359, 0.0709],
         [0.0365, 0.6703, 0.0089,  ..., 0.0168, 0.0359, 0.0693],
         [0.8904, 0.0685, 0.0089,  ..., 0.0168, 0.8923, 0.7905],
         [0.0365, 0.1075, 0.0089,  ..., 0.0168, 0.0359, 0.0693]],
        [[0.0795, 0.0174, 0.9545,  ..., 0.9539, 0.0119, 0.0543],
         [0.0771, 0.0174, 0.0152,  ..., 0.0154, 0.0119, 0.0543],
         [0.7270, 0.0174, 0.0152,  ..., 0.0154, 0.0119, 0.8371],
         [0.1164, 0.9479, 0.0152,  ..., 0.0154, 0.9644, 0.0543]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:41:31,324 [Process: 0] EPOCH 72:
2024-08-20 17:41:31,326 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9143, 0.0788, 0.1504,  ..., 0.9578, 0.9394, 0.1294],
         [0.0316, 0.0788, 0.1713,  ..., 0.0141, 0.0202, 0.1456],
         [0.0271, 0.0788, 0.1987,  ..., 0.0141, 0.0202, 0.1422],
         [0.0271, 0.7637, 0.4796,  ..., 0.0141, 0.0202, 0.5829]],
        [[0.8665, 0.0660, 0.0692,  ..., 0.1430, 0.0109, 0.0142],
         [0.0566, 0.0656, 0.0692,  ..., 0.1623, 0.0109, 0.0142],
         [0.0385, 0.0656, 0.0692,  ..., 0.1634, 0.9672, 0.9573],
         [0.0385, 0.8027, 0.7923,  ..., 0.5313, 0.0109, 0.0142]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1690, 0.0854, 0.9842,  ..., 0.9769, 0.0422, 0.0459],
         [0.1488, 0.3317, 0.0053,  ..., 0.0077, 0.0422, 0.0459],
         [0.4356, 0.0854, 0.0053,  ..., 0.0077, 0.8733, 0.8539],
         [0.2466, 0.4974, 0.0053,  ..., 0.0077, 0.0422, 0.0544]],
        [[0.0413, 0.0055, 0.9415,  ..., 0.9182, 0.0097, 0.0279],
         [0.0413, 0.0055, 0.0309,  ..., 0.0273, 0.0097, 0.0279],
         [0.8758, 0.0055, 0.0138,  ..., 0.0273, 0.0097, 0.9163],
         [0.0416, 0.9836, 0.0138,  ..., 0.0273, 0.9710, 0.0279]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:32,363 [Process: 0] Synchronize training processes
2024-08-20 17:41:32,364 [Process: 0] Evaluating...
2024-08-20 17:41:32,365 [Process: 0] EPOCH 73:
2024-08-20 17:41:32,367 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:33,400 [Process: 0] Synchronize training processes
2024-08-20 17:41:33,400 [Process: 0] Evaluating...
2024-08-20 17:41:33,402 [Process: 0] EPOCH 74:
2024-08-20 17:41:33,404 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9479, 0.0764, 0.1209,  ..., 0.9620, 0.9142, 0.0350],
         [0.0174, 0.0764, 0.1209,  ..., 0.0127, 0.0353, 0.0350],
         [0.0174, 0.0764, 0.1490,  ..., 0.0127, 0.0252, 0.0350],
         [0.0174, 0.7708, 0.6091,  ..., 0.0127, 0.0252, 0.8949]],
        [[0.6504, 0.1284, 0.0945,  ..., 0.1682, 0.0129, 0.0219],
         [0.1700, 0.1395, 0.0945,  ..., 0.1705, 0.0129, 0.0232],
         [0.0940, 0.1457, 0.0945,  ..., 0.2534, 0.9612, 0.9330],
         [0.0856, 0.5864, 0.7164,  ..., 0.4079, 0.0129, 0.0219]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0535, 0.1256, 0.9856,  ..., 0.8920, 0.0552, 0.0494],
         [0.0535, 0.3675, 0.0048,  ..., 0.0360, 0.0552, 0.0497],
         [0.8394, 0.1148, 0.0048,  ..., 0.0360, 0.8245, 0.8515],
         [0.0535, 0.3922, 0.0048,  ..., 0.0360, 0.0651, 0.0494]],
        [[0.0411, 0.0983, 0.9756,  ..., 0.8492, 0.0142, 0.0277],
         [0.0411, 0.0921, 0.0081,  ..., 0.0503, 0.0142, 0.0277],
         [0.8584, 0.0871, 0.0081,  ..., 0.0503, 0.0142, 0.9164],
         [0.0595, 0.7225, 0.0081,  ..., 0.0503, 0.9574, 0.0281]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9748, 0.0282, 0.1157,  ..., 0.9116, 0.9676, 0.0303],
         [0.0094, 0.0282, 0.1157,  ..., 0.0453, 0.0108, 0.0303],
         [0.0079, 0.0282, 0.1581,  ..., 0.0216, 0.0108, 0.0303],
         [0.0079, 0.9155, 0.6105,  ..., 0.0216, 0.0108, 0.9092]],
        [[0.9143, 0.0581, 0.0436,  ..., 0.1451, 0.0098, 0.0064],
         [0.0286, 0.0581, 0.0436,  ..., 0.1539, 0.0098, 0.0064],
         [0.0286, 0.0581, 0.0436,  ..., 0.1644, 0.9707, 0.9808],
         [0.0286, 0.8256, 0.8691,  ..., 0.5367, 0.0098, 0.0064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0319, 0.0555, 0.9522,  ..., 0.9930, 0.0413, 0.0274],
         [0.0319, 0.0555, 0.0159,  ..., 0.0023, 0.0413, 0.0274],
         [0.8998, 0.0555, 0.0159,  ..., 0.0023, 0.8472, 0.9177],
         [0.0364, 0.8334, 0.0159,  ..., 0.0023, 0.0702, 0.0274]],
        [[0.0370, 0.0467, 0.9634,  ..., 0.9266, 0.0127, 0.0277],
         [0.0370, 0.0387, 0.0122,  ..., 0.0223, 0.0127, 0.0277],
         [0.8891, 0.0360, 0.0122,  ..., 0.0223, 0.0127, 0.9088],
         [0.0370, 0.8786, 0.0122,  ..., 0.0287, 0.9619, 0.0358]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:34,422 [Process: 0] Synchronize training processes
2024-08-20 17:41:34,422 [Process: 0] Evaluating...
2024-08-20 17:41:34,424 [Process: 0] EPOCH 75:
2024-08-20 17:41:34,426 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:35,419 [Process: 0] Synchronize training processes
2024-08-20 17:41:35,419 [Process: 0] Evaluating...
2024-08-20 17:41:35,420 [Process: 0] EPOCH 76:
2024-08-20 17:41:35,422 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9315, 0.0600, 0.0581,  ..., 0.9670, 0.8733, 0.0930],
         [0.0228, 0.0600, 0.0581,  ..., 0.0110, 0.0422, 0.0930],
         [0.0228, 0.0600, 0.0581,  ..., 0.0110, 0.0422, 0.1162],
         [0.0228, 0.8199, 0.8257,  ..., 0.0110, 0.0422, 0.6979]],
        [[0.4618, 0.0418, 0.0489,  ..., 0.1510, 0.0154, 0.0152],
         [0.2788, 0.0418, 0.0489,  ..., 0.1510, 0.0154, 0.0152],
         [0.1297, 0.0418, 0.0489,  ..., 0.1818, 0.9537, 0.9543],
         [0.1296, 0.8747, 0.8532,  ..., 0.5162, 0.0154, 0.0152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0476, 0.0173, 0.9754,  ..., 0.9732, 0.0231, 0.0282],
         [0.0476, 0.0218, 0.0082,  ..., 0.0089, 0.0231, 0.0282],
         [0.8573, 0.0173, 0.0082,  ..., 0.0089, 0.9307, 0.9154],
         [0.0476, 0.9435, 0.0082,  ..., 0.0089, 0.0231, 0.0282]],
        [[0.0587, 0.0432, 0.9820,  ..., 0.9625, 0.0116, 0.0301],
         [0.0549, 0.0622, 0.0060,  ..., 0.0125, 0.0158, 0.0301],
         [0.8315, 0.0432, 0.0060,  ..., 0.0125, 0.0116, 0.8916],
         [0.0549, 0.8515, 0.0060,  ..., 0.0125, 0.9610, 0.0482]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9523, 0.0438, 0.0564,  ..., 0.9863, 0.9167, 0.0804],
         [0.0159, 0.0438, 0.0564,  ..., 0.0046, 0.0311, 0.0804],
         [0.0159, 0.0438, 0.0564,  ..., 0.0046, 0.0261, 0.0804],
         [0.0159, 0.8686, 0.8308,  ..., 0.0046, 0.0261, 0.7588]],
        [[0.6379, 0.0391, 0.1002,  ..., 0.1343, 0.0206, 0.0306],
         [0.1913, 0.0391, 0.1002,  ..., 0.1343, 0.0206, 0.0306],
         [0.0854, 0.0391, 0.1467,  ..., 0.1343, 0.9381, 0.9082],
         [0.0854, 0.8828, 0.6530,  ..., 0.5971, 0.0206, 0.0306]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0398, 0.0428, 0.9668,  ..., 0.9430, 0.0359, 0.0334],
         [0.0398, 0.0428, 0.0111,  ..., 0.0206, 0.0359, 0.0334],
         [0.8807, 0.0428, 0.0111,  ..., 0.0182, 0.8895, 0.8998],
         [0.0398, 0.8717, 0.0111,  ..., 0.0182, 0.0387, 0.0334]],
        [[0.0350, 0.0124, 0.9726,  ..., 0.9487, 0.0031, 0.0402],
         [0.0308, 0.0145, 0.0091,  ..., 0.0171, 0.0031, 0.0402],
         [0.9011, 0.0124, 0.0091,  ..., 0.0171, 0.0031, 0.8676],
         [0.0331, 0.9607, 0.0091,  ..., 0.0171, 0.9908, 0.0520]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:41:36,443 [Process: 0] Synchronize training processes
2024-08-20 17:41:36,444 [Process: 0] Evaluating...
2024-08-20 17:41:36,445 [Process: 0] EPOCH 77:
2024-08-20 17:41:36,447 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:37,475 [Process: 0] Synchronize training processes
2024-08-20 17:41:37,476 [Process: 0] Evaluating...
2024-08-20 17:41:37,478 [Process: 0] EPOCH 78:
2024-08-20 17:41:37,479 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9817, 0.0830, 0.1058,  ..., 0.9707, 0.9499, 0.0383],
         [0.0061, 0.0830, 0.1058,  ..., 0.0098, 0.0167, 0.0383],
         [0.0061, 0.0830, 0.1225,  ..., 0.0098, 0.0167, 0.0383],
         [0.0061, 0.7510, 0.6660,  ..., 0.0098, 0.0167, 0.8851]],
        [[0.7169, 0.0676, 0.0326,  ..., 0.1159, 0.0264, 0.0133],
         [0.1296, 0.0585, 0.0326,  ..., 0.1159, 0.0264, 0.0133],
         [0.0768, 0.0585, 0.0326,  ..., 0.1159, 0.9208, 0.9602],
         [0.0768, 0.8153, 0.9023,  ..., 0.6522, 0.0264, 0.0133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0396, 0.0751, 0.9542,  ..., 0.9819, 0.0360, 0.0582],
         [0.0396, 0.0758, 0.0153,  ..., 0.0060, 0.0360, 0.0582],
         [0.8811, 0.0751, 0.0153,  ..., 0.0060, 0.8920, 0.8254],
         [0.0396, 0.7741, 0.0153,  ..., 0.0060, 0.0360, 0.0582]],
        [[0.0988, 0.0120, 0.9643,  ..., 0.9097, 0.0031, 0.0464],
         [0.0966, 0.0120, 0.0119,  ..., 0.0343, 0.0031, 0.0464],
         [0.6656, 0.0120, 0.0119,  ..., 0.0280, 0.0031, 0.8375],
         [0.1389, 0.9640, 0.0119,  ..., 0.0280, 0.9908, 0.0697]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9351, 0.0757, 0.0465,  ..., 0.9808, 0.9202, 0.0841],
         [0.0261, 0.0757, 0.0465,  ..., 0.0064, 0.0285, 0.0849],
         [0.0194, 0.0796, 0.0465,  ..., 0.0064, 0.0257, 0.0841],
         [0.0194, 0.7690, 0.8606,  ..., 0.0064, 0.0257, 0.7470]],
        [[0.8194, 0.0530, 0.0766,  ..., 0.1357, 0.0235, 0.0097],
         [0.0733, 0.0530, 0.0766,  ..., 0.1357, 0.0235, 0.0097],
         [0.0537, 0.0550, 0.0766,  ..., 0.1518, 0.9296, 0.9708],
         [0.0537, 0.8391, 0.7703,  ..., 0.5768, 0.0235, 0.0097]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0394, 0.0806, 0.9632,  ..., 0.9669, 0.0321, 0.0364],
         [0.0394, 0.0806, 0.0123,  ..., 0.0110, 0.0321, 0.0364],
         [0.8818, 0.0806, 0.0123,  ..., 0.0110, 0.9038, 0.8907],
         [0.0394, 0.7582, 0.0123,  ..., 0.0110, 0.0321, 0.0364]],
        [[0.0332, 0.0119, 0.9186,  ..., 0.9613, 0.0046, 0.0173],
         [0.0332, 0.0119, 0.0339,  ..., 0.0129, 0.0046, 0.0173],
         [0.9004, 0.0119, 0.0238,  ..., 0.0129, 0.0046, 0.9480],
         [0.0332, 0.9642, 0.0238,  ..., 0.0129, 0.9863, 0.0173]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:38,507 [Process: 0] Synchronize training processes
2024-08-20 17:41:38,507 [Process: 0] Evaluating...
2024-08-20 17:41:38,509 [Process: 0] EPOCH 79:
2024-08-20 17:41:38,510 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:39,510 [Process: 0] Synchronize training processes
2024-08-20 17:41:39,510 [Process: 0] Evaluating...
2024-08-20 17:41:39,512 [Process: 0] EPOCH 80:
2024-08-20 17:41:39,513 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9743, 0.0864, 0.0275,  ..., 0.8794, 0.9138, 0.0296],
         [0.0086, 0.0864, 0.0275,  ..., 0.0378, 0.0492, 0.0296],
         [0.0086, 0.0864, 0.0275,  ..., 0.0451, 0.0185, 0.0296],
         [0.0086, 0.7409, 0.9176,  ..., 0.0378, 0.0185, 0.9113]],
        [[0.9035, 0.0772, 0.0345,  ..., 0.1189, 0.0070, 0.0187],
         [0.0498, 0.0772, 0.0345,  ..., 0.1189, 0.0070, 0.0187],
         [0.0233, 0.0772, 0.0345,  ..., 0.1827, 0.9789, 0.9440],
         [0.0233, 0.7685, 0.8965,  ..., 0.5796, 0.0070, 0.0187]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0651, 0.0746, 0.9064,  ..., 0.8593, 0.0215, 0.0929],
         [0.0651, 0.2305, 0.0312,  ..., 0.1067, 0.0215, 0.0879],
         [0.8046, 0.0746, 0.0312,  ..., 0.0170, 0.9356, 0.7206],
         [0.0651, 0.6203, 0.0312,  ..., 0.0170, 0.0215, 0.0986]],
        [[0.0601, 0.0057, 0.7605,  ..., 0.9206, 0.0025, 0.0517],
         [0.0519, 0.0057, 0.1019,  ..., 0.0416, 0.0025, 0.0517],
         [0.8362, 0.0057, 0.0655,  ..., 0.0189, 0.0025, 0.8323],
         [0.0519, 0.9828, 0.0721,  ..., 0.0189, 0.9924, 0.0644]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9409, 0.0778, 0.0342,  ..., 0.9449, 0.8494, 0.0386],
         [0.0197, 0.0778, 0.0342,  ..., 0.0184, 0.0761, 0.0386],
         [0.0197, 0.0778, 0.0342,  ..., 0.0184, 0.0373, 0.0386],
         [0.0197, 0.7665, 0.8974,  ..., 0.0184, 0.0373, 0.8842]],
        [[0.7418, 0.0341, 0.0749,  ..., 0.1729, 0.0066, 0.0303],
         [0.1484, 0.0341, 0.0749,  ..., 0.1698, 0.0066, 0.0303],
         [0.0549, 0.0341, 0.0749,  ..., 0.3351, 0.9802, 0.9090],
         [0.0549, 0.8978, 0.7752,  ..., 0.3222, 0.0066, 0.0303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1338, 0.0190, 0.9607,  ..., 0.9519, 0.0356, 0.0479],
         [0.1287, 0.0190, 0.0172,  ..., 0.0270, 0.0356, 0.0479],
         [0.5414, 0.0190, 0.0110,  ..., 0.0106, 0.8932, 0.8564],
         [0.1961, 0.9429, 0.0110,  ..., 0.0106, 0.0356, 0.0479]],
        [[0.0617, 0.0021, 0.9816,  ..., 0.9804, 0.0090, 0.0551],
         [0.0606, 0.0021, 0.0061,  ..., 0.0070, 0.0090, 0.0551],
         [0.8171, 0.0021, 0.0061,  ..., 0.0063, 0.0090, 0.8312],
         [0.0606, 0.9938, 0.0061,  ..., 0.0063, 0.9729, 0.0585]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:40,525 [Process: 0] Synchronize training processes
2024-08-20 17:41:40,525 [Process: 0] Evaluating...
2024-08-20 17:41:40,527 [Process: 0] EPOCH 81:
2024-08-20 17:41:40,529 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:41,530 [Process: 0] Synchronize training processes
2024-08-20 17:41:41,530 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9780, 0.0567, 0.0401,  ..., 0.9792, 0.9488, 0.0646],
         [0.0073, 0.0567, 0.0401,  ..., 0.0069, 0.0202, 0.0646],
         [0.0073, 0.0567, 0.0401,  ..., 0.0069, 0.0155, 0.0646],
         [0.0073, 0.8300, 0.8797,  ..., 0.0069, 0.0155, 0.8061]],
        [[0.7136, 0.0358, 0.0534,  ..., 0.1415, 0.0280, 0.0188],
         [0.1178, 0.0358, 0.0534,  ..., 0.1275, 0.0280, 0.0188],
         [0.0843, 0.0358, 0.0534,  ..., 0.1627, 0.9161, 0.9435],
         [0.0843, 0.8927, 0.8399,  ..., 0.5683, 0.0280, 0.0188]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1555, 0.1676, 0.0462,  ..., 0.9721, 0.0436, 0.0323],
         [0.1284, 0.2580, 0.0498,  ..., 0.0093, 0.0425, 0.0323],
         [0.1665, 0.1116, 0.0462,  ..., 0.0093, 0.8713, 0.9030],
         [0.5497, 0.4628, 0.8578,  ..., 0.0093, 0.0425, 0.0323]],
        [[0.0929, 0.0042, 0.9817,  ..., 0.9880, 0.0011, 0.0223],
         [0.0794, 0.0042, 0.0061,  ..., 0.0029, 0.0017, 0.0223],
         [0.7457, 0.0042, 0.0061,  ..., 0.0029, 0.0011, 0.9330],
         [0.0820, 0.9873, 0.0061,  ..., 0.0062, 0.9960, 0.0223]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:41:43,439 [Process: 0] EPOCH 82:
2024-08-20 17:41:43,441 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9809, 0.0832, 0.0862,  ..., 0.9528, 0.9143, 0.0947],
         [0.0064, 0.1163, 0.0862,  ..., 0.0157, 0.0297, 0.1085],
         [0.0064, 0.0874, 0.0892,  ..., 0.0157, 0.0280, 0.0947],
         [0.0064, 0.7131, 0.7385,  ..., 0.0157, 0.0280, 0.7020]],
        [[0.6889, 0.0544, 0.0498,  ..., 0.1627, 0.0061, 0.0036],
         [0.1375, 0.0725, 0.0727,  ..., 0.1493, 0.0061, 0.0036],
         [0.0874, 0.0544, 0.0498,  ..., 0.3412, 0.9818, 0.9893],
         [0.0862, 0.8187, 0.8276,  ..., 0.3468, 0.0061, 0.0036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0956e-01, 6.5966e-02, 9.9748e-01,  ..., 9.0198e-01,
          2.4066e-02, 3.4752e-02],
         [1.0956e-01, 3.1059e-01, 8.3918e-04,  ..., 3.8271e-02,
          2.4066e-02, 3.4752e-02],
         [1.0956e-01, 6.5966e-02, 8.3918e-04,  ..., 2.9877e-02,
          9.2780e-01, 8.9574e-01],
         [6.7132e-01, 5.5748e-01, 8.3918e-04,  ..., 2.9877e-02,
          2.4066e-02, 3.4752e-02]],
        [[7.6924e-02, 1.4154e-03, 9.8454e-01,  ..., 8.9992e-01,
          1.8952e-03, 3.6834e-02],
         [5.7434e-02, 1.4154e-03, 5.1532e-03,  ..., 4.0757e-02,
          1.8952e-03, 3.5334e-02],
         [8.0821e-01, 1.4154e-03, 5.1532e-03,  ..., 2.9660e-02,
          1.8952e-03, 8.9250e-01],
         [5.7434e-02, 9.9575e-01, 5.1532e-03,  ..., 2.9660e-02,
          9.9431e-01, 3.5334e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:44,440 [Process: 0] Synchronize training processes
2024-08-20 17:41:44,440 [Process: 0] Evaluating...
2024-08-20 17:41:44,442 [Process: 0] EPOCH 83:
2024-08-20 17:41:44,443 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:45,462 [Process: 0] Synchronize training processes
2024-08-20 17:41:45,462 [Process: 0] Evaluating...
2024-08-20 17:41:45,464 [Process: 0] EPOCH 84:
2024-08-20 17:41:45,466 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8968, 0.0131, 0.0685,  ..., 0.9965, 0.6365, 0.0665],
         [0.0479, 0.0146, 0.0721,  ..., 0.0012, 0.2320, 0.0665],
         [0.0276, 0.0131, 0.0685,  ..., 0.0012, 0.0672, 0.0665],
         [0.0276, 0.9592, 0.7908,  ..., 0.0012, 0.0643, 0.8004]],
        [[0.7841, 0.0697, 0.0169,  ..., 0.1518, 0.0252, 0.1251],
         [0.1137, 0.0697, 0.0173,  ..., 0.1587, 0.0252, 0.1210],
         [0.0511, 0.0714, 0.0169,  ..., 0.1942, 0.9244, 0.6299],
         [0.0511, 0.7891, 0.9488,  ..., 0.4953, 0.0252, 0.1240]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7650e-01, 5.9095e-02, 9.9891e-01,  ..., 9.2394e-01,
          4.1777e-02, 3.8168e-02],
         [1.5123e-01, 1.7898e-01, 3.6347e-04,  ..., 4.8323e-02,
          4.1553e-02, 3.8168e-02],
         [2.9095e-01, 5.9095e-02, 3.6347e-04,  ..., 1.3868e-02,
          8.7247e-01, 8.8550e-01],
         [3.8131e-01, 7.0283e-01, 3.6347e-04,  ..., 1.3868e-02,
          4.4200e-02, 3.8168e-02]],
        [[4.6515e-02, 7.6696e-04, 9.7573e-01,  ..., 9.5494e-01,
          1.8429e-03, 3.4648e-02],
         [4.6515e-02, 7.6696e-04, 8.0884e-03,  ..., 2.0093e-02,
          1.8429e-03, 3.4648e-02],
         [8.4850e-01, 7.6696e-04, 8.0884e-03,  ..., 1.2482e-02,
          1.8429e-03, 8.9605e-01],
         [5.8473e-02, 9.9770e-01, 8.0884e-03,  ..., 1.2482e-02,
          9.9447e-01, 3.4648e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9433, 0.0303, 0.0498,  ..., 0.9802, 0.9906, 0.1086],
         [0.0189, 0.0303, 0.0709,  ..., 0.0066, 0.0031, 0.0982],
         [0.0189, 0.0303, 0.0498,  ..., 0.0066, 0.0031, 0.0982],
         [0.0189, 0.9092, 0.8296,  ..., 0.0066, 0.0031, 0.6950]],
        [[0.9699, 0.0566, 0.0536,  ..., 0.1556, 0.0228, 0.1305],
         [0.0100, 0.0667, 0.0536,  ..., 0.2230, 0.0228, 0.1374],
         [0.0100, 0.0566, 0.0536,  ..., 0.2276, 0.9315, 0.1394],
         [0.0100, 0.8201, 0.8392,  ..., 0.3938, 0.0228, 0.5928]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7177e-01, 1.1653e-01, 9.9903e-01,  ..., 9.4765e-01,
          2.8581e-02, 5.4013e-02],
         [1.5377e-01, 1.5692e-01, 3.2331e-04,  ..., 1.6718e-02,
          2.8581e-02, 4.9598e-02],
         [4.1020e-01, 1.1653e-01, 3.2331e-04,  ..., 1.6718e-02,
          9.1426e-01, 8.3917e-01],
         [2.6425e-01, 6.1002e-01, 3.2331e-04,  ..., 1.8912e-02,
          2.8581e-02, 5.7216e-02]],
        [[5.8899e-02, 4.0066e-03, 9.8040e-01,  ..., 9.8554e-01,
          4.7688e-03, 3.6953e-02],
         [5.8899e-02, 1.1402e-02, 6.5318e-03,  ..., 4.8202e-03,
          4.7688e-03, 3.6953e-02],
         [8.2330e-01, 4.0066e-03, 6.5318e-03,  ..., 4.8202e-03,
          4.7688e-03, 8.8914e-01],
         [5.8899e-02, 9.8058e-01, 6.5318e-03,  ..., 4.8202e-03,
          9.8569e-01, 3.6953e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:46,476 [Process: 0] Synchronize training processes
2024-08-20 17:41:46,476 [Process: 0] Evaluating...
2024-08-20 17:41:46,478 [Process: 0] EPOCH 85:
2024-08-20 17:41:46,480 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:47,511 [Process: 0] Synchronize training processes
2024-08-20 17:41:47,511 [Process: 0] Evaluating...
2024-08-20 17:41:47,513 [Process: 0] EPOCH 86:
2024-08-20 17:41:47,515 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9286, 0.0317, 0.0890,  ..., 0.1469, 0.9466, 0.0718],
         [0.0238, 0.0317, 0.1022,  ..., 0.1773, 0.0178, 0.0718],
         [0.0238, 0.0317, 0.0890,  ..., 0.1199, 0.0178, 0.0718],
         [0.0238, 0.9048, 0.7199,  ..., 0.5559, 0.0178, 0.7847]],
        [[0.9459, 0.0296, 0.0429,  ..., 0.0805, 0.0098, 0.0053],
         [0.0180, 0.0296, 0.0429,  ..., 0.0805, 0.0098, 0.0053],
         [0.0180, 0.0296, 0.0429,  ..., 0.0805, 0.9705, 0.9840],
         [0.0180, 0.9113, 0.8712,  ..., 0.7586, 0.0098, 0.0053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0451, 0.1260, 0.9548,  ..., 0.8414, 0.0183, 0.0101],
         [0.0451, 0.1260, 0.0151,  ..., 0.0907, 0.0183, 0.0101],
         [0.8647, 0.1260, 0.0151,  ..., 0.0339, 0.9452, 0.9698],
         [0.0451, 0.6221, 0.0151,  ..., 0.0339, 0.0183, 0.0101]],
        [[0.0165, 0.0084, 0.9670,  ..., 0.9175, 0.0027, 0.0217],
         [0.0165, 0.0084, 0.0110,  ..., 0.0275, 0.0027, 0.0217],
         [0.9504, 0.0084, 0.0110,  ..., 0.0275, 0.0027, 0.9348],
         [0.0165, 0.9748, 0.0110,  ..., 0.0275, 0.9918, 0.0217]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8007, 0.0376, 0.0243,  ..., 0.9926, 0.9733, 0.0265],
         [0.1068, 0.0376, 0.0243,  ..., 0.0025, 0.0089, 0.0265],
         [0.0463, 0.0376, 0.0243,  ..., 0.0025, 0.0089, 0.0265],
         [0.0463, 0.8871, 0.9271,  ..., 0.0025, 0.0089, 0.9205]],
        [[0.9629, 0.0414, 0.0351,  ..., 0.1706, 0.0055, 0.0067],
         [0.0124, 0.0414, 0.0351,  ..., 0.1706, 0.0055, 0.0067],
         [0.0124, 0.0414, 0.0351,  ..., 0.4662, 0.9835, 0.9800],
         [0.0124, 0.8758, 0.8948,  ..., 0.1926, 0.0055, 0.0067]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0713, 0.0359, 0.9795,  ..., 0.9852, 0.0388, 0.0360],
         [0.0713, 0.0359, 0.0068,  ..., 0.0049, 0.0388, 0.0360],
         [0.7783, 0.0359, 0.0068,  ..., 0.0049, 0.8836, 0.8919],
         [0.0790, 0.8922, 0.0068,  ..., 0.0049, 0.0388, 0.0360]],
        [[0.0529, 0.0021, 0.9826,  ..., 0.9786, 0.0100, 0.0338],
         [0.0529, 0.0021, 0.0058,  ..., 0.0071, 0.0100, 0.0338],
         [0.8412, 0.0021, 0.0058,  ..., 0.0071, 0.0100, 0.8986],
         [0.0529, 0.9937, 0.0058,  ..., 0.0071, 0.9701, 0.0338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:48,540 [Process: 0] Synchronize training processes
2024-08-20 17:41:48,540 [Process: 0] Evaluating...
2024-08-20 17:41:48,542 [Process: 0] EPOCH 87:
2024-08-20 17:41:48,543 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:49,543 [Process: 0] Synchronize training processes
2024-08-20 17:41:49,543 [Process: 0] Evaluating...
2024-08-20 17:41:49,545 [Process: 0] EPOCH 88:
2024-08-20 17:41:49,547 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9676, 0.0417, 0.0464,  ..., 0.9731, 0.9785, 0.0632],
         [0.0111, 0.0417, 0.0464,  ..., 0.0090, 0.0068, 0.0487],
         [0.0106, 0.0417, 0.0464,  ..., 0.0090, 0.0068, 0.0487],
         [0.0106, 0.8750, 0.8608,  ..., 0.0090, 0.0079, 0.8393]],
        [[0.9201, 0.0465, 0.0192,  ..., 0.1265, 0.0452, 0.0011],
         [0.0308, 0.0491, 0.0192,  ..., 0.1265, 0.0452, 0.0011],
         [0.0246, 0.0465, 0.0192,  ..., 0.1402, 0.8644, 0.9966],
         [0.0246, 0.8579, 0.9424,  ..., 0.6067, 0.0452, 0.0011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0223e-02, 5.4356e-02, 9.8134e-01,  ..., 9.7275e-01,
          4.5080e-02, 2.9172e-02],
         [3.0223e-02, 8.3722e-02, 8.2884e-03,  ..., 9.0846e-03,
          4.5080e-02, 2.9172e-02],
         [9.0933e-01, 5.4356e-02, 5.1854e-03,  ..., 9.0846e-03,
          8.6476e-01, 9.1248e-01],
         [3.0223e-02, 8.0757e-01, 5.1854e-03,  ..., 9.0846e-03,
          4.5080e-02, 2.9172e-02]],
        [[4.8904e-02, 7.6038e-04, 9.8605e-01,  ..., 6.1644e-03,
          2.6854e-03, 4.7985e-02],
         [3.8398e-02, 7.6038e-04, 4.6502e-03,  ..., 6.1644e-03,
          2.6854e-03, 4.7985e-02],
         [8.7430e-01, 7.6038e-04, 4.6502e-03,  ..., 6.1644e-03,
          2.6854e-03, 8.5604e-01],
         [3.8398e-02, 9.9772e-01, 4.6502e-03,  ..., 9.8151e-01,
          9.9194e-01, 4.7985e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9636, 0.0364, 0.0521,  ..., 0.9879, 0.9781, 0.0699],
         [0.0121, 0.0364, 0.0521,  ..., 0.0040, 0.0073, 0.0699],
         [0.0121, 0.0364, 0.0521,  ..., 0.0040, 0.0073, 0.0699],
         [0.0121, 0.8907, 0.8438,  ..., 0.0040, 0.0073, 0.7904]],
        [[0.9298, 0.0392, 0.0352,  ..., 0.0497, 0.0072, 0.0065],
         [0.0280, 0.0392, 0.0352,  ..., 0.0497, 0.0072, 0.0065],
         [0.0211, 0.0399, 0.0352,  ..., 0.0497, 0.9785, 0.9804],
         [0.0211, 0.8816, 0.8944,  ..., 0.8509, 0.0072, 0.0065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0297, 0.1365, 0.9813,  ..., 0.8959, 0.0361, 0.0193],
         [0.0297, 0.1194, 0.0062,  ..., 0.0538, 0.0361, 0.0193],
         [0.9109, 0.1064, 0.0062,  ..., 0.0251, 0.8917, 0.9422],
         [0.0297, 0.6378, 0.0062,  ..., 0.0251, 0.0361, 0.0193]],
        [[0.0615, 0.0516, 0.9807,  ..., 0.9207, 0.0011, 0.0169],
         [0.0458, 0.0516, 0.0057,  ..., 0.0447, 0.0011, 0.0169],
         [0.8353, 0.0516, 0.0057,  ..., 0.0173, 0.0011, 0.9493],
         [0.0574, 0.8451, 0.0080,  ..., 0.0173, 0.9966, 0.0169]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:50,530 [Process: 0] Synchronize training processes
2024-08-20 17:41:50,530 [Process: 0] Evaluating...
2024-08-20 17:41:50,532 [Process: 0] EPOCH 89:
2024-08-20 17:41:50,534 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:51,513 [Process: 0] Synchronize training processes
2024-08-20 17:41:51,514 [Process: 0] Evaluating...
2024-08-20 17:41:51,515 [Process: 0] EPOCH 90:
2024-08-20 17:41:51,517 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9849, 0.0147, 0.0460,  ..., 0.9818, 0.9924, 0.0478],
         [0.0050, 0.0147, 0.0460,  ..., 0.0061, 0.0025, 0.0557],
         [0.0050, 0.0147, 0.0460,  ..., 0.0061, 0.0025, 0.0478],
         [0.0050, 0.9560, 0.8621,  ..., 0.0061, 0.0025, 0.8486]],
        [[0.5560, 0.0556, 0.0579,  ..., 0.0640, 0.0088, 0.0082],
         [0.2788, 0.0671, 0.0606,  ..., 0.0640, 0.0088, 0.0082],
         [0.0826, 0.0556, 0.0579,  ..., 0.0640, 0.9736, 0.9755],
         [0.0826, 0.8216, 0.8235,  ..., 0.8079, 0.0088, 0.0082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0347, 0.0703, 0.9829,  ..., 0.9089, 0.0344, 0.0401],
         [0.0347, 0.0672, 0.0057,  ..., 0.0298, 0.0344, 0.0401],
         [0.8958, 0.0672, 0.0057,  ..., 0.0298, 0.8969, 0.8791],
         [0.0347, 0.7952, 0.0057,  ..., 0.0316, 0.0344, 0.0408]],
        [[0.0911, 0.0233, 0.9841,  ..., 0.9834, 0.0036, 0.0354],
         [0.0794, 0.0233, 0.0053,  ..., 0.0055, 0.0036, 0.0354],
         [0.6919, 0.0233, 0.0053,  ..., 0.0055, 0.0036, 0.8900],
         [0.1376, 0.9302, 0.0053,  ..., 0.0055, 0.9891, 0.0392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9897, 0.0805, 0.0463,  ..., 0.9929, 0.9708, 0.0567],
         [0.0034, 0.1328, 0.0463,  ..., 0.0024, 0.0143, 0.0561],
         [0.0034, 0.0805, 0.0463,  ..., 0.0024, 0.0074, 0.0561],
         [0.0034, 0.7061, 0.8611,  ..., 0.0024, 0.0074, 0.8312]],
        [[0.2595, 0.0927, 0.1120,  ..., 0.1730, 0.0142, 0.0219],
         [0.4939, 0.0822, 0.1262,  ..., 0.1730, 0.0142, 0.0219],
         [0.1233, 0.0822, 0.1322,  ..., 0.2719, 0.9575, 0.9343],
         [0.1233, 0.7430, 0.6296,  ..., 0.3822, 0.0142, 0.0219]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0716, 0.1189, 0.9931,  ..., 0.9781, 0.0270, 0.0456],
         [0.0716, 0.4891, 0.0023,  ..., 0.0073, 0.0270, 0.0456],
         [0.7852, 0.1189, 0.0023,  ..., 0.0073, 0.9190, 0.8630],
         [0.0716, 0.2731, 0.0023,  ..., 0.0073, 0.0270, 0.0458]],
        [[0.0868, 0.0011, 0.9859,  ..., 0.9815, 0.0017, 0.0179],
         [0.0868, 0.0011, 0.0047,  ..., 0.0062, 0.0017, 0.0179],
         [0.6970, 0.0011, 0.0047,  ..., 0.0062, 0.0017, 0.9462],
         [0.1294, 0.9966, 0.0047,  ..., 0.0062, 0.9949, 0.0179]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:52,551 [Process: 0] Synchronize training processes
2024-08-20 17:41:52,551 [Process: 0] Evaluating...
2024-08-20 17:41:52,553 [Process: 0] EPOCH 91:
2024-08-20 17:41:52,555 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:53,631 [Process: 0] Synchronize training processes
2024-08-20 17:41:53,631 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9935, 0.0634, 0.0401,  ..., 0.9942, 0.9496, 0.0407],
         [0.0022, 0.0634, 0.0504,  ..., 0.0019, 0.0168, 0.0407],
         [0.0022, 0.0634, 0.0401,  ..., 0.0019, 0.0168, 0.0407],
         [0.0022, 0.8097, 0.8693,  ..., 0.0019, 0.0168, 0.8779]],
        [[0.3582, 0.0451, 0.0626,  ..., 0.1568, 0.0088, 0.0069],
         [0.2570, 0.0451, 0.0626,  ..., 0.1540, 0.0105, 0.0069],
         [0.2053, 0.0451, 0.0626,  ..., 0.4609, 0.9718, 0.9792],
         [0.1796, 0.8648, 0.8122,  ..., 0.2283, 0.0088, 0.0069]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0522, 0.2603, 0.9955,  ..., 0.9701, 0.0291, 0.0208],
         [0.0522, 0.5815, 0.0015,  ..., 0.0097, 0.0291, 0.0208],
         [0.8434, 0.0791, 0.0015,  ..., 0.0097, 0.9126, 0.9375],
         [0.0522, 0.0791, 0.0015,  ..., 0.0106, 0.0291, 0.0208]],
        [[0.0717, 0.0240, 0.9705,  ..., 0.9817, 0.0020, 0.0238],
         [0.0559, 0.0242, 0.0098,  ..., 0.0061, 0.0020, 0.0238],
         [0.8051, 0.0240, 0.0098,  ..., 0.0061, 0.0020, 0.9285],
         [0.0672, 0.9278, 0.0098,  ..., 0.0061, 0.9941, 0.0238]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:41:55,521 [Process: 0] EPOCH 92:
2024-08-20 17:41:55,522 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9402, 0.0451, 0.0493,  ..., 0.9306, 0.9357, 0.1097],
         [0.0199, 0.0451, 0.0473,  ..., 0.0230, 0.0214, 0.1174],
         [0.0199, 0.0451, 0.0473,  ..., 0.0235, 0.0214, 0.1097],
         [0.0199, 0.8648, 0.8560,  ..., 0.0230, 0.0214, 0.6633]],
        [[0.7424, 0.0341, 0.1176,  ..., 0.1395, 0.0100, 0.0136],
         [0.1203, 0.0341, 0.1720,  ..., 0.1313, 0.0116, 0.0136],
         [0.0710, 0.0341, 0.1348,  ..., 0.1611, 0.9685, 0.9591],
         [0.0663, 0.8977, 0.5755,  ..., 0.5682, 0.0100, 0.0136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9349e-02, 2.5591e-01, 9.8789e-01,  ..., 9.6896e-01,
          2.7574e-02, 3.5624e-02],
         [1.9349e-02, 5.1686e-01, 4.0369e-03,  ..., 1.0347e-02,
          2.7574e-02, 3.5624e-02],
         [9.4195e-01, 1.1362e-01, 4.0369e-03,  ..., 1.0347e-02,
          9.1728e-01, 8.9063e-01],
         [1.9349e-02, 1.1362e-01, 4.0369e-03,  ..., 1.0347e-02,
          2.7574e-02, 3.8121e-02]],
        [[2.9529e-02, 2.1779e-02, 9.7888e-01,  ..., 8.4649e-01,
          5.1317e-04, 3.2181e-02],
         [2.8722e-02, 2.1779e-02, 6.9637e-03,  ..., 4.5823e-02,
          5.1317e-04, 3.2181e-02],
         [9.1122e-01, 2.1779e-02, 6.9637e-03,  ..., 4.1503e-02,
          5.1317e-04, 9.0075e-01],
         [3.0527e-02, 9.3466e-01, 7.1971e-03,  ..., 6.6187e-02,
          9.9846e-01, 3.4884e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:56,560 [Process: 0] Synchronize training processes
2024-08-20 17:41:56,561 [Process: 0] Evaluating...
2024-08-20 17:41:56,562 [Process: 0] EPOCH 93:
2024-08-20 17:41:56,564 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:57,583 [Process: 0] Synchronize training processes
2024-08-20 17:41:57,584 [Process: 0] Evaluating...
2024-08-20 17:41:57,585 [Process: 0] EPOCH 94:
2024-08-20 17:41:57,587 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9727, 0.0477, 0.0679,  ..., 0.9842, 0.9596, 0.0569],
         [0.0108, 0.0477, 0.0699,  ..., 0.0053, 0.0135, 0.0569],
         [0.0083, 0.0508, 0.0679,  ..., 0.0053, 0.0135, 0.0569],
         [0.0083, 0.8539, 0.7944,  ..., 0.0053, 0.0135, 0.8294]],
        [[0.8848, 0.0376, 0.0386,  ..., 0.1059, 0.0059, 0.0090],
         [0.0382, 0.0376, 0.0386,  ..., 0.1008, 0.0072, 0.0090],
         [0.0389, 0.0376, 0.0386,  ..., 0.1008, 0.9811, 0.9729],
         [0.0382, 0.8873, 0.8841,  ..., 0.6926, 0.0059, 0.0090]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1932, 0.2516, 0.9728,  ..., 0.9772, 0.0284, 0.0342],
         [0.1614, 0.4954, 0.0091,  ..., 0.0059, 0.0284, 0.0342],
         [0.1614, 0.1092, 0.0091,  ..., 0.0059, 0.9149, 0.8974],
         [0.4840, 0.1438, 0.0091,  ..., 0.0111, 0.0284, 0.0342]],
        [[0.0078, 0.0032, 0.9490,  ..., 0.8952, 0.0052, 0.0449],
         [0.0078, 0.0032, 0.0170,  ..., 0.0338, 0.0075, 0.0449],
         [0.9765, 0.0032, 0.0170,  ..., 0.0338, 0.0052, 0.8650],
         [0.0078, 0.9905, 0.0170,  ..., 0.0372, 0.9821, 0.0452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8241, 0.0558, 0.0685,  ..., 0.9706, 0.9364, 0.0684],
         [0.0675, 0.0695, 0.0560,  ..., 0.0098, 0.0327, 0.0684],
         [0.0542, 0.0558, 0.0650,  ..., 0.0098, 0.0154, 0.0684],
         [0.0542, 0.8188, 0.8106,  ..., 0.0098, 0.0154, 0.7948]],
        [[0.9908, 0.0686, 0.1062,  ..., 0.1524, 0.0043, 0.0094],
         [0.0031, 0.0648, 0.1602,  ..., 0.1393, 0.0054, 0.0094],
         [0.0031, 0.0648, 0.1424,  ..., 0.1814, 0.9859, 0.9718],
         [0.0031, 0.8019, 0.5912,  ..., 0.5269, 0.0043, 0.0094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9680e-01, 2.2227e-01, 9.9765e-01,  ..., 9.9522e-01,
          3.5199e-02, 2.1593e-02],
         [1.2276e-01, 5.3644e-01, 7.8245e-04,  ..., 1.5943e-03,
          3.5199e-02, 2.1593e-02],
         [1.2276e-01, 1.1100e-01, 7.8245e-04,  ..., 1.5943e-03,
          8.9318e-01, 9.3522e-01],
         [5.5767e-01, 1.3029e-01, 7.8245e-04,  ..., 1.5943e-03,
          3.6422e-02, 2.1593e-02]],
        [[9.5224e-03, 2.0102e-02, 8.9840e-01,  ..., 8.0227e-01,
          2.1286e-03, 1.2905e-02],
         [8.8613e-03, 2.0102e-02, 5.4274e-02,  ..., 9.9747e-02,
          2.1286e-03, 1.2905e-02],
         [9.7276e-01, 2.0102e-02, 2.3665e-02,  ..., 4.8993e-02,
          2.1286e-03, 9.6129e-01],
         [8.8613e-03, 9.3969e-01, 2.3665e-02,  ..., 4.8993e-02,
          9.9361e-01, 1.2905e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:58,579 [Process: 0] Synchronize training processes
2024-08-20 17:41:58,579 [Process: 0] Evaluating...
2024-08-20 17:41:58,581 [Process: 0] EPOCH 95:
2024-08-20 17:41:58,582 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:41:59,578 [Process: 0] Synchronize training processes
2024-08-20 17:41:59,578 [Process: 0] Evaluating...
2024-08-20 17:41:59,580 [Process: 0] EPOCH 96:
2024-08-20 17:41:59,582 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9037, 0.0206, 0.0516,  ..., 0.9272, 0.9152, 0.0090],
         [0.0374, 0.0206, 0.0516,  ..., 0.0243, 0.0392, 0.0090],
         [0.0294, 0.0206, 0.0516,  ..., 0.0243, 0.0228, 0.0090],
         [0.0294, 0.9381, 0.8452,  ..., 0.0243, 0.0228, 0.9730]],
        [[0.9927, 0.0375, 0.0558,  ..., 0.0920, 0.0250, 0.0039],
         [0.0024, 0.0375, 0.0558,  ..., 0.1202, 0.0250, 0.0039],
         [0.0024, 0.0375, 0.0558,  ..., 0.0920, 0.9251, 0.9884],
         [0.0024, 0.8874, 0.8327,  ..., 0.6957, 0.0250, 0.0039]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.3283e-02, 1.1978e-01, 9.9599e-01,  ..., 9.9783e-01,
          3.6476e-02, 2.4108e-02],
         [8.3283e-02, 6.8954e-01, 1.3365e-03,  ..., 7.0848e-04,
          3.6476e-02, 2.4108e-02],
         [7.3782e-01, 6.7480e-02, 1.3365e-03,  ..., 7.0848e-04,
          8.8969e-01, 9.2767e-01],
         [9.5613e-02, 1.2320e-01, 1.3365e-03,  ..., 7.5528e-04,
          3.7356e-02, 2.4108e-02]],
        [[5.6099e-02, 3.5830e-03, 9.6204e-01,  ..., 7.9949e-01,
          4.9926e-03, 2.3185e-02],
         [5.4535e-02, 3.5830e-03, 1.2654e-02,  ..., 8.6541e-02,
          4.9926e-03, 2.3185e-02],
         [8.3483e-01, 3.5830e-03, 1.2654e-02,  ..., 5.6985e-02,
          4.9926e-03, 9.3044e-01],
         [5.4535e-02, 9.8925e-01, 1.2654e-02,  ..., 5.6985e-02,
          9.8502e-01, 2.3185e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9776, 0.0275, 0.0445,  ..., 0.9745, 0.9614, 0.0734],
         [0.0077, 0.0275, 0.0445,  ..., 0.0085, 0.0135, 0.0734],
         [0.0073, 0.0275, 0.0445,  ..., 0.0085, 0.0126, 0.0734],
         [0.0073, 0.9176, 0.8665,  ..., 0.0085, 0.0126, 0.7798]],
        [[0.9716, 0.0520, 0.0324,  ..., 0.0488, 0.0031, 0.0226],
         [0.0098, 0.0520, 0.0324,  ..., 0.0488, 0.0031, 0.0226],
         [0.0093, 0.0520, 0.0324,  ..., 0.8536, 0.9907, 0.0226],
         [0.0093, 0.8441, 0.9027,  ..., 0.0488, 0.0031, 0.9321]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0903, 0.1807, 0.9915,  ..., 0.9956, 0.0197, 0.0273],
         [0.0773, 0.3925, 0.0028,  ..., 0.0015, 0.0197, 0.0273],
         [0.7550, 0.1224, 0.0028,  ..., 0.0015, 0.9410, 0.9180],
         [0.0773, 0.3044, 0.0028,  ..., 0.0015, 0.0197, 0.0273]],
        [[0.0858, 0.0336, 0.9863,  ..., 0.0860, 0.0660, 0.0114],
         [0.0609, 0.0336, 0.0042,  ..., 0.4678, 0.0660, 0.0114],
         [0.7923, 0.0336, 0.0042,  ..., 0.0860, 0.1903, 0.9659],
         [0.0609, 0.8991, 0.0052,  ..., 0.3601, 0.6777, 0.0114]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:00,601 [Process: 0] Synchronize training processes
2024-08-20 17:42:00,602 [Process: 0] Evaluating...
2024-08-20 17:42:00,603 [Process: 0] EPOCH 97:
2024-08-20 17:42:00,605 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:01,632 [Process: 0] Synchronize training processes
2024-08-20 17:42:01,632 [Process: 0] Evaluating...
2024-08-20 17:42:01,634 [Process: 0] EPOCH 98:
2024-08-20 17:42:01,635 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9841, 0.0766, 0.0446,  ..., 0.9719, 0.9805, 0.0412],
         [0.0053, 0.0733, 0.0446,  ..., 0.0094, 0.0065, 0.0412],
         [0.0053, 0.1039, 0.0446,  ..., 0.0094, 0.0065, 0.0412],
         [0.0053, 0.7462, 0.8661,  ..., 0.0094, 0.0065, 0.8765]],
        [[0.8957, 0.0380, 0.0312,  ..., 0.1244, 0.0038, 0.1123],
         [0.0467, 0.0354, 0.0312,  ..., 0.1326, 0.0038, 0.1123],
         [0.0288, 0.0354, 0.0312,  ..., 0.1393, 0.9886, 0.1123],
         [0.0288, 0.8911, 0.9064,  ..., 0.6037, 0.0038, 0.6631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0376, 0.0634, 0.9876,  ..., 0.9653, 0.0236, 0.0268],
         [0.0376, 0.6337, 0.0041,  ..., 0.0120, 0.0236, 0.0263],
         [0.8873, 0.0634, 0.0041,  ..., 0.0113, 0.9291, 0.9206],
         [0.0376, 0.2395, 0.0041,  ..., 0.0113, 0.0236, 0.0263]],
        [[0.0245, 0.0143, 0.8929,  ..., 0.8819, 0.0091, 0.0279],
         [0.0245, 0.0143, 0.0494,  ..., 0.0713, 0.0091, 0.0262],
         [0.9264, 0.0143, 0.0289,  ..., 0.0234, 0.0091, 0.9197],
         [0.0245, 0.9570, 0.0289,  ..., 0.0234, 0.9727, 0.0262]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9711, 0.0135, 0.0571,  ..., 0.9825, 0.9674, 0.0254],
         [0.0096, 0.0135, 0.0571,  ..., 0.0058, 0.0109, 0.0254],
         [0.0096, 0.0135, 0.0571,  ..., 0.0058, 0.0109, 0.0254],
         [0.0096, 0.9596, 0.8287,  ..., 0.0058, 0.0109, 0.9237]],
        [[0.9686, 0.0338, 0.0445,  ..., 0.0155, 0.0018, 0.0113],
         [0.0105, 0.0338, 0.0445,  ..., 0.0155, 0.0018, 0.0113],
         [0.0105, 0.0338, 0.0445,  ..., 0.0155, 0.9945, 0.9662],
         [0.0105, 0.8985, 0.8665,  ..., 0.9536, 0.0018, 0.0113]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0128, 0.0700, 0.9916,  ..., 0.9882, 0.0193, 0.0354],
         [0.0128, 0.7277, 0.0025,  ..., 0.0039, 0.0193, 0.0354],
         [0.9616, 0.0700, 0.0025,  ..., 0.0039, 0.9420, 0.8937],
         [0.0128, 0.1323, 0.0034,  ..., 0.0039, 0.0193, 0.0354]],
        [[0.0288, 0.0132, 0.9652,  ..., 0.9708, 0.0105, 0.0181],
         [0.0288, 0.0160, 0.0112,  ..., 0.0097, 0.0131, 0.0181],
         [0.9137, 0.0132, 0.0112,  ..., 0.0097, 0.0105, 0.9456],
         [0.0288, 0.9576, 0.0124,  ..., 0.0097, 0.9659, 0.0181]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:02,673 [Process: 0] Synchronize training processes
2024-08-20 17:42:02,673 [Process: 0] Evaluating...
2024-08-20 17:42:02,675 [Process: 0] EPOCH 99:
2024-08-20 17:42:02,676 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:03,680 [Process: 0] Synchronize training processes
2024-08-20 17:42:03,680 [Process: 0] Evaluating...
2024-08-20 17:42:03,682 [Process: 0] EPOCH 100:
2024-08-20 17:42:03,684 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9819, 0.0376, 0.0137,  ..., 0.9892, 0.9718, 0.0297],
         [0.0060, 0.0376, 0.0137,  ..., 0.0036, 0.0094, 0.0297],
         [0.0060, 0.0376, 0.0137,  ..., 0.0036, 0.0094, 0.0297],
         [0.0060, 0.8871, 0.9590,  ..., 0.0036, 0.0094, 0.9108]],
        [[0.9641, 0.0502, 0.0169,  ..., 0.0485, 0.0024, 0.0015],
         [0.0112, 0.0502, 0.0169,  ..., 0.0485, 0.0024, 0.0015],
         [0.0112, 0.0502, 0.0169,  ..., 0.0485, 0.9927, 0.9956],
         [0.0134, 0.8493, 0.9494,  ..., 0.8544, 0.0024, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6279e-02, 9.6440e-02, 9.9921e-01,  ..., 9.8829e-01,
          4.9195e-02, 6.8444e-02],
         [3.6279e-02, 7.0857e-01, 2.5583e-04,  ..., 3.7332e-03,
          4.9078e-02, 6.8444e-02],
         [8.9116e-01, 6.6642e-02, 2.5583e-04,  ..., 3.7332e-03,
          8.5265e-01, 7.8136e-01],
         [3.6279e-02, 1.2835e-01, 2.7487e-04,  ..., 4.2436e-03,
          4.9078e-02, 8.1753e-02]],
        [[2.6163e-02, 3.0452e-02, 9.9299e-01,  ..., 9.6615e-01,
          2.3955e-02, 2.4770e-02],
         [2.6163e-02, 5.4750e-02, 2.3374e-03,  ..., 1.5504e-02,
          2.3955e-02, 2.4770e-02],
         [9.2151e-01, 3.0452e-02, 2.3374e-03,  ..., 9.1715e-03,
          2.3955e-02, 9.2569e-01],
         [2.6163e-02, 8.8435e-01, 2.3374e-03,  ..., 9.1715e-03,
          9.2814e-01, 2.4770e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9429, 0.0396, 0.0705,  ..., 0.9889, 0.9508, 0.0335],
         [0.0260, 0.0396, 0.0705,  ..., 0.0037, 0.0164, 0.0335],
         [0.0155, 0.0396, 0.0924,  ..., 0.0037, 0.0164, 0.0335],
         [0.0155, 0.8812, 0.7665,  ..., 0.0037, 0.0164, 0.8996]],
        [[0.9887, 0.0814, 0.0435,  ..., 0.0778, 0.0082, 0.0141],
         [0.0038, 0.1165, 0.0435,  ..., 0.0778, 0.0082, 0.0151],
         [0.0038, 0.0814, 0.0435,  ..., 0.0778, 0.9754, 0.9568],
         [0.0038, 0.7207, 0.8696,  ..., 0.7666, 0.0082, 0.0141]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0852e-02, 1.4634e-01, 9.9528e-01,  ..., 9.7491e-01,
          2.7557e-02, 1.7593e-02],
         [2.1644e-02, 6.4824e-01, 1.5607e-03,  ..., 8.3621e-03,
          2.7557e-02, 1.7593e-02],
         [9.3665e-01, 8.9709e-02, 1.5607e-03,  ..., 8.3621e-03,
          9.1733e-01, 9.4722e-01],
         [2.0852e-02, 1.1571e-01, 1.6014e-03,  ..., 8.3621e-03,
          2.7557e-02, 1.7593e-02]],
        [[2.9600e-02, 1.2270e-01, 9.3716e-01,  ..., 9.5368e-01,
          6.5859e-04, 1.4029e-02],
         [2.9600e-02, 1.3066e-01, 1.9487e-02,  ..., 1.6155e-02,
          6.5859e-04, 1.4029e-02],
         [9.1120e-01, 1.2270e-01, 1.9487e-02,  ..., 1.5084e-02,
          6.5859e-04, 9.5791e-01],
         [2.9600e-02, 6.2395e-01, 2.3870e-02,  ..., 1.5084e-02,
          9.9802e-01, 1.4029e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:04,689 [Process: 0] Synchronize training processes
2024-08-20 17:42:04,689 [Process: 0] Evaluating...
2024-08-20 17:42:04,691 [Process: 0] EPOCH 101:
2024-08-20 17:42:04,692 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:05,727 [Process: 0] Synchronize training processes
2024-08-20 17:42:05,727 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9757, 0.0176, 0.0826,  ..., 0.9452, 0.9117, 0.0350],
         [0.0081, 0.0176, 0.0771,  ..., 0.0183, 0.0370, 0.0353],
         [0.0081, 0.0176, 0.0902,  ..., 0.0183, 0.0256, 0.0350],
         [0.0081, 0.9473, 0.7502,  ..., 0.0183, 0.0256, 0.8947]],
        [[0.9478, 0.0892, 0.0293,  ..., 0.1125, 0.0053, 0.0071],
         [0.0174, 0.0871, 0.0293,  ..., 0.1005, 0.0053, 0.0112],
         [0.0174, 0.0930, 0.0293,  ..., 0.1005, 0.9841, 0.9746],
         [0.0174, 0.7307, 0.9120,  ..., 0.6865, 0.0053, 0.0071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0285, 0.1067, 0.9906,  ..., 0.9725, 0.0305, 0.0224],
         [0.0285, 0.3178, 0.0031,  ..., 0.0096, 0.0305, 0.0224],
         [0.9144, 0.1067, 0.0031,  ..., 0.0089, 0.9085, 0.9327],
         [0.0285, 0.4688, 0.0031,  ..., 0.0089, 0.0305, 0.0224]],
        [[0.0221, 0.0013, 0.9657,  ..., 0.9705, 0.0025, 0.0122],
         [0.0221, 0.0018, 0.0114,  ..., 0.0105, 0.0045, 0.0122],
         [0.9336, 0.0013, 0.0114,  ..., 0.0095, 0.0025, 0.9635],
         [0.0221, 0.9956, 0.0114,  ..., 0.0095, 0.9906, 0.0122]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:42:07,638 [Process: 0] EPOCH 102:
2024-08-20 17:42:07,640 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8478, 0.0692, 0.0301,  ..., 0.9835, 0.9856, 0.0334],
         [0.0649, 0.0696, 0.0301,  ..., 0.0055, 0.0048, 0.0334],
         [0.0436, 0.0734, 0.0301,  ..., 0.0055, 0.0048, 0.0334],
         [0.0436, 0.7878, 0.9097,  ..., 0.0055, 0.0048, 0.8998]],
        [[0.8862, 0.0396, 0.0240,  ..., 0.1360, 0.0373, 0.0032],
         [0.0379, 0.0659, 0.0240,  ..., 0.1423, 0.0373, 0.0032],
         [0.0379, 0.0396, 0.0240,  ..., 0.1870, 0.8882, 0.9903],
         [0.0379, 0.8550, 0.9279,  ..., 0.5347, 0.0373, 0.0032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1178e-02, 1.4467e-01, 9.3473e-01,  ..., 9.6628e-01,
          4.1474e-02, 4.5393e-02],
         [1.1178e-02, 7.9373e-01, 2.1837e-02,  ..., 1.1241e-02,
          4.1474e-02, 4.5393e-02],
         [9.6647e-01, 3.0802e-02, 2.1717e-02,  ..., 1.1241e-02,
          8.7396e-01, 8.6034e-01],
         [1.1178e-02, 3.0802e-02, 2.1717e-02,  ..., 1.1241e-02,
          4.3087e-02, 4.8872e-02]],
        [[4.2177e-02, 3.9272e-02, 9.9805e-01,  ..., 9.9033e-01,
          3.7565e-03, 2.8195e-02],
         [3.6335e-02, 6.4614e-02, 6.4900e-04,  ..., 3.2240e-03,
          4.2460e-03, 2.8195e-02],
         [8.8364e-01, 3.9272e-02, 6.4900e-04,  ..., 3.2240e-03,
          3.7565e-03, 9.1542e-01],
         [3.7849e-02, 8.5684e-01, 6.4900e-04,  ..., 3.2240e-03,
          9.8824e-01, 2.8195e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:08,645 [Process: 0] Synchronize training processes
2024-08-20 17:42:08,645 [Process: 0] Evaluating...
2024-08-20 17:42:08,647 [Process: 0] EPOCH 103:
2024-08-20 17:42:08,649 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:09,650 [Process: 0] Synchronize training processes
2024-08-20 17:42:09,650 [Process: 0] Evaluating...
2024-08-20 17:42:09,652 [Process: 0] EPOCH 104:
2024-08-20 17:42:09,654 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9899, 0.0336, 0.0437,  ..., 0.9942, 0.8466, 0.0879],
         [0.0034, 0.0336, 0.0437,  ..., 0.0019, 0.0509, 0.0879],
         [0.0034, 0.0336, 0.0437,  ..., 0.0019, 0.0517, 0.1205],
         [0.0034, 0.8993, 0.8688,  ..., 0.0019, 0.0509, 0.7037]],
        [[0.9450, 0.0721, 0.0413,  ..., 0.1066, 0.0043, 0.0097],
         [0.0183, 0.1038, 0.0413,  ..., 0.1158, 0.0043, 0.0097],
         [0.0183, 0.0864, 0.0413,  ..., 0.1367, 0.9872, 0.9708],
         [0.0183, 0.7377, 0.8762,  ..., 0.6409, 0.0043, 0.0097]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0087, 0.0707, 0.9761,  ..., 0.9872, 0.0279, 0.0269],
         [0.0087, 0.4592, 0.0079,  ..., 0.0043, 0.0279, 0.0269],
         [0.9738, 0.0707, 0.0079,  ..., 0.0043, 0.9164, 0.9191],
         [0.0087, 0.3994, 0.0080,  ..., 0.0043, 0.0279, 0.0272]],
        [[0.0281, 0.0650, 0.9868,  ..., 0.9600, 0.0015, 0.0235],
         [0.0281, 0.2214, 0.0044,  ..., 0.0116, 0.0015, 0.0235],
         [0.9140, 0.0650, 0.0044,  ..., 0.0116, 0.0015, 0.9291],
         [0.0298, 0.6486, 0.0044,  ..., 0.0168, 0.9955, 0.0239]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9909, 0.0620, 0.0286,  ..., 0.9847, 0.9744, 0.0323],
         [0.0030, 0.0620, 0.0422,  ..., 0.0051, 0.0088, 0.0308],
         [0.0030, 0.0620, 0.0286,  ..., 0.0051, 0.0084, 0.0308],
         [0.0030, 0.8140, 0.9007,  ..., 0.0051, 0.0084, 0.9061]],
        [[0.9696, 0.0560, 0.0570,  ..., 0.1823, 0.0166, 0.0037],
         [0.0101, 0.0908, 0.0574,  ..., 0.1493, 0.0166, 0.0037],
         [0.0101, 0.0560, 0.0570,  ..., 0.2972, 0.9503, 0.9889],
         [0.0101, 0.7973, 0.8285,  ..., 0.3712, 0.0166, 0.0037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0140e-02, 2.2633e-03, 9.5332e-01,  ..., 9.9742e-01,
          4.4017e-02, 2.2785e-02],
         [3.0140e-02, 2.2633e-03, 1.5559e-02,  ..., 8.5954e-04,
          4.3874e-02, 2.2785e-02],
         [3.0140e-02, 2.2633e-03, 1.5559e-02,  ..., 8.5954e-04,
          8.6823e-01, 9.3165e-01],
         [9.0958e-01, 9.9321e-01, 1.5559e-02,  ..., 8.5954e-04,
          4.3874e-02, 2.2785e-02]],
        [[3.3464e-02, 4.4787e-02, 9.9218e-01,  ..., 9.1142e-01,
          1.6830e-03, 2.7361e-02],
         [3.3464e-02, 8.7141e-02, 2.6510e-03,  ..., 4.9702e-02,
          1.6830e-03, 2.7361e-02],
         [8.9961e-01, 4.4787e-02, 2.5825e-03,  ..., 1.9441e-02,
          1.6830e-03, 9.1792e-01],
         [3.3464e-02, 8.2329e-01, 2.5825e-03,  ..., 1.9441e-02,
          9.9495e-01, 2.7361e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:10,688 [Process: 0] Synchronize training processes
2024-08-20 17:42:10,689 [Process: 0] Evaluating...
2024-08-20 17:42:10,690 [Process: 0] EPOCH 105:
2024-08-20 17:42:10,692 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:11,717 [Process: 0] Synchronize training processes
2024-08-20 17:42:11,717 [Process: 0] Evaluating...
2024-08-20 17:42:11,719 [Process: 0] EPOCH 106:
2024-08-20 17:42:11,721 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9709, 0.0406, 0.0447,  ..., 0.9519, 0.5713, 0.0454],
         [0.0097, 0.0406, 0.0447,  ..., 0.0175, 0.3103, 0.0454],
         [0.0097, 0.0406, 0.0447,  ..., 0.0153, 0.0592, 0.0454],
         [0.0097, 0.8782, 0.8659,  ..., 0.0153, 0.0592, 0.8637]],
        [[0.9934, 0.0164, 0.0230,  ..., 0.1107, 0.0081, 0.0141],
         [0.0022, 0.0164, 0.0230,  ..., 0.0904, 0.0081, 0.0141],
         [0.0022, 0.0164, 0.0230,  ..., 0.0904, 0.9758, 0.9576],
         [0.0022, 0.9508, 0.9310,  ..., 0.7084, 0.0081, 0.0141]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2378, 0.0916, 0.9890,  ..., 0.9938, 0.0748, 0.0347],
         [0.1612, 0.0916, 0.0037,  ..., 0.0021, 0.0682, 0.0332],
         [0.1942, 0.0916, 0.0037,  ..., 0.0021, 0.7862, 0.8989],
         [0.4068, 0.7253, 0.0037,  ..., 0.0021, 0.0708, 0.0332]],
        [[0.0650, 0.0161, 0.9945,  ..., 0.9672, 0.0015, 0.0224],
         [0.0586, 0.0161, 0.0018,  ..., 0.0122, 0.0081, 0.0224],
         [0.7973, 0.0161, 0.0018,  ..., 0.0103, 0.0015, 0.9329],
         [0.0791, 0.9516, 0.0018,  ..., 0.0103, 0.9888, 0.0224]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9024, 0.0257, 0.1336,  ..., 0.9181, 0.8277, 0.0243],
         [0.0498, 0.0257, 0.0979,  ..., 0.0443, 0.0951, 0.0243],
         [0.0239, 0.0257, 0.1378,  ..., 0.0188, 0.0386, 0.0243],
         [0.0239, 0.9228, 0.6306,  ..., 0.0188, 0.0386, 0.9270]],
        [[0.9914, 0.0669, 0.0392,  ..., 0.1120, 0.0264, 0.0137],
         [0.0029, 0.0669, 0.0392,  ..., 0.0922, 0.0264, 0.0137],
         [0.0029, 0.0669, 0.0392,  ..., 0.1096, 0.9209, 0.9588],
         [0.0029, 0.7992, 0.8825,  ..., 0.6862, 0.0264, 0.0137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0271e-02, 1.0275e-01, 9.8224e-01,  ..., 9.9775e-01,
          1.5969e-02, 1.8789e-02],
         [2.0271e-02, 5.9156e-01, 5.9204e-03,  ..., 7.4845e-04,
          1.5969e-02, 1.8789e-02],
         [9.3919e-01, 8.0926e-02, 5.9204e-03,  ..., 7.4845e-04,
          9.5209e-01, 9.4363e-01],
         [2.0271e-02, 2.2477e-01, 5.9204e-03,  ..., 7.4845e-04,
          1.5969e-02, 1.8789e-02]],
        [[5.3524e-02, 3.4651e-03, 9.8976e-01,  ..., 9.6119e-01,
          8.5336e-04, 3.2375e-02],
         [4.7911e-02, 3.4651e-03, 3.4123e-03,  ..., 1.7166e-02,
          8.5336e-04, 3.2375e-02],
         [8.4617e-01, 3.4651e-03, 3.4123e-03,  ..., 1.0820e-02,
          8.5336e-04, 9.0287e-01],
         [5.2396e-02, 9.8960e-01, 3.4123e-03,  ..., 1.0820e-02,
          9.9744e-01, 3.2375e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:12,740 [Process: 0] Synchronize training processes
2024-08-20 17:42:12,741 [Process: 0] Evaluating...
2024-08-20 17:42:12,742 [Process: 0] EPOCH 107:
2024-08-20 17:42:12,744 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:13,755 [Process: 0] Synchronize training processes
2024-08-20 17:42:13,755 [Process: 0] Evaluating...
2024-08-20 17:42:13,757 [Process: 0] EPOCH 108:
2024-08-20 17:42:13,758 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9405, 0.0109, 0.0306,  ..., 0.9810, 0.9754, 0.0337],
         [0.0198, 0.0109, 0.0306,  ..., 0.0063, 0.0082, 0.0337],
         [0.0198, 0.0109, 0.0306,  ..., 0.0063, 0.0082, 0.0337],
         [0.0198, 0.9673, 0.9081,  ..., 0.0063, 0.0082, 0.8990]],
        [[0.9812, 0.0377, 0.0271,  ..., 0.1548, 0.0103, 0.0026],
         [0.0063, 0.0377, 0.0271,  ..., 0.1391, 0.0103, 0.0026],
         [0.0063, 0.0377, 0.0271,  ..., 0.2430, 0.9690, 0.9923],
         [0.0063, 0.8870, 0.9186,  ..., 0.4630, 0.0103, 0.0026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0331, 0.1188, 0.9577,  ..., 0.9907, 0.0355, 0.0383],
         [0.0331, 0.5431, 0.0102,  ..., 0.0029, 0.0355, 0.0383],
         [0.9006, 0.0756, 0.0102,  ..., 0.0029, 0.8816, 0.8814],
         [0.0331, 0.2625, 0.0219,  ..., 0.0034, 0.0473, 0.0421]],
        [[0.0534, 0.0040, 0.9837,  ..., 0.9828, 0.0022, 0.0284],
         [0.0534, 0.0053, 0.0054,  ..., 0.0057, 0.0022, 0.0284],
         [0.8161, 0.0040, 0.0054,  ..., 0.0057, 0.0022, 0.9147],
         [0.0771, 0.9866, 0.0054,  ..., 0.0057, 0.9934, 0.0284]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9722, 0.0211, 0.0498,  ..., 0.9246, 0.9810, 0.0156],
         [0.0093, 0.0211, 0.0498,  ..., 0.0251, 0.0063, 0.0156],
         [0.0093, 0.0211, 0.0498,  ..., 0.0251, 0.0063, 0.0156],
         [0.0093, 0.9367, 0.8505,  ..., 0.0251, 0.0063, 0.9533]],
        [[0.9873, 0.0198, 0.0174,  ..., 0.0712, 0.0053, 0.0055],
         [0.0042, 0.0198, 0.0174,  ..., 0.0712, 0.0053, 0.0055],
         [0.0042, 0.0198, 0.0174,  ..., 0.0735, 0.9840, 0.9834],
         [0.0042, 0.9406, 0.9477,  ..., 0.7842, 0.0053, 0.0055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3961e-02, 7.4680e-02, 9.8427e-01,  ..., 9.8720e-01,
          1.3647e-02, 2.5020e-02],
         [3.3961e-02, 8.5839e-01, 3.7514e-03,  ..., 4.2670e-03,
          1.3647e-02, 2.5020e-02],
         [8.9812e-01, 3.3463e-02, 3.7514e-03,  ..., 4.2670e-03,
          9.5906e-01, 9.2494e-01],
         [3.3961e-02, 3.3463e-02, 8.2231e-03,  ..., 4.2670e-03,
          1.3647e-02, 2.5020e-02]],
        [[1.5356e-01, 7.3400e-03, 9.8470e-01,  ..., 9.6002e-01,
          2.7764e-04, 7.6339e-02],
         [1.0275e-01, 7.3400e-03, 5.1002e-03,  ..., 1.7384e-02,
          3.5885e-04, 6.8243e-02],
         [5.4694e-01, 7.3400e-03, 5.1002e-03,  ..., 1.1297e-02,
          2.7764e-04, 7.8550e-01],
         [1.9676e-01, 9.7798e-01, 5.1002e-03,  ..., 1.1297e-02,
          9.9909e-01, 6.9916e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:14,778 [Process: 0] Synchronize training processes
2024-08-20 17:42:14,778 [Process: 0] Evaluating...
2024-08-20 17:42:14,780 [Process: 0] EPOCH 109:
2024-08-20 17:42:14,781 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:15,840 [Process: 0] Synchronize training processes
2024-08-20 17:42:15,840 [Process: 0] Evaluating...
2024-08-20 17:42:15,842 [Process: 0] EPOCH 110:
2024-08-20 17:42:15,843 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9886, 0.0285, 0.1112,  ..., 0.9648, 0.9752, 0.0413],
         [0.0038, 0.0285, 0.1126,  ..., 0.0117, 0.0083, 0.0413],
         [0.0038, 0.0285, 0.1706,  ..., 0.0117, 0.0083, 0.0413],
         [0.0038, 0.9144, 0.6056,  ..., 0.0117, 0.0083, 0.8761]],
        [[0.9805, 0.1341, 0.0259,  ..., 0.1570, 0.0027, 0.0067],
         [0.0065, 0.1148, 0.0259,  ..., 0.1606, 0.0027, 0.0067],
         [0.0065, 0.1419, 0.0259,  ..., 0.3488, 0.9918, 0.9798],
         [0.0065, 0.6092, 0.9224,  ..., 0.3336, 0.0027, 0.0067]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6104e-02, 1.2657e-01, 9.9707e-01,  ..., 9.7076e-01,
          3.6668e-02, 1.5970e-02],
         [2.6104e-02, 4.8043e-01, 9.7780e-04,  ..., 9.7157e-03,
          3.4413e-02, 1.5970e-02],
         [9.2169e-01, 8.8821e-02, 9.7780e-04,  ..., 9.7157e-03,
          8.9365e-01, 9.5209e-01],
         [2.6104e-02, 3.0418e-01, 9.7780e-04,  ..., 9.8081e-03,
          3.5268e-02, 1.5970e-02]],
        [[6.1606e-02, 6.0503e-03, 9.9026e-01,  ..., 9.7320e-01,
          8.9164e-04, 3.8910e-03],
         [6.1606e-02, 6.0503e-03, 3.2481e-03,  ..., 1.2118e-02,
          8.9164e-04, 3.8910e-03],
         [7.9377e-01, 6.0503e-03, 3.2481e-03,  ..., 7.3421e-03,
          8.9164e-04, 9.8833e-01],
         [8.3022e-02, 9.8185e-01, 3.2481e-03,  ..., 7.3421e-03,
          9.9733e-01, 3.8910e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9790, 0.0380, 0.0978,  ..., 0.1573, 0.9835, 0.0321],
         [0.0070, 0.0380, 0.0978,  ..., 0.3664, 0.0055, 0.0321],
         [0.0070, 0.0380, 0.1525,  ..., 0.1438, 0.0055, 0.0321],
         [0.0070, 0.8861, 0.6519,  ..., 0.3325, 0.0055, 0.9037]],
        [[0.9830, 0.0194, 0.0225,  ..., 0.0708, 0.0433, 0.0022],
         [0.0057, 0.0194, 0.0225,  ..., 0.0708, 0.0433, 0.0022],
         [0.0057, 0.0194, 0.0225,  ..., 0.0921, 0.8700, 0.9933],
         [0.0057, 0.9418, 0.9326,  ..., 0.7663, 0.0433, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.8011e-02, 7.3384e-02, 9.9959e-01,  ..., 9.9266e-01,
          2.9095e-02, 5.1342e-02],
         [4.8011e-02, 8.3586e-01, 1.3499e-04,  ..., 2.4478e-03,
          2.9095e-02, 5.1342e-02],
         [8.5597e-01, 4.3690e-02, 1.3499e-04,  ..., 2.4478e-03,
          9.1272e-01, 8.3388e-01],
         [4.8011e-02, 4.7065e-02, 1.3499e-04,  ..., 2.4478e-03,
          2.9095e-02, 6.3435e-02]],
        [[5.0032e-02, 7.1065e-03, 9.9523e-01,  ..., 9.7781e-01,
          2.2157e-03, 4.6742e-03],
         [4.7123e-02, 1.7713e-02, 1.5905e-03,  ..., 1.1657e-02,
          4.7863e-03, 4.6742e-03],
         [8.4238e-01, 7.1065e-03, 1.5905e-03,  ..., 5.2646e-03,
          2.2157e-03, 9.8598e-01],
         [6.0466e-02, 9.6807e-01, 1.5905e-03,  ..., 5.2646e-03,
          9.9078e-01, 4.6742e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:16,860 [Process: 0] Synchronize training processes
2024-08-20 17:42:16,860 [Process: 0] Evaluating...
2024-08-20 17:42:16,862 [Process: 0] EPOCH 111:
2024-08-20 17:42:16,864 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:17,871 [Process: 0] Synchronize training processes
2024-08-20 17:42:17,871 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9658, 0.0237, 0.0977,  ..., 0.9158, 0.9771, 0.0625],
         [0.0164, 0.0237, 0.0944,  ..., 0.0463, 0.0076, 0.0627],
         [0.0089, 0.0237, 0.1185,  ..., 0.0189, 0.0076, 0.0841],
         [0.0089, 0.9288, 0.6894,  ..., 0.0189, 0.0076, 0.7907]],
        [[0.9882, 0.0183, 0.0137,  ..., 0.0494, 0.0140, 0.0040],
         [0.0039, 0.0202, 0.0137,  ..., 0.0494, 0.0140, 0.0040],
         [0.0039, 0.0183, 0.0137,  ..., 0.0494, 0.9580, 0.9880],
         [0.0039, 0.9432, 0.9590,  ..., 0.8518, 0.0140, 0.0040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.5279e-02, 1.7174e-01, 9.6791e-01,  ..., 9.9569e-01,
          2.4628e-02, 1.9045e-02],
         [4.5279e-02, 6.8338e-01, 9.7645e-03,  ..., 1.4357e-03,
          2.4443e-02, 1.9045e-02],
         [8.6123e-01, 7.2441e-02, 9.7645e-03,  ..., 1.4357e-03,
          9.2153e-01, 9.4286e-01],
         [4.8212e-02, 7.2441e-02, 1.2563e-02,  ..., 1.4357e-03,
          2.9401e-02, 1.9045e-02]],
        [[4.4236e-02, 7.4602e-04, 9.9561e-01,  ..., 9.8282e-01,
          7.1422e-03, 7.2038e-03],
         [4.4236e-02, 7.4602e-04, 1.4628e-03,  ..., 5.7277e-03,
          7.5867e-03, 7.2038e-03],
         [8.3004e-01, 7.4602e-04, 1.4628e-03,  ..., 5.7277e-03,
          7.1422e-03, 9.7839e-01],
         [8.1487e-02, 9.9776e-01, 1.4628e-03,  ..., 5.7277e-03,
          9.7813e-01, 7.2038e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:42:19,771 [Process: 0] EPOCH 112:
2024-08-20 17:42:19,773 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9736, 0.0194, 0.0484,  ..., 0.9734, 0.9143, 0.0268],
         [0.0088, 0.0194, 0.0484,  ..., 0.0095, 0.0294, 0.0268],
         [0.0088, 0.0194, 0.0504,  ..., 0.0086, 0.0282, 0.0268],
         [0.0088, 0.9419, 0.8529,  ..., 0.0086, 0.0282, 0.9197]],
        [[0.9736, 0.0327, 0.0079,  ..., 0.1063, 0.0074, 0.0083],
         [0.0088, 0.0327, 0.0079,  ..., 0.1091, 0.0074, 0.0083],
         [0.0088, 0.0327, 0.0079,  ..., 0.1321, 0.9779, 0.9751],
         [0.0088, 0.9020, 0.9762,  ..., 0.6526, 0.0074, 0.0083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3933e-02, 1.4050e-01, 9.8616e-01,  ..., 9.9145e-01,
          2.3120e-02, 2.0870e-02],
         [2.3933e-02, 5.4041e-01, 4.6145e-03,  ..., 2.8487e-03,
          2.3120e-02, 2.0870e-02],
         [9.2820e-01, 9.2213e-02, 4.6145e-03,  ..., 2.8487e-03,
          9.3064e-01, 9.3680e-01],
         [2.3933e-02, 2.2688e-01, 4.6145e-03,  ..., 2.8487e-03,
          2.3120e-02, 2.1457e-02]],
        [[3.4159e-02, 3.5783e-02, 9.6942e-01,  ..., 9.7981e-01,
          5.8246e-04, 2.9286e-02],
         [3.4159e-02, 1.0265e-01, 1.6963e-02,  ..., 6.7297e-03,
          5.8246e-04, 2.9286e-02],
         [8.8179e-01, 3.5783e-02, 6.8091e-03,  ..., 6.7297e-03,
          5.8246e-04, 9.1214e-01],
         [4.9890e-02, 8.2578e-01, 6.8091e-03,  ..., 6.7297e-03,
          9.9825e-01, 2.9286e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:20,799 [Process: 0] Synchronize training processes
2024-08-20 17:42:20,800 [Process: 0] Evaluating...
2024-08-20 17:42:20,801 [Process: 0] EPOCH 113:
2024-08-20 17:42:20,803 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:21,807 [Process: 0] Synchronize training processes
2024-08-20 17:42:21,807 [Process: 0] Evaluating...
2024-08-20 17:42:21,809 [Process: 0] EPOCH 114:
2024-08-20 17:42:21,810 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9727, 0.0142, 0.0548,  ..., 0.9756, 0.9720, 0.0181],
         [0.0091, 0.0142, 0.0543,  ..., 0.0093, 0.0122, 0.0189],
         [0.0091, 0.0142, 0.0660,  ..., 0.0076, 0.0079, 0.0181],
         [0.0091, 0.9575, 0.8249,  ..., 0.0076, 0.0079, 0.9449]],
        [[0.9697, 0.0356, 0.0267,  ..., 0.1519, 0.0133, 0.0036],
         [0.0114, 0.0356, 0.0267,  ..., 0.1319, 0.0133, 0.0036],
         [0.0094, 0.0356, 0.0267,  ..., 0.2116, 0.9602, 0.9892],
         [0.0094, 0.8932, 0.9198,  ..., 0.5047, 0.0133, 0.0036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0258, 0.1262, 0.9789,  ..., 0.9662, 0.0166, 0.0248],
         [0.0258, 0.7271, 0.0070,  ..., 0.0104, 0.0166, 0.0248],
         [0.9226, 0.0719, 0.0070,  ..., 0.0104, 0.9503, 0.9214],
         [0.0258, 0.0748, 0.0070,  ..., 0.0131, 0.0166, 0.0289]],
        [[0.0641, 0.0387, 0.9894,  ..., 0.9930, 0.0071, 0.0167],
         [0.0641, 0.0925, 0.0035,  ..., 0.0023, 0.0071, 0.0167],
         [0.7947, 0.0387, 0.0035,  ..., 0.0023, 0.0071, 0.9500],
         [0.0771, 0.8301, 0.0035,  ..., 0.0023, 0.9787, 0.0167]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9598, 0.0145, 0.0652,  ..., 0.9908, 0.9542, 0.0509],
         [0.0136, 0.0145, 0.0652,  ..., 0.0033, 0.0285, 0.0509],
         [0.0133, 0.0145, 0.0756,  ..., 0.0030, 0.0087, 0.0509],
         [0.0133, 0.9564, 0.7940,  ..., 0.0030, 0.0087, 0.8473]],
        [[0.9869, 0.0480, 0.0378,  ..., 0.0945, 0.0205, 0.0057],
         [0.0043, 0.0338, 0.0378,  ..., 0.0857, 0.0205, 0.0057],
         [0.0043, 0.0373, 0.0378,  ..., 0.0951, 0.9384, 0.9829],
         [0.0045, 0.8809, 0.8867,  ..., 0.7246, 0.0205, 0.0057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7610e-02, 7.6688e-02, 9.8656e-01,  ..., 9.1820e-01,
          1.0716e-02, 2.5269e-02],
         [1.7610e-02, 8.0536e-01, 4.4810e-03,  ..., 3.7880e-02,
          1.0716e-02, 2.5269e-02],
         [9.4717e-01, 5.6905e-02, 4.4810e-03,  ..., 2.1958e-02,
          9.6785e-01, 9.2419e-01],
         [1.7610e-02, 6.1043e-02, 4.4810e-03,  ..., 2.1958e-02,
          1.0716e-02, 2.5269e-02]],
        [[3.1012e-02, 1.1803e-02, 9.8318e-01,  ..., 9.7516e-01,
          6.0839e-04, 1.7908e-02],
         [3.1012e-02, 1.1803e-02, 5.6051e-03,  ..., 7.9097e-03,
          6.0839e-04, 1.7908e-02],
         [8.9286e-01, 1.1803e-02, 5.6051e-03,  ..., 7.9097e-03,
          6.0839e-04, 9.4628e-01],
         [4.5112e-02, 9.6459e-01, 5.6051e-03,  ..., 9.0237e-03,
          9.9817e-01, 1.7908e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:22,830 [Process: 0] Synchronize training processes
2024-08-20 17:42:22,830 [Process: 0] Evaluating...
2024-08-20 17:42:22,832 [Process: 0] EPOCH 115:
2024-08-20 17:42:22,833 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:23,869 [Process: 0] Synchronize training processes
2024-08-20 17:42:23,869 [Process: 0] Evaluating...
2024-08-20 17:42:23,871 [Process: 0] EPOCH 116:
2024-08-20 17:42:23,872 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9716, 0.0217, 0.0645,  ..., 0.9099, 0.6651, 0.0322],
         [0.0179, 0.0282, 0.0570,  ..., 0.0610, 0.2465, 0.0322],
         [0.0052, 0.0217, 0.0570,  ..., 0.0145, 0.0442, 0.0322],
         [0.0052, 0.9284, 0.8216,  ..., 0.0145, 0.0442, 0.9034]],
        [[0.9613, 0.0200, 0.0417,  ..., 0.1798, 0.0173, 0.0048],
         [0.0129, 0.0200, 0.0340,  ..., 0.1403, 0.0173, 0.0048],
         [0.0129, 0.0200, 0.0409,  ..., 0.4019, 0.9480, 0.9856],
         [0.0129, 0.9401, 0.8835,  ..., 0.2780, 0.0173, 0.0048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0183, 0.2324, 0.9765,  ..., 0.9784, 0.0173, 0.0283],
         [0.0183, 0.5646, 0.0078,  ..., 0.0062, 0.0173, 0.0283],
         [0.9451, 0.1000, 0.0078,  ..., 0.0062, 0.9482, 0.9142],
         [0.0183, 0.1029, 0.0078,  ..., 0.0093, 0.0173, 0.0292]],
        [[0.0704, 0.0039, 0.9913,  ..., 0.9722, 0.0032, 0.0232],
         [0.0704, 0.0033, 0.0028,  ..., 0.0074, 0.0032, 0.0232],
         [0.7155, 0.0033, 0.0028,  ..., 0.0074, 0.0032, 0.9304],
         [0.1438, 0.9895, 0.0030,  ..., 0.0130, 0.9904, 0.0232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9681, 0.0158, 0.0340,  ..., 0.8400, 0.7500, 0.0171],
         [0.0182, 0.0158, 0.0340,  ..., 0.0573, 0.1763, 0.0171],
         [0.0068, 0.0158, 0.0340,  ..., 0.0528, 0.0369, 0.0171],
         [0.0068, 0.9525, 0.8980,  ..., 0.0498, 0.0369, 0.9488]],
        [[0.9812, 0.0301, 0.0138,  ..., 0.1215, 0.0165, 0.0064],
         [0.0063, 0.0301, 0.0138,  ..., 0.1186, 0.0165, 0.0064],
         [0.0063, 0.0301, 0.0138,  ..., 0.5162, 0.9504, 0.9809],
         [0.0063, 0.9097, 0.9587,  ..., 0.2436, 0.0165, 0.0064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2873e-02, 8.1197e-02, 9.7136e-01,  ..., 9.8716e-01,
          1.3992e-02, 2.3510e-02],
         [3.2873e-02, 6.6913e-01, 1.0730e-02,  ..., 4.2793e-03,
          1.3992e-02, 2.4025e-02],
         [9.0138e-01, 7.6619e-02, 8.9563e-03,  ..., 4.2793e-03,
          9.5802e-01, 9.2896e-01],
         [3.2873e-02, 1.7305e-01, 8.9563e-03,  ..., 4.2793e-03,
          1.3992e-02, 2.3510e-02]],
        [[6.7893e-02, 1.1135e-02, 9.8526e-01,  ..., 9.8669e-01,
          2.4412e-04, 6.6679e-03],
         [6.7893e-02, 1.1135e-02, 4.5808e-03,  ..., 4.4383e-03,
          1.1535e-04, 6.6679e-03],
         [7.2770e-01, 1.1135e-02, 4.5808e-03,  ..., 4.4383e-03,
          1.1535e-04, 9.8000e-01],
         [1.3652e-01, 9.6659e-01, 5.5816e-03,  ..., 4.4383e-03,
          9.9953e-01, 6.6679e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:24,905 [Process: 0] Synchronize training processes
2024-08-20 17:42:24,905 [Process: 0] Evaluating...
2024-08-20 17:42:24,907 [Process: 0] EPOCH 117:
2024-08-20 17:42:24,908 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:25,925 [Process: 0] Synchronize training processes
2024-08-20 17:42:25,925 [Process: 0] Evaluating...
2024-08-20 17:42:25,927 [Process: 0] EPOCH 118:
2024-08-20 17:42:25,928 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9207, 0.0322, 0.0711,  ..., 0.9846, 0.8947, 0.0286],
         [0.0261, 0.0322, 0.0711,  ..., 0.0060, 0.0653, 0.0286],
         [0.0270, 0.0322, 0.0711,  ..., 0.0047, 0.0200, 0.0286],
         [0.0261, 0.9034, 0.7867,  ..., 0.0047, 0.0200, 0.9143]],
        [[0.9809, 0.0090, 0.0245,  ..., 0.1409, 0.0135, 0.0052],
         [0.0064, 0.0090, 0.0245,  ..., 0.1180, 0.0135, 0.0052],
         [0.0064, 0.0090, 0.0245,  ..., 0.1944, 0.9595, 0.9843],
         [0.0064, 0.9729, 0.9265,  ..., 0.5467, 0.0135, 0.0052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5352e-02, 1.8665e-02, 9.9730e-01,  ..., 9.4243e-01,
          1.5283e-02, 1.9050e-02],
         [2.5352e-02, 5.0293e-02, 8.9919e-04,  ..., 1.1444e-02,
          1.5283e-02, 1.9050e-02],
         [9.2394e-01, 1.8665e-02, 8.9919e-04,  ..., 1.1444e-02,
          9.5415e-01, 9.4285e-01],
         [2.5352e-02, 9.1238e-01, 8.9919e-04,  ..., 3.4679e-02,
          1.5283e-02, 1.9050e-02]],
        [[2.5208e-02, 4.2554e-03, 9.9746e-01,  ..., 9.9563e-01,
          6.9645e-04, 1.8306e-02],
         [2.5208e-02, 4.2554e-03, 8.4625e-04,  ..., 1.4576e-03,
          6.9645e-04, 1.8306e-02],
         [9.2438e-01, 4.2554e-03, 8.4625e-04,  ..., 1.4576e-03,
          6.9645e-04, 9.4508e-01],
         [2.5208e-02, 9.8723e-01, 8.4625e-04,  ..., 1.4576e-03,
          9.9791e-01, 1.8306e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9502, 0.0325, 0.0232,  ..., 0.9532, 0.8817, 0.0114],
         [0.0166, 0.0325, 0.0232,  ..., 0.0225, 0.0839, 0.0114],
         [0.0166, 0.0325, 0.0232,  ..., 0.0121, 0.0172, 0.0114],
         [0.0166, 0.9025, 0.9304,  ..., 0.0121, 0.0172, 0.9659]],
        [[0.9767, 0.0475, 0.0312,  ..., 0.0743, 0.0159, 0.0026],
         [0.0078, 0.0781, 0.0293,  ..., 0.0743, 0.0159, 0.0034],
         [0.0078, 0.0475, 0.0293,  ..., 0.0909, 0.9522, 0.9914],
         [0.0078, 0.8269, 0.9101,  ..., 0.7605, 0.0159, 0.0026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.2738e-02, 3.0670e-02, 9.9618e-01,  ..., 9.8566e-01,
          3.0011e-02, 2.0370e-02],
         [4.2738e-02, 3.0954e-01, 1.2743e-03,  ..., 3.7326e-03,
          3.0011e-02, 2.0370e-02],
         [8.7179e-01, 3.0670e-02, 1.2743e-03,  ..., 3.7326e-03,
          9.0997e-01, 9.3889e-01],
         [4.2738e-02, 6.2912e-01, 1.2743e-03,  ..., 6.8744e-03,
          3.0011e-02, 2.0370e-02]],
        [[1.1391e-02, 2.0364e-03, 9.9055e-01,  ..., 9.9733e-01,
          2.3069e-04, 2.4136e-02],
         [1.1391e-02, 2.0364e-03, 3.0715e-03,  ..., 8.8948e-04,
          2.3069e-04, 2.4136e-02],
         [9.6583e-01, 2.0364e-03, 3.0715e-03,  ..., 8.8948e-04,
          2.3069e-04, 9.2759e-01],
         [1.1391e-02, 9.9389e-01, 3.3110e-03,  ..., 8.8948e-04,
          9.9931e-01, 2.4136e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:26,945 [Process: 0] Synchronize training processes
2024-08-20 17:42:26,946 [Process: 0] Evaluating...
2024-08-20 17:42:26,947 [Process: 0] EPOCH 119:
2024-08-20 17:42:26,949 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:28,021 [Process: 0] Synchronize training processes
2024-08-20 17:42:28,022 [Process: 0] Evaluating...
2024-08-20 17:42:28,024 [Process: 0] EPOCH 120:
2024-08-20 17:42:28,025 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9195, 0.0273, 0.0460,  ..., 0.9752, 0.8411, 0.0506],
         [0.0298, 0.0466, 0.0460,  ..., 0.0083, 0.0727, 0.0506],
         [0.0253, 0.0273, 0.0518,  ..., 0.0083, 0.0431, 0.0627],
         [0.0253, 0.8987, 0.8562,  ..., 0.0083, 0.0431, 0.8361]],
        [[0.9940, 0.0167, 0.0411,  ..., 0.0772, 0.0077, 0.0114],
         [0.0020, 0.0167, 0.0473,  ..., 0.0772, 0.0077, 0.0114],
         [0.0020, 0.0167, 0.0411,  ..., 0.0772, 0.9769, 0.9659],
         [0.0020, 0.9499, 0.8704,  ..., 0.7683, 0.0077, 0.0114]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8433e-02, 7.4701e-02, 9.8397e-01,  ..., 9.8226e-01,
          4.0893e-02, 3.0297e-02],
         [3.8433e-02, 2.9709e-01, 6.0552e-03,  ..., 5.5970e-03,
          4.0893e-02, 3.0297e-02],
         [8.8470e-01, 7.4701e-02, 4.9885e-03,  ..., 5.5970e-03,
          8.7593e-01, 9.0911e-01],
         [3.8433e-02, 5.5351e-01, 4.9885e-03,  ..., 6.5478e-03,
          4.2286e-02, 3.0297e-02]],
        [[3.5668e-02, 9.7739e-04, 9.9374e-01,  ..., 9.9348e-01,
          6.7884e-04, 2.7461e-02],
         [3.5668e-02, 9.7739e-04, 2.0876e-03,  ..., 2.1723e-03,
          6.7884e-04, 2.7461e-02],
         [8.9300e-01, 9.7739e-04, 2.0876e-03,  ..., 2.1723e-03,
          6.7884e-04, 9.1762e-01],
         [3.5668e-02, 9.9707e-01, 2.0876e-03,  ..., 2.1723e-03,
          9.9796e-01, 2.7461e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8552, 0.0345, 0.0355,  ..., 0.9857, 0.9170, 0.0115],
         [0.0463, 0.1020, 0.0411,  ..., 0.0065, 0.0277, 0.0115],
         [0.0523, 0.0345, 0.0355,  ..., 0.0039, 0.0277, 0.0115],
         [0.0463, 0.8289, 0.8880,  ..., 0.0039, 0.0277, 0.9655]],
        [[0.9236, 0.0253, 0.0251,  ..., 0.0536, 0.0070, 0.0231],
         [0.0251, 0.0253, 0.0251,  ..., 0.0536, 0.0099, 0.0231],
         [0.0262, 0.0253, 0.0251,  ..., 0.0630, 0.9761, 0.9308],
         [0.0251, 0.9242, 0.9248,  ..., 0.8298, 0.0070, 0.0231]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8517e-02, 1.7003e-01, 9.7591e-01,  ..., 8.3462e-01,
          2.3453e-02, 3.2263e-02],
         [2.8517e-02, 5.0705e-01, 8.3755e-03,  ..., 6.3490e-02,
          2.3453e-02, 3.2263e-02],
         [9.1445e-01, 8.6445e-02, 7.8551e-03,  ..., 4.9699e-02,
          9.2964e-01, 9.0321e-01],
         [2.8517e-02, 2.3648e-01, 7.8551e-03,  ..., 5.2187e-02,
          2.3453e-02, 3.2263e-02]],
        [[3.2898e-02, 4.5914e-03, 9.7130e-01,  ..., 9.6964e-01,
          9.6335e-04, 3.9537e-02],
         [3.2898e-02, 4.5914e-03, 1.1565e-02,  ..., 8.6103e-03,
          9.6335e-04, 3.9537e-02],
         [9.0131e-01, 4.5914e-03, 8.5691e-03,  ..., 8.6103e-03,
          9.6335e-04, 8.8139e-01],
         [3.2898e-02, 9.8623e-01, 8.5691e-03,  ..., 1.3138e-02,
          9.9711e-01, 3.9537e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:42:29,025 [Process: 0] Synchronize training processes
2024-08-20 17:42:29,025 [Process: 0] Evaluating...
2024-08-20 17:42:29,027 [Process: 0] EPOCH 121:
2024-08-20 17:42:29,029 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:30,041 [Process: 0] Synchronize training processes
2024-08-20 17:42:30,041 [Process: 0] Evaluating...
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9906, 0.0230, 0.0206,  ..., 0.9842, 0.9696, 0.0129],
         [0.0031, 0.0230, 0.0206,  ..., 0.0053, 0.0101, 0.0129],
         [0.0031, 0.0230, 0.0206,  ..., 0.0053, 0.0101, 0.0129],
         [0.0031, 0.9311, 0.9382,  ..., 0.0053, 0.0101, 0.9614]],
        [[0.9552, 0.0190, 0.0280,  ..., 0.0388, 0.0038, 0.0035],
         [0.0145, 0.0190, 0.0280,  ..., 0.0388, 0.0038, 0.0038],
         [0.0158, 0.0190, 0.0280,  ..., 0.0388, 0.9887, 0.9893],
         [0.0145, 0.9430, 0.9160,  ..., 0.8837, 0.0038, 0.0035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0807e-02, 9.0325e-03, 9.7927e-01,  ..., 9.7793e-01,
          1.8770e-02, 2.6531e-02],
         [2.0807e-02, 9.0325e-03, 6.9087e-03,  ..., 7.3580e-03,
          1.8770e-02, 2.6531e-02],
         [9.3758e-01, 9.0325e-03, 6.9087e-03,  ..., 7.3580e-03,
          9.4369e-01, 9.2041e-01],
         [2.0807e-02, 9.7290e-01, 6.9087e-03,  ..., 7.3580e-03,
          1.8770e-02, 2.6531e-02]],
        [[1.9892e-02, 6.2788e-04, 9.9298e-01,  ..., 9.8067e-01,
          1.0429e-03, 1.9510e-02],
         [1.9892e-02, 6.2788e-04, 3.1010e-03,  ..., 7.7884e-03,
          1.0429e-03, 1.9510e-02],
         [9.4032e-01, 6.2788e-04, 1.9582e-03,  ..., 5.7704e-03,
          1.0429e-03, 9.4147e-01],
         [1.9892e-02, 9.9812e-01, 1.9582e-03,  ..., 5.7704e-03,
          9.9687e-01, 1.9510e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:42:31,931 [Process: 0] EPOCH 122:
2024-08-20 17:42:31,933 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9760, 0.0210, 0.0266,  ..., 0.9646, 0.9849, 0.0080],
         [0.0080, 0.0210, 0.0266,  ..., 0.0118, 0.0050, 0.0080],
         [0.0080, 0.0210, 0.0266,  ..., 0.0118, 0.0050, 0.0080],
         [0.0080, 0.9370, 0.9203,  ..., 0.0118, 0.0050, 0.9759]],
        [[0.9299, 0.0178, 0.0810,  ..., 0.0505, 0.0070, 0.0064],
         [0.0234, 0.0178, 0.0656,  ..., 0.0511, 0.0101, 0.0064],
         [0.0234, 0.0178, 0.0982,  ..., 0.0505, 0.9759, 0.9808],
         [0.0234, 0.9467, 0.7552,  ..., 0.8479, 0.0070, 0.0064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3139e-02, 6.7459e-02, 9.4241e-01,  ..., 9.9708e-01,
          1.6413e-02, 2.3373e-02],
         [2.3139e-02, 8.5764e-02, 1.3720e-02,  ..., 9.7456e-04,
          1.6413e-02, 2.3373e-02],
         [9.2889e-01, 6.7459e-02, 1.3720e-02,  ..., 9.7456e-04,
          9.5076e-01, 9.2988e-01],
         [2.4833e-02, 7.7932e-01, 3.0155e-02,  ..., 9.7456e-04,
          1.6413e-02, 2.3373e-02]],
        [[2.7095e-02, 4.3260e-03, 9.8526e-01,  ..., 9.9338e-01,
          4.4865e-03, 4.0789e-02],
         [2.7095e-02, 4.3260e-03, 4.9136e-03,  ..., 2.2076e-03,
          4.4865e-03, 4.0789e-02],
         [9.1871e-01, 4.3260e-03, 4.9136e-03,  ..., 2.2076e-03,
          4.4865e-03, 8.7640e-01],
         [2.7095e-02, 9.8702e-01, 4.9136e-03,  ..., 2.2076e-03,
          9.8654e-01, 4.2024e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:32,986 [Process: 0] Synchronize training processes
2024-08-20 17:42:32,986 [Process: 0] Evaluating...
2024-08-20 17:42:32,988 [Process: 0] EPOCH 123:
2024-08-20 17:42:32,990 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:33,994 [Process: 0] Synchronize training processes
2024-08-20 17:42:33,994 [Process: 0] Evaluating...
2024-08-20 17:42:33,996 [Process: 0] EPOCH 124:
2024-08-20 17:42:33,997 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9908, 0.0215, 0.0646,  ..., 0.9946, 0.9249, 0.0211],
         [0.0031, 0.0190, 0.0646,  ..., 0.0018, 0.0250, 0.0211],
         [0.0031, 0.0190, 0.1012,  ..., 0.0018, 0.0250, 0.0211],
         [0.0031, 0.9404, 0.7695,  ..., 0.0018, 0.0250, 0.9368]],
        [[0.9946, 0.0285, 0.0295,  ..., 0.0218, 0.0064, 0.0213],
         [0.0018, 0.0285, 0.0295,  ..., 0.0218, 0.0064, 0.0213],
         [0.0018, 0.0285, 0.0295,  ..., 0.0218, 0.9807, 0.9360],
         [0.0018, 0.9146, 0.9115,  ..., 0.9345, 0.0064, 0.0213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9740e-02, 3.8307e-02, 9.9138e-01,  ..., 9.8989e-01,
          1.5673e-02, 1.5090e-02],
         [1.9740e-02, 5.1854e-02, 2.8730e-03,  ..., 3.3713e-03,
          1.5673e-02, 1.5090e-02],
         [9.4078e-01, 3.8307e-02, 2.8730e-03,  ..., 3.3713e-03,
          9.5298e-01, 9.5473e-01],
         [1.9740e-02, 8.7153e-01, 2.8730e-03,  ..., 3.3713e-03,
          1.5673e-02, 1.5090e-02]],
        [[2.8708e-02, 5.4613e-03, 9.9747e-01,  ..., 9.8631e-01,
          9.5858e-03, 3.7148e-02],
         [2.8708e-02, 2.0070e-02, 8.4468e-04,  ..., 4.5626e-03,
          9.5858e-03, 3.7148e-02],
         [9.0959e-01, 5.4613e-03, 8.4468e-04,  ..., 4.5626e-03,
          9.5858e-03, 8.8677e-01],
         [3.2995e-02, 9.6901e-01, 8.4468e-04,  ..., 4.5626e-03,
          9.7124e-01, 3.8935e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9819, 0.0362, 0.0436,  ..., 0.9930, 0.6277, 0.0280],
         [0.0060, 0.0362, 0.0436,  ..., 0.0023, 0.2503, 0.0494],
         [0.0060, 0.0362, 0.0471,  ..., 0.0023, 0.0610, 0.0280],
         [0.0060, 0.8914, 0.8658,  ..., 0.0023, 0.0610, 0.8945]],
        [[0.9926, 0.0099, 0.0213,  ..., 0.0844, 0.0056, 0.0067],
         [0.0025, 0.0099, 0.0217,  ..., 0.0815, 0.0056, 0.0067],
         [0.0025, 0.0099, 0.0213,  ..., 0.1391, 0.9832, 0.9800],
         [0.0025, 0.9704, 0.9357,  ..., 0.6949, 0.0056, 0.0067]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0163, 0.0353, 0.9523,  ..., 0.9823, 0.0233, 0.0176],
         [0.0163, 0.0353, 0.0238,  ..., 0.0059, 0.0233, 0.0176],
         [0.9511, 0.0353, 0.0119,  ..., 0.0059, 0.9298, 0.9472],
         [0.0163, 0.8941, 0.0119,  ..., 0.0059, 0.0236, 0.0176]],
        [[0.0471, 0.0095, 0.9893,  ..., 0.9955, 0.0064, 0.0295],
         [0.0471, 0.0095, 0.0036,  ..., 0.0015, 0.0064, 0.0295],
         [0.8467, 0.0095, 0.0036,  ..., 0.0015, 0.0064, 0.9063],
         [0.0591, 0.9716, 0.0036,  ..., 0.0015, 0.9809, 0.0346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:42:35,027 [Process: 0] Synchronize training processes
2024-08-20 17:42:35,028 [Process: 0] Evaluating...
2024-08-20 17:42:35,029 [Process: 0] EPOCH 125:
2024-08-20 17:42:35,031 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:36,057 [Process: 0] Synchronize training processes
2024-08-20 17:42:36,058 [Process: 0] Evaluating...
2024-08-20 17:42:36,060 [Process: 0] EPOCH 126:
2024-08-20 17:42:36,061 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7078e-01, 2.9467e-02, 3.3292e-02,  ..., 9.9717e-01,
          7.6820e-01, 2.0246e-02],
         [9.5055e-03, 2.9467e-02, 3.3292e-02,  ..., 9.4324e-04,
          1.1581e-01, 2.0246e-02],
         [1.0209e-02, 2.9467e-02, 3.3292e-02,  ..., 9.4324e-04,
          5.7997e-02, 2.0246e-02],
         [9.5055e-03, 9.1160e-01, 9.0012e-01,  ..., 9.4324e-04,
          5.7997e-02, 9.3926e-01]],
        [[9.6055e-01, 5.0460e-02, 3.0107e-02,  ..., 1.1662e-01,
          8.1503e-03, 6.9918e-02],
         [1.2918e-02, 5.3968e-02, 3.0107e-02,  ..., 1.1659e-01,
          8.1503e-03, 6.8598e-02],
         [1.3618e-02, 5.0460e-02, 3.0107e-02,  ..., 5.1386e-01,
          9.7555e-01, 7.8561e-01],
         [1.2918e-02, 8.4511e-01, 9.0968e-01,  ..., 2.5293e-01,
          8.1503e-03, 7.5871e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0248, 0.0435, 0.9917,  ..., 0.9911, 0.0119, 0.0222],
         [0.0248, 0.0402, 0.0045,  ..., 0.0030, 0.0134, 0.0222],
         [0.9255, 0.0361, 0.0019,  ..., 0.0030, 0.9628, 0.9335],
         [0.0248, 0.8802, 0.0019,  ..., 0.0030, 0.0119, 0.0222]],
        [[0.0283, 0.0072, 0.9934,  ..., 0.9940, 0.0044, 0.0145],
         [0.0283, 0.0078, 0.0022,  ..., 0.0020, 0.0044, 0.0145],
         [0.9151, 0.0072, 0.0022,  ..., 0.0020, 0.0044, 0.9566],
         [0.0283, 0.9778, 0.0022,  ..., 0.0020, 0.9869, 0.0145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9758, 0.0588, 0.0251,  ..., 0.9859, 0.9593, 0.0640],
         [0.0081, 0.0416, 0.0251,  ..., 0.0047, 0.0136, 0.0640],
         [0.0081, 0.0416, 0.0251,  ..., 0.0047, 0.0136, 0.0640],
         [0.0081, 0.8580, 0.9246,  ..., 0.0047, 0.0136, 0.8080]],
        [[0.9602, 0.0409, 0.0172,  ..., 0.0667, 0.0927, 0.0713],
         [0.0131, 0.0409, 0.0172,  ..., 0.0667, 0.0881, 0.0708],
         [0.0135, 0.0507, 0.0172,  ..., 0.0732, 0.6724, 0.7541],
         [0.0131, 0.8675, 0.9484,  ..., 0.7935, 0.1469, 0.1038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0535, 0.0109, 0.9683,  ..., 0.9811, 0.0105, 0.0203],
         [0.0532, 0.0311, 0.0106,  ..., 0.0083, 0.0105, 0.0203],
         [0.8243, 0.0109, 0.0106,  ..., 0.0053, 0.9685, 0.9390],
         [0.0689, 0.9471, 0.0106,  ..., 0.0053, 0.0105, 0.0203]],
        [[0.0159, 0.0083, 0.9194,  ..., 0.9793, 0.0022, 0.0228],
         [0.0159, 0.0130, 0.0196,  ..., 0.0058, 0.0022, 0.0228],
         [0.9523, 0.0083, 0.0196,  ..., 0.0058, 0.0022, 0.9316],
         [0.0159, 0.9704, 0.0414,  ..., 0.0090, 0.9934, 0.0228]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:42:37,062 [Process: 0] Synchronize training processes
2024-08-20 17:42:37,062 [Process: 0] Evaluating...
2024-08-20 17:42:37,064 [Process: 0] EPOCH 127:
2024-08-20 17:42:37,066 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:38,065 [Process: 0] Synchronize training processes
2024-08-20 17:42:38,065 [Process: 0] Evaluating...
2024-08-20 17:42:38,067 [Process: 0] EPOCH 128:
2024-08-20 17:42:38,069 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9924, 0.0461, 0.0228,  ..., 0.9879, 0.9121, 0.0157],
         [0.0030, 0.0444, 0.0228,  ..., 0.0040, 0.0350, 0.0152],
         [0.0023, 0.0444, 0.0228,  ..., 0.0040, 0.0264, 0.0152],
         [0.0023, 0.8651, 0.9315,  ..., 0.0040, 0.0264, 0.9540]],
        [[0.7635, 0.0207, 0.0257,  ..., 0.1356, 0.0113, 0.0034],
         [0.1112, 0.0207, 0.0348,  ..., 0.0995, 0.0117, 0.0034],
         [0.0643, 0.0207, 0.0257,  ..., 0.1399, 0.9656, 0.9897],
         [0.0610, 0.9379, 0.9137,  ..., 0.6249, 0.0113, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0747, 0.0140, 0.9940,  ..., 0.9238, 0.0287, 0.0148],
         [0.0728, 0.0425, 0.0020,  ..., 0.0452, 0.0287, 0.0148],
         [0.7589, 0.0140, 0.0020,  ..., 0.0155, 0.9139, 0.9557],
         [0.0936, 0.9296, 0.0020,  ..., 0.0155, 0.0287, 0.0148]],
        [[0.0208, 0.0142, 0.9916,  ..., 0.9895, 0.0056, 0.0079],
         [0.0208, 0.0142, 0.0028,  ..., 0.0035, 0.0047, 0.0079],
         [0.9375, 0.0142, 0.0028,  ..., 0.0035, 0.0047, 0.9762],
         [0.0208, 0.9574, 0.0028,  ..., 0.0035, 0.9849, 0.0079]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9869, 0.0359, 0.0102,  ..., 0.9781, 0.7507, 0.0028],
         [0.0044, 0.0260, 0.0102,  ..., 0.0055, 0.2002, 0.0028],
         [0.0044, 0.0260, 0.0102,  ..., 0.0057, 0.0245, 0.0028],
         [0.0044, 0.9122, 0.9695,  ..., 0.0106, 0.0245, 0.9917]],
        [[0.9447, 0.0077, 0.0256,  ..., 0.1411, 0.0068, 0.0019],
         [0.0297, 0.0077, 0.0256,  ..., 0.1093, 0.0068, 0.0033],
         [0.0128, 0.0077, 0.0256,  ..., 0.1364, 0.9796, 0.9928],
         [0.0128, 0.9769, 0.9233,  ..., 0.6132, 0.0068, 0.0019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9956e-02, 4.1045e-02, 9.7680e-01,  ..., 9.8897e-01,
          1.2802e-02, 4.3274e-02],
         [4.9956e-02, 1.0270e-01, 7.7326e-03,  ..., 2.8318e-03,
          1.2802e-02, 4.3274e-02],
         [8.3555e-01, 4.1045e-02, 7.7326e-03,  ..., 2.8318e-03,
          9.6159e-01, 8.7018e-01],
         [6.4533e-02, 8.1521e-01, 7.7326e-03,  ..., 5.3681e-03,
          1.2802e-02, 4.3274e-02]],
        [[2.1756e-02, 2.9292e-02, 9.5217e-01,  ..., 9.9002e-01,
          8.8580e-05, 7.4403e-03],
         [2.0776e-02, 1.2235e-01, 1.5816e-02,  ..., 3.3261e-03,
          8.8580e-05, 7.4403e-03],
         [9.3669e-01, 2.9292e-02, 1.5816e-02,  ..., 3.3261e-03,
          8.8580e-05, 9.7768e-01],
         [2.0776e-02, 8.1907e-01, 1.6196e-02,  ..., 3.3261e-03,
          9.9973e-01, 7.4403e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:42:39,082 [Process: 0] Synchronize training processes
2024-08-20 17:42:39,082 [Process: 0] Evaluating...
2024-08-20 17:42:39,084 [Process: 0] EPOCH 129:
2024-08-20 17:42:39,086 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:40,078 [Process: 0] Synchronize training processes
2024-08-20 17:42:40,078 [Process: 0] Evaluating...
2024-08-20 17:42:40,080 [Process: 0] EPOCH 130:
2024-08-20 17:42:40,082 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9619, 0.0121, 0.0232,  ..., 0.9885, 0.9231, 0.0206],
         [0.0137, 0.0121, 0.0232,  ..., 0.0038, 0.0394, 0.0206],
         [0.0122, 0.0121, 0.0232,  ..., 0.0038, 0.0188, 0.0206],
         [0.0122, 0.9636, 0.9303,  ..., 0.0038, 0.0188, 0.9382]],
        [[0.6495, 0.0124, 0.0167,  ..., 0.0424, 0.0056, 0.0015],
         [0.1895, 0.0124, 0.0141,  ..., 0.0424, 0.0056, 0.0015],
         [0.0890, 0.0124, 0.0141,  ..., 0.0424, 0.9831, 0.9956],
         [0.0720, 0.9628, 0.9551,  ..., 0.8728, 0.0056, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1509, 0.0141, 0.9947,  ..., 0.9942, 0.0322, 0.0097],
         [0.1155, 0.0184, 0.0018,  ..., 0.0019, 0.0322, 0.0097],
         [0.5394, 0.0141, 0.0018,  ..., 0.0019, 0.9035, 0.9710],
         [0.1941, 0.9535, 0.0018,  ..., 0.0019, 0.0322, 0.0097]],
        [[0.0197, 0.0056, 0.8966,  ..., 0.9510, 0.0050, 0.0230],
         [0.0197, 0.0056, 0.0465,  ..., 0.0163, 0.0050, 0.0230],
         [0.9408, 0.0056, 0.0285,  ..., 0.0163, 0.0050, 0.9310],
         [0.0197, 0.9833, 0.0285,  ..., 0.0164, 0.9850, 0.0230]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9808, 0.0206, 0.0229,  ..., 0.9862, 0.9204, 0.0415],
         [0.0077, 0.0205, 0.0229,  ..., 0.0046, 0.0451, 0.0415],
         [0.0057, 0.0205, 0.0273,  ..., 0.0046, 0.0172, 0.0415],
         [0.0057, 0.9384, 0.9269,  ..., 0.0046, 0.0172, 0.8754]],
        [[0.7385, 0.0083, 0.0225,  ..., 0.0756, 0.0045, 0.0047],
         [0.1404, 0.0083, 0.0225,  ..., 0.0756, 0.0045, 0.0047],
         [0.0664, 0.0083, 0.0225,  ..., 0.0756, 0.9864, 0.9859],
         [0.0547, 0.9752, 0.9324,  ..., 0.7732, 0.0045, 0.0047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1810, 0.0048, 0.9964,  ..., 0.9913, 0.0257, 0.0263],
         [0.1234, 0.0048, 0.0012,  ..., 0.0025, 0.0254, 0.0263],
         [0.3977, 0.0048, 0.0012,  ..., 0.0025, 0.9235, 0.9210],
         [0.2979, 0.9857, 0.0012,  ..., 0.0036, 0.0254, 0.0263]],
        [[0.0253, 0.0017, 0.9834,  ..., 0.9790, 0.0073, 0.0571],
         [0.0253, 0.0017, 0.0055,  ..., 0.0070, 0.0073, 0.0464],
         [0.9240, 0.0017, 0.0055,  ..., 0.0070, 0.0073, 0.8500],
         [0.0253, 0.9948, 0.0055,  ..., 0.0070, 0.9782, 0.0465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:42:41,063 [Process: 0] Synchronize training processes
2024-08-20 17:42:41,064 [Process: 0] Evaluating...
2024-08-20 17:42:41,066 [Process: 0] EPOCH 131:
2024-08-20 17:42:41,067 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:42,096 [Process: 0] Synchronize training processes
2024-08-20 17:42:42,096 [Process: 0] Evaluating...
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9727e-01, 3.7608e-02, 3.3681e-02,  ..., 9.9150e-01,
          9.4760e-01, 3.9503e-02],
         [9.0870e-04, 5.8697e-02, 3.3681e-02,  ..., 2.8342e-03,
          2.2598e-02, 5.0464e-02],
         [9.0870e-04, 3.7608e-02, 3.4154e-02,  ..., 2.8342e-03,
          1.4899e-02, 4.5590e-02],
         [9.0870e-04, 8.6609e-01, 8.9848e-01,  ..., 2.8342e-03,
          1.4899e-02, 8.6444e-01]],
        [[9.5557e-01, 2.7171e-02, 2.9378e-02,  ..., 7.1878e-02,
          6.9941e-03, 4.4122e-03],
         [1.4811e-02, 2.7171e-02, 4.7454e-02,  ..., 6.7803e-02,
          6.9941e-03, 4.4122e-03],
         [1.4811e-02, 2.7171e-02, 2.9378e-02,  ..., 8.3109e-02,
          9.7902e-01, 9.8676e-01],
         [1.4811e-02, 9.1849e-01, 8.9379e-01,  ..., 7.7721e-01,
          6.9941e-03, 4.4122e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2946e-01, 1.4307e-02, 9.8543e-01,  ..., 9.9860e-01,
          1.7251e-02, 1.6214e-02],
         [1.0005e-01, 3.4070e-02, 4.8551e-03,  ..., 4.6801e-04,
          1.7251e-02, 1.6214e-02],
         [5.7848e-01, 1.4307e-02, 4.8551e-03,  ..., 4.6801e-04,
          9.4825e-01, 9.5136e-01],
         [1.9201e-01, 9.3732e-01, 4.8551e-03,  ..., 4.6801e-04,
          1.7251e-02, 1.6214e-02]],
        [[1.0584e-02, 1.5187e-02, 9.7759e-01,  ..., 9.4332e-01,
          3.0476e-03, 5.4303e-03],
         [1.0584e-02, 1.5187e-02, 7.4685e-03,  ..., 2.4457e-02,
          3.0476e-03, 5.4303e-03],
         [9.6825e-01, 1.5187e-02, 7.4685e-03,  ..., 1.6111e-02,
          3.0476e-03, 9.8371e-01],
         [1.0584e-02, 9.5444e-01, 7.4685e-03,  ..., 1.6111e-02,
          9.9086e-01, 5.4303e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:42:44,014 [Process: 0] EPOCH 132:
2024-08-20 17:42:44,016 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9769, 0.0089, 0.0364,  ..., 0.9561, 0.7783, 0.0165],
         [0.0077, 0.0089, 0.0364,  ..., 0.0245, 0.1506, 0.0165],
         [0.0077, 0.0089, 0.0364,  ..., 0.0097, 0.0356, 0.0165],
         [0.0077, 0.9732, 0.8907,  ..., 0.0097, 0.0356, 0.9506]],
        [[0.9568, 0.0189, 0.0221,  ..., 0.1372, 0.0034, 0.0038],
         [0.0229, 0.0189, 0.0276,  ..., 0.1055, 0.0034, 0.0038],
         [0.0101, 0.0189, 0.0221,  ..., 0.1642, 0.9897, 0.9886],
         [0.0101, 0.9434, 0.9282,  ..., 0.5932, 0.0034, 0.0038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0130, 0.0015, 0.9927,  ..., 0.9869, 0.0110, 0.0119],
         [0.0124, 0.0015, 0.0024,  ..., 0.0029, 0.0110, 0.0119],
         [0.9622, 0.0015, 0.0024,  ..., 0.0029, 0.9671, 0.9642],
         [0.0124, 0.9956, 0.0024,  ..., 0.0073, 0.0110, 0.0119]],
        [[0.0344, 0.0084, 0.9909,  ..., 0.9929, 0.0020, 0.0150],
         [0.0344, 0.0084, 0.0030,  ..., 0.0024, 0.0020, 0.0150],
         [0.8969, 0.0084, 0.0030,  ..., 0.0024, 0.0020, 0.9549],
         [0.0344, 0.9748, 0.0030,  ..., 0.0024, 0.9941, 0.0150]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:45,046 [Process: 0] Synchronize training processes
2024-08-20 17:42:45,046 [Process: 0] Evaluating...
2024-08-20 17:42:45,048 [Process: 0] EPOCH 133:
2024-08-20 17:42:45,049 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:46,056 [Process: 0] Synchronize training processes
2024-08-20 17:42:46,056 [Process: 0] Evaluating...
2024-08-20 17:42:46,058 [Process: 0] EPOCH 134:
2024-08-20 17:42:46,060 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9798, 0.0197, 0.0179,  ..., 0.9923, 0.6875, 0.0257],
         [0.0067, 0.0197, 0.0179,  ..., 0.0026, 0.2430, 0.0257],
         [0.0067, 0.0197, 0.0179,  ..., 0.0026, 0.0347, 0.0257],
         [0.0067, 0.9408, 0.9464,  ..., 0.0026, 0.0347, 0.9228]],
        [[0.9304, 0.0192, 0.0393,  ..., 0.0515, 0.0017, 0.0015],
         [0.0199, 0.0169, 0.0414,  ..., 0.0504, 0.0017, 0.0015],
         [0.0246, 0.0169, 0.0393,  ..., 0.0556, 0.9948, 0.9954],
         [0.0250, 0.9470, 0.8801,  ..., 0.8425, 0.0017, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0139, 0.0256, 0.9966,  ..., 0.9962, 0.0253, 0.0132],
         [0.0139, 0.0346, 0.0011,  ..., 0.0013, 0.0253, 0.0132],
         [0.9584, 0.0256, 0.0011,  ..., 0.0013, 0.9241, 0.9603],
         [0.0139, 0.9141, 0.0011,  ..., 0.0013, 0.0253, 0.0132]],
        [[0.0084, 0.0097, 0.9655,  ..., 0.9803, 0.0018, 0.0067],
         [0.0084, 0.0097, 0.0115,  ..., 0.0079, 0.0018, 0.0067],
         [0.9749, 0.0097, 0.0115,  ..., 0.0059, 0.0018, 0.9799],
         [0.0084, 0.9710, 0.0115,  ..., 0.0059, 0.9946, 0.0067]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9950, 0.0233, 0.0409,  ..., 0.9948, 0.7955, 0.0135],
         [0.0017, 0.0233, 0.0346,  ..., 0.0017, 0.1078, 0.0135],
         [0.0017, 0.0233, 0.0396,  ..., 0.0017, 0.0486, 0.0135],
         [0.0017, 0.9300, 0.8849,  ..., 0.0017, 0.0481, 0.9595]],
        [[0.9419, 0.0520, 0.0213,  ..., 0.0780, 0.0060, 0.0053],
         [0.0194, 0.0468, 0.0302,  ..., 0.0604, 0.0060, 0.0068],
         [0.0194, 0.0560, 0.0213,  ..., 0.0643, 0.9821, 0.9827],
         [0.0194, 0.8452, 0.9272,  ..., 0.7973, 0.0060, 0.0053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0117, 0.0105, 0.8752,  ..., 0.9157, 0.0193, 0.0389],
         [0.0117, 0.0175, 0.0481,  ..., 0.0324, 0.0193, 0.0389],
         [0.9648, 0.0105, 0.0371,  ..., 0.0259, 0.9421, 0.8783],
         [0.0117, 0.9615, 0.0396,  ..., 0.0259, 0.0193, 0.0440]],
        [[0.0176, 0.0559, 0.9847,  ..., 0.9529, 0.0057, 0.0090],
         [0.0176, 0.0949, 0.0051,  ..., 0.0157, 0.0051, 0.0090],
         [0.9472, 0.0559, 0.0051,  ..., 0.0157, 0.0051, 0.9730],
         [0.0176, 0.7932, 0.0051,  ..., 0.0157, 0.9841, 0.0090]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:42:47,068 [Process: 0] Synchronize training processes
2024-08-20 17:42:47,068 [Process: 0] Evaluating...
2024-08-20 17:42:47,070 [Process: 0] EPOCH 135:
2024-08-20 17:42:47,072 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:48,071 [Process: 0] Synchronize training processes
2024-08-20 17:42:48,071 [Process: 0] Evaluating...
2024-08-20 17:42:48,073 [Process: 0] EPOCH 136:
2024-08-20 17:42:48,075 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9963, 0.0383, 0.0181,  ..., 0.9854, 0.9699, 0.0208],
         [0.0012, 0.0383, 0.0181,  ..., 0.0049, 0.0117, 0.0205],
         [0.0012, 0.0391, 0.0181,  ..., 0.0049, 0.0092, 0.0205],
         [0.0012, 0.8844, 0.9458,  ..., 0.0049, 0.0092, 0.9383]],
        [[0.7881, 0.0188, 0.0205,  ..., 0.1182, 0.0064, 0.0059],
         [0.0899, 0.0188, 0.0270,  ..., 0.0832, 0.0064, 0.0059],
         [0.0640, 0.0188, 0.0205,  ..., 0.1125, 0.9809, 0.9823],
         [0.0579, 0.9435, 0.9320,  ..., 0.6860, 0.0064, 0.0059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6004e-03, 6.3835e-02, 9.5348e-01,  ..., 9.9830e-01,
          2.9577e-02, 2.9796e-02],
         [9.6004e-03, 4.6848e-02, 1.4005e-02,  ..., 5.6743e-04,
          2.9577e-02, 2.9796e-02],
         [9.7120e-01, 4.6848e-02, 1.4005e-02,  ..., 5.6743e-04,
          9.0699e-01, 9.1061e-01],
         [9.6004e-03, 8.4247e-01, 1.8513e-02,  ..., 5.6743e-04,
          3.3858e-02, 2.9796e-02]],
        [[1.4301e-02, 1.0793e-02, 8.9588e-01,  ..., 9.9467e-01,
          1.5453e-02, 9.4887e-03],
         [1.4301e-02, 1.9827e-02, 3.4706e-02,  ..., 1.7774e-03,
          1.1508e-02, 9.4887e-03],
         [9.5710e-01, 1.0793e-02, 3.4706e-02,  ..., 1.7774e-03,
          1.1508e-02, 9.7153e-01],
         [1.4301e-02, 9.5859e-01, 3.4706e-02,  ..., 1.7774e-03,
          9.6153e-01, 9.4887e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9806, 0.0364, 0.0139,  ..., 0.9896, 0.4830, 0.0098],
         [0.0065, 0.0364, 0.0139,  ..., 0.0035, 0.4052, 0.0098],
         [0.0065, 0.0404, 0.0139,  ..., 0.0035, 0.0559, 0.0098],
         [0.0065, 0.8868, 0.9584,  ..., 0.0035, 0.0559, 0.9705]],
        [[0.9854, 0.0266, 0.0444,  ..., 0.0361, 0.0066, 0.0035],
         [0.0049, 0.0308, 0.0444,  ..., 0.0311, 0.0066, 0.0035],
         [0.0049, 0.0266, 0.0444,  ..., 0.0311, 0.9803, 0.9894],
         [0.0049, 0.9160, 0.8669,  ..., 0.9018, 0.0066, 0.0035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0498, 0.0102, 0.9932,  ..., 0.9822, 0.0234, 0.0273],
         [0.0496, 0.0102, 0.0023,  ..., 0.0059, 0.0234, 0.0273],
         [0.8050, 0.0102, 0.0023,  ..., 0.0059, 0.9294, 0.9182],
         [0.0956, 0.9695, 0.0023,  ..., 0.0059, 0.0238, 0.0273]],
        [[0.0321, 0.0187, 0.9712,  ..., 0.9317, 0.0092, 0.0202],
         [0.0276, 0.0431, 0.0095,  ..., 0.0228, 0.0092, 0.0202],
         [0.9089, 0.0187, 0.0095,  ..., 0.0228, 0.0092, 0.9393],
         [0.0314, 0.9194, 0.0099,  ..., 0.0228, 0.9723, 0.0202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:42:49,086 [Process: 0] Synchronize training processes
2024-08-20 17:42:49,086 [Process: 0] Evaluating...
2024-08-20 17:42:49,088 [Process: 0] EPOCH 137:
2024-08-20 17:42:49,090 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:50,139 [Process: 0] Synchronize training processes
2024-08-20 17:42:50,139 [Process: 0] Evaluating...
2024-08-20 17:42:50,141 [Process: 0] EPOCH 138:
2024-08-20 17:42:50,142 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9924, 0.0208, 0.0224,  ..., 0.9396, 0.3062, 0.0147],
         [0.0025, 0.0208, 0.0224,  ..., 0.0262, 0.6505, 0.0147],
         [0.0025, 0.0208, 0.0224,  ..., 0.0171, 0.0216, 0.0147],
         [0.0025, 0.9377, 0.9328,  ..., 0.0171, 0.0216, 0.9559]],
        [[0.9876, 0.0217, 0.0215,  ..., 0.0976, 0.0020, 0.0061],
         [0.0041, 0.0217, 0.0215,  ..., 0.0631, 0.0026, 0.0072],
         [0.0041, 0.0217, 0.0215,  ..., 0.0770, 0.9934, 0.9807],
         [0.0041, 0.9348, 0.9356,  ..., 0.7623, 0.0020, 0.0061]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0260, 0.0148, 0.9895,  ..., 0.9936, 0.0191, 0.0126],
         [0.0260, 0.0148, 0.0035,  ..., 0.0020, 0.0191, 0.0126],
         [0.9219, 0.0148, 0.0035,  ..., 0.0020, 0.9426, 0.9623],
         [0.0260, 0.9557, 0.0035,  ..., 0.0025, 0.0191, 0.0126]],
        [[0.0259, 0.0020, 0.9922,  ..., 0.9900, 0.0015, 0.0123],
         [0.0209, 0.0020, 0.0026,  ..., 0.0033, 0.0015, 0.0123],
         [0.9323, 0.0020, 0.0026,  ..., 0.0033, 0.0015, 0.9632],
         [0.0209, 0.9941, 0.0026,  ..., 0.0035, 0.9955, 0.0123]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9800, 0.0182, 0.0238,  ..., 0.9960, 0.9157, 0.0306],
         [0.0067, 0.0165, 0.0238,  ..., 0.0013, 0.0428, 0.0405],
         [0.0067, 0.0165, 0.0238,  ..., 0.0013, 0.0207, 0.0306],
         [0.0067, 0.9488, 0.9285,  ..., 0.0013, 0.0207, 0.8983]],
        [[0.9160, 0.0327, 0.0181,  ..., 0.0175, 0.0063, 0.0101],
         [0.0280, 0.0327, 0.0181,  ..., 0.0175, 0.0111, 0.0401],
         [0.0280, 0.0327, 0.0191,  ..., 0.0175, 0.9763, 0.9396],
         [0.0280, 0.9020, 0.9446,  ..., 0.9474, 0.0063, 0.0101]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1109e-02, 7.0465e-03, 9.9785e-01,  ..., 9.9038e-01,
          3.1319e-02, 1.8018e-02],
         [2.1109e-02, 1.3752e-02, 7.1648e-04,  ..., 2.5940e-03,
          3.1319e-02, 1.8018e-02],
         [9.3274e-01, 7.0465e-03, 7.1648e-04,  ..., 2.5940e-03,
          9.0604e-01, 9.4595e-01],
         [2.5044e-02, 9.7216e-01, 7.1648e-04,  ..., 4.4288e-03,
          3.1319e-02, 1.8018e-02]],
        [[1.0361e-02, 6.5519e-03, 9.8042e-01,  ..., 9.8910e-01,
          2.2985e-03, 1.9355e-02],
         [1.0361e-02, 6.5519e-03, 6.5262e-03,  ..., 3.6339e-03,
          2.2985e-03, 1.9355e-02],
         [9.6892e-01, 6.5519e-03, 6.5262e-03,  ..., 3.6339e-03,
          2.2985e-03, 9.4194e-01],
         [1.0361e-02, 9.8034e-01, 6.5262e-03,  ..., 3.6339e-03,
          9.9310e-01, 1.9355e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:42:51,143 [Process: 0] Synchronize training processes
2024-08-20 17:42:51,143 [Process: 0] Evaluating...
2024-08-20 17:42:51,145 [Process: 0] EPOCH 139:
2024-08-20 17:42:51,147 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:52,148 [Process: 0] Synchronize training processes
2024-08-20 17:42:52,148 [Process: 0] Evaluating...
2024-08-20 17:42:52,150 [Process: 0] EPOCH 140:
2024-08-20 17:42:52,151 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9829, 0.0175, 0.0038,  ..., 0.9956, 0.9391, 0.0220],
         [0.0057, 0.0175, 0.0038,  ..., 0.0015, 0.0224, 0.0220],
         [0.0057, 0.0175, 0.0038,  ..., 0.0015, 0.0192, 0.0220],
         [0.0057, 0.9476, 0.9885,  ..., 0.0015, 0.0192, 0.9341]],
        [[0.9119, 0.0193, 0.0290,  ..., 0.0482, 0.0029, 0.0044],
         [0.0343, 0.0289, 0.0229,  ..., 0.0482, 0.0032, 0.0044],
         [0.0269, 0.0193, 0.0229,  ..., 0.0482, 0.9911, 0.9868],
         [0.0269, 0.9326, 0.9253,  ..., 0.8554, 0.0029, 0.0044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0667, 0.0176, 0.9782,  ..., 0.9932, 0.0337, 0.0086],
         [0.0572, 0.0337, 0.0072,  ..., 0.0023, 0.0337, 0.0086],
         [0.7845, 0.0176, 0.0072,  ..., 0.0023, 0.8963, 0.9742],
         [0.0916, 0.9311, 0.0075,  ..., 0.0023, 0.0364, 0.0086]],
        [[0.0081, 0.0230, 0.9107,  ..., 0.9906, 0.0170, 0.0248],
         [0.0081, 0.0182, 0.0288,  ..., 0.0031, 0.0132, 0.0240],
         [0.9757, 0.0182, 0.0288,  ..., 0.0031, 0.0132, 0.9272],
         [0.0081, 0.9406, 0.0318,  ..., 0.0031, 0.9565, 0.0240]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9563, 0.0338, 0.0251,  ..., 0.9771, 0.9417, 0.0143],
         [0.0146, 0.0338, 0.0251,  ..., 0.0076, 0.0276, 0.0143],
         [0.0146, 0.0338, 0.0251,  ..., 0.0076, 0.0153, 0.0143],
         [0.0146, 0.8985, 0.9246,  ..., 0.0076, 0.0153, 0.9571]],
        [[0.9766, 0.0123, 0.0073,  ..., 0.0844, 0.0110, 0.0099],
         [0.0080, 0.0123, 0.0073,  ..., 0.0749, 0.0110, 0.0118],
         [0.0077, 0.0123, 0.0073,  ..., 0.0749, 0.9670, 0.9684],
         [0.0077, 0.9632, 0.9782,  ..., 0.7659, 0.0110, 0.0099]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-20 17:42:53,186 [Process: 0] Synchronize training processes
2024-08-20 17:42:53,186 [Process: 0] Evaluating...
2024-08-20 17:42:53,188 [Process: 0] EPOCH 141:
2024-08-20 17:42:53,189 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:54,246 [Process: 0] Synchronize training processes
2024-08-20 17:42:54,246 [Process: 0] Evaluating...
tensor([[[0.0437, 0.0950, 0.9513,  ..., 0.9783, 0.0123, 0.0071],
         [0.0437, 0.0950, 0.0140,  ..., 0.0067, 0.0123, 0.0071],
         [0.8650, 0.0733, 0.0140,  ..., 0.0067, 0.9632, 0.9788],
         [0.0477, 0.7367, 0.0206,  ..., 0.0082, 0.0123, 0.0071]],
        [[0.0226, 0.0074, 0.9911,  ..., 0.9544, 0.0032, 0.0185],
         [0.0191, 0.0074, 0.0030,  ..., 0.0152, 0.0032, 0.0185],
         [0.9392, 0.0074, 0.0030,  ..., 0.0152, 0.0032, 0.9444],
         [0.0191, 0.9779, 0.0030,  ..., 0.0152, 0.9904, 0.0185]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9855, 0.0196, 0.0098,  ..., 0.9946, 0.8845, 0.0119],
         [0.0048, 0.0196, 0.0098,  ..., 0.0018, 0.0467, 0.0119],
         [0.0048, 0.0196, 0.0098,  ..., 0.0018, 0.0387, 0.0119],
         [0.0048, 0.9413, 0.9706,  ..., 0.0018, 0.0302, 0.9642]],
        [[0.9895, 0.0128, 0.0179,  ..., 0.1426, 0.0011, 0.0115],
         [0.0035, 0.0128, 0.0179,  ..., 0.0829, 0.0011, 0.0115],
         [0.0036, 0.0128, 0.0179,  ..., 0.0852, 0.9968, 0.9656],
         [0.0035, 0.9617, 0.9464,  ..., 0.6893, 0.0011, 0.0115]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0058, 0.0034, 0.9961,  ..., 0.9856, 0.0121, 0.0130],
         [0.0058, 0.0046, 0.0013,  ..., 0.0044, 0.0121, 0.0130],
         [0.9825, 0.0034, 0.0013,  ..., 0.0044, 0.9638, 0.9609],
         [0.0058, 0.9885, 0.0013,  ..., 0.0056, 0.0121, 0.0130]],
        [[0.0192, 0.0057, 0.9857,  ..., 0.9357, 0.0112, 0.0311],
         [0.0192, 0.0057, 0.0047,  ..., 0.0203, 0.0112, 0.0307],
         [0.9424, 0.0057, 0.0047,  ..., 0.0203, 0.0112, 0.9075],
         [0.0192, 0.9829, 0.0050,  ..., 0.0237, 0.9665, 0.0307]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:42:56,135 [Process: 0] EPOCH 142:
2024-08-20 17:42:56,137 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8599, 0.0122, 0.0216,  ..., 0.9226, 0.9704, 0.0146],
         [0.0436, 0.0122, 0.0263,  ..., 0.0348, 0.0099, 0.0146],
         [0.0520, 0.0122, 0.0216,  ..., 0.0231, 0.0099, 0.0146],
         [0.0445, 0.9635, 0.9304,  ..., 0.0195, 0.0099, 0.9562]],
        [[0.9935, 0.0181, 0.0493,  ..., 0.1583, 0.0055, 0.0129],
         [0.0022, 0.0181, 0.0601,  ..., 0.0861, 0.0055, 0.0129],
         [0.0022, 0.0181, 0.0493,  ..., 0.0861, 0.9836, 0.9612],
         [0.0022, 0.9456, 0.8412,  ..., 0.6695, 0.0055, 0.0129]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0113e-02, 2.1809e-03, 9.9795e-01,  ..., 9.2402e-01,
          2.1277e-02, 9.2545e-03],
         [2.7664e-02, 2.1809e-03, 6.8444e-04,  ..., 2.8807e-02,
          2.1277e-02, 9.2545e-03],
         [9.1093e-01, 2.1809e-03, 6.8444e-04,  ..., 2.3586e-02,
          9.3448e-01, 9.7224e-01],
         [3.1293e-02, 9.9346e-01, 6.8444e-04,  ..., 2.3586e-02,
          2.2961e-02, 9.2545e-03]],
        [[7.1006e-02, 1.0825e-02, 9.7055e-01,  ..., 9.9704e-01,
          1.0334e-02, 1.0938e-02],
         [6.5144e-02, 1.0825e-02, 9.8160e-03,  ..., 9.8602e-04,
          1.0334e-02, 1.0938e-02],
         [7.7592e-01, 1.0825e-02, 9.8160e-03,  ..., 9.8602e-04,
          1.0334e-02, 9.6719e-01],
         [8.7935e-02, 9.6752e-01, 9.8160e-03,  ..., 9.8602e-04,
          9.6900e-01, 1.0938e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:42:57,191 [Process: 0] Synchronize training processes
2024-08-20 17:42:57,192 [Process: 0] Evaluating...
2024-08-20 17:42:57,193 [Process: 0] EPOCH 143:
2024-08-20 17:42:57,195 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:42:58,249 [Process: 0] Synchronize training processes
2024-08-20 17:42:58,249 [Process: 0] Evaluating...
2024-08-20 17:42:58,251 [Process: 0] EPOCH 144:
2024-08-20 17:42:58,253 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9902, 0.0042, 0.0127,  ..., 0.9913, 0.9418, 0.0347],
         [0.0033, 0.0042, 0.0127,  ..., 0.0029, 0.0223, 0.0400],
         [0.0033, 0.0042, 0.0127,  ..., 0.0029, 0.0180, 0.0347],
         [0.0033, 0.9874, 0.9618,  ..., 0.0029, 0.0180, 0.8907]],
        [[0.9868, 0.0318, 0.0217,  ..., 0.3277, 0.0053, 0.0022],
         [0.0044, 0.0318, 0.0230,  ..., 0.1229, 0.0053, 0.0022],
         [0.0044, 0.0318, 0.0217,  ..., 0.2135, 0.9841, 0.9934],
         [0.0044, 0.9047, 0.9336,  ..., 0.3359, 0.0053, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.1053e-03, 6.5185e-03, 9.7522e-01,  ..., 9.9082e-01,
          1.7913e-02, 2.4287e-02],
         [6.1053e-03, 6.5185e-03, 8.1292e-03,  ..., 3.0613e-03,
          1.7913e-02, 2.4287e-02],
         [9.8168e-01, 6.5185e-03, 8.1292e-03,  ..., 3.0613e-03,
          9.4626e-01, 9.2540e-01],
         [6.1053e-03, 9.8044e-01, 8.5188e-03,  ..., 3.0613e-03,
          1.7913e-02, 2.6026e-02]],
        [[1.3712e-02, 2.5927e-03, 9.9771e-01,  ..., 9.8289e-01,
          2.6589e-04, 2.1702e-02],
         [1.3712e-02, 2.5927e-03, 7.6340e-04,  ..., 5.3250e-03,
          2.6589e-04, 2.0663e-02],
         [9.5887e-01, 2.5927e-03, 7.6340e-04,  ..., 5.3250e-03,
          2.6589e-04, 9.3697e-01],
         [1.3712e-02, 9.9222e-01, 7.6340e-04,  ..., 6.4561e-03,
          9.9920e-01, 2.0663e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9943, 0.0468, 0.0189,  ..., 0.9582, 0.9684, 0.0277],
         [0.0019, 0.0413, 0.0189,  ..., 0.0139, 0.0105, 0.0266],
         [0.0019, 0.0469, 0.0189,  ..., 0.0140, 0.0105, 0.0303],
         [0.0019, 0.8649, 0.9434,  ..., 0.0139, 0.0105, 0.9154]],
        [[0.9878, 0.0128, 0.0352,  ..., 0.1948, 0.0023, 0.0037],
         [0.0041, 0.0128, 0.0352,  ..., 0.1481, 0.0023, 0.0037],
         [0.0041, 0.0128, 0.0396,  ..., 0.3066, 0.9930, 0.9889],
         [0.0041, 0.9615, 0.8900,  ..., 0.3505, 0.0023, 0.0037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-20 17:42:59,285 [Process: 0] Synchronize training processes
2024-08-20 17:42:59,285 [Process: 0] Evaluating...
2024-08-20 17:42:59,287 [Process: 0] EPOCH 145:
2024-08-20 17:42:59,288 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:00,300 [Process: 0] Synchronize training processes
2024-08-20 17:43:00,300 [Process: 0] Evaluating...
2024-08-20 17:43:00,302 [Process: 0] EPOCH 146:
2024-08-20 17:43:00,304 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0180, 0.0053, 0.9911,  ..., 0.9805, 0.0223, 0.0142],
         [0.0180, 0.0053, 0.0030,  ..., 0.0065, 0.0223, 0.0142],
         [0.9446, 0.0053, 0.0030,  ..., 0.0065, 0.9332, 0.9575],
         [0.0195, 0.9841, 0.0030,  ..., 0.0065, 0.0223, 0.0142]],
        [[0.0061, 0.0028, 0.9891,  ..., 0.9790, 0.0051, 0.0155],
         [0.0061, 0.0028, 0.0036,  ..., 0.0070, 0.0051, 0.0155],
         [0.9818, 0.0028, 0.0036,  ..., 0.0070, 0.0051, 0.9534],
         [0.0061, 0.9915, 0.0036,  ..., 0.0070, 0.9846, 0.0155]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9561e-01, 5.6036e-02, 2.1378e-02,  ..., 9.9136e-01,
          9.8172e-01, 1.2612e-02],
         [1.4630e-03, 5.6036e-02, 2.1378e-02,  ..., 2.9449e-03,
          6.0939e-03, 1.2612e-02],
         [1.4630e-03, 5.7364e-02, 2.1378e-02,  ..., 2.8485e-03,
          6.0939e-03, 1.2612e-02],
         [1.4630e-03, 8.3056e-01, 9.3586e-01,  ..., 2.8485e-03,
          6.0939e-03, 9.6216e-01]],
        [[9.8718e-01, 1.8626e-02, 3.6435e-02,  ..., 3.9973e-02,
          2.3335e-03, 3.0661e-04],
         [4.2728e-03, 1.8626e-02, 7.9456e-02,  ..., 3.9973e-02,
          2.3335e-03, 3.0661e-04],
         [4.2728e-03, 1.8626e-02, 3.6435e-02,  ..., 3.9973e-02,
          9.9300e-01, 9.9908e-01],
         [4.2728e-03, 9.4412e-01, 8.4767e-01,  ..., 8.8008e-01,
          2.3335e-03, 3.0661e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0198, 0.0097, 0.9929,  ..., 0.9436, 0.0141, 0.0194],
         [0.0190, 0.0097, 0.0024,  ..., 0.0207, 0.0141, 0.0194],
         [0.9423, 0.0097, 0.0024,  ..., 0.0179, 0.9578, 0.9417],
         [0.0190, 0.9709, 0.0024,  ..., 0.0179, 0.0141, 0.0194]],
        [[0.0154, 0.0039, 0.9804,  ..., 0.9835, 0.0014, 0.0187],
         [0.0154, 0.0041, 0.0063,  ..., 0.0051, 0.0014, 0.0187],
         [0.9519, 0.0039, 0.0063,  ..., 0.0051, 0.0014, 0.9420],
         [0.0173, 0.9880, 0.0070,  ..., 0.0063, 0.9959, 0.0205]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9946, 0.0561, 0.0223,  ..., 0.9703, 0.9665, 0.0330],
         [0.0018, 0.0559, 0.0223,  ..., 0.0099, 0.0112, 0.0330],
         [0.0018, 0.0679, 0.0223,  ..., 0.0099, 0.0112, 0.0405],
         [0.0018, 0.8200, 0.9330,  ..., 0.0099, 0.0112, 0.8936]],
        [[0.9852, 0.0177, 0.0202,  ..., 0.0202, 0.0056, 0.0015],
         [0.0049, 0.0177, 0.0202,  ..., 0.0202, 0.0056, 0.0015],
         [0.0049, 0.0177, 0.0202,  ..., 0.0202, 0.9831, 0.9955],
         [0.0049, 0.9470, 0.9394,  ..., 0.9394, 0.0056, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-20 17:43:01,285 [Process: 0] Synchronize training processes
2024-08-20 17:43:01,286 [Process: 0] Evaluating...
2024-08-20 17:43:01,287 [Process: 0] EPOCH 147:
2024-08-20 17:43:01,289 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:02,303 [Process: 0] Synchronize training processes
2024-08-20 17:43:02,304 [Process: 0] Evaluating...
2024-08-20 17:43:02,305 [Process: 0] EPOCH 148:
2024-08-20 17:43:02,307 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0296, 0.0405, 0.9861,  ..., 0.8926, 0.0115, 0.0133],
         [0.0278, 0.0432, 0.0046,  ..., 0.0351, 0.0115, 0.0133],
         [0.9148, 0.0405, 0.0046,  ..., 0.0321, 0.9654, 0.9600],
         [0.0278, 0.8758, 0.0046,  ..., 0.0402, 0.0115, 0.0133]],
        [[0.0426, 0.0170, 0.8786,  ..., 0.9801, 0.0108, 0.0210],
         [0.0426, 0.0170, 0.0313,  ..., 0.0056, 0.0075, 0.0210],
         [0.8479, 0.0170, 0.0313,  ..., 0.0056, 0.0075, 0.9364],
         [0.0670, 0.9489, 0.0588,  ..., 0.0086, 0.9742, 0.0216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9803, 0.0346, 0.0113,  ..., 0.9926, 0.9885, 0.0176],
         [0.0065, 0.0398, 0.0113,  ..., 0.0025, 0.0038, 0.0180],
         [0.0065, 0.0346, 0.0113,  ..., 0.0025, 0.0038, 0.0176],
         [0.0067, 0.8910, 0.9660,  ..., 0.0025, 0.0038, 0.9467]],
        [[0.9889, 0.0286, 0.0344,  ..., 0.0578, 0.0026, 0.0055],
         [0.0037, 0.0325, 0.0344,  ..., 0.0501, 0.0026, 0.0055],
         [0.0037, 0.0286, 0.0423,  ..., 0.0566, 0.9921, 0.9836],
         [0.0037, 0.9103, 0.8890,  ..., 0.8355, 0.0026, 0.0055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0350, 0.0411, 0.9770,  ..., 0.9960, 0.0159, 0.0058],
         [0.0335, 0.0653, 0.0058,  ..., 0.0013, 0.0159, 0.0058],
         [0.8918, 0.0411, 0.0058,  ..., 0.0013, 0.9523, 0.9826],
         [0.0397, 0.8524, 0.0115,  ..., 0.0013, 0.0159, 0.0058]],
        [[0.0356, 0.0318, 0.9540,  ..., 0.9902, 0.0012, 0.0323],
         [0.0350, 0.0351, 0.0132,  ..., 0.0033, 0.0012, 0.0309],
         [0.8846, 0.0318, 0.0132,  ..., 0.0033, 0.0012, 0.9023],
         [0.0447, 0.9012, 0.0197,  ..., 0.0033, 0.9963, 0.0346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9813, 0.0131, 0.0169,  ..., 0.9949, 0.9589, 0.0163],
         [0.0062, 0.0131, 0.0169,  ..., 0.0017, 0.0121, 0.0163],
         [0.0062, 0.0131, 0.0169,  ..., 0.0017, 0.0128, 0.0163],
         [0.0062, 0.9606, 0.9493,  ..., 0.0017, 0.0162, 0.9512]],
        [[0.9851, 0.0207, 0.0129,  ..., 0.0101, 0.0071, 0.0081],
         [0.0050, 0.0207, 0.0129,  ..., 0.0101, 0.0099, 0.0088],
         [0.0050, 0.0207, 0.0129,  ..., 0.0101, 0.9759, 0.9750],
         [0.0050, 0.9378, 0.9613,  ..., 0.9698, 0.0071, 0.0081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:43:03,332 [Process: 0] Synchronize training processes
2024-08-20 17:43:03,333 [Process: 0] Evaluating...
2024-08-20 17:43:03,334 [Process: 0] EPOCH 149:
2024-08-20 17:43:03,336 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:04,406 [Process: 0] Synchronize training processes
2024-08-20 17:43:04,406 [Process: 0] Evaluating...
2024-08-20 17:43:04,408 [Process: 0] EPOCH 150:
2024-08-20 17:43:04,409 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6730e-03, 4.2802e-03, 9.7004e-01,  ..., 9.8674e-01,
          9.1707e-03, 1.4895e-02],
         [8.6730e-03, 4.2802e-03, 8.7034e-03,  ..., 4.2291e-03,
          9.1707e-03, 1.4895e-02],
         [9.7398e-01, 4.2802e-03, 8.7034e-03,  ..., 4.2291e-03,
          9.7249e-01, 9.5532e-01],
         [8.6730e-03, 9.8716e-01, 1.2556e-02,  ..., 4.7999e-03,
          9.1707e-03, 1.4895e-02]],
        [[2.2132e-02, 2.8533e-03, 9.9152e-01,  ..., 9.8248e-01,
          4.1080e-04, 1.6396e-02],
         [2.2132e-02, 2.8533e-03, 2.8272e-03,  ..., 5.7002e-03,
          4.1080e-04, 1.6396e-02],
         [9.3360e-01, 2.8533e-03, 2.8272e-03,  ..., 5.7002e-03,
          4.1080e-04, 9.5081e-01],
         [2.2132e-02, 9.9144e-01, 2.8272e-03,  ..., 6.1169e-03,
          9.9877e-01, 1.6396e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9877, 0.0168, 0.0065,  ..., 0.9888, 0.9847, 0.0262],
         [0.0041, 0.0168, 0.0065,  ..., 0.0037, 0.0051, 0.0262],
         [0.0041, 0.0168, 0.0065,  ..., 0.0037, 0.0051, 0.0262],
         [0.0041, 0.9495, 0.9806,  ..., 0.0037, 0.0051, 0.9213]],
        [[0.9856, 0.0359, 0.0213,  ..., 0.0190, 0.0033, 0.0022],
         [0.0048, 0.0359, 0.0213,  ..., 0.0190, 0.0033, 0.0022],
         [0.0048, 0.0387, 0.0213,  ..., 0.0190, 0.9902, 0.9935],
         [0.0048, 0.8895, 0.9360,  ..., 0.9431, 0.0033, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0094e-02, 9.7694e-04, 9.4686e-01,  ..., 9.9504e-01,
          1.4092e-02, 2.0604e-02],
         [2.0094e-02, 9.7694e-04, 1.7225e-02,  ..., 1.6520e-03,
          1.4092e-02, 2.0604e-02],
         [9.3918e-01, 9.7694e-04, 1.7225e-02,  ..., 1.6520e-03,
          9.5772e-01, 9.3819e-01],
         [2.0631e-02, 9.9707e-01, 1.8686e-02,  ..., 1.6520e-03,
          1.4092e-02, 2.0604e-02]],
        [[2.2090e-02, 1.8500e-03, 9.9113e-01,  ..., 9.7165e-01,
          4.4186e-04, 3.6572e-02],
         [2.2090e-02, 1.8500e-03, 2.9576e-03,  ..., 9.4497e-03,
          4.4186e-04, 3.5278e-02],
         [9.3240e-01, 1.8500e-03, 2.9576e-03,  ..., 9.4497e-03,
          4.4186e-04, 8.8802e-01],
         [2.3416e-02, 9.9445e-01, 2.9576e-03,  ..., 9.4497e-03,
          9.9867e-01, 4.0130e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9899, 0.0130, 0.0206,  ..., 0.9717, 0.9433, 0.0075],
         [0.0034, 0.0130, 0.0206,  ..., 0.0094, 0.0189, 0.0075],
         [0.0034, 0.0130, 0.0206,  ..., 0.0094, 0.0189, 0.0075],
         [0.0034, 0.9610, 0.9383,  ..., 0.0094, 0.0189, 0.9776]],
        [[0.9623, 0.0181, 0.0352,  ..., 0.0225, 0.0040, 0.0031],
         [0.0126, 0.0216, 0.0352,  ..., 0.0225, 0.0049, 0.0045],
         [0.0126, 0.0181, 0.0359,  ..., 0.0225, 0.9871, 0.9894],
         [0.0126, 0.9421, 0.8938,  ..., 0.9326, 0.0040, 0.0031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:43:05,424 [Process: 0] Synchronize training processes
2024-08-20 17:43:05,424 [Process: 0] Evaluating...
2024-08-20 17:43:05,426 [Process: 0] EPOCH 151:
2024-08-20 17:43:05,427 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:06,422 [Process: 0] Synchronize training processes
2024-08-20 17:43:06,422 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.5619e-03, 7.3027e-03, 9.8952e-01,  ..., 9.5260e-01,
          1.2434e-02, 2.5080e-02],
         [6.5619e-03, 1.4115e-02, 3.9731e-03,  ..., 1.4735e-02,
          1.2434e-02, 2.4279e-02],
         [9.8031e-01, 7.3027e-03, 3.2557e-03,  ..., 1.4735e-02,
          9.6270e-01, 9.2577e-01],
         [6.5619e-03, 9.7128e-01, 3.2557e-03,  ..., 1.7928e-02,
          1.2434e-02, 2.4870e-02]],
        [[4.8300e-02, 5.2831e-03, 9.8385e-01,  ..., 9.8436e-01,
          1.3238e-04, 1.5093e-02],
         [4.3833e-02, 5.2831e-03, 5.3837e-03,  ..., 5.8174e-03,
          1.3238e-04, 1.5093e-02],
         [8.4122e-01, 5.2831e-03, 5.3837e-03,  ..., 4.9088e-03,
          1.3238e-04, 9.5472e-01],
         [6.6650e-02, 9.8415e-01, 5.3837e-03,  ..., 4.9088e-03,
          9.9960e-01, 1.5093e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9586, 0.0368, 0.0219,  ..., 0.9477, 0.9815, 0.0072],
         [0.0138, 0.0355, 0.0219,  ..., 0.0164, 0.0082, 0.0072],
         [0.0138, 0.0355, 0.0219,  ..., 0.0164, 0.0051, 0.0072],
         [0.0138, 0.8922, 0.9344,  ..., 0.0195, 0.0051, 0.9784]],
        [[0.9835, 0.0589, 0.0392,  ..., 0.0233, 0.0062, 0.0077],
         [0.0055, 0.0589, 0.0488,  ..., 0.0233, 0.0062, 0.0077],
         [0.0055, 0.0661, 0.0392,  ..., 0.0233, 0.9815, 0.9769],
         [0.0055, 0.8162, 0.8728,  ..., 0.9300, 0.0062, 0.0077]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0120, 0.0529, 0.9925,  ..., 0.9718, 0.0263, 0.0359],
         [0.0120, 0.4907, 0.0026,  ..., 0.0102, 0.0263, 0.0359],
         [0.9641, 0.0529, 0.0024,  ..., 0.0090, 0.9212, 0.8814],
         [0.0120, 0.4036, 0.0024,  ..., 0.0090, 0.0263, 0.0468]],
        [[0.0446, 0.0025, 0.9797,  ..., 0.9783, 0.0016, 0.0240],
         [0.0414, 0.0025, 0.0065,  ..., 0.0072, 0.0021, 0.0240],
         [0.8464, 0.0025, 0.0065,  ..., 0.0072, 0.0016, 0.9259],
         [0.0676, 0.9924, 0.0073,  ..., 0.0072, 0.9947, 0.0262]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:43:08,328 [Process: 0] EPOCH 152:
2024-08-20 17:43:08,329 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9835, 0.0127, 0.0126,  ..., 0.9900, 0.9818, 0.0099],
         [0.0055, 0.0127, 0.0126,  ..., 0.0033, 0.0061, 0.0099],
         [0.0055, 0.0127, 0.0126,  ..., 0.0033, 0.0061, 0.0099],
         [0.0055, 0.9620, 0.9621,  ..., 0.0033, 0.0061, 0.9703]],
        [[0.9574, 0.0184, 0.0380,  ..., 0.0419, 0.0056, 0.0037],
         [0.0142, 0.0184, 0.0380,  ..., 0.0561, 0.0056, 0.0050],
         [0.0142, 0.0184, 0.0380,  ..., 0.0419, 0.9832, 0.9876],
         [0.0142, 0.9449, 0.8859,  ..., 0.8602, 0.0056, 0.0037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:43:09,399 [Process: 0] Synchronize training processes
2024-08-20 17:43:09,400 [Process: 0] Evaluating...
2024-08-20 17:43:09,402 [Process: 0] EPOCH 153:
2024-08-20 17:43:09,404 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:10,408 [Process: 0] Synchronize training processes
2024-08-20 17:43:10,409 [Process: 0] Evaluating...
2024-08-20 17:43:10,411 [Process: 0] EPOCH 154:
2024-08-20 17:43:10,412 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2133e-03, 1.1870e-02, 9.4823e-01,  ..., 8.7264e-01,
          1.7812e-02, 2.4426e-02],
         [7.2133e-03, 1.1870e-02, 2.0541e-02,  ..., 4.4843e-02,
          1.7812e-02, 2.4426e-02],
         [9.7836e-01, 1.1870e-02, 1.5615e-02,  ..., 3.5434e-02,
          9.4656e-01, 9.2672e-01],
         [7.2133e-03, 9.6439e-01, 1.5615e-02,  ..., 4.7085e-02,
          1.7812e-02, 2.4426e-02]],
        [[1.8222e-02, 6.2250e-04, 9.8749e-01,  ..., 9.9253e-01,
          2.5126e-03, 1.0882e-02],
         [1.8222e-02, 6.2250e-04, 4.1713e-03,  ..., 2.4903e-03,
          3.6886e-03, 1.0882e-02],
         [9.4506e-01, 6.2250e-04, 4.1713e-03,  ..., 2.4903e-03,
          2.5126e-03, 9.6735e-01],
         [1.8501e-02, 9.9813e-01, 4.1713e-03,  ..., 2.4903e-03,
          9.9129e-01, 1.0882e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9808, 0.0141, 0.0079,  ..., 0.9766, 0.9890, 0.0180],
         [0.0064, 0.0141, 0.0079,  ..., 0.0078, 0.0037, 0.0217],
         [0.0064, 0.0141, 0.0079,  ..., 0.0078, 0.0037, 0.0180],
         [0.0064, 0.9578, 0.9763,  ..., 0.0078, 0.0037, 0.9423]],
        [[0.9756, 0.0055, 0.0205,  ..., 0.0332, 0.0056, 0.0034],
         [0.0088, 0.0055, 0.0205,  ..., 0.0332, 0.0056, 0.0034],
         [0.0078, 0.0055, 0.0205,  ..., 0.0332, 0.9832, 0.9899],
         [0.0078, 0.9835, 0.9386,  ..., 0.9005, 0.0056, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2966e-02, 1.8333e-02, 8.9023e-01,  ..., 9.9281e-01,
          2.3538e-02, 3.2652e-02],
         [2.2966e-02, 1.6657e-02, 7.2773e-02,  ..., 2.3970e-03,
          2.3538e-02, 3.2652e-02],
         [9.2588e-01, 1.6657e-02, 1.8499e-02,  ..., 2.3970e-03,
          9.2939e-01, 8.9478e-01],
         [2.8188e-02, 9.4835e-01, 1.8499e-02,  ..., 2.3970e-03,
          2.3538e-02, 3.9915e-02]],
        [[3.5788e-02, 1.5248e-03, 9.3769e-01,  ..., 9.9819e-01,
          2.0136e-04, 2.4336e-02],
         [3.2725e-02, 1.5248e-03, 1.7695e-02,  ..., 6.0397e-04,
          2.0136e-04, 2.4336e-02],
         [8.8897e-01, 1.5248e-03, 1.7695e-02,  ..., 6.0397e-04,
          2.0136e-04, 9.2439e-01],
         [4.2521e-02, 9.9543e-01, 2.6923e-02,  ..., 6.0397e-04,
          9.9940e-01, 2.6939e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9850, 0.0256, 0.0346,  ..., 0.9866, 0.9313, 0.0150],
         [0.0050, 0.0219, 0.0346,  ..., 0.0045, 0.0219, 0.0150],
         [0.0050, 0.0219, 0.0346,  ..., 0.0045, 0.0248, 0.0150],
         [0.0050, 0.9306, 0.8962,  ..., 0.0045, 0.0219, 0.9549]],
        [[0.9927, 0.0129, 0.0259,  ..., 0.0342, 0.0061, 0.0021],
         [0.0024, 0.0129, 0.0298,  ..., 0.0342, 0.0061, 0.0034],
         [0.0024, 0.0129, 0.0259,  ..., 0.0342, 0.9818, 0.9923],
         [0.0024, 0.9613, 0.9183,  ..., 0.8975, 0.0061, 0.0021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:43:11,415 [Process: 0] Synchronize training processes
2024-08-20 17:43:11,416 [Process: 0] Evaluating...
2024-08-20 17:43:11,417 [Process: 0] EPOCH 155:
2024-08-20 17:43:11,419 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:12,432 [Process: 0] Synchronize training processes
2024-08-20 17:43:12,432 [Process: 0] Evaluating...
2024-08-20 17:43:12,434 [Process: 0] EPOCH 156:
2024-08-20 17:43:12,436 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1211e-02, 2.9245e-03, 9.1650e-01,  ..., 9.1335e-01,
          8.8500e-03, 1.5260e-02],
         [2.1211e-02, 2.9245e-03, 5.8860e-02,  ..., 4.9182e-02,
          8.8500e-03, 1.5260e-02],
         [9.3637e-01, 2.9245e-03, 1.2321e-02,  ..., 1.8735e-02,
          9.7345e-01, 9.5422e-01],
         [2.1211e-02, 9.9123e-01, 1.2321e-02,  ..., 1.8735e-02,
          8.8500e-03, 1.5260e-02]],
        [[4.1454e-02, 2.1395e-04, 9.8714e-01,  ..., 9.9721e-01,
          2.1590e-03, 3.6826e-02],
         [3.9520e-02, 2.1395e-04, 5.1478e-03,  ..., 9.3081e-04,
          2.2963e-03, 3.6826e-02],
         [8.7106e-01, 2.1395e-04, 3.8573e-03,  ..., 9.3081e-04,
          2.1590e-03, 8.7644e-01],
         [4.7970e-02, 9.9936e-01, 3.8573e-03,  ..., 9.3081e-04,
          9.9339e-01, 4.9909e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9889, 0.0186, 0.0118,  ..., 0.9581, 0.9664, 0.0061],
         [0.0037, 0.0186, 0.0118,  ..., 0.0140, 0.0112, 0.0061],
         [0.0037, 0.0186, 0.0118,  ..., 0.0140, 0.0112, 0.0061],
         [0.0037, 0.9442, 0.9647,  ..., 0.0140, 0.0112, 0.9818]],
        [[0.9895, 0.0209, 0.0202,  ..., 0.0159, 0.0066, 0.0057],
         [0.0035, 0.0209, 0.0228,  ..., 0.0159, 0.0066, 0.0057],
         [0.0035, 0.0209, 0.0202,  ..., 0.0159, 0.9801, 0.9829],
         [0.0035, 0.9373, 0.9369,  ..., 0.9524, 0.0066, 0.0057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.0404e-02, 6.6803e-03, 9.8684e-01,  ..., 9.8170e-01,
          1.3213e-02, 2.0472e-02],
         [5.0104e-02, 6.5380e-03, 4.0945e-03,  ..., 6.7746e-03,
          1.3213e-02, 2.0472e-02],
         [8.3200e-01, 6.5380e-03, 4.0945e-03,  ..., 5.7614e-03,
          9.6036e-01, 9.3858e-01],
         [5.7496e-02, 9.8024e-01, 4.9741e-03,  ..., 5.7614e-03,
          1.3213e-02, 2.0472e-02]],
        [[2.4712e-02, 7.4070e-04, 9.9314e-01,  ..., 9.9393e-01,
          3.3686e-04, 5.6006e-03],
         [2.4712e-02, 7.4070e-04, 2.2872e-03,  ..., 2.0233e-03,
          3.3686e-04, 5.6006e-03],
         [9.2242e-01, 7.4070e-04, 2.2872e-03,  ..., 2.0233e-03,
          3.3686e-04, 9.8320e-01],
         [2.8157e-02, 9.9778e-01, 2.2872e-03,  ..., 2.0233e-03,
          9.9899e-01, 5.6006e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9833, 0.0126, 0.0315,  ..., 0.9794, 0.9687, 0.0300],
         [0.0055, 0.0135, 0.0267,  ..., 0.0069, 0.0104, 0.0300],
         [0.0057, 0.0126, 0.0267,  ..., 0.0069, 0.0104, 0.0300],
         [0.0055, 0.9613, 0.9150,  ..., 0.0069, 0.0104, 0.9101]],
        [[0.9850, 0.0201, 0.0249,  ..., 0.0367, 0.0048, 0.0026],
         [0.0050, 0.0201, 0.0249,  ..., 0.0367, 0.0048, 0.0026],
         [0.0050, 0.0201, 0.0249,  ..., 0.0369, 0.9857, 0.9923],
         [0.0050, 0.9397, 0.9253,  ..., 0.8896, 0.0048, 0.0026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:43:13,452 [Process: 0] Synchronize training processes
2024-08-20 17:43:13,452 [Process: 0] Evaluating...
2024-08-20 17:43:13,454 [Process: 0] EPOCH 157:
2024-08-20 17:43:13,456 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4574e-02, 1.3711e-02, 9.8591e-01,  ..., 9.6365e-01,
          5.0070e-02, 2.4694e-02],
         [1.4574e-02, 1.3711e-02, 4.6950e-03,  ..., 1.8827e-02,
          4.8673e-02, 2.4694e-02],
         [9.5628e-01, 1.3711e-02, 4.6950e-03,  ..., 8.7608e-03,
          8.2630e-01, 9.2109e-01],
         [1.4574e-02, 9.5887e-01, 4.6992e-03,  ..., 8.7608e-03,
          7.4956e-02, 2.9527e-02]],
        [[2.1423e-02, 5.7146e-04, 9.9735e-01,  ..., 9.9449e-01,
          2.1401e-03, 1.9856e-02],
         [2.1423e-02, 5.7146e-04, 8.8231e-04,  ..., 1.8367e-03,
          2.1401e-03, 1.9856e-02],
         [9.3168e-01, 5.7146e-04, 8.8231e-04,  ..., 1.8367e-03,
          2.1401e-03, 9.4043e-01],
         [2.5476e-02, 9.9829e-01, 8.8231e-04,  ..., 1.8367e-03,
          9.9358e-01, 1.9856e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9797, 0.0118, 0.0079,  ..., 0.9839, 0.9822, 0.0054],
         [0.0068, 0.0118, 0.0079,  ..., 0.0050, 0.0059, 0.0054],
         [0.0068, 0.0118, 0.0079,  ..., 0.0056, 0.0059, 0.0054],
         [0.0068, 0.9646, 0.9764,  ..., 0.0055, 0.0059, 0.9838]],
        [[0.9623, 0.0161, 0.0148,  ..., 0.1465, 0.0080, 0.0027],
         [0.0122, 0.0173, 0.0160,  ..., 0.0844, 0.0080, 0.0027],
         [0.0133, 0.0161, 0.0148,  ..., 0.1308, 0.9760, 0.9919],
         [0.0122, 0.9505, 0.9545,  ..., 0.6383, 0.0080, 0.0027]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3959e-02, 8.8572e-03, 9.8783e-01,  ..., 9.7317e-01,
          1.3967e-02, 1.9756e-02],
         [1.3959e-02, 8.8572e-03, 3.5988e-03,  ..., 7.5180e-03,
          1.3967e-02, 1.9756e-02],
         [9.5812e-01, 8.8572e-03, 3.5988e-03,  ..., 7.5180e-03,
          9.5810e-01, 9.4073e-01],
         [1.3959e-02, 9.7343e-01, 4.9747e-03,  ..., 1.1795e-02,
          1.3967e-02, 1.9756e-02]],
        [[1.8648e-02, 2.9973e-04, 9.9890e-01,  ..., 9.7930e-01,
          2.8433e-03, 2.1929e-02],
         [1.8648e-02, 2.9973e-04, 3.6653e-04,  ..., 6.2737e-03,
          2.8433e-03, 2.1929e-02],
         [9.4386e-01, 2.9973e-04, 3.6653e-04,  ..., 6.2737e-03,
          2.8433e-03, 9.3421e-01],
         [1.8848e-02, 9.9910e-01, 3.6653e-04,  ..., 8.1480e-03,
          9.9147e-01, 2.1929e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9867, 0.0314, 0.0300,  ..., 0.9920, 0.9681, 0.0098],
         [0.0044, 0.0314, 0.0300,  ..., 0.0027, 0.0099, 0.0098],
         [0.0044, 0.0335, 0.0308,  ..., 0.0027, 0.0121, 0.0098],
         [0.0044, 0.9038, 0.9092,  ..., 0.0027, 0.0099, 0.9705]],
        [[0.9768, 0.0172, 0.0104,  ..., 0.0338, 0.0039, 0.0039],
         [0.0076, 0.0172, 0.0104,  ..., 0.0338, 0.0039, 0.0039],
         [0.0076, 0.0172, 0.0104,  ..., 0.0338, 0.9884, 0.9883],
         [0.0080, 0.9484, 0.9688,  ..., 0.8986, 0.0039, 0.0039]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:43:14,498 [Process: 0] Synchronize training processes
2024-08-20 17:43:14,499 [Process: 0] Evaluating...
2024-08-20 17:43:14,500 [Process: 0] EPOCH 158:
2024-08-20 17:43:14,502 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:15,501 [Process: 0] Synchronize training processes
2024-08-20 17:43:15,501 [Process: 0] Evaluating...
2024-08-20 17:43:15,503 [Process: 0] EPOCH 159:
2024-08-20 17:43:15,505 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6863e-02, 1.1236e-02, 9.9809e-01,  ..., 9.9752e-01,
          1.7011e-02, 2.5467e-02],
         [2.6863e-02, 1.1236e-02, 6.3575e-04,  ..., 8.2666e-04,
          1.7011e-02, 2.5011e-02],
         [9.1384e-01, 1.1236e-02, 6.3575e-04,  ..., 8.2666e-04,
          9.4897e-01, 9.2282e-01],
         [3.2439e-02, 9.6629e-01, 6.3575e-04,  ..., 8.2666e-04,
          1.7011e-02, 2.6702e-02]],
        [[1.8648e-02, 4.5289e-03, 9.9761e-01,  ..., 9.7807e-01,
          3.7460e-03, 1.0342e-02],
         [1.8648e-02, 5.4106e-03, 7.9656e-04,  ..., 7.3113e-03,
          3.7460e-03, 1.0342e-02],
         [9.4406e-01, 4.5289e-03, 7.9656e-04,  ..., 7.3113e-03,
          3.7460e-03, 9.6897e-01],
         [1.8648e-02, 9.8553e-01, 7.9656e-04,  ..., 7.3113e-03,
          9.8876e-01, 1.0342e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9034e-01, 2.3525e-02, 1.0000e-02,  ..., 9.8351e-01,
          9.6225e-01, 1.5770e-02],
         [3.2193e-03, 2.3525e-02, 1.0000e-02,  ..., 5.4972e-03,
          1.2583e-02, 1.5770e-02],
         [3.2193e-03, 2.3525e-02, 1.0000e-02,  ..., 5.4972e-03,
          1.2583e-02, 1.5770e-02],
         [3.2193e-03, 9.2942e-01, 9.7000e-01,  ..., 5.4972e-03,
          1.2583e-02, 9.5269e-01]],
        [[9.8457e-01, 4.2550e-02, 7.4254e-03,  ..., 1.8249e-02,
          1.8777e-03, 9.4794e-04],
         [5.1228e-03, 4.2550e-02, 7.4254e-03,  ..., 1.8249e-02,
          1.8777e-03, 9.4794e-04],
         [5.1838e-03, 4.4039e-02, 7.4254e-03,  ..., 1.8249e-02,
          9.9437e-01, 9.9716e-01],
         [5.1228e-03, 8.7086e-01, 9.7772e-01,  ..., 9.4525e-01,
          1.8777e-03, 9.4794e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7646e-03, 1.1450e-03, 9.9551e-01,  ..., 9.7791e-01,
          8.6447e-03, 2.7293e-02],
         [8.7646e-03, 1.1450e-03, 1.4965e-03,  ..., 6.7917e-03,
          8.6447e-03, 2.7293e-02],
         [9.7371e-01, 1.1450e-03, 1.4965e-03,  ..., 6.7917e-03,
          9.7407e-01, 9.1552e-01],
         [8.7646e-03, 9.9656e-01, 1.4965e-03,  ..., 8.5097e-03,
          8.6447e-03, 2.9893e-02]],
        [[2.2999e-02, 1.1317e-03, 9.9821e-01,  ..., 9.6670e-01,
          5.7712e-03, 1.2049e-02],
         [2.2999e-02, 1.1317e-03, 5.9668e-04,  ..., 1.0189e-02,
          5.7712e-03, 1.2049e-02],
         [9.2849e-01, 1.1317e-03, 5.9668e-04,  ..., 1.0189e-02,
          5.7712e-03, 9.6385e-01],
         [2.5508e-02, 9.9661e-01, 5.9668e-04,  ..., 1.2917e-02,
          9.8269e-01, 1.2049e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:16,535 [Process: 0] Synchronize training processes
2024-08-20 17:43:16,535 [Process: 0] Evaluating...
2024-08-20 17:43:16,537 [Process: 0] EPOCH 160:
2024-08-20 17:43:16,539 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:17,594 [Process: 0] Synchronize training processes
2024-08-20 17:43:17,595 [Process: 0] Evaluating...
2024-08-20 17:43:17,596 [Process: 0] EPOCH 161:
2024-08-20 17:43:17,598 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9839, 0.0290, 0.1284,  ..., 0.9787, 0.9761, 0.0080],
         [0.0054, 0.0220, 0.1080,  ..., 0.0071, 0.0080, 0.0080],
         [0.0054, 0.0249, 0.2706,  ..., 0.0071, 0.0080, 0.0080],
         [0.0054, 0.9241, 0.4930,  ..., 0.0071, 0.0080, 0.9761]],
        [[0.9930, 0.0176, 0.0743,  ..., 0.0245, 0.0033, 0.0051],
         [0.0023, 0.0176, 0.0544,  ..., 0.0245, 0.0033, 0.0051],
         [0.0023, 0.0176, 0.0812,  ..., 0.0245, 0.9901, 0.9847],
         [0.0023, 0.9473, 0.7901,  ..., 0.9264, 0.0033, 0.0051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2502e-02, 1.0343e-03, 9.9723e-01,  ..., 9.8556e-01,
          1.7632e-02, 8.0197e-03],
         [2.2250e-02, 1.0343e-03, 9.2426e-04,  ..., 4.0060e-03,
          1.7632e-02, 8.0197e-03],
         [9.3300e-01, 1.0343e-03, 9.2426e-04,  ..., 4.0060e-03,
          9.4710e-01, 9.7594e-01],
         [2.2250e-02, 9.9690e-01, 9.2426e-04,  ..., 6.4307e-03,
          1.7632e-02, 8.0197e-03]],
        [[2.3719e-02, 7.7053e-04, 9.6889e-01,  ..., 9.8932e-01,
          2.2941e-02, 1.9597e-02],
         [2.3719e-02, 7.7053e-04, 9.4667e-03,  ..., 3.4096e-03,
          2.2941e-02, 1.9597e-02],
         [9.2884e-01, 7.7053e-04, 9.4667e-03,  ..., 3.4096e-03,
          2.2941e-02, 9.4121e-01],
         [2.3719e-02, 9.9769e-01, 1.2179e-02,  ..., 3.8589e-03,
          9.3118e-01, 1.9597e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9962, 0.0157, 0.0288,  ..., 0.9371, 0.9955, 0.0292],
         [0.0013, 0.0157, 0.0288,  ..., 0.0207, 0.0015, 0.0438],
         [0.0013, 0.0157, 0.0288,  ..., 0.0215, 0.0015, 0.0292],
         [0.0013, 0.9528, 0.9137,  ..., 0.0207, 0.0015, 0.8978]],
        [[0.9970, 0.0083, 0.0401,  ..., 0.0276, 0.0022, 0.0019],
         [0.0010, 0.0083, 0.0401,  ..., 0.0276, 0.0022, 0.0019],
         [0.0010, 0.0083, 0.0570,  ..., 0.0298, 0.9933, 0.9944],
         [0.0010, 0.9750, 0.8628,  ..., 0.9149, 0.0022, 0.0019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.4907e-03, 2.6860e-03, 9.9183e-01,  ..., 9.9341e-01,
          1.8402e-02, 4.9212e-03],
         [6.4907e-03, 2.6860e-03, 2.7236e-03,  ..., 2.1958e-03,
          1.8402e-02, 4.9212e-03],
         [9.8053e-01, 2.6860e-03, 2.7236e-03,  ..., 2.1958e-03,
          9.4456e-01, 9.8524e-01],
         [6.4907e-03, 9.9194e-01, 2.7236e-03,  ..., 2.1958e-03,
          1.8636e-02, 4.9212e-03]],
        [[3.5324e-02, 7.8546e-04, 9.9649e-01,  ..., 9.8610e-01,
          2.4827e-03, 1.5049e-02],
         [3.5324e-02, 7.8546e-04, 1.1686e-03,  ..., 4.6349e-03,
          2.0601e-03, 1.5049e-02],
         [8.8845e-01, 7.8546e-04, 1.1686e-03,  ..., 4.6349e-03,
          2.0601e-03, 9.5485e-01],
         [4.0903e-02, 9.9764e-01, 1.1686e-03,  ..., 4.6349e-03,
          9.9340e-01, 1.5049e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:43:18,606 [Process: 0] Synchronize training processes
2024-08-20 17:43:18,607 [Process: 0] Evaluating...
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:20,547 [Process: 0] EPOCH 162:
2024-08-20 17:43:20,551 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:21,542 [Process: 0] Synchronize training processes
2024-08-20 17:43:21,542 [Process: 0] Evaluating...
2024-08-20 17:43:21,544 [Process: 0] EPOCH 163:
2024-08-20 17:43:21,546 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9964, 0.0278, 0.0421,  ..., 0.9844, 0.9822, 0.0077],
         [0.0012, 0.0296, 0.0298,  ..., 0.0052, 0.0066, 0.0077],
         [0.0012, 0.0278, 0.0298,  ..., 0.0052, 0.0056, 0.0077],
         [0.0012, 0.9148, 0.8983,  ..., 0.0052, 0.0056, 0.9769]],
        [[0.9880, 0.0235, 0.0148,  ..., 0.0239, 0.0039, 0.0056],
         [0.0040, 0.0235, 0.0148,  ..., 0.0239, 0.0039, 0.0056],
         [0.0040, 0.0235, 0.0148,  ..., 0.0239, 0.9884, 0.9833],
         [0.0040, 0.9296, 0.9555,  ..., 0.9282, 0.0039, 0.0056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4410e-02, 1.2279e-02, 9.9815e-01,  ..., 9.8920e-01,
          2.0160e-02, 1.4909e-02],
         [1.4410e-02, 1.2279e-02, 6.1810e-04,  ..., 3.4096e-03,
          2.0160e-02, 1.4909e-02],
         [9.5677e-01, 1.2279e-02, 6.1810e-04,  ..., 3.4096e-03,
          9.3782e-01, 9.5503e-01],
         [1.4410e-02, 9.6316e-01, 6.1810e-04,  ..., 3.9765e-03,
          2.1861e-02, 1.5154e-02]],
        [[8.8415e-02, 2.4267e-03, 9.9117e-01,  ..., 9.7232e-01,
          4.8573e-04, 1.4463e-02],
         [6.7301e-02, 2.4267e-03, 2.6768e-03,  ..., 9.2282e-03,
          4.8573e-04, 1.4463e-02],
         [7.5594e-01, 2.4267e-03, 2.6768e-03,  ..., 9.2282e-03,
          4.8573e-04, 9.5661e-01],
         [8.8343e-02, 9.9272e-01, 3.4807e-03,  ..., 9.2282e-03,
          9.9854e-01, 1.4463e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9892, 0.0063, 0.0079,  ..., 0.9853, 0.9615, 0.0072],
         [0.0036, 0.0063, 0.0079,  ..., 0.0049, 0.0128, 0.0072],
         [0.0036, 0.0063, 0.0079,  ..., 0.0049, 0.0128, 0.0072],
         [0.0036, 0.9810, 0.9764,  ..., 0.0049, 0.0128, 0.9785]],
        [[0.9829, 0.0284, 0.0151,  ..., 0.0263, 0.0071, 0.0026],
         [0.0057, 0.0239, 0.0151,  ..., 0.0382, 0.0071, 0.0026],
         [0.0057, 0.0243, 0.0151,  ..., 0.0263, 0.9787, 0.9921],
         [0.0057, 0.9233, 0.9548,  ..., 0.9092, 0.0071, 0.0026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9897e-02, 2.9912e-04, 9.9755e-01,  ..., 9.9787e-01,
          7.6131e-03, 8.3706e-03],
         [1.9897e-02, 2.9912e-04, 8.1627e-04,  ..., 7.1037e-04,
          7.6131e-03, 8.3706e-03],
         [9.3695e-01, 2.9912e-04, 8.1627e-04,  ..., 7.1037e-04,
          9.7716e-01, 9.7489e-01],
         [2.3255e-02, 9.9910e-01, 8.1627e-04,  ..., 7.1037e-04,
          7.6131e-03, 8.3706e-03]],
        [[5.1747e-02, 9.4078e-03, 9.9078e-01,  ..., 9.9686e-01,
          6.9822e-04, 1.0916e-02],
         [4.8363e-02, 1.8089e-02, 3.0735e-03,  ..., 1.0477e-03,
          6.9822e-04, 1.0916e-02],
         [8.5153e-01, 9.4078e-03, 3.0735e-03,  ..., 1.0477e-03,
          6.9822e-04, 9.6725e-01],
         [4.8363e-02, 9.6310e-01, 3.0735e-03,  ..., 1.0477e-03,
          9.9791e-01, 1.0916e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:22,556 [Process: 0] Synchronize training processes
2024-08-20 17:43:22,557 [Process: 0] Evaluating...
2024-08-20 17:43:22,558 [Process: 0] EPOCH 164:
2024-08-20 17:43:22,560 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:23,586 [Process: 0] Synchronize training processes
2024-08-20 17:43:23,587 [Process: 0] Evaluating...
2024-08-20 17:43:23,589 [Process: 0] EPOCH 165:
2024-08-20 17:43:23,590 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9914, 0.0082, 0.0209,  ..., 0.9800, 0.9898, 0.0075],
         [0.0029, 0.0082, 0.0252,  ..., 0.0066, 0.0034, 0.0075],
         [0.0029, 0.0082, 0.0209,  ..., 0.0067, 0.0034, 0.0075],
         [0.0029, 0.9753, 0.9330,  ..., 0.0066, 0.0034, 0.9774]],
        [[0.9959, 0.0286, 0.0151,  ..., 0.0890, 0.0024, 0.0022],
         [0.0014, 0.0286, 0.0151,  ..., 0.0524, 0.0024, 0.0022],
         [0.0014, 0.0286, 0.0155,  ..., 0.0629, 0.9928, 0.9934],
         [0.0014, 0.9141, 0.9543,  ..., 0.7957, 0.0024, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4423e-02, 3.8935e-03, 9.9661e-01,  ..., 9.7348e-01,
          1.2215e-02, 1.5795e-02],
         [1.4423e-02, 3.8935e-03, 1.1287e-03,  ..., 8.5715e-03,
          1.2215e-02, 1.5795e-02],
         [9.5673e-01, 3.8935e-03, 1.1287e-03,  ..., 8.5715e-03,
          9.6336e-01, 9.5262e-01],
         [1.4423e-02, 9.8832e-01, 1.1287e-03,  ..., 9.3811e-03,
          1.2215e-02, 1.5795e-02]],
        [[8.8484e-02, 1.7451e-03, 9.9658e-01,  ..., 9.8737e-01,
          9.5610e-04, 1.7051e-02],
         [5.7040e-02, 1.7451e-03, 1.1386e-03,  ..., 4.2101e-03,
          9.5610e-04, 1.7051e-02],
         [7.9744e-01, 1.7451e-03, 1.1386e-03,  ..., 4.2101e-03,
          9.5610e-04, 9.4885e-01],
         [5.7040e-02, 9.9476e-01, 1.1386e-03,  ..., 4.2101e-03,
          9.9713e-01, 1.7051e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9770, 0.0113, 0.0409,  ..., 0.9777, 0.9551, 0.0070],
         [0.0076, 0.0113, 0.0241,  ..., 0.0062, 0.0148, 0.0070],
         [0.0077, 0.0113, 0.0260,  ..., 0.0098, 0.0153, 0.0070],
         [0.0076, 0.9660, 0.9090,  ..., 0.0062, 0.0148, 0.9790]],
        [[0.9841, 0.0107, 0.0309,  ..., 0.0399, 0.0043, 0.0084],
         [0.0053, 0.0107, 0.0217,  ..., 0.0342, 0.0043, 0.0084],
         [0.0053, 0.0107, 0.0217,  ..., 0.0342, 0.9871, 0.9749],
         [0.0053, 0.9679, 0.9257,  ..., 0.8917, 0.0043, 0.0084]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6717e-02, 3.4348e-03, 9.9913e-01,  ..., 9.9754e-01,
          1.6759e-02, 2.0337e-02],
         [2.7681e-02, 3.4348e-03, 2.8864e-04,  ..., 8.1987e-04,
          1.4980e-02, 1.8791e-02],
         [9.0681e-01, 3.4348e-03, 2.8864e-04,  ..., 8.1987e-04,
          9.5328e-01, 9.4208e-01],
         [2.8793e-02, 9.8970e-01, 2.8864e-04,  ..., 8.1987e-04,
          1.4980e-02, 1.8791e-02]],
        [[2.7177e-02, 2.2949e-03, 9.9542e-01,  ..., 9.9765e-01,
          2.7530e-03, 9.5750e-03],
         [2.3787e-02, 2.2949e-03, 1.5261e-03,  ..., 7.8479e-04,
          2.7530e-03, 9.5750e-03],
         [9.2488e-01, 2.2949e-03, 1.5261e-03,  ..., 7.8479e-04,
          2.7530e-03, 9.7127e-01],
         [2.4152e-02, 9.9312e-01, 1.5261e-03,  ..., 7.8479e-04,
          9.9174e-01, 9.5750e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:24,601 [Process: 0] Synchronize training processes
2024-08-20 17:43:24,602 [Process: 0] Evaluating...
2024-08-20 17:43:24,603 [Process: 0] EPOCH 166:
2024-08-20 17:43:24,605 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:25,627 [Process: 0] Synchronize training processes
2024-08-20 17:43:25,627 [Process: 0] Evaluating...
2024-08-20 17:43:25,629 [Process: 0] EPOCH 167:
2024-08-20 17:43:25,630 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9848, 0.0073, 0.0108,  ..., 0.9853, 0.9908, 0.0174],
         [0.0050, 0.0082, 0.0108,  ..., 0.0049, 0.0031, 0.0174],
         [0.0052, 0.0073, 0.0108,  ..., 0.0049, 0.0031, 0.0174],
         [0.0050, 0.9771, 0.9675,  ..., 0.0049, 0.0031, 0.9479]],
        [[0.9685, 0.0180, 0.0093,  ..., 0.0386, 0.0018, 0.0017],
         [0.0105, 0.0180, 0.0093,  ..., 0.0386, 0.0018, 0.0017],
         [0.0105, 0.0180, 0.0093,  ..., 0.0459, 0.9945, 0.9948],
         [0.0105, 0.9460, 0.9721,  ..., 0.8769, 0.0018, 0.0017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.7078e-03, 1.0662e-02, 9.9866e-01,  ..., 9.8472e-01,
          2.4376e-02, 1.4713e-02],
         [6.7078e-03, 1.0662e-02, 4.4400e-04,  ..., 4.5492e-03,
          2.0489e-02, 1.4713e-02],
         [9.7988e-01, 1.0662e-02, 4.4400e-04,  ..., 4.5492e-03,
          9.3465e-01, 9.5586e-01],
         [6.7078e-03, 9.6801e-01, 4.4934e-04,  ..., 6.1834e-03,
          2.0489e-02, 1.4713e-02]],
        [[6.4826e-02, 8.6496e-03, 9.9870e-01,  ..., 9.8388e-01,
          1.2969e-03, 1.4513e-02],
         [3.0149e-02, 1.0611e-02, 4.3258e-04,  ..., 5.3740e-03,
          1.2969e-03, 1.3922e-02],
         [8.7166e-01, 8.6496e-03, 4.3258e-04,  ..., 5.3740e-03,
          1.2969e-03, 9.5764e-01],
         [3.3361e-02, 9.7209e-01, 4.3258e-04,  ..., 5.3740e-03,
          9.9611e-01, 1.3922e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9725, 0.0151, 0.0293,  ..., 0.9836, 0.9767, 0.0149],
         [0.0092, 0.0151, 0.0293,  ..., 0.0055, 0.0078, 0.0149],
         [0.0092, 0.0151, 0.0293,  ..., 0.0055, 0.0078, 0.0149],
         [0.0092, 0.9547, 0.9122,  ..., 0.0055, 0.0078, 0.9552]],
        [[0.9651, 0.0158, 0.0334,  ..., 0.0822, 0.0053, 0.0019],
         [0.0126, 0.0158, 0.0334,  ..., 0.0819, 0.0053, 0.0019],
         [0.0111, 0.0158, 0.0334,  ..., 0.1040, 0.9842, 0.9943],
         [0.0111, 0.9525, 0.8997,  ..., 0.7318, 0.0053, 0.0019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2501e-02, 4.3583e-03, 9.8892e-01,  ..., 8.4042e-01,
          2.1139e-02, 2.2175e-02],
         [1.2203e-02, 4.3583e-03, 3.4666e-03,  ..., 2.6995e-02,
          1.7559e-02, 1.8225e-02],
         [9.6309e-01, 4.3583e-03, 3.4666e-03,  ..., 2.6995e-02,
          9.4374e-01, 9.4137e-01],
         [1.2203e-02, 9.8693e-01, 4.1443e-03,  ..., 1.0559e-01,
          1.7559e-02, 1.8225e-02]],
        [[4.0971e-02, 3.5732e-03, 9.9882e-01,  ..., 2.7535e-03,
          4.9067e-03, 1.7762e-02],
         [2.3547e-02, 6.7394e-03, 3.9419e-04,  ..., 2.7535e-03,
          4.9067e-03, 1.5556e-02],
         [9.1193e-01, 3.5732e-03, 3.9419e-04,  ..., 2.7535e-03,
          4.9067e-03, 9.5113e-01],
         [2.3547e-02, 9.8611e-01, 3.9419e-04,  ..., 9.9174e-01,
          9.8528e-01, 1.5556e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:26,663 [Process: 0] Synchronize training processes
2024-08-20 17:43:26,663 [Process: 0] Evaluating...
2024-08-20 17:43:26,665 [Process: 0] EPOCH 168:
2024-08-20 17:43:26,666 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:27,669 [Process: 0] Synchronize training processes
2024-08-20 17:43:27,669 [Process: 0] Evaluating...
2024-08-20 17:43:27,671 [Process: 0] EPOCH 169:
2024-08-20 17:43:27,672 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9921, 0.0130, 0.0451,  ..., 0.9924, 0.9765, 0.0194],
         [0.0026, 0.0130, 0.0451,  ..., 0.0025, 0.0078, 0.0194],
         [0.0026, 0.0130, 0.0570,  ..., 0.0025, 0.0078, 0.0194],
         [0.0026, 0.9611, 0.8528,  ..., 0.0025, 0.0078, 0.9419]],
        [[0.9318, 0.0171, 0.0223,  ..., 0.0749, 0.0093, 0.0030],
         [0.0210, 0.0171, 0.0223,  ..., 0.0634, 0.0093, 0.0030],
         [0.0263, 0.0171, 0.0223,  ..., 0.1046, 0.9721, 0.9909],
         [0.0210, 0.9487, 0.9332,  ..., 0.7571, 0.0093, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.0236e-03, 1.5054e-03, 9.9672e-01,  ..., 9.8035e-01,
          9.3446e-03, 1.0226e-02],
         [8.0236e-03, 1.5054e-03, 9.2644e-04,  ..., 6.9586e-03,
          9.3446e-03, 9.9269e-03],
         [9.7593e-01, 1.5054e-03, 9.2644e-04,  ..., 6.2595e-03,
          9.7197e-01, 9.6992e-01],
         [8.0236e-03, 9.9548e-01, 1.4310e-03,  ..., 6.4333e-03,
          9.3446e-03, 9.9269e-03]],
        [[3.8307e-02, 6.6680e-04, 9.9156e-01,  ..., 7.4964e-03,
          5.5643e-04, 2.0957e-02],
         [2.7872e-02, 6.6680e-04, 2.8144e-03,  ..., 7.4964e-03,
          5.5643e-04, 2.0144e-02],
         [9.0485e-01, 6.6680e-04, 2.8144e-03,  ..., 7.4964e-03,
          5.5643e-04, 9.3876e-01],
         [2.8966e-02, 9.9800e-01, 2.8144e-03,  ..., 9.7751e-01,
          9.9833e-01, 2.0144e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9579, 0.0183, 0.0488,  ..., 0.9937, 0.9949, 0.0122],
         [0.0123, 0.0183, 0.0395,  ..., 0.0021, 0.0017, 0.0122],
         [0.0123, 0.0183, 0.0428,  ..., 0.0021, 0.0017, 0.0122],
         [0.0176, 0.9451, 0.8689,  ..., 0.0021, 0.0017, 0.9635]],
        [[0.9587, 0.0068, 0.0353,  ..., 0.2003, 0.0011, 0.0016],
         [0.0138, 0.0068, 0.0382,  ..., 0.1179, 0.0011, 0.0018],
         [0.0138, 0.0068, 0.0362,  ..., 0.2624, 0.9968, 0.9949],
         [0.0138, 0.9797, 0.8903,  ..., 0.4194, 0.0011, 0.0016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8548e-02, 2.3172e-03, 9.9473e-01,  ..., 9.5038e-01,
          1.3601e-02, 6.5271e-03],
         [1.8548e-02, 2.3172e-03, 1.7580e-03,  ..., 2.2747e-02,
          1.3601e-02, 6.5271e-03],
         [9.4073e-01, 2.3172e-03, 1.7580e-03,  ..., 1.3437e-02,
          9.5920e-01, 9.8042e-01],
         [2.2178e-02, 9.9305e-01, 1.7580e-03,  ..., 1.3437e-02,
          1.3601e-02, 6.5271e-03]],
        [[4.7160e-02, 3.5186e-03, 9.9725e-01,  ..., 9.9346e-01,
          7.3739e-04, 1.0069e-02],
         [3.2979e-02, 3.8739e-03, 9.1750e-04,  ..., 2.1167e-03,
          7.3739e-04, 1.0069e-02],
         [8.8022e-01, 3.5186e-03, 9.1750e-04,  ..., 2.1167e-03,
          7.3739e-04, 9.6979e-01],
         [3.9642e-02, 9.8909e-01, 9.1750e-04,  ..., 2.3111e-03,
          9.9779e-01, 1.0069e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:28,677 [Process: 0] Synchronize training processes
2024-08-20 17:43:28,678 [Process: 0] Evaluating...
2024-08-20 17:43:28,680 [Process: 0] EPOCH 170:
2024-08-20 17:43:28,681 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:29,740 [Process: 0] Synchronize training processes
2024-08-20 17:43:29,741 [Process: 0] Evaluating...
2024-08-20 17:43:29,742 [Process: 0] EPOCH 171:
2024-08-20 17:43:29,744 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5522e-01, 1.3775e-02, 3.5256e-02,  ..., 9.9744e-01,
          9.5985e-01, 1.8709e-02],
         [1.4864e-02, 1.3775e-02, 3.5256e-02,  ..., 8.5177e-04,
          1.3142e-02, 1.8709e-02],
         [1.5057e-02, 1.3775e-02, 3.7247e-02,  ..., 8.5177e-04,
          1.3866e-02, 1.8709e-02],
         [1.4864e-02, 9.5867e-01, 8.9224e-01,  ..., 8.5177e-04,
          1.3142e-02, 9.4387e-01]],
        [[8.3952e-01, 9.1690e-03, 1.1736e-02,  ..., 5.7678e-02,
          1.1311e-03, 1.7102e-03],
         [4.5483e-02, 9.1690e-03, 1.1531e-02,  ..., 6.1875e-02,
          1.1311e-03, 1.7102e-03],
         [6.2765e-02, 9.1690e-03, 1.1531e-02,  ..., 7.0452e-02,
          9.9661e-01, 9.9487e-01],
         [5.2235e-02, 9.7249e-01, 9.6520e-01,  ..., 8.0999e-01,
          1.1311e-03, 1.7102e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.3501e-03, 2.2979e-03, 9.5752e-01,  ..., 7.5496e-01,
          8.6754e-03, 5.9756e-03],
         [8.3501e-03, 2.2979e-03, 1.2292e-02,  ..., 1.3841e-01,
          8.6754e-03, 5.9756e-03],
         [9.7495e-01, 2.2979e-03, 1.2292e-02,  ..., 4.3674e-02,
          9.7397e-01, 9.8207e-01],
         [8.3501e-03, 9.9311e-01, 1.7900e-02,  ..., 6.2955e-02,
          8.6754e-03, 5.9756e-03]],
        [[5.3646e-02, 9.4456e-03, 9.9649e-01,  ..., 9.9913e-01,
          4.4102e-03, 5.2060e-02],
         [2.9729e-02, 1.0576e-02, 1.1707e-03,  ..., 2.8990e-04,
          4.4102e-03, 3.9458e-02],
         [8.8690e-01, 9.4456e-03, 1.1707e-03,  ..., 2.8990e-04,
          4.4102e-03, 8.6296e-01],
         [2.9729e-02, 9.7053e-01, 1.1707e-03,  ..., 2.8990e-04,
          9.8677e-01, 4.5526e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9904, 0.0113, 0.0292,  ..., 0.9728, 0.9799, 0.0163],
         [0.0032, 0.0113, 0.0234,  ..., 0.0086, 0.0067, 0.0163],
         [0.0032, 0.0113, 0.0242,  ..., 0.0090, 0.0067, 0.0163],
         [0.0032, 0.9661, 0.9233,  ..., 0.0096, 0.0067, 0.9511]],
        [[0.4895, 0.0151, 0.0164,  ..., 0.0272, 0.0011, 0.0032],
         [0.3293, 0.0151, 0.0154,  ..., 0.0272, 0.0011, 0.0032],
         [0.1053, 0.0151, 0.0154,  ..., 0.0272, 0.9966, 0.9903],
         [0.0759, 0.9547, 0.9527,  ..., 0.9185, 0.0011, 0.0032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2992e-02, 9.0890e-04, 9.9597e-01,  ..., 9.8964e-01,
          1.5056e-02, 1.9738e-02],
         [1.2992e-02, 9.0890e-04, 1.3425e-03,  ..., 3.2327e-03,
          1.5056e-02, 1.9738e-02],
         [9.6103e-01, 9.0890e-04, 1.3425e-03,  ..., 3.2327e-03,
          9.5483e-01, 9.3950e-01],
         [1.2992e-02, 9.9727e-01, 1.3425e-03,  ..., 3.8968e-03,
          1.5056e-02, 2.1025e-02]],
        [[2.4174e-02, 1.2205e-02, 9.9867e-01,  ..., 9.9221e-01,
          3.5358e-03, 1.4788e-02],
         [2.3917e-02, 1.2205e-02, 4.4465e-04,  ..., 2.3207e-03,
          3.5358e-03, 1.4788e-02],
         [9.2209e-01, 1.2205e-02, 4.4465e-04,  ..., 2.3207e-03,
          3.5358e-03, 9.5564e-01],
         [2.9814e-02, 9.6338e-01, 4.4465e-04,  ..., 3.1477e-03,
          9.8939e-01, 1.4788e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:43:30,750 [Process: 0] Synchronize training processes
2024-08-20 17:43:30,750 [Process: 0] Evaluating...
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:32,660 [Process: 0] EPOCH 172:
2024-08-20 17:43:32,662 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:33,679 [Process: 0] Synchronize training processes
2024-08-20 17:43:33,679 [Process: 0] Evaluating...
2024-08-20 17:43:33,681 [Process: 0] EPOCH 173:
2024-08-20 17:43:33,682 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9898e-01, 2.1393e-02, 8.8838e-03,  ..., 9.8164e-01,
          9.6653e-01, 1.8870e-02],
         [3.3830e-04, 1.7440e-02, 8.8838e-03,  ..., 6.1187e-03,
          1.0846e-02, 2.2827e-02],
         [3.3830e-04, 1.7440e-02, 8.8838e-03,  ..., 6.1187e-03,
          1.1780e-02, 1.8870e-02],
         [3.3830e-04, 9.4373e-01, 9.7335e-01,  ..., 6.1187e-03,
          1.0846e-02, 9.3943e-01]],
        [[9.6826e-01, 2.7578e-02, 1.7305e-02,  ..., 1.4057e-02,
          2.3411e-03, 4.7893e-03],
         [1.0164e-02, 2.7578e-02, 1.7305e-02,  ..., 1.4057e-02,
          2.3411e-03, 4.7893e-03],
         [1.1407e-02, 2.7578e-02, 1.7305e-02,  ..., 1.4057e-02,
          9.9298e-01, 9.8563e-01],
         [1.0164e-02, 9.1727e-01, 9.4808e-01,  ..., 9.5783e-01,
          2.3411e-03, 4.7893e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1309e-02, 1.5837e-03, 9.8281e-01,  ..., 9.9806e-01,
          1.5957e-02, 1.6053e-02],
         [1.1309e-02, 1.5837e-03, 5.6394e-03,  ..., 6.4630e-04,
          1.5957e-02, 1.6053e-02],
         [9.6607e-01, 1.5837e-03, 5.6394e-03,  ..., 6.4630e-04,
          9.5213e-01, 9.5184e-01],
         [1.1309e-02, 9.9525e-01, 5.9117e-03,  ..., 6.4630e-04,
          1.5957e-02, 1.6053e-02]],
        [[2.4251e-02, 2.7337e-02, 9.8924e-01,  ..., 9.9571e-01,
          1.1914e-03, 6.8419e-03],
         [2.1368e-02, 7.9836e-02, 3.5865e-03,  ..., 1.4302e-03,
          1.1914e-03, 6.8419e-03],
         [9.3185e-01, 2.7337e-02, 3.5865e-03,  ..., 1.4302e-03,
          1.1914e-03, 9.7947e-01],
         [2.2532e-02, 8.6549e-01, 3.5865e-03,  ..., 1.4302e-03,
          9.9643e-01, 6.8419e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8522e-01, 1.8419e-02, 1.0871e-02,  ..., 9.7492e-01,
          9.5359e-01, 7.1577e-03],
         [4.9263e-03, 1.7906e-02, 1.0862e-02,  ..., 8.1353e-03,
          1.3981e-02, 7.1577e-03],
         [4.9263e-03, 1.7906e-02, 1.0862e-02,  ..., 8.8050e-03,
          1.8451e-02, 7.1577e-03],
         [4.9263e-03, 9.4577e-01, 9.6741e-01,  ..., 8.1353e-03,
          1.3981e-02, 9.7853e-01]],
        [[9.9764e-01, 2.2966e-02, 3.1663e-02,  ..., 6.3774e-03,
          2.9671e-03, 2.5373e-03],
         [7.8677e-04, 2.2966e-02, 2.4522e-02,  ..., 6.3774e-03,
          2.9671e-03, 2.5373e-03],
         [7.8677e-04, 2.2966e-02, 2.4522e-02,  ..., 6.3774e-03,
          9.9110e-01, 9.9239e-01],
         [7.8677e-04, 9.3110e-01, 9.1929e-01,  ..., 9.8087e-01,
          2.9671e-03, 2.5373e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0172, 0.0045, 0.9961,  ..., 0.9969, 0.0114, 0.0081],
         [0.0172, 0.0045, 0.0013,  ..., 0.0010, 0.0114, 0.0081],
         [0.9476, 0.0045, 0.0013,  ..., 0.0010, 0.9658, 0.9757],
         [0.0181, 0.9865, 0.0013,  ..., 0.0010, 0.0114, 0.0081]],
        [[0.0599, 0.0038, 0.9952,  ..., 0.9947, 0.0090, 0.0390],
         [0.0439, 0.0079, 0.0016,  ..., 0.0018, 0.0090, 0.0349],
         [0.8362, 0.0038, 0.0016,  ..., 0.0018, 0.0090, 0.8912],
         [0.0599, 0.9844, 0.0016,  ..., 0.0018, 0.9729, 0.0349]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:34,725 [Process: 0] Synchronize training processes
2024-08-20 17:43:34,725 [Process: 0] Evaluating...
2024-08-20 17:43:34,727 [Process: 0] EPOCH 174:
2024-08-20 17:43:34,728 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:35,792 [Process: 0] Synchronize training processes
2024-08-20 17:43:35,792 [Process: 0] Evaluating...
2024-08-20 17:43:35,794 [Process: 0] EPOCH 175:
2024-08-20 17:43:35,795 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9473, 0.0147, 0.0139,  ..., 0.9495, 0.9837, 0.0169],
         [0.0140, 0.0147, 0.0135,  ..., 0.0159, 0.0054, 0.0137],
         [0.0212, 0.0150, 0.0135,  ..., 0.0187, 0.0054, 0.0137],
         [0.0175, 0.9555, 0.9591,  ..., 0.0159, 0.0054, 0.9557]],
        [[0.9463, 0.0168, 0.0129,  ..., 0.0198, 0.0044, 0.0071],
         [0.0176, 0.0168, 0.0129,  ..., 0.0140, 0.0044, 0.0071],
         [0.0185, 0.0168, 0.0129,  ..., 0.0140, 0.9869, 0.9788],
         [0.0176, 0.9496, 0.9614,  ..., 0.9522, 0.0044, 0.0071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5939e-02, 2.6368e-03, 9.9445e-01,  ..., 9.8996e-01,
          1.2798e-02, 9.1884e-03],
         [1.5939e-02, 2.6368e-03, 1.8504e-03,  ..., 3.3463e-03,
          1.2798e-02, 9.1884e-03],
         [9.5218e-01, 2.6368e-03, 1.8504e-03,  ..., 3.3463e-03,
          9.6161e-01, 9.7243e-01],
         [1.5939e-02, 9.9209e-01, 1.8504e-03,  ..., 3.3463e-03,
          1.2798e-02, 9.1884e-03]],
        [[8.0251e-02, 1.9259e-03, 9.8453e-01,  ..., 4.6460e-01,
          8.1746e-04, 1.6221e-02],
         [5.1346e-02, 1.9259e-03, 5.1553e-03,  ..., 5.3001e-02,
          8.1746e-04, 1.6221e-02],
         [7.9427e-01, 1.9259e-03, 5.1553e-03,  ..., 5.3001e-02,
          8.1746e-04, 9.5134e-01],
         [7.4130e-02, 9.9422e-01, 5.1553e-03,  ..., 4.2940e-01,
          9.9755e-01, 1.6221e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9829, 0.0402, 0.0129,  ..., 0.9837, 0.9617, 0.0245],
         [0.0055, 0.0375, 0.0129,  ..., 0.0052, 0.0125, 0.0245],
         [0.0061, 0.0375, 0.0129,  ..., 0.0059, 0.0134, 0.0245],
         [0.0055, 0.8848, 0.9612,  ..., 0.0052, 0.0125, 0.9266]],
        [[0.9788, 0.0079, 0.0055,  ..., 0.0123, 0.0057, 0.0056],
         [0.0071, 0.0079, 0.0055,  ..., 0.0111, 0.0057, 0.0056],
         [0.0071, 0.0079, 0.0055,  ..., 0.0111, 0.9828, 0.9831],
         [0.0071, 0.9762, 0.9836,  ..., 0.9655, 0.0057, 0.0056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0191, 0.0033, 0.9852,  ..., 0.9952, 0.0059, 0.0114],
         [0.0191, 0.0033, 0.0047,  ..., 0.0016, 0.0059, 0.0114],
         [0.9428, 0.0033, 0.0047,  ..., 0.0016, 0.9823, 0.9658],
         [0.0191, 0.9902, 0.0054,  ..., 0.0016, 0.0059, 0.0114]],
        [[0.3048, 0.0211, 0.9908,  ..., 0.9640, 0.0013, 0.0156],
         [0.0933, 0.0211, 0.0031,  ..., 0.0091, 0.0013, 0.0156],
         [0.4376, 0.0211, 0.0031,  ..., 0.0091, 0.0013, 0.9531],
         [0.1643, 0.9368, 0.0031,  ..., 0.0177, 0.9960, 0.0156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:36,806 [Process: 0] Synchronize training processes
2024-08-20 17:43:36,806 [Process: 0] Evaluating...
2024-08-20 17:43:36,808 [Process: 0] EPOCH 176:
2024-08-20 17:43:36,809 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:37,834 [Process: 0] Synchronize training processes
2024-08-20 17:43:37,834 [Process: 0] Evaluating...
2024-08-20 17:43:37,836 [Process: 0] EPOCH 177:
2024-08-20 17:43:37,837 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4279e-01, 1.8367e-02, 1.8070e-02,  ..., 9.8677e-01,
          9.8764e-01, 9.9525e-03],
         [1.6464e-02, 1.8367e-02, 1.8070e-02,  ..., 4.4093e-03,
          4.1209e-03, 9.9525e-03],
         [2.4287e-02, 1.8367e-02, 2.1956e-02,  ..., 4.4093e-03,
          4.1209e-03, 9.9525e-03],
         [1.6464e-02, 9.4490e-01, 9.4190e-01,  ..., 4.4093e-03,
          4.1209e-03, 9.7014e-01]],
        [[9.9800e-01, 1.2231e-02, 2.5006e-02,  ..., 1.9471e-02,
          3.2778e-03, 4.7257e-03],
         [6.6730e-04, 1.2231e-02, 2.5006e-02,  ..., 1.9471e-02,
          4.2824e-03, 4.8882e-03],
         [6.6730e-04, 1.2231e-02, 3.3512e-02,  ..., 1.9802e-02,
          9.8916e-01, 9.8566e-01],
         [6.6730e-04, 9.6331e-01, 9.1648e-01,  ..., 9.4126e-01,
          3.2778e-03, 4.7257e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5236e-02, 1.4786e-03, 9.9568e-01,  ..., 9.9733e-01,
          1.4891e-02, 2.1364e-02],
         [1.5236e-02, 1.4786e-03, 1.4407e-03,  ..., 8.8944e-04,
          1.4891e-02, 2.1364e-02],
         [9.5429e-01, 1.4786e-03, 1.4407e-03,  ..., 8.8944e-04,
          9.5533e-01, 9.3259e-01],
         [1.5236e-02, 9.9556e-01, 1.4407e-03,  ..., 8.8944e-04,
          1.4891e-02, 2.4676e-02]],
        [[1.1302e-01, 2.6936e-03, 9.8676e-01,  ..., 9.8986e-01,
          5.5136e-03, 1.1625e-02],
         [5.5393e-02, 2.6936e-03, 4.4147e-03,  ..., 3.3816e-03,
          5.5136e-03, 1.1625e-02],
         [7.6412e-01, 2.6936e-03, 4.4147e-03,  ..., 3.3816e-03,
          5.5136e-03, 9.6512e-01],
         [6.7469e-02, 9.9192e-01, 4.4147e-03,  ..., 3.3816e-03,
          9.8346e-01, 1.1625e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9890, 0.0091, 0.0091,  ..., 0.9682, 0.9895, 0.0175],
         [0.0037, 0.0091, 0.0091,  ..., 0.0106, 0.0035, 0.0175],
         [0.0037, 0.0091, 0.0091,  ..., 0.0106, 0.0035, 0.0175],
         [0.0037, 0.9727, 0.9727,  ..., 0.0106, 0.0035, 0.9476]],
        [[0.9869, 0.0139, 0.0234,  ..., 0.0128, 0.0036, 0.0054],
         [0.0044, 0.0139, 0.0234,  ..., 0.0128, 0.0051, 0.0064],
         [0.0044, 0.0139, 0.0234,  ..., 0.0128, 0.9877, 0.9827],
         [0.0044, 0.9583, 0.9299,  ..., 0.9615, 0.0036, 0.0054]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9677e-02, 1.2207e-03, 9.9686e-01,  ..., 9.9650e-01,
          1.3697e-02, 3.4592e-02],
         [1.9677e-02, 1.2207e-03, 1.0458e-03,  ..., 1.1669e-03,
          1.3697e-02, 3.2721e-02],
         [9.3658e-01, 1.2207e-03, 1.0458e-03,  ..., 1.1669e-03,
          9.5773e-01, 8.8800e-01],
         [2.4063e-02, 9.9634e-01, 1.0458e-03,  ..., 1.1669e-03,
          1.4874e-02, 4.4687e-02]],
        [[5.5623e-01, 1.6871e-02, 9.5750e-01,  ..., 9.9309e-01,
          8.3510e-04, 9.2201e-03],
         [6.7798e-02, 3.6587e-02, 1.2027e-02,  ..., 2.3020e-03,
          8.3510e-04, 9.2201e-03],
         [2.8412e-01, 1.6871e-02, 1.2027e-02,  ..., 2.3020e-03,
          8.3510e-04, 9.7234e-01],
         [9.1845e-02, 9.2967e-01, 1.8445e-02,  ..., 2.3020e-03,
          9.9749e-01, 9.2201e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:38,841 [Process: 0] Synchronize training processes
2024-08-20 17:43:38,841 [Process: 0] Evaluating...
2024-08-20 17:43:38,843 [Process: 0] EPOCH 178:
2024-08-20 17:43:38,844 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:39,890 [Process: 0] Synchronize training processes
2024-08-20 17:43:39,890 [Process: 0] Evaluating...
2024-08-20 17:43:39,892 [Process: 0] EPOCH 179:
2024-08-20 17:43:39,893 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9797, 0.0107, 0.0155,  ..., 0.9801, 0.9772, 0.0119],
         [0.0068, 0.0107, 0.0155,  ..., 0.0066, 0.0072, 0.0119],
         [0.0068, 0.0107, 0.0155,  ..., 0.0066, 0.0085, 0.0119],
         [0.0068, 0.9678, 0.9534,  ..., 0.0066, 0.0072, 0.9644]],
        [[0.9859, 0.0149, 0.0236,  ..., 0.0047, 0.0019, 0.0031],
         [0.0047, 0.0149, 0.0296,  ..., 0.0047, 0.0028, 0.0031],
         [0.0047, 0.0149, 0.0236,  ..., 0.0047, 0.9933, 0.9907],
         [0.0047, 0.9554, 0.9232,  ..., 0.9860, 0.0019, 0.0031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1662e-02, 1.3033e-03, 8.5619e-01,  ..., 9.9917e-01,
          4.6614e-03, 3.1594e-02],
         [1.1662e-02, 1.3033e-03, 4.0742e-02,  ..., 2.7630e-04,
          4.6614e-03, 3.1594e-02],
         [9.6501e-01, 1.3033e-03, 4.0742e-02,  ..., 2.7630e-04,
          9.8602e-01, 8.8826e-01],
         [1.1662e-02, 9.9609e-01, 6.2327e-02,  ..., 2.7630e-04,
          4.6614e-03, 4.8555e-02]],
        [[1.5430e-01, 4.5719e-02, 9.8602e-01,  ..., 9.7737e-01,
          3.1312e-03, 2.8685e-02],
         [8.2979e-02, 1.5715e-01, 4.6616e-03,  ..., 8.2645e-03,
          3.1312e-03, 2.8458e-02],
         [5.3944e-01, 4.5719e-02, 4.6616e-03,  ..., 7.1809e-03,
          3.1312e-03, 9.0584e-01],
         [2.2328e-01, 7.5141e-01, 4.6616e-03,  ..., 7.1809e-03,
          9.9061e-01, 3.7012e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7678e-01, 7.1138e-03, 1.5934e-02,  ..., 9.6697e-01,
          9.8805e-01, 8.5681e-03],
         [7.6922e-03, 7.1138e-03, 1.5934e-02,  ..., 1.1010e-02,
          3.9836e-03, 8.5681e-03],
         [7.8340e-03, 7.1138e-03, 1.5934e-02,  ..., 1.1010e-02,
          3.9836e-03, 8.5681e-03],
         [7.6922e-03, 9.7866e-01, 9.5220e-01,  ..., 1.1010e-02,
          3.9836e-03, 9.7430e-01]],
        [[9.6848e-01, 1.0536e-02, 2.6026e-02,  ..., 1.7795e-02,
          3.5103e-04, 3.1076e-03],
         [1.0505e-02, 1.0536e-02, 3.0793e-02,  ..., 1.7795e-02,
          3.5103e-04, 3.1076e-03],
         [1.0505e-02, 1.0536e-02, 2.6026e-02,  ..., 1.7795e-02,
          9.9895e-01, 9.9068e-01],
         [1.0505e-02, 9.6839e-01, 9.1715e-01,  ..., 9.4662e-01,
          3.5103e-04, 3.1076e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0179, 0.0163, 0.9480,  ..., 0.9945, 0.0276, 0.0093],
         [0.0179, 0.0163, 0.0126,  ..., 0.0018, 0.0276, 0.0093],
         [0.9463, 0.0163, 0.0126,  ..., 0.0018, 0.8943, 0.9721],
         [0.0179, 0.9511, 0.0269,  ..., 0.0018, 0.0506, 0.0093]],
        [[0.0641, 0.0102, 0.9570,  ..., 0.9922, 0.0044, 0.0086],
         [0.0450, 0.0102, 0.0137,  ..., 0.0028, 0.0057, 0.0086],
         [0.8102, 0.0102, 0.0137,  ..., 0.0025, 0.0044, 0.9743],
         [0.0807, 0.9695, 0.0156,  ..., 0.0025, 0.9856, 0.0086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:40,915 [Process: 0] Synchronize training processes
2024-08-20 17:43:40,915 [Process: 0] Evaluating...
2024-08-20 17:43:40,917 [Process: 0] EPOCH 180:
2024-08-20 17:43:40,919 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:41,918 [Process: 0] Synchronize training processes
2024-08-20 17:43:41,918 [Process: 0] Evaluating...
2024-08-20 17:43:41,920 [Process: 0] EPOCH 181:
2024-08-20 17:43:41,921 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9167e-01, 1.3817e-02, 8.1726e-03,  ..., 9.8161e-01,
          9.9691e-01, 1.9723e-02],
         [2.7777e-03, 1.3817e-02, 8.1726e-03,  ..., 6.1301e-03,
          1.0312e-03, 1.9723e-02],
         [2.7777e-03, 1.4151e-02, 8.1726e-03,  ..., 6.1301e-03,
          1.0312e-03, 2.0128e-02],
         [2.7777e-03, 9.5821e-01, 9.7548e-01,  ..., 6.1301e-03,
          1.0312e-03, 9.4043e-01]],
        [[9.9762e-01, 1.1360e-02, 2.7325e-02,  ..., 1.8298e-02,
          3.5922e-03, 4.2561e-03],
         [7.9400e-04, 1.1360e-02, 2.7325e-02,  ..., 1.8298e-02,
          3.5922e-03, 4.2561e-03],
         [7.9400e-04, 1.1360e-02, 2.7325e-02,  ..., 1.8298e-02,
          9.8922e-01, 9.8723e-01],
         [7.9400e-04, 9.6592e-01, 9.1802e-01,  ..., 9.4511e-01,
          3.5922e-03, 4.2561e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4305e-02, 9.8529e-04, 9.9778e-01,  ..., 9.9803e-01,
          1.8546e-02, 1.9731e-02],
         [1.4305e-02, 9.8529e-04, 7.3926e-04,  ..., 6.5637e-04,
          1.8546e-02, 1.9731e-02],
         [9.5709e-01, 9.8529e-04, 7.3926e-04,  ..., 6.5637e-04,
          9.4436e-01, 9.3493e-01],
         [1.4305e-02, 9.9704e-01, 7.3926e-04,  ..., 6.5722e-04,
          1.8546e-02, 2.5608e-02]],
        [[2.1131e-01, 3.3091e-04, 9.9279e-01,  ..., 9.9550e-01,
          1.7983e-04, 1.3493e-02],
         [8.6756e-02, 3.3091e-04, 2.0569e-03,  ..., 1.5000e-03,
          1.7983e-04, 1.3493e-02],
         [4.8361e-01, 3.3091e-04, 2.0569e-03,  ..., 1.5000e-03,
          1.7983e-04, 9.5952e-01],
         [2.1833e-01, 9.9901e-01, 3.0972e-03,  ..., 1.5000e-03,
          9.9946e-01, 1.3493e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9910, 0.0188, 0.0150,  ..., 0.9902, 0.9898, 0.0128],
         [0.0030, 0.0188, 0.0165,  ..., 0.0033, 0.0034, 0.0128],
         [0.0030, 0.0188, 0.0150,  ..., 0.0033, 0.0034, 0.0128],
         [0.0030, 0.9437, 0.9535,  ..., 0.0033, 0.0034, 0.9617]],
        [[0.9963, 0.0123, 0.0303,  ..., 0.0416, 0.0048, 0.0018],
         [0.0012, 0.0123, 0.0296,  ..., 0.0416, 0.0048, 0.0018],
         [0.0012, 0.0123, 0.0331,  ..., 0.0578, 0.9856, 0.9946],
         [0.0012, 0.9631, 0.9070,  ..., 0.8589, 0.0048, 0.0018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0192, 0.0028, 0.9944,  ..., 0.9958, 0.0083, 0.0073],
         [0.0192, 0.0028, 0.0019,  ..., 0.0014, 0.0083, 0.0073],
         [0.9358, 0.0028, 0.0019,  ..., 0.0014, 0.9751, 0.9780],
         [0.0259, 0.9917, 0.0019,  ..., 0.0014, 0.0083, 0.0073]],
        [[0.2286, 0.0046, 0.9889,  ..., 0.9949, 0.0015, 0.0064],
         [0.0891, 0.0046, 0.0041,  ..., 0.0017, 0.0015, 0.0064],
         [0.4237, 0.0046, 0.0035,  ..., 0.0017, 0.0015, 0.9809],
         [0.2586, 0.9862, 0.0035,  ..., 0.0017, 0.9955, 0.0064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:43:42,932 [Process: 0] Synchronize training processes
2024-08-20 17:43:42,932 [Process: 0] Evaluating...
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:44,855 [Process: 0] EPOCH 182:
2024-08-20 17:43:44,857 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:45,894 [Process: 0] Synchronize training processes
2024-08-20 17:43:45,895 [Process: 0] Evaluating...
2024-08-20 17:43:45,896 [Process: 0] EPOCH 183:
2024-08-20 17:43:45,898 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9956, 0.0127, 0.0127,  ..., 0.9897, 0.9852, 0.0127],
         [0.0015, 0.0127, 0.0127,  ..., 0.0034, 0.0049, 0.0127],
         [0.0015, 0.0127, 0.0127,  ..., 0.0036, 0.0049, 0.0127],
         [0.0015, 0.9618, 0.9620,  ..., 0.0034, 0.0049, 0.9619]],
        [[0.9952, 0.0118, 0.0236,  ..., 0.0171, 0.0030, 0.0103],
         [0.0016, 0.0118, 0.0236,  ..., 0.0171, 0.0030, 0.0103],
         [0.0016, 0.0118, 0.0236,  ..., 0.0171, 0.9911, 0.9691],
         [0.0016, 0.9647, 0.9293,  ..., 0.9488, 0.0030, 0.0103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6865e-03, 1.5706e-03, 9.9743e-01,  ..., 9.8943e-01,
          9.8777e-03, 1.3174e-02],
         [8.6865e-03, 2.6531e-03, 8.5740e-04,  ..., 3.1714e-03,
          9.8777e-03, 1.3174e-02],
         [9.7394e-01, 1.5706e-03, 8.5740e-04,  ..., 3.1714e-03,
          9.7037e-01, 9.6048e-01],
         [8.6865e-03, 9.9421e-01, 8.5740e-04,  ..., 4.2270e-03,
          9.8777e-03, 1.3174e-02]],
        [[7.6232e-02, 3.8341e-04, 9.5678e-01,  ..., 9.9290e-01,
          1.8625e-04, 6.9045e-03],
         [5.1598e-02, 3.8341e-04, 1.1630e-02,  ..., 2.5662e-03,
          1.8625e-04, 6.9045e-03],
         [7.7086e-01, 3.8341e-04, 1.1630e-02,  ..., 2.2686e-03,
          1.8625e-04, 9.7929e-01],
         [1.0131e-01, 9.9885e-01, 1.9961e-02,  ..., 2.2686e-03,
          9.9944e-01, 6.9045e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9952, 0.0084, 0.0203,  ..., 0.9932, 0.9932, 0.0082],
         [0.0016, 0.0084, 0.0203,  ..., 0.0022, 0.0023, 0.0082],
         [0.0016, 0.0084, 0.0234,  ..., 0.0022, 0.0023, 0.0082],
         [0.0016, 0.9749, 0.9360,  ..., 0.0023, 0.0023, 0.9754]],
        [[0.9950, 0.0105, 0.0114,  ..., 0.0142, 0.0028, 0.0018],
         [0.0017, 0.0105, 0.0114,  ..., 0.0142, 0.0028, 0.0018],
         [0.0017, 0.0105, 0.0114,  ..., 0.9573, 0.9916, 0.9945],
         [0.0017, 0.9686, 0.9659,  ..., 0.0142, 0.0028, 0.0018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6655e-02, 2.8375e-03, 9.9387e-01,  ..., 9.9898e-01,
          2.7679e-02, 5.1559e-03],
         [1.8031e-02, 2.8375e-03, 1.8144e-03,  ..., 3.4119e-04,
          2.5261e-02, 5.1559e-03],
         [9.3728e-01, 2.8375e-03, 1.8144e-03,  ..., 3.4119e-04,
          9.1663e-01, 9.8453e-01],
         [1.8031e-02, 9.9149e-01, 2.5049e-03,  ..., 3.4119e-04,
          3.0428e-02, 5.1559e-03]],
        [[4.7662e-02, 2.9642e-04, 9.9288e-01,  ..., 9.9146e-01,
          3.0568e-04, 1.1125e-02],
         [3.8183e-02, 2.9642e-04, 2.3734e-03,  ..., 2.8469e-03,
          3.0568e-04, 1.1125e-02],
         [8.5480e-01, 2.9642e-04, 2.3734e-03,  ..., 2.8469e-03,
          3.0568e-04, 9.6662e-01],
         [5.9358e-02, 9.9911e-01, 2.3734e-03,  ..., 2.8469e-03,
          9.9908e-01, 1.1125e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:46,916 [Process: 0] Synchronize training processes
2024-08-20 17:43:46,916 [Process: 0] Evaluating...
2024-08-20 17:43:46,918 [Process: 0] EPOCH 184:
2024-08-20 17:43:46,919 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:47,981 [Process: 0] Synchronize training processes
2024-08-20 17:43:47,981 [Process: 0] Evaluating...
2024-08-20 17:43:47,983 [Process: 0] EPOCH 185:
2024-08-20 17:43:47,984 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9759e-01, 2.0179e-02, 4.2902e-02,  ..., 9.9723e-01,
          9.7786e-01, 1.9590e-02],
         [8.0262e-04, 2.0179e-02, 4.2902e-02,  ..., 9.2445e-04,
          7.3808e-03, 1.5749e-02],
         [8.0262e-04, 2.0179e-02, 6.4539e-02,  ..., 9.2445e-04,
          7.3808e-03, 1.5749e-02],
         [8.0262e-04, 9.3946e-01, 8.4966e-01,  ..., 9.2445e-04,
          7.3808e-03, 9.4891e-01]],
        [[9.9735e-01, 2.3725e-02, 2.8990e-02,  ..., 3.5418e-02,
          2.1563e-03, 1.3482e-03],
         [8.8424e-04, 2.3725e-02, 2.8990e-02,  ..., 2.6824e-02,
          2.1563e-03, 1.3482e-03],
         [8.8424e-04, 2.8204e-02, 3.9755e-02,  ..., 3.8623e-02,
          9.9353e-01, 9.9596e-01],
         [8.8424e-04, 9.2435e-01, 9.0227e-01,  ..., 8.9913e-01,
          2.1563e-03, 1.3482e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2509e-01, 7.5137e-04, 9.9611e-01,  ..., 9.9666e-01,
          9.4670e-03, 4.4198e-02],
         [7.3774e-02, 7.5137e-04, 1.2970e-03,  ..., 1.1123e-03,
          9.4670e-03, 3.5737e-02],
         [4.9391e-01, 7.5137e-04, 1.2970e-03,  ..., 1.1123e-03,
          9.7160e-01, 8.7410e-01],
         [1.0723e-01, 9.9775e-01, 1.2970e-03,  ..., 1.1123e-03,
          9.4670e-03, 4.5964e-02]],
        [[6.0487e-02, 2.3222e-03, 9.9445e-01,  ..., 9.9777e-01,
          2.1134e-03, 1.2713e-02],
         [4.1185e-02, 2.3222e-03, 1.8506e-03,  ..., 7.4388e-04,
          2.1134e-03, 1.2713e-02],
         [8.3206e-01, 2.3222e-03, 1.8506e-03,  ..., 7.4388e-04,
          2.1134e-03, 9.6186e-01],
         [6.6271e-02, 9.9303e-01, 1.8506e-03,  ..., 7.4388e-04,
          9.9366e-01, 1.2713e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9944, 0.0314, 0.0740,  ..., 0.9554, 0.9797, 0.0105],
         [0.0019, 0.0314, 0.0560,  ..., 0.0145, 0.0071, 0.0105],
         [0.0019, 0.0546, 0.7650,  ..., 0.0145, 0.0066, 0.0105],
         [0.0019, 0.8825, 0.1050,  ..., 0.0157, 0.0066, 0.9684]],
        [[0.9589, 0.0094, 0.0148,  ..., 0.0227, 0.0058, 0.0038],
         [0.0150, 0.0094, 0.0148,  ..., 0.0227, 0.0058, 0.0038],
         [0.0130, 0.0094, 0.0152,  ..., 0.0259, 0.9825, 0.9885],
         [0.0130, 0.9718, 0.9551,  ..., 0.9287, 0.0058, 0.0038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2259e-01, 4.2774e-04, 9.9467e-01,  ..., 9.7800e-01,
          8.1964e-03, 6.3980e-03],
         [6.4392e-02, 4.2774e-04, 1.7782e-03,  ..., 6.7367e-03,
          8.1964e-03, 6.3980e-03],
         [7.2499e-01, 4.2774e-04, 1.7782e-03,  ..., 6.7367e-03,
          9.7541e-01, 9.8081e-01],
         [8.8028e-02, 9.9872e-01, 1.7782e-03,  ..., 8.5237e-03,
          8.1964e-03, 6.3980e-03]],
        [[3.7357e-02, 2.5044e-04, 9.9589e-01,  ..., 9.9891e-01,
          1.1071e-03, 1.4987e-02],
         [3.0006e-02, 2.5044e-04, 1.3711e-03,  ..., 3.6430e-04,
          1.1071e-03, 1.4987e-02],
         [8.9326e-01, 2.5044e-04, 1.3711e-03,  ..., 3.6430e-04,
          1.1071e-03, 9.5503e-01],
         [3.9380e-02, 9.9925e-01, 1.3711e-03,  ..., 3.6430e-04,
          9.9668e-01, 1.5000e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:43:49,024 [Process: 0] Synchronize training processes
2024-08-20 17:43:49,025 [Process: 0] Evaluating...
2024-08-20 17:43:49,026 [Process: 0] EPOCH 186:
2024-08-20 17:43:49,028 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:50,083 [Process: 0] Synchronize training processes
2024-08-20 17:43:50,083 [Process: 0] Evaluating...
2024-08-20 17:43:50,085 [Process: 0] EPOCH 187:
2024-08-20 17:43:50,087 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8531e-01, 1.9670e-02, 9.6658e-03,  ..., 9.9827e-01,
          9.8523e-01, 4.2797e-03],
         [4.8955e-03, 1.8718e-02, 9.6658e-03,  ..., 5.7506e-04,
          4.7147e-03, 4.2797e-03],
         [4.8955e-03, 2.1708e-02, 9.6658e-03,  ..., 5.7506e-04,
          4.7147e-03, 4.2797e-03],
         [4.8955e-03, 9.3990e-01, 9.7100e-01,  ..., 5.7506e-04,
          5.3366e-03, 9.8716e-01]],
        [[9.0979e-01, 1.3071e-02, 1.0845e-02,  ..., 1.4554e-02,
          5.3693e-03, 1.6511e-03],
         [2.7295e-02, 1.3071e-02, 1.0845e-02,  ..., 1.4554e-02,
          5.3693e-03, 1.6511e-03],
         [3.5617e-02, 1.3071e-02, 1.0845e-02,  ..., 1.6556e-02,
          9.8389e-01, 9.9505e-01],
         [2.7295e-02, 9.6079e-01, 9.6746e-01,  ..., 9.5434e-01,
          5.3693e-03, 1.6511e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.6035e-02, 3.1829e-03, 9.9782e-01,  ..., 9.9197e-01,
          8.3470e-03, 8.9632e-03],
         [4.0028e-02, 3.1829e-03, 7.2811e-04,  ..., 2.6754e-03,
          8.3470e-03, 8.9632e-03],
         [8.5815e-01, 3.1829e-03, 7.2811e-04,  ..., 2.6754e-03,
          9.7496e-01, 9.7311e-01],
         [4.5789e-02, 9.9045e-01, 7.2811e-04,  ..., 2.6754e-03,
          8.3470e-03, 8.9632e-03]],
        [[4.5042e-02, 3.0562e-03, 9.7863e-01,  ..., 9.9640e-01,
          8.0975e-03, 4.3341e-03],
         [3.5526e-02, 3.0562e-03, 7.1225e-03,  ..., 1.1991e-03,
          8.0975e-03, 4.3341e-03],
         [8.6713e-01, 3.0562e-03, 7.1225e-03,  ..., 1.1991e-03,
          8.0975e-03, 9.8700e-01],
         [5.2305e-02, 9.9083e-01, 7.1225e-03,  ..., 1.1991e-03,
          9.7571e-01, 4.3341e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9925, 0.0157, 0.0220,  ..., 0.9756, 0.9942, 0.0085],
         [0.0025, 0.0157, 0.0178,  ..., 0.0081, 0.0019, 0.0085],
         [0.0025, 0.0157, 0.0178,  ..., 0.0081, 0.0019, 0.0085],
         [0.0025, 0.9528, 0.9424,  ..., 0.0081, 0.0019, 0.9745]],
        [[0.7928, 0.0055, 0.0149,  ..., 0.0176, 0.0046, 0.0020],
         [0.1301, 0.0055, 0.0149,  ..., 0.0176, 0.0046, 0.0020],
         [0.0435, 0.0055, 0.0149,  ..., 0.0192, 0.9862, 0.9940],
         [0.0337, 0.9836, 0.9552,  ..., 0.9456, 0.0046, 0.0020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:43:51,127 [Process: 0] Synchronize training processes
2024-08-20 17:43:51,128 [Process: 0] Evaluating...
2024-08-20 17:43:51,129 [Process: 0] EPOCH 188:
2024-08-20 17:43:51,131 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:52,096 [Process: 0] Synchronize training processes
2024-08-20 17:43:52,097 [Process: 0] Evaluating...
2024-08-20 17:43:52,098 [Process: 0] EPOCH 189:
2024-08-20 17:43:52,100 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1647e-03, 1.3304e-03, 9.9715e-01,  ..., 9.9524e-01,
          8.6670e-03, 1.7174e-02],
         [7.1647e-03, 1.3304e-03, 9.4988e-04,  ..., 1.5866e-03,
          8.6670e-03, 1.7174e-02],
         [9.7851e-01, 1.3304e-03, 9.4988e-04,  ..., 1.5866e-03,
          9.7400e-01, 9.3972e-01],
         [7.1647e-03, 9.9601e-01, 9.4988e-04,  ..., 1.5866e-03,
          8.6670e-03, 2.5936e-02]],
        [[4.3179e-02, 2.5319e-03, 9.9138e-01,  ..., 9.9942e-01,
          5.7983e-04, 6.2807e-03],
         [3.2384e-02, 2.5319e-03, 2.8750e-03,  ..., 1.9224e-04,
          5.7983e-04, 6.2807e-03],
         [8.7358e-01, 2.5319e-03, 2.8750e-03,  ..., 1.9224e-04,
          5.7983e-04, 9.8116e-01],
         [5.0852e-02, 9.9240e-01, 2.8750e-03,  ..., 1.9224e-04,
          9.9826e-01, 6.2807e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9945, 0.0126, 0.0576,  ..., 0.9879, 0.9758, 0.0079],
         [0.0018, 0.0113, 0.0301,  ..., 0.0040, 0.0077, 0.0079],
         [0.0018, 0.0113, 0.0301,  ..., 0.0040, 0.0087, 0.0079],
         [0.0018, 0.9649, 0.8823,  ..., 0.0040, 0.0077, 0.9762]],
        [[0.7456, 0.0154, 0.0083,  ..., 0.0326, 0.0024, 0.0046],
         [0.1144, 0.0154, 0.0120,  ..., 0.0293, 0.0025, 0.0046],
         [0.0858, 0.0154, 0.0083,  ..., 0.0293, 0.9928, 0.9863],
         [0.0542, 0.9539, 0.9714,  ..., 0.9088, 0.0024, 0.0046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1558e-03, 4.5884e-04, 9.9537e-01,  ..., 9.9855e-01,
          5.9305e-03, 8.6062e-03],
         [7.1558e-03, 4.5884e-04, 1.5443e-03,  ..., 4.8462e-04,
          5.9305e-03, 8.6062e-03],
         [9.7853e-01, 4.5884e-04, 1.5443e-03,  ..., 4.8462e-04,
          9.8221e-01, 9.7418e-01],
         [7.1558e-03, 9.9862e-01, 1.5443e-03,  ..., 4.8462e-04,
          5.9305e-03, 8.6062e-03]],
        [[5.4644e-02, 1.6313e-03, 9.9916e-01,  ..., 9.7765e-01,
          2.6129e-03, 5.9849e-03],
         [3.4967e-02, 1.6313e-03, 2.8075e-04,  ..., 6.8166e-03,
          2.6129e-03, 5.9849e-03],
         [8.6159e-01, 1.6313e-03, 2.8075e-04,  ..., 6.8166e-03,
          2.6129e-03, 9.8205e-01],
         [4.8799e-02, 9.9511e-01, 2.8075e-04,  ..., 8.7126e-03,
          9.9216e-01, 5.9849e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9940, 0.0057, 0.0102,  ..., 0.9926, 0.8890, 0.0088],
         [0.0020, 0.0057, 0.0102,  ..., 0.0025, 0.0325, 0.0088],
         [0.0020, 0.0057, 0.0102,  ..., 0.0025, 0.0421, 0.0088],
         [0.0020, 0.9830, 0.9694,  ..., 0.0025, 0.0365, 0.9736]],
        [[0.5197, 0.0143, 0.0161,  ..., 0.0126, 0.0034, 0.0032],
         [0.1449, 0.0259, 0.0161,  ..., 0.0126, 0.0070, 0.0033],
         [0.1722, 0.0143, 0.0161,  ..., 0.0126, 0.9862, 0.9903],
         [0.1631, 0.9456, 0.9517,  ..., 0.9621, 0.0034, 0.0032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:43:53,123 [Process: 0] Synchronize training processes
2024-08-20 17:43:53,123 [Process: 0] Evaluating...
2024-08-20 17:43:53,125 [Process: 0] EPOCH 190:
2024-08-20 17:43:53,127 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:54,131 [Process: 0] Synchronize training processes
2024-08-20 17:43:54,131 [Process: 0] Evaluating...
2024-08-20 17:43:54,133 [Process: 0] EPOCH 191:
2024-08-20 17:43:54,134 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.6388e-03, 1.3972e-03, 9.9776e-01,  ..., 9.9567e-01,
          1.4604e-02, 2.1610e-02],
         [7.6388e-03, 1.3972e-03, 7.4734e-04,  ..., 1.4450e-03,
          1.4604e-02, 2.1610e-02],
         [9.7708e-01, 1.3972e-03, 7.4734e-04,  ..., 1.4450e-03,
          9.5338e-01, 9.2864e-01],
         [7.6388e-03, 9.9581e-01, 7.4734e-04,  ..., 1.4450e-03,
          1.7410e-02, 2.8140e-02]],
        [[4.4448e-02, 2.4210e-04, 9.9890e-01,  ..., 9.9109e-01,
          3.3662e-03, 7.1387e-03],
         [2.4822e-02, 2.4210e-04, 3.6720e-04,  ..., 2.9706e-03,
          3.3662e-03, 7.1387e-03],
         [8.9773e-01, 2.4210e-04, 3.6720e-04,  ..., 2.9706e-03,
          3.3662e-03, 9.7858e-01],
         [3.2999e-02, 9.9927e-01, 3.6720e-04,  ..., 2.9706e-03,
          9.8990e-01, 7.1387e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9899e-01, 4.9293e-03, 2.7467e-03,  ..., 9.9721e-01,
          8.8466e-01, 1.1476e-02],
         [3.3744e-04, 4.9293e-03, 2.7467e-03,  ..., 9.3133e-04,
          3.0949e-02, 1.1476e-02],
         [3.3744e-04, 4.9293e-03, 2.7467e-03,  ..., 9.3133e-04,
          5.3443e-02, 1.1476e-02],
         [3.3744e-04, 9.8521e-01, 9.9176e-01,  ..., 9.3133e-04,
          3.0949e-02, 9.6557e-01]],
        [[8.3137e-01, 9.8436e-03, 1.7066e-02,  ..., 9.5324e-03,
          8.0768e-03, 3.7495e-03],
         [6.5587e-02, 9.8436e-03, 1.7066e-02,  ..., 9.5324e-03,
          8.0768e-03, 5.2065e-03],
         [5.2458e-02, 9.8436e-03, 1.7066e-02,  ..., 9.5324e-03,
          9.7577e-01, 9.8729e-01],
         [5.0586e-02, 9.7047e-01, 9.4880e-01,  ..., 9.7140e-01,
          8.0768e-03, 3.7495e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3030e-02, 4.5975e-04, 9.9873e-01,  ..., 9.9533e-01,
          7.4786e-03, 1.2461e-02],
         [1.3030e-02, 4.5975e-04, 4.2325e-04,  ..., 1.5566e-03,
          7.4786e-03, 1.2461e-02],
         [9.6091e-01, 4.5975e-04, 4.2325e-04,  ..., 1.5566e-03,
          9.7756e-01, 9.6262e-01],
         [1.3030e-02, 9.9862e-01, 4.2325e-04,  ..., 1.5566e-03,
          7.4786e-03, 1.2461e-02]],
        [[6.2097e-02, 4.1000e-04, 9.9471e-01,  ..., 9.9203e-01,
          7.3786e-03, 3.0872e-03],
         [3.0776e-02, 4.1000e-04, 1.7629e-03,  ..., 2.6558e-03,
          7.3786e-03, 3.0872e-03],
         [8.7387e-01, 4.1000e-04, 1.7629e-03,  ..., 2.6558e-03,
          7.3786e-03, 9.9074e-01],
         [3.3254e-02, 9.9877e-01, 1.7629e-03,  ..., 2.6558e-03,
          9.7786e-01, 3.0872e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9963, 0.0100, 0.0041,  ..., 0.9952, 0.8892, 0.0097],
         [0.0012, 0.0092, 0.0041,  ..., 0.0016, 0.0284, 0.0097],
         [0.0012, 0.0092, 0.0041,  ..., 0.0016, 0.0516, 0.0097],
         [0.0012, 0.9715, 0.9877,  ..., 0.0016, 0.0307, 0.9710]],
        [[0.8092, 0.0173, 0.0073,  ..., 0.0353, 0.0040, 0.0021],
         [0.0456, 0.0173, 0.0073,  ..., 0.0353, 0.0048, 0.0021],
         [0.0724, 0.0173, 0.0073,  ..., 0.0380, 0.9872, 0.9936],
         [0.0727, 0.9482, 0.9782,  ..., 0.8914, 0.0040, 0.0021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-20 17:43:55,184 [Process: 0] Synchronize training processes
2024-08-20 17:43:55,184 [Process: 0] Evaluating...
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2207e-02, 1.5941e-03, 9.9249e-01,  ..., 9.8954e-01,
          8.2708e-03, 1.3032e-02],
         [1.9736e-02, 1.5941e-03, 2.3336e-03,  ..., 3.2843e-03,
          8.2708e-03, 1.3032e-02],
         [9.3608e-01, 1.5941e-03, 2.3336e-03,  ..., 3.2843e-03,
          9.7519e-01, 9.6090e-01],
         [2.1979e-02, 9.9522e-01, 2.8436e-03,  ..., 3.8892e-03,
          8.2708e-03, 1.3032e-02]],
        [[3.9998e-02, 4.4243e-03, 9.9867e-01,  ..., 9.9634e-01,
          1.6586e-03, 7.2591e-03],
         [2.8949e-02, 4.4243e-03, 4.4241e-04,  ..., 1.2198e-03,
          1.6586e-03, 7.2591e-03],
         [8.9562e-01, 4.4243e-03, 4.4241e-04,  ..., 1.2198e-03,
          1.6586e-03, 9.7822e-01],
         [3.5436e-02, 9.8673e-01, 4.4241e-04,  ..., 1.2198e-03,
          9.9502e-01, 7.2591e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:43:57,091 [Process: 0] EPOCH 192:
2024-08-20 17:43:57,093 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:43:58,135 [Process: 0] Synchronize training processes
2024-08-20 17:43:58,135 [Process: 0] Evaluating...
2024-08-20 17:43:58,137 [Process: 0] EPOCH 193:
2024-08-20 17:43:58,139 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9908, 0.0085, 0.0127,  ..., 0.9832, 0.8892, 0.0235],
         [0.0031, 0.0085, 0.0127,  ..., 0.0054, 0.0282, 0.0146],
         [0.0031, 0.0085, 0.0127,  ..., 0.0059, 0.0465, 0.0146],
         [0.0031, 0.9744, 0.9619,  ..., 0.0054, 0.0360, 0.9473]],
        [[0.9219, 0.0083, 0.0115,  ..., 0.0110, 0.0123, 0.0016],
         [0.0227, 0.0083, 0.0115,  ..., 0.0110, 0.0123, 0.0016],
         [0.0326, 0.0083, 0.0115,  ..., 0.0110, 0.9632, 0.9953],
         [0.0227, 0.9751, 0.9656,  ..., 0.9670, 0.0123, 0.0016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9096e-02, 7.8770e-04, 9.9759e-01,  ..., 9.9758e-01,
          1.3576e-02, 1.8782e-02],
         [2.7424e-02, 7.8770e-04, 8.0303e-04,  ..., 8.0737e-04,
          1.3465e-02, 1.8782e-02],
         [9.0069e-01, 7.8770e-04, 8.0303e-04,  ..., 8.0737e-04,
          9.5949e-01, 9.4180e-01],
         [3.2791e-02, 9.9764e-01, 8.0303e-04,  ..., 8.0737e-04,
          1.3465e-02, 2.0639e-02]],
        [[1.6310e-02, 8.5257e-05, 9.9756e-01,  ..., 9.9888e-01,
          9.5252e-05, 3.4811e-03],
         [1.6310e-02, 8.5257e-05, 8.1372e-04,  ..., 3.7295e-04,
          9.5252e-05, 3.4811e-03],
         [9.4915e-01, 8.5257e-05, 8.1372e-04,  ..., 3.7295e-04,
          9.5252e-05, 9.8956e-01],
         [1.8233e-02, 9.9974e-01, 8.1372e-04,  ..., 3.7295e-04,
          9.9971e-01, 3.4811e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7466e-01, 2.8439e-03, 1.1706e-02,  ..., 9.8979e-01,
          9.4229e-01, 1.1536e-02],
         [8.0726e-03, 2.8439e-03, 1.1706e-02,  ..., 3.1578e-03,
          1.6740e-02, 1.1536e-02],
         [9.1907e-03, 2.8439e-03, 1.1706e-02,  ..., 3.8921e-03,
          2.4228e-02, 1.1536e-02],
         [8.0726e-03, 9.9147e-01, 9.6488e-01,  ..., 3.1578e-03,
          1.6740e-02, 9.6539e-01]],
        [[9.2845e-01, 1.4365e-02, 8.4767e-03,  ..., 1.3519e-02,
          1.4444e-02, 5.8366e-04],
         [2.1180e-02, 1.4365e-02, 1.2491e-02,  ..., 1.3519e-02,
          1.4444e-02, 5.8366e-04],
         [3.0634e-02, 1.4365e-02, 8.4767e-03,  ..., 1.3858e-02,
          9.5667e-01, 9.9825e-01],
         [1.9732e-02, 9.5691e-01, 9.7056e-01,  ..., 9.5910e-01,
          1.4444e-02, 5.8366e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:43:59,164 [Process: 0] Synchronize training processes
2024-08-20 17:43:59,164 [Process: 0] Evaluating...
2024-08-20 17:43:59,166 [Process: 0] EPOCH 194:
2024-08-20 17:43:59,168 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:44:00,187 [Process: 0] Synchronize training processes
2024-08-20 17:44:00,188 [Process: 0] Evaluating...
2024-08-20 17:44:00,189 [Process: 0] EPOCH 195:
2024-08-20 17:44:00,191 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2521e-02, 3.7362e-04, 9.9356e-01,  ..., 9.9900e-01,
          2.0021e-02, 9.5837e-03],
         [1.2069e-02, 3.7362e-04, 2.1468e-03,  ..., 3.3266e-04,
          1.9228e-02, 9.5837e-03],
         [9.6334e-01, 3.7362e-04, 2.1468e-03,  ..., 3.3266e-04,
          9.4152e-01, 9.7125e-01],
         [1.2069e-02, 9.9888e-01, 2.1468e-03,  ..., 3.3576e-04,
          1.9228e-02, 9.5837e-03]],
        [[2.9257e-02, 1.1208e-03, 9.8879e-01,  ..., 9.9465e-01,
          1.7094e-03, 3.8990e-03],
         [2.5010e-02, 1.1208e-03, 3.7363e-03,  ..., 1.7846e-03,
          1.7094e-03, 3.8990e-03],
         [9.1740e-01, 1.1208e-03, 3.7363e-03,  ..., 1.7846e-03,
          1.7094e-03, 9.8830e-01],
         [2.8332e-02, 9.9664e-01, 3.7363e-03,  ..., 1.7846e-03,
          9.9487e-01, 3.8990e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9687, 0.0122, 0.0271,  ..., 0.9875, 0.9819, 0.0169],
         [0.0104, 0.0130, 0.0268,  ..., 0.0042, 0.0060, 0.0169],
         [0.0105, 0.0122, 0.0349,  ..., 0.0042, 0.0060, 0.0169],
         [0.0104, 0.9626, 0.9112,  ..., 0.0042, 0.0060, 0.9492]],
        [[0.8062, 0.0169, 0.0118,  ..., 0.0127, 0.0020, 0.0025],
         [0.0705, 0.0175, 0.0118,  ..., 0.0127, 0.0020, 0.0025],
         [0.0743, 0.0169, 0.0118,  ..., 0.0127, 0.9939, 0.9925],
         [0.0490, 0.9487, 0.9647,  ..., 0.9619, 0.0020, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8550e-02, 5.6097e-04, 9.9842e-01,  ..., 9.9841e-01,
          1.0896e-02, 1.3917e-02],
         [1.8343e-02, 5.6097e-04, 5.2691e-04,  ..., 5.2849e-04,
          1.0896e-02, 1.3319e-02],
         [9.4388e-01, 5.6097e-04, 5.2691e-04,  ..., 5.2849e-04,
          9.6731e-01, 9.5944e-01],
         [1.9228e-02, 9.9832e-01, 5.2691e-04,  ..., 5.2849e-04,
          1.0896e-02, 1.3319e-02]],
        [[2.4456e-02, 5.2746e-04, 9.9740e-01,  ..., 9.9164e-01,
          1.1410e-03, 1.0246e-02],
         [1.8470e-02, 5.2746e-04, 8.6696e-04,  ..., 2.7384e-03,
          1.1410e-03, 1.0246e-02],
         [9.3843e-01, 5.2746e-04, 8.6696e-04,  ..., 2.7384e-03,
          1.1410e-03, 9.6926e-01],
         [1.8643e-02, 9.9842e-01, 8.6696e-04,  ..., 2.8860e-03,
          9.9658e-01, 1.0246e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9675, 0.0103, 0.0077,  ..., 0.9937, 0.9472, 0.0091],
         [0.0108, 0.0134, 0.0077,  ..., 0.0023, 0.0154, 0.0091],
         [0.0108, 0.0103, 0.0077,  ..., 0.0020, 0.0202, 0.0095],
         [0.0108, 0.9661, 0.9768,  ..., 0.0020, 0.0172, 0.9723]],
        [[0.9274, 0.0149, 0.0049,  ..., 0.0205, 0.0117, 0.0020],
         [0.0209, 0.0149, 0.0049,  ..., 0.0205, 0.0117, 0.0020],
         [0.0309, 0.0149, 0.0049,  ..., 0.0223, 0.9648, 0.9941],
         [0.0209, 0.9552, 0.9853,  ..., 0.9367, 0.0117, 0.0020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:44:01,250 [Process: 0] Synchronize training processes
2024-08-20 17:44:01,250 [Process: 0] Evaluating...
2024-08-20 17:44:01,252 [Process: 0] EPOCH 196:
2024-08-20 17:44:01,253 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:44:02,251 [Process: 0] Synchronize training processes
2024-08-20 17:44:02,251 [Process: 0] Evaluating...
2024-08-20 17:44:02,253 [Process: 0] EPOCH 197:
2024-08-20 17:44:02,254 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0763e-02, 2.4558e-03, 9.9543e-01,  ..., 9.9724e-01,
          8.3980e-03, 6.0903e-03],
         [2.0763e-02, 2.4558e-03, 1.5246e-03,  ..., 9.1845e-04,
          7.6816e-03, 6.0903e-03],
         [9.3565e-01, 2.4558e-03, 1.5246e-03,  ..., 9.1845e-04,
          9.7624e-01, 9.8173e-01],
         [2.2825e-02, 9.9263e-01, 1.5246e-03,  ..., 9.1845e-04,
          7.6816e-03, 6.0903e-03]],
        [[1.8126e-02, 1.2398e-03, 9.9407e-01,  ..., 9.9019e-01,
          3.6844e-03, 4.8632e-03],
         [1.7702e-02, 1.2398e-03, 1.7922e-03,  ..., 3.2177e-03,
          3.6844e-03, 4.8632e-03],
         [9.4342e-01, 1.2398e-03, 1.7922e-03,  ..., 3.2177e-03,
          3.6844e-03, 9.8541e-01],
         [2.0755e-02, 9.9628e-01, 2.3440e-03,  ..., 3.3707e-03,
          9.8895e-01, 4.8632e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9891, 0.0113, 0.0033,  ..., 0.9519, 0.9811, 0.0140],
         [0.0036, 0.0113, 0.0033,  ..., 0.0137, 0.0063, 0.0140],
         [0.0036, 0.0113, 0.0033,  ..., 0.0137, 0.0063, 0.0140],
         [0.0036, 0.9660, 0.9900,  ..., 0.0207, 0.0063, 0.9579]],
        [[0.8970, 0.0190, 0.0052,  ..., 0.0213, 0.0040, 0.0022],
         [0.0339, 0.0210, 0.0052,  ..., 0.0185, 0.0040, 0.0022],
         [0.0379, 0.0206, 0.0052,  ..., 0.0189, 0.9881, 0.9933],
         [0.0312, 0.9394, 0.9843,  ..., 0.9413, 0.0040, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0154, 0.0010, 0.9965,  ..., 0.9871, 0.0103, 0.0101],
         [0.0120, 0.0010, 0.0012,  ..., 0.0040, 0.0099, 0.0101],
         [0.9606, 0.0010, 0.0012,  ..., 0.0040, 0.9700, 0.9697],
         [0.0120, 0.9969, 0.0012,  ..., 0.0050, 0.0099, 0.0101]],
        [[0.0506, 0.0053, 0.9930,  ..., 0.9903, 0.0020, 0.0069],
         [0.0403, 0.0053, 0.0023,  ..., 0.0032, 0.0020, 0.0069],
         [0.8414, 0.0053, 0.0023,  ..., 0.0032, 0.0020, 0.9794],
         [0.0678, 0.9840, 0.0024,  ..., 0.0032, 0.9940, 0.0069]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9905, 0.0063, 0.0152,  ..., 0.9781, 0.9598, 0.0034],
         [0.0032, 0.0063, 0.0152,  ..., 0.0071, 0.0117, 0.0034],
         [0.0032, 0.0063, 0.0152,  ..., 0.0071, 0.0132, 0.0034],
         [0.0032, 0.9812, 0.9544,  ..., 0.0077, 0.0152, 0.9897]],
        [[0.9286, 0.0118, 0.0149,  ..., 0.0163, 0.0013, 0.0020],
         [0.0224, 0.0118, 0.0149,  ..., 0.0189, 0.0013, 0.0020],
         [0.0224, 0.0118, 0.0149,  ..., 0.0170, 0.9961, 0.9941],
         [0.0267, 0.9646, 0.9553,  ..., 0.9478, 0.0013, 0.0020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:44:03,264 [Process: 0] Synchronize training processes
2024-08-20 17:44:03,264 [Process: 0] Evaluating...
2024-08-20 17:44:03,266 [Process: 0] EPOCH 198:
2024-08-20 17:44:03,267 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:44:04,273 [Process: 0] Synchronize training processes
2024-08-20 17:44:04,273 [Process: 0] Evaluating...
2024-08-20 17:44:04,275 [Process: 0] EPOCH 199:
2024-08-20 17:44:04,276 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1335e-03, 3.4287e-03, 9.9987e-01,  ..., 9.9337e-01,
          9.0787e-03, 8.2847e-03],
         [7.1335e-03, 3.4287e-03, 4.3894e-05,  ..., 2.2116e-03,
          9.0653e-03, 8.2847e-03],
         [9.7860e-01, 3.4287e-03, 4.3894e-05,  ..., 2.2116e-03,
          9.7279e-01, 9.7515e-01],
         [7.1335e-03, 9.8971e-01, 4.3894e-05,  ..., 2.2116e-03,
          9.0653e-03, 8.2847e-03]],
        [[1.9673e-02, 1.6601e-03, 9.8888e-01,  ..., 9.9694e-01,
          4.9699e-04, 1.5613e-02],
         [1.7134e-02, 1.6601e-03, 3.0550e-03,  ..., 1.0189e-03,
          4.9699e-04, 1.5613e-02],
         [9.4606e-01, 1.6601e-03, 3.0550e-03,  ..., 1.0189e-03,
          4.9699e-04, 9.5316e-01],
         [1.7134e-02, 9.9502e-01, 5.0143e-03,  ..., 1.0189e-03,
          9.9851e-01, 1.5613e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9891, 0.0176, 0.0061,  ..., 0.9934, 0.8833, 0.0131],
         [0.0036, 0.0176, 0.0061,  ..., 0.0022, 0.0350, 0.0131],
         [0.0036, 0.0208, 0.0061,  ..., 0.0022, 0.0350, 0.0131],
         [0.0036, 0.9440, 0.9818,  ..., 0.0022, 0.0468, 0.9606]],
        [[0.8576, 0.0117, 0.0152,  ..., 0.0116, 0.0063, 0.0021],
         [0.0353, 0.0117, 0.0152,  ..., 0.0116, 0.0063, 0.0021],
         [0.0463, 0.0117, 0.0152,  ..., 0.0116, 0.9810, 0.9936],
         [0.0607, 0.9649, 0.9544,  ..., 0.9651, 0.0063, 0.0021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1658e-02, 1.3559e-03, 9.9240e-01,  ..., 9.9873e-01,
          2.7158e-02, 1.6299e-02],
         [1.1658e-02, 1.3559e-03, 2.1830e-03,  ..., 4.2440e-04,
          2.2302e-02, 1.6127e-02],
         [9.6503e-01, 1.3559e-03, 2.1830e-03,  ..., 4.2440e-04,
          9.2824e-01, 9.5145e-01],
         [1.1658e-02, 9.9593e-01, 3.2375e-03,  ..., 4.2440e-04,
          2.2302e-02, 1.6127e-02]],
        [[2.7369e-02, 1.3979e-03, 9.9615e-01,  ..., 8.9942e-01,
          5.2077e-03, 6.2033e-03],
         [2.2685e-02, 1.3979e-03, 1.2826e-03,  ..., 2.5936e-02,
          6.0813e-03, 6.2033e-03],
         [9.2468e-01, 1.3979e-03, 1.2826e-03,  ..., 2.5936e-02,
          5.2077e-03, 9.8139e-01],
         [2.5265e-02, 9.9581e-01, 1.2826e-03,  ..., 4.8710e-02,
          9.8350e-01, 6.2033e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9935, 0.0115, 0.0126,  ..., 0.9805, 0.9878, 0.0074],
         [0.0022, 0.0115, 0.0126,  ..., 0.0065, 0.0047, 0.0074],
         [0.0022, 0.0115, 0.0126,  ..., 0.0065, 0.0037, 0.0074],
         [0.0022, 0.9655, 0.9622,  ..., 0.0065, 0.0037, 0.9779]],
        [[0.9662, 0.0160, 0.0181,  ..., 0.0122, 0.0026, 0.0015],
         [0.0105, 0.0160, 0.0182,  ..., 0.0122, 0.0026, 0.0015],
         [0.0105, 0.0180, 0.0181,  ..., 0.0122, 0.9921, 0.9956],
         [0.0128, 0.9500, 0.9456,  ..., 0.9633, 0.0026, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:44:05,308 [Process: 0] Synchronize training processes
2024-08-20 17:44:05,308 [Process: 0] Evaluating...
2024-08-20 17:44:05,310 [Process: 0] EPOCH 200:
2024-08-20 17:44:05,311 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:44:06,308 [Process: 0] Synchronize training processes
2024-08-20 17:44:06,308 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6326e-03, 3.5978e-04, 9.9877e-01,  ..., 9.9039e-01,
          9.5081e-03, 6.8708e-03],
         [8.6326e-03, 3.5978e-04, 4.1000e-04,  ..., 3.5386e-03,
          9.5081e-03, 6.8708e-03],
         [9.7410e-01, 3.5978e-04, 4.1000e-04,  ..., 3.0370e-03,
          9.7148e-01, 9.7939e-01],
         [8.6326e-03, 9.9892e-01, 4.1000e-04,  ..., 3.0370e-03,
          9.5081e-03, 6.8708e-03]],
        [[2.3943e-02, 5.0444e-04, 9.9220e-01,  ..., 9.7412e-01,
          1.3395e-03, 1.1874e-02],
         [2.2232e-02, 5.0444e-04, 2.5992e-03,  ..., 8.6261e-03,
          1.3395e-03, 1.1874e-02],
         [9.2170e-01, 5.0444e-04, 2.5992e-03,  ..., 8.6261e-03,
          1.3395e-03, 9.6438e-01],
         [3.2124e-02, 9.9849e-01, 2.5992e-03,  ..., 8.6261e-03,
          9.9598e-01, 1.1874e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9657, 0.0139, 0.0212,  ..., 0.9827, 0.9826, 0.0038],
         [0.0109, 0.0139, 0.0212,  ..., 0.0058, 0.0058, 0.0038],
         [0.0125, 0.0139, 0.0212,  ..., 0.0058, 0.0058, 0.0038],
         [0.0109, 0.9582, 0.9365,  ..., 0.0058, 0.0058, 0.9886]],
        [[0.9489, 0.0201, 0.0247,  ..., 0.0035, 0.0048, 0.0032],
         [0.0215, 0.0196, 0.0247,  ..., 0.0035, 0.0048, 0.0032],
         [0.0148, 0.0212, 0.0256,  ..., 0.0035, 0.9855, 0.9903],
         [0.0148, 0.9390, 0.9250,  ..., 0.9894, 0.0048, 0.0032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6010e-02, 5.6799e-03, 9.9690e-01,  ..., 9.9911e-01,
          6.8909e-03, 1.4933e-02],
         [1.3846e-02, 5.6799e-03, 1.0336e-03,  ..., 2.9694e-04,
          6.8909e-03, 1.4018e-02],
         [9.5630e-01, 5.6799e-03, 1.0336e-03,  ..., 2.9694e-04,
          9.7933e-01, 9.5703e-01],
         [1.3846e-02, 9.8296e-01, 1.0336e-03,  ..., 2.9694e-04,
          6.8909e-03, 1.4018e-02]],
        [[2.8641e-02, 1.9138e-03, 9.9114e-01,  ..., 9.9803e-01,
          3.1017e-04, 1.3639e-02],
         [2.2097e-02, 1.9138e-03, 2.7714e-03,  ..., 6.5616e-04,
          3.1017e-04, 1.3639e-02],
         [9.2651e-01, 1.9138e-03, 2.7714e-03,  ..., 6.5616e-04,
          3.1017e-04, 9.5883e-01],
         [2.2756e-02, 9.9426e-01, 3.3130e-03,  ..., 6.5616e-04,
          9.9907e-01, 1.3895e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...