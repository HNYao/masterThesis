[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5905, 0.5000, 0.7182],
         [0.5000, 0.5000, 0.5000,  ..., 0.4095, 0.5000, 0.2818]],
        [[0.5112, 0.7725, 0.0253,  ..., 0.3480, 0.5541, 0.3911],
         [0.4888, 0.2275, 0.9747,  ..., 0.6520, 0.4459, 0.6089]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:11:27,161 [Worker 0] Is distributed: False
2024-08-16 17:11:27,161 [Process: 0] Starting training
2024-08-16 17:11:27,161 [Process: 0] EPOCH 1:
2024-08-16 17:11:27,164 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.6164, 0.5920, 0.5000,  ..., 0.5243, 0.5000, 0.4423],
         [0.3836, 0.4080, 0.5000,  ..., 0.4757, 0.5000, 0.5577]],
        [[0.5000, 0.5304, 0.5000,  ..., 0.5056, 0.6400, 0.4471],
         [0.5000, 0.4696, 0.5000,  ..., 0.4944, 0.3600, 0.5529]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:11:30,044 [Process: 0] Synchronize training processes
2024-08-16 17:11:30,045 [Process: 0] Evaluating...
2024-08-16 17:11:30,053 [Process: 0] EPOCH 2:
2024-08-16 17:11:30,055 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:11:32,223 [Process: 0] Synchronize training processes
2024-08-16 17:11:32,224 [Process: 0] Evaluating...
2024-08-16 17:11:32,225 [Process: 0] EPOCH 3:
2024-08-16 17:11:32,227 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.4062, 0.6357, 0.3991,  ..., 0.2815, 0.6207, 0.5000],
         [0.5938, 0.3643, 0.6009,  ..., 0.7185, 0.3793, 0.5000]],
        [[0.1165, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
         [0.8835, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.1908, 0.5989, 0.4556,  ..., 0.6913, 0.3520, 0.4273],
         [0.8092, 0.4011, 0.5444,  ..., 0.3087, 0.6480, 0.5727]],
        [[0.0259, 0.7002, 0.3094,  ..., 0.6312, 0.6985, 0.6627],
         [0.9741, 0.2998, 0.6906,  ..., 0.3688, 0.3015, 0.3373]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:11:34,397 [Process: 0] Synchronize training processes
2024-08-16 17:11:34,398 [Process: 0] Evaluating...
2024-08-16 17:11:34,400 [Process: 0] EPOCH 4:
2024-08-16 17:11:34,402 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.2588, 0.6592, 0.4774,  ..., 0.6503, 0.6410, 0.5620],
         [0.7412, 0.3408, 0.5226,  ..., 0.3497, 0.3590, 0.4380]],
        [[0.5000, 0.6825, 0.6839,  ..., 0.4569, 0.4600, 0.4569],
         [0.5000, 0.3175, 0.3161,  ..., 0.5431, 0.5400, 0.5431]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.6052, 0.6281,  ..., 0.6753, 0.5000, 0.6304],
         [0.5000, 0.3948, 0.3719,  ..., 0.3247, 0.5000, 0.3696]],
        [[0.0984, 0.5572, 0.4976,  ..., 0.6370, 0.6690, 0.5530],
         [0.9016, 0.4428, 0.5024,  ..., 0.3630, 0.3310, 0.4470]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:11:36,574 [Process: 0] Synchronize training processes
2024-08-16 17:11:36,574 [Process: 0] Evaluating...
2024-08-16 17:11:36,576 [Process: 0] EPOCH 5:
2024-08-16 17:11:36,578 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.7621, 0.6988,  ..., 0.6897, 0.6435, 0.6475],
         [0.5000, 0.2379, 0.3012,  ..., 0.3103, 0.3565, 0.3525]],
        [[0.6676, 0.6926, 0.7109,  ..., 0.5000, 0.5000, 0.5000],
         [0.3324, 0.3074, 0.2891,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.7025, 0.7058,  ..., 0.7030, 0.5000, 0.6843],
         [0.5000, 0.2975, 0.2942,  ..., 0.2970, 0.5000, 0.3157]],
        [[0.5000, 0.7384, 0.5329,  ..., 0.5000, 0.6845, 0.7159],
         [0.5000, 0.2616, 0.4671,  ..., 0.5000, 0.3155, 0.2841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:11:38,736 [Process: 0] Synchronize training processes
2024-08-16 17:11:38,736 [Process: 0] Evaluating...
2024-08-16 17:11:38,738 [Process: 0] EPOCH 6:
2024-08-16 17:11:38,740 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.6480, 0.7555, 0.6961,  ..., 0.7163, 0.7577, 0.7487],
         [0.3520, 0.2445, 0.3039,  ..., 0.2837, 0.2423, 0.2513]],
        [[0.7823, 0.6303, 0.7028,  ..., 0.5000, 0.5000, 0.5000],
         [0.2177, 0.3697, 0.2972,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.7410, 0.7388,  ..., 0.6506, 0.5000, 0.6742],
         [0.5000, 0.2590, 0.2612,  ..., 0.3494, 0.5000, 0.3258]],
        [[0.5000, 0.7331, 0.5952,  ..., 0.7460, 0.7817, 0.7346],
         [0.5000, 0.2669, 0.4048,  ..., 0.2540, 0.2183, 0.2654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:11:40,904 [Process: 0] Synchronize training processes
2024-08-16 17:11:40,905 [Process: 0] Evaluating...
2024-08-16 17:11:40,907 [Process: 0] EPOCH 7:
2024-08-16 17:11:40,908 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7653, 0.7523, 0.7480,  ..., 0.7488, 0.7392, 0.7271],
         [0.2347, 0.2477, 0.2520,  ..., 0.2512, 0.2608, 0.2729]],
        [[0.7691, 0.7529, 0.7691,  ..., 0.7882, 0.5000, 0.6386],
         [0.2309, 0.2471, 0.2309,  ..., 0.2118, 0.5000, 0.3614]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7336, 0.7575, 0.7650,  ..., 0.7286, 0.5000, 0.7827],
         [0.2664, 0.2425, 0.2350,  ..., 0.2714, 0.5000, 0.2173]],
        [[0.7301, 0.7491, 0.6635,  ..., 0.7278, 0.7341, 0.7575],
         [0.2699, 0.2509, 0.3365,  ..., 0.2722, 0.2659, 0.2425]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:11:43,073 [Process: 0] Synchronize training processes
2024-08-16 17:11:43,074 [Process: 0] Evaluating...
2024-08-16 17:11:43,076 [Process: 0] EPOCH 8:
2024-08-16 17:11:43,078 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.7822, 0.7626,  ..., 0.6958, 0.7501, 0.6904],
         [0.5000, 0.2178, 0.2374,  ..., 0.3042, 0.2499, 0.3096]],
        [[0.7402, 0.6037, 0.7031,  ..., 0.7054, 0.5000, 0.6884],
         [0.2598, 0.3963, 0.2969,  ..., 0.2946, 0.5000, 0.3116]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.4915, 0.7884, 0.6849,  ..., 0.8085, 0.7111, 0.7911],
         [0.5085, 0.2116, 0.3151,  ..., 0.1915, 0.2889, 0.2089]],
        [[0.7261, 0.7212, 0.7323,  ..., 0.6828, 0.7408, 0.6760],
         [0.2739, 0.2788, 0.2677,  ..., 0.3172, 0.2592, 0.3240]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:11:45,240 [Process: 0] Synchronize training processes
2024-08-16 17:11:45,241 [Process: 0] Evaluating...
2024-08-16 17:11:45,243 [Process: 0] EPOCH 9:
2024-08-16 17:11:45,244 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7345, 0.6944, 0.6859,  ..., 0.7201, 0.7292, 0.7221],
         [0.2655, 0.3056, 0.3141,  ..., 0.2799, 0.2708, 0.2779]],
        [[0.7327, 0.6555, 0.7854,  ..., 0.7052, 0.5000, 0.6484],
         [0.2673, 0.3445, 0.2146,  ..., 0.2948, 0.5000, 0.3516]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:11:47,409 [Process: 0] Synchronize training processes
2024-08-16 17:11:47,409 [Process: 0] Evaluating...
2024-08-16 17:11:47,411 [Process: 0] EPOCH 10:
2024-08-16 17:11:47,413 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7436, 0.7457, 0.7328,  ..., 0.7028, 0.7607, 0.7506],
         [0.2564, 0.2543, 0.2672,  ..., 0.2972, 0.2393, 0.2494]],
        [[0.7041, 0.7382, 0.7768,  ..., 0.7375, 0.7133, 0.8167],
         [0.2959, 0.2618, 0.2232,  ..., 0.2625, 0.2867, 0.1833]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7526, 0.7098, 0.7448,  ..., 0.7311, 0.7658, 0.7120],
         [0.2474, 0.2902, 0.2552,  ..., 0.2689, 0.2342, 0.2880]],
        [[0.7910, 0.7317, 0.7190,  ..., 0.7531, 0.5000, 0.7349],
         [0.2090, 0.2683, 0.2810,  ..., 0.2469, 0.5000, 0.2651]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.6928, 0.6969, 0.7431,  ..., 0.7871, 0.7147, 0.7711],
         [0.3072, 0.3031, 0.2569,  ..., 0.2129, 0.2853, 0.2289]],
        [[0.7113, 0.7682, 0.7699,  ..., 0.7463, 0.7377, 0.7604],
         [0.2887, 0.2318, 0.2301,  ..., 0.2537, 0.2623, 0.2396]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7437, 0.7232, 0.7205,  ..., 0.6745, 0.6702, 0.7410],
         [0.2563, 0.2768, 0.2795,  ..., 0.3255, 0.3298, 0.2590]],
        [[0.7141, 0.7255, 0.7645,  ..., 0.7532, 0.5000, 0.7333],
         [0.2859, 0.2745, 0.2355,  ..., 0.2468, 0.5000, 0.2667]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:11:49,577 [Process: 0] Synchronize training processes
2024-08-16 17:11:49,578 [Process: 0] Evaluating...
2024-08-16 17:11:49,580 [Process: 0] EPOCH 11:
2024-08-16 17:11:49,582 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7479, 0.7905, 0.7386,  ..., 0.7200, 0.7594, 0.7683],
         [0.2521, 0.2095, 0.2614,  ..., 0.2800, 0.2406, 0.2317]],
        [[0.7171, 0.7164, 0.7623,  ..., 0.7645, 0.7381, 0.7236],
         [0.2829, 0.2836, 0.2377,  ..., 0.2355, 0.2619, 0.2764]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7418, 0.7581, 0.7464,  ..., 0.7087, 0.7275, 0.7413],
         [0.2582, 0.2419, 0.2536,  ..., 0.2913, 0.2725, 0.2587]],
        [[0.7771, 0.7630, 0.7086,  ..., 0.7183, 0.5000, 0.7140],
         [0.2229, 0.2370, 0.2914,  ..., 0.2817, 0.5000, 0.2860]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:11:51,692 [Process: 0] Synchronize training processes
2024-08-16 17:11:51,692 [Process: 0] Evaluating...
2024-08-16 17:11:51,701 [Process: 0] EPOCH 12:
2024-08-16 17:11:51,703 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7704, 0.7612, 0.7440,  ..., 0.7294, 0.7605, 0.7805],
         [0.2296, 0.2388, 0.2560,  ..., 0.2706, 0.2395, 0.2195]],
        [[0.7692, 0.7471, 0.7496,  ..., 0.7782, 0.7085, 0.7342],
         [0.2308, 0.2529, 0.2504,  ..., 0.2218, 0.2915, 0.2658]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7278, 0.7767, 0.7048,  ..., 0.7690, 0.6743, 0.7019],
         [0.2722, 0.2233, 0.2952,  ..., 0.2310, 0.3257, 0.2981]],
        [[0.7920, 0.7918, 0.6825,  ..., 0.7455, 0.5000, 0.7761],
         [0.2080, 0.2082, 0.3175,  ..., 0.2545, 0.5000, 0.2239]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:11:53,754 [Process: 0] Synchronize training processes
2024-08-16 17:11:53,755 [Process: 0] Evaluating...
2024-08-16 17:11:53,756 [Process: 0] EPOCH 13:
2024-08-16 17:11:53,758 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7690, 0.6744, 0.7235,  ..., 0.7529, 0.7231, 0.7498],
         [0.2310, 0.3256, 0.2765,  ..., 0.2471, 0.2769, 0.2502]],
        [[0.7260, 0.7317, 0.7573,  ..., 0.7752, 0.7394, 0.7462],
         [0.2740, 0.2683, 0.2427,  ..., 0.2248, 0.2606, 0.2538]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7325, 0.7608, 0.7612,  ..., 0.7111, 0.7405, 0.7364],
         [0.2675, 0.2392, 0.2388,  ..., 0.2889, 0.2595, 0.2636]],
        [[0.7666, 0.7214, 0.7149,  ..., 0.7541, 0.5000, 0.7538],
         [0.2334, 0.2786, 0.2851,  ..., 0.2459, 0.5000, 0.2462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:11:55,917 [Process: 0] Synchronize training processes
2024-08-16 17:11:55,918 [Process: 0] Evaluating...
2024-08-16 17:11:55,920 [Process: 0] EPOCH 14:
2024-08-16 17:11:55,922 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7397, 0.6906, 0.7522,  ..., 0.7421, 0.7383, 0.7173],
         [0.2603, 0.3094, 0.2478,  ..., 0.2579, 0.2617, 0.2827]],
        [[0.8058, 0.7537, 0.7223,  ..., 0.7394, 0.7781, 0.7102],
         [0.1942, 0.2463, 0.2777,  ..., 0.2606, 0.2219, 0.2898]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7783, 0.7081, 0.7653,  ..., 0.7619, 0.7363, 0.7544],
         [0.2217, 0.2919, 0.2347,  ..., 0.2381, 0.2637, 0.2456]],
        [[0.7512, 0.7365, 0.7694,  ..., 0.7428, 0.5000, 0.7154],
         [0.2488, 0.2635, 0.2306,  ..., 0.2572, 0.5000, 0.2846]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:11:58,092 [Process: 0] Synchronize training processes
2024-08-16 17:11:58,092 [Process: 0] Evaluating...
2024-08-16 17:11:58,094 [Process: 0] EPOCH 15:
2024-08-16 17:11:58,096 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7165, 0.7475, 0.7685,  ..., 0.8114, 0.7729, 0.7149],
         [0.2835, 0.2525, 0.2315,  ..., 0.1886, 0.2271, 0.2851]],
        [[0.7753, 0.7655, 0.7754,  ..., 0.7952, 0.5000, 0.7693],
         [0.2247, 0.2345, 0.2246,  ..., 0.2048, 0.5000, 0.2307]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7372, 0.8054, 0.7523,  ..., 0.7563, 0.7419, 0.7581],
         [0.2628, 0.1946, 0.2477,  ..., 0.2437, 0.2581, 0.2419]],
        [[0.7952, 0.7899, 0.7324,  ..., 0.7580, 0.5000, 0.7638],
         [0.2048, 0.2101, 0.2676,  ..., 0.2420, 0.5000, 0.2362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
2024-08-16 17:12:00,247 [Process: 0] Synchronize training processes
2024-08-16 17:12:00,248 [Process: 0] Evaluating...
2024-08-16 17:12:00,250 [Process: 0] EPOCH 16:
2024-08-16 17:12:00,252 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7894, 0.7821, 0.7582,  ..., 0.7651, 0.7432, 0.7712],
         [0.2106, 0.2179, 0.2418,  ..., 0.2349, 0.2568, 0.2288]],
        [[0.7515, 0.7582, 0.8248,  ..., 0.7512, 0.5000, 0.7234],
         [0.2485, 0.2418, 0.1752,  ..., 0.2488, 0.5000, 0.2766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:12:02,421 [Process: 0] Synchronize training processes
2024-08-16 17:12:02,421 [Process: 0] Evaluating...
2024-08-16 17:12:02,423 [Process: 0] EPOCH 17:
2024-08-16 17:12:02,425 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7941, 0.7719, 0.7898,  ..., 0.7898, 0.7701, 0.7555],
         [0.2059, 0.2281, 0.2102,  ..., 0.2102, 0.2299, 0.2445]],
        [[0.7578, 0.7541, 0.8024,  ..., 0.7760, 0.5000, 0.8123],
         [0.2422, 0.2459, 0.1976,  ..., 0.2240, 0.5000, 0.1877]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7681, 0.7602, 0.7624,  ..., 0.7819, 0.7584, 0.7743],
         [0.2319, 0.2398, 0.2376,  ..., 0.2181, 0.2416, 0.2257]],
        [[0.7417, 0.7459, 0.7741,  ..., 0.7530, 0.7377, 0.7552],
         [0.2583, 0.2541, 0.2259,  ..., 0.2470, 0.2623, 0.2448]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:12:04,602 [Process: 0] Synchronize training processes
2024-08-16 17:12:04,603 [Process: 0] Evaluating...
2024-08-16 17:12:04,605 [Process: 0] EPOCH 18:
2024-08-16 17:12:04,607 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7635, 0.7397, 0.7391,  ..., 0.7255, 0.7419, 0.7200],
         [0.2365, 0.2603, 0.2609,  ..., 0.2745, 0.2581, 0.2800]],
        [[0.7671, 0.7291, 0.7483,  ..., 0.7230, 0.5000, 0.7338],
         [0.2329, 0.2709, 0.2517,  ..., 0.2770, 0.5000, 0.2662]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7331, 0.7372, 0.7481,  ..., 0.7195, 0.7868, 0.7875],
         [0.2669, 0.2628, 0.2519,  ..., 0.2805, 0.2132, 0.2125]],
        [[0.7536, 0.7498, 0.7616,  ..., 0.7302, 0.7729, 0.7420],
         [0.2464, 0.2502, 0.2384,  ..., 0.2698, 0.2271, 0.2580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:12:06,776 [Process: 0] Synchronize training processes
2024-08-16 17:12:06,777 [Process: 0] Evaluating...
2024-08-16 17:12:06,779 [Process: 0] EPOCH 19:
2024-08-16 17:12:06,781 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7635, 0.7819, 0.7853,  ..., 0.7565, 0.7583, 0.7798],
         [0.2365, 0.2181, 0.2147,  ..., 0.2435, 0.2417, 0.2202]],
        [[0.7398, 0.7806, 0.7944,  ..., 0.7503, 0.5000, 0.7485],
         [0.2602, 0.2194, 0.2056,  ..., 0.2497, 0.5000, 0.2515]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7632, 0.7693, 0.7538,  ..., 0.7605, 0.7990, 0.7789],
         [0.2368, 0.2307, 0.2462,  ..., 0.2395, 0.2010, 0.2211]],
        [[0.7678, 0.7631, 0.7463,  ..., 0.7394, 0.7252, 0.7863],
         [0.2322, 0.2369, 0.2537,  ..., 0.2606, 0.2748, 0.2137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7324, 0.7233, 0.7629,  ..., 0.7509, 0.7832, 0.7992],
         [0.2676, 0.2767, 0.2371,  ..., 0.2491, 0.2168, 0.2008]],
        [[0.7530, 0.7719, 0.7593,  ..., 0.7510, 0.5000, 0.7862],
         [0.2470, 0.2281, 0.2407,  ..., 0.2490, 0.5000, 0.2138]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8038, 0.7675, 0.7655,  ..., 0.8112, 0.7944, 0.7888],
         [0.1962, 0.2325, 0.2345,  ..., 0.1888, 0.2056, 0.2112]],
        [[0.7858, 0.7865, 0.8013,  ..., 0.7959, 0.7901, 0.7867],
         [0.2142, 0.2135, 0.1987,  ..., 0.2041, 0.2099, 0.2133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:12:08,961 [Process: 0] Synchronize training processes
2024-08-16 17:12:08,962 [Process: 0] Evaluating...
2024-08-16 17:12:08,964 [Process: 0] EPOCH 20:
2024-08-16 17:12:08,966 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7898, 0.7963, 0.7787,  ..., 0.7642, 0.7319, 0.7990],
         [0.2102, 0.2037, 0.2213,  ..., 0.2358, 0.2681, 0.2010]],
        [[0.7833, 0.7607, 0.7488,  ..., 0.7632, 0.5000, 0.7719],
         [0.2167, 0.2393, 0.2512,  ..., 0.2368, 0.5000, 0.2281]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7634, 0.7950, 0.7660,  ..., 0.7725, 0.7639, 0.7654],
         [0.2366, 0.2050, 0.2340,  ..., 0.2275, 0.2361, 0.2346]],
        [[0.7789, 0.7723, 0.7542,  ..., 0.7730, 0.7703, 0.7714],
         [0.2211, 0.2277, 0.2458,  ..., 0.2270, 0.2297, 0.2286]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:12:11,142 [Process: 0] Synchronize training processes
2024-08-16 17:12:11,142 [Process: 0] Evaluating...
2024-08-16 17:12:11,144 [Process: 0] EPOCH 21:
2024-08-16 17:12:11,146 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7500, 0.7604, 0.7886,  ..., 0.7846, 0.7640, 0.7866],
         [0.2500, 0.2396, 0.2114,  ..., 0.2154, 0.2360, 0.2134]],
        [[0.7924, 0.7778, 0.7919,  ..., 0.7618, 0.5000, 0.7729],
         [0.2076, 0.2222, 0.2081,  ..., 0.2382, 0.5000, 0.2271]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
2024-08-16 17:12:13,289 [Process: 0] Synchronize training processes
2024-08-16 17:12:13,290 [Process: 0] Evaluating...
2024-08-16 17:12:13,297 [Process: 0] EPOCH 22:
2024-08-16 17:12:13,299 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7734, 0.7633, 0.7525,  ..., 0.7740, 0.7549, 0.7783],
         [0.2266, 0.2367, 0.2475,  ..., 0.2260, 0.2451, 0.2217]],
        [[0.7383, 0.7551, 0.7631,  ..., 0.7345, 0.7364, 0.7558],
         [0.2617, 0.2449, 0.2369,  ..., 0.2655, 0.2636, 0.2442]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7730, 0.7963, 0.7657,  ..., 0.7879, 0.7663, 0.8036],
         [0.2270, 0.2037, 0.2343,  ..., 0.2121, 0.2337, 0.1964]],
        [[0.7891, 0.7444, 0.7929,  ..., 0.7946, 0.5000, 0.7625],
         [0.2109, 0.2556, 0.2071,  ..., 0.2054, 0.5000, 0.2375]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:12:15,411 [Process: 0] Synchronize training processes
2024-08-16 17:12:15,411 [Process: 0] Evaluating...
2024-08-16 17:12:15,413 [Process: 0] EPOCH 23:
2024-08-16 17:12:15,415 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8014, 0.7715, 0.7911,  ..., 0.7883, 0.8018, 0.7784],
         [0.1986, 0.2285, 0.2089,  ..., 0.2117, 0.1982, 0.2216]],
        [[0.7859, 0.7634, 0.7589,  ..., 0.7832, 0.7579, 0.7745],
         [0.2141, 0.2366, 0.2411,  ..., 0.2168, 0.2421, 0.2255]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7659, 0.7889, 0.7652,  ..., 0.7845, 0.7545, 0.7797],
         [0.2341, 0.2111, 0.2348,  ..., 0.2155, 0.2455, 0.2203]],
        [[0.7923, 0.7935, 0.7738,  ..., 0.7819, 0.5000, 0.7660],
         [0.2077, 0.2065, 0.2262,  ..., 0.2181, 0.5000, 0.2340]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:12:17,484 [Process: 0] Synchronize training processes
2024-08-16 17:12:17,485 [Process: 0] Evaluating...
2024-08-16 17:12:17,487 [Process: 0] EPOCH 24:
2024-08-16 17:12:17,489 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7892, 0.7521, 0.7727,  ..., 0.7772, 0.7755, 0.7810],
         [0.2108, 0.2479, 0.2273,  ..., 0.2228, 0.2245, 0.2190]],
        [[0.7784, 0.7690, 0.7845,  ..., 0.7651, 0.7645, 0.7575],
         [0.2216, 0.2310, 0.2155,  ..., 0.2349, 0.2355, 0.2425]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7610, 0.7647, 0.7553,  ..., 0.7694, 0.7836, 0.7758],
         [0.2390, 0.2353, 0.2447,  ..., 0.2306, 0.2164, 0.2242]],
        [[0.7889, 0.7702, 0.7649,  ..., 0.8140, 0.5000, 0.7882],
         [0.2111, 0.2298, 0.2351,  ..., 0.1860, 0.5000, 0.2118]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:12:19,628 [Process: 0] Synchronize training processes
2024-08-16 17:12:19,629 [Process: 0] Evaluating...
2024-08-16 17:12:19,631 [Process: 0] EPOCH 25:
2024-08-16 17:12:19,633 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7822, 0.7742, 0.7946,  ..., 0.7954, 0.7842, 0.7714],
         [0.2178, 0.2258, 0.2054,  ..., 0.2046, 0.2158, 0.2286]],
        [[0.7760, 0.7838, 0.7866,  ..., 0.7863, 0.7785, 0.7791],
         [0.2240, 0.2162, 0.2134,  ..., 0.2137, 0.2215, 0.2209]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7853, 0.7679, 0.7903,  ..., 0.7978, 0.7914, 0.7823],
         [0.2147, 0.2321, 0.2097,  ..., 0.2022, 0.2086, 0.2177]],
        [[0.7999, 0.7875, 0.8112,  ..., 0.8004, 0.5000, 0.7710],
         [0.2001, 0.2125, 0.1888,  ..., 0.1996, 0.5000, 0.2290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:12:21,806 [Process: 0] Synchronize training processes
2024-08-16 17:12:21,807 [Process: 0] Evaluating...
2024-08-16 17:12:21,808 [Process: 0] EPOCH 26:
2024-08-16 17:12:21,810 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7763, 0.7858, 0.7711,  ..., 0.7637, 0.7850, 0.7762],
         [0.2237, 0.2142, 0.2289,  ..., 0.2363, 0.2150, 0.2238]],
        [[0.7949, 0.7839, 0.7709,  ..., 0.7810, 0.7869, 0.7709],
         [0.2051, 0.2161, 0.2291,  ..., 0.2190, 0.2131, 0.2291]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7704, 0.7629, 0.8013,  ..., 0.7881, 0.8061, 0.8076],
         [0.2296, 0.2371, 0.1987,  ..., 0.2119, 0.1939, 0.1924]],
        [[0.8020, 0.7971, 0.7755,  ..., 0.7572, 0.5000, 0.8027],
         [0.1980, 0.2029, 0.2245,  ..., 0.2428, 0.5000, 0.1973]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:12:23,984 [Process: 0] Synchronize training processes
2024-08-16 17:12:23,984 [Process: 0] Evaluating...
2024-08-16 17:12:23,986 [Process: 0] EPOCH 27:
2024-08-16 17:12:23,988 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7826, 0.7931, 0.7874,  ..., 0.7767, 0.7657, 0.7831],
         [0.2174, 0.2069, 0.2126,  ..., 0.2233, 0.2343, 0.2169]],
        [[0.7666, 0.7978, 0.7951,  ..., 0.7759, 0.8086, 0.7832],
         [0.2334, 0.2022, 0.2049,  ..., 0.2241, 0.1914, 0.2168]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7937, 0.7962, 0.8091,  ..., 0.7959, 0.8096, 0.7968],
         [0.2063, 0.2038, 0.1909,  ..., 0.2041, 0.1904, 0.2032]],
        [[0.8031, 0.8065, 0.7934,  ..., 0.7940, 0.5000, 0.7945],
         [0.1969, 0.1935, 0.2066,  ..., 0.2060, 0.5000, 0.2055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:12:26,183 [Process: 0] Synchronize training processes
2024-08-16 17:12:26,184 [Process: 0] Evaluating...
2024-08-16 17:12:26,186 [Process: 0] EPOCH 28:
2024-08-16 17:12:26,188 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7819, 0.7943, 0.7992,  ..., 0.7888, 0.7906, 0.7874],
         [0.2181, 0.2057, 0.2008,  ..., 0.2112, 0.2094, 0.2126]],
        [[0.7851, 0.7875, 0.7919,  ..., 0.7911, 0.8133, 0.7866],
         [0.2149, 0.2125, 0.2081,  ..., 0.2089, 0.1867, 0.2134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:12:28,406 [Process: 0] Synchronize training processes
2024-08-16 17:12:28,407 [Process: 0] Evaluating...
2024-08-16 17:12:28,409 [Process: 0] EPOCH 29:
2024-08-16 17:12:28,411 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8102, 0.8015, 0.7902,  ..., 0.8051, 0.8200, 0.7929],
         [0.1898, 0.1985, 0.2098,  ..., 0.1949, 0.1800, 0.2071]],
        [[0.8080, 0.7928, 0.7850,  ..., 0.7835, 0.5000, 0.7992],
         [0.1920, 0.2072, 0.2150,  ..., 0.2165, 0.5000, 0.2008]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8034, 0.8036, 0.7932,  ..., 0.7791, 0.7833, 0.7791],
         [0.1966, 0.1964, 0.2068,  ..., 0.2209, 0.2167, 0.2209]],
        [[0.7760, 0.7956, 0.7825,  ..., 0.7937, 0.7884, 0.7915],
         [0.2240, 0.2044, 0.2175,  ..., 0.2063, 0.2116, 0.2085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:12:30,608 [Process: 0] Synchronize training processes
2024-08-16 17:12:30,609 [Process: 0] Evaluating...
2024-08-16 17:12:30,611 [Process: 0] EPOCH 30:
2024-08-16 17:12:30,613 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7889, 0.7905, 0.8133,  ..., 0.8038, 0.8165, 0.8029],
         [0.2111, 0.2095, 0.1867,  ..., 0.1962, 0.1835, 0.1971]],
        [[0.7957, 0.8089, 0.8014,  ..., 0.7882, 0.5000, 0.7886],
         [0.2043, 0.1911, 0.1986,  ..., 0.2118, 0.5000, 0.2114]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7793, 0.8104, 0.7970,  ..., 0.7959, 0.7882, 0.8187],
         [0.2207, 0.1896, 0.2030,  ..., 0.2041, 0.2118, 0.1813]],
        [[0.7894, 0.8155, 0.7952,  ..., 0.7892, 0.7941, 0.7807],
         [0.2106, 0.1845, 0.2048,  ..., 0.2108, 0.2059, 0.2193]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:12:32,792 [Process: 0] Synchronize training processes
2024-08-16 17:12:32,793 [Process: 0] Evaluating...
2024-08-16 17:12:32,795 [Process: 0] EPOCH 31:
2024-08-16 17:12:32,797 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8137, 0.8173, 0.7960,  ..., 0.7756, 0.7931, 0.7842],
         [0.1863, 0.1827, 0.2040,  ..., 0.2244, 0.2069, 0.2158]],
        [[0.7942, 0.7945, 0.7864,  ..., 0.7808, 0.5000, 0.7920],
         [0.2058, 0.2055, 0.2136,  ..., 0.2192, 0.5000, 0.2080]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7967, 0.7918, 0.7929,  ..., 0.8002, 0.7861, 0.7949],
         [0.2033, 0.2082, 0.2071,  ..., 0.1998, 0.2139, 0.2051]],
        [[0.7984, 0.8037, 0.7893,  ..., 0.7816, 0.7937, 0.8003],
         [0.2016, 0.1963, 0.2107,  ..., 0.2184, 0.2063, 0.1997]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:12:34,981 [Process: 0] Synchronize training processes
2024-08-16 17:12:34,982 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8104, 0.8159, 0.8020,  ..., 0.8078, 0.8141, 0.8022],
         [0.1896, 0.1841, 0.1980,  ..., 0.1922, 0.1859, 0.1978]],
        [[0.7981, 0.8156, 0.8007,  ..., 0.7947, 0.5000, 0.8156],
         [0.2019, 0.1844, 0.1993,  ..., 0.2053, 0.5000, 0.1844]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8083, 0.7927, 0.7848,  ..., 0.8167, 0.7916, 0.7831],
         [0.1917, 0.2073, 0.2152,  ..., 0.1833, 0.2084, 0.2169]],
        [[0.8041, 0.8019, 0.8243,  ..., 0.7837, 0.8061, 0.7934],
         [0.1959, 0.1981, 0.1757,  ..., 0.2163, 0.1939, 0.2066]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:12:34,992 [Process: 0] EPOCH 32:
2024-08-16 17:12:34,994 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8044, 0.7882, 0.8001,  ..., 0.8037, 0.8107, 0.8051],
         [0.1956, 0.2118, 0.1999,  ..., 0.1963, 0.1893, 0.1949]],
        [[0.7852, 0.7789, 0.7911,  ..., 0.7992, 0.5000, 0.7947],
         [0.2148, 0.2211, 0.2089,  ..., 0.2008, 0.5000, 0.2053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8049, 0.8046, 0.7895,  ..., 0.7910, 0.8012, 0.8053],
         [0.1951, 0.1954, 0.2105,  ..., 0.2090, 0.1988, 0.1947]],
        [[0.8051, 0.8056, 0.7905,  ..., 0.7996, 0.7933, 0.8038],
         [0.1949, 0.1944, 0.2095,  ..., 0.2004, 0.2067, 0.1962]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:12:37,202 [Process: 0] Synchronize training processes
2024-08-16 17:12:37,202 [Process: 0] Evaluating...
2024-08-16 17:12:37,204 [Process: 0] EPOCH 33:
2024-08-16 17:12:37,206 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8191, 0.8177, 0.8292,  ..., 0.8162, 0.7821, 0.8169],
         [0.1809, 0.1823, 0.1708,  ..., 0.1838, 0.2179, 0.1831]],
        [[0.8049, 0.8137, 0.8064,  ..., 0.7989, 0.5000, 0.8122],
         [0.1951, 0.1863, 0.1936,  ..., 0.2011, 0.5000, 0.1878]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:12:39,424 [Process: 0] Synchronize training processes
2024-08-16 17:12:39,425 [Process: 0] Evaluating...
2024-08-16 17:12:39,427 [Process: 0] EPOCH 34:
2024-08-16 17:12:39,429 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8003, 0.8127, 0.7957,  ..., 0.7999, 0.7924, 0.8121],
         [0.1997, 0.1873, 0.2043,  ..., 0.2001, 0.2076, 0.1879]],
        [[0.8156, 0.8062, 0.7921,  ..., 0.8197, 0.8142, 0.7932],
         [0.1844, 0.1938, 0.2079,  ..., 0.1803, 0.1858, 0.2068]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8273, 0.8164, 0.8269,  ..., 0.8386, 0.8210, 0.8284],
         [0.1727, 0.1836, 0.1731,  ..., 0.1614, 0.1790, 0.1716]],
        [[0.8277, 0.8247, 0.8023,  ..., 0.8349, 0.5000, 0.8197],
         [0.1723, 0.1753, 0.1977,  ..., 0.1651, 0.5000, 0.1803]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:12:41,739 [Process: 0] Synchronize training processes
2024-08-16 17:12:41,739 [Process: 0] Evaluating...
2024-08-16 17:12:41,741 [Process: 0] EPOCH 35:
2024-08-16 17:12:41,743 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8051, 0.8167, 0.8197,  ..., 0.8036, 0.8093, 0.8079],
         [0.1949, 0.1833, 0.1803,  ..., 0.1964, 0.1907, 0.1921]],
        [[0.8030, 0.8044, 0.7956,  ..., 0.8061, 0.7982, 0.8274],
         [0.1970, 0.1956, 0.2044,  ..., 0.1939, 0.2018, 0.1726]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8184, 0.8308, 0.8319,  ..., 0.8296, 0.8142, 0.8062],
         [0.1816, 0.1692, 0.1681,  ..., 0.1704, 0.1858, 0.1938]],
        [[0.8283, 0.8202, 0.8232,  ..., 0.8282, 0.5000, 0.7997],
         [0.1717, 0.1798, 0.1768,  ..., 0.1718, 0.5000, 0.2003]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:12:44,053 [Process: 0] Synchronize training processes
2024-08-16 17:12:44,053 [Process: 0] Evaluating...
2024-08-16 17:12:44,055 [Process: 0] EPOCH 36:
2024-08-16 17:12:44,057 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8294, 0.8098, 0.8248,  ..., 0.8352, 0.8296, 0.8267],
         [0.1706, 0.1902, 0.1752,  ..., 0.1648, 0.1704, 0.1733]],
        [[0.8131, 0.8187, 0.8038,  ..., 0.8088, 0.8063, 0.8212],
         [0.1869, 0.1813, 0.1962,  ..., 0.1912, 0.1937, 0.1788]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7962, 0.8035, 0.8264,  ..., 0.8216, 0.8205, 0.8241],
         [0.2038, 0.1965, 0.1736,  ..., 0.1784, 0.1795, 0.1759]],
        [[0.8111, 0.8115, 0.8250,  ..., 0.8244, 0.5000, 0.8177],
         [0.1889, 0.1885, 0.1750,  ..., 0.1756, 0.5000, 0.1823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:12:46,307 [Process: 0] Synchronize training processes
2024-08-16 17:12:46,308 [Process: 0] Evaluating...
2024-08-16 17:12:46,310 [Process: 0] EPOCH 37:
2024-08-16 17:12:46,312 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8136, 0.8277, 0.8316,  ..., 0.8192, 0.8145, 0.8168],
         [0.1864, 0.1723, 0.1684,  ..., 0.1808, 0.1855, 0.1832]],
        [[0.8104, 0.8279, 0.8187,  ..., 0.8222, 0.8189, 0.8107],
         [0.1896, 0.1721, 0.1813,  ..., 0.1778, 0.1811, 0.1893]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 17:12:48,505 [Process: 0] Synchronize training processes
2024-08-16 17:12:48,505 [Process: 0] Evaluating...
2024-08-16 17:12:48,507 [Process: 0] EPOCH 38:
2024-08-16 17:12:48,509 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8201, 0.8252, 0.8208,  ..., 0.8143, 0.8057, 0.8324],
         [0.1799, 0.1748, 0.1792,  ..., 0.1857, 0.1943, 0.1676]],
        [[0.8225, 0.8170, 0.8180,  ..., 0.8183, 0.5000, 0.8142],
         [0.1775, 0.1830, 0.1820,  ..., 0.1817, 0.5000, 0.1858]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8174, 0.8254, 0.8145,  ..., 0.8187, 0.8235, 0.8209],
         [0.1826, 0.1746, 0.1855,  ..., 0.1813, 0.1765, 0.1791]],
        [[0.8333, 0.8255, 0.8195,  ..., 0.8109, 0.8195, 0.8188],
         [0.1667, 0.1745, 0.1805,  ..., 0.1891, 0.1805, 0.1812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:12:50,715 [Process: 0] Synchronize training processes
2024-08-16 17:12:50,715 [Process: 0] Evaluating...
2024-08-16 17:12:50,718 [Process: 0] EPOCH 39:
2024-08-16 17:12:50,720 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8342, 0.8181, 0.8261,  ..., 0.8145, 0.8196, 0.8455],
         [0.1658, 0.1819, 0.1739,  ..., 0.1855, 0.1804, 0.1545]],
        [[0.8319, 0.8346, 0.8428,  ..., 0.8214, 0.5000, 0.8174],
         [0.1681, 0.1654, 0.1572,  ..., 0.1786, 0.5000, 0.1826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8134, 0.8244, 0.8258,  ..., 0.8288, 0.8219, 0.8260],
         [0.1866, 0.1756, 0.1742,  ..., 0.1712, 0.1781, 0.1740]],
        [[0.8174, 0.8277, 0.8270,  ..., 0.8254, 0.8154, 0.8222],
         [0.1826, 0.1723, 0.1730,  ..., 0.1746, 0.1846, 0.1778]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:12:52,899 [Process: 0] Synchronize training processes
2024-08-16 17:12:52,900 [Process: 0] Evaluating...
2024-08-16 17:12:52,903 [Process: 0] EPOCH 40:
2024-08-16 17:12:52,906 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8374, 0.8251, 0.8380,  ..., 0.8280, 0.8334, 0.8240],
         [0.1626, 0.1749, 0.1620,  ..., 0.1720, 0.1666, 0.1760]],
        [[0.8087, 0.8301, 0.8266,  ..., 0.8357, 0.5000, 0.8346],
         [0.1913, 0.1699, 0.1734,  ..., 0.1643, 0.5000, 0.1654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8310, 0.8216, 0.8181,  ..., 0.8376, 0.8309, 0.8280],
         [0.1690, 0.1784, 0.1819,  ..., 0.1624, 0.1691, 0.1720]],
        [[0.8251, 0.8195, 0.8312,  ..., 0.8230, 0.8173, 0.8277],
         [0.1749, 0.1805, 0.1688,  ..., 0.1770, 0.1827, 0.1723]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8418, 0.8324, 0.8343,  ..., 0.8374, 0.8273, 0.8212],
         [0.1582, 0.1676, 0.1657,  ..., 0.1626, 0.1727, 0.1788]],
        [[0.8296, 0.8357, 0.8295,  ..., 0.8339, 0.5000, 0.8435],
         [0.1704, 0.1643, 0.1705,  ..., 0.1661, 0.5000, 0.1565]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8400, 0.8341, 0.8419,  ..., 0.8224, 0.8232, 0.8311],
         [0.1600, 0.1659, 0.1581,  ..., 0.1776, 0.1768, 0.1689]],
        [[0.8307, 0.8241, 0.8359,  ..., 0.8443, 0.8268, 0.8311],
         [0.1693, 0.1759, 0.1641,  ..., 0.1557, 0.1732, 0.1689]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:12:55,068 [Process: 0] Synchronize training processes
2024-08-16 17:12:55,069 [Process: 0] Evaluating...
2024-08-16 17:12:55,071 [Process: 0] EPOCH 41:
2024-08-16 17:12:55,073 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8209, 0.8459, 0.8351,  ..., 0.8418, 0.8326, 0.8241],
         [0.1791, 0.1541, 0.1649,  ..., 0.1582, 0.1674, 0.1759]],
        [[0.8324, 0.8370, 0.8298,  ..., 0.8423, 0.5000, 0.8234],
         [0.1676, 0.1630, 0.1702,  ..., 0.1577, 0.5000, 0.1766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8401, 0.8346, 0.8366,  ..., 0.8253, 0.8352, 0.8443],
         [0.1599, 0.1654, 0.1634,  ..., 0.1747, 0.1648, 0.1557]],
        [[0.8282, 0.8363, 0.8362,  ..., 0.8353, 0.8433, 0.8376],
         [0.1718, 0.1637, 0.1638,  ..., 0.1647, 0.1567, 0.1624]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:12:57,240 [Process: 0] Synchronize training processes
2024-08-16 17:12:57,241 [Process: 0] Evaluating...
2024-08-16 17:12:57,249 [Process: 0] EPOCH 42:
2024-08-16 17:12:57,251 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8428, 0.8460, 0.8366,  ..., 0.8444, 0.8436, 0.8252],
         [0.1572, 0.1540, 0.1634,  ..., 0.1556, 0.1564, 0.1748]],
        [[0.8363, 0.8352, 0.8343,  ..., 0.8421, 0.5000, 0.8316],
         [0.1637, 0.1648, 0.1657,  ..., 0.1579, 0.5000, 0.1684]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 17:12:59,420 [Process: 0] Synchronize training processes
2024-08-16 17:12:59,420 [Process: 0] Evaluating...
2024-08-16 17:12:59,422 [Process: 0] EPOCH 43:
2024-08-16 17:12:59,424 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8511, 0.8333, 0.8396,  ..., 0.8253, 0.8375, 0.8413],
         [0.1489, 0.1667, 0.1604,  ..., 0.1747, 0.1625, 0.1587]],
        [[0.8308, 0.8351, 0.8369,  ..., 0.8434, 0.8327, 0.8301],
         [0.1692, 0.1649, 0.1631,  ..., 0.1566, 0.1673, 0.1699]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8403, 0.8392, 0.8392,  ..., 0.8353, 0.8462, 0.8421],
         [0.1597, 0.1608, 0.1608,  ..., 0.1647, 0.1538, 0.1579]],
        [[0.8225, 0.8400, 0.8410,  ..., 0.8431, 0.5000, 0.8333],
         [0.1775, 0.1600, 0.1590,  ..., 0.1569, 0.5000, 0.1667]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:01,587 [Process: 0] Synchronize training processes
2024-08-16 17:13:01,588 [Process: 0] Evaluating...
2024-08-16 17:13:01,590 [Process: 0] EPOCH 44:
2024-08-16 17:13:01,591 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8345, 0.8468, 0.8414,  ..., 0.8362, 0.8405, 0.8231],
         [0.1655, 0.1532, 0.1586,  ..., 0.1638, 0.1595, 0.1769]],
        [[0.8388, 0.8338, 0.8307,  ..., 0.8457, 0.8406, 0.8265],
         [0.1612, 0.1662, 0.1693,  ..., 0.1543, 0.1594, 0.1735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8351, 0.8323, 0.8380,  ..., 0.8447, 0.8467, 0.8505],
         [0.1649, 0.1677, 0.1620,  ..., 0.1553, 0.1533, 0.1495]],
        [[0.8464, 0.8372, 0.8372,  ..., 0.8424, 0.5000, 0.8427],
         [0.1536, 0.1628, 0.1628,  ..., 0.1576, 0.5000, 0.1573]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:03,789 [Process: 0] Synchronize training processes
2024-08-16 17:13:03,790 [Process: 0] Evaluating...
2024-08-16 17:13:03,792 [Process: 0] EPOCH 45:
2024-08-16 17:13:03,794 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8329, 0.8277, 0.8368,  ..., 0.8258, 0.8391, 0.8483],
         [0.1671, 0.1723, 0.1632,  ..., 0.1742, 0.1609, 0.1517]],
        [[0.8480, 0.8351, 0.8452,  ..., 0.8518, 0.8442, 0.8290],
         [0.1520, 0.1649, 0.1548,  ..., 0.1482, 0.1558, 0.1710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8450, 0.8526, 0.8503,  ..., 0.8368, 0.8397, 0.8492],
         [0.1550, 0.1474, 0.1497,  ..., 0.1632, 0.1603, 0.1508]],
        [[0.8457, 0.8444, 0.8353,  ..., 0.8446, 0.5000, 0.8386],
         [0.1543, 0.1556, 0.1647,  ..., 0.1554, 0.5000, 0.1614]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:05,964 [Process: 0] Synchronize training processes
2024-08-16 17:13:05,964 [Process: 0] Evaluating...
2024-08-16 17:13:05,966 [Process: 0] EPOCH 46:
2024-08-16 17:13:05,968 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8342, 0.8384, 0.8521,  ..., 0.8331, 0.8475, 0.8404],
         [0.1658, 0.1616, 0.1479,  ..., 0.1669, 0.1525, 0.1596]],
        [[0.8414, 0.7428, 0.8480,  ..., 0.8438, 0.8425, 0.8291],
         [0.1586, 0.2572, 0.1520,  ..., 0.1562, 0.1575, 0.1709]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8404, 0.8356, 0.8472,  ..., 0.8443, 0.8482, 0.8523],
         [0.1596, 0.1644, 0.1528,  ..., 0.1557, 0.1518, 0.1477]],
        [[0.8446, 0.8392, 0.8575,  ..., 0.8522, 0.5000, 0.8557],
         [0.1554, 0.1608, 0.1425,  ..., 0.1478, 0.5000, 0.1443]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:08,166 [Process: 0] Synchronize training processes
2024-08-16 17:13:08,166 [Process: 0] Evaluating...
2024-08-16 17:13:08,168 [Process: 0] EPOCH 47:
2024-08-16 17:13:08,170 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.8718, 0.5000,  ..., 0.8807, 0.5000, 0.5000],
         [0.5000, 0.1282, 0.5000,  ..., 0.1193, 0.5000, 0.5000]],
        [[0.8938, 0.8743, 0.8836,  ..., 0.8947, 0.8875, 0.8932],
         [0.1062, 0.1257, 0.1164,  ..., 0.1053, 0.1125, 0.1068]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8376, 0.8462, 0.8468,  ..., 0.8354, 0.8376, 0.8409],
         [0.1624, 0.1538, 0.1532,  ..., 0.1646, 0.1624, 0.1591]],
        [[0.8373, 0.8374, 0.8404,  ..., 0.8408, 0.5000, 0.8459],
         [0.1627, 0.1626, 0.1596,  ..., 0.1592, 0.5000, 0.1541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:10,346 [Process: 0] Synchronize training processes
2024-08-16 17:13:10,346 [Process: 0] Evaluating...
2024-08-16 17:13:10,348 [Process: 0] EPOCH 48:
2024-08-16 17:13:10,350 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8481, 0.8280, 0.8397,  ..., 0.8329, 0.8386, 0.8311],
         [0.1519, 0.1720, 0.1603,  ..., 0.1671, 0.1614, 0.1689]],
        [[0.8392, 0.8428, 0.8272,  ..., 0.8429, 0.8300, 0.8331],
         [0.1608, 0.1572, 0.1728,  ..., 0.1571, 0.1700, 0.1669]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:13:12,515 [Process: 0] Synchronize training processes
2024-08-16 17:13:12,515 [Process: 0] Evaluating...
2024-08-16 17:13:12,517 [Process: 0] EPOCH 49:
2024-08-16 17:13:12,519 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8219, 0.8317, 0.8357,  ..., 0.8341, 0.8278, 0.8307],
         [0.1781, 0.1683, 0.1643,  ..., 0.1659, 0.1722, 0.1693]],
        [[0.8308, 0.8346, 0.8491,  ..., 0.8427, 0.8396, 0.8400],
         [0.1692, 0.1654, 0.1509,  ..., 0.1573, 0.1604, 0.1600]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8518, 0.8404, 0.8406,  ..., 0.8406, 0.8366, 0.8371],
         [0.1482, 0.1596, 0.1594,  ..., 0.1594, 0.1634, 0.1629]],
        [[0.8420, 0.8388, 0.8433,  ..., 0.8364, 0.8158, 0.8306],
         [0.1580, 0.1612, 0.1567,  ..., 0.1636, 0.1842, 0.1694]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:13:14,699 [Process: 0] Synchronize training processes
2024-08-16 17:13:14,699 [Process: 0] Evaluating...
2024-08-16 17:13:14,701 [Process: 0] EPOCH 50:
2024-08-16 17:13:14,703 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8216, 0.8381, 0.8315,  ..., 0.8342, 0.8329, 0.8333],
         [0.1784, 0.1619, 0.1685,  ..., 0.1658, 0.1671, 0.1667]],
        [[0.8347, 0.8294, 0.8307,  ..., 0.8359, 0.8283, 0.8368],
         [0.1653, 0.1706, 0.1693,  ..., 0.1641, 0.1717, 0.1632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8494, 0.8359, 0.8450,  ..., 0.8367, 0.8379, 0.8366],
         [0.1506, 0.1641, 0.1550,  ..., 0.1633, 0.1621, 0.1634]],
        [[0.8313, 0.8480, 0.8315,  ..., 0.8411, 0.8200, 0.8502],
         [0.1687, 0.1520, 0.1685,  ..., 0.1589, 0.1800, 0.1498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:13:16,882 [Process: 0] Synchronize training processes
2024-08-16 17:13:16,882 [Process: 0] Evaluating...
2024-08-16 17:13:16,884 [Process: 0] EPOCH 51:
2024-08-16 17:13:16,886 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8246, 0.8241, 0.8365,  ..., 0.8277, 0.8302, 0.8415],
         [0.1754, 0.1759, 0.1635,  ..., 0.1723, 0.1698, 0.1585]],
        [[0.8281, 0.8430, 0.8406,  ..., 0.8406, 0.8416, 0.8364],
         [0.1719, 0.1570, 0.1594,  ..., 0.1594, 0.1584, 0.1636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8451, 0.8321, 0.8467,  ..., 0.8489, 0.8555, 0.8594],
         [0.1549, 0.1679, 0.1533,  ..., 0.1511, 0.1445, 0.1406]],
        [[0.8397, 0.8536, 0.8457,  ..., 0.8543, 0.8493, 0.8616],
         [0.1603, 0.1464, 0.1543,  ..., 0.1457, 0.1507, 0.1384]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8279, 0.8515, 0.8425,  ..., 0.8427, 0.8592, 0.8391],
         [0.1721, 0.1485, 0.1575,  ..., 0.1573, 0.1408, 0.1609]],
        [[0.8412, 0.8285, 0.8208,  ..., 0.8347, 0.8206, 0.8277],
         [0.1588, 0.1715, 0.1792,  ..., 0.1653, 0.1794, 0.1723]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8626, 0.8733, 0.8654,  ..., 0.8668, 0.8599, 0.8570],
         [0.1374, 0.1267, 0.1346,  ..., 0.1332, 0.1401, 0.1430]],
        [[0.8481, 0.8394, 0.8553,  ..., 0.8481, 0.5592, 0.8518],
         [0.1519, 0.1606, 0.1447,  ..., 0.1519, 0.4408, 0.1482]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:13:19,052 [Process: 0] Synchronize training processes
2024-08-16 17:13:19,052 [Process: 0] Evaluating...
2024-08-16 17:13:19,061 [Process: 0] EPOCH 52:
2024-08-16 17:13:19,063 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8397, 0.8279, 0.8531,  ..., 0.8431, 0.8317, 0.8467],
         [0.1603, 0.1721, 0.1469,  ..., 0.1569, 0.1683, 0.1533]],
        [[0.8436, 0.8379, 0.8408,  ..., 0.8450, 0.8224, 0.8320],
         [0.1564, 0.1621, 0.1592,  ..., 0.1550, 0.1776, 0.1680]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8836, 0.8727, 0.8618,  ..., 0.8617, 0.8728, 0.8648],
         [0.1164, 0.1273, 0.1382,  ..., 0.1383, 0.1272, 0.1352]],
        [[0.8578, 0.8701, 0.8630,  ..., 0.8690, 0.8800, 0.8641],
         [0.1422, 0.1299, 0.1370,  ..., 0.1310, 0.1200, 0.1359]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:13:21,244 [Process: 0] Synchronize training processes
2024-08-16 17:13:21,244 [Process: 0] Evaluating...
2024-08-16 17:13:21,246 [Process: 0] EPOCH 53:
2024-08-16 17:13:21,248 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8454, 0.8408, 0.8408,  ..., 0.8303, 0.8478, 0.8455],
         [0.1546, 0.1592, 0.1592,  ..., 0.1697, 0.1522, 0.1545]],
        [[0.8335, 0.8384, 0.8392,  ..., 0.8507, 0.8436, 0.8443],
         [0.1665, 0.1616, 0.1608,  ..., 0.1493, 0.1564, 0.1557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
2024-08-16 17:13:23,421 [Process: 0] Synchronize training processes
2024-08-16 17:13:23,421 [Process: 0] Evaluating...
2024-08-16 17:13:23,423 [Process: 0] EPOCH 54:
2024-08-16 17:13:23,425 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.8831, 0.8776, 0.8681,  ..., 0.8794, 0.8695, 0.8621],
         [0.1169, 0.1224, 0.1319,  ..., 0.1206, 0.1305, 0.1379]],
        [[0.8715, 0.8814, 0.8609,  ..., 0.8789, 0.7686, 0.8756],
         [0.1285, 0.1186, 0.1391,  ..., 0.1211, 0.2314, 0.1244]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8323, 0.8489, 0.8311,  ..., 0.8380, 0.8353, 0.8351],
         [0.1677, 0.1511, 0.1689,  ..., 0.1620, 0.1647, 0.1649]],
        [[0.8472, 0.8474, 0.8325,  ..., 0.8371, 0.8396, 0.8419],
         [0.1528, 0.1526, 0.1675,  ..., 0.1629, 0.1604, 0.1581]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:25,602 [Process: 0] Synchronize training processes
2024-08-16 17:13:25,603 [Process: 0] Evaluating...
2024-08-16 17:13:25,605 [Process: 0] EPOCH 55:
2024-08-16 17:13:25,607 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8675, 0.8604, 0.8648,  ..., 0.8605, 0.8648, 0.8641],
         [0.1325, 0.1396, 0.1352,  ..., 0.1395, 0.1352, 0.1359]],
        [[0.8562, 0.8671, 0.8685,  ..., 0.8511, 0.5000, 0.8824],
         [0.1438, 0.1329, 0.1315,  ..., 0.1489, 0.5000, 0.1176]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8334, 0.8533, 0.8439,  ..., 0.8459, 0.8319, 0.8499],
         [0.1666, 0.1467, 0.1561,  ..., 0.1541, 0.1681, 0.1501]],
        [[0.8461, 0.8483, 0.8393,  ..., 0.8453, 0.8239, 0.8521],
         [0.1539, 0.1517, 0.1607,  ..., 0.1547, 0.1761, 0.1479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:27,794 [Process: 0] Synchronize training processes
2024-08-16 17:13:27,794 [Process: 0] Evaluating...
2024-08-16 17:13:27,796 [Process: 0] EPOCH 56:
2024-08-16 17:13:27,798 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8503, 0.8601, 0.8567,  ..., 0.8458, 0.8497, 0.8389],
         [0.1497, 0.1399, 0.1433,  ..., 0.1542, 0.1503, 0.1611]],
        [[0.8359, 0.8532, 0.8563,  ..., 0.8554, 0.8651, 0.8493],
         [0.1641, 0.1468, 0.1437,  ..., 0.1446, 0.1349, 0.1507]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8420, 0.8408, 0.8365,  ..., 0.8360, 0.8328, 0.8375],
         [0.1580, 0.1592, 0.1635,  ..., 0.1640, 0.1672, 0.1625]],
        [[0.8459, 0.8392, 0.8496,  ..., 0.8439, 0.8142, 0.8385],
         [0.1541, 0.1608, 0.1504,  ..., 0.1561, 0.1858, 0.1615]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:29,974 [Process: 0] Synchronize training processes
2024-08-16 17:13:29,975 [Process: 0] Evaluating...
2024-08-16 17:13:29,977 [Process: 0] EPOCH 57:
2024-08-16 17:13:29,979 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8539, 0.8505, 0.8484,  ..., 0.8511, 0.8487, 0.8526],
         [0.1461, 0.1495, 0.1516,  ..., 0.1489, 0.1513, 0.1474]],
        [[0.8672, 0.8524, 0.8465,  ..., 0.8450, 0.8575, 0.8462],
         [0.1328, 0.1476, 0.1535,  ..., 0.1550, 0.1425, 0.1538]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8397, 0.8366, 0.8431,  ..., 0.8502, 0.8475, 0.8439],
         [0.1603, 0.1634, 0.1569,  ..., 0.1498, 0.1525, 0.1561]],
        [[0.8504, 0.8415, 0.8516,  ..., 0.8428, 0.8272, 0.8471],
         [0.1496, 0.1585, 0.1484,  ..., 0.1572, 0.1728, 0.1529]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:32,144 [Process: 0] Synchronize training processes
2024-08-16 17:13:32,145 [Process: 0] Evaluating...
2024-08-16 17:13:32,147 [Process: 0] EPOCH 58:
2024-08-16 17:13:32,148 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8663, 0.8624, 0.8528,  ..., 0.8526, 0.8589, 0.8573],
         [0.1337, 0.1376, 0.1472,  ..., 0.1474, 0.1411, 0.1427]],
        [[0.8481, 0.8562, 0.8468,  ..., 0.8581, 0.8426, 0.8524],
         [0.1519, 0.1438, 0.1532,  ..., 0.1419, 0.1574, 0.1476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8525, 0.8434, 0.8441,  ..., 0.8419, 0.8421, 0.8444],
         [0.1475, 0.1566, 0.1559,  ..., 0.1581, 0.1579, 0.1556]],
        [[0.8483, 0.8385, 0.8488,  ..., 0.8497, 0.8469, 0.8498],
         [0.1517, 0.1615, 0.1512,  ..., 0.1503, 0.1531, 0.1502]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:34,321 [Process: 0] Synchronize training processes
2024-08-16 17:13:34,322 [Process: 0] Evaluating...
2024-08-16 17:13:34,324 [Process: 0] EPOCH 59:
2024-08-16 17:13:34,325 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8582, 0.8446, 0.8539,  ..., 0.8518, 0.8607, 0.8637],
         [0.1418, 0.1554, 0.1461,  ..., 0.1482, 0.1393, 0.1363]],
        [[0.8543, 0.8684, 0.8525,  ..., 0.8600, 0.8619, 0.8575],
         [0.1457, 0.1316, 0.1475,  ..., 0.1400, 0.1381, 0.1425]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8437, 0.8543, 0.8475,  ..., 0.8572, 0.8486, 0.8515],
         [0.1563, 0.1457, 0.1525,  ..., 0.1428, 0.1514, 0.1485]],
        [[0.8499, 0.8520, 0.8486,  ..., 0.8551, 0.8540, 0.8452],
         [0.1501, 0.1480, 0.1514,  ..., 0.1449, 0.1460, 0.1548]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:36,516 [Process: 0] Synchronize training processes
2024-08-16 17:13:36,516 [Process: 0] Evaluating...
2024-08-16 17:13:36,518 [Process: 0] EPOCH 60:
2024-08-16 17:13:36,520 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8658, 0.8546, 0.8611,  ..., 0.8571, 0.8531, 0.8635],
         [0.1342, 0.1454, 0.1389,  ..., 0.1429, 0.1469, 0.1365]],
        [[0.8573, 0.8674, 0.8627,  ..., 0.8608, 0.5670, 0.8606],
         [0.1427, 0.1326, 0.1373,  ..., 0.1392, 0.4330, 0.1394]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:13:38,697 [Process: 0] Synchronize training processes
2024-08-16 17:13:38,697 [Process: 0] Evaluating...
2024-08-16 17:13:38,699 [Process: 0] EPOCH 61:
2024-08-16 17:13:38,701 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8514, 0.8530, 0.8579,  ..., 0.8549, 0.8488, 0.8629],
         [0.1486, 0.1470, 0.1421,  ..., 0.1451, 0.1512, 0.1371]],
        [[0.8549, 0.8572, 0.8561,  ..., 0.8516, 0.8535, 0.8595],
         [0.1451, 0.1428, 0.1439,  ..., 0.1484, 0.1465, 0.1405]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8548, 0.8681, 0.8654,  ..., 0.8646, 0.8666, 0.8588],
         [0.1452, 0.1319, 0.1346,  ..., 0.1354, 0.1334, 0.1412]],
        [[0.8729, 0.8671, 0.8694,  ..., 0.8582, 0.5000, 0.8688],
         [0.1271, 0.1329, 0.1306,  ..., 0.1418, 0.5000, 0.1312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:13:40,870 [Process: 0] Synchronize training processes
2024-08-16 17:13:40,870 [Process: 0] Evaluating...
2024-08-16 17:13:40,878 [Process: 0] EPOCH 62:
2024-08-16 17:13:40,880 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8500, 0.8566, 0.8576,  ..., 0.8576, 0.8623, 0.8475],
         [0.1500, 0.1434, 0.1424,  ..., 0.1424, 0.1377, 0.1525]],
        [[0.8607, 0.8552, 0.8580,  ..., 0.8578, 0.8631, 0.8484],
         [0.1393, 0.1448, 0.1420,  ..., 0.1422, 0.1369, 0.1516]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8557, 0.8660, 0.8597,  ..., 0.8667, 0.8666, 0.8680],
         [0.1443, 0.1340, 0.1403,  ..., 0.1333, 0.1334, 0.1320]],
        [[0.8691, 0.8766, 0.8716,  ..., 0.8635, 0.5000, 0.8714],
         [0.1309, 0.1234, 0.1284,  ..., 0.1365, 0.5000, 0.1286]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8614, 0.8564, 0.8551,  ..., 0.8551, 0.8578, 0.8571],
         [0.1386, 0.1436, 0.1449,  ..., 0.1449, 0.1422, 0.1429]],
        [[0.8560, 0.8546, 0.8592,  ..., 0.8511, 0.8517, 0.8539],
         [0.1440, 0.1454, 0.1408,  ..., 0.1489, 0.1483, 0.1461]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8706, 0.8592, 0.8648,  ..., 0.8651, 0.8523, 0.8586],
         [0.1294, 0.1408, 0.1352,  ..., 0.1349, 0.1477, 0.1414]],
        [[0.8644, 0.8600, 0.8706,  ..., 0.8690, 0.5000, 0.8702],
         [0.1356, 0.1400, 0.1294,  ..., 0.1310, 0.5000, 0.1298]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:13:43,078 [Process: 0] Synchronize training processes
2024-08-16 17:13:43,078 [Process: 0] Evaluating...
2024-08-16 17:13:43,081 [Process: 0] EPOCH 63:
2024-08-16 17:13:43,083 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8561, 0.8604, 0.8554,  ..., 0.8574, 0.8616, 0.8653],
         [0.1439, 0.1396, 0.1446,  ..., 0.1426, 0.1384, 0.1347]],
        [[0.8567, 0.8550, 0.8657,  ..., 0.8541, 0.8560, 0.8573],
         [0.1433, 0.1450, 0.1343,  ..., 0.1459, 0.1440, 0.1427]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8635, 0.8730, 0.8690,  ..., 0.8596, 0.8635, 0.8688],
         [0.1365, 0.1270, 0.1310,  ..., 0.1404, 0.1365, 0.1312]],
        [[0.8692, 0.8661, 0.8682,  ..., 0.8663, 0.5667, 0.8685],
         [0.1308, 0.1339, 0.1318,  ..., 0.1337, 0.4333, 0.1315]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:13:45,257 [Process: 0] Synchronize training processes
2024-08-16 17:13:45,257 [Process: 0] Evaluating...
2024-08-16 17:13:45,259 [Process: 0] EPOCH 64:
2024-08-16 17:13:45,261 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8650, 0.8611, 0.8629,  ..., 0.8548, 0.8568, 0.8532],
         [0.1350, 0.1389, 0.1371,  ..., 0.1452, 0.1432, 0.1468]],
        [[0.8628, 0.8497, 0.8609,  ..., 0.8561, 0.8563, 0.8568],
         [0.1372, 0.1503, 0.1391,  ..., 0.1439, 0.1437, 0.1432]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8723, 0.8706, 0.8680,  ..., 0.8637, 0.8685, 0.8687],
         [0.1277, 0.1294, 0.1320,  ..., 0.1363, 0.1315, 0.1313]],
        [[0.8634, 0.8617, 0.8556,  ..., 0.8675, 0.8876, 0.8672],
         [0.1366, 0.1383, 0.1444,  ..., 0.1325, 0.1124, 0.1328]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:47,441 [Process: 0] Synchronize training processes
2024-08-16 17:13:47,442 [Process: 0] Evaluating...
2024-08-16 17:13:47,444 [Process: 0] EPOCH 65:
2024-08-16 17:13:47,446 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8577, 0.8642, 0.8650,  ..., 0.8624, 0.8587, 0.8647],
         [0.1423, 0.1358, 0.1350,  ..., 0.1376, 0.1413, 0.1353]],
        [[0.8510, 0.8564, 0.8620,  ..., 0.8665, 0.8566, 0.8619],
         [0.1490, 0.1436, 0.1380,  ..., 0.1335, 0.1434, 0.1381]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:49,612 [Process: 0] Synchronize training processes
2024-08-16 17:13:49,613 [Process: 0] Evaluating...
2024-08-16 17:13:49,615 [Process: 0] EPOCH 66:
2024-08-16 17:13:49,617 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8623, 0.8648, 0.8740,  ..., 0.8703, 0.8641, 0.8664],
         [0.1377, 0.1352, 0.1260,  ..., 0.1297, 0.1359, 0.1336]],
        [[0.8729, 0.8603, 0.8652,  ..., 0.8676, 0.8692, 0.8622],
         [0.1271, 0.1397, 0.1348,  ..., 0.1324, 0.1308, 0.1378]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8653, 0.8631, 0.8678,  ..., 0.8664, 0.8687, 0.8653],
         [0.1347, 0.1369, 0.1322,  ..., 0.1336, 0.1313, 0.1347]],
        [[0.8566, 0.8664, 0.8601,  ..., 0.8595, 0.8547, 0.8558],
         [0.1434, 0.1336, 0.1399,  ..., 0.1405, 0.1453, 0.1442]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:51,807 [Process: 0] Synchronize training processes
2024-08-16 17:13:51,807 [Process: 0] Evaluating...
2024-08-16 17:13:51,810 [Process: 0] EPOCH 67:
2024-08-16 17:13:51,811 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8703, 0.8718, 0.8680,  ..., 0.8702, 0.8640, 0.8672],
         [0.1297, 0.1282, 0.1320,  ..., 0.1298, 0.1360, 0.1328]],
        [[0.8702, 0.8649, 0.8691,  ..., 0.8646, 0.8633, 0.8656],
         [0.1298, 0.1351, 0.1309,  ..., 0.1354, 0.1367, 0.1344]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8697, 0.8683, 0.8691,  ..., 0.8736, 0.8668, 0.8676],
         [0.1303, 0.1317, 0.1309,  ..., 0.1264, 0.1332, 0.1324]],
        [[0.8602, 0.8661, 0.8618,  ..., 0.8619, 0.8636, 0.8657],
         [0.1398, 0.1339, 0.1382,  ..., 0.1381, 0.1364, 0.1343]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:53,991 [Process: 0] Synchronize training processes
2024-08-16 17:13:53,991 [Process: 0] Evaluating...
2024-08-16 17:13:53,993 [Process: 0] EPOCH 68:
2024-08-16 17:13:53,995 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8734, 0.8747, 0.8715,  ..., 0.8726, 0.8697, 0.8685],
         [0.1266, 0.1253, 0.1285,  ..., 0.1274, 0.1303, 0.1315]],
        [[0.8718, 0.8720, 0.8692,  ..., 0.8735, 0.8780, 0.8713],
         [0.1282, 0.1280, 0.1308,  ..., 0.1265, 0.1220, 0.1287]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8659, 0.8640, 0.8712,  ..., 0.8671, 0.8684, 0.8664],
         [0.1341, 0.1360, 0.1288,  ..., 0.1329, 0.1316, 0.1336]],
        [[0.8642, 0.8681, 0.8654,  ..., 0.8664, 0.8640, 0.8666],
         [0.1358, 0.1319, 0.1346,  ..., 0.1336, 0.1360, 0.1334]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:56,173 [Process: 0] Synchronize training processes
2024-08-16 17:13:56,174 [Process: 0] Evaluating...
2024-08-16 17:13:56,175 [Process: 0] EPOCH 69:
2024-08-16 17:13:56,177 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8710, 0.8675, 0.8721,  ..., 0.8707, 0.8702, 0.8726],
         [0.1290, 0.1325, 0.1279,  ..., 0.1293, 0.1298, 0.1274]],
        [[0.8729, 0.8766, 0.8723,  ..., 0.8751, 0.8797, 0.8689],
         [0.1271, 0.1234, 0.1277,  ..., 0.1249, 0.1203, 0.1311]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8783, 0.8733, 0.8715,  ..., 0.8677, 0.8617, 0.8602],
         [0.1217, 0.1267, 0.1285,  ..., 0.1323, 0.1383, 0.1398]],
        [[0.8720, 0.8708, 0.8676,  ..., 0.8692, 0.8697, 0.8660],
         [0.1280, 0.1292, 0.1324,  ..., 0.1308, 0.1303, 0.1340]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:13:58,334 [Process: 0] Synchronize training processes
2024-08-16 17:13:58,335 [Process: 0] Evaluating...
2024-08-16 17:13:58,336 [Process: 0] EPOCH 70:
2024-08-16 17:13:58,338 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8718, 0.8747, 0.8731,  ..., 0.8680, 0.8674, 0.8689],
         [0.1282, 0.1253, 0.1269,  ..., 0.1320, 0.1326, 0.1311]],
        [[0.8717, 0.8709, 0.8666,  ..., 0.8694, 0.8700, 0.8722],
         [0.1283, 0.1291, 0.1334,  ..., 0.1306, 0.1300, 0.1278]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8753, 0.8736, 0.8691,  ..., 0.8694, 0.8736, 0.8700],
         [0.1247, 0.1264, 0.1309,  ..., 0.1306, 0.1264, 0.1300]],
        [[0.8646, 0.8653, 0.8726,  ..., 0.8673, 0.8695, 0.8681],
         [0.1354, 0.1347, 0.1274,  ..., 0.1327, 0.1305, 0.1319]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:14:00,503 [Process: 0] Synchronize training processes
2024-08-16 17:14:00,504 [Process: 0] Evaluating...
2024-08-16 17:14:00,506 [Process: 0] EPOCH 71:
2024-08-16 17:14:00,508 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8718, 0.8746, 0.8723,  ..., 0.8650, 0.8604, 0.8600],
         [0.1282, 0.1254, 0.1277,  ..., 0.1350, 0.1396, 0.1400]],
        [[0.8694, 0.8705, 0.8663,  ..., 0.8693, 0.8772, 0.8694],
         [0.1306, 0.1295, 0.1337,  ..., 0.1307, 0.1228, 0.1306]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:14:02,688 [Process: 0] Synchronize training processes
2024-08-16 17:14:02,689 [Process: 0] Evaluating...
2024-08-16 17:14:02,697 [Process: 0] EPOCH 72:
2024-08-16 17:14:02,699 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8768, 0.8750, 0.8779,  ..., 0.8725, 0.8767, 0.8733],
         [0.1232, 0.1250, 0.1221,  ..., 0.1275, 0.1233, 0.1267]],
        [[0.8686, 0.8734, 0.8766,  ..., 0.8731, 0.8781, 0.8724],
         [0.1314, 0.1266, 0.1234,  ..., 0.1269, 0.1219, 0.1276]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8768, 0.8693, 0.8671,  ..., 0.8680, 0.8714, 0.8727],
         [0.1232, 0.1307, 0.1329,  ..., 0.1320, 0.1286, 0.1273]],
        [[0.8709, 0.8733, 0.8704,  ..., 0.8676, 0.8661, 0.8731],
         [0.1291, 0.1267, 0.1296,  ..., 0.1324, 0.1339, 0.1269]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:14:04,873 [Process: 0] Synchronize training processes
2024-08-16 17:14:04,873 [Process: 0] Evaluating...
2024-08-16 17:14:04,875 [Process: 0] EPOCH 73:
2024-08-16 17:14:04,877 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8714, 0.8790, 0.8710,  ..., 0.8767, 0.8763, 0.8692],
         [0.1286, 0.1210, 0.1290,  ..., 0.1233, 0.1237, 0.1308]],
        [[0.8798, 0.8746, 0.8744,  ..., 0.8766, 0.8778, 0.8714],
         [0.1202, 0.1254, 0.1256,  ..., 0.1234, 0.1222, 0.1286]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8723, 0.8682, 0.8766,  ..., 0.8773, 0.8700, 0.8771],
         [0.1277, 0.1318, 0.1234,  ..., 0.1227, 0.1300, 0.1229]],
        [[0.8689, 0.8723, 0.8719,  ..., 0.8742, 0.8720, 0.8746],
         [0.1311, 0.1277, 0.1281,  ..., 0.1258, 0.1280, 0.1254]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:14:07,056 [Process: 0] Synchronize training processes
2024-08-16 17:14:07,057 [Process: 0] Evaluating...
2024-08-16 17:14:07,059 [Process: 0] EPOCH 74:
2024-08-16 17:14:07,061 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8780, 0.8839, 0.8774,  ..., 0.8775, 0.8808, 0.8785],
         [0.1220, 0.1161, 0.1226,  ..., 0.1225, 0.1192, 0.1215]],
        [[0.8838, 0.8810, 0.8799,  ..., 0.8794, 0.8781, 0.8790],
         [0.1162, 0.1190, 0.1201,  ..., 0.1206, 0.1219, 0.1210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8739, 0.8793, 0.8757,  ..., 0.8776, 0.8755, 0.8797],
         [0.1261, 0.1207, 0.1243,  ..., 0.1224, 0.1245, 0.1203]],
        [[0.8710, 0.8748, 0.8723,  ..., 0.8710, 0.8707, 0.8746],
         [0.1290, 0.1252, 0.1277,  ..., 0.1290, 0.1293, 0.1254]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8816, 0.8792, 0.8765,  ..., 0.8810, 0.8806, 0.8765],
         [0.1184, 0.1208, 0.1235,  ..., 0.1190, 0.1194, 0.1235]],
        [[0.8779, 0.8831, 0.8833,  ..., 0.8799, 0.8833, 0.8812],
         [0.1221, 0.1169, 0.1167,  ..., 0.1201, 0.1167, 0.1188]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8787, 0.8778, 0.8771,  ..., 0.8771, 0.8805, 0.8781],
         [0.1213, 0.1222, 0.1229,  ..., 0.1229, 0.1195, 0.1219]],
        [[0.8779, 0.8785, 0.8764,  ..., 0.8754, 0.8739, 0.8748],
         [0.1221, 0.1215, 0.1236,  ..., 0.1246, 0.1261, 0.1252]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:14:09,251 [Process: 0] Synchronize training processes
2024-08-16 17:14:09,251 [Process: 0] Evaluating...
2024-08-16 17:14:09,253 [Process: 0] EPOCH 75:
2024-08-16 17:14:09,256 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8821, 0.8797, 0.8804,  ..., 0.8840, 0.8829, 0.8828],
         [0.1179, 0.1203, 0.1196,  ..., 0.1160, 0.1171, 0.1172]],
        [[0.8842, 0.8800, 0.8814,  ..., 0.8838, 0.8814, 0.8837],
         [0.1158, 0.1200, 0.1186,  ..., 0.1162, 0.1186, 0.1163]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8750, 0.8746, 0.8807,  ..., 0.8790, 0.8753, 0.8756],
         [0.1250, 0.1254, 0.1193,  ..., 0.1210, 0.1247, 0.1244]],
        [[0.8731, 0.8736, 0.8790,  ..., 0.8783, 0.8762, 0.8797],
         [0.1269, 0.1264, 0.1210,  ..., 0.1217, 0.1238, 0.1203]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-16 17:14:11,429 [Process: 0] Synchronize training processes
2024-08-16 17:14:11,429 [Process: 0] Evaluating...
2024-08-16 17:14:11,431 [Process: 0] EPOCH 76:
2024-08-16 17:14:11,433 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8848, 0.8815, 0.8847,  ..., 0.8804, 0.8826, 0.8804],
         [0.1152, 0.1185, 0.1153,  ..., 0.1196, 0.1174, 0.1196]],
        [[0.8807, 0.8888, 0.8834,  ..., 0.8809, 0.8839, 0.8811],
         [0.1193, 0.1112, 0.1166,  ..., 0.1191, 0.1161, 0.1189]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:14:13,609 [Process: 0] Synchronize training processes
2024-08-16 17:14:13,610 [Process: 0] Evaluating...
2024-08-16 17:14:13,612 [Process: 0] EPOCH 77:
2024-08-16 17:14:13,614 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8854, 0.8799, 0.8762,  ..., 0.8746, 0.8775, 0.8740],
         [0.1146, 0.1201, 0.1238,  ..., 0.1254, 0.1225, 0.1260]],
        [[0.8769, 0.8782, 0.8740,  ..., 0.8761, 0.8742, 0.8722],
         [0.1231, 0.1218, 0.1260,  ..., 0.1239, 0.1258, 0.1278]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8824, 0.8801, 0.8857,  ..., 0.8828, 0.8809, 0.8827],
         [0.1176, 0.1199, 0.1143,  ..., 0.1172, 0.1191, 0.1173]],
        [[0.8820, 0.8889, 0.8815,  ..., 0.8797, 0.8882, 0.8781],
         [0.1180, 0.1111, 0.1185,  ..., 0.1203, 0.1118, 0.1219]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:14:15,797 [Process: 0] Synchronize training processes
2024-08-16 17:14:15,797 [Process: 0] Evaluating...
2024-08-16 17:14:15,799 [Process: 0] EPOCH 78:
2024-08-16 17:14:15,801 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8766, 0.8813, 0.8787,  ..., 0.8806, 0.8791, 0.8769],
         [0.1234, 0.1187, 0.1213,  ..., 0.1194, 0.1209, 0.1231]],
        [[0.8779, 0.8761, 0.8753,  ..., 0.8771, 0.8786, 0.8735],
         [0.1221, 0.1239, 0.1247,  ..., 0.1229, 0.1214, 0.1265]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8862, 0.8824, 0.8783,  ..., 0.8843, 0.8844, 0.8830],
         [0.1138, 0.1176, 0.1217,  ..., 0.1157, 0.1156, 0.1170]],
        [[0.8852, 0.8853, 0.8849,  ..., 0.8830, 0.8841, 0.8872],
         [0.1148, 0.1147, 0.1151,  ..., 0.1170, 0.1159, 0.1128]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:14:17,984 [Process: 0] Synchronize training processes
2024-08-16 17:14:17,985 [Process: 0] Evaluating...
2024-08-16 17:14:17,987 [Process: 0] EPOCH 79:
2024-08-16 17:14:17,989 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8820, 0.8825, 0.8805,  ..., 0.8801, 0.8787, 0.8815],
         [0.1180, 0.1175, 0.1195,  ..., 0.1199, 0.1213, 0.1185]],
        [[0.8785, 0.8819, 0.8768,  ..., 0.8773, 0.8808, 0.8779],
         [0.1215, 0.1181, 0.1232,  ..., 0.1227, 0.1192, 0.1221]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8826, 0.8863, 0.8873,  ..., 0.8832, 0.8859, 0.8831],
         [0.1174, 0.1137, 0.1127,  ..., 0.1168, 0.1141, 0.1169]],
        [[0.8879, 0.8817, 0.8882,  ..., 0.8849, 0.8834, 0.8844],
         [0.1121, 0.1183, 0.1118,  ..., 0.1151, 0.1166, 0.1156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:14:20,167 [Process: 0] Synchronize training processes
2024-08-16 17:14:20,167 [Process: 0] Evaluating...
2024-08-16 17:14:20,169 [Process: 0] EPOCH 80:
2024-08-16 17:14:20,171 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8811, 0.8809, 0.8791,  ..., 0.8840, 0.8828, 0.8806],
         [0.1189, 0.1191, 0.1209,  ..., 0.1160, 0.1172, 0.1194]],
        [[0.8787, 0.8782, 0.8807,  ..., 0.8858, 0.8784, 0.8807],
         [0.1213, 0.1218, 0.1193,  ..., 0.1142, 0.1216, 0.1193]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8848, 0.8854, 0.8825,  ..., 0.8834, 0.8839, 0.8826],
         [0.1152, 0.1146, 0.1175,  ..., 0.1166, 0.1161, 0.1174]],
        [[0.8869, 0.8841, 0.8823,  ..., 0.8844, 0.8868, 0.8840],
         [0.1131, 0.1159, 0.1177,  ..., 0.1156, 0.1132, 0.1160]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:14:22,337 [Process: 0] Synchronize training processes
2024-08-16 17:14:22,337 [Process: 0] Evaluating...
2024-08-16 17:14:22,339 [Process: 0] EPOCH 81:
2024-08-16 17:14:22,341 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8802, 0.8793, 0.8812,  ..., 0.8817, 0.8861, 0.8812],
         [0.1198, 0.1207, 0.1188,  ..., 0.1183, 0.1139, 0.1188]],
        [[0.8802, 0.8819, 0.8788,  ..., 0.8843, 0.8802, 0.8792],
         [0.1198, 0.1181, 0.1212,  ..., 0.1157, 0.1198, 0.1208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8883, 0.8860, 0.8877,  ..., 0.8859, 0.8842, 0.8836],
         [0.1117, 0.1140, 0.1123,  ..., 0.1141, 0.1158, 0.1164]],
        [[0.8864, 0.8866, 0.8882,  ..., 0.8849, 0.8916, 0.8888],
         [0.1136, 0.1134, 0.1118,  ..., 0.1151, 0.1084, 0.1112]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:14:24,522 [Process: 0] Synchronize training processes
2024-08-16 17:14:24,523 [Process: 0] Evaluating...
2024-08-16 17:14:24,530 [Process: 0] EPOCH 82:
2024-08-16 17:14:24,532 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8837, 0.8868, 0.8832,  ..., 0.8854, 0.8834, 0.8853],
         [0.1163, 0.1132, 0.1168,  ..., 0.1146, 0.1166, 0.1147]],
        [[0.8864, 0.8828, 0.8819,  ..., 0.8874, 0.8844, 0.8853],
         [0.1136, 0.1172, 0.1181,  ..., 0.1126, 0.1156, 0.1147]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8874, 0.8889, 0.8887,  ..., 0.8903, 0.8870, 0.8883],
         [0.1126, 0.1111, 0.1113,  ..., 0.1097, 0.1130, 0.1117]],
        [[0.8841, 0.8897, 0.8860,  ..., 0.8865, 0.8856, 0.8875],
         [0.1159, 0.1103, 0.1140,  ..., 0.1135, 0.1144, 0.1125]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:14:26,710 [Process: 0] Synchronize training processes
2024-08-16 17:14:26,710 [Process: 0] Evaluating...
2024-08-16 17:14:26,712 [Process: 0] EPOCH 83:
2024-08-16 17:14:26,714 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8860, 0.8862, 0.8893,  ..., 0.8871, 0.8849, 0.8888],
         [0.1140, 0.1138, 0.1107,  ..., 0.1129, 0.1151, 0.1112]],
        [[0.8847, 0.8913, 0.8835,  ..., 0.8855, 0.8879, 0.8915],
         [0.1153, 0.1087, 0.1165,  ..., 0.1145, 0.1121, 0.1085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:14:28,896 [Process: 0] Synchronize training processes
2024-08-16 17:14:28,896 [Process: 0] Evaluating...
2024-08-16 17:14:28,898 [Process: 0] EPOCH 84:
2024-08-16 17:14:28,900 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8895, 0.8901, 0.8893,  ..., 0.8859, 0.8915, 0.8887],
         [0.1105, 0.1099, 0.1107,  ..., 0.1141, 0.1085, 0.1113]],
        [[0.8850, 0.8901, 0.8862,  ..., 0.8918, 0.8873, 0.8897],
         [0.1150, 0.1099, 0.1138,  ..., 0.1082, 0.1127, 0.1103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8872, 0.8851, 0.8876,  ..., 0.8939, 0.8921, 0.8878],
         [0.1128, 0.1149, 0.1124,  ..., 0.1061, 0.1079, 0.1122]],
        [[0.8852, 0.8871, 0.8868,  ..., 0.8925, 0.8879, 0.8925],
         [0.1148, 0.1129, 0.1132,  ..., 0.1075, 0.1121, 0.1075]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:14:31,113 [Process: 0] Synchronize training processes
2024-08-16 17:14:31,113 [Process: 0] Evaluating...
2024-08-16 17:14:31,115 [Process: 0] EPOCH 85:
2024-08-16 17:14:31,117 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8898, 0.8923, 0.8907,  ..., 0.8923, 0.8885, 0.8909],
         [0.1102, 0.1077, 0.1093,  ..., 0.1077, 0.1115, 0.1091]],
        [[0.8905, 0.8928, 0.8878,  ..., 0.8913, 0.8886, 0.8879],
         [0.1095, 0.1072, 0.1122,  ..., 0.1087, 0.1114, 0.1121]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8891, 0.8912, 0.8905,  ..., 0.8937, 0.8954, 0.8898],
         [0.1109, 0.1088, 0.1095,  ..., 0.1063, 0.1046, 0.1102]],
        [[0.8882, 0.8904, 0.8873,  ..., 0.8937, 0.8899, 0.8908],
         [0.1118, 0.1096, 0.1127,  ..., 0.1063, 0.1101, 0.1092]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8915, 0.8949, 0.8944,  ..., 0.8928, 0.8915, 0.8927],
         [0.1085, 0.1051, 0.1056,  ..., 0.1072, 0.1085, 0.1073]],
        [[0.8908, 0.8914, 0.8899,  ..., 0.8924, 0.8924, 0.8940],
         [0.1092, 0.1086, 0.1101,  ..., 0.1076, 0.1076, 0.1060]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8896, 0.8913, 0.8899,  ..., 0.8927, 0.8921, 0.8912],
         [0.1104, 0.1087, 0.1101,  ..., 0.1073, 0.1079, 0.1088]],
        [[0.8871, 0.8888, 0.8920,  ..., 0.8916, 0.8888, 0.8917],
         [0.1129, 0.1112, 0.1080,  ..., 0.1084, 0.1112, 0.1083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:14:33,313 [Process: 0] Synchronize training processes
2024-08-16 17:14:33,313 [Process: 0] Evaluating...
2024-08-16 17:14:33,315 [Process: 0] EPOCH 86:
2024-08-16 17:14:33,317 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8928, 0.8954, 0.8918,  ..., 0.8929, 0.8913, 0.8933],
         [0.1072, 0.1046, 0.1082,  ..., 0.1071, 0.1087, 0.1067]],
        [[0.8919, 0.8927, 0.8957,  ..., 0.8913, 0.8915, 0.8881],
         [0.1081, 0.1073, 0.1043,  ..., 0.1087, 0.1085, 0.1119]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8888, 0.8964, 0.8936,  ..., 0.8924, 0.8900, 0.8908],
         [0.1112, 0.1036, 0.1064,  ..., 0.1076, 0.1100, 0.1092]],
        [[0.8939, 0.8941, 0.8928,  ..., 0.8966, 0.8908, 0.8962],
         [0.1061, 0.1059, 0.1072,  ..., 0.1034, 0.1092, 0.1038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:14:35,512 [Process: 0] Synchronize training processes
2024-08-16 17:14:35,513 [Process: 0] Evaluating...
2024-08-16 17:14:35,515 [Process: 0] EPOCH 87:
2024-08-16 17:14:35,517 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8924, 0.8958, 0.8957,  ..., 0.8933, 0.8965, 0.8945],
         [0.1076, 0.1042, 0.1043,  ..., 0.1067, 0.1035, 0.1055]],
        [[0.8891, 0.8941, 0.8926,  ..., 0.8923, 0.8918, 0.8895],
         [0.1109, 0.1059, 0.1074,  ..., 0.1077, 0.1082, 0.1105]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:14:37,671 [Process: 0] Synchronize training processes
2024-08-16 17:14:37,671 [Process: 0] Evaluating...
2024-08-16 17:14:37,673 [Process: 0] EPOCH 88:
2024-08-16 17:14:37,675 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8916, 0.8937, 0.8934,  ..., 0.8994, 0.8940, 0.8925],
         [0.1084, 0.1063, 0.1066,  ..., 0.1006, 0.1060, 0.1075]],
        [[0.8890, 0.8970, 0.8948,  ..., 0.8951, 0.8884, 0.8962],
         [0.1110, 0.1030, 0.1052,  ..., 0.1049, 0.1116, 0.1038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8958, 0.8953, 0.8966,  ..., 0.8974, 0.8970, 0.8975],
         [0.1042, 0.1047, 0.1034,  ..., 0.1026, 0.1030, 0.1025]],
        [[0.8932, 0.8956, 0.8910,  ..., 0.8946, 0.8948, 0.8914],
         [0.1068, 0.1044, 0.1090,  ..., 0.1054, 0.1052, 0.1086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:14:40,323 [Process: 0] Synchronize training processes
2024-08-16 17:14:40,323 [Process: 0] Evaluating...
2024-08-16 17:14:40,326 [Process: 0] EPOCH 89:
2024-08-16 17:14:40,329 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8943, 0.8950, 0.8957,  ..., 0.8933, 0.8900, 0.8935],
         [0.1057, 0.1050, 0.1043,  ..., 0.1067, 0.1100, 0.1065]],
        [[0.8953, 0.8962, 0.8944,  ..., 0.8949, 0.8941, 0.8923],
         [0.1047, 0.1038, 0.1056,  ..., 0.1051, 0.1059, 0.1077]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8945, 0.8978, 0.8967,  ..., 0.8942, 0.8945, 0.8977],
         [0.1055, 0.1022, 0.1033,  ..., 0.1058, 0.1055, 0.1023]],
        [[0.8970, 0.8941, 0.8962,  ..., 0.8956, 0.8951, 0.8965],
         [0.1030, 0.1059, 0.1038,  ..., 0.1044, 0.1049, 0.1035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:14:42,513 [Process: 0] Synchronize training processes
2024-08-16 17:14:42,514 [Process: 0] Evaluating...
2024-08-16 17:14:42,515 [Process: 0] EPOCH 90:
2024-08-16 17:14:42,517 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8951, 0.8996, 0.8961,  ..., 0.8968, 0.8947, 0.8981],
         [0.1049, 0.1004, 0.1039,  ..., 0.1032, 0.1053, 0.1019]],
        [[0.8929, 0.8966, 0.8960,  ..., 0.8956, 0.8941, 0.8959],
         [0.1071, 0.1034, 0.1040,  ..., 0.1044, 0.1059, 0.1041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8989, 0.8991, 0.9001,  ..., 0.8990, 0.8987, 0.8981],
         [0.1011, 0.1009, 0.0999,  ..., 0.1010, 0.1013, 0.1019]],
        [[0.8978, 0.8962, 0.8965,  ..., 0.8967, 0.8975, 0.8965],
         [0.1022, 0.1038, 0.1035,  ..., 0.1033, 0.1025, 0.1035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:14:44,718 [Process: 0] Synchronize training processes
2024-08-16 17:14:44,718 [Process: 0] Evaluating...
2024-08-16 17:14:44,720 [Process: 0] EPOCH 91:
2024-08-16 17:14:44,722 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8967, 0.8969, 0.8972,  ..., 0.9021, 0.8970, 0.9001],
         [0.1033, 0.1031, 0.1028,  ..., 0.0979, 0.1030, 0.0999]],
        [[0.8972, 0.8950, 0.8986,  ..., 0.8955, 0.8982, 0.8936],
         [0.1028, 0.1050, 0.1014,  ..., 0.1045, 0.1018, 0.1064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:14:46,922 [Process: 0] Synchronize training processes
2024-08-16 17:14:46,922 [Process: 0] Evaluating...
2024-08-16 17:14:46,930 [Process: 0] EPOCH 92:
2024-08-16 17:14:46,932 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9030, 0.9012, 0.9013,  ..., 0.9000, 0.8989, 0.9012],
         [0.0970, 0.0988, 0.0987,  ..., 0.1000, 0.1011, 0.0988]],
        [[0.9004, 0.9013, 0.8992,  ..., 0.8988, 0.8986, 0.8985],
         [0.0996, 0.0987, 0.1008,  ..., 0.1012, 0.1014, 0.1015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8998, 0.9012, 0.9015,  ..., 0.8978, 0.9012, 0.9005],
         [0.1002, 0.0988, 0.0985,  ..., 0.1022, 0.0988, 0.0995]],
        [[0.8995, 0.8991, 0.8977,  ..., 0.8976, 0.8990, 0.8980],
         [0.1005, 0.1009, 0.1023,  ..., 0.1024, 0.1010, 0.1020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:14:49,114 [Process: 0] Synchronize training processes
2024-08-16 17:14:49,114 [Process: 0] Evaluating...
2024-08-16 17:14:49,116 [Process: 0] EPOCH 93:
2024-08-16 17:14:49,118 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9007, 0.9048, 0.9010,  ..., 0.9033, 0.9008, 0.8994],
         [0.0993, 0.0952, 0.0990,  ..., 0.0967, 0.0992, 0.1006]],
        [[0.9016, 0.9001, 0.9004,  ..., 0.8987, 0.9020, 0.9006],
         [0.0984, 0.0999, 0.0996,  ..., 0.1013, 0.0980, 0.0994]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8981, 0.9041, 0.9033,  ..., 0.8989, 0.9008, 0.9007],
         [0.1019, 0.0959, 0.0967,  ..., 0.1011, 0.0992, 0.0993]],
        [[0.9003, 0.9002, 0.9001,  ..., 0.9016, 0.8992, 0.8995],
         [0.0997, 0.0998, 0.0999,  ..., 0.0984, 0.1008, 0.1005]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9035, 0.9025, 0.9036,  ..., 0.9023, 0.9049, 0.9039],
         [0.0965, 0.0975, 0.0964,  ..., 0.0977, 0.0951, 0.0961]],
        [[0.9006, 0.9015, 0.9039,  ..., 0.9017, 0.9028, 0.9029],
         [0.0994, 0.0985, 0.0961,  ..., 0.0983, 0.0972, 0.0971]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9011, 0.9023, 0.9025,  ..., 0.9011, 0.9010, 0.8989],
         [0.0989, 0.0977, 0.0975,  ..., 0.0989, 0.0990, 0.1011]],
        [[0.8994, 0.8970, 0.9012,  ..., 0.9040, 0.9018, 0.8993],
         [0.1006, 0.1030, 0.0988,  ..., 0.0960, 0.0982, 0.1007]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:14:51,311 [Process: 0] Synchronize training processes
2024-08-16 17:14:51,312 [Process: 0] Evaluating...
2024-08-16 17:14:51,314 [Process: 0] EPOCH 94:
2024-08-16 17:14:51,316 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9074, 0.9043, 0.9036,  ..., 0.9025, 0.9049, 0.9059],
         [0.0926, 0.0957, 0.0964,  ..., 0.0975, 0.0951, 0.0941]],
        [[0.9044, 0.9048, 0.9038,  ..., 0.9032, 0.9042, 0.9051],
         [0.0956, 0.0952, 0.0962,  ..., 0.0968, 0.0958, 0.0949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9037, 0.9036, 0.9029,  ..., 0.9008, 0.9009, 0.9015],
         [0.0963, 0.0964, 0.0971,  ..., 0.0992, 0.0991, 0.0985]],
        [[0.9015, 0.9020, 0.9019,  ..., 0.9025, 0.9028, 0.9010],
         [0.0985, 0.0980, 0.0981,  ..., 0.0975, 0.0972, 0.0990]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:14:53,489 [Process: 0] Synchronize training processes
2024-08-16 17:14:53,489 [Process: 0] Evaluating...
2024-08-16 17:14:53,491 [Process: 0] EPOCH 95:
2024-08-16 17:14:53,493 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9072, 0.9047, 0.9034,  ..., 0.9059, 0.9010, 0.9052],
         [0.0928, 0.0953, 0.0966,  ..., 0.0941, 0.0990, 0.0948]],
        [[0.9030, 0.9042, 0.9042,  ..., 0.9016, 0.9037, 0.8994],
         [0.0970, 0.0958, 0.0958,  ..., 0.0984, 0.0963, 0.1006]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9089, 0.9069, 0.9073,  ..., 0.9016, 0.9052, 0.9012],
         [0.0911, 0.0931, 0.0927,  ..., 0.0984, 0.0948, 0.0988]],
        [[0.9057, 0.9026, 0.9014,  ..., 0.9037, 0.9064, 0.9051],
         [0.0943, 0.0974, 0.0986,  ..., 0.0963, 0.0936, 0.0949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:14:55,674 [Process: 0] Synchronize training processes
2024-08-16 17:14:55,674 [Process: 0] Evaluating...
2024-08-16 17:14:55,676 [Process: 0] EPOCH 96:
2024-08-16 17:14:55,678 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9078, 0.9063, 0.9087,  ..., 0.9077, 0.9091, 0.9071],
         [0.0922, 0.0937, 0.0913,  ..., 0.0923, 0.0909, 0.0929]],
        [[0.9062, 0.9073, 0.9054,  ..., 0.9049, 0.9060, 0.9053],
         [0.0938, 0.0927, 0.0946,  ..., 0.0951, 0.0940, 0.0947]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:14:57,867 [Process: 0] Synchronize training processes
2024-08-16 17:14:57,868 [Process: 0] Evaluating...
2024-08-16 17:14:57,869 [Process: 0] EPOCH 97:
2024-08-16 17:14:57,871 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9071, 0.9071, 0.9074,  ..., 0.9073, 0.9063, 0.9076],
         [0.0929, 0.0929, 0.0926,  ..., 0.0927, 0.0937, 0.0924]],
        [[0.9071, 0.9054, 0.9059,  ..., 0.9061, 0.9055, 0.9057],
         [0.0929, 0.0946, 0.0941,  ..., 0.0939, 0.0945, 0.0943]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9098, 0.9095, 0.9108,  ..., 0.9084, 0.9105, 0.9078],
         [0.0902, 0.0905, 0.0892,  ..., 0.0916, 0.0895, 0.0922]],
        [[0.9072, 0.9087, 0.9072,  ..., 0.9056, 0.9099, 0.9091],
         [0.0928, 0.0913, 0.0928,  ..., 0.0944, 0.0901, 0.0909]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:00,038 [Process: 0] Synchronize training processes
2024-08-16 17:15:00,038 [Process: 0] Evaluating...
2024-08-16 17:15:00,040 [Process: 0] EPOCH 98:
2024-08-16 17:15:00,042 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9080, 0.9057, 0.9097,  ..., 0.9085, 0.9069, 0.9084],
         [0.0920, 0.0943, 0.0903,  ..., 0.0915, 0.0931, 0.0916]],
        [[0.9058, 0.9044, 0.9092,  ..., 0.9068, 0.9107, 0.9074],
         [0.0942, 0.0956, 0.0908,  ..., 0.0932, 0.0893, 0.0926]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9105, 0.9107, 0.9116,  ..., 0.9087, 0.9092, 0.9119],
         [0.0895, 0.0893, 0.0884,  ..., 0.0913, 0.0908, 0.0881]],
        [[0.9079, 0.9095, 0.9094,  ..., 0.9088, 0.9074, 0.9078],
         [0.0921, 0.0905, 0.0906,  ..., 0.0912, 0.0926, 0.0922]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:02,230 [Process: 0] Synchronize training processes
2024-08-16 17:15:02,230 [Process: 0] Evaluating...
2024-08-16 17:15:02,232 [Process: 0] EPOCH 99:
2024-08-16 17:15:02,234 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9114, 0.9104, 0.9101,  ..., 0.9105, 0.9096, 0.9097],
         [0.0886, 0.0896, 0.0899,  ..., 0.0895, 0.0904, 0.0903]],
        [[0.9099, 0.9117, 0.9114,  ..., 0.9121, 0.9117, 0.9132],
         [0.0901, 0.0883, 0.0886,  ..., 0.0879, 0.0883, 0.0868]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9094, 0.9117, 0.9115,  ..., 0.9151, 0.9095, 0.9080],
         [0.0906, 0.0883, 0.0885,  ..., 0.0849, 0.0905, 0.0920]],
        [[0.9090, 0.9109, 0.9121,  ..., 0.9073, 0.9091, 0.9099],
         [0.0910, 0.0891, 0.0879,  ..., 0.0927, 0.0909, 0.0901]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:04,423 [Process: 0] Synchronize training processes
2024-08-16 17:15:04,424 [Process: 0] Evaluating...
2024-08-16 17:15:04,425 [Process: 0] EPOCH 100:
2024-08-16 17:15:04,427 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9153, 0.9163, 0.9148,  ..., 0.9004, 0.9048, 0.8905],
         [0.0847, 0.0837, 0.0852,  ..., 0.0996, 0.0952, 0.1095]],
        [[0.9151, 0.9162, 0.9151,  ..., 0.9149, 0.9152, 0.9167],
         [0.0849, 0.0838, 0.0849,  ..., 0.0851, 0.0848, 0.0833]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9131, 0.9101, 0.9118,  ..., 0.9123, 0.9108, 0.9106],
         [0.0869, 0.0899, 0.0882,  ..., 0.0877, 0.0892, 0.0894]],
        [[0.9107, 0.9121, 0.9094,  ..., 0.9057, 0.9104, 0.9094],
         [0.0893, 0.0879, 0.0906,  ..., 0.0943, 0.0896, 0.0906]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:06,614 [Process: 0] Synchronize training processes
2024-08-16 17:15:06,614 [Process: 0] Evaluating...
2024-08-16 17:15:06,616 [Process: 0] EPOCH 101:
2024-08-16 17:15:06,618 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9202, 0.9191, 0.9211,  ..., 0.9204, 0.9201, 0.9220],
         [0.0798, 0.0809, 0.0789,  ..., 0.0796, 0.0799, 0.0780]],
        [[0.8902, 0.9070, 0.9158,  ..., 0.9137, 0.8902, 0.9011],
         [0.1098, 0.0930, 0.0842,  ..., 0.0863, 0.1098, 0.0989]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9120, 0.9088, 0.9095,  ..., 0.9105, 0.9113, 0.9095],
         [0.0880, 0.0912, 0.0905,  ..., 0.0895, 0.0887, 0.0905]],
        [[0.9116, 0.9105, 0.9090,  ..., 0.9094, 0.9105, 0.9098],
         [0.0884, 0.0895, 0.0910,  ..., 0.0906, 0.0895, 0.0902]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:08,810 [Process: 0] Synchronize training processes
2024-08-16 17:15:08,810 [Process: 0] Evaluating...
2024-08-16 17:15:08,819 [Process: 0] EPOCH 102:
2024-08-16 17:15:08,821 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9103, 0.9101, 0.9086,  ..., 0.9091, 0.9099, 0.9097],
         [0.0897, 0.0899, 0.0914,  ..., 0.0909, 0.0901, 0.0903]],
        [[0.9100, 0.9110, 0.9088,  ..., 0.9096, 0.9106, 0.9104],
         [0.0900, 0.0890, 0.0912,  ..., 0.0904, 0.0894, 0.0896]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:15:10,991 [Process: 0] Synchronize training processes
2024-08-16 17:15:10,992 [Process: 0] Evaluating...
2024-08-16 17:15:10,994 [Process: 0] EPOCH 103:
2024-08-16 17:15:10,996 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9102, 0.9102, 0.9122,  ..., 0.9114, 0.9126, 0.9123],
         [0.0898, 0.0898, 0.0878,  ..., 0.0886, 0.0874, 0.0877]],
        [[0.9118, 0.9125, 0.9137,  ..., 0.9132, 0.9115, 0.9112],
         [0.0882, 0.0875, 0.0863,  ..., 0.0868, 0.0885, 0.0888]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9046, 0.9048, 0.9117,  ..., 0.9003, 0.9082, 0.8997],
         [0.0954, 0.0952, 0.0883,  ..., 0.0997, 0.0918, 0.1003]],
        [[0.9172, 0.9196, 0.9179,  ..., 0.9186, 0.9172, 0.9176],
         [0.0828, 0.0804, 0.0821,  ..., 0.0814, 0.0828, 0.0824]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:15:13,180 [Process: 0] Synchronize training processes
2024-08-16 17:15:13,180 [Process: 0] Evaluating...
2024-08-16 17:15:13,182 [Process: 0] EPOCH 104:
2024-08-16 17:15:13,184 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9141, 0.9165, 0.9139,  ..., 0.9127, 0.9147, 0.9136],
         [0.0859, 0.0835, 0.0861,  ..., 0.0873, 0.0853, 0.0864]],
        [[0.9120, 0.9137, 0.9151,  ..., 0.9138, 0.9164, 0.9130],
         [0.0880, 0.0863, 0.0849,  ..., 0.0862, 0.0836, 0.0870]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9076, 0.9088, 0.9132,  ..., 0.9111, 0.9085, 0.9091],
         [0.0924, 0.0912, 0.0868,  ..., 0.0889, 0.0915, 0.0909]],
        [[0.9147, 0.9143, 0.9128,  ..., 0.9156, 0.9145, 0.9134],
         [0.0853, 0.0857, 0.0872,  ..., 0.0844, 0.0855, 0.0866]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9150, 0.9136, 0.9151,  ..., 0.9141, 0.9145, 0.9163],
         [0.0850, 0.0864, 0.0849,  ..., 0.0859, 0.0855, 0.0837]],
        [[0.9185, 0.9148, 0.9154,  ..., 0.9149, 0.9144, 0.9166],
         [0.0815, 0.0852, 0.0846,  ..., 0.0851, 0.0856, 0.0834]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9101, 0.9148, 0.9129,  ..., 0.9110, 0.9121, 0.9105],
         [0.0899, 0.0852, 0.0871,  ..., 0.0890, 0.0879, 0.0895]],
        [[0.9138, 0.9137, 0.9135,  ..., 0.9157, 0.9127, 0.9119],
         [0.0862, 0.0863, 0.0865,  ..., 0.0843, 0.0873, 0.0881]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:15:15,348 [Process: 0] Synchronize training processes
2024-08-16 17:15:15,348 [Process: 0] Evaluating...
2024-08-16 17:15:15,350 [Process: 0] EPOCH 105:
2024-08-16 17:15:15,352 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9171, 0.9155, 0.9143,  ..., 0.9179, 0.9171, 0.9134],
         [0.0829, 0.0845, 0.0857,  ..., 0.0821, 0.0829, 0.0866]],
        [[0.9164, 0.9168, 0.9173,  ..., 0.9155, 0.9181, 0.9178],
         [0.0836, 0.0832, 0.0827,  ..., 0.0845, 0.0819, 0.0822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9143, 0.9142, 0.9156,  ..., 0.9136, 0.9141, 0.9130],
         [0.0857, 0.0858, 0.0844,  ..., 0.0864, 0.0859, 0.0870]],
        [[0.9158, 0.9158, 0.9155,  ..., 0.9145, 0.9137, 0.9152],
         [0.0842, 0.0842, 0.0845,  ..., 0.0855, 0.0863, 0.0848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:15:17,523 [Process: 0] Synchronize training processes
2024-08-16 17:15:17,524 [Process: 0] Evaluating...
2024-08-16 17:15:17,526 [Process: 0] EPOCH 106:
2024-08-16 17:15:17,528 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9163, 0.9192, 0.9210,  ..., 0.9189, 0.9180, 0.9173],
         [0.0837, 0.0808, 0.0790,  ..., 0.0811, 0.0820, 0.0827]],
        [[0.9202, 0.9188, 0.9198,  ..., 0.9200, 0.9209, 0.9192],
         [0.0798, 0.0812, 0.0802,  ..., 0.0800, 0.0791, 0.0808]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9139, 0.9161, 0.9150,  ..., 0.9133, 0.9132, 0.9125],
         [0.0861, 0.0839, 0.0850,  ..., 0.0867, 0.0868, 0.0875]],
        [[0.9144, 0.9143, 0.9170,  ..., 0.9160, 0.9154, 0.9160],
         [0.0856, 0.0857, 0.0830,  ..., 0.0840, 0.0846, 0.0840]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:19,704 [Process: 0] Synchronize training processes
2024-08-16 17:15:19,705 [Process: 0] Evaluating...
2024-08-16 17:15:19,707 [Process: 0] EPOCH 107:
2024-08-16 17:15:19,709 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9199, 0.9175, 0.9192,  ..., 0.9204, 0.9183, 0.9176],
         [0.0801, 0.0825, 0.0808,  ..., 0.0796, 0.0817, 0.0824]],
        [[0.9220, 0.9197, 0.9203,  ..., 0.9190, 0.9207, 0.9172],
         [0.0780, 0.0803, 0.0797,  ..., 0.0810, 0.0793, 0.0828]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 17:15:21,888 [Process: 0] Synchronize training processes
2024-08-16 17:15:21,889 [Process: 0] Evaluating...
2024-08-16 17:15:21,891 [Process: 0] EPOCH 108:
2024-08-16 17:15:21,892 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9163, 0.9148, 0.9150,  ..., 0.9157, 0.9144, 0.9156],
         [0.0837, 0.0852, 0.0850,  ..., 0.0843, 0.0856, 0.0844]],
        [[0.9170, 0.9180, 0.9161,  ..., 0.9165, 0.9163, 0.9176],
         [0.0830, 0.0820, 0.0839,  ..., 0.0835, 0.0837, 0.0824]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9229, 0.9207, 0.9188,  ..., 0.9191, 0.9200, 0.9182],
         [0.0771, 0.0793, 0.0812,  ..., 0.0809, 0.0800, 0.0818]],
        [[0.9205, 0.9213, 0.9197,  ..., 0.9216, 0.9212, 0.9202],
         [0.0795, 0.0787, 0.0803,  ..., 0.0784, 0.0788, 0.0798]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:24,071 [Process: 0] Synchronize training processes
2024-08-16 17:15:24,071 [Process: 0] Evaluating...
2024-08-16 17:15:24,073 [Process: 0] EPOCH 109:
2024-08-16 17:15:24,075 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9159, 0.9153, 0.9165,  ..., 0.9159, 0.9168, 0.9163],
         [0.0841, 0.0847, 0.0835,  ..., 0.0841, 0.0832, 0.0837]],
        [[0.9180, 0.9162, 0.9172,  ..., 0.9171, 0.9162, 0.9163],
         [0.0820, 0.0838, 0.0828,  ..., 0.0829, 0.0838, 0.0837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9202, 0.9189, 0.9179,  ..., 0.9176, 0.9194, 0.9176],
         [0.0798, 0.0811, 0.0821,  ..., 0.0824, 0.0806, 0.0824]],
        [[0.9177, 0.9186, 0.9190,  ..., 0.9199, 0.9196, 0.9177],
         [0.0823, 0.0814, 0.0810,  ..., 0.0801, 0.0804, 0.0823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:26,252 [Process: 0] Synchronize training processes
2024-08-16 17:15:26,252 [Process: 0] Evaluating...
2024-08-16 17:15:26,254 [Process: 0] EPOCH 110:
2024-08-16 17:15:26,256 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9156, 0.9168, 0.9155,  ..., 0.9160, 0.9163, 0.9167],
         [0.0844, 0.0832, 0.0845,  ..., 0.0840, 0.0837, 0.0833]],
        [[0.9159, 0.9174, 0.9173,  ..., 0.9162, 0.9172, 0.9166],
         [0.0841, 0.0826, 0.0827,  ..., 0.0838, 0.0828, 0.0834]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9195, 0.9178, 0.9181,  ..., 0.9164, 0.9154, 0.9178],
         [0.0805, 0.0822, 0.0819,  ..., 0.0836, 0.0846, 0.0822]],
        [[0.9179, 0.9199, 0.9179,  ..., 0.9177, 0.9172, 0.9191],
         [0.0821, 0.0801, 0.0821,  ..., 0.0823, 0.0828, 0.0809]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:28,437 [Process: 0] Synchronize training processes
2024-08-16 17:15:28,438 [Process: 0] Evaluating...
2024-08-16 17:15:28,440 [Process: 0] EPOCH 111:
2024-08-16 17:15:28,442 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9179, 0.9178, 0.9165,  ..., 0.9180, 0.9170, 0.9167],
         [0.0821, 0.0822, 0.0835,  ..., 0.0820, 0.0830, 0.0833]],
        [[0.9160, 0.9165, 0.9166,  ..., 0.9166, 0.9146, 0.9163],
         [0.0840, 0.0835, 0.0834,  ..., 0.0834, 0.0854, 0.0837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9196, 0.9180, 0.9193,  ..., 0.9188, 0.9208, 0.9174],
         [0.0804, 0.0820, 0.0807,  ..., 0.0812, 0.0792, 0.0826]],
        [[0.9185, 0.9198, 0.9186,  ..., 0.9201, 0.9203, 0.9182],
         [0.0815, 0.0802, 0.0814,  ..., 0.0799, 0.0797, 0.0818]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:30,627 [Process: 0] Synchronize training processes
2024-08-16 17:15:30,627 [Process: 0] Evaluating...
2024-08-16 17:15:30,635 [Process: 0] EPOCH 112:
2024-08-16 17:15:30,637 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9173, 0.9169, 0.9177,  ..., 0.9184, 0.9176, 0.9179],
         [0.0827, 0.0831, 0.0823,  ..., 0.0816, 0.0824, 0.0821]],
        [[0.9167, 0.9183, 0.9152,  ..., 0.9180, 0.9181, 0.9156],
         [0.0833, 0.0817, 0.0848,  ..., 0.0820, 0.0819, 0.0844]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9212, 0.9201, 0.9191,  ..., 0.9182, 0.9207, 0.9206],
         [0.0788, 0.0799, 0.0809,  ..., 0.0818, 0.0793, 0.0794]],
        [[0.9208, 0.9184, 0.9203,  ..., 0.9208, 0.9203, 0.9196],
         [0.0792, 0.0816, 0.0797,  ..., 0.0792, 0.0797, 0.0804]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:32,809 [Process: 0] Synchronize training processes
2024-08-16 17:15:32,810 [Process: 0] Evaluating...
2024-08-16 17:15:32,812 [Process: 0] EPOCH 113:
2024-08-16 17:15:32,814 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9201, 0.9203, 0.9192,  ..., 0.9198, 0.9204, 0.9215],
         [0.0799, 0.0797, 0.0808,  ..., 0.0802, 0.0796, 0.0785]],
        [[0.9195, 0.9183, 0.9171,  ..., 0.9194, 0.9199, 0.9199],
         [0.0805, 0.0817, 0.0829,  ..., 0.0806, 0.0801, 0.0801]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:15:34,998 [Process: 0] Synchronize training processes
2024-08-16 17:15:34,999 [Process: 0] Evaluating...
2024-08-16 17:15:35,000 [Process: 0] EPOCH 114:
2024-08-16 17:15:35,002 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9201, 0.9183, 0.9202,  ..., 0.9197, 0.9207, 0.9181],
         [0.0799, 0.0817, 0.0798,  ..., 0.0803, 0.0793, 0.0819]],
        [[0.9172, 0.9170, 0.9201,  ..., 0.9175, 0.9188, 0.9190],
         [0.0828, 0.0830, 0.0799,  ..., 0.0825, 0.0812, 0.0810]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9212, 0.9233, 0.9214,  ..., 0.9206, 0.9222, 0.9214],
         [0.0788, 0.0767, 0.0786,  ..., 0.0794, 0.0778, 0.0786]],
        [[0.9186, 0.9208, 0.9202,  ..., 0.9203, 0.9196, 0.9204],
         [0.0814, 0.0792, 0.0798,  ..., 0.0797, 0.0804, 0.0796]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:15:37,179 [Process: 0] Synchronize training processes
2024-08-16 17:15:37,180 [Process: 0] Evaluating...
2024-08-16 17:15:37,181 [Process: 0] EPOCH 115:
2024-08-16 17:15:37,183 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9187, 0.9191, 0.9186,  ..., 0.9200, 0.9202, 0.9198],
         [0.0813, 0.0809, 0.0814,  ..., 0.0800, 0.0798, 0.0802]],
        [[0.9210, 0.9190, 0.9188,  ..., 0.9187, 0.9198, 0.9196],
         [0.0790, 0.0810, 0.0812,  ..., 0.0813, 0.0802, 0.0804]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9216, 0.9237, 0.9225,  ..., 0.9223, 0.9218, 0.9233],
         [0.0784, 0.0763, 0.0775,  ..., 0.0777, 0.0782, 0.0767]],
        [[0.9221, 0.9217, 0.9218,  ..., 0.9240, 0.9239, 0.9218],
         [0.0779, 0.0783, 0.0782,  ..., 0.0760, 0.0761, 0.0782]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9213, 0.9238, 0.9231,  ..., 0.9221, 0.9224, 0.9228],
         [0.0787, 0.0762, 0.0769,  ..., 0.0779, 0.0776, 0.0772]],
        [[0.9224, 0.9218, 0.9221,  ..., 0.9223, 0.9209, 0.9241],
         [0.0776, 0.0782, 0.0779,  ..., 0.0777, 0.0791, 0.0759]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9252, 0.9231, 0.9238,  ..., 0.9252, 0.9252, 0.9250],
         [0.0748, 0.0769, 0.0762,  ..., 0.0748, 0.0748, 0.0750]],
        [[0.9238, 0.9231, 0.9228,  ..., 0.9239, 0.9241, 0.9249],
         [0.0762, 0.0769, 0.0772,  ..., 0.0761, 0.0759, 0.0751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:15:39,374 [Process: 0] Synchronize training processes
2024-08-16 17:15:39,375 [Process: 0] Evaluating...
2024-08-16 17:15:39,376 [Process: 0] EPOCH 116:
2024-08-16 17:15:39,378 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9259, 0.9260, 0.9265,  ..., 0.9243, 0.9248, 0.9259],
         [0.0741, 0.0740, 0.0735,  ..., 0.0757, 0.0752, 0.0741]],
        [[0.9248, 0.9250, 0.9238,  ..., 0.9254, 0.9260, 0.9252],
         [0.0752, 0.0750, 0.0762,  ..., 0.0746, 0.0740, 0.0748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9274, 0.9271, 0.9267,  ..., 0.9250, 0.9248, 0.9239],
         [0.0726, 0.0729, 0.0733,  ..., 0.0750, 0.0752, 0.0761]],
        [[0.9249, 0.9241, 0.9246,  ..., 0.9254, 0.9245, 0.9264],
         [0.0751, 0.0759, 0.0754,  ..., 0.0746, 0.0755, 0.0736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:15:41,570 [Process: 0] Synchronize training processes
2024-08-16 17:15:41,571 [Process: 0] Evaluating...
2024-08-16 17:15:41,573 [Process: 0] EPOCH 117:
2024-08-16 17:15:41,574 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9267, 0.9257, 0.9279,  ..., 0.9256, 0.9267, 0.9266],
         [0.0733, 0.0743, 0.0721,  ..., 0.0744, 0.0733, 0.0734]],
        [[0.9265, 0.9258, 0.9264,  ..., 0.9257, 0.9272, 0.9269],
         [0.0735, 0.0742, 0.0736,  ..., 0.0743, 0.0728, 0.0731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9266, 0.9266, 0.9246,  ..., 0.9258, 0.9267, 0.9278],
         [0.0734, 0.0734, 0.0754,  ..., 0.0742, 0.0733, 0.0722]],
        [[0.9265, 0.9252, 0.9254,  ..., 0.9245, 0.9254, 0.9285],
         [0.0735, 0.0748, 0.0746,  ..., 0.0755, 0.0746, 0.0715]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:43,743 [Process: 0] Synchronize training processes
2024-08-16 17:15:43,743 [Process: 0] Evaluating...
2024-08-16 17:15:43,745 [Process: 0] EPOCH 118:
2024-08-16 17:15:43,747 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9269, 0.9267, 0.9255,  ..., 0.9257, 0.9268, 0.9261],
         [0.0731, 0.0733, 0.0745,  ..., 0.0743, 0.0732, 0.0739]],
        [[0.9274, 0.9249, 0.9250,  ..., 0.9256, 0.9267, 0.9259],
         [0.0726, 0.0751, 0.0750,  ..., 0.0744, 0.0733, 0.0741]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 17:15:45,940 [Process: 0] Synchronize training processes
2024-08-16 17:15:45,940 [Process: 0] Evaluating...
2024-08-16 17:15:45,942 [Process: 0] EPOCH 119:
2024-08-16 17:15:45,944 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9284, 0.9284, 0.9282,  ..., 0.9279, 0.9266, 0.9271],
         [0.0716, 0.0716, 0.0718,  ..., 0.0721, 0.0734, 0.0729]],
        [[0.9274, 0.9293, 0.9255,  ..., 0.9271, 0.9254, 0.9261],
         [0.0726, 0.0707, 0.0745,  ..., 0.0729, 0.0746, 0.0739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9324, 0.9330, 0.9330,  ..., 0.9323, 0.9337, 0.9325],
         [0.0676, 0.0670, 0.0670,  ..., 0.0677, 0.0663, 0.0675]],
        [[0.9327, 0.9316, 0.9315,  ..., 0.9326, 0.9313, 0.9337],
         [0.0673, 0.0684, 0.0685,  ..., 0.0674, 0.0687, 0.0663]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:48,115 [Process: 0] Synchronize training processes
2024-08-16 17:15:48,116 [Process: 0] Evaluating...
2024-08-16 17:15:48,117 [Process: 0] EPOCH 120:
2024-08-16 17:15:48,119 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9269, 0.9284, 0.9286,  ..., 0.9287, 0.9279, 0.9278],
         [0.0731, 0.0716, 0.0714,  ..., 0.0713, 0.0721, 0.0722]],
        [[0.9277, 0.9268, 0.9279,  ..., 0.9289, 0.9275, 0.9254],
         [0.0723, 0.0732, 0.0721,  ..., 0.0711, 0.0725, 0.0746]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9273, 0.9261, 0.9267,  ..., 0.9262, 0.9264, 0.9284],
         [0.0727, 0.0739, 0.0733,  ..., 0.0738, 0.0736, 0.0716]],
        [[0.9249, 0.9272, 0.9254,  ..., 0.9255, 0.9268, 0.9258],
         [0.0751, 0.0728, 0.0746,  ..., 0.0745, 0.0732, 0.0742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:50,296 [Process: 0] Synchronize training processes
2024-08-16 17:15:50,296 [Process: 0] Evaluating...
2024-08-16 17:15:50,298 [Process: 0] EPOCH 121:
2024-08-16 17:15:50,300 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9261, 0.9278, 0.9265,  ..., 0.9259, 0.9264, 0.9260],
         [0.0739, 0.0722, 0.0735,  ..., 0.0741, 0.0736, 0.0740]],
        [[0.9266, 0.9248, 0.9258,  ..., 0.9267, 0.9253, 0.9271],
         [0.0734, 0.0752, 0.0742,  ..., 0.0733, 0.0747, 0.0729]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9269, 0.9259, 0.9271,  ..., 0.9269, 0.9264, 0.9254],
         [0.0731, 0.0741, 0.0729,  ..., 0.0731, 0.0736, 0.0746]],
        [[0.9266, 0.9266, 0.9268,  ..., 0.9264, 0.9266, 0.9259],
         [0.0734, 0.0734, 0.0732,  ..., 0.0736, 0.0734, 0.0741]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:52,480 [Process: 0] Synchronize training processes
2024-08-16 17:15:52,481 [Process: 0] Evaluating...
2024-08-16 17:15:52,488 [Process: 0] EPOCH 122:
2024-08-16 17:15:52,492 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9247, 0.9248, 0.9247,  ..., 0.9225, 0.9244, 0.9238],
         [0.0753, 0.0752, 0.0753,  ..., 0.0775, 0.0756, 0.0762]],
        [[0.9239, 0.9249, 0.9239,  ..., 0.9247, 0.9247, 0.9247],
         [0.0761, 0.0751, 0.0761,  ..., 0.0753, 0.0753, 0.0753]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9256, 0.9247, 0.9244,  ..., 0.9240, 0.9241, 0.9248],
         [0.0744, 0.0753, 0.0756,  ..., 0.0760, 0.0759, 0.0752]],
        [[0.9239, 0.9245, 0.9246,  ..., 0.9246, 0.9242, 0.9248],
         [0.0761, 0.0755, 0.0754,  ..., 0.0754, 0.0758, 0.0752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:54,681 [Process: 0] Synchronize training processes
2024-08-16 17:15:54,681 [Process: 0] Evaluating...
2024-08-16 17:15:54,683 [Process: 0] EPOCH 123:
2024-08-16 17:15:54,685 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9160, 0.9209, 0.9227,  ..., 0.9194, 0.9222, 0.9195],
         [0.0840, 0.0791, 0.0773,  ..., 0.0806, 0.0778, 0.0805]],
        [[0.9252, 0.9256, 0.9255,  ..., 0.9247, 0.9256, 0.9246],
         [0.0748, 0.0744, 0.0745,  ..., 0.0753, 0.0744, 0.0754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9221, 0.9225, 0.9227,  ..., 0.9221, 0.9219, 0.9230],
         [0.0779, 0.0775, 0.0773,  ..., 0.0779, 0.0781, 0.0770]],
        [[0.9228, 0.9225, 0.9219,  ..., 0.9229, 0.9226, 0.9226],
         [0.0772, 0.0775, 0.0781,  ..., 0.0771, 0.0774, 0.0774]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:15:56,867 [Process: 0] Synchronize training processes
2024-08-16 17:15:56,867 [Process: 0] Evaluating...
2024-08-16 17:15:56,869 [Process: 0] EPOCH 124:
2024-08-16 17:15:56,871 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9155, 0.9196, 0.9157,  ..., 0.9232, 0.9206, 0.9154],
         [0.0845, 0.0804, 0.0843,  ..., 0.0768, 0.0794, 0.0846]],
        [[0.9251, 0.9255, 0.9251,  ..., 0.9252, 0.9242, 0.9259],
         [0.0749, 0.0745, 0.0749,  ..., 0.0748, 0.0758, 0.0741]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:15:59,041 [Process: 0] Synchronize training processes
2024-08-16 17:15:59,041 [Process: 0] Evaluating...
2024-08-16 17:15:59,043 [Process: 0] EPOCH 125:
2024-08-16 17:15:59,045 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9234, 0.9233, 0.9228,  ..., 0.9233, 0.9237, 0.9230],
         [0.0766, 0.0767, 0.0772,  ..., 0.0767, 0.0763, 0.0770]],
        [[0.9238, 0.9231, 0.9227,  ..., 0.9228, 0.9230, 0.9228],
         [0.0762, 0.0769, 0.0773,  ..., 0.0772, 0.0770, 0.0772]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9220, 0.9239, 0.9229,  ..., 0.9225, 0.9249, 0.9237],
         [0.0780, 0.0761, 0.0771,  ..., 0.0775, 0.0751, 0.0763]],
        [[0.9256, 0.9247, 0.9260,  ..., 0.9260, 0.9255, 0.9251],
         [0.0744, 0.0753, 0.0740,  ..., 0.0740, 0.0745, 0.0749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:16:01,234 [Process: 0] Synchronize training processes
2024-08-16 17:16:01,234 [Process: 0] Evaluating...
2024-08-16 17:16:01,236 [Process: 0] EPOCH 126:
2024-08-16 17:16:01,238 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9230, 0.9231, 0.9231,  ..., 0.9234, 0.9230, 0.9238],
         [0.0770, 0.0769, 0.0769,  ..., 0.0766, 0.0770, 0.0762]],
        [[0.9227, 0.9235, 0.9228,  ..., 0.9232, 0.9226, 0.9223],
         [0.0773, 0.0765, 0.0772,  ..., 0.0768, 0.0774, 0.0777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9288, 0.9279, 0.9288,  ..., 0.9278, 0.9266, 0.9276],
         [0.0712, 0.0721, 0.0712,  ..., 0.0722, 0.0734, 0.0724]],
        [[0.9291, 0.9277, 0.9286,  ..., 0.9277, 0.9284, 0.9263],
         [0.0709, 0.0723, 0.0714,  ..., 0.0723, 0.0716, 0.0737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9230, 0.9225, 0.9235,  ..., 0.9226, 0.9233, 0.9231],
         [0.0770, 0.0775, 0.0765,  ..., 0.0774, 0.0767, 0.0769]],
        [[0.9232, 0.9224, 0.9238,  ..., 0.9229, 0.9235, 0.9232],
         [0.0768, 0.0776, 0.0762,  ..., 0.0771, 0.0765, 0.0768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9291, 0.9300, 0.9296,  ..., 0.9299, 0.9308, 0.9299],
         [0.0709, 0.0700, 0.0704,  ..., 0.0701, 0.0692, 0.0701]],
        [[0.9297, 0.9290, 0.9285,  ..., 0.9303, 0.9292, 0.9287],
         [0.0703, 0.0710, 0.0715,  ..., 0.0697, 0.0708, 0.0713]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:16:03,416 [Process: 0] Synchronize training processes
2024-08-16 17:16:03,417 [Process: 0] Evaluating...
2024-08-16 17:16:03,418 [Process: 0] EPOCH 127:
2024-08-16 17:16:03,420 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9234, 0.9230, 0.9224,  ..., 0.9230, 0.9232, 0.9236],
         [0.0766, 0.0770, 0.0776,  ..., 0.0770, 0.0768, 0.0764]],
        [[0.9231, 0.9225, 0.9234,  ..., 0.9233, 0.9234, 0.9234],
         [0.0769, 0.0775, 0.0766,  ..., 0.0767, 0.0766, 0.0766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9298, 0.9294, 0.9295,  ..., 0.9296, 0.9288, 0.9293],
         [0.0702, 0.0706, 0.0705,  ..., 0.0704, 0.0712, 0.0707]],
        [[0.9286, 0.9288, 0.9285,  ..., 0.9284, 0.9282, 0.9290],
         [0.0714, 0.0712, 0.0715,  ..., 0.0716, 0.0718, 0.0710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:16:05,599 [Process: 0] Synchronize training processes
2024-08-16 17:16:05,599 [Process: 0] Evaluating...
2024-08-16 17:16:05,601 [Process: 0] EPOCH 128:
2024-08-16 17:16:05,603 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9261, 0.9258, 0.9257,  ..., 0.9266, 0.9260, 0.9261],
         [0.0739, 0.0742, 0.0743,  ..., 0.0734, 0.0740, 0.0739]],
        [[0.9259, 0.9253, 0.9261,  ..., 0.9256, 0.9255, 0.9259],
         [0.0741, 0.0747, 0.0739,  ..., 0.0744, 0.0745, 0.0741]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9301, 0.9306, 0.9308,  ..., 0.9303, 0.9311, 0.9314],
         [0.0699, 0.0694, 0.0692,  ..., 0.0697, 0.0689, 0.0686]],
        [[0.9309, 0.9299, 0.9303,  ..., 0.9317, 0.9302, 0.9306],
         [0.0691, 0.0701, 0.0697,  ..., 0.0683, 0.0698, 0.0694]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:16:07,775 [Process: 0] Synchronize training processes
2024-08-16 17:16:07,775 [Process: 0] Evaluating...
2024-08-16 17:16:07,777 [Process: 0] EPOCH 129:
2024-08-16 17:16:07,779 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9244, 0.9243, 0.9247,  ..., 0.9239, 0.9245, 0.9241],
         [0.0756, 0.0757, 0.0753,  ..., 0.0761, 0.0755, 0.0759]],
        [[0.9246, 0.9242, 0.9243,  ..., 0.9240, 0.9245, 0.9251],
         [0.0754, 0.0758, 0.0757,  ..., 0.0760, 0.0755, 0.0749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:16:09,977 [Process: 0] Synchronize training processes
2024-08-16 17:16:09,978 [Process: 0] Evaluating...
2024-08-16 17:16:09,980 [Process: 0] EPOCH 130:
2024-08-16 17:16:09,982 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9310, 0.9311, 0.9325,  ..., 0.9317, 0.9322, 0.9320],
         [0.0690, 0.0689, 0.0675,  ..., 0.0683, 0.0678, 0.0680]],
        [[0.9313, 0.9322, 0.9325,  ..., 0.9322, 0.9316, 0.9320],
         [0.0687, 0.0678, 0.0675,  ..., 0.0678, 0.0684, 0.0680]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9261, 0.9266, 0.9261,  ..., 0.9265, 0.9272, 0.9265],
         [0.0739, 0.0734, 0.0739,  ..., 0.0735, 0.0728, 0.0735]],
        [[0.9261, 0.9265, 0.9261,  ..., 0.9256, 0.9259, 0.9263],
         [0.0739, 0.0735, 0.0739,  ..., 0.0744, 0.0741, 0.0737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:12,118 [Process: 0] Synchronize training processes
2024-08-16 17:16:12,118 [Process: 0] Evaluating...
2024-08-16 17:16:12,120 [Process: 0] EPOCH 131:
2024-08-16 17:16:12,122 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9322, 0.9334, 0.9318,  ..., 0.9325, 0.9330, 0.9328],
         [0.0678, 0.0666, 0.0682,  ..., 0.0675, 0.0670, 0.0672]],
        [[0.9333, 0.9324, 0.9328,  ..., 0.9329, 0.9320, 0.9338],
         [0.0667, 0.0676, 0.0672,  ..., 0.0671, 0.0680, 0.0662]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9246, 0.9243, 0.9238,  ..., 0.9256, 0.9249, 0.9244],
         [0.0754, 0.0757, 0.0762,  ..., 0.0744, 0.0751, 0.0756]],
        [[0.9234, 0.9243, 0.9253,  ..., 0.9252, 0.9256, 0.9255],
         [0.0766, 0.0757, 0.0747,  ..., 0.0748, 0.0744, 0.0745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:14,327 [Process: 0] Synchronize training processes
2024-08-16 17:16:14,328 [Process: 0] Evaluating...
2024-08-16 17:16:14,336 [Process: 0] EPOCH 132:
2024-08-16 17:16:14,338 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9327, 0.9324, 0.9322,  ..., 0.9333, 0.9327, 0.9321],
         [0.0673, 0.0676, 0.0678,  ..., 0.0667, 0.0673, 0.0679]],
        [[0.9327, 0.9327, 0.9344,  ..., 0.9336, 0.9325, 0.9340],
         [0.0673, 0.0673, 0.0656,  ..., 0.0664, 0.0675, 0.0660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9264, 0.9256, 0.9251,  ..., 0.9254, 0.9254, 0.9267],
         [0.0736, 0.0744, 0.0749,  ..., 0.0746, 0.0746, 0.0733]],
        [[0.9262, 0.9254, 0.9250,  ..., 0.9265, 0.9250, 0.9244],
         [0.0738, 0.0746, 0.0750,  ..., 0.0735, 0.0750, 0.0756]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:16,480 [Process: 0] Synchronize training processes
2024-08-16 17:16:16,480 [Process: 0] Evaluating...
2024-08-16 17:16:16,482 [Process: 0] EPOCH 133:
2024-08-16 17:16:16,484 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9296, 0.9271, 0.9281,  ..., 0.9288, 0.9292, 0.9266],
         [0.0704, 0.0729, 0.0719,  ..., 0.0712, 0.0708, 0.0734]],
        [[0.9327, 0.9328, 0.9320,  ..., 0.9323, 0.9316, 0.9314],
         [0.0673, 0.0672, 0.0680,  ..., 0.0677, 0.0684, 0.0686]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9277, 0.9257, 0.9278,  ..., 0.9265, 0.9260, 0.9278],
         [0.0723, 0.0743, 0.0722,  ..., 0.0735, 0.0740, 0.0722]],
        [[0.9266, 0.9277, 0.9264,  ..., 0.9255, 0.9253, 0.9273],
         [0.0734, 0.0723, 0.0736,  ..., 0.0745, 0.0747, 0.0727]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:18,649 [Process: 0] Synchronize training processes
2024-08-16 17:16:18,650 [Process: 0] Evaluating...
2024-08-16 17:16:18,652 [Process: 0] EPOCH 134:
2024-08-16 17:16:18,654 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9301, 0.9295, 0.9304,  ..., 0.9277, 0.9282, 0.9278],
         [0.0699, 0.0705, 0.0696,  ..., 0.0723, 0.0718, 0.0722]],
        [[0.9321, 0.9321, 0.9313,  ..., 0.9329, 0.9316, 0.9316],
         [0.0679, 0.0679, 0.0687,  ..., 0.0671, 0.0684, 0.0684]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9287, 0.9287, 0.9282,  ..., 0.9289, 0.9283, 0.9283],
         [0.0713, 0.0713, 0.0718,  ..., 0.0711, 0.0717, 0.0717]],
        [[0.9271, 0.9291, 0.9291,  ..., 0.9285, 0.9280, 0.9283],
         [0.0729, 0.0709, 0.0709,  ..., 0.0715, 0.0720, 0.0717]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:20,837 [Process: 0] Synchronize training processes
2024-08-16 17:16:20,838 [Process: 0] Evaluating...
2024-08-16 17:16:20,839 [Process: 0] EPOCH 135:
2024-08-16 17:16:20,841 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9288, 0.9301, 0.9317,  ..., 0.9329, 0.9291, 0.9321],
         [0.0712, 0.0699, 0.0683,  ..., 0.0671, 0.0709, 0.0679]],
        [[0.9326, 0.9322, 0.9330,  ..., 0.9312, 0.9327, 0.9325],
         [0.0674, 0.0678, 0.0670,  ..., 0.0688, 0.0673, 0.0675]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9293, 0.9298, 0.9286,  ..., 0.9301, 0.9292, 0.9300],
         [0.0707, 0.0702, 0.0714,  ..., 0.0699, 0.0708, 0.0700]],
        [[0.9283, 0.9288, 0.9294,  ..., 0.9293, 0.9292, 0.9289],
         [0.0717, 0.0712, 0.0706,  ..., 0.0707, 0.0708, 0.0711]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:23,033 [Process: 0] Synchronize training processes
2024-08-16 17:16:23,033 [Process: 0] Evaluating...
2024-08-16 17:16:23,035 [Process: 0] EPOCH 136:
2024-08-16 17:16:23,037 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9304, 0.9311, 0.9316,  ..., 0.9292, 0.9322, 0.9307],
         [0.0696, 0.0689, 0.0684,  ..., 0.0708, 0.0678, 0.0693]],
        [[0.9332, 0.9322, 0.9325,  ..., 0.9320, 0.9325, 0.9322],
         [0.0668, 0.0678, 0.0675,  ..., 0.0680, 0.0675, 0.0678]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:16:25,251 [Process: 0] Synchronize training processes
2024-08-16 17:16:25,252 [Process: 0] Evaluating...
2024-08-16 17:16:25,254 [Process: 0] EPOCH 137:
2024-08-16 17:16:25,256 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9309, 0.9297, 0.9302,  ..., 0.9298, 0.9299, 0.9310],
         [0.0691, 0.0703, 0.0698,  ..., 0.0702, 0.0701, 0.0690]],
        [[0.9306, 0.9311, 0.9303,  ..., 0.9306, 0.9306, 0.9299],
         [0.0694, 0.0689, 0.0697,  ..., 0.0694, 0.0694, 0.0701]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9335, 0.9335, 0.9343,  ..., 0.9312, 0.9335, 0.9333],
         [0.0665, 0.0665, 0.0657,  ..., 0.0688, 0.0665, 0.0667]],
        [[0.9331, 0.9332, 0.9325,  ..., 0.9336, 0.9330, 0.9324],
         [0.0669, 0.0668, 0.0675,  ..., 0.0664, 0.0670, 0.0676]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9318, 0.9321, 0.9307,  ..., 0.9315, 0.9327, 0.9318],
         [0.0682, 0.0679, 0.0693,  ..., 0.0685, 0.0673, 0.0682]],
        [[0.9318, 0.9305, 0.9310,  ..., 0.9307, 0.9314, 0.9304],
         [0.0682, 0.0695, 0.0690,  ..., 0.0693, 0.0686, 0.0696]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9305, 0.9317, 0.9322,  ..., 0.9324, 0.9329, 0.9312],
         [0.0695, 0.0683, 0.0678,  ..., 0.0676, 0.0671, 0.0688]],
        [[0.9330, 0.9322, 0.9336,  ..., 0.9335, 0.9334, 0.9322],
         [0.0670, 0.0678, 0.0664,  ..., 0.0665, 0.0666, 0.0678]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:16:27,541 [Process: 0] Synchronize training processes
2024-08-16 17:16:27,542 [Process: 0] Evaluating...
2024-08-16 17:16:27,544 [Process: 0] EPOCH 138:
2024-08-16 17:16:27,546 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9308, 0.9319, 0.9327,  ..., 0.9320, 0.9325, 0.9313],
         [0.0692, 0.0681, 0.0673,  ..., 0.0680, 0.0675, 0.0687]],
        [[0.9313, 0.9312, 0.9312,  ..., 0.9307, 0.9319, 0.9318],
         [0.0687, 0.0688, 0.0688,  ..., 0.0693, 0.0681, 0.0682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9336, 0.9325, 0.9332,  ..., 0.9330, 0.9329, 0.9322],
         [0.0664, 0.0675, 0.0668,  ..., 0.0670, 0.0671, 0.0678]],
        [[0.9339, 0.9332, 0.9337,  ..., 0.9338, 0.9328, 0.9330],
         [0.0661, 0.0668, 0.0663,  ..., 0.0662, 0.0672, 0.0670]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:16:29,780 [Process: 0] Synchronize training processes
2024-08-16 17:16:29,780 [Process: 0] Evaluating...
2024-08-16 17:16:29,783 [Process: 0] EPOCH 139:
2024-08-16 17:16:29,785 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9336, 0.9340, 0.9333,  ..., 0.9337, 0.9326, 0.9322],
         [0.0664, 0.0660, 0.0667,  ..., 0.0663, 0.0674, 0.0678]],
        [[0.9335, 0.9309, 0.9327,  ..., 0.9318, 0.9316, 0.9322],
         [0.0665, 0.0691, 0.0673,  ..., 0.0682, 0.0684, 0.0678]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 17:16:32,105 [Process: 0] Synchronize training processes
2024-08-16 17:16:32,106 [Process: 0] Evaluating...
2024-08-16 17:16:32,108 [Process: 0] EPOCH 140:
2024-08-16 17:16:32,110 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9346, 0.9342, 0.9351,  ..., 0.9347, 0.9335, 0.9341],
         [0.0654, 0.0658, 0.0649,  ..., 0.0653, 0.0665, 0.0659]],
        [[0.9344, 0.9338, 0.9346,  ..., 0.9355, 0.9337, 0.9346],
         [0.0656, 0.0662, 0.0654,  ..., 0.0645, 0.0663, 0.0654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9335, 0.9332, 0.9325,  ..., 0.9341, 0.9333, 0.9333],
         [0.0665, 0.0668, 0.0675,  ..., 0.0659, 0.0667, 0.0667]],
        [[0.9337, 0.9336, 0.9329,  ..., 0.9340, 0.9333, 0.9335],
         [0.0663, 0.0664, 0.0671,  ..., 0.0660, 0.0667, 0.0665]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:34,390 [Process: 0] Synchronize training processes
2024-08-16 17:16:34,390 [Process: 0] Evaluating...
2024-08-16 17:16:34,392 [Process: 0] EPOCH 141:
2024-08-16 17:16:34,395 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9361, 0.9369, 0.9356,  ..., 0.9363, 0.9351, 0.9354],
         [0.0639, 0.0631, 0.0644,  ..., 0.0637, 0.0649, 0.0646]],
        [[0.9354, 0.9350, 0.9355,  ..., 0.9357, 0.9353, 0.9350],
         [0.0646, 0.0650, 0.0645,  ..., 0.0643, 0.0647, 0.0650]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9341, 0.9337, 0.9336,  ..., 0.9350, 0.9346, 0.9344],
         [0.0659, 0.0663, 0.0664,  ..., 0.0650, 0.0654, 0.0656]],
        [[0.9331, 0.9341, 0.9348,  ..., 0.9339, 0.9340, 0.9338],
         [0.0669, 0.0659, 0.0652,  ..., 0.0661, 0.0660, 0.0662]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:36,697 [Process: 0] Synchronize training processes
2024-08-16 17:16:36,698 [Process: 0] Evaluating...
2024-08-16 17:16:36,706 [Process: 0] EPOCH 142:
2024-08-16 17:16:36,708 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9362, 0.9369, 0.9364,  ..., 0.9369, 0.9366, 0.9365],
         [0.0638, 0.0631, 0.0636,  ..., 0.0631, 0.0634, 0.0635]],
        [[0.9364, 0.9353, 0.9351,  ..., 0.9360, 0.9359, 0.9362],
         [0.0636, 0.0647, 0.0649,  ..., 0.0640, 0.0641, 0.0638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9350, 0.9345, 0.9361,  ..., 0.9346, 0.9348, 0.9353],
         [0.0650, 0.0655, 0.0639,  ..., 0.0654, 0.0652, 0.0647]],
        [[0.9348, 0.9339, 0.9349,  ..., 0.9347, 0.9342, 0.9344],
         [0.0652, 0.0661, 0.0651,  ..., 0.0653, 0.0658, 0.0656]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:38,899 [Process: 0] Synchronize training processes
2024-08-16 17:16:38,899 [Process: 0] Evaluating...
2024-08-16 17:16:38,901 [Process: 0] EPOCH 143:
2024-08-16 17:16:38,903 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9367, 0.9359, 0.9361,  ..., 0.9373, 0.9367, 0.9369],
         [0.0633, 0.0641, 0.0639,  ..., 0.0627, 0.0633, 0.0631]],
        [[0.9363, 0.9368, 0.9368,  ..., 0.9361, 0.9366, 0.9371],
         [0.0637, 0.0632, 0.0632,  ..., 0.0639, 0.0634, 0.0629]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9367, 0.9356, 0.9363,  ..., 0.9365, 0.9354, 0.9359],
         [0.0633, 0.0644, 0.0637,  ..., 0.0635, 0.0646, 0.0641]],
        [[0.9359, 0.9356, 0.9359,  ..., 0.9359, 0.9354, 0.9347],
         [0.0641, 0.0644, 0.0641,  ..., 0.0641, 0.0646, 0.0653]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:41,077 [Process: 0] Synchronize training processes
2024-08-16 17:16:41,078 [Process: 0] Evaluating...
2024-08-16 17:16:41,080 [Process: 0] EPOCH 144:
2024-08-16 17:16:41,082 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9379, 0.9368, 0.9366,  ..., 0.9370, 0.9393, 0.9389],
         [0.0621, 0.0632, 0.0634,  ..., 0.0630, 0.0607, 0.0611]],
        [[0.9377, 0.9369, 0.9365,  ..., 0.9379, 0.9373, 0.9378],
         [0.0623, 0.0631, 0.0635,  ..., 0.0621, 0.0627, 0.0622]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-16 17:16:43,289 [Process: 0] Synchronize training processes
2024-08-16 17:16:43,289 [Process: 0] Evaluating...
2024-08-16 17:16:43,291 [Process: 0] EPOCH 145:
2024-08-16 17:16:43,293 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9364, 0.9364, 0.9372,  ..., 0.9370, 0.9368, 0.9364],
         [0.0636, 0.0636, 0.0628,  ..., 0.0630, 0.0632, 0.0636]],
        [[0.9353, 0.9355, 0.9356,  ..., 0.9361, 0.9361, 0.9355],
         [0.0647, 0.0645, 0.0644,  ..., 0.0639, 0.0639, 0.0645]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9384, 0.9395, 0.9389,  ..., 0.9394, 0.9389, 0.9390],
         [0.0616, 0.0605, 0.0611,  ..., 0.0606, 0.0611, 0.0610]],
        [[0.9387, 0.9396, 0.9389,  ..., 0.9390, 0.9385, 0.9389],
         [0.0613, 0.0604, 0.0611,  ..., 0.0610, 0.0615, 0.0611]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9380, 0.9371, 0.9382,  ..., 0.9372, 0.9374, 0.9373],
         [0.0620, 0.0629, 0.0618,  ..., 0.0628, 0.0626, 0.0627]],
        [[0.9355, 0.9369, 0.9377,  ..., 0.9369, 0.9357, 0.9365],
         [0.0645, 0.0631, 0.0623,  ..., 0.0631, 0.0643, 0.0635]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9389, 0.9392, 0.9395,  ..., 0.9392, 0.9397, 0.9391],
         [0.0611, 0.0608, 0.0605,  ..., 0.0608, 0.0603, 0.0609]],
        [[0.9393, 0.9403, 0.9392,  ..., 0.9388, 0.9386, 0.9389],
         [0.0607, 0.0597, 0.0608,  ..., 0.0612, 0.0614, 0.0611]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:16:45,471 [Process: 0] Synchronize training processes
2024-08-16 17:16:45,471 [Process: 0] Evaluating...
2024-08-16 17:16:45,473 [Process: 0] EPOCH 146:
2024-08-16 17:16:45,475 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9379, 0.9369, 0.9379,  ..., 0.9378, 0.9370, 0.9374],
         [0.0621, 0.0631, 0.0621,  ..., 0.0622, 0.0630, 0.0626]],
        [[0.9382, 0.9370, 0.9371,  ..., 0.9379, 0.9375, 0.9367],
         [0.0618, 0.0630, 0.0629,  ..., 0.0621, 0.0625, 0.0633]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9380, 0.9404, 0.9384,  ..., 0.9393, 0.9385, 0.9409],
         [0.0620, 0.0596, 0.0616,  ..., 0.0607, 0.0615, 0.0591]],
        [[0.9388, 0.9383, 0.9395,  ..., 0.9395, 0.9399, 0.9398],
         [0.0612, 0.0617, 0.0605,  ..., 0.0605, 0.0601, 0.0602]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:16:47,663 [Process: 0] Synchronize training processes
2024-08-16 17:16:47,663 [Process: 0] Evaluating...
2024-08-16 17:16:47,665 [Process: 0] EPOCH 147:
2024-08-16 17:16:47,667 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9388, 0.9378, 0.9384,  ..., 0.9383, 0.9382, 0.9386],
         [0.0612, 0.0622, 0.0616,  ..., 0.0617, 0.0618, 0.0614]],
        [[0.9379, 0.9378, 0.9376,  ..., 0.9375, 0.9377, 0.9388],
         [0.0621, 0.0622, 0.0624,  ..., 0.0625, 0.0623, 0.0612]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9381, 0.9397, 0.9405,  ..., 0.9388, 0.9400, 0.9401],
         [0.0619, 0.0603, 0.0595,  ..., 0.0612, 0.0600, 0.0599]],
        [[0.9400, 0.9404, 0.9405,  ..., 0.9394, 0.9392, 0.9396],
         [0.0600, 0.0596, 0.0595,  ..., 0.0605, 0.0608, 0.0604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:16:49,852 [Process: 0] Synchronize training processes
2024-08-16 17:16:49,852 [Process: 0] Evaluating...
2024-08-16 17:16:49,854 [Process: 0] EPOCH 148:
2024-08-16 17:16:49,856 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9388, 0.9390, 0.9381,  ..., 0.9393, 0.9383, 0.9393],
         [0.0612, 0.0610, 0.0619,  ..., 0.0607, 0.0617, 0.0607]],
        [[0.9376, 0.9385, 0.9388,  ..., 0.9390, 0.9391, 0.9392],
         [0.0624, 0.0615, 0.0612,  ..., 0.0610, 0.0609, 0.0608]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9394, 0.9395, 0.9401,  ..., 0.9405, 0.9411, 0.9391],
         [0.0606, 0.0605, 0.0599,  ..., 0.0595, 0.0589, 0.0609]],
        [[0.9404, 0.9401, 0.9402,  ..., 0.9407, 0.9401, 0.9404],
         [0.0596, 0.0599, 0.0598,  ..., 0.0593, 0.0599, 0.0596]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:52,028 [Process: 0] Synchronize training processes
2024-08-16 17:16:52,029 [Process: 0] Evaluating...
2024-08-16 17:16:52,032 [Process: 0] EPOCH 149:
2024-08-16 17:16:52,035 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9393, 0.9398, 0.9403,  ..., 0.9401, 0.9403, 0.9405],
         [0.0607, 0.0602, 0.0597,  ..., 0.0599, 0.0597, 0.0595]],
        [[0.9393, 0.9397, 0.9396,  ..., 0.9399, 0.9400, 0.9387],
         [0.0607, 0.0603, 0.0604,  ..., 0.0601, 0.0600, 0.0613]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:54,213 [Process: 0] Synchronize training processes
2024-08-16 17:16:54,214 [Process: 0] Evaluating...
2024-08-16 17:16:54,215 [Process: 0] EPOCH 150:
2024-08-16 17:16:54,217 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9395, 0.9399, 0.9411,  ..., 0.9407, 0.9405, 0.9391],
         [0.0605, 0.0601, 0.0589,  ..., 0.0593, 0.0595, 0.0609]],
        [[0.9405, 0.9406, 0.9410,  ..., 0.9404, 0.9404, 0.9410],
         [0.0595, 0.0594, 0.0590,  ..., 0.0596, 0.0596, 0.0590]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9406, 0.9399, 0.9411,  ..., 0.9407, 0.9414, 0.9396],
         [0.0594, 0.0601, 0.0589,  ..., 0.0593, 0.0586, 0.0604]],
        [[0.9393, 0.9401, 0.9400,  ..., 0.9394, 0.9396, 0.9401],
         [0.0607, 0.0599, 0.0600,  ..., 0.0606, 0.0604, 0.0599]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:56,389 [Process: 0] Synchronize training processes
2024-08-16 17:16:56,389 [Process: 0] Evaluating...
2024-08-16 17:16:56,391 [Process: 0] EPOCH 151:
2024-08-16 17:16:56,393 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9406, 0.9409, 0.9415,  ..., 0.9409, 0.9415, 0.9404],
         [0.0594, 0.0591, 0.0585,  ..., 0.0591, 0.0585, 0.0596]],
        [[0.9421, 0.9412, 0.9416,  ..., 0.9416, 0.9410, 0.9415],
         [0.0579, 0.0588, 0.0584,  ..., 0.0584, 0.0590, 0.0585]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9405, 0.9408, 0.9405,  ..., 0.9419, 0.9405, 0.9409],
         [0.0595, 0.0592, 0.0595,  ..., 0.0581, 0.0595, 0.0591]],
        [[0.9406, 0.9407, 0.9408,  ..., 0.9396, 0.9404, 0.9409],
         [0.0594, 0.0593, 0.0592,  ..., 0.0604, 0.0596, 0.0591]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:16:58,548 [Process: 0] Synchronize training processes
2024-08-16 17:16:58,548 [Process: 0] Evaluating...
2024-08-16 17:16:58,556 [Process: 0] EPOCH 152:
2024-08-16 17:16:58,558 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9417, 0.9426, 0.9419,  ..., 0.9419, 0.9432, 0.9425],
         [0.0583, 0.0574, 0.0581,  ..., 0.0581, 0.0568, 0.0575]],
        [[0.9429, 0.9409, 0.9422,  ..., 0.9425, 0.9422, 0.9419],
         [0.0571, 0.0591, 0.0578,  ..., 0.0575, 0.0578, 0.0581]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9404, 0.9415, 0.9408,  ..., 0.9416, 0.9402, 0.9415],
         [0.0596, 0.0585, 0.0592,  ..., 0.0584, 0.0598, 0.0585]],
        [[0.9412, 0.9417, 0.9408,  ..., 0.9408, 0.9406, 0.9419],
         [0.0588, 0.0583, 0.0592,  ..., 0.0592, 0.0594, 0.0581]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:00,741 [Process: 0] Synchronize training processes
2024-08-16 17:17:00,741 [Process: 0] Evaluating...
2024-08-16 17:17:00,743 [Process: 0] EPOCH 153:
2024-08-16 17:17:00,746 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9428, 0.9426, 0.9432,  ..., 0.9432, 0.9424, 0.9431],
         [0.0572, 0.0574, 0.0568,  ..., 0.0568, 0.0576, 0.0569]],
        [[0.9435, 0.9425, 0.9420,  ..., 0.9428, 0.9426, 0.9427],
         [0.0565, 0.0575, 0.0580,  ..., 0.0572, 0.0574, 0.0573]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9418, 0.9429, 0.9422,  ..., 0.9422, 0.9420, 0.9423],
         [0.0582, 0.0571, 0.0578,  ..., 0.0578, 0.0580, 0.0577]],
        [[0.9417, 0.9416, 0.9413,  ..., 0.9408, 0.9414, 0.9425],
         [0.0583, 0.0584, 0.0587,  ..., 0.0592, 0.0586, 0.0575]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:02,922 [Process: 0] Synchronize training processes
2024-08-16 17:17:02,922 [Process: 0] Evaluating...
2024-08-16 17:17:02,924 [Process: 0] EPOCH 154:
2024-08-16 17:17:02,926 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9430, 0.9439, 0.9435,  ..., 0.9444, 0.9439, 0.9439],
         [0.0570, 0.0561, 0.0565,  ..., 0.0556, 0.0561, 0.0561]],
        [[0.9437, 0.9434, 0.9430,  ..., 0.9428, 0.9438, 0.9430],
         [0.0563, 0.0566, 0.0570,  ..., 0.0572, 0.0562, 0.0570]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9430, 0.9432, 0.9424,  ..., 0.9435, 0.9436, 0.9431],
         [0.0570, 0.0568, 0.0576,  ..., 0.0565, 0.0564, 0.0569]],
        [[0.9423, 0.9416, 0.9430,  ..., 0.9427, 0.9418, 0.9422],
         [0.0577, 0.0584, 0.0570,  ..., 0.0573, 0.0582, 0.0578]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:05,084 [Process: 0] Synchronize training processes
2024-08-16 17:17:05,084 [Process: 0] Evaluating...
2024-08-16 17:17:05,086 [Process: 0] EPOCH 155:
2024-08-16 17:17:05,088 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9450, 0.9448, 0.9450,  ..., 0.9440, 0.9433, 0.9427],
         [0.0550, 0.0552, 0.0550,  ..., 0.0560, 0.0567, 0.0573]],
        [[0.9449, 0.9438, 0.9445,  ..., 0.9439, 0.9437, 0.9445],
         [0.0551, 0.0562, 0.0555,  ..., 0.0561, 0.0563, 0.0555]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:17:07,263 [Process: 0] Synchronize training processes
2024-08-16 17:17:07,263 [Process: 0] Evaluating...
2024-08-16 17:17:07,265 [Process: 0] EPOCH 156:
2024-08-16 17:17:07,267 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9432, 0.9431, 0.9432,  ..., 0.9432, 0.9436, 0.9432],
         [0.0568, 0.0569, 0.0568,  ..., 0.0568, 0.0564, 0.0568]],
        [[0.9431, 0.9440, 0.9425,  ..., 0.9430, 0.9423, 0.9424],
         [0.0569, 0.0560, 0.0575,  ..., 0.0570, 0.0577, 0.0576]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9450, 0.9449, 0.9436,  ..., 0.9443, 0.9447, 0.9436],
         [0.0550, 0.0551, 0.0564,  ..., 0.0557, 0.0553, 0.0564]],
        [[0.9439, 0.9443, 0.9449,  ..., 0.9445, 0.9443, 0.9442],
         [0.0561, 0.0557, 0.0551,  ..., 0.0555, 0.0557, 0.0558]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9437, 0.9435, 0.9438,  ..., 0.9431, 0.9433, 0.9430],
         [0.0563, 0.0565, 0.0562,  ..., 0.0569, 0.0567, 0.0570]],
        [[0.9434, 0.9424, 0.9430,  ..., 0.9429, 0.9425, 0.9426],
         [0.0566, 0.0576, 0.0570,  ..., 0.0571, 0.0575, 0.0574]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9451, 0.9443, 0.9451,  ..., 0.9439, 0.9444, 0.9456],
         [0.0549, 0.0557, 0.0549,  ..., 0.0561, 0.0556, 0.0544]],
        [[0.9451, 0.9457, 0.9451,  ..., 0.9448, 0.9457, 0.9449],
         [0.0549, 0.0543, 0.0549,  ..., 0.0552, 0.0543, 0.0551]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:17:09,440 [Process: 0] Synchronize training processes
2024-08-16 17:17:09,441 [Process: 0] Evaluating...
2024-08-16 17:17:09,443 [Process: 0] EPOCH 157:
2024-08-16 17:17:09,445 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9431, 0.9433, 0.9434,  ..., 0.9438, 0.9440, 0.9435],
         [0.0569, 0.0567, 0.0566,  ..., 0.0562, 0.0560, 0.0565]],
        [[0.9427, 0.9424, 0.9430,  ..., 0.9424, 0.9425, 0.9424],
         [0.0573, 0.0576, 0.0570,  ..., 0.0576, 0.0575, 0.0576]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9445, 0.9455, 0.9450,  ..., 0.9460, 0.9463, 0.9463],
         [0.0555, 0.0545, 0.0550,  ..., 0.0540, 0.0537, 0.0537]],
        [[0.9463, 0.9463, 0.9463,  ..., 0.9459, 0.9459, 0.9454],
         [0.0537, 0.0537, 0.0537,  ..., 0.0541, 0.0541, 0.0546]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:17:11,617 [Process: 0] Synchronize training processes
2024-08-16 17:17:11,617 [Process: 0] Evaluating...
2024-08-16 17:17:11,619 [Process: 0] EPOCH 158:
2024-08-16 17:17:11,621 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9438, 0.9441, 0.9440,  ..., 0.9444, 0.9443, 0.9437],
         [0.0562, 0.0559, 0.0560,  ..., 0.0556, 0.0557, 0.0563]],
        [[0.9439, 0.9430, 0.9424,  ..., 0.9430, 0.9430, 0.9433],
         [0.0561, 0.0570, 0.0576,  ..., 0.0570, 0.0570, 0.0567]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9466, 0.9465, 0.9458,  ..., 0.9467, 0.9462, 0.9451],
         [0.0534, 0.0535, 0.0542,  ..., 0.0533, 0.0538, 0.0549]],
        [[0.9461, 0.9471, 0.9455,  ..., 0.9466, 0.9461, 0.9461],
         [0.0539, 0.0529, 0.0545,  ..., 0.0534, 0.0539, 0.0539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:17:13,788 [Process: 0] Synchronize training processes
2024-08-16 17:17:13,789 [Process: 0] Evaluating...
2024-08-16 17:17:13,791 [Process: 0] EPOCH 159:
2024-08-16 17:17:13,793 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9447, 0.9448, 0.9452,  ..., 0.9446, 0.9452, 0.9448],
         [0.0553, 0.0552, 0.0548,  ..., 0.0554, 0.0548, 0.0552]],
        [[0.9439, 0.9445, 0.9441,  ..., 0.9443, 0.9443, 0.9444],
         [0.0561, 0.0555, 0.0559,  ..., 0.0557, 0.0557, 0.0556]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9459, 0.9469, 0.9469,  ..., 0.9455, 0.9457, 0.9462],
         [0.0541, 0.0531, 0.0531,  ..., 0.0545, 0.0543, 0.0538]],
        [[0.9464, 0.9473, 0.9466,  ..., 0.9467, 0.9464, 0.9469],
         [0.0536, 0.0527, 0.0534,  ..., 0.0533, 0.0536, 0.0531]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:17:15,962 [Process: 0] Synchronize training processes
2024-08-16 17:17:15,963 [Process: 0] Evaluating...
2024-08-16 17:17:15,965 [Process: 0] EPOCH 160:
2024-08-16 17:17:15,967 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9453, 0.9460, 0.9460,  ..., 0.9461, 0.9458, 0.9463],
         [0.0547, 0.0540, 0.0540,  ..., 0.0539, 0.0542, 0.0537]],
        [[0.9450, 0.9455, 0.9456,  ..., 0.9451, 0.9452, 0.9452],
         [0.0550, 0.0545, 0.0544,  ..., 0.0549, 0.0548, 0.0548]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9482, 0.9474, 0.9476,  ..., 0.9474, 0.9473, 0.9461],
         [0.0518, 0.0526, 0.0524,  ..., 0.0526, 0.0527, 0.0539]],
        [[0.9473, 0.9480, 0.9472,  ..., 0.9477, 0.9471, 0.9464],
         [0.0527, 0.0520, 0.0528,  ..., 0.0523, 0.0529, 0.0536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:18,136 [Process: 0] Synchronize training processes
2024-08-16 17:17:18,136 [Process: 0] Evaluating...
2024-08-16 17:17:18,138 [Process: 0] EPOCH 161:
2024-08-16 17:17:18,140 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9470, 0.9459, 0.9461,  ..., 0.9462, 0.9462, 0.9461],
         [0.0530, 0.0541, 0.0539,  ..., 0.0538, 0.0538, 0.0539]],
        [[0.9457, 0.9455, 0.9452,  ..., 0.9466, 0.9454, 0.9460],
         [0.0543, 0.0545, 0.0548,  ..., 0.0534, 0.0546, 0.0540]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:20,322 [Process: 0] Synchronize training processes
2024-08-16 17:17:20,323 [Process: 0] Evaluating...
2024-08-16 17:17:20,331 [Process: 0] EPOCH 162:
2024-08-16 17:17:20,333 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9477, 0.9485, 0.9478,  ..., 0.9484, 0.9481, 0.9480],
         [0.0523, 0.0515, 0.0522,  ..., 0.0516, 0.0519, 0.0520]],
        [[0.9469, 0.9478, 0.9479,  ..., 0.9472, 0.9474, 0.9480],
         [0.0531, 0.0522, 0.0521,  ..., 0.0528, 0.0526, 0.0520]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9467, 0.9468, 0.9474,  ..., 0.9468, 0.9473, 0.9470],
         [0.0533, 0.0532, 0.0526,  ..., 0.0532, 0.0527, 0.0530]],
        [[0.9465, 0.9457, 0.9466,  ..., 0.9458, 0.9459, 0.9463],
         [0.0535, 0.0543, 0.0534,  ..., 0.0542, 0.0541, 0.0537]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:22,506 [Process: 0] Synchronize training processes
2024-08-16 17:17:22,506 [Process: 0] Evaluating...
2024-08-16 17:17:22,508 [Process: 0] EPOCH 163:
2024-08-16 17:17:22,510 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9477, 0.9478, 0.9478,  ..., 0.9466, 0.9482, 0.9478],
         [0.0523, 0.0522, 0.0522,  ..., 0.0534, 0.0518, 0.0522]],
        [[0.9480, 0.9474, 0.9486,  ..., 0.9475, 0.9469, 0.9481],
         [0.0520, 0.0526, 0.0514,  ..., 0.0525, 0.0531, 0.0519]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9468, 0.9473, 0.9469,  ..., 0.9472, 0.9469, 0.9470],
         [0.0532, 0.0527, 0.0531,  ..., 0.0528, 0.0531, 0.0530]],
        [[0.9463, 0.9460, 0.9463,  ..., 0.9467, 0.9467, 0.9467],
         [0.0537, 0.0540, 0.0537,  ..., 0.0533, 0.0533, 0.0533]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:24,681 [Process: 0] Synchronize training processes
2024-08-16 17:17:24,682 [Process: 0] Evaluating...
2024-08-16 17:17:24,684 [Process: 0] EPOCH 164:
2024-08-16 17:17:24,685 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9480, 0.9479, 0.9486,  ..., 0.9484, 0.9486, 0.9477],
         [0.0520, 0.0521, 0.0514,  ..., 0.0516, 0.0514, 0.0523]],
        [[0.9480, 0.9476, 0.9485,  ..., 0.9479, 0.9481, 0.9485],
         [0.0520, 0.0524, 0.0515,  ..., 0.0521, 0.0519, 0.0515]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9474, 0.9473, 0.9470,  ..., 0.9465, 0.9465, 0.9469],
         [0.0526, 0.0527, 0.0530,  ..., 0.0535, 0.0535, 0.0531]],
        [[0.9469, 0.9470, 0.9466,  ..., 0.9469, 0.9461, 0.9466],
         [0.0531, 0.0530, 0.0534,  ..., 0.0531, 0.0539, 0.0534]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:26,842 [Process: 0] Synchronize training processes
2024-08-16 17:17:26,842 [Process: 0] Evaluating...
2024-08-16 17:17:26,844 [Process: 0] EPOCH 165:
2024-08-16 17:17:26,846 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9484, 0.9480, 0.9482,  ..., 0.9485, 0.9483, 0.9475],
         [0.0516, 0.0520, 0.0518,  ..., 0.0515, 0.0517, 0.0525]],
        [[0.9487, 0.9480, 0.9478,  ..., 0.9485, 0.9479, 0.9476],
         [0.0513, 0.0520, 0.0522,  ..., 0.0515, 0.0521, 0.0524]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9468, 0.9470, 0.9472,  ..., 0.9457, 0.9470, 0.9476],
         [0.0532, 0.0530, 0.0528,  ..., 0.0543, 0.0530, 0.0524]],
        [[0.9461, 0.9456, 0.9465,  ..., 0.9460, 0.9463, 0.9463],
         [0.0539, 0.0544, 0.0535,  ..., 0.0540, 0.0537, 0.0537]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:29,019 [Process: 0] Synchronize training processes
2024-08-16 17:17:29,019 [Process: 0] Evaluating...
2024-08-16 17:17:29,021 [Process: 0] EPOCH 166:
2024-08-16 17:17:29,023 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9436, 0.9468, 0.9447,  ..., 0.9428, 0.9432, 0.9443],
         [0.0564, 0.0532, 0.0553,  ..., 0.0572, 0.0568, 0.0557]],
        [[0.9480, 0.9482, 0.9486,  ..., 0.9482, 0.9480, 0.9477],
         [0.0520, 0.0518, 0.0514,  ..., 0.0518, 0.0520, 0.0523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9474, 0.9476, 0.9467,  ..., 0.9474, 0.9470, 0.9477],
         [0.0526, 0.0524, 0.0533,  ..., 0.0526, 0.0530, 0.0523]],
        [[0.9462, 0.9472, 0.9465,  ..., 0.9460, 0.9464, 0.9469],
         [0.0538, 0.0528, 0.0535,  ..., 0.0540, 0.0536, 0.0531]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:31,191 [Process: 0] Synchronize training processes
2024-08-16 17:17:31,192 [Process: 0] Evaluating...
2024-08-16 17:17:31,194 [Process: 0] EPOCH 167:
2024-08-16 17:17:31,196 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9429, 0.9486, 0.9456,  ..., 0.9448, 0.9427, 0.9450],
         [0.0571, 0.0514, 0.0544,  ..., 0.0552, 0.0573, 0.0550]],
        [[0.9489, 0.9489, 0.9494,  ..., 0.9476, 0.9494, 0.9488],
         [0.0511, 0.0511, 0.0506,  ..., 0.0524, 0.0506, 0.0512]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9471, 0.9473, 0.9473,  ..., 0.9469, 0.9474, 0.9473],
         [0.0529, 0.0527, 0.0527,  ..., 0.0531, 0.0526, 0.0527]],
        [[0.9464, 0.9468, 0.9467,  ..., 0.9467, 0.9465, 0.9464],
         [0.0536, 0.0532, 0.0533,  ..., 0.0533, 0.0535, 0.0536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9470, 0.9466, 0.9480,  ..., 0.9465, 0.9473, 0.9463],
         [0.0530, 0.0534, 0.0520,  ..., 0.0535, 0.0527, 0.0537]],
        [[0.9465, 0.9475, 0.9467,  ..., 0.9464, 0.9464, 0.9473],
         [0.0535, 0.0525, 0.0533,  ..., 0.0536, 0.0536, 0.0527]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:17:33,393 [Process: 0] Synchronize training processes
2024-08-16 17:17:33,394 [Process: 0] Evaluating...
2024-08-16 17:17:33,396 [Process: 0] EPOCH 168:
2024-08-16 17:17:33,398 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9486, 0.9477, 0.9481,  ..., 0.9477, 0.9481, 0.9482],
         [0.0514, 0.0523, 0.0519,  ..., 0.0523, 0.0519, 0.0518]],
        [[0.9474, 0.9466, 0.9472,  ..., 0.9467, 0.9470, 0.9470],
         [0.0526, 0.0534, 0.0528,  ..., 0.0533, 0.0530, 0.0530]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9475, 0.9485, 0.9472,  ..., 0.9473, 0.9480, 0.9472],
         [0.0525, 0.0515, 0.0528,  ..., 0.0527, 0.0520, 0.0528]],
        [[0.9470, 0.9479, 0.9483,  ..., 0.9456, 0.9469, 0.9483],
         [0.0530, 0.0521, 0.0517,  ..., 0.0544, 0.0531, 0.0517]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:17:35,616 [Process: 0] Synchronize training processes
2024-08-16 17:17:35,617 [Process: 0] Evaluating...
2024-08-16 17:17:35,619 [Process: 0] EPOCH 169:
2024-08-16 17:17:35,621 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9480, 0.9501, 0.9492,  ..., 0.9406, 0.9438, 0.9450],
         [0.0520, 0.0499, 0.0508,  ..., 0.0594, 0.0562, 0.0550]],
        [[0.9507, 0.9508, 0.9509,  ..., 0.9514, 0.9511, 0.9504],
         [0.0493, 0.0492, 0.0491,  ..., 0.0486, 0.0489, 0.0496]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9493, 0.9484, 0.9492,  ..., 0.9478, 0.9485, 0.9488],
         [0.0507, 0.0516, 0.0508,  ..., 0.0522, 0.0515, 0.0512]],
        [[0.9491, 0.9487, 0.9489,  ..., 0.9468, 0.9486, 0.9486],
         [0.0509, 0.0513, 0.0511,  ..., 0.0532, 0.0514, 0.0514]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:17:37,809 [Process: 0] Synchronize training processes
2024-08-16 17:17:37,809 [Process: 0] Evaluating...
2024-08-16 17:17:37,811 [Process: 0] EPOCH 170:
2024-08-16 17:17:37,813 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9465, 0.9462, 0.9458,  ..., 0.9461, 0.9460, 0.9461],
         [0.0535, 0.0538, 0.0542,  ..., 0.0539, 0.0540, 0.0539]],
        [[0.9452, 0.9457, 0.9459,  ..., 0.9457, 0.9451, 0.9452],
         [0.0548, 0.0543, 0.0541,  ..., 0.0543, 0.0549, 0.0548]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9504, 0.9505, 0.9501,  ..., 0.9506, 0.9495, 0.9510],
         [0.0496, 0.0495, 0.0499,  ..., 0.0494, 0.0505, 0.0490]],
        [[0.9495, 0.9497, 0.9498,  ..., 0.9433, 0.9496, 0.9500],
         [0.0505, 0.0503, 0.0502,  ..., 0.0567, 0.0504, 0.0500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:17:39,988 [Process: 0] Synchronize training processes
2024-08-16 17:17:39,989 [Process: 0] Evaluating...
2024-08-16 17:17:39,991 [Process: 0] EPOCH 171:
2024-08-16 17:17:39,993 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9504, 0.9505, 0.9504,  ..., 0.9501, 0.9506, 0.9501],
         [0.0496, 0.0495, 0.0496,  ..., 0.0499, 0.0494, 0.0499]],
        [[0.9499, 0.9502, 0.9502,  ..., 0.9505, 0.5000, 0.9506],
         [0.0501, 0.0498, 0.0498,  ..., 0.0495, 0.5000, 0.0494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9504, 0.9513, 0.9511,  ..., 0.9508, 0.9514, 0.9514],
         [0.0496, 0.0487, 0.0489,  ..., 0.0492, 0.0486, 0.0486]],
        [[0.9510, 0.9506, 0.9505,  ..., 0.9485, 0.9505, 0.9500],
         [0.0490, 0.0494, 0.0495,  ..., 0.0515, 0.0495, 0.0500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:42,155 [Process: 0] Synchronize training processes
2024-08-16 17:17:42,155 [Process: 0] Evaluating...
2024-08-16 17:17:42,163 [Process: 0] EPOCH 172:
2024-08-16 17:17:42,166 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9470, 0.9476, 0.9469,  ..., 0.9469, 0.9473, 0.9471],
         [0.0530, 0.0524, 0.0531,  ..., 0.0531, 0.0527, 0.0529]],
        [[0.9464, 0.9472, 0.9464,  ..., 0.9467, 0.9460, 0.9468],
         [0.0536, 0.0528, 0.0536,  ..., 0.0533, 0.0540, 0.0532]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 17:17:44,338 [Process: 0] Synchronize training processes
2024-08-16 17:17:44,338 [Process: 0] Evaluating...
2024-08-16 17:17:44,340 [Process: 0] EPOCH 173:
2024-08-16 17:17:44,342 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9504, 0.9505, 0.9500,  ..., 0.9506, 0.9508, 0.9509],
         [0.0496, 0.0495, 0.0500,  ..., 0.0494, 0.0492, 0.0491]],
        [[0.9494, 0.9500, 0.9503,  ..., 0.9447, 0.9507, 0.9497],
         [0.0506, 0.0500, 0.0497,  ..., 0.0553, 0.0493, 0.0503]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9469, 0.9470, 0.9479,  ..., 0.9470, 0.9471, 0.9471],
         [0.0531, 0.0530, 0.0521,  ..., 0.0530, 0.0529, 0.0529]],
        [[0.9471, 0.9468, 0.9469,  ..., 0.9467, 0.9469, 0.9466],
         [0.0529, 0.0532, 0.0531,  ..., 0.0533, 0.0531, 0.0534]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:46,523 [Process: 0] Synchronize training processes
2024-08-16 17:17:46,523 [Process: 0] Evaluating...
2024-08-16 17:17:46,525 [Process: 0] EPOCH 174:
2024-08-16 17:17:46,527 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9505, 0.9504, 0.9510,  ..., 0.9508, 0.9501, 0.9503],
         [0.0495, 0.0496, 0.0490,  ..., 0.0492, 0.0499, 0.0497]],
        [[0.9505, 0.9507, 0.9503,  ..., 0.9434, 0.9501, 0.9500],
         [0.0495, 0.0493, 0.0497,  ..., 0.0566, 0.0499, 0.0500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9495, 0.9506, 0.9489,  ..., 0.9498, 0.9493, 0.9496],
         [0.0505, 0.0494, 0.0511,  ..., 0.0502, 0.0507, 0.0504]],
        [[0.9494, 0.9491, 0.9492,  ..., 0.9489, 0.9496, 0.9494],
         [0.0506, 0.0509, 0.0508,  ..., 0.0511, 0.0504, 0.0506]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:48,691 [Process: 0] Synchronize training processes
2024-08-16 17:17:48,691 [Process: 0] Evaluating...
2024-08-16 17:17:48,693 [Process: 0] EPOCH 175:
2024-08-16 17:17:48,695 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9490, 0.9493, 0.9492,  ..., 0.9489, 0.9487, 0.9488],
         [0.0510, 0.0507, 0.0508,  ..., 0.0511, 0.0513, 0.0512]],
        [[0.9485, 0.9490, 0.9486,  ..., 0.9444, 0.9482, 0.9487],
         [0.0515, 0.0510, 0.0514,  ..., 0.0556, 0.0518, 0.0513]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9506, 0.9499, 0.9499,  ..., 0.9500, 0.9488, 0.9483],
         [0.0494, 0.0501, 0.0501,  ..., 0.0500, 0.0512, 0.0517]],
        [[0.9491, 0.9499, 0.9500,  ..., 0.9492, 0.9490, 0.9494],
         [0.0509, 0.0501, 0.0500,  ..., 0.0508, 0.0510, 0.0506]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:50,864 [Process: 0] Synchronize training processes
2024-08-16 17:17:50,864 [Process: 0] Evaluating...
2024-08-16 17:17:50,866 [Process: 0] EPOCH 176:
2024-08-16 17:17:50,868 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9487, 0.9490, 0.9487,  ..., 0.9490, 0.9489, 0.9486],
         [0.0513, 0.0510, 0.0513,  ..., 0.0510, 0.0511, 0.0514]],
        [[0.9490, 0.9492, 0.9487,  ..., 0.9228, 0.9490, 0.9488],
         [0.0510, 0.0508, 0.0513,  ..., 0.0772, 0.0510, 0.0512]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9473, 0.9490, 0.9499,  ..., 0.9494, 0.9426, 0.9452],
         [0.0527, 0.0510, 0.0501,  ..., 0.0506, 0.0574, 0.0548]],
        [[0.9514, 0.9515, 0.9521,  ..., 0.9519, 0.5000, 0.9517],
         [0.0486, 0.0485, 0.0479,  ..., 0.0481, 0.5000, 0.0483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:53,043 [Process: 0] Synchronize training processes
2024-08-16 17:17:53,044 [Process: 0] Evaluating...
2024-08-16 17:17:53,046 [Process: 0] EPOCH 177:
2024-08-16 17:17:53,048 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9479, 0.9473, 0.9479,  ..., 0.9481, 0.9471, 0.9467],
         [0.0521, 0.0527, 0.0521,  ..., 0.0519, 0.0529, 0.0533]],
        [[0.9479, 0.9482, 0.9480,  ..., 0.7900, 0.9479, 0.9481],
         [0.0521, 0.0518, 0.0520,  ..., 0.2100, 0.0521, 0.0519]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9516, 0.9498, 0.9497,  ..., 0.9495, 0.9490, 0.9492],
         [0.0484, 0.0502, 0.0503,  ..., 0.0505, 0.0510, 0.0508]],
        [[0.9496, 0.9492, 0.9493,  ..., 0.9496, 0.5000, 0.9498],
         [0.0504, 0.0508, 0.0507,  ..., 0.0504, 0.5000, 0.0502]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:17:55,211 [Process: 0] Synchronize training processes
2024-08-16 17:17:55,212 [Process: 0] Evaluating...
2024-08-16 17:17:55,214 [Process: 0] EPOCH 178:
2024-08-16 17:17:55,216 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9478, 0.9480, 0.9479,  ..., 0.9475, 0.9476, 0.9468],
         [0.0522, 0.0520, 0.0521,  ..., 0.0525, 0.0524, 0.0532]],
        [[0.9476, 0.9476, 0.9474,  ..., 0.9370, 0.9477, 0.9478],
         [0.0524, 0.0524, 0.0526,  ..., 0.0630, 0.0523, 0.0522]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
2024-08-16 17:17:57,373 [Process: 0] Synchronize training processes
2024-08-16 17:17:57,373 [Process: 0] Evaluating...
tensor([[[0.9470, 0.9466, 0.9472,  ..., 0.9451, 0.9393, 0.9354],
         [0.0530, 0.0534, 0.0528,  ..., 0.0549, 0.0607, 0.0646]],
        [[0.9484, 0.9487, 0.9484,  ..., 0.9489, 0.5000, 0.9489],
         [0.0516, 0.0513, 0.0516,  ..., 0.0511, 0.5000, 0.0511]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9458, 0.9467, 0.9465,  ..., 0.9458, 0.9466, 0.9467],
         [0.0542, 0.0533, 0.0535,  ..., 0.0542, 0.0534, 0.0533]],
        [[0.9462, 0.9465, 0.9464,  ..., 0.9401, 0.9462, 0.9463],
         [0.0538, 0.0535, 0.0536,  ..., 0.0599, 0.0538, 0.0537]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:17:57,375 [Process: 0] EPOCH 179:
2024-08-16 17:17:57,377 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9480, 0.9476, 0.9475,  ..., 0.9485, 0.9482, 0.9469],
         [0.0520, 0.0524, 0.0525,  ..., 0.0515, 0.0518, 0.0531]],
        [[0.9472, 0.9475, 0.9467,  ..., 0.9479, 0.5000, 0.9476],
         [0.0528, 0.0525, 0.0533,  ..., 0.0521, 0.5000, 0.0524]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9425, 0.9430, 0.9428,  ..., 0.9425, 0.9430, 0.9431],
         [0.0575, 0.0570, 0.0572,  ..., 0.0575, 0.0570, 0.0569]],
        [[0.9428, 0.9433, 0.9429,  ..., 0.9319, 0.9422, 0.9427],
         [0.0572, 0.0567, 0.0571,  ..., 0.0681, 0.0578, 0.0573]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:17:59,542 [Process: 0] Synchronize training processes
2024-08-16 17:17:59,542 [Process: 0] Evaluating...
2024-08-16 17:17:59,544 [Process: 0] EPOCH 180:
2024-08-16 17:17:59,546 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9485, 0.9490, 0.9485,  ..., 0.9485, 0.9490, 0.9488],
         [0.0515, 0.0510, 0.0515,  ..., 0.0515, 0.0510, 0.0512]],
        [[0.9486, 0.9482, 0.9481,  ..., 0.9475, 0.5000, 0.9464],
         [0.0514, 0.0518, 0.0519,  ..., 0.0525, 0.5000, 0.0536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9443, 0.9442, 0.9442,  ..., 0.9438, 0.9438, 0.9441],
         [0.0557, 0.0558, 0.0558,  ..., 0.0562, 0.0562, 0.0559]],
        [[0.9443, 0.9444, 0.9443,  ..., 0.9405, 0.9441, 0.9441],
         [0.0557, 0.0556, 0.0557,  ..., 0.0595, 0.0559, 0.0559]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:18:01,705 [Process: 0] Synchronize training processes
2024-08-16 17:18:01,705 [Process: 0] Evaluating...
2024-08-16 17:18:01,707 [Process: 0] EPOCH 181:
2024-08-16 17:18:01,709 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9482, 0.9486, 0.9484,  ..., 0.9482, 0.9483, 0.9487],
         [0.0518, 0.0514, 0.0516,  ..., 0.0518, 0.0517, 0.0513]],
        [[0.9472, 0.9481, 0.9472,  ..., 0.9395, 0.9340, 0.9410],
         [0.0528, 0.0519, 0.0528,  ..., 0.0605, 0.0660, 0.0590]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9438, 0.9439, 0.9440,  ..., 0.9436, 0.9436, 0.9436],
         [0.0562, 0.0561, 0.0560,  ..., 0.0564, 0.0564, 0.0564]],
        [[0.9436, 0.9439, 0.9439,  ..., 0.9438, 0.9435, 0.9437],
         [0.0564, 0.0561, 0.0561,  ..., 0.0562, 0.0565, 0.0563]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:18:03,892 [Process: 0] Synchronize training processes
2024-08-16 17:18:03,892 [Process: 0] Evaluating...
2024-08-16 17:18:03,901 [Process: 0] EPOCH 182:
2024-08-16 17:18:03,905 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9461, 0.9459, 0.9452,  ..., 0.9449, 0.9457, 0.9453],
         [0.0539, 0.0541, 0.0548,  ..., 0.0551, 0.0543, 0.0547]],
        [[0.9454, 0.9454, 0.9455,  ..., 0.9447, 0.9452, 0.9455],
         [0.0546, 0.0546, 0.0545,  ..., 0.0553, 0.0548, 0.0545]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9446, 0.9449, 0.9447,  ..., 0.9449, 0.9448, 0.9446],
         [0.0554, 0.0551, 0.0553,  ..., 0.0551, 0.0552, 0.0554]],
        [[0.9449, 0.9447, 0.9447,  ..., 0.9447, 0.9447, 0.9448],
         [0.0551, 0.0553, 0.0553,  ..., 0.0553, 0.0553, 0.0552]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:18:06,076 [Process: 0] Synchronize training processes
2024-08-16 17:18:06,077 [Process: 0] Evaluating...
2024-08-16 17:18:06,079 [Process: 0] EPOCH 183:
2024-08-16 17:18:06,080 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9464, 0.9466, 0.9461,  ..., 0.9469, 0.9461, 0.9462],
         [0.0536, 0.0534, 0.0539,  ..., 0.0531, 0.0539, 0.0538]],
        [[0.9457, 0.9466, 0.9463,  ..., 0.9454, 0.9462, 0.9459],
         [0.0543, 0.0534, 0.0537,  ..., 0.0546, 0.0538, 0.0541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9456, 0.9449, 0.9450,  ..., 0.9450, 0.9454, 0.9448],
         [0.0544, 0.0551, 0.0550,  ..., 0.0550, 0.0546, 0.0552]],
        [[0.9451, 0.9452, 0.9452,  ..., 0.9452, 0.9452, 0.9452],
         [0.0549, 0.0548, 0.0548,  ..., 0.0548, 0.0548, 0.0548]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:08,252 [Process: 0] Synchronize training processes
2024-08-16 17:18:08,252 [Process: 0] Evaluating...
2024-08-16 17:18:08,254 [Process: 0] EPOCH 184:
2024-08-16 17:18:08,256 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9470, 0.9466, 0.9470,  ..., 0.9463, 0.9463, 0.9465],
         [0.0530, 0.0534, 0.0530,  ..., 0.0537, 0.0537, 0.0535]],
        [[0.9464, 0.9464, 0.9466,  ..., 0.9456, 0.9464, 0.9464],
         [0.0536, 0.0536, 0.0534,  ..., 0.0544, 0.0536, 0.0536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:10,435 [Process: 0] Synchronize training processes
2024-08-16 17:18:10,436 [Process: 0] Evaluating...
2024-08-16 17:18:10,437 [Process: 0] EPOCH 185:
2024-08-16 17:18:10,440 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9477, 0.9484, 0.9480,  ..., 0.9483, 0.9484, 0.9483],
         [0.0523, 0.0516, 0.0520,  ..., 0.0517, 0.0516, 0.0517]],
        [[0.9475, 0.9484, 0.9483,  ..., 0.9483, 0.9478, 0.9476],
         [0.0525, 0.0516, 0.0517,  ..., 0.0517, 0.0522, 0.0524]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9471, 0.9464, 0.9472,  ..., 0.9472, 0.9473, 0.9463],
         [0.0529, 0.0536, 0.0528,  ..., 0.0528, 0.0527, 0.0537]],
        [[0.9468, 0.9468, 0.9466,  ..., 0.9455, 0.9469, 0.9461],
         [0.0532, 0.0532, 0.0534,  ..., 0.0545, 0.0531, 0.0539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:12,623 [Process: 0] Synchronize training processes
2024-08-16 17:18:12,624 [Process: 0] Evaluating...
2024-08-16 17:18:12,625 [Process: 0] EPOCH 186:
2024-08-16 17:18:12,627 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9482, 0.9482, 0.9477,  ..., 0.9488, 0.9476, 0.9480],
         [0.0518, 0.0518, 0.0523,  ..., 0.0512, 0.0524, 0.0520]],
        [[0.9480, 0.9485, 0.9480,  ..., 0.9481, 0.9480, 0.9477],
         [0.0520, 0.0515, 0.0520,  ..., 0.0519, 0.0520, 0.0523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9473, 0.9467, 0.9474,  ..., 0.9468, 0.9468, 0.9476],
         [0.0527, 0.0533, 0.0526,  ..., 0.0532, 0.0532, 0.0524]],
        [[0.9473, 0.9469, 0.9472,  ..., 0.9460, 0.9471, 0.9459],
         [0.0527, 0.0531, 0.0528,  ..., 0.0540, 0.0529, 0.0541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:14,797 [Process: 0] Synchronize training processes
2024-08-16 17:18:14,798 [Process: 0] Evaluating...
2024-08-16 17:18:14,800 [Process: 0] EPOCH 187:
2024-08-16 17:18:14,802 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9506, 0.9506, 0.9500,  ..., 0.9499, 0.9503, 0.9505],
         [0.0494, 0.0494, 0.0500,  ..., 0.0501, 0.0497, 0.0495]],
        [[0.9502, 0.9506, 0.9509,  ..., 0.9508, 0.9503, 0.9500],
         [0.0498, 0.0494, 0.0491,  ..., 0.0492, 0.0497, 0.0500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9501, 0.9497, 0.9502,  ..., 0.9495, 0.9491, 0.9500],
         [0.0499, 0.0503, 0.0498,  ..., 0.0505, 0.0509, 0.0500]],
        [[0.9495, 0.9493, 0.9502,  ..., 0.9503, 0.9495, 0.9495],
         [0.0505, 0.0507, 0.0498,  ..., 0.0497, 0.0505, 0.0505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:16,966 [Process: 0] Synchronize training processes
2024-08-16 17:18:16,966 [Process: 0] Evaluating...
2024-08-16 17:18:16,968 [Process: 0] EPOCH 188:
2024-08-16 17:18:16,971 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9513, 0.9515, 0.9514,  ..., 0.9517, 0.9514, 0.9519],
         [0.0487, 0.0485, 0.0486,  ..., 0.0483, 0.0486, 0.0481]],
        [[0.9512, 0.9520, 0.9512,  ..., 0.9513, 0.9515, 0.9511],
         [0.0488, 0.0480, 0.0488,  ..., 0.0487, 0.0485, 0.0489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9481, 0.9483, 0.9482,  ..., 0.9478, 0.9478, 0.9482],
         [0.0519, 0.0517, 0.0518,  ..., 0.0522, 0.0522, 0.0518]],
        [[0.9482, 0.9477, 0.9481,  ..., 0.9479, 0.9480, 0.9479],
         [0.0518, 0.0523, 0.0519,  ..., 0.0521, 0.0520, 0.0521]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:19,149 [Process: 0] Synchronize training processes
2024-08-16 17:18:19,150 [Process: 0] Evaluating...
2024-08-16 17:18:19,152 [Process: 0] EPOCH 189:
2024-08-16 17:18:19,154 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9531, 0.9537, 0.9536,  ..., 0.9528, 0.9528, 0.9533],
         [0.0469, 0.0463, 0.0464,  ..., 0.0472, 0.0472, 0.0467]],
        [[0.9533, 0.9528, 0.9528,  ..., 0.9535, 0.9534, 0.9533],
         [0.0467, 0.0472, 0.0472,  ..., 0.0465, 0.0466, 0.0467]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9513, 0.9505, 0.9506,  ..., 0.9507, 0.9506, 0.9508],
         [0.0487, 0.0495, 0.0494,  ..., 0.0493, 0.0494, 0.0492]],
        [[0.9510, 0.9502, 0.9508,  ..., 0.9507, 0.9503, 0.9510],
         [0.0490, 0.0498, 0.0492,  ..., 0.0493, 0.0497, 0.0490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:21,328 [Process: 0] Synchronize training processes
2024-08-16 17:18:21,328 [Process: 0] Evaluating...
2024-08-16 17:18:21,330 [Process: 0] EPOCH 190:
2024-08-16 17:18:21,332 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9555, 0.9542, 0.9547,  ..., 0.9541, 0.9549, 0.9542],
         [0.0445, 0.0458, 0.0453,  ..., 0.0459, 0.0451, 0.0458]],
        [[0.9538, 0.9546, 0.9543,  ..., 0.9548, 0.9547, 0.9544],
         [0.0462, 0.0454, 0.0457,  ..., 0.0452, 0.0453, 0.0456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9503, 0.9505, 0.9504,  ..., 0.9501, 0.9506, 0.9506],
         [0.0497, 0.0495, 0.0496,  ..., 0.0499, 0.0494, 0.0494]],
        [[0.9503, 0.9504, 0.9503,  ..., 0.9504, 0.9502, 0.9504],
         [0.0497, 0.0496, 0.0497,  ..., 0.0496, 0.0498, 0.0496]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9555, 0.9552, 0.9554,  ..., 0.9549, 0.9553, 0.9550],
         [0.0445, 0.0448, 0.0446,  ..., 0.0451, 0.0447, 0.0450]],
        [[0.9548, 0.9549, 0.9545,  ..., 0.9550, 0.9548, 0.9548],
         [0.0452, 0.0451, 0.0455,  ..., 0.0450, 0.0452, 0.0452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:18:23,491 [Process: 0] Synchronize training processes
2024-08-16 17:18:23,491 [Process: 0] Evaluating...
2024-08-16 17:18:23,493 [Process: 0] EPOCH 191:
2024-08-16 17:18:23,496 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9497, 0.9499, 0.9499,  ..., 0.9497, 0.9498, 0.9494],
         [0.0503, 0.0501, 0.0501,  ..., 0.0503, 0.0502, 0.0506]],
        [[0.9495, 0.9495, 0.9497,  ..., 0.9497, 0.9494, 0.9495],
         [0.0505, 0.0505, 0.0503,  ..., 0.0503, 0.0506, 0.0505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9544, 0.9547, 0.9547,  ..., 0.9544, 0.9545, 0.9544],
         [0.0456, 0.0453, 0.0453,  ..., 0.0456, 0.0455, 0.0456]],
        [[0.9543, 0.9541, 0.9546,  ..., 0.9548, 0.9543, 0.9544],
         [0.0457, 0.0459, 0.0454,  ..., 0.0452, 0.0457, 0.0456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:18:25,665 [Process: 0] Synchronize training processes
2024-08-16 17:18:25,665 [Process: 0] Evaluating...
2024-08-16 17:18:25,674 [Process: 0] EPOCH 192:
2024-08-16 17:18:25,676 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9523, 0.9525, 0.9524,  ..., 0.9525, 0.9522, 0.9522],
         [0.0477, 0.0475, 0.0476,  ..., 0.0475, 0.0478, 0.0478]],
        [[0.9524, 0.9523, 0.9525,  ..., 0.9521, 0.9523, 0.9523],
         [0.0476, 0.0477, 0.0475,  ..., 0.0479, 0.0477, 0.0477]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9544, 0.9542, 0.9544,  ..., 0.9547, 0.9547, 0.9547],
         [0.0456, 0.0458, 0.0456,  ..., 0.0453, 0.0453, 0.0453]],
        [[0.9545, 0.9540, 0.9540,  ..., 0.9548, 0.9542, 0.9547],
         [0.0455, 0.0460, 0.0460,  ..., 0.0452, 0.0458, 0.0453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:18:27,854 [Process: 0] Synchronize training processes
2024-08-16 17:18:27,854 [Process: 0] Evaluating...
2024-08-16 17:18:27,856 [Process: 0] EPOCH 193:
2024-08-16 17:18:27,858 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9536, 0.9542, 0.9540,  ..., 0.9534, 0.9537, 0.9540],
         [0.0464, 0.0458, 0.0460,  ..., 0.0466, 0.0463, 0.0460]],
        [[0.9535, 0.9535, 0.9536,  ..., 0.9535, 0.9539, 0.9536],
         [0.0465, 0.0465, 0.0464,  ..., 0.0465, 0.0461, 0.0464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9547, 0.9542, 0.9541,  ..., 0.9545, 0.9546, 0.9545],
         [0.0453, 0.0458, 0.0459,  ..., 0.0455, 0.0454, 0.0455]],
        [[0.9542, 0.9543, 0.9543,  ..., 0.9542, 0.9544, 0.9542],
         [0.0458, 0.0457, 0.0457,  ..., 0.0458, 0.0456, 0.0458]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:18:30,026 [Process: 0] Synchronize training processes
2024-08-16 17:18:30,027 [Process: 0] Evaluating...
2024-08-16 17:18:30,029 [Process: 0] EPOCH 194:
2024-08-16 17:18:30,031 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9550, 0.9553, 0.9556,  ..., 0.9552, 0.9557, 0.9552],
         [0.0450, 0.0447, 0.0444,  ..., 0.0448, 0.0443, 0.0448]],
        [[0.9552, 0.9550, 0.9548,  ..., 0.9553, 0.9549, 0.9552],
         [0.0448, 0.0450, 0.0452,  ..., 0.0447, 0.0451, 0.0448]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9542, 0.9540, 0.9542,  ..., 0.9541, 0.9545, 0.9541],
         [0.0458, 0.0460, 0.0458,  ..., 0.0459, 0.0455, 0.0459]],
        [[0.9542, 0.9539, 0.9542,  ..., 0.9545, 0.9539, 0.9541],
         [0.0458, 0.0461, 0.0458,  ..., 0.0455, 0.0461, 0.0459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:18:32,192 [Process: 0] Synchronize training processes
2024-08-16 17:18:32,193 [Process: 0] Evaluating...
2024-08-16 17:18:32,195 [Process: 0] EPOCH 195:
2024-08-16 17:18:32,196 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9551, 0.9549, 0.9550,  ..., 0.9552, 0.9549, 0.9549],
         [0.0449, 0.0451, 0.0450,  ..., 0.0448, 0.0451, 0.0451]],
        [[0.9550, 0.9551, 0.9550,  ..., 0.9546, 0.9552, 0.9550],
         [0.0450, 0.0449, 0.0450,  ..., 0.0454, 0.0448, 0.0450]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9542, 0.9541, 0.9543,  ..., 0.9542, 0.9543, 0.9543],
         [0.0458, 0.0459, 0.0457,  ..., 0.0458, 0.0457, 0.0457]],
        [[0.9541, 0.9540, 0.9542,  ..., 0.9545, 0.9542, 0.9541],
         [0.0459, 0.0460, 0.0458,  ..., 0.0455, 0.0458, 0.0459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:34,396 [Process: 0] Synchronize training processes
2024-08-16 17:18:34,396 [Process: 0] Evaluating...
2024-08-16 17:18:34,398 [Process: 0] EPOCH 196:
2024-08-16 17:18:34,400 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9557, 0.9556, 0.9553,  ..., 0.9560, 0.9555, 0.9554],
         [0.0443, 0.0444, 0.0447,  ..., 0.0440, 0.0445, 0.0446]],
        [[0.9556, 0.9554, 0.9553,  ..., 0.9552, 0.9554, 0.9552],
         [0.0444, 0.0446, 0.0447,  ..., 0.0448, 0.0446, 0.0448]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:36,596 [Process: 0] Synchronize training processes
2024-08-16 17:18:36,597 [Process: 0] Evaluating...
2024-08-16 17:18:36,599 [Process: 0] EPOCH 197:
2024-08-16 17:18:36,601 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9538, 0.9538, 0.9540,  ..., 0.9539, 0.9537, 0.9539],
         [0.0462, 0.0462, 0.0460,  ..., 0.0461, 0.0463, 0.0461]],
        [[0.9537, 0.9538, 0.9539,  ..., 0.9543, 0.9538, 0.9538],
         [0.0463, 0.0462, 0.0461,  ..., 0.0457, 0.0462, 0.0462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9559, 0.9560, 0.9556,  ..., 0.9558, 0.9557, 0.9555],
         [0.0441, 0.0440, 0.0444,  ..., 0.0442, 0.0443, 0.0445]],
        [[0.9557, 0.9555, 0.9558,  ..., 0.9555, 0.9557, 0.9557],
         [0.0443, 0.0445, 0.0442,  ..., 0.0445, 0.0443, 0.0443]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:38,776 [Process: 0] Synchronize training processes
2024-08-16 17:18:38,776 [Process: 0] Evaluating...
2024-08-16 17:18:38,778 [Process: 0] EPOCH 198:
2024-08-16 17:18:38,780 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9538, 0.9540, 0.9539,  ..., 0.9539, 0.9540, 0.9538],
         [0.0462, 0.0460, 0.0461,  ..., 0.0461, 0.0460, 0.0462]],
        [[0.9538, 0.9538, 0.9538,  ..., 0.9541, 0.9538, 0.9537],
         [0.0462, 0.0462, 0.0462,  ..., 0.0459, 0.0462, 0.0463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9558, 0.9561, 0.9557,  ..., 0.9558, 0.9560, 0.9558],
         [0.0442, 0.0439, 0.0443,  ..., 0.0442, 0.0440, 0.0442]],
        [[0.9557, 0.9558, 0.9560,  ..., 0.9558, 0.9557, 0.9561],
         [0.0443, 0.0442, 0.0440,  ..., 0.0442, 0.0443, 0.0439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:40,958 [Process: 0] Synchronize training processes
2024-08-16 17:18:40,959 [Process: 0] Evaluating...
2024-08-16 17:18:40,961 [Process: 0] EPOCH 199:
2024-08-16 17:18:40,963 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9537, 0.9539, 0.9542,  ..., 0.9539, 0.9541, 0.9538],
         [0.0463, 0.0461, 0.0458,  ..., 0.0461, 0.0459, 0.0462]],
        [[0.9540, 0.9539, 0.9540,  ..., 0.9542, 0.9542, 0.9541],
         [0.0460, 0.0461, 0.0460,  ..., 0.0458, 0.0458, 0.0459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-16 17:18:43,165 [Process: 0] Synchronize training processes
2024-08-16 17:18:43,166 [Process: 0] Evaluating...
2024-08-16 17:18:43,168 [Process: 0] EPOCH 200:
2024-08-16 17:18:43,170 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9561, 0.9559, 0.9559,  ..., 0.9563, 0.9562, 0.9563],
         [0.0439, 0.0441, 0.0441,  ..., 0.0437, 0.0438, 0.0437]],
        [[0.9561, 0.9559, 0.9560,  ..., 0.9560, 0.9563, 0.9562],
         [0.0439, 0.0441, 0.0440,  ..., 0.0440, 0.0437, 0.0438]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9542, 0.9544, 0.9543,  ..., 0.9545, 0.9545, 0.9543],
         [0.0458, 0.0456, 0.0457,  ..., 0.0455, 0.0455, 0.0457]],
        [[0.9545, 0.9545, 0.9542,  ..., 0.9546, 0.9544, 0.9543],
         [0.0455, 0.0455, 0.0458,  ..., 0.0454, 0.0456, 0.0457]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:18:45,441 [Process: 0] Synchronize training processes
2024-08-16 17:18:45,441 [Process: 0] Evaluating...
2024-08-16 17:18:45,443 [Process: 0] EPOCH 201:
2024-08-16 17:18:45,445 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9565, 0.9568, 0.9565,  ..., 0.9564, 0.9566, 0.9561],
         [0.0435, 0.0432, 0.0435,  ..., 0.0436, 0.0434, 0.0439]],
        [[0.9560, 0.9565, 0.9564,  ..., 0.9562, 0.9565, 0.9563],
         [0.0440, 0.0435, 0.0436,  ..., 0.0438, 0.0435, 0.0437]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9543, 0.9544, 0.9545,  ..., 0.9545, 0.9542, 0.9548],
         [0.0457, 0.0456, 0.0455,  ..., 0.0455, 0.0458, 0.0452]],
        [[0.9546, 0.9546, 0.9546,  ..., 0.9547, 0.9545, 0.9544],
         [0.0454, 0.0454, 0.0454,  ..., 0.0453, 0.0455, 0.0456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 201:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9573, 0.9570, 0.9575,  ..., 0.9570, 0.9568, 0.9574],
         [0.0427, 0.0430, 0.0425,  ..., 0.0430, 0.0432, 0.0426]],
        [[0.9569, 0.9567, 0.9571,  ..., 0.9569, 0.9570, 0.9568],
         [0.0431, 0.0433, 0.0429,  ..., 0.0431, 0.0430, 0.0432]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9550, 0.9552, 0.9539,  ..., 0.9539, 0.9543, 0.9543],
         [0.0450, 0.0448, 0.0461,  ..., 0.0461, 0.0457, 0.0457]],
        [[0.9551, 0.9549, 0.9549,  ..., 0.9552, 0.9548, 0.9549],
         [0.0449, 0.0451, 0.0451,  ..., 0.0448, 0.0452, 0.0451]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 202:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:18:47,685 [Process: 0] Synchronize training processes
2024-08-16 17:18:47,685 [Process: 0] Evaluating...
2024-08-16 17:18:47,693 [Process: 0] EPOCH 202:
2024-08-16 17:18:47,695 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9572, 0.9572, 0.9571,  ..., 0.9572, 0.9570, 0.9569],
         [0.0428, 0.0428, 0.0429,  ..., 0.0428, 0.0430, 0.0431]],
        [[0.9572, 0.9567, 0.9573,  ..., 0.9573, 0.5000, 0.9572],
         [0.0428, 0.0433, 0.0427,  ..., 0.0427, 0.5000, 0.0428]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:18:50,019 [Process: 0] Synchronize training processes
2024-08-16 17:18:50,019 [Process: 0] Evaluating...
2024-08-16 17:18:50,021 [Process: 0] EPOCH 203:
2024-08-16 17:18:50,024 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9552, 0.9548, 0.9551,  ..., 0.9535, 0.9552, 0.9548],
         [0.0448, 0.0452, 0.0449,  ..., 0.0465, 0.0448, 0.0452]],
        [[0.9554, 0.9551, 0.9553,  ..., 0.9554, 0.9550, 0.9550],
         [0.0446, 0.0449, 0.0447,  ..., 0.0446, 0.0450, 0.0450]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 203:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9574, 0.9575, 0.9569,  ..., 0.9575, 0.9580, 0.9573],
         [0.0426, 0.0425, 0.0431,  ..., 0.0425, 0.0420, 0.0427]],
        [[0.9572, 0.9572, 0.9571,  ..., 0.9571, 0.5000, 0.9574],
         [0.0428, 0.0428, 0.0429,  ..., 0.0429, 0.5000, 0.0426]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:52,312 [Process: 0] Synchronize training processes
2024-08-16 17:18:52,313 [Process: 0] Evaluating...
2024-08-16 17:18:52,315 [Process: 0] EPOCH 204:
2024-08-16 17:18:52,317 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9541, 0.9541, 0.9547,  ..., 0.9547, 0.9539, 0.9556],
         [0.0459, 0.0459, 0.0453,  ..., 0.0453, 0.0461, 0.0444]],
        [[0.9554, 0.9556, 0.9555,  ..., 0.9559, 0.9555, 0.9556],
         [0.0446, 0.0444, 0.0445,  ..., 0.0441, 0.0445, 0.0444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 204:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9543, 0.9552, 0.9547,  ..., 0.9534, 0.9546, 0.9550],
         [0.0457, 0.0448, 0.0453,  ..., 0.0466, 0.0454, 0.0450]],
        [[0.9550, 0.9553, 0.9550,  ..., 0.9551, 0.5000, 0.9549],
         [0.0450, 0.0447, 0.0450,  ..., 0.0449, 0.5000, 0.0451]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:54,572 [Process: 0] Synchronize training processes
2024-08-16 17:18:54,573 [Process: 0] Evaluating...
2024-08-16 17:18:54,575 [Process: 0] EPOCH 205:
2024-08-16 17:18:54,577 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9557, 0.9558, 0.9561,  ..., 0.9556, 0.9560, 0.9547],
         [0.0443, 0.0442, 0.0439,  ..., 0.0444, 0.0440, 0.0453]],
        [[0.9560, 0.9560, 0.9560,  ..., 0.9560, 0.9560, 0.9561],
         [0.0440, 0.0440, 0.0440,  ..., 0.0440, 0.0440, 0.0439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 205:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9561, 0.9566, 0.9571,  ..., 0.9563, 0.9565, 0.9562],
         [0.0439, 0.0434, 0.0429,  ..., 0.0437, 0.0435, 0.0438]],
        [[0.9563, 0.9566, 0.9567,  ..., 0.9566, 0.5000, 0.9568],
         [0.0437, 0.0434, 0.0433,  ..., 0.0434, 0.5000, 0.0432]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:56,768 [Process: 0] Synchronize training processes
2024-08-16 17:18:56,769 [Process: 0] Evaluating...
2024-08-16 17:18:56,771 [Process: 0] EPOCH 206:
2024-08-16 17:18:56,773 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9558, 0.9565, 0.9562,  ..., 0.9563, 0.9560, 0.9566],
         [0.0442, 0.0435, 0.0438,  ..., 0.0437, 0.0440, 0.0434]],
        [[0.9563, 0.9566, 0.9563,  ..., 0.9566, 0.9563, 0.9563],
         [0.0437, 0.0434, 0.0437,  ..., 0.0434, 0.0437, 0.0437]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 206:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9569, 0.9569, 0.9570,  ..., 0.9572, 0.9569, 0.9569],
         [0.0431, 0.0431, 0.0430,  ..., 0.0428, 0.0431, 0.0431]],
        [[0.9566, 0.9570, 0.9567,  ..., 0.9567, 0.5000, 0.9571],
         [0.0434, 0.0430, 0.0433,  ..., 0.0433, 0.5000, 0.0429]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:18:58,943 [Process: 0] Synchronize training processes
2024-08-16 17:18:58,943 [Process: 0] Evaluating...
2024-08-16 17:18:58,945 [Process: 0] EPOCH 207:
2024-08-16 17:18:58,947 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9569, 0.9568, 0.9567,  ..., 0.9570, 0.9571, 0.9568],
         [0.0431, 0.0432, 0.0433,  ..., 0.0430, 0.0429, 0.0432]],
        [[0.9568, 0.9568, 0.9570,  ..., 0.9571, 0.9569, 0.9569],
         [0.0432, 0.0432, 0.0430,  ..., 0.0429, 0.0431, 0.0431]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 207:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:19:01,052 [Process: 0] Synchronize training processes
2024-08-16 17:19:01,052 [Process: 0] Evaluating...
2024-08-16 17:19:01,054 [Process: 0] EPOCH 208:
2024-08-16 17:19:01,056 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9566, 0.9565, 0.9567,  ..., 0.9566, 0.9567, 0.9565],
         [0.0434, 0.0435, 0.0433,  ..., 0.0434, 0.0433, 0.0435]],
        [[0.9565, 0.9563, 0.9566,  ..., 0.9567, 0.5000, 0.9565],
         [0.0435, 0.0437, 0.0434,  ..., 0.0433, 0.5000, 0.0435]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9570, 0.9570, 0.9571,  ..., 0.9569, 0.9570, 0.9570],
         [0.0430, 0.0430, 0.0429,  ..., 0.0431, 0.0430, 0.0430]],
        [[0.9569, 0.9570, 0.9570,  ..., 0.9573, 0.9571, 0.9568],
         [0.0431, 0.0430, 0.0430,  ..., 0.0427, 0.0429, 0.0432]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 208:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 17:19:03,099 [Process: 0] Synchronize training processes
2024-08-16 17:19:03,099 [Process: 0] Evaluating...
2024-08-16 17:19:03,101 [Process: 0] EPOCH 209:
2024-08-16 17:19:03,103 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9567, 0.9562, 0.9563,  ..., 0.9564, 0.9564, 0.9564],
         [0.0433, 0.0438, 0.0437,  ..., 0.0436, 0.0436, 0.0436]],
        [[0.9562, 0.9562, 0.9566,  ..., 0.9563, 0.5000, 0.9564],
         [0.0438, 0.0438, 0.0434,  ..., 0.0437, 0.5000, 0.0436]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9574, 0.9573, 0.9574,  ..., 0.9573, 0.9573, 0.9575],
         [0.0426, 0.0427, 0.0426,  ..., 0.0427, 0.0427, 0.0425]],
        [[0.9575, 0.9572, 0.9573,  ..., 0.9579, 0.9574, 0.9574],
         [0.0425, 0.0428, 0.0427,  ..., 0.0421, 0.0426, 0.0426]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 209:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:19:05,139 [Process: 0] Synchronize training processes
2024-08-16 17:19:05,140 [Process: 0] Evaluating...
2024-08-16 17:19:05,142 [Process: 0] EPOCH 210:
2024-08-16 17:19:05,144 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9569, 0.9573, 0.9571,  ..., 0.9570, 0.9573, 0.9569],
         [0.0431, 0.0427, 0.0429,  ..., 0.0430, 0.0427, 0.0431]],
        [[0.9572, 0.9572, 0.9571,  ..., 0.9571, 0.5000, 0.9572],
         [0.0428, 0.0428, 0.0429,  ..., 0.0429, 0.5000, 0.0428]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9576, 0.9577, 0.9577,  ..., 0.9576, 0.9575, 0.9577],
         [0.0424, 0.0423, 0.0423,  ..., 0.0424, 0.0425, 0.0423]],
        [[0.9578, 0.9576, 0.9578,  ..., 0.9579, 0.9577, 0.9578],
         [0.0422, 0.0424, 0.0422,  ..., 0.0421, 0.0423, 0.0422]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 210:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:19:07,324 [Process: 0] Synchronize training processes
2024-08-16 17:19:07,325 [Process: 0] Evaluating...
2024-08-16 17:19:07,327 [Process: 0] EPOCH 211:
2024-08-16 17:19:07,329 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9576, 0.9574, 0.9575,  ..., 0.9575, 0.9574, 0.9573],
         [0.0424, 0.0426, 0.0425,  ..., 0.0425, 0.0426, 0.0427]],
        [[0.9573, 0.9575, 0.9575,  ..., 0.9575, 0.5000, 0.9574],
         [0.0427, 0.0425, 0.0425,  ..., 0.0425, 0.5000, 0.0426]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9578, 0.9580, 0.9581,  ..., 0.9578, 0.9580, 0.9579],
         [0.0422, 0.0420, 0.0419,  ..., 0.0422, 0.0420, 0.0421]],
        [[0.9578, 0.9578, 0.9578,  ..., 0.9582, 0.9578, 0.9579],
         [0.0422, 0.0422, 0.0422,  ..., 0.0418, 0.0422, 0.0421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 211:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:19:09,508 [Process: 0] Synchronize training processes
2024-08-16 17:19:09,509 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9585, 0.9587, 0.9585,  ..., 0.9586, 0.9589, 0.9585],
         [0.0415, 0.0413, 0.0415,  ..., 0.0414, 0.0411, 0.0415]],
        [[0.9585, 0.9585, 0.9585,  ..., 0.9585, 0.5000, 0.9585],
         [0.0415, 0.0415, 0.0415,  ..., 0.0415, 0.5000, 0.0415]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9583, 0.9583, 0.9583,  ..., 0.9582, 0.9581, 0.9583],
         [0.0417, 0.0417, 0.0417,  ..., 0.0418, 0.0419, 0.0417]],
        [[0.9582, 0.9581, 0.9584,  ..., 0.9581, 0.9583, 0.9583],
         [0.0418, 0.0419, 0.0416,  ..., 0.0419, 0.0417, 0.0417]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 212:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:19:09,517 [Process: 0] EPOCH 212:
2024-08-16 17:19:09,519 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9592, 0.9593, 0.9593,  ..., 0.9592, 0.9594, 0.9594],
         [0.0408, 0.0407, 0.0407,  ..., 0.0408, 0.0406, 0.0406]],
        [[0.9592, 0.9592, 0.9591,  ..., 0.9594, 0.5000, 0.9591],
         [0.0408, 0.0408, 0.0409,  ..., 0.0406, 0.5000, 0.0409]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9589, 0.9587, 0.9586,  ..., 0.9586, 0.9587, 0.9588],
         [0.0411, 0.0413, 0.0414,  ..., 0.0414, 0.0413, 0.0412]],
        [[0.9588, 0.9588, 0.9587,  ..., 0.9588, 0.9587, 0.9586],
         [0.0412, 0.0412, 0.0413,  ..., 0.0412, 0.0413, 0.0414]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 213:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:19:11,710 [Process: 0] Synchronize training processes
2024-08-16 17:19:11,710 [Process: 0] Evaluating...
2024-08-16 17:19:11,712 [Process: 0] EPOCH 213:
2024-08-16 17:19:11,714 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9600, 0.9599, 0.9598,  ..., 0.9598, 0.9598, 0.9600],
         [0.0400, 0.0401, 0.0402,  ..., 0.0402, 0.0402, 0.0400]],
        [[0.9601, 0.9597, 0.9600,  ..., 0.9599, 0.5000, 0.9600],
         [0.0399, 0.0403, 0.0400,  ..., 0.0401, 0.5000, 0.0400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9592, 0.9591, 0.9592,  ..., 0.9593, 0.9591, 0.9591],
         [0.0408, 0.0409, 0.0408,  ..., 0.0407, 0.0409, 0.0409]],
        [[0.9591, 0.9591, 0.9591,  ..., 0.9592, 0.9591, 0.9593],
         [0.0409, 0.0409, 0.0409,  ..., 0.0408, 0.0409, 0.0407]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:19:13,890 [Process: 0] Synchronize training processes
2024-08-16 17:19:13,890 [Process: 0] Evaluating...
2024-08-16 17:19:13,892 [Process: 0] EPOCH 214:
2024-08-16 17:19:13,894 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 214:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9603, 0.9604, 0.9601,  ..., 0.9604, 0.9604, 0.9604],
         [0.0397, 0.0396, 0.0399,  ..., 0.0396, 0.0396, 0.0396]],
        [[0.9601, 0.9602, 0.9604,  ..., 0.9604, 0.5000, 0.9602],
         [0.0399, 0.0398, 0.0396,  ..., 0.0396, 0.5000, 0.0398]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:19:16,073 [Process: 0] Synchronize training processes
2024-08-16 17:19:16,074 [Process: 0] Evaluating...
2024-08-16 17:19:16,076 [Process: 0] EPOCH 215:
2024-08-16 17:19:16,077 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9597, 0.9596, 0.9598,  ..., 0.9599, 0.9599, 0.9597],
         [0.0403, 0.0404, 0.0402,  ..., 0.0401, 0.0401, 0.0403]],
        [[0.9597, 0.9597, 0.9597,  ..., 0.9599, 0.9597, 0.9597],
         [0.0403, 0.0403, 0.0403,  ..., 0.0401, 0.0403, 0.0403]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 215:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9606, 0.9604, 0.9606,  ..., 0.9610, 0.9606, 0.9609],
         [0.0394, 0.0396, 0.0394,  ..., 0.0390, 0.0394, 0.0391]],
        [[0.9606, 0.9606, 0.9607,  ..., 0.9607, 0.5000, 0.9606],
         [0.0394, 0.0394, 0.0393,  ..., 0.0393, 0.5000, 0.0394]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:19:18,278 [Process: 0] Synchronize training processes
2024-08-16 17:19:18,279 [Process: 0] Evaluating...
2024-08-16 17:19:18,281 [Process: 0] EPOCH 216:
2024-08-16 17:19:18,282 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9602, 0.9602, 0.9603,  ..., 0.9601, 0.9601, 0.9602],
         [0.0398, 0.0398, 0.0397,  ..., 0.0399, 0.0399, 0.0398]],
        [[0.9601, 0.9601, 0.9601,  ..., 0.9603, 0.9601, 0.9601],
         [0.0399, 0.0399, 0.0399,  ..., 0.0397, 0.0399, 0.0399]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 216:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9609, 0.9611, 0.9613,  ..., 0.9611, 0.9613, 0.9612],
         [0.0391, 0.0389, 0.0387,  ..., 0.0389, 0.0387, 0.0388]],
        [[0.9609, 0.9610, 0.9611,  ..., 0.9610, 0.5000, 0.9610],
         [0.0391, 0.0390, 0.0389,  ..., 0.0390, 0.5000, 0.0390]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:19:20,485 [Process: 0] Synchronize training processes
2024-08-16 17:19:20,486 [Process: 0] Evaluating...
2024-08-16 17:19:20,488 [Process: 0] EPOCH 217:
2024-08-16 17:19:20,490 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9608, 0.9606, 0.9608,  ..., 0.9607, 0.9607, 0.9607],
         [0.0392, 0.0394, 0.0392,  ..., 0.0393, 0.0393, 0.0393]],
        [[0.9606, 0.9607, 0.9606,  ..., 0.9608, 0.9607, 0.9606],
         [0.0394, 0.0393, 0.0394,  ..., 0.0392, 0.0393, 0.0394]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 217:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9612, 0.9613, 0.9614,  ..., 0.9609, 0.9614, 0.9614],
         [0.0388, 0.0387, 0.0386,  ..., 0.0391, 0.0386, 0.0386]],
        [[0.9616, 0.9614, 0.9611,  ..., 0.9614, 0.5000, 0.9610],
         [0.0384, 0.0386, 0.0389,  ..., 0.0386, 0.5000, 0.0390]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:19:22,682 [Process: 0] Synchronize training processes
2024-08-16 17:19:22,683 [Process: 0] Evaluating...
2024-08-16 17:19:22,685 [Process: 0] EPOCH 218:
2024-08-16 17:19:22,686 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9614, 0.9610, 0.9612,  ..., 0.9612, 0.9609, 0.9611],
         [0.0386, 0.0390, 0.0388,  ..., 0.0388, 0.0391, 0.0389]],
        [[0.9612, 0.9610, 0.9612,  ..., 0.9614, 0.9612, 0.9611],
         [0.0388, 0.0390, 0.0388,  ..., 0.0386, 0.0388, 0.0389]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 218:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9615, 0.9619, 0.9618,  ..., 0.9616, 0.9617, 0.9616],
         [0.0385, 0.0381, 0.0382,  ..., 0.0384, 0.0383, 0.0384]],
        [[0.9619, 0.9616, 0.9616,  ..., 0.9615, 0.5000, 0.9617],
         [0.0381, 0.0384, 0.0384,  ..., 0.0385, 0.5000, 0.0383]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:19:24,869 [Process: 0] Synchronize training processes
2024-08-16 17:19:24,869 [Process: 0] Evaluating...
2024-08-16 17:19:24,871 [Process: 0] EPOCH 219:
2024-08-16 17:19:24,873 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9613, 0.9615, 0.9616,  ..., 0.9615, 0.9614, 0.9615],
         [0.0387, 0.0385, 0.0384,  ..., 0.0385, 0.0386, 0.0385]],
        [[0.9614, 0.9615, 0.9614,  ..., 0.9614, 0.9613, 0.9613],
         [0.0386, 0.0385, 0.0386,  ..., 0.0386, 0.0387, 0.0387]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 219:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9622, 0.9619, 0.9620,  ..., 0.9621, 0.9620, 0.9618],
         [0.0378, 0.0381, 0.0380,  ..., 0.0379, 0.0380, 0.0382]],
        [[0.9621, 0.9618, 0.9618,  ..., 0.9617, 0.5000, 0.9618],
         [0.0379, 0.0382, 0.0382,  ..., 0.0383, 0.5000, 0.0382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:19:27,054 [Process: 0] Synchronize training processes
2024-08-16 17:19:27,055 [Process: 0] Evaluating...
2024-08-16 17:19:27,057 [Process: 0] EPOCH 220:
2024-08-16 17:19:27,058 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9620, 0.9617, 0.9620,  ..., 0.9618, 0.9617, 0.9617],
         [0.0380, 0.0383, 0.0380,  ..., 0.0382, 0.0383, 0.0383]],
        [[0.9618, 0.9617, 0.9619,  ..., 0.9619, 0.9617, 0.9619],
         [0.0382, 0.0383, 0.0381,  ..., 0.0381, 0.0383, 0.0381]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 220:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 17:19:29,262 [Process: 0] Synchronize training processes
2024-08-16 17:19:29,262 [Process: 0] Evaluating...
2024-08-16 17:19:29,264 [Process: 0] EPOCH 221:
2024-08-16 17:19:29,266 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9622, 0.9620, 0.9624,  ..., 0.9620, 0.9621, 0.9620],
         [0.0378, 0.0380, 0.0376,  ..., 0.0380, 0.0379, 0.0380]],
        [[0.9621, 0.9621, 0.9620,  ..., 0.9618, 0.5000, 0.9620],
         [0.0379, 0.0379, 0.0380,  ..., 0.0382, 0.5000, 0.0380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9621, 0.9620, 0.9621,  ..., 0.9621, 0.9618, 0.9619],
         [0.0379, 0.0380, 0.0379,  ..., 0.0379, 0.0382, 0.0381]],
        [[0.9620, 0.9620, 0.9619,  ..., 0.9622, 0.9618, 0.9620],
         [0.0380, 0.0380, 0.0381,  ..., 0.0378, 0.0382, 0.0380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 221:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:19:31,450 [Process: 0] Synchronize training processes
2024-08-16 17:19:31,450 [Process: 0] Evaluating...
2024-08-16 17:19:31,458 [Process: 0] EPOCH 222:
2024-08-16 17:19:31,460 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9624, 0.9627, 0.9623,  ..., 0.9621, 0.9625, 0.9625],
         [0.0376, 0.0373, 0.0377,  ..., 0.0379, 0.0375, 0.0375]],
        [[0.9621, 0.9623, 0.9623,  ..., 0.9622, 0.5000, 0.9620],
         [0.0379, 0.0377, 0.0377,  ..., 0.0378, 0.5000, 0.0380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9624, 0.9623, 0.9622,  ..., 0.9623, 0.9621, 0.9623],
         [0.0376, 0.0377, 0.0378,  ..., 0.0377, 0.0379, 0.0377]],
        [[0.9622, 0.9623, 0.9621,  ..., 0.9623, 0.9622, 0.9622],
         [0.0378, 0.0377, 0.0379,  ..., 0.0377, 0.0378, 0.0378]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 222:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9627, 0.9627, 0.9626,  ..., 0.9627, 0.9629, 0.9628],
         [0.0373, 0.0373, 0.0374,  ..., 0.0373, 0.0371, 0.0372]],
        [[0.9626, 0.9626, 0.9624,  ..., 0.9627, 0.5000, 0.9627],
         [0.0374, 0.0374, 0.0376,  ..., 0.0373, 0.5000, 0.0373]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9625, 0.9624, 0.9626,  ..., 0.9624, 0.9626, 0.9625],
         [0.0375, 0.0376, 0.0374,  ..., 0.0376, 0.0374, 0.0375]],
        [[0.9624, 0.9624, 0.9625,  ..., 0.9624, 0.9624, 0.9623],
         [0.0376, 0.0376, 0.0375,  ..., 0.0376, 0.0376, 0.0377]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 223:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:19:33,648 [Process: 0] Synchronize training processes
2024-08-16 17:19:33,648 [Process: 0] Evaluating...
2024-08-16 17:19:33,650 [Process: 0] EPOCH 223:
2024-08-16 17:19:33,652 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9627, 0.9629, 0.9627,  ..., 0.9630, 0.9628, 0.9629],
         [0.0373, 0.0371, 0.0373,  ..., 0.0370, 0.0372, 0.0371]],
        [[0.9628, 0.9627, 0.9629,  ..., 0.9627, 0.5000, 0.9624],
         [0.0372, 0.0373, 0.0371,  ..., 0.0373, 0.5000, 0.0376]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9628, 0.9629, 0.9628,  ..., 0.9628, 0.9627, 0.9628],
         [0.0372, 0.0371, 0.0372,  ..., 0.0372, 0.0373, 0.0372]],
        [[0.9628, 0.9629, 0.9627,  ..., 0.9628, 0.9627, 0.9628],
         [0.0372, 0.0371, 0.0373,  ..., 0.0372, 0.0373, 0.0372]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 224:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:19:35,847 [Process: 0] Synchronize training processes
2024-08-16 17:19:35,847 [Process: 0] Evaluating...
2024-08-16 17:19:35,849 [Process: 0] EPOCH 224:
2024-08-16 17:19:35,851 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9631, 0.9630, 0.9632,  ..., 0.9634, 0.9630, 0.9632],
         [0.0369, 0.0370, 0.0368,  ..., 0.0366, 0.0370, 0.0368]],
        [[0.9631, 0.9631, 0.9631,  ..., 0.9630, 0.5000, 0.9630],
         [0.0369, 0.0369, 0.0369,  ..., 0.0370, 0.5000, 0.0370]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9632, 0.9633, 0.9631,  ..., 0.9631, 0.9632, 0.9631],
         [0.0368, 0.0367, 0.0369,  ..., 0.0369, 0.0368, 0.0369]],
        [[0.9631, 0.9630, 0.9631,  ..., 0.9631, 0.9628, 0.9631],
         [0.0369, 0.0370, 0.0369,  ..., 0.0369, 0.0372, 0.0369]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:19:38,039 [Process: 0] Synchronize training processes
2024-08-16 17:19:38,040 [Process: 0] Evaluating...
2024-08-16 17:19:38,041 [Process: 0] EPOCH 225:
2024-08-16 17:19:38,043 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 225:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9636, 0.9633, 0.9634,  ..., 0.9634, 0.9634, 0.9634],
         [0.0364, 0.0367, 0.0366,  ..., 0.0366, 0.0366, 0.0366]],
        [[0.9634, 0.9633, 0.9634,  ..., 0.9633, 0.5000, 0.9631],
         [0.0366, 0.0367, 0.0366,  ..., 0.0367, 0.5000, 0.0369]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:19:40,231 [Process: 0] Synchronize training processes
2024-08-16 17:19:40,231 [Process: 0] Evaluating...
2024-08-16 17:19:40,233 [Process: 0] EPOCH 226:
2024-08-16 17:19:40,235 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9633, 0.9634, 0.9632,  ..., 0.9633, 0.9635, 0.9633],
         [0.0367, 0.0366, 0.0368,  ..., 0.0367, 0.0365, 0.0367]],
        [[0.9632, 0.9633, 0.9634,  ..., 0.9634, 0.9632, 0.9633],
         [0.0368, 0.0367, 0.0366,  ..., 0.0366, 0.0368, 0.0367]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 226:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9638, 0.9637, 0.9638,  ..., 0.9641, 0.9641, 0.9636],
         [0.0362, 0.0363, 0.0362,  ..., 0.0359, 0.0359, 0.0364]],
        [[0.9638, 0.9637, 0.9636,  ..., 0.9638, 0.5000, 0.9636],
         [0.0362, 0.0363, 0.0364,  ..., 0.0362, 0.5000, 0.0364]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:19:42,433 [Process: 0] Synchronize training processes
2024-08-16 17:19:42,434 [Process: 0] Evaluating...
2024-08-16 17:19:42,436 [Process: 0] EPOCH 227:
2024-08-16 17:19:42,438 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9636, 0.9635, 0.9637,  ..., 0.9637, 0.9637, 0.9634],
         [0.0364, 0.0365, 0.0363,  ..., 0.0363, 0.0363, 0.0366]],
        [[0.9637, 0.9635, 0.9637,  ..., 0.9637, 0.9635, 0.9636],
         [0.0363, 0.0365, 0.0363,  ..., 0.0363, 0.0365, 0.0364]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 227:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9641, 0.9640, 0.9639,  ..., 0.9640, 0.9641, 0.9640],
         [0.0359, 0.0360, 0.0361,  ..., 0.0360, 0.0359, 0.0360]],
        [[0.9639, 0.9637, 0.9640,  ..., 0.9636, 0.5000, 0.9640],
         [0.0361, 0.0363, 0.0360,  ..., 0.0364, 0.5000, 0.0360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:19:44,639 [Process: 0] Synchronize training processes
2024-08-16 17:19:44,639 [Process: 0] Evaluating...
2024-08-16 17:19:44,641 [Process: 0] EPOCH 228:
2024-08-16 17:19:44,643 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9639, 0.9638, 0.9637,  ..., 0.9637, 0.9640, 0.9639],
         [0.0361, 0.0362, 0.0363,  ..., 0.0363, 0.0360, 0.0361]],
        [[0.9638, 0.9640, 0.9640,  ..., 0.9640, 0.9638, 0.9639],
         [0.0362, 0.0360, 0.0360,  ..., 0.0360, 0.0362, 0.0361]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 228:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9640, 0.9643, 0.9644,  ..., 0.9642, 0.9641, 0.9643],
         [0.0360, 0.0357, 0.0356,  ..., 0.0358, 0.0359, 0.0357]],
        [[0.9640, 0.9642, 0.9644,  ..., 0.9643, 0.5000, 0.9640],
         [0.0360, 0.0358, 0.0356,  ..., 0.0357, 0.5000, 0.0360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:19:46,822 [Process: 0] Synchronize training processes
2024-08-16 17:19:46,822 [Process: 0] Evaluating...
2024-08-16 17:19:46,824 [Process: 0] EPOCH 229:
2024-08-16 17:19:46,826 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9642, 0.9642, 0.9642,  ..., 0.9641, 0.9640, 0.9641],
         [0.0358, 0.0358, 0.0358,  ..., 0.0359, 0.0360, 0.0359]],
        [[0.9641, 0.9641, 0.9641,  ..., 0.9641, 0.9640, 0.9642],
         [0.0359, 0.0359, 0.0359,  ..., 0.0359, 0.0360, 0.0358]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 229:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9645, 0.9647, 0.9646,  ..., 0.9645, 0.9646, 0.9647],
         [0.0355, 0.0353, 0.0354,  ..., 0.0355, 0.0354, 0.0353]],
        [[0.9644, 0.9643, 0.9644,  ..., 0.9645, 0.5000, 0.9644],
         [0.0356, 0.0357, 0.0356,  ..., 0.0355, 0.5000, 0.0356]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:19:49,010 [Process: 0] Synchronize training processes
2024-08-16 17:19:49,010 [Process: 0] Evaluating...
2024-08-16 17:19:49,012 [Process: 0] EPOCH 230:
2024-08-16 17:19:49,014 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9645, 0.9645, 0.9645,  ..., 0.9643, 0.9644, 0.9643],
         [0.0355, 0.0355, 0.0355,  ..., 0.0357, 0.0356, 0.0357]],
        [[0.9644, 0.9643, 0.9644,  ..., 0.9643, 0.9642, 0.9644],
         [0.0356, 0.0357, 0.0356,  ..., 0.0357, 0.0358, 0.0356]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 230:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9649, 0.9648, 0.9648,  ..., 0.9650, 0.9646, 0.9648],
         [0.0351, 0.0352, 0.0352,  ..., 0.0350, 0.0354, 0.0352]],
        [[0.9647, 0.9649, 0.9648,  ..., 0.9648, 0.5000, 0.9647],
         [0.0353, 0.0351, 0.0352,  ..., 0.0352, 0.5000, 0.0353]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:19:51,247 [Process: 0] Synchronize training processes
2024-08-16 17:19:51,247 [Process: 0] Evaluating...
2024-08-16 17:19:51,249 [Process: 0] EPOCH 231:
2024-08-16 17:19:51,251 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9647, 0.9646, 0.9647,  ..., 0.9647, 0.9647, 0.9644],
         [0.0353, 0.0354, 0.0353,  ..., 0.0353, 0.0353, 0.0356]],
        [[0.9646, 0.9647, 0.9646,  ..., 0.9648, 0.9645, 0.9646],
         [0.0354, 0.0353, 0.0354,  ..., 0.0352, 0.0355, 0.0354]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 231:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:19:53,423 [Process: 0] Synchronize training processes
2024-08-16 17:19:53,424 [Process: 0] Evaluating...
2024-08-16 17:19:53,432 [Process: 0] EPOCH 232:
2024-08-16 17:19:53,435 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9650, 0.9649, 0.9652,  ..., 0.9648, 0.9651, 0.9650],
         [0.0350, 0.0351, 0.0348,  ..., 0.0352, 0.0349, 0.0350]],
        [[0.9649, 0.9648, 0.9649,  ..., 0.9648, 0.5000, 0.9648],
         [0.0351, 0.0352, 0.0351,  ..., 0.0352, 0.5000, 0.0352]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9650, 0.9650, 0.9648,  ..., 0.9649, 0.9649, 0.9649],
         [0.0350, 0.0350, 0.0352,  ..., 0.0351, 0.0351, 0.0351]],
        [[0.9648, 0.9648, 0.9649,  ..., 0.9648, 0.9647, 0.9647],
         [0.0352, 0.0352, 0.0351,  ..., 0.0352, 0.0353, 0.0353]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 232:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9651, 0.9651, 0.9655,  ..., 0.9653, 0.9652, 0.9652],
         [0.0349, 0.0349, 0.0345,  ..., 0.0347, 0.0348, 0.0348]],
        [[0.9651, 0.9651, 0.9650,  ..., 0.9651, 0.5000, 0.9651],
         [0.0349, 0.0349, 0.0350,  ..., 0.0349, 0.5000, 0.0349]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9651, 0.9652, 0.9651,  ..., 0.9651, 0.9652, 0.9652],
         [0.0349, 0.0348, 0.0349,  ..., 0.0349, 0.0348, 0.0348]],
        [[0.9650, 0.9651, 0.9652,  ..., 0.9650, 0.9651, 0.9650],
         [0.0350, 0.0349, 0.0348,  ..., 0.0350, 0.0349, 0.0350]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 233:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:19:55,609 [Process: 0] Synchronize training processes
2024-08-16 17:19:55,609 [Process: 0] Evaluating...
2024-08-16 17:19:55,611 [Process: 0] EPOCH 233:
2024-08-16 17:19:55,613 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9654, 0.9656, 0.9655,  ..., 0.9656, 0.9654, 0.9655],
         [0.0346, 0.0344, 0.0345,  ..., 0.0344, 0.0346, 0.0345]],
        [[0.9655, 0.9655, 0.9656,  ..., 0.9653, 0.5000, 0.9652],
         [0.0345, 0.0345, 0.0344,  ..., 0.0347, 0.5000, 0.0348]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9655, 0.9653, 0.9653,  ..., 0.9655, 0.9654, 0.9652],
         [0.0345, 0.0347, 0.0347,  ..., 0.0345, 0.0346, 0.0348]],
        [[0.9652, 0.9653, 0.9653,  ..., 0.9653, 0.9652, 0.9652],
         [0.0348, 0.0347, 0.0347,  ..., 0.0347, 0.0348, 0.0348]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 234:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:19:57,782 [Process: 0] Synchronize training processes
2024-08-16 17:19:57,783 [Process: 0] Evaluating...
2024-08-16 17:19:57,785 [Process: 0] EPOCH 234:
2024-08-16 17:19:57,786 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9658, 0.9656, 0.9657,  ..., 0.9657, 0.9655, 0.9658],
         [0.0342, 0.0344, 0.0343,  ..., 0.0343, 0.0345, 0.0342]],
        [[0.9656, 0.9658, 0.9654,  ..., 0.9657, 0.5000, 0.9654],
         [0.0344, 0.0342, 0.0346,  ..., 0.0343, 0.5000, 0.0346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9655, 0.9657, 0.9655,  ..., 0.9656, 0.9656, 0.9655],
         [0.0345, 0.0343, 0.0345,  ..., 0.0344, 0.0344, 0.0345]],
        [[0.9656, 0.9655, 0.9655,  ..., 0.9656, 0.9655, 0.9655],
         [0.0344, 0.0345, 0.0345,  ..., 0.0344, 0.0345, 0.0345]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 235:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:19:59,974 [Process: 0] Synchronize training processes
2024-08-16 17:19:59,975 [Process: 0] Evaluating...
2024-08-16 17:19:59,977 [Process: 0] EPOCH 235:
2024-08-16 17:19:59,978 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9657, 0.9658, 0.9659,  ..., 0.9659, 0.9659, 0.9659],
         [0.0343, 0.0342, 0.0341,  ..., 0.0341, 0.0341, 0.0341]],
        [[0.9658, 0.9659, 0.9658,  ..., 0.9660, 0.5000, 0.9657],
         [0.0342, 0.0341, 0.0342,  ..., 0.0340, 0.5000, 0.0343]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9657, 0.9657, 0.9658,  ..., 0.9658, 0.9657, 0.9657],
         [0.0343, 0.0343, 0.0342,  ..., 0.0342, 0.0343, 0.0343]],
        [[0.9657, 0.9656, 0.9657,  ..., 0.9657, 0.9657, 0.9658],
         [0.0343, 0.0344, 0.0343,  ..., 0.0343, 0.0343, 0.0342]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:20:02,154 [Process: 0] Synchronize training processes
2024-08-16 17:20:02,155 [Process: 0] Evaluating...
2024-08-16 17:20:02,157 [Process: 0] EPOCH 236:
2024-08-16 17:20:02,159 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 236:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9660, 0.9661, 0.9660,  ..., 0.9662, 0.9662, 0.9662],
         [0.0340, 0.0339, 0.0340,  ..., 0.0338, 0.0338, 0.0338]],
        [[0.9659, 0.9660, 0.9661,  ..., 0.9662, 0.5000, 0.9661],
         [0.0341, 0.0340, 0.0339,  ..., 0.0338, 0.5000, 0.0339]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 17:20:04,260 [Process: 0] Synchronize training processes
2024-08-16 17:20:04,260 [Process: 0] Evaluating...
2024-08-16 17:20:04,262 [Process: 0] EPOCH 237:
2024-08-16 17:20:04,264 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9659, 0.9661, 0.9660,  ..., 0.9660, 0.9661, 0.9660],
         [0.0341, 0.0339, 0.0340,  ..., 0.0340, 0.0339, 0.0340]],
        [[0.9660, 0.9660, 0.9659,  ..., 0.9661, 0.9660, 0.9660],
         [0.0340, 0.0340, 0.0341,  ..., 0.0339, 0.0340, 0.0340]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 237:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9665, 0.9664, 0.9662,  ..., 0.9665, 0.9662, 0.9664],
         [0.0335, 0.0336, 0.0338,  ..., 0.0335, 0.0338, 0.0336]],
        [[0.9664, 0.9663, 0.9662,  ..., 0.9663, 0.5000, 0.9660],
         [0.0336, 0.0337, 0.0338,  ..., 0.0337, 0.5000, 0.0340]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:20:06,288 [Process: 0] Synchronize training processes
2024-08-16 17:20:06,289 [Process: 0] Evaluating...
2024-08-16 17:20:06,291 [Process: 0] EPOCH 238:
2024-08-16 17:20:06,293 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9661, 0.9662, 0.9662,  ..., 0.9662, 0.9662, 0.9661],
         [0.0339, 0.0338, 0.0338,  ..., 0.0338, 0.0338, 0.0339]],
        [[0.9661, 0.9662, 0.9662,  ..., 0.9663, 0.9662, 0.9662],
         [0.0339, 0.0338, 0.0338,  ..., 0.0337, 0.0338, 0.0338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 238:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9665, 0.9667, 0.9665,  ..., 0.9668, 0.9665, 0.9665],
         [0.0335, 0.0333, 0.0335,  ..., 0.0332, 0.0335, 0.0335]],
        [[0.9665, 0.9665, 0.9665,  ..., 0.9664, 0.5000, 0.9664],
         [0.0335, 0.0335, 0.0335,  ..., 0.0336, 0.5000, 0.0336]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 198, in train_one_epoch
    outputs = self.model(batch=batch)["affordance"].squeeze(1)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/GeoL.py", line 78, in forward
    print(x)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/_tensor.py", line 426, in __repr__
    return torch._tensor_str._str(self, tensor_contents=tensor_contents)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/_tensor_str.py", line 636, in _str
    return _str_intern(self, tensor_contents=tensor_contents)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/_tensor_str.py", line 567, in _str_intern
    tensor_str = _tensor_str(self, indent)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/_tensor_str.py", line 327, in _tensor_str
    formatter = _Formatter(get_summarized_data(self) if summarize else self)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/_tensor_str.py", line 115, in __init__
    nonzero_finite_vals = torch.masked_select(
KeyboardInterrupt
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])