[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2881, 0.2694, 0.1786,  ..., 0.3224, 0.2725, 0.1211],
         [0.2703, 0.2547, 0.2949,  ..., 0.2696, 0.2221, 0.1530],
         [0.2208, 0.2013, 0.1908,  ..., 0.2035, 0.2035, 0.3334],
         [0.2208, 0.2746, 0.3358,  ..., 0.2045, 0.3019, 0.3925]],
        [[0.2990, 0.2431, 0.2402,  ..., 0.2977, 0.3088, 0.1557],
         [0.1863, 0.2284, 0.2402,  ..., 0.2582, 0.2540, 0.1557],
         [0.1863, 0.2908, 0.2794,  ..., 0.1722, 0.1851, 0.5328],
         [0.3284, 0.2377, 0.2402,  ..., 0.2719, 0.2521, 0.1557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:36:28,913 [Worker 0] Is distributed: False
2024-08-19 13:36:28,913 [Process: 0] Starting training
2024-08-19 13:36:28,914 [Process: 0] EPOCH 1:
2024-08-19 13:36:28,916 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:30,525 [Process: 0] Synchronize training processes
2024-08-19 13:36:30,525 [Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6686e-01, 4.7269e-06, 2.5240e-01,  ..., 2.2854e-01,
          2.7238e-01, 2.5004e-01],
         [2.5550e-01, 4.7269e-06, 2.5991e-01,  ..., 2.2854e-01,
          2.5566e-01, 2.5698e-01],
         [2.0329e-01, 9.9999e-01, 2.1314e-01,  ..., 3.1437e-01,
          2.0030e-01, 2.1603e-01],
         [2.7435e-01, 4.7269e-06, 2.7454e-01,  ..., 2.2854e-01,
          2.7167e-01, 2.7695e-01]],
        [[2.0804e-01, 2.7418e-01, 2.6543e-01,  ..., 2.6539e-01,
          2.6277e-01, 2.6801e-01],
         [2.0804e-01, 2.2966e-01, 2.5345e-01,  ..., 2.5567e-01,
          2.4814e-01, 2.5211e-01],
         [3.7588e-01, 2.2365e-01, 2.0262e-01,  ..., 2.1286e-01,
          2.1788e-01, 2.0729e-01],
         [2.0804e-01, 2.7251e-01, 2.7849e-01,  ..., 2.6609e-01,
          2.7121e-01, 2.7259e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2436, 0.2629, 0.2767,  ..., 0.2674, 0.2633, 0.2622],
         [0.2436, 0.2551, 0.2503,  ..., 0.2624, 0.2559, 0.2568],
         [0.2693, 0.2070, 0.2182,  ..., 0.2077, 0.2130, 0.2086],
         [0.2436, 0.2751, 0.2548,  ..., 0.2625, 0.2679, 0.2724]],
        [[0.2610, 0.2618, 0.2623,  ..., 0.2707, 0.2670, 0.2702],
         [0.2556, 0.2542, 0.2550,  ..., 0.2533, 0.2542, 0.2568],
         [0.2173, 0.2073, 0.2144,  ..., 0.2038, 0.2119, 0.2059],
         [0.2661, 0.2767, 0.2683,  ..., 0.2722, 0.2668, 0.2671]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:31,492 [Process: 0] EPOCH 2:
2024-08-19 13:36:31,495 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:32,463 [Process: 0] Synchronize training processes
2024-08-19 13:36:32,464 [Process: 0] Evaluating...
2024-08-19 13:36:32,465 [Process: 0] EPOCH 3:
2024-08-19 13:36:32,467 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2594, 0.2609, 0.2566,  ..., 0.2611, 0.2658, 0.2679],
         [0.2525, 0.2554, 0.2525,  ..., 0.2564, 0.2477, 0.2586],
         [0.2159, 0.2115, 0.2142,  ..., 0.2141, 0.2173, 0.2104],
         [0.2722, 0.2722, 0.2767,  ..., 0.2684, 0.2692, 0.2631]],
        [[0.2686, 0.2613, 0.2677,  ..., 0.2616, 0.2639, 0.2637],
         [0.2530, 0.2557, 0.2539,  ..., 0.2605, 0.2688, 0.2544],
         [0.2111, 0.2075, 0.2062,  ..., 0.1999, 0.2010, 0.2104],
         [0.2674, 0.2755, 0.2722,  ..., 0.2780, 0.2663, 0.2715]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2497, 0.2682, 0.2686,  ..., 0.2610, 0.2785, 0.2570],
         [0.2497, 0.2479, 0.2509,  ..., 0.2501, 0.2507, 0.2560],
         [0.2510, 0.2108, 0.2161,  ..., 0.2189, 0.2045, 0.2203],
         [0.2497, 0.2730, 0.2644,  ..., 0.2699, 0.2662, 0.2667]],
        [[0.2597, 0.2713, 0.2666,  ..., 0.2637, 0.2665, 0.2688],
         [0.2551, 0.2536, 0.2506,  ..., 0.2550, 0.2531, 0.2508],
         [0.2156, 0.2060, 0.2142,  ..., 0.2127, 0.2127, 0.2166],
         [0.2696, 0.2691, 0.2686,  ..., 0.2687, 0.2677, 0.2638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2694, 0.2776, 0.2694,  ..., 0.2689, 0.2750, 0.2631],
         [0.2469, 0.2540, 0.2524,  ..., 0.2464, 0.2502, 0.2457],
         [0.2180, 0.1997, 0.2121,  ..., 0.2097, 0.2054, 0.2140],
         [0.2657, 0.2687, 0.2661,  ..., 0.2750, 0.2694, 0.2772]],
        [[0.2714, 0.2723, 0.2751,  ..., 0.2728, 0.2686, 0.2627],
         [0.2447, 0.2539, 0.2450,  ..., 0.2405, 0.2530, 0.2543],
         [0.2177, 0.2029, 0.2162,  ..., 0.2134, 0.2074, 0.2103],
         [0.2662, 0.2709, 0.2637,  ..., 0.2733, 0.2711, 0.2726]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2161, 0.2861, 0.2669,  ..., 0.2771, 0.2867, 0.2776],
         [0.2161, 0.2503, 0.2530,  ..., 0.2477, 0.2509, 0.2513],
         [0.3518, 0.1944, 0.2032,  ..., 0.2063, 0.1998, 0.1942],
         [0.2161, 0.2692, 0.2768,  ..., 0.2689, 0.2626, 0.2769]],
        [[0.2671, 0.2815, 0.2824,  ..., 0.2747, 0.2827, 0.2608],
         [0.2377, 0.2521, 0.2412,  ..., 0.2521, 0.2453, 0.2500],
         [0.2168, 0.2052, 0.2020,  ..., 0.2032, 0.1961, 0.2192],
         [0.2784, 0.2612, 0.2744,  ..., 0.2700, 0.2759, 0.2700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:33,435 [Process: 0] Synchronize training processes
2024-08-19 13:36:33,436 [Process: 0] Evaluating...
2024-08-19 13:36:33,437 [Process: 0] EPOCH 4:
2024-08-19 13:36:33,439 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:34,407 [Process: 0] Synchronize training processes
2024-08-19 13:36:34,407 [Process: 0] Evaluating...
2024-08-19 13:36:34,409 [Process: 0] EPOCH 5:
2024-08-19 13:36:34,411 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2682, 0.2759, 0.2694,  ..., 0.2799, 0.2633, 0.2699],
         [0.2374, 0.2381, 0.2389,  ..., 0.2412, 0.2433, 0.2414],
         [0.2238, 0.2133, 0.2197,  ..., 0.2102, 0.2290, 0.2168],
         [0.2706, 0.2727, 0.2720,  ..., 0.2687, 0.2644, 0.2719]],
        [[0.2792, 0.2761, 0.2745,  ..., 0.2784, 0.2752, 0.2780],
         [0.2368, 0.2430, 0.2408,  ..., 0.2441, 0.2375, 0.2424],
         [0.2071, 0.2091, 0.2131,  ..., 0.2030, 0.2150, 0.2163],
         [0.2768, 0.2718, 0.2716,  ..., 0.2745, 0.2723, 0.2633]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1320, 0.2766, 0.2809,  ..., 0.2826, 0.2824, 0.2788],
         [0.1320, 0.2322, 0.2468,  ..., 0.2432, 0.2415, 0.2425],
         [0.6041, 0.2095, 0.2049,  ..., 0.2021, 0.1987, 0.2017],
         [0.1320, 0.2816, 0.2674,  ..., 0.2720, 0.2774, 0.2769]],
        [[0.2859, 0.2819, 0.2734,  ..., 0.2906, 0.2783, 0.2755],
         [0.2495, 0.2388, 0.2437,  ..., 0.2404, 0.2412, 0.2369],
         [0.1991, 0.2138, 0.1994,  ..., 0.1986, 0.2048, 0.2036],
         [0.2655, 0.2655, 0.2836,  ..., 0.2704, 0.2758, 0.2841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2680, 0.2966, 0.3070,  ..., 0.2860, 0.1474, 0.2834],
         [0.2352, 0.2340, 0.2381,  ..., 0.2399, 0.1474, 0.2398],
         [0.2192, 0.1998, 0.1867,  ..., 0.1924, 0.5579, 0.2025],
         [0.2776, 0.2696, 0.2681,  ..., 0.2816, 0.1474, 0.2743]],
        [[0.3076, 0.2929, 0.2857,  ..., 0.2961, 0.2918, 0.2932],
         [0.2360, 0.2348, 0.2479,  ..., 0.2389, 0.2328, 0.2388],
         [0.1892, 0.1970, 0.1927,  ..., 0.1986, 0.2071, 0.1943],
         [0.2671, 0.2753, 0.2737,  ..., 0.2663, 0.2683, 0.2737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0164, 0.2995, 0.3062,  ..., 0.2872, 0.2885, 0.3044],
         [0.0164, 0.2353, 0.2309,  ..., 0.2349, 0.2419, 0.2339],
         [0.9508, 0.1840, 0.1861,  ..., 0.2020, 0.1919, 0.1911],
         [0.0164, 0.2811, 0.2768,  ..., 0.2759, 0.2777, 0.2706]],
        [[0.3256, 0.3094, 0.2869,  ..., 0.2923, 0.2964, 0.2926],
         [0.2287, 0.2385, 0.2321,  ..., 0.2397, 0.2260, 0.2362],
         [0.1706, 0.1729, 0.1994,  ..., 0.1895, 0.1897, 0.2014],
         [0.2751, 0.2792, 0.2817,  ..., 0.2784, 0.2879, 0.2698]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:35,381 [Process: 0] Synchronize training processes
2024-08-19 13:36:35,381 [Process: 0] Evaluating...
2024-08-19 13:36:35,383 [Process: 0] EPOCH 6:
2024-08-19 13:36:35,385 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:36,355 [Process: 0] Synchronize training processes
2024-08-19 13:36:36,356 [Process: 0] Evaluating...
2024-08-19 13:36:36,357 [Process: 0] EPOCH 7:
2024-08-19 13:36:36,359 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1088, 0.3009, 0.3051,  ..., 0.2993, 0.2647, 0.2893],
         [0.1088, 0.2281, 0.2247,  ..., 0.2313, 0.2314, 0.2306],
         [0.6737, 0.2002, 0.1920,  ..., 0.1956, 0.2278, 0.2056],
         [0.1088, 0.2708, 0.2782,  ..., 0.2738, 0.2760, 0.2745]],
        [[0.2836, 0.2900, 0.2955,  ..., 0.2963, 0.2788, 0.2928],
         [0.2349, 0.2293, 0.2272,  ..., 0.2294, 0.2286, 0.2249],
         [0.2043, 0.2075, 0.1992,  ..., 0.2047, 0.2114, 0.1994],
         [0.2773, 0.2731, 0.2781,  ..., 0.2697, 0.2812, 0.2829]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0446, 0.3062, 0.3280,  ..., 0.3021, 0.3041, 0.3110],
         [0.0446, 0.2234, 0.2196,  ..., 0.2255, 0.2295, 0.2335],
         [0.8663, 0.1852, 0.1707,  ..., 0.1942, 0.1900, 0.1834],
         [0.0446, 0.2852, 0.2817,  ..., 0.2782, 0.2764, 0.2720]],
        [[0.3373, 0.3013, 0.3034,  ..., 0.3176, 0.3048, 0.2507],
         [0.2208, 0.2350, 0.2238,  ..., 0.2322, 0.2283, 0.2322],
         [0.1796, 0.1904, 0.1822,  ..., 0.1858, 0.1942, 0.2429],
         [0.2623, 0.2733, 0.2906,  ..., 0.2644, 0.2727, 0.2742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1056, 0.3004, 0.2842,  ..., 0.3006, 0.1996, 0.3094],
         [0.1056, 0.2224, 0.2247,  ..., 0.2312, 0.1996, 0.2198],
         [0.6832, 0.2086, 0.2161,  ..., 0.1946, 0.3763, 0.2005],
         [0.1056, 0.2686, 0.2750,  ..., 0.2735, 0.2246, 0.2703]],
        [[0.3248, 0.3124, 0.2988,  ..., 0.3287, 0.3193, 0.3121],
         [0.2233, 0.2212, 0.2224,  ..., 0.2153, 0.2172, 0.2187],
         [0.1870, 0.1914, 0.2043,  ..., 0.1877, 0.1862, 0.1890],
         [0.2649, 0.2750, 0.2744,  ..., 0.2683, 0.2773, 0.2801]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1132, 0.3216, 0.2999,  ..., 0.3293, 0.3166, 0.2951],
         [0.1132, 0.2161, 0.2130,  ..., 0.2140, 0.2134, 0.2224],
         [0.6603, 0.1892, 0.2015,  ..., 0.1815, 0.1874, 0.1990],
         [0.1132, 0.2730, 0.2855,  ..., 0.2751, 0.2826, 0.2836]],
        [[0.3202, 0.3127, 0.3274,  ..., 0.3045, 0.3323, 0.2078],
         [0.2193, 0.2211, 0.2200,  ..., 0.2213, 0.2100, 0.2078],
         [0.1823, 0.2052, 0.1836,  ..., 0.1904, 0.1792, 0.3614],
         [0.2782, 0.2610, 0.2689,  ..., 0.2838, 0.2786, 0.2229]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:37,327 [Process: 0] Synchronize training processes
2024-08-19 13:36:37,328 [Process: 0] Evaluating...
2024-08-19 13:36:37,329 [Process: 0] EPOCH 8:
2024-08-19 13:36:37,331 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:38,300 [Process: 0] Synchronize training processes
2024-08-19 13:36:38,300 [Process: 0] Evaluating...
2024-08-19 13:36:38,302 [Process: 0] EPOCH 9:
2024-08-19 13:36:38,304 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1397, 0.3306, 0.2944,  ..., 0.3028, 0.1794, 0.3055],
         [0.1397, 0.2100, 0.2209,  ..., 0.2138, 0.1794, 0.2088],
         [0.5808, 0.1937, 0.2132,  ..., 0.2071, 0.4550, 0.2059],
         [0.1397, 0.2657, 0.2716,  ..., 0.2763, 0.1862, 0.2798]],
        [[0.3454, 0.3212, 0.3283,  ..., 0.3175, 0.3306, 0.3314],
         [0.2031, 0.2179, 0.2070,  ..., 0.2152, 0.2126, 0.2085],
         [0.1849, 0.1971, 0.1981,  ..., 0.1924, 0.1934, 0.1901],
         [0.2667, 0.2638, 0.2666,  ..., 0.2748, 0.2634, 0.2701]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.3667, 0.3626,  ..., 0.3465, 0.3079, 0.3234],
         [0.2500, 0.1997, 0.1960,  ..., 0.2005, 0.2119, 0.2006],
         [0.2500, 0.1730, 0.1731,  ..., 0.1851, 0.2019, 0.1945],
         [0.2500, 0.2606, 0.2683,  ..., 0.2679, 0.2783, 0.2815]],
        [[0.3347, 0.3465, 0.3560,  ..., 0.2994, 0.3260, 0.1583],
         [0.2094, 0.2008, 0.1987,  ..., 0.2083, 0.2079, 0.1693],
         [0.1780, 0.1792, 0.1778,  ..., 0.2049, 0.1849, 0.4957],
         [0.2779, 0.2734, 0.2675,  ..., 0.2875, 0.2811, 0.1766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1670, 0.3259, 0.2896,  ..., 0.3247, 0.1517, 0.3217],
         [0.1670, 0.2040, 0.2209,  ..., 0.2003, 0.1517, 0.2012],
         [0.4990, 0.2040, 0.2175,  ..., 0.2003, 0.5449, 0.2012],
         [0.1670, 0.2661, 0.2720,  ..., 0.2747, 0.1517, 0.2759]],
        [[0.3369, 0.3255, 0.3087,  ..., 0.3149, 0.3096, 0.3261],
         [0.2004, 0.2071, 0.2035,  ..., 0.2059, 0.2064, 0.1970],
         [0.2004, 0.1980, 0.2035,  ..., 0.1960, 0.2064, 0.1928],
         [0.2622, 0.2695, 0.2842,  ..., 0.2832, 0.2776, 0.2841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1936, 0.2940, 0.3127,  ..., 0.3075, 0.3410, 0.3054],
         [0.1936, 0.2138, 0.2031,  ..., 0.2121, 0.1962, 0.2062],
         [0.4191, 0.2138, 0.2031,  ..., 0.2121, 0.1962, 0.1994],
         [0.1936, 0.2783, 0.2810,  ..., 0.2682, 0.2665, 0.2890]],
        [[0.3475, 0.3568, 0.4065,  ..., 0.3353, 0.3179, 0.1460],
         [0.1858, 0.1934, 0.1714,  ..., 0.1927, 0.2049, 0.1537],
         [0.1858, 0.1736, 0.1532,  ..., 0.1927, 0.1843, 0.5441],
         [0.2809, 0.2762, 0.2689,  ..., 0.2793, 0.2929, 0.1562]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-19 13:36:39,274 [Process: 0] Synchronize training processes
2024-08-19 13:36:39,275 [Process: 0] Evaluating...
2024-08-19 13:36:39,276 [Process: 0] EPOCH 10:
2024-08-19 13:36:39,278 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:40,245 [Process: 0] Synchronize training processes
2024-08-19 13:36:40,246 [Process: 0] Evaluating...
2024-08-19 13:36:40,247 [Process: 0] EPOCH 11:
2024-08-19 13:36:40,249 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.1462, 0.3279, 0.3125,  ..., 0.3252, 0.1191, 0.3596],
         [0.1462, 0.2010, 0.2070,  ..., 0.2001, 0.1191, 0.1833],
         [0.5613, 0.2010, 0.2070,  ..., 0.1985, 0.6426, 0.1833],
         [0.1462, 0.2701, 0.2736,  ..., 0.2762, 0.1191, 0.2737]],
        [[0.4007, 0.3358, 0.3508,  ..., 0.3677, 0.3475, 0.3183],
         [0.1752, 0.1926, 0.1991,  ..., 0.1873, 0.1909, 0.2037],
         [0.1752, 0.1925, 0.1991,  ..., 0.1869, 0.1909, 0.2037],
         [0.2490, 0.2791, 0.2510,  ..., 0.2581, 0.2706, 0.2743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1542, 0.3187, 0.3359,  ..., 0.3554, 0.3266, 0.3052],
         [0.1542, 0.1955, 0.1926,  ..., 0.1903, 0.1966, 0.2021],
         [0.5374, 0.1955, 0.1884,  ..., 0.1808, 0.1909, 0.2021],
         [0.1542, 0.2904, 0.2832,  ..., 0.2736, 0.2859, 0.2907]],
        [[0.3914, 0.3401, 0.4342,  ..., 0.4302, 0.3880, 0.0938],
         [0.1716, 0.1898, 0.1590,  ..., 0.1676, 0.1674, 0.0938],
         [0.1448, 0.1898, 0.1590,  ..., 0.1527, 0.1674, 0.7187],
         [0.2922, 0.2803, 0.2478,  ..., 0.2495, 0.2771, 0.0938]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1821, 0.3115, 0.3211,  ..., 0.3247, 0.1739, 0.3016],
         [0.1821, 0.2039, 0.1955,  ..., 0.1973, 0.1886, 0.2158],
         [0.4538, 0.2039, 0.1943,  ..., 0.1973, 0.4544, 0.2158],
         [0.1821, 0.2808, 0.2891,  ..., 0.2807, 0.1830, 0.2668]],
        [[0.3612, 0.2953, 0.3210,  ..., 0.3232, 0.3146, 0.2784],
         [0.1872, 0.2171, 0.2052,  ..., 0.2044, 0.2075, 0.2203],
         [0.1872, 0.2171, 0.2052,  ..., 0.2044, 0.2075, 0.2203],
         [0.2645, 0.2706, 0.2687,  ..., 0.2680, 0.2704, 0.2811]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:36:41,218 [Process: 0] Synchronize training processes
2024-08-19 13:36:41,218 [Process: 0] Evaluating...
2024-08-19 13:36:42,181 [Process: 0] EPOCH 12:
2024-08-19 13:36:42,185 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.3593, 0.3408,  ..., 0.3114, 0.2855, 0.3117],
         [0.2500, 0.1881, 0.1932,  ..., 0.2053, 0.2123, 0.2008],
         [0.2500, 0.1839, 0.1932,  ..., 0.2053, 0.2123, 0.2008],
         [0.2500, 0.2687, 0.2729,  ..., 0.2780, 0.2900, 0.2866]],
        [[0.2175, 0.2980, 0.3511,  ..., 0.3965, 0.3822, 0.1103],
         [0.2149, 0.2083, 0.1917,  ..., 0.1700, 0.1703, 0.1103],
         [0.2948, 0.2083, 0.1917,  ..., 0.1613, 0.1669, 0.6692],
         [0.2727, 0.2853, 0.2655,  ..., 0.2722, 0.2806, 0.1103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2247, 0.3391, 0.4005,  ..., 0.3401, 0.1710, 0.2944],
         [0.2019, 0.1926, 0.1739,  ..., 0.2019, 0.1710, 0.2115],
         [0.3664, 0.1926, 0.1739,  ..., 0.2019, 0.4811, 0.2115],
         [0.2070, 0.2758, 0.2517,  ..., 0.2561, 0.1768, 0.2827]],
        [[0.3453, 0.3639, 0.2880,  ..., 0.3352, 0.2959, 0.2092],
         [0.1866, 0.1846, 0.2179,  ..., 0.2013, 0.2116, 0.2092],
         [0.1866, 0.1846, 0.2179,  ..., 0.2013, 0.2116, 0.3460],
         [0.2815, 0.2669, 0.2761,  ..., 0.2622, 0.2808, 0.2357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.3734, 0.3440,  ..., 0.3004, 0.3688, 0.3552],
         [0.2500, 0.1810, 0.1819,  ..., 0.2022, 0.1818, 0.1781],
         [0.2500, 0.1752, 0.1819,  ..., 0.2022, 0.1818, 0.1781],
         [0.2500, 0.2704, 0.2922,  ..., 0.2952, 0.2677, 0.2885]],
        [[0.2033, 0.4024, 0.4400,  ..., 0.4199, 0.3761, 0.0774],
         [0.2118, 0.1660, 0.1579,  ..., 0.1538, 0.1827, 0.0774],
         [0.3191, 0.1627, 0.1520,  ..., 0.1523, 0.1770, 0.7677],
         [0.2658, 0.2688, 0.2502,  ..., 0.2740, 0.2642, 0.0774]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1431, 0.2991, 0.3319,  ..., 0.3513, 0.1865, 0.3078],
         [0.1431, 0.2052, 0.1883,  ..., 0.1888, 0.1865, 0.2055],
         [0.5707, 0.2052, 0.1883,  ..., 0.1888, 0.4102, 0.2055],
         [0.1431, 0.2905, 0.2916,  ..., 0.2712, 0.2167, 0.2812]],
        [[0.3335, 0.3392, 0.3509,  ..., 0.3733, 0.1556, 0.1716],
         [0.1932, 0.1989, 0.1914,  ..., 0.1778, 0.1597, 0.1716],
         [0.1932, 0.1989, 0.1914,  ..., 0.1778, 0.5291, 0.4702],
         [0.2802, 0.2631, 0.2664,  ..., 0.2711, 0.1556, 0.1865]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:36:43,157 [Process: 0] Synchronize training processes
2024-08-19 13:36:43,157 [Process: 0] Evaluating...
2024-08-19 13:36:43,159 [Process: 0] EPOCH 13:
2024-08-19 13:36:43,161 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:44,130 [Process: 0] Synchronize training processes
2024-08-19 13:36:44,130 [Process: 0] Evaluating...
2024-08-19 13:36:44,132 [Process: 0] EPOCH 14:
2024-08-19 13:36:44,134 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:45,105 [Process: 0] Synchronize training processes
2024-08-19 13:36:45,106 [Process: 0] Evaluating...
2024-08-19 13:36:45,107 [Process: 0] EPOCH 15:
2024-08-19 13:36:45,109 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:46,081 [Process: 0] Synchronize training processes
2024-08-19 13:36:46,081 [Process: 0] Evaluating...
2024-08-19 13:36:46,083 [Process: 0] EPOCH 16:
2024-08-19 13:36:46,085 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:47,053 [Process: 0] Synchronize training processes
2024-08-19 13:36:47,053 [Process: 0] Evaluating...
2024-08-19 13:36:47,055 [Process: 0] EPOCH 17:
2024-08-19 13:36:47,057 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.3623, 0.3307,  ..., 0.3653, 0.3735, 0.3014],
         [0.2500, 0.1821, 0.1899,  ..., 0.1799, 0.1756, 0.2105],
         [0.2500, 0.1821, 0.1899,  ..., 0.1799, 0.1756, 0.2105],
         [0.2500, 0.2736, 0.2895,  ..., 0.2750, 0.2753, 0.2777]],
        [[0.1681, 0.3880, 0.3265,  ..., 0.5544, 0.4362, 0.1222],
         [0.1681, 0.1699, 0.1885,  ..., 0.1130, 0.1503, 0.1222],
         [0.4957, 0.1699, 0.1885,  ..., 0.1041, 0.1399, 0.6334],
         [0.1681, 0.2723, 0.2965,  ..., 0.2286, 0.2736, 0.1222]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1856, 0.3556, 0.3339,  ..., 0.3914, 0.1774, 0.3081],
         [0.1856, 0.1834, 0.1965,  ..., 0.1696, 0.1774, 0.2007],
         [0.4302, 0.1834, 0.1965,  ..., 0.1696, 0.4593, 0.2007],
         [0.1985, 0.2775, 0.2731,  ..., 0.2695, 0.1858, 0.2904]],
        [[0.3357, 0.3407, 0.3691,  ..., 0.1869, 0.1151, 0.1498],
         [0.1903, 0.1942, 0.1845,  ..., 0.1869, 0.1151, 0.1498],
         [0.1903, 0.1942, 0.1845,  ..., 0.4195, 0.6547, 0.5505],
         [0.2836, 0.2709, 0.2618,  ..., 0.2067, 0.1151, 0.1498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1350, 0.4793, 0.3556,  ..., 0.3663, 0.2730, 0.2638],
         [0.1350, 0.1460, 0.1875,  ..., 0.1792, 0.2236, 0.2219],
         [0.5950, 0.1454, 0.1875,  ..., 0.1792, 0.2236, 0.2219],
         [0.1350, 0.2293, 0.2694,  ..., 0.2754, 0.2797, 0.2925]],
        [[0.1195, 0.3902, 0.5051,  ..., 0.4288, 0.3592, 0.0667],
         [0.1195, 0.1640, 0.1350,  ..., 0.1655, 0.1842, 0.0667],
         [0.6414, 0.1640, 0.1350,  ..., 0.1655, 0.1842, 0.7999],
         [0.1195, 0.2819, 0.2249,  ..., 0.2402, 0.2725, 0.0667]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1870, 0.2873, 0.3080,  ..., 0.2936, 0.1877, 0.2840],
         [0.1870, 0.2129, 0.2026,  ..., 0.2101, 0.1877, 0.2071],
         [0.4234, 0.2129, 0.2026,  ..., 0.2101, 0.4081, 0.2071],
         [0.2027, 0.2868, 0.2869,  ..., 0.2862, 0.2165, 0.3017]],
        [[0.3593, 0.3916, 0.3618,  ..., 0.4350, 0.3252, 0.1952],
         [0.1797, 0.1685, 0.1860,  ..., 0.1538, 0.1921, 0.1952],
         [0.1797, 0.1685, 0.1860,  ..., 0.1508, 0.1921, 0.3934],
         [0.2813, 0.2713, 0.2663,  ..., 0.2603, 0.2905, 0.2162]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:36:48,024 [Process: 0] Synchronize training processes
2024-08-19 13:36:48,025 [Process: 0] Evaluating...
2024-08-19 13:36:48,026 [Process: 0] EPOCH 18:
2024-08-19 13:36:48,028 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:49,002 [Process: 0] Synchronize training processes
2024-08-19 13:36:49,002 [Process: 0] Evaluating...
2024-08-19 13:36:49,004 [Process: 0] EPOCH 19:
2024-08-19 13:36:49,006 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0630, 0.5381, 0.2856,  ..., 0.4732, 0.2895, 0.2308],
         [0.0630, 0.1278, 0.2125,  ..., 0.1501, 0.2103, 0.2308],
         [0.8110, 0.1278, 0.2125,  ..., 0.1501, 0.2103, 0.2554],
         [0.0630, 0.2062, 0.2895,  ..., 0.2267, 0.2899, 0.2831]],
        [[0.0949, 0.3228, 0.3493,  ..., 0.4939, 0.3371, 0.1256],
         [0.0949, 0.1881, 0.1854,  ..., 0.1258, 0.1868, 0.1256],
         [0.7154, 0.1881, 0.1854,  ..., 0.1238, 0.1868, 0.6233],
         [0.0949, 0.3011, 0.2798,  ..., 0.2566, 0.2894, 0.1256]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1928, 0.3393, 0.2650,  ..., 0.2897, 0.2012, 0.3661],
         [0.1928, 0.1851, 0.2088,  ..., 0.2043, 0.2012, 0.1722],
         [0.3944, 0.1732, 0.2088,  ..., 0.2043, 0.3533, 0.1722],
         [0.2201, 0.3024, 0.3175,  ..., 0.3018, 0.2444, 0.2895]],
        [[0.3024, 0.3429, 0.4531,  ..., 0.4179, 0.3778, 0.1889],
         [0.1960, 0.1859, 0.1474,  ..., 0.1658, 0.1728, 0.1889],
         [0.1935, 0.1859, 0.1462,  ..., 0.1658, 0.1728, 0.4254],
         [0.3080, 0.2854, 0.2534,  ..., 0.2505, 0.2766, 0.1967]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1059, 0.4613, 0.2346,  ..., 0.5725, 0.2273, 0.2231],
         [0.1059, 0.1440, 0.2346,  ..., 0.1125, 0.2273, 0.2231],
         [0.6822, 0.1417, 0.2666,  ..., 0.1027, 0.2616, 0.2712],
         [0.1059, 0.2530, 0.2642,  ..., 0.2123, 0.2839, 0.2826]],
        [[0.1443, 0.2889, 0.3214,  ..., 0.4614, 0.2373, 0.1187],
         [0.1443, 0.1951, 0.1795,  ..., 0.1427, 0.2181, 0.1187],
         [0.5671, 0.1951, 0.1791,  ..., 0.1207, 0.2326, 0.6439],
         [0.1443, 0.3209, 0.3200,  ..., 0.2753, 0.3119, 0.1187]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2008, 0.2798, 0.4233,  ..., 0.4117, 0.1698, 0.2325],
         [0.2008, 0.1882, 0.1554,  ..., 0.1585, 0.1698, 0.2218],
         [0.3461, 0.1882, 0.1534,  ..., 0.1524, 0.4887, 0.2218],
         [0.2523, 0.3438, 0.2678,  ..., 0.2773, 0.1718, 0.3239]],
        [[0.2249, 0.2248, 0.3077,  ..., 0.4075, 0.3552, 0.2201],
         [0.2249, 0.2248, 0.1870,  ..., 0.1696, 0.1783, 0.2201],
         [0.2249, 0.2248, 0.1870,  ..., 0.1696, 0.1773, 0.2667],
         [0.3252, 0.3256, 0.3183,  ..., 0.2533, 0.2892, 0.2931]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:36:49,977 [Process: 0] Synchronize training processes
2024-08-19 13:36:49,977 [Process: 0] Evaluating...
2024-08-19 13:36:49,979 [Process: 0] EPOCH 20:
2024-08-19 13:36:49,981 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:50,951 [Process: 0] Synchronize training processes
2024-08-19 13:36:50,951 [Process: 0] Evaluating...
2024-08-19 13:36:50,953 [Process: 0] EPOCH 21:
2024-08-19 13:36:50,955 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2121, 0.2089, 0.1911,  ..., 0.4771, 0.2133, 0.1927],
         [0.2121, 0.2089, 0.1911,  ..., 0.1329, 0.2133, 0.1927],
         [0.3637, 0.3702, 0.4181,  ..., 0.1298, 0.3344, 0.4131],
         [0.2121, 0.2119, 0.1997,  ..., 0.2603, 0.2390, 0.2016]],
        [[0.1277, 0.5829, 0.5073,  ..., 0.6221, 0.3924, 0.1666],
         [0.1277, 0.1113, 0.1222,  ..., 0.1045, 0.1597, 0.1666],
         [0.6168, 0.0865, 0.1103,  ..., 0.1045, 0.1569, 0.5003],
         [0.1277, 0.2193, 0.2602,  ..., 0.1690, 0.2910, 0.1666]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1697, 0.2474, 0.3188,  ..., 0.6671, 0.1907, 0.3825],
         [0.1697, 0.2012, 0.1892,  ..., 0.0845, 0.1907, 0.1710],
         [0.4909, 0.2012, 0.1892,  ..., 0.0729, 0.4280, 0.1667],
         [0.1697, 0.3502, 0.3028,  ..., 0.1755, 0.1907, 0.2797]],
        [[0.1470, 0.2531, 0.2866,  ..., 0.2319, 0.2870, 0.2206],
         [0.1475, 0.2185, 0.2023,  ..., 0.2319, 0.2016, 0.2206],
         [0.5585, 0.2185, 0.2023,  ..., 0.2319, 0.2016, 0.2396],
         [0.1470, 0.3100, 0.3088,  ..., 0.3044, 0.3098, 0.3192]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0499, 0.2254, 0.1650,  ..., 0.3622, 0.2234, 0.2341],
         [0.0499, 0.2254, 0.1650,  ..., 0.1594, 0.2234, 0.2341],
         [0.8503, 0.2353, 0.5051,  ..., 0.1074, 0.3298, 0.2976],
         [0.0499, 0.3138, 0.1650,  ..., 0.3710, 0.2234, 0.2341]],
        [[0.0964, 0.2596, 0.3793,  ..., 0.4571, 0.2212, 0.1471],
         [0.0964, 0.2143, 0.1691,  ..., 0.1402, 0.2226, 0.1471],
         [0.7108, 0.1586, 0.1473,  ..., 0.0803, 0.1766, 0.5586],
         [0.0964, 0.3675, 0.3043,  ..., 0.3224, 0.3796, 0.1471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3033, 0.2179, 0.2167,  ..., 0.2904, 0.1893, 0.2167],
         [0.2002, 0.2179, 0.2167,  ..., 0.1785, 0.1893, 0.2167],
         [0.2056, 0.2546, 0.2643,  ..., 0.1734, 0.4322, 0.2284],
         [0.2910, 0.3095, 0.3023,  ..., 0.3577, 0.1893, 0.3382]],
        [[0.2174, 0.6008, 0.3083,  ..., 0.6499, 0.1766, 0.1289],
         [0.2174, 0.0992, 0.1729,  ..., 0.0840, 0.1766, 0.1289],
         [0.2814, 0.0934, 0.1679,  ..., 0.0754, 0.4702, 0.6132],
         [0.2839, 0.2065, 0.3509,  ..., 0.1908, 0.1766, 0.1289]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:36:51,923 [Process: 0] Synchronize training processes
2024-08-19 13:36:51,923 [Process: 0] Evaluating...
2024-08-19 13:36:52,884 [Process: 0] EPOCH 22:
2024-08-19 13:36:52,888 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1619, 0.2204, 0.1899,  ..., 0.5762, 0.1760, 0.2069],
         [0.1619, 0.2149, 0.1899,  ..., 0.1173, 0.1760, 0.2069],
         [0.5144, 0.2149, 0.4063,  ..., 0.1173, 0.4719, 0.3689],
         [0.1619, 0.3498, 0.2140,  ..., 0.1892, 0.1760, 0.2172]],
        [[0.1004, 0.3183, 0.5295,  ..., 0.5827, 0.2811, 0.0942],
         [0.1004, 0.1998, 0.1227,  ..., 0.1047, 0.1834, 0.0942],
         [0.6988, 0.1500, 0.1049,  ..., 0.0738, 0.1434, 0.7173],
         [0.1004, 0.3320, 0.2429,  ..., 0.2388, 0.3921, 0.0942]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2744, 0.3798, 0.3794,  ..., 0.5111, 0.2019, 0.3862],
         [0.2051, 0.1622, 0.1629,  ..., 0.1292, 0.2019, 0.1590],
         [0.2209, 0.1500, 0.1529,  ..., 0.1292, 0.3571, 0.1510],
         [0.2996, 0.3080, 0.3047,  ..., 0.2305, 0.2390, 0.3039]],
        [[0.2154, 0.2436, 0.2558,  ..., 0.2126, 0.1551, 0.0521],
         [0.2154, 0.2149, 0.1998,  ..., 0.2126, 0.1551, 0.0521],
         [0.2154, 0.2149, 0.1998,  ..., 0.3208, 0.5348, 0.8438],
         [0.3538, 0.3265, 0.3447,  ..., 0.2539, 0.1551, 0.0521]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0047, 0.4535, 0.2166,  ..., 0.5800, 0.2092, 0.2047],
         [0.0047, 0.1519, 0.2166,  ..., 0.1093, 0.2092, 0.2047],
         [0.9860, 0.1123, 0.2845,  ..., 0.0944, 0.3439, 0.2770],
         [0.0047, 0.2823, 0.2823,  ..., 0.2163, 0.2378, 0.3136]],
        [[0.1155, 0.2554, 0.5228,  ..., 0.4408, 0.2230, 0.1037],
         [0.1155, 0.2037, 0.1196,  ..., 0.1570, 0.1985, 0.1037],
         [0.6535, 0.1719, 0.1030,  ..., 0.1191, 0.1985, 0.6888],
         [0.1155, 0.3690, 0.2547,  ..., 0.2831, 0.3800, 0.1037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:36:53,859 [Process: 0] Synchronize training processes
2024-08-19 13:36:53,859 [Process: 0] Evaluating...
2024-08-19 13:36:53,861 [Process: 0] EPOCH 23:
2024-08-19 13:36:53,863 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:54,833 [Process: 0] Synchronize training processes
2024-08-19 13:36:54,834 [Process: 0] Evaluating...
2024-08-19 13:36:54,835 [Process: 0] EPOCH 24:
2024-08-19 13:36:54,837 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3377, 0.3249, 0.2638,  ..., 0.3813, 0.1392, 0.3006],
         [0.1825, 0.1744, 0.1905,  ..., 0.1580, 0.1392, 0.1874],
         [0.1582, 0.1744, 0.1905,  ..., 0.1547, 0.5825, 0.1767],
         [0.3216, 0.3263, 0.3552,  ..., 0.3060, 0.1392, 0.3354]],
        [[0.3499, 0.2513, 0.3687,  ..., 0.4438, 0.2097, 0.1508],
         [0.1739, 0.2029, 0.1696,  ..., 0.1424, 0.2097, 0.1508],
         [0.1714, 0.2029, 0.1657,  ..., 0.1424, 0.2097, 0.5477],
         [0.3049, 0.3428, 0.2960,  ..., 0.2715, 0.3710, 0.1508]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.3327, 0.6188,  ..., 0.6304, 0.1801, 0.1984],
         [0.2500, 0.1672, 0.1070,  ..., 0.0935, 0.1801, 0.1984],
         [0.2500, 0.1553, 0.1070,  ..., 0.0935, 0.4598, 0.3061],
         [0.2500, 0.3448, 0.1672,  ..., 0.1826, 0.1801, 0.2971]],
        [[0.1102, 0.1732, 0.6175,  ..., 0.6173, 0.1808, 0.1488],
         [0.1102, 0.1914, 0.0815,  ..., 0.1138, 0.1808, 0.1488],
         [0.6695, 0.1554, 0.0687,  ..., 0.0815, 0.1808, 0.5537],
         [0.1102, 0.4800, 0.2323,  ..., 0.1875, 0.4575, 0.1488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3684, 0.2815, 0.2786,  ..., 0.3304, 0.2121, 0.2704],
         [0.1835, 0.1850, 0.1878,  ..., 0.1680, 0.2103, 0.1848],
         [0.1639, 0.1815, 0.1878,  ..., 0.1680, 0.2239, 0.1726],
         [0.2842, 0.3521, 0.3459,  ..., 0.3336, 0.3537, 0.3721]],
        [[0.3494, 0.3846, 0.3865,  ..., 0.3634, 0.2109, 0.0600],
         [0.1717, 0.1710, 0.1619,  ..., 0.1658, 0.2109, 0.0600],
         [0.1696, 0.1710, 0.1619,  ..., 0.1647, 0.2417, 0.8199],
         [0.3093, 0.2733, 0.2897,  ..., 0.3061, 0.3366, 0.0600]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0961, 0.1747, 0.1808,  ..., 0.1999, 0.1728, 0.2048],
         [0.0961, 0.1747, 0.1808,  ..., 0.1999, 0.1728, 0.2048],
         [0.7116, 0.4312, 0.4452,  ..., 0.3752, 0.4816, 0.2553],
         [0.0961, 0.2194, 0.1932,  ..., 0.2250, 0.1728, 0.3351]],
        [[0.1119, 0.1402, 0.6774,  ..., 0.6645, 0.1307, 0.1534],
         [0.1200, 0.1507, 0.1162,  ..., 0.0807, 0.1268, 0.1534],
         [0.6561, 0.1402, 0.0742,  ..., 0.0807, 0.1268, 0.5399],
         [0.1119, 0.5690, 0.1321,  ..., 0.1741, 0.6158, 0.1534]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:36:55,805 [Process: 0] Synchronize training processes
2024-08-19 13:36:55,805 [Process: 0] Evaluating...
2024-08-19 13:36:55,807 [Process: 0] EPOCH 25:
2024-08-19 13:36:55,809 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:56,777 [Process: 0] Synchronize training processes
2024-08-19 13:36:56,777 [Process: 0] Evaluating...
2024-08-19 13:36:56,779 [Process: 0] EPOCH 26:
2024-08-19 13:36:56,781 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4325, 0.1839, 0.1873,  ..., 0.4315, 0.3088, 0.2167],
         [0.1679, 0.1984, 0.1873,  ..., 0.1559, 0.1838, 0.1847],
         [0.1529, 0.1839, 0.1873,  ..., 0.1559, 0.1676, 0.1847],
         [0.2467, 0.4338, 0.4382,  ..., 0.2566, 0.3398, 0.4139]],
        [[0.2576, 0.2042, 0.3295,  ..., 0.1709, 0.1972, 0.0628],
         [0.1944, 0.2042, 0.1845,  ..., 0.1709, 0.1972, 0.0628],
         [0.1944, 0.2042, 0.1845,  ..., 0.4581, 0.3175, 0.8117],
         [0.3535, 0.3875, 0.3015,  ..., 0.2002, 0.2882, 0.0628]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5213, 0.1749, 0.6358,  ..., 0.6389, 0.1652, 0.1848],
         [0.0083, 0.1935, 0.1214,  ..., 0.1142, 0.1652, 0.1848],
         [0.4620, 0.3754, 0.1214,  ..., 0.1142, 0.4968, 0.3273],
         [0.0083, 0.2562, 0.1214,  ..., 0.1326, 0.1728, 0.3031]],
        [[0.1138, 0.1477, 0.1374,  ..., 0.1526, 0.1275, 0.1138],
         [0.1138, 0.1983, 0.1617,  ..., 0.1622, 0.1275, 0.1138],
         [0.6586, 0.1364, 0.1374,  ..., 0.1526, 0.1275, 0.6587],
         [0.1138, 0.5176, 0.5635,  ..., 0.5326, 0.6174, 0.1138]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9272, 0.1788, 0.1844,  ..., 0.4804, 0.3653, 0.1877],
         [0.0243, 0.1788, 0.1844,  ..., 0.1501, 0.1773, 0.1900],
         [0.0243, 0.1788, 0.1844,  ..., 0.1501, 0.3083, 0.1877],
         [0.0243, 0.4635, 0.4467,  ..., 0.2193, 0.1490, 0.4347]],
        [[0.1870, 0.1986, 0.2555,  ..., 0.3869, 0.1799, 0.1226],
         [0.1870, 0.1986, 0.1921,  ..., 0.1781, 0.1799, 0.1226],
         [0.1870, 0.2020, 0.1921,  ..., 0.1781, 0.1799, 0.6321],
         [0.4391, 0.4007, 0.3602,  ..., 0.2569, 0.4602, 0.1226]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6281e-04, 1.8298e-01, 1.1149e-01,  ..., 1.6668e-01,
          1.9889e-01, 1.5727e-01],
         [4.6281e-04, 1.8298e-01, 1.1149e-01,  ..., 1.6668e-01,
          1.9889e-01, 1.5727e-01],
         [9.9861e-01, 4.2705e-01, 6.6553e-01,  ..., 4.9995e-01,
          1.9889e-01, 5.2819e-01],
         [4.6281e-04, 2.0698e-01, 1.1149e-01,  ..., 1.6668e-01,
          4.0334e-01, 1.5727e-01]],
        [[1.5436e-01, 1.3427e-01, 8.1411e-01,  ..., 8.3853e-01,
          1.5356e-01, 1.5664e-01],
         [1.5436e-01, 1.2938e-01, 6.1962e-02,  ..., 5.3823e-02,
          1.5356e-01, 1.5664e-01],
         [5.3692e-01, 1.2938e-01, 6.1962e-02,  ..., 5.3823e-02,
          1.5356e-01, 5.3008e-01],
         [1.5436e-01, 6.0697e-01, 6.1962e-02,  ..., 5.3823e-02,
          5.3932e-01, 1.5664e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:36:57,749 [Process: 0] Synchronize training processes
2024-08-19 13:36:57,749 [Process: 0] Evaluating...
2024-08-19 13:36:57,751 [Process: 0] EPOCH 27:
2024-08-19 13:36:57,753 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:58,724 [Process: 0] Synchronize training processes
2024-08-19 13:36:58,724 [Process: 0] Evaluating...
2024-08-19 13:36:58,726 [Process: 0] EPOCH 28:
2024-08-19 13:36:58,728 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9492, 0.1715, 0.3064,  ..., 0.6029, 0.5820, 0.1764],
         [0.0181, 0.1715, 0.1745,  ..., 0.1295, 0.1393, 0.1764],
         [0.0163, 0.1715, 0.1745,  ..., 0.1295, 0.1393, 0.1764],
         [0.0163, 0.4854, 0.3446,  ..., 0.1380, 0.1393, 0.4708]],
        [[0.2766, 0.1817, 0.2519,  ..., 0.1836, 0.1952, 0.1339],
         [0.1874, 0.1817, 0.1981,  ..., 0.1836, 0.1952, 0.1339],
         [0.1874, 0.1817, 0.1981,  ..., 0.1836, 0.1960, 0.5984],
         [0.3487, 0.4548, 0.3519,  ..., 0.4491, 0.4136, 0.1339]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0235, 0.1815, 0.1682,  ..., 0.1809, 0.2030, 0.1874],
         [0.0235, 0.1815, 0.1682,  ..., 0.1809, 0.2030, 0.1874],
         [0.9296, 0.2576, 0.4469,  ..., 0.3577, 0.2030, 0.1874],
         [0.0235, 0.3793, 0.2167,  ..., 0.2805, 0.3910, 0.4379]],
        [[0.0930, 0.1326, 0.7977,  ..., 0.7333, 0.1275, 0.0665],
         [0.0930, 0.1326, 0.0674,  ..., 0.0889, 0.1275, 0.0665],
         [0.7209, 0.1326, 0.0674,  ..., 0.0889, 0.1275, 0.8005],
         [0.0930, 0.6023, 0.0674,  ..., 0.0889, 0.6174, 0.0665]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8394, 0.1701, 0.1486,  ..., 0.4512, 0.7364, 0.1830],
         [0.0535, 0.1701, 0.1486,  ..., 0.1703, 0.0923, 0.1830],
         [0.0535, 0.1701, 0.1486,  ..., 0.1703, 0.0856, 0.1830],
         [0.0535, 0.4898, 0.5543,  ..., 0.2082, 0.0856, 0.4510]],
        [[0.2802, 0.2121, 0.2174,  ..., 0.1941, 0.1935, 0.0917],
         [0.1898, 0.1862, 0.1888,  ..., 0.1941, 0.1935, 0.0917],
         [0.1898, 0.1862, 0.1888,  ..., 0.1941, 0.2368, 0.7248],
         [0.3402, 0.4154, 0.4050,  ..., 0.4176, 0.3761, 0.0917]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2129, 0.3326, 0.1990,  ..., 0.1902, 0.5037, 0.5927],
         [0.2129, 0.1986, 0.1990,  ..., 0.1902, 0.1654, 0.1358],
         [0.3612, 0.1986, 0.3746,  ..., 0.3785, 0.1654, 0.1358],
         [0.2129, 0.2702, 0.2275,  ..., 0.2411, 0.1654, 0.1358]],
        [[0.0673, 0.1025, 0.6972,  ..., 0.6585, 0.0820, 0.0970],
         [0.0673, 0.1025, 0.1009,  ..., 0.1138, 0.0839, 0.0970],
         [0.7980, 0.1025, 0.1009,  ..., 0.1138, 0.0820, 0.7015],
         [0.0673, 0.6924, 0.1009,  ..., 0.1138, 0.7522, 0.1044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:36:59,697 [Process: 0] Synchronize training processes
2024-08-19 13:36:59,698 [Process: 0] Evaluating...
2024-08-19 13:36:59,700 [Process: 0] EPOCH 29:
2024-08-19 13:36:59,701 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:00,695 [Process: 0] Synchronize training processes
2024-08-19 13:37:00,695 [Process: 0] Evaluating...
2024-08-19 13:37:00,697 [Process: 0] EPOCH 30:
2024-08-19 13:37:00,699 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7671, 0.1603, 0.1313,  ..., 0.7435, 0.2109, 0.1387],
         [0.0788, 0.1603, 0.1313,  ..., 0.0855, 0.1582, 0.1387],
         [0.0770, 0.1603, 0.1313,  ..., 0.0855, 0.4727, 0.1387],
         [0.0770, 0.5190, 0.6060,  ..., 0.0855, 0.1582, 0.5839]],
        [[0.3506, 0.2116, 0.2101,  ..., 0.2052, 0.1789, 0.1061],
         [0.1776, 0.1981, 0.2058,  ..., 0.2052, 0.1789, 0.1061],
         [0.1776, 0.1981, 0.2058,  ..., 0.2052, 0.4354, 0.6818],
         [0.2942, 0.3922, 0.3783,  ..., 0.3843, 0.2068, 0.1061]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0095, 0.1943, 0.2053,  ..., 0.1742, 0.2419, 0.2021],
         [0.0095, 0.1943, 0.2053,  ..., 0.1742, 0.1894, 0.2021],
         [0.9715, 0.2675, 0.3250,  ..., 0.4775, 0.1894, 0.2417],
         [0.0095, 0.3439, 0.2644,  ..., 0.1742, 0.3793, 0.3541]],
        [[0.0754, 0.0554, 0.8216,  ..., 0.7792, 0.0619, 0.0854],
         [0.0754, 0.0554, 0.0595,  ..., 0.0788, 0.0619, 0.0854],
         [0.7737, 0.0554, 0.0595,  ..., 0.0710, 0.0619, 0.7439],
         [0.0754, 0.8339, 0.0595,  ..., 0.0710, 0.8142, 0.0854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6874, 0.1835, 0.1614,  ..., 0.7030, 0.5229, 0.1075],
         [0.1042, 0.1835, 0.1614,  ..., 0.0990, 0.1590, 0.1075],
         [0.1042, 0.1835, 0.1614,  ..., 0.0990, 0.1590, 0.1075],
         [0.1042, 0.4494, 0.5157,  ..., 0.0990, 0.1590, 0.6776]],
        [[0.3584, 0.2016, 0.1992,  ..., 0.1974, 0.1252, 0.0974],
         [0.1812, 0.2016, 0.1992,  ..., 0.1974, 0.1252, 0.0974],
         [0.1812, 0.2016, 0.2120,  ..., 0.2649, 0.6243, 0.7079],
         [0.2791, 0.3952, 0.3895,  ..., 0.3404, 0.1252, 0.0974]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0034, 0.2253, 0.2245,  ..., 0.2128, 0.2617, 0.2197],
         [0.0034, 0.2253, 0.2245,  ..., 0.2128, 0.2012, 0.2197],
         [0.9897, 0.2463, 0.2941,  ..., 0.3176, 0.2012, 0.3347],
         [0.0034, 0.3032, 0.2568,  ..., 0.2567, 0.3359, 0.2260]],
        [[0.0898, 0.0740, 0.7988,  ..., 0.8980, 0.0850, 0.0638],
         [0.0898, 0.0740, 0.0671,  ..., 0.0340, 0.0892, 0.0638],
         [0.7306, 0.0740, 0.0671,  ..., 0.0340, 0.0850, 0.8085],
         [0.0898, 0.7780, 0.0671,  ..., 0.0340, 0.7407, 0.0638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:01,668 [Process: 0] Synchronize training processes
2024-08-19 13:37:01,668 [Process: 0] Evaluating...
2024-08-19 13:37:01,670 [Process: 0] EPOCH 31:
2024-08-19 13:37:01,672 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:02,642 [Process: 0] Synchronize training processes
2024-08-19 13:37:02,642 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5795, 0.1719, 0.1638,  ..., 0.5785, 0.5791, 0.1527],
         [0.1535, 0.1817, 0.1832,  ..., 0.1405, 0.1622, 0.1527],
         [0.1335, 0.1719, 0.1638,  ..., 0.1405, 0.1293, 0.1527],
         [0.1335, 0.4745, 0.4892,  ..., 0.1405, 0.1293, 0.5418]],
        [[0.1917, 0.2013, 0.2561,  ..., 0.1745, 0.1340, 0.1270],
         [0.1917, 0.2013, 0.2039,  ..., 0.1745, 0.1340, 0.1270],
         [0.1917, 0.2013, 0.2039,  ..., 0.1745, 0.5980, 0.6190],
         [0.4250, 0.3962, 0.3361,  ..., 0.4766, 0.1340, 0.1270]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0043, 0.2193, 0.2188,  ..., 0.2198, 0.2117, 0.1917],
         [0.0043, 0.2193, 0.2188,  ..., 0.2198, 0.2117, 0.1917],
         [0.9870, 0.2974, 0.3342,  ..., 0.3108, 0.3267, 0.4114],
         [0.0043, 0.2640, 0.2283,  ..., 0.2496, 0.2499, 0.2052]],
        [[0.0733, 0.0788, 0.6966,  ..., 0.8275, 0.1030, 0.1046],
         [0.0733, 0.0788, 0.1011,  ..., 0.0575, 0.1030, 0.1046],
         [0.7800, 0.0788, 0.1011,  ..., 0.0575, 0.1030, 0.6861],
         [0.0733, 0.7635, 0.1011,  ..., 0.0575, 0.6910, 0.1046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7101, 0.1102, 0.1278,  ..., 0.7695, 0.7260, 0.1509],
         [0.0992, 0.1102, 0.1278,  ..., 0.0768, 0.0913, 0.1509],
         [0.0954, 0.1102, 0.1278,  ..., 0.0768, 0.0913, 0.1509],
         [0.0954, 0.6694, 0.6167,  ..., 0.0768, 0.0913, 0.5474]],
        [[0.1849, 0.1561, 0.1695,  ..., 0.1810, 0.1301, 0.0953],
         [0.1849, 0.1561, 0.1695,  ..., 0.1810, 0.1301, 0.0953],
         [0.1849, 0.1561, 0.1695,  ..., 0.1810, 0.6098, 0.7140],
         [0.4453, 0.5318, 0.4916,  ..., 0.4569, 0.1301, 0.0953]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0306, 0.2104, 0.2007,  ..., 0.2092, 0.1497, 0.1859],
         [0.0306, 0.2039, 0.2007,  ..., 0.2092, 0.1497, 0.1859],
         [0.9081, 0.3780, 0.3541,  ..., 0.3634, 0.5508, 0.4424],
         [0.0306, 0.2077, 0.2446,  ..., 0.2183, 0.1497, 0.1859]],
        [[0.0621, 0.0663, 0.9466,  ..., 0.7522, 0.0864, 0.0626],
         [0.0621, 0.0668, 0.0178,  ..., 0.0826, 0.1031, 0.0626],
         [0.8015, 0.0663, 0.0178,  ..., 0.0826, 0.0864, 0.8122],
         [0.0744, 0.8007, 0.0178,  ..., 0.0826, 0.7242, 0.0626]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:37:03,605 [Process: 0] EPOCH 32:
2024-08-19 13:37:03,608 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:04,578 [Process: 0] Synchronize training processes
2024-08-19 13:37:04,578 [Process: 0] Evaluating...
2024-08-19 13:37:04,580 [Process: 0] EPOCH 33:
2024-08-19 13:37:04,582 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8045, 0.1517, 0.1621,  ..., 0.8264, 0.5367, 0.0915],
         [0.0652, 0.1517, 0.1651,  ..., 0.0579, 0.1572, 0.0915],
         [0.0652, 0.1517, 0.1621,  ..., 0.0579, 0.1530, 0.0915],
         [0.0652, 0.5449, 0.5107,  ..., 0.0579, 0.1530, 0.7256]],
        [[0.1892, 0.1594, 0.1263,  ..., 0.2042, 0.1396, 0.1043],
         [0.1892, 0.1594, 0.1302,  ..., 0.2042, 0.1396, 0.1043],
         [0.3712, 0.1594, 0.1263,  ..., 0.2816, 0.5813, 0.6871],
         [0.2505, 0.5218, 0.6172,  ..., 0.3100, 0.1396, 0.1043]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3158, 0.2088, 0.2177,  ..., 0.1982, 0.1805, 0.1942],
         [0.2281, 0.2088, 0.2129,  ..., 0.1982, 0.1805, 0.1942],
         [0.2281, 0.2225, 0.2582,  ..., 0.3302, 0.4586, 0.4175],
         [0.2281, 0.3598, 0.3112,  ..., 0.2734, 0.1805, 0.1942]],
        [[0.1036, 0.0984, 0.8310,  ..., 0.9203, 0.0939, 0.0937],
         [0.1036, 0.1760, 0.0563,  ..., 0.0266, 0.1443, 0.0937],
         [0.6869, 0.0984, 0.0563,  ..., 0.0266, 0.0939, 0.7138],
         [0.1060, 0.6272, 0.0563,  ..., 0.0266, 0.6680, 0.0989]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:05,551 [Process: 0] Synchronize training processes
2024-08-19 13:37:05,552 [Process: 0] Evaluating...
2024-08-19 13:37:05,553 [Process: 0] EPOCH 34:
2024-08-19 13:37:05,555 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:06,526 [Process: 0] Synchronize training processes
2024-08-19 13:37:06,526 [Process: 0] Evaluating...
2024-08-19 13:37:06,528 [Process: 0] EPOCH 35:
2024-08-19 13:37:06,530 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7290, 0.1716, 0.1739,  ..., 0.6303, 0.6218, 0.1326],
         [0.0903, 0.1716, 0.1767,  ..., 0.1232, 0.1199, 0.1326],
         [0.0903, 0.1716, 0.1739,  ..., 0.1232, 0.1385, 0.1326],
         [0.0903, 0.4853, 0.4755,  ..., 0.1232, 0.1199, 0.6021]],
        [[0.1828, 0.1705, 0.1650,  ..., 0.2596, 0.1903, 0.1780],
         [0.1828, 0.1824, 0.1650,  ..., 0.2042, 0.1903, 0.1780],
         [0.1828, 0.1705, 0.1650,  ..., 0.2042, 0.3450, 0.4111],
         [0.4516, 0.4767, 0.5050,  ..., 0.3320, 0.2744, 0.2328]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0500, 0.2084, 0.2083,  ..., 0.2318, 0.1670, 0.1691],
         [0.0500, 0.2082, 0.2083,  ..., 0.2318, 0.1670, 0.1691],
         [0.8499, 0.2685, 0.2451,  ..., 0.2629, 0.4990, 0.4926],
         [0.0500, 0.3149, 0.3384,  ..., 0.2734, 0.1670, 0.1691]],
        [[0.0672, 0.0686, 0.7822,  ..., 0.8016, 0.0553, 0.0762],
         [0.0672, 0.0976, 0.0726,  ..., 0.0661, 0.0640, 0.0762],
         [0.7941, 0.0686, 0.0726,  ..., 0.0661, 0.0553, 0.7713],
         [0.0715, 0.7652, 0.0726,  ..., 0.0661, 0.8254, 0.0762]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9297, 0.1305, 0.1027,  ..., 0.4551, 0.6389, 0.1665],
         [0.0234, 0.1305, 0.1073,  ..., 0.1666, 0.1030, 0.1665],
         [0.0234, 0.1305, 0.1027,  ..., 0.1666, 0.1552, 0.1665],
         [0.0234, 0.6084, 0.6873,  ..., 0.2117, 0.1030, 0.5004]],
        [[0.1704, 0.1311, 0.1422,  ..., 0.1915, 0.0228, 0.0430],
         [0.1704, 0.1311, 0.1422,  ..., 0.1915, 0.0228, 0.0430],
         [0.4418, 0.1311, 0.1422,  ..., 0.1915, 0.9317, 0.8709],
         [0.2174, 0.6067, 0.5733,  ..., 0.4255, 0.0228, 0.0430]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1780, 0.1985, 0.1821,  ..., 0.2028, 0.1252, 0.1278],
         [0.1780, 0.1985, 0.1821,  ..., 0.2028, 0.1252, 0.1278],
         [0.4659, 0.4044, 0.4538,  ..., 0.3429, 0.6245, 0.6165],
         [0.1780, 0.1985, 0.1821,  ..., 0.2516, 0.1252, 0.1278]],
        [[0.0781, 0.0516, 0.7070,  ..., 0.5982, 0.0730, 0.0709],
         [0.0781, 0.0641, 0.0966,  ..., 0.1339, 0.0905, 0.0709],
         [0.7429, 0.0516, 0.0946,  ..., 0.1339, 0.0730, 0.7714],
         [0.1008, 0.8327, 0.1018,  ..., 0.1339, 0.7634, 0.0869]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:07,498 [Process: 0] Synchronize training processes
2024-08-19 13:37:07,498 [Process: 0] Evaluating...
2024-08-19 13:37:07,500 [Process: 0] EPOCH 36:
2024-08-19 13:37:07,502 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:08,527 [Process: 0] Synchronize training processes
2024-08-19 13:37:08,527 [Process: 0] Evaluating...
2024-08-19 13:37:08,529 [Process: 0] EPOCH 37:
2024-08-19 13:37:08,531 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8322, 0.1513, 0.1951,  ..., 0.8588, 0.4076, 0.1485],
         [0.0478, 0.1514, 0.1951,  ..., 0.0471, 0.1401, 0.1485],
         [0.0722, 0.1513, 0.1951,  ..., 0.0471, 0.3123, 0.1485],
         [0.0478, 0.5459, 0.4147,  ..., 0.0471, 0.1401, 0.5546]],
        [[0.1827, 0.1627, 0.1832,  ..., 0.1841, 0.0589, 0.0405],
         [0.1827, 0.1627, 0.1832,  ..., 0.1841, 0.0589, 0.0405],
         [0.1829, 0.1627, 0.1832,  ..., 0.1841, 0.8234, 0.8784],
         [0.4516, 0.5120, 0.4503,  ..., 0.4477, 0.0589, 0.0405]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2293, 0.2089, 0.2293,  ..., 0.2194, 0.1684, 0.1776],
         [0.2293, 0.2089, 0.2061,  ..., 0.2111, 0.1684, 0.1776],
         [0.2293, 0.3411, 0.3179,  ..., 0.3018, 0.4947, 0.4672],
         [0.3120, 0.2412, 0.2468,  ..., 0.2678, 0.1684, 0.1776]],
        [[0.1165, 0.0510, 0.8065,  ..., 0.7548, 0.1217, 0.0930],
         [0.1165, 0.0510, 0.0653,  ..., 0.0892, 0.1321, 0.0930],
         [0.6361, 0.0510, 0.0641,  ..., 0.0780, 0.1217, 0.7211],
         [0.1310, 0.8469, 0.0641,  ..., 0.0780, 0.6244, 0.0930]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2474, 0.1245, 0.2555,  ..., 0.8787, 0.2564, 0.1613],
         [0.1337, 0.1245, 0.1832,  ..., 0.0404, 0.1464, 0.1613],
         [0.4852, 0.1245, 0.1832,  ..., 0.0404, 0.4507, 0.1613],
         [0.1337, 0.6266, 0.3780,  ..., 0.0404, 0.1464, 0.5160]],
        [[0.1604, 0.2993, 0.3235,  ..., 0.1487, 0.1128, 0.1042],
         [0.1592, 0.1823, 0.1799,  ..., 0.1487, 0.1128, 0.1042],
         [0.1592, 0.1823, 0.1799,  ..., 0.1487, 0.6617, 0.6873],
         [0.5212, 0.3362, 0.3168,  ..., 0.5539, 0.1128, 0.1042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0372, 0.2148, 0.2365,  ..., 0.2981, 0.1911, 0.1664],
         [0.0372, 0.2148, 0.1991,  ..., 0.1772, 0.1763, 0.1664],
         [0.8883, 0.2168, 0.3249,  ..., 0.1772, 0.4562, 0.5007],
         [0.0372, 0.3537, 0.2396,  ..., 0.3476, 0.1763, 0.1664]],
        [[0.1009, 0.0871, 0.9481,  ..., 0.8112, 0.0346, 0.0902],
         [0.1009, 0.1071, 0.0179,  ..., 0.0814, 0.0383, 0.0902],
         [0.6974, 0.0871, 0.0170,  ..., 0.0537, 0.0346, 0.7294],
         [0.1009, 0.7186, 0.0170,  ..., 0.0537, 0.8925, 0.0902]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:09,567 [Process: 0] Synchronize training processes
2024-08-19 13:37:09,567 [Process: 0] Evaluating...
2024-08-19 13:37:09,569 [Process: 0] EPOCH 38:
2024-08-19 13:37:09,571 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:10,606 [Process: 0] Synchronize training processes
2024-08-19 13:37:10,607 [Process: 0] Evaluating...
2024-08-19 13:37:10,609 [Process: 0] EPOCH 39:
2024-08-19 13:37:10,610 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4448, 0.1219, 0.1303,  ..., 0.7920, 0.4553, 0.1240],
         [0.1723, 0.1219, 0.1303,  ..., 0.0693, 0.1672, 0.1240],
         [0.2106, 0.1219, 0.1303,  ..., 0.0693, 0.2103, 0.1240],
         [0.1723, 0.6343, 0.6092,  ..., 0.0693, 0.1672, 0.6280]],
        [[0.1958, 0.1473, 0.1347,  ..., 0.1766, 0.0858, 0.0879],
         [0.1958, 0.1473, 0.1347,  ..., 0.1766, 0.0858, 0.0879],
         [0.2402, 0.1473, 0.1347,  ..., 0.4556, 0.7427, 0.7363],
         [0.3682, 0.5581, 0.5960,  ..., 0.1911, 0.0858, 0.0879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0807, 0.2901, 0.4104,  ..., 0.6605, 0.1496, 0.1029],
         [0.0807, 0.2128, 0.1820,  ..., 0.1307, 0.1496, 0.1029],
         [0.7434, 0.2465, 0.1820,  ..., 0.0872, 0.5511, 0.6913],
         [0.0953, 0.2505, 0.2255,  ..., 0.1216, 0.1496, 0.1029]],
        [[0.0697, 0.0333, 0.8910,  ..., 0.6132, 0.0478, 0.1049],
         [0.0697, 0.0333, 0.0391,  ..., 0.1199, 0.0536, 0.1049],
         [0.7908, 0.0333, 0.0349,  ..., 0.0994, 0.0478, 0.6854],
         [0.0697, 0.9000, 0.0349,  ..., 0.1674, 0.8508, 0.1049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6276, 0.1269, 0.1264,  ..., 0.5016, 0.7134, 0.1446],
         [0.1241, 0.1269, 0.1264,  ..., 0.1549, 0.0955, 0.1446],
         [0.1241, 0.1269, 0.1264,  ..., 0.1529, 0.0955, 0.1446],
         [0.1241, 0.6192, 0.6208,  ..., 0.1906, 0.0955, 0.5662]],
        [[0.1946, 0.3109, 0.2245,  ..., 0.2220, 0.1860, 0.0851],
         [0.1946, 0.1666, 0.1558,  ..., 0.1698, 0.1860, 0.0851],
         [0.3754, 0.1652, 0.1558,  ..., 0.1698, 0.4358, 0.7447],
         [0.2355, 0.3574, 0.4639,  ..., 0.4384, 0.1922, 0.0851]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0104, 0.2536, 0.6263,  ..., 0.8404, 0.1152, 0.0871],
         [0.0104, 0.2136, 0.1418,  ..., 0.0532, 0.1152, 0.0871],
         [0.9687, 0.2791, 0.0968,  ..., 0.0532, 0.6545, 0.7387],
         [0.0104, 0.2537, 0.1351,  ..., 0.0532, 0.1152, 0.0871]],
        [[0.0876, 0.0354, 0.8096,  ..., 0.9301, 0.0259, 0.1067],
         [0.0876, 0.0354, 0.0635,  ..., 0.0233, 0.0265, 0.1067],
         [0.7372, 0.0354, 0.0635,  ..., 0.0233, 0.0259, 0.6798],
         [0.0876, 0.8937, 0.0635,  ..., 0.0233, 0.9217, 0.1067]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:11,648 [Process: 0] Synchronize training processes
2024-08-19 13:37:11,648 [Process: 0] Evaluating...
2024-08-19 13:37:11,650 [Process: 0] EPOCH 40:
2024-08-19 13:37:11,651 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:12,686 [Process: 0] Synchronize training processes
2024-08-19 13:37:12,686 [Process: 0] Evaluating...
2024-08-19 13:37:12,688 [Process: 0] EPOCH 41:
2024-08-19 13:37:12,689 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6432, 0.0839, 0.1308,  ..., 0.7039, 0.5681, 0.1653],
         [0.1189, 0.0854, 0.1308,  ..., 0.0887, 0.1440, 0.1655],
         [0.1189, 0.0839, 0.1308,  ..., 0.0887, 0.1440, 0.1653],
         [0.1189, 0.7468, 0.6075,  ..., 0.1187, 0.1440, 0.5040]],
        [[0.1268, 0.1103, 0.1693,  ..., 0.1082, 0.1072, 0.0513],
         [0.1268, 0.1203, 0.1693,  ..., 0.1082, 0.1072, 0.0513],
         [0.6197, 0.1103, 0.1838,  ..., 0.1082, 0.6784, 0.8460],
         [0.1268, 0.6591, 0.4777,  ..., 0.6754, 0.1072, 0.0513]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0417, 0.2541, 0.7955,  ..., 0.8460, 0.0819, 0.1108],
         [0.0417, 0.2053, 0.0875,  ..., 0.0513, 0.0819, 0.1108],
         [0.8748, 0.2053, 0.0585,  ..., 0.0513, 0.7543, 0.6675],
         [0.0417, 0.3352, 0.0585,  ..., 0.0513, 0.0819, 0.1108]],
        [[0.0660, 0.0887, 0.9118,  ..., 0.8765, 0.0415, 0.1111],
         [0.0660, 0.1167, 0.0294,  ..., 0.0412, 0.0656, 0.1111],
         [0.8020, 0.0887, 0.0294,  ..., 0.0412, 0.0415, 0.6442],
         [0.0660, 0.7059, 0.0294,  ..., 0.0412, 0.8514, 0.1336]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9500, 0.1824, 0.1996,  ..., 0.8858, 0.6893, 0.1163],
         [0.0167, 0.1550, 0.1897,  ..., 0.0395, 0.1036, 0.1165],
         [0.0167, 0.1550, 0.1897,  ..., 0.0373, 0.1036, 0.1163],
         [0.0167, 0.5076, 0.4211,  ..., 0.0373, 0.1036, 0.6510]],
        [[0.1848, 0.2102, 0.1196,  ..., 0.1388, 0.1729, 0.1837],
         [0.1848, 0.1586, 0.1221,  ..., 0.1388, 0.1729, 0.1837],
         [0.2837, 0.1586, 0.1196,  ..., 0.1388, 0.2525, 0.4275],
         [0.3467, 0.4725, 0.6388,  ..., 0.5836, 0.4017, 0.2050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0456, 0.3231, 0.4825,  ..., 0.8781, 0.0670, 0.1208],
         [0.0456, 0.2105, 0.1655,  ..., 0.0416, 0.0670, 0.1208],
         [0.8632, 0.2105, 0.1655,  ..., 0.0401, 0.7989, 0.6376],
         [0.0456, 0.2560, 0.1864,  ..., 0.0401, 0.0670, 0.1208]],
        [[0.0578, 0.0823, 0.7683,  ..., 0.9070, 0.0536, 0.0872],
         [0.0578, 0.0891, 0.0953,  ..., 0.0310, 0.0627, 0.0872],
         [0.8266, 0.0823, 0.0682,  ..., 0.0310, 0.0536, 0.7385],
         [0.0578, 0.7463, 0.0682,  ..., 0.0310, 0.8301, 0.0872]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:13,724 [Process: 0] Synchronize training processes
2024-08-19 13:37:13,725 [Process: 0] Evaluating...
2024-08-19 13:37:14,729 [Process: 0] EPOCH 42:
2024-08-19 13:37:14,733 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9277, 0.1759, 0.1305,  ..., 0.2498, 0.8755, 0.1333],
         [0.0241, 0.1759, 0.1305,  ..., 0.1850, 0.0415, 0.1333],
         [0.0241, 0.1840, 0.1305,  ..., 0.1850, 0.0415, 0.1333],
         [0.0241, 0.4643, 0.6086,  ..., 0.3802, 0.0415, 0.6002]],
        [[0.1555, 0.1083, 0.1301,  ..., 0.1561, 0.1800, 0.1761],
         [0.1555, 0.1083, 0.1301,  ..., 0.1561, 0.1699, 0.1653],
         [0.5190, 0.1083, 0.1301,  ..., 0.1561, 0.4801, 0.4934],
         [0.1700, 0.6750, 0.6096,  ..., 0.5317, 0.1699, 0.1653]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1295, 0.2060, 0.5930,  ..., 0.8145, 0.0741, 0.1056],
         [0.1295, 0.2060, 0.1320,  ..., 0.0618, 0.0741, 0.1056],
         [0.6115, 0.3330, 0.1320,  ..., 0.0618, 0.7778, 0.6833],
         [0.1295, 0.2549, 0.1431,  ..., 0.0618, 0.0741, 0.1056]],
        [[0.0743, 0.0423, 0.9007,  ..., 0.7342, 0.0656, 0.0952],
         [0.0743, 0.0423, 0.0331,  ..., 0.1045, 0.0833, 0.0952],
         [0.7772, 0.0423, 0.0331,  ..., 0.0807, 0.0656, 0.7144],
         [0.0743, 0.8732, 0.0331,  ..., 0.0807, 0.7855, 0.0952]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:15,729 [Process: 0] Synchronize training processes
2024-08-19 13:37:15,729 [Process: 0] Evaluating...
2024-08-19 13:37:15,731 [Process: 0] EPOCH 43:
2024-08-19 13:37:15,732 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:16,766 [Process: 0] Synchronize training processes
2024-08-19 13:37:16,767 [Process: 0] Evaluating...
2024-08-19 13:37:16,769 [Process: 0] EPOCH 44:
2024-08-19 13:37:16,770 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6324, 0.1740, 0.1352,  ..., 0.7937, 0.3105, 0.1141],
         [0.1139, 0.1740, 0.1352,  ..., 0.0688, 0.1864, 0.1141],
         [0.1398, 0.2279, 0.1352,  ..., 0.0688, 0.3129, 0.1141],
         [0.1139, 0.4241, 0.5943,  ..., 0.0688, 0.1902, 0.6576]],
        [[0.1666, 0.1438, 0.1674,  ..., 0.1448, 0.0693, 0.0590],
         [0.1666, 0.1438, 0.1674,  ..., 0.1448, 0.0693, 0.0590],
         [0.4371, 0.1438, 0.1674,  ..., 0.1448, 0.7920, 0.8229],
         [0.2297, 0.5687, 0.4978,  ..., 0.5657, 0.0693, 0.0590]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0348, 0.1817, 0.6796,  ..., 0.7840, 0.0834, 0.0794],
         [0.0348, 0.1840, 0.1068,  ..., 0.0720, 0.0834, 0.0794],
         [0.8957, 0.3936, 0.1068,  ..., 0.0720, 0.7499, 0.7617],
         [0.0348, 0.2407, 0.1068,  ..., 0.0720, 0.0834, 0.0794]],
        [[0.0725, 0.0502, 0.7389,  ..., 0.8221, 0.0763, 0.0769],
         [0.0725, 0.0587, 0.0870,  ..., 0.0600, 0.1012, 0.0769],
         [0.7826, 0.0502, 0.0870,  ..., 0.0590, 0.0763, 0.7692],
         [0.0725, 0.8408, 0.0870,  ..., 0.0590, 0.7463, 0.0769]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7678, 0.1301, 0.0970,  ..., 0.1712, 0.4685, 0.1439],
         [0.0774, 0.1301, 0.0990,  ..., 0.1607, 0.1636, 0.1439],
         [0.0774, 0.1301, 0.0970,  ..., 0.1607, 0.2042, 0.1439],
         [0.0774, 0.6096, 0.7069,  ..., 0.5073, 0.1636, 0.5682]],
        [[0.1733, 0.1670, 0.1621,  ..., 0.1718, 0.3127, 0.0640],
         [0.1733, 0.1670, 0.1621,  ..., 0.1718, 0.1954, 0.0584],
         [0.3882, 0.1670, 0.1621,  ..., 0.1718, 0.1954, 0.8192],
         [0.2652, 0.4991, 0.5136,  ..., 0.4846, 0.2964, 0.0584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2185, 0.1598, 0.6206,  ..., 0.8825, 0.0794, 0.0686],
         [0.2185, 0.1598, 0.1257,  ..., 0.0392, 0.0794, 0.0686],
         [0.3446, 0.4241, 0.1280,  ..., 0.0392, 0.7617, 0.7941],
         [0.2185, 0.2563, 0.1257,  ..., 0.0392, 0.0794, 0.0686]],
        [[0.0613, 0.0334, 0.8869,  ..., 0.7630, 0.0533, 0.0754],
         [0.0613, 0.0340, 0.0377,  ..., 0.0790, 0.0690, 0.0754],
         [0.8160, 0.0334, 0.0377,  ..., 0.0790, 0.0533, 0.7737],
         [0.0613, 0.8993, 0.0377,  ..., 0.0790, 0.8244, 0.0754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:17,804 [Process: 0] Synchronize training processes
2024-08-19 13:37:17,805 [Process: 0] Evaluating...
2024-08-19 13:37:17,806 [Process: 0] EPOCH 45:
2024-08-19 13:37:17,808 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:18,842 [Process: 0] Synchronize training processes
2024-08-19 13:37:18,842 [Process: 0] Evaluating...
2024-08-19 13:37:18,844 [Process: 0] EPOCH 46:
2024-08-19 13:37:18,846 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8862, 0.1588, 0.2119,  ..., 0.8582, 0.6455, 0.1046],
         [0.0379, 0.1588, 0.1552,  ..., 0.0501, 0.1182, 0.1046],
         [0.0379, 0.1588, 0.1552,  ..., 0.0459, 0.1182, 0.1046],
         [0.0379, 0.5236, 0.4776,  ..., 0.0459, 0.1182, 0.6861]],
        [[0.1976, 0.1498, 0.1321,  ..., 0.1524, 0.1557, 0.0233],
         [0.1836, 0.1498, 0.1321,  ..., 0.1524, 0.1557, 0.0233],
         [0.2387, 0.1498, 0.1321,  ..., 0.1524, 0.5000, 0.9302],
         [0.3801, 0.5505, 0.6038,  ..., 0.5427, 0.1887, 0.0233]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2033, 0.1788, 0.8787,  ..., 0.8743, 0.0554, 0.0495],
         [0.2033, 0.2067, 0.0520,  ..., 0.0419, 0.0554, 0.0495],
         [0.2290, 0.3726, 0.0347,  ..., 0.0419, 0.8339, 0.8514],
         [0.3643, 0.2419, 0.0347,  ..., 0.0419, 0.0554, 0.0495]],
        [[0.1025, 0.0206, 0.8714,  ..., 0.7773, 0.0382, 0.0561],
         [0.1025, 0.0263, 0.0592,  ..., 0.1044, 0.0558, 0.0561],
         [0.6925, 0.0206, 0.0347,  ..., 0.0591, 0.0382, 0.8317],
         [0.1025, 0.9325, 0.0347,  ..., 0.0591, 0.8678, 0.0561]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8498, 0.1172, 0.1039,  ..., 0.7214, 0.3646, 0.0797],
         [0.0501, 0.1172, 0.1063,  ..., 0.0954, 0.1757, 0.0797],
         [0.0501, 0.1172, 0.1039,  ..., 0.0916, 0.2840, 0.0797],
         [0.0501, 0.6484, 0.6859,  ..., 0.0916, 0.1757, 0.7610]],
        [[0.1897, 0.1414, 0.1601,  ..., 0.1834, 0.1180, 0.0611],
         [0.1895, 0.1414, 0.1718,  ..., 0.1834, 0.1180, 0.0611],
         [0.3171, 0.1414, 0.1601,  ..., 0.1834, 0.6461, 0.8167],
         [0.3037, 0.5759, 0.5079,  ..., 0.4497, 0.1180, 0.0611]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0405, 0.1743, 0.7209,  ..., 0.9195, 0.1196, 0.1194],
         [0.0405, 0.1743, 0.0969,  ..., 0.0268, 0.1196, 0.1194],
         [0.8786, 0.4686, 0.0911,  ..., 0.0268, 0.6393, 0.6084],
         [0.0405, 0.1827, 0.0911,  ..., 0.0268, 0.1216, 0.1527]],
        [[0.0885, 0.0689, 0.9118,  ..., 0.0923, 0.0338, 0.0882],
         [0.0885, 0.1004, 0.0294,  ..., 0.1419, 0.0467, 0.0867],
         [0.7345, 0.0689, 0.0294,  ..., 0.0923, 0.0338, 0.7384],
         [0.0885, 0.7618, 0.0294,  ..., 0.6735, 0.8857, 0.0867]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:19,879 [Process: 0] Synchronize training processes
2024-08-19 13:37:19,880 [Process: 0] Evaluating...
2024-08-19 13:37:19,881 [Process: 0] EPOCH 47:
2024-08-19 13:37:19,883 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:20,917 [Process: 0] Synchronize training processes
2024-08-19 13:37:20,918 [Process: 0] Evaluating...
2024-08-19 13:37:20,919 [Process: 0] EPOCH 48:
2024-08-19 13:37:20,921 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9603, 0.1357, 0.1362,  ..., 0.8377, 0.8750, 0.0865],
         [0.0132, 0.1357, 0.1362,  ..., 0.0541, 0.0417, 0.0865],
         [0.0132, 0.1363, 0.1362,  ..., 0.0541, 0.0417, 0.0865],
         [0.0132, 0.5923, 0.5915,  ..., 0.0541, 0.0417, 0.7406]],
        [[0.2090, 0.1412, 0.1238,  ..., 0.1419, 0.1303, 0.0946],
         [0.1416, 0.1412, 0.1238,  ..., 0.1419, 0.1129, 0.0852],
         [0.5079, 0.1412, 0.1238,  ..., 0.1419, 0.6439, 0.7350],
         [0.1416, 0.5765, 0.6285,  ..., 0.5744, 0.1129, 0.0852]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0229, 0.1652, 0.4725,  ..., 0.9106, 0.1209, 0.1078],
         [0.0229, 0.1415, 0.2042,  ..., 0.0298, 0.1209, 0.1078],
         [0.9313, 0.5518, 0.1616,  ..., 0.0298, 0.6179, 0.6765],
         [0.0229, 0.1415, 0.1616,  ..., 0.0298, 0.1403, 0.1078]],
        [[0.0721, 0.0368, 0.9232,  ..., 0.0560, 0.1170, 0.0560],
         [0.0721, 0.0515, 0.0256,  ..., 0.0782, 0.1247, 0.0560],
         [0.7836, 0.0368, 0.0256,  ..., 0.0560, 0.1170, 0.8319],
         [0.0721, 0.8749, 0.0256,  ..., 0.8098, 0.6414, 0.0560]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8553, 0.0897, 0.0854,  ..., 0.7942, 0.5936, 0.0929],
         [0.0482, 0.0897, 0.0854,  ..., 0.0686, 0.1315, 0.0929],
         [0.0482, 0.0897, 0.0854,  ..., 0.0686, 0.1434, 0.0929],
         [0.0482, 0.7308, 0.7437,  ..., 0.0686, 0.1315, 0.7212]],
        [[0.1630, 0.1230, 0.1095,  ..., 0.1350, 0.1532, 0.1399],
         [0.1187, 0.1230, 0.1095,  ..., 0.1350, 0.1213, 0.1217],
         [0.5995, 0.1272, 0.1095,  ..., 0.1350, 0.6041, 0.6167],
         [0.1187, 0.6267, 0.6715,  ..., 0.5951, 0.1213, 0.1217]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0254, 0.2185, 0.8356,  ..., 0.9036, 0.0830, 0.1152],
         [0.0254, 0.2783, 0.0548,  ..., 0.0321, 0.0830, 0.1152],
         [0.9238, 0.2239, 0.0548,  ..., 0.0321, 0.7510, 0.6545],
         [0.0254, 0.2793, 0.0548,  ..., 0.0321, 0.0830, 0.1152]],
        [[0.0609, 0.0389, 0.9280,  ..., 0.7513, 0.0194, 0.0827],
         [0.0609, 0.0517, 0.0240,  ..., 0.1067, 0.0315, 0.0827],
         [0.8173, 0.0389, 0.0240,  ..., 0.0710, 0.0194, 0.7520],
         [0.0609, 0.8705, 0.0240,  ..., 0.0710, 0.9296, 0.0827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:21,958 [Process: 0] Synchronize training processes
2024-08-19 13:37:21,958 [Process: 0] Evaluating...
2024-08-19 13:37:21,960 [Process: 0] EPOCH 49:
2024-08-19 13:37:21,962 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:22,995 [Process: 0] Synchronize training processes
2024-08-19 13:37:22,996 [Process: 0] Evaluating...
2024-08-19 13:37:22,998 [Process: 0] EPOCH 50:
2024-08-19 13:37:22,999 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8857, 0.1004, 0.0960,  ..., 0.9078, 0.6828, 0.0529],
         [0.0381, 0.1074, 0.1012,  ..., 0.0307, 0.1058, 0.0529],
         [0.0381, 0.1004, 0.0960,  ..., 0.0307, 0.1057, 0.0529],
         [0.0381, 0.6918, 0.7068,  ..., 0.0307, 0.1057, 0.8412]],
        [[0.1376, 0.1592, 0.1464,  ..., 0.1327, 0.0912, 0.0821],
         [0.1376, 0.1592, 0.1464,  ..., 0.1348, 0.0912, 0.0821],
         [0.5872, 0.1653, 0.1491,  ..., 0.1327, 0.7264, 0.7536],
         [0.1376, 0.5163, 0.5581,  ..., 0.5998, 0.0912, 0.0821]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0527, 0.2300, 0.8709,  ..., 0.8246, 0.0873, 0.0411],
         [0.0527, 0.2141, 0.0437,  ..., 0.0739, 0.0873, 0.0411],
         [0.1206, 0.2808, 0.0427,  ..., 0.0508, 0.7381, 0.8766],
         [0.7740, 0.2751, 0.0427,  ..., 0.0508, 0.0873, 0.0411]],
        [[0.0604, 0.0391, 0.9240,  ..., 0.8907, 0.0246, 0.0919],
         [0.0604, 0.0466, 0.0253,  ..., 0.0364, 0.0386, 0.0919],
         [0.8187, 0.0391, 0.0253,  ..., 0.0364, 0.0246, 0.7243],
         [0.0604, 0.8751, 0.0253,  ..., 0.0364, 0.9121, 0.0919]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8453, 0.0566, 0.1214,  ..., 0.7812, 0.6464, 0.0861],
         [0.0563, 0.0566, 0.1214,  ..., 0.0745, 0.1179, 0.0861],
         [0.0492, 0.0566, 0.1214,  ..., 0.0721, 0.1179, 0.0861],
         [0.0492, 0.8302, 0.6359,  ..., 0.0721, 0.1179, 0.7417]],
        [[0.2968, 0.1066, 0.1068,  ..., 0.2190, 0.1236, 0.0901],
         [0.1792, 0.1066, 0.1068,  ..., 0.1703, 0.1236, 0.0901],
         [0.3042, 0.1066, 0.1068,  ..., 0.1825, 0.6292, 0.7296],
         [0.2199, 0.6802, 0.6796,  ..., 0.4281, 0.1236, 0.0901]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0941, 0.2071, 0.8456,  ..., 0.8888, 0.0379, 0.0433],
         [0.0941, 0.3901, 0.0515,  ..., 0.0410, 0.0379, 0.0433],
         [0.7060, 0.1527, 0.0515,  ..., 0.0351, 0.8862, 0.8700],
         [0.1058, 0.2501, 0.0515,  ..., 0.0351, 0.0379, 0.0433]],
        [[0.0323, 0.0206, 0.8550,  ..., 0.6736, 0.0083, 0.0534],
         [0.0323, 0.0278, 0.0483,  ..., 0.1088, 0.0083, 0.0534],
         [0.9032, 0.0206, 0.0483,  ..., 0.1088, 0.0083, 0.8397],
         [0.0323, 0.9311, 0.0483,  ..., 0.1088, 0.9751, 0.0534]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:37:24,031 [Process: 0] Synchronize training processes
2024-08-19 13:37:24,031 [Process: 0] Evaluating...
2024-08-19 13:37:24,033 [Process: 0] EPOCH 51:
2024-08-19 13:37:24,035 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:25,070 [Process: 0] Synchronize training processes
2024-08-19 13:37:25,070 [Process: 0] Evaluating...
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9546, 0.0695, 0.1400,  ..., 0.8311, 0.7180, 0.1109],
         [0.0151, 0.0695, 0.1318,  ..., 0.0570, 0.0940, 0.1116],
         [0.0151, 0.0695, 0.1318,  ..., 0.0560, 0.0940, 0.1109],
         [0.0151, 0.7914, 0.5965,  ..., 0.0560, 0.0940, 0.6666]],
        [[0.5965, 0.1595, 0.1093,  ..., 0.1393, 0.0965, 0.0771],
         [0.1414, 0.1513, 0.1093,  ..., 0.1393, 0.0965, 0.0771],
         [0.1219, 0.1513, 0.1093,  ..., 0.1393, 0.7106, 0.7686],
         [0.1402, 0.5379, 0.6721,  ..., 0.5821, 0.0965, 0.0771]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1253, 0.1571, 0.8704,  ..., 0.9005, 0.0627, 0.0491],
         [0.1253, 0.3575, 0.0432,  ..., 0.0332, 0.0627, 0.0491],
         [0.6240, 0.1767, 0.0432,  ..., 0.0332, 0.8119, 0.8528],
         [0.1253, 0.3087, 0.0432,  ..., 0.0332, 0.0627, 0.0491]],
        [[0.0547, 0.0418, 0.9399,  ..., 0.7615, 0.0250, 0.0591],
         [0.0547, 0.0418, 0.0200,  ..., 0.0795, 0.0250, 0.0591],
         [0.8360, 0.0418, 0.0200,  ..., 0.0795, 0.0250, 0.8227],
         [0.0547, 0.8745, 0.0200,  ..., 0.0795, 0.9249, 0.0591]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9066, 0.1062, 0.1598,  ..., 0.8861, 0.7809, 0.0935],
         [0.0311, 0.1062, 0.1247,  ..., 0.0380, 0.0733, 0.0935],
         [0.0311, 0.1062, 0.1247,  ..., 0.0380, 0.0729, 0.0935],
         [0.0311, 0.6813, 0.5908,  ..., 0.0380, 0.0729, 0.7195]],
        [[0.8304, 0.0981, 0.1029,  ..., 0.0847, 0.0967, 0.0901],
         [0.0599, 0.0981, 0.1029,  ..., 0.0847, 0.0967, 0.0901],
         [0.0548, 0.0981, 0.1029,  ..., 0.0847, 0.7099, 0.7298],
         [0.0548, 0.7056, 0.6913,  ..., 0.7460, 0.0967, 0.0901]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
2024-08-19 13:37:26,063 [Process: 0] EPOCH 52:
2024-08-19 13:37:26,066 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:27,060 [Process: 0] Synchronize training processes
2024-08-19 13:37:27,061 [Process: 0] Evaluating...
2024-08-19 13:37:27,062 [Process: 0] EPOCH 53:
2024-08-19 13:37:27,064 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0774, 0.1513, 0.9461,  ..., 0.9474, 0.0559, 0.0526],
         [0.0774, 0.2060, 0.0180,  ..., 0.0175, 0.0559, 0.0526],
         [0.2635, 0.2317, 0.0180,  ..., 0.0175, 0.8322, 0.8423],
         [0.5816, 0.4109, 0.0180,  ..., 0.0175, 0.0559, 0.0526]],
        [[0.0441, 0.0237, 0.9405,  ..., 0.9516, 0.0442, 0.0494],
         [0.0441, 0.0237, 0.0198,  ..., 0.0161, 0.0442, 0.0494],
         [0.8678, 0.0237, 0.0198,  ..., 0.0161, 0.0442, 0.8517],
         [0.0441, 0.9290, 0.0198,  ..., 0.0161, 0.8673, 0.0494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9261, 0.1196, 0.0851,  ..., 0.8134, 0.7992, 0.0947],
         [0.0246, 0.1196, 0.0851,  ..., 0.0632, 0.0669, 0.0947],
         [0.0246, 0.1196, 0.0851,  ..., 0.0617, 0.0669, 0.0947],
         [0.0246, 0.6412, 0.7447,  ..., 0.0617, 0.0669, 0.7160]],
        [[0.6859, 0.1297, 0.0610,  ..., 0.1609, 0.0399, 0.0402],
         [0.1103, 0.1297, 0.0610,  ..., 0.1609, 0.0399, 0.0402],
         [0.1019, 0.1297, 0.0610,  ..., 0.2457, 0.8802, 0.8795],
         [0.1019, 0.6109, 0.8170,  ..., 0.4326, 0.0399, 0.0402]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0347, 0.1734, 0.8906,  ..., 0.9175, 0.0471, 0.0705],
         [0.0322, 0.2190, 0.0365,  ..., 0.0275, 0.0471, 0.0705],
         [0.9009, 0.2963, 0.0365,  ..., 0.0275, 0.8587, 0.7884],
         [0.0322, 0.3113, 0.0365,  ..., 0.0275, 0.0471, 0.0705]],
        [[0.0531, 0.0199, 0.8508,  ..., 0.8010, 0.0211, 0.0605],
         [0.0531, 0.0199, 0.0497,  ..., 0.0725, 0.0211, 0.0605],
         [0.8406, 0.0199, 0.0497,  ..., 0.0632, 0.0211, 0.8186],
         [0.0531, 0.9403, 0.0497,  ..., 0.0632, 0.9368, 0.0605]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:37:28,104 [Process: 0] Synchronize training processes
2024-08-19 13:37:28,104 [Process: 0] Evaluating...
2024-08-19 13:37:28,106 [Process: 0] EPOCH 54:
2024-08-19 13:37:28,107 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:29,141 [Process: 0] Synchronize training processes
2024-08-19 13:37:29,141 [Process: 0] Evaluating...
2024-08-19 13:37:29,143 [Process: 0] EPOCH 55:
2024-08-19 13:37:29,145 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9572, 0.0727, 0.0960,  ..., 0.6017, 0.5768, 0.0625],
         [0.0143, 0.0727, 0.0960,  ..., 0.1469, 0.1392, 0.0625],
         [0.0143, 0.0727, 0.0960,  ..., 0.1223, 0.1447, 0.0625],
         [0.0143, 0.7819, 0.7119,  ..., 0.1292, 0.1392, 0.8126]],
        [[0.7351, 0.1226, 0.1092,  ..., 0.1031, 0.1586, 0.0550],
         [0.0918, 0.1226, 0.1092,  ..., 0.1052, 0.1586, 0.0550],
         [0.0865, 0.1226, 0.1092,  ..., 0.1031, 0.1954, 0.8350],
         [0.0865, 0.6322, 0.6725,  ..., 0.6886, 0.4874, 0.0550]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0168, 0.2025, 0.9676,  ..., 0.8615, 0.0729, 0.0611],
         [0.0168, 0.2441, 0.0108,  ..., 0.0462, 0.0729, 0.0611],
         [0.9495, 0.2110, 0.0108,  ..., 0.0462, 0.7812, 0.8166],
         [0.0168, 0.3424, 0.0108,  ..., 0.0462, 0.0729, 0.0611]],
        [[0.0598, 0.0207, 0.5931,  ..., 0.8799, 0.0128, 0.0718],
         [0.0598, 0.0207, 0.1354,  ..., 0.0400, 0.0128, 0.0718],
         [0.8207, 0.0207, 0.1361,  ..., 0.0400, 0.0128, 0.7847],
         [0.0598, 0.9378, 0.1354,  ..., 0.0400, 0.9616, 0.0718]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9418, 0.0647, 0.0652,  ..., 0.8434, 0.6950, 0.1170],
         [0.0194, 0.0647, 0.0652,  ..., 0.0522, 0.1089, 0.1170],
         [0.0194, 0.0647, 0.0652,  ..., 0.0522, 0.0980, 0.1178],
         [0.0194, 0.8058, 0.8044,  ..., 0.0522, 0.0980, 0.6482]],
        [[0.8763, 0.0746, 0.0798,  ..., 0.1716, 0.0320, 0.0402],
         [0.0449, 0.0746, 0.0798,  ..., 0.1684, 0.0320, 0.0402],
         [0.0394, 0.0746, 0.0798,  ..., 0.2716, 0.9041, 0.8793],
         [0.0394, 0.7763, 0.7605,  ..., 0.3884, 0.0320, 0.0402]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:37:30,178 [Process: 0] Synchronize training processes
2024-08-19 13:37:30,178 [Process: 0] Evaluating...
2024-08-19 13:37:30,180 [Process: 0] EPOCH 56:
2024-08-19 13:37:30,182 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0307, 0.1899, 0.9244,  ..., 0.9403, 0.0542, 0.0752],
         [0.0293, 0.4652, 0.0252,  ..., 0.0199, 0.0542, 0.0752],
         [0.9107, 0.1390, 0.0252,  ..., 0.0199, 0.8374, 0.7643],
         [0.0293, 0.2060, 0.0252,  ..., 0.0199, 0.0542, 0.0854]],
        [[0.0571, 0.0145, 0.9018,  ..., 0.8911, 0.0194, 0.0633],
         [0.0571, 0.0145, 0.0327,  ..., 0.0380, 0.0246, 0.0633],
         [0.8288, 0.0145, 0.0327,  ..., 0.0354, 0.0194, 0.8100],
         [0.0571, 0.9565, 0.0327,  ..., 0.0354, 0.9366, 0.0633]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8783, 0.1221, 0.0860,  ..., 0.4801, 0.1690, 0.1025],
         [0.0409, 0.1221, 0.0860,  ..., 0.1885, 0.1521, 0.1025],
         [0.0404, 0.1221, 0.0860,  ..., 0.1397, 0.4403, 0.1025],
         [0.0404, 0.6337, 0.7421,  ..., 0.1918, 0.2386, 0.6924]],
        [[0.2965, 0.0918, 0.1252,  ..., 0.1287, 0.1053, 0.0453],
         [0.1690, 0.1098, 0.1218,  ..., 0.1901, 0.1053, 0.0453],
         [0.1498, 0.0918, 0.1200,  ..., 0.1287, 0.6841, 0.8642],
         [0.3847, 0.7066, 0.6331,  ..., 0.5524, 0.1053, 0.0453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0183, 0.2484, 0.9426,  ..., 0.8663, 0.1112, 0.0635],
         [0.0183, 0.3260, 0.0191,  ..., 0.0446, 0.1112, 0.0635],
         [0.9452, 0.1659, 0.0191,  ..., 0.0446, 0.6613, 0.8095],
         [0.0183, 0.2596, 0.0191,  ..., 0.0446, 0.1163, 0.0635]],
        [[0.0644, 0.0291, 0.9475,  ..., 0.8770, 0.0208, 0.0398],
         [0.0644, 0.0291, 0.0175,  ..., 0.0410, 0.0208, 0.0398],
         [0.8068, 0.0291, 0.0175,  ..., 0.0410, 0.0208, 0.8807],
         [0.0644, 0.9127, 0.0175,  ..., 0.0410, 0.9377, 0.0398]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7798, 0.1367, 0.0601,  ..., 0.5761, 0.6730, 0.1248],
         [0.0880, 0.1010, 0.0601,  ..., 0.1623, 0.1143, 0.1248],
         [0.0661, 0.1010, 0.0601,  ..., 0.1362, 0.1063, 0.1308],
         [0.0661, 0.6613, 0.8196,  ..., 0.1254, 0.1063, 0.6196]],
        [[0.3208, 0.1004, 0.0572,  ..., 0.0864, 0.0631, 0.1020],
         [0.1802, 0.1004, 0.0572,  ..., 0.0864, 0.0631, 0.1020],
         [0.1480, 0.1004, 0.0572,  ..., 0.0864, 0.8106, 0.6941],
         [0.3510, 0.6987, 0.8284,  ..., 0.7409, 0.0631, 0.1020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:37:31,217 [Process: 0] Synchronize training processes
2024-08-19 13:37:31,217 [Process: 0] Evaluating...
2024-08-19 13:37:31,219 [Process: 0] EPOCH 57:
2024-08-19 13:37:31,221 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:32,256 [Process: 0] Synchronize training processes
2024-08-19 13:37:32,256 [Process: 0] Evaluating...
2024-08-19 13:37:32,258 [Process: 0] EPOCH 58:
2024-08-19 13:37:32,260 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0487, 0.1719, 0.9393,  ..., 0.8714, 0.0324, 0.0848],
         [0.0487, 0.1985, 0.0202,  ..., 0.0455, 0.0324, 0.0848],
         [0.8539, 0.3634, 0.0202,  ..., 0.0416, 0.9029, 0.7456],
         [0.0487, 0.2662, 0.0202,  ..., 0.0416, 0.0324, 0.0848]],
        [[0.0641, 0.0243, 0.9440,  ..., 0.6883, 0.0518, 0.0530],
         [0.0641, 0.0243, 0.0187,  ..., 0.2270, 0.1288, 0.0530],
         [0.8076, 0.0243, 0.0187,  ..., 0.0424, 0.0518, 0.8409],
         [0.0641, 0.9271, 0.0187,  ..., 0.0424, 0.7675, 0.0530]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8788, 0.0721, 0.0831,  ..., 0.8724, 0.8219, 0.1356],
         [0.0413, 0.0721, 0.0831,  ..., 0.0427, 0.0712, 0.1356],
         [0.0399, 0.0721, 0.0831,  ..., 0.0424, 0.0535, 0.1436],
         [0.0399, 0.7836, 0.7507,  ..., 0.0424, 0.0535, 0.5852]],
        [[0.3573, 0.0746, 0.0418,  ..., 0.1495, 0.0253, 0.0451],
         [0.2032, 0.0788, 0.0418,  ..., 0.1666, 0.0253, 0.0451],
         [0.1423, 0.0746, 0.0418,  ..., 0.1474, 0.9242, 0.8646],
         [0.2973, 0.7720, 0.8747,  ..., 0.5365, 0.0253, 0.0451]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0177, 0.8269, 0.9036,  ..., 0.9052, 0.0205, 0.0383],
         [0.0177, 0.0577, 0.0321,  ..., 0.0316, 0.0205, 0.0383],
         [0.9468, 0.0577, 0.0321,  ..., 0.0316, 0.9385, 0.8851],
         [0.0177, 0.0577, 0.0321,  ..., 0.0316, 0.0205, 0.0383]],
        [[0.0390, 0.0232, 0.9307,  ..., 0.6909, 0.0279, 0.0682],
         [0.0390, 0.0232, 0.0245,  ..., 0.1400, 0.0279, 0.0682],
         [0.8830, 0.0232, 0.0224,  ..., 0.0846, 0.0279, 0.7955],
         [0.0390, 0.9304, 0.0224,  ..., 0.0846, 0.9162, 0.0682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6368, 0.0699, 0.0545,  ..., 0.9381, 0.6934, 0.0654],
         [0.1139, 0.0709, 0.0545,  ..., 0.0206, 0.0982, 0.0654],
         [0.1125, 0.0699, 0.0545,  ..., 0.0206, 0.1101, 0.0654],
         [0.1368, 0.7894, 0.8366,  ..., 0.0206, 0.0982, 0.8038]],
        [[0.4829, 0.0681, 0.0646,  ..., 0.0771, 0.0300, 0.0277],
         [0.1896, 0.0681, 0.0682,  ..., 0.0771, 0.0300, 0.0277],
         [0.1514, 0.0681, 0.0646,  ..., 0.0771, 0.9100, 0.9170],
         [0.1761, 0.7956, 0.8026,  ..., 0.7687, 0.0300, 0.0277]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:37:33,293 [Process: 0] Synchronize training processes
2024-08-19 13:37:33,293 [Process: 0] Evaluating...
2024-08-19 13:37:33,295 [Process: 0] EPOCH 59:
2024-08-19 13:37:33,297 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:34,354 [Process: 0] Synchronize training processes
2024-08-19 13:37:34,354 [Process: 0] Evaluating...
2024-08-19 13:37:34,356 [Process: 0] EPOCH 60:
2024-08-19 13:37:34,358 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0832, 0.2148, 0.9268,  ..., 0.9213, 0.0202, 0.0264],
         [0.0832, 0.3853, 0.0244,  ..., 0.0262, 0.0202, 0.0264],
         [0.7505, 0.1454, 0.0244,  ..., 0.0262, 0.9393, 0.9209],
         [0.0832, 0.2545, 0.0244,  ..., 0.0262, 0.0202, 0.0264]],
        [[0.0515, 0.0075, 0.9004,  ..., 0.8801, 0.0435, 0.0698],
         [0.0515, 0.0075, 0.0332,  ..., 0.0400, 0.0405, 0.0698],
         [0.8454, 0.0075, 0.0332,  ..., 0.0400, 0.0405, 0.7906],
         [0.0515, 0.9775, 0.0332,  ..., 0.0400, 0.8754, 0.0698]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7968, 0.0642, 0.0569,  ..., 0.9480, 0.6668, 0.1202],
         [0.0677, 0.0642, 0.0569,  ..., 0.0173, 0.1075, 0.1492],
         [0.0677, 0.0642, 0.0569,  ..., 0.0173, 0.1183, 0.1292],
         [0.0677, 0.8075, 0.8292,  ..., 0.0173, 0.1075, 0.6014]],
        [[0.6797, 0.1289, 0.0911,  ..., 0.2386, 0.0434, 0.0246],
         [0.1041, 0.1252, 0.0911,  ..., 0.1681, 0.0434, 0.0246],
         [0.1120, 0.1223, 0.0911,  ..., 0.1421, 0.8697, 0.9263],
         [0.1041, 0.6236, 0.7266,  ..., 0.4511, 0.0434, 0.0246]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0980, 0.1158, 0.7598,  ..., 0.9445, 0.0861, 0.0426],
         [0.0980, 0.3003, 0.0889,  ..., 0.0185, 0.0861, 0.0426],
         [0.5865, 0.1158, 0.0756,  ..., 0.0185, 0.7418, 0.8722],
         [0.2175, 0.4681, 0.0756,  ..., 0.0185, 0.0861, 0.0426]],
        [[0.0952, 0.0073, 0.8992,  ..., 0.7966, 0.0022, 0.0695],
         [0.0952, 0.0073, 0.0336,  ..., 0.0678, 0.0022, 0.0695],
         [0.7144, 0.0073, 0.0336,  ..., 0.0678, 0.0022, 0.7833],
         [0.0952, 0.9782, 0.0336,  ..., 0.0678, 0.9935, 0.0776]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9190, 0.0805, 0.0469,  ..., 0.9350, 0.7432, 0.1266],
         [0.0270, 0.0990, 0.0469,  ..., 0.0217, 0.0920, 0.1266],
         [0.0270, 0.0805, 0.0469,  ..., 0.0217, 0.0824, 0.1566],
         [0.0270, 0.7401, 0.8594,  ..., 0.0217, 0.0824, 0.5901]],
        [[0.6825, 0.1685, 0.1166,  ..., 0.0688, 0.0326, 0.0479],
         [0.1068, 0.1444, 0.1039,  ..., 0.0688, 0.0326, 0.0479],
         [0.1054, 0.1282, 0.1039,  ..., 0.0688, 0.9021, 0.8563],
         [0.1054, 0.5588, 0.6757,  ..., 0.7937, 0.0326, 0.0479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:37:35,390 [Process: 0] Synchronize training processes
2024-08-19 13:37:35,390 [Process: 0] Evaluating...
2024-08-19 13:37:35,392 [Process: 0] EPOCH 61:
2024-08-19 13:37:35,394 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:36,430 [Process: 0] Synchronize training processes
2024-08-19 13:37:36,430 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0464, 0.0893, 0.9370,  ..., 0.9171, 0.0465, 0.0482],
         [0.0464, 0.1834, 0.0210,  ..., 0.0276, 0.0465, 0.0482],
         [0.8607, 0.0893, 0.0210,  ..., 0.0276, 0.8605, 0.8555],
         [0.0464, 0.6380, 0.0210,  ..., 0.0276, 0.0465, 0.0482]],
        [[0.0664, 0.0019, 0.9489,  ..., 0.8343, 0.0088, 0.0778],
         [0.0642, 0.0019, 0.0170,  ..., 0.0595, 0.0088, 0.0794],
         [0.8052, 0.0019, 0.0170,  ..., 0.0531, 0.0088, 0.7650],
         [0.0642, 0.9942, 0.0170,  ..., 0.0531, 0.9735, 0.0778]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6710, 0.0494, 0.0690,  ..., 0.7989, 0.8457, 0.1019],
         [0.1107, 0.0494, 0.0690,  ..., 0.0748, 0.0540, 0.0971],
         [0.1091, 0.0494, 0.0690,  ..., 0.0631, 0.0501, 0.0971],
         [0.1091, 0.8518, 0.7930,  ..., 0.0631, 0.0501, 0.7039]],
        [[0.3322, 0.0804, 0.0737,  ..., 0.0966, 0.0920, 0.0879],
         [0.2485, 0.0804, 0.0737,  ..., 0.1079, 0.0920, 0.0879],
         [0.1614, 0.0883, 0.0737,  ..., 0.1003, 0.7241, 0.7362],
         [0.2579, 0.7509, 0.7789,  ..., 0.6952, 0.0920, 0.0879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0269, 0.0737, 0.9750,  ..., 0.9617, 0.0432, 0.0394],
         [0.0269, 0.0737, 0.0083,  ..., 0.0128, 0.0432, 0.0394],
         [0.9193, 0.0737, 0.0083,  ..., 0.0128, 0.8704, 0.8819],
         [0.0269, 0.7789, 0.0083,  ..., 0.0128, 0.0432, 0.0394]],
        [[0.0556, 0.0256, 0.9541,  ..., 0.8688, 0.0250, 0.0555],
         [0.0556, 0.0256, 0.0153,  ..., 0.0388, 0.0250, 0.0555],
         [0.8331, 0.0256, 0.0153,  ..., 0.0388, 0.0250, 0.8336],
         [0.0556, 0.9231, 0.0153,  ..., 0.0536, 0.9250, 0.0555]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:37:37,412 [Process: 0] EPOCH 62:
2024-08-19 13:37:37,415 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:38,408 [Process: 0] Synchronize training processes
2024-08-19 13:37:38,408 [Process: 0] Evaluating...
2024-08-19 13:37:38,410 [Process: 0] EPOCH 63:
2024-08-19 13:37:38,412 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9125, 0.0759, 0.0703,  ..., 0.8846, 0.5357, 0.0649],
         [0.0292, 0.0759, 0.0703,  ..., 0.0385, 0.1569, 0.0649],
         [0.0291, 0.0759, 0.0703,  ..., 0.0385, 0.1369, 0.0649],
         [0.0291, 0.7722, 0.7891,  ..., 0.0385, 0.1706, 0.8053]],
        [[0.2193, 0.0945, 0.0751,  ..., 0.0519, 0.0748, 0.0676],
         [0.2109, 0.0945, 0.0814,  ..., 0.0519, 0.0748, 0.0676],
         [0.1543, 0.1034, 0.0751,  ..., 0.0519, 0.7755, 0.7971],
         [0.4156, 0.7077, 0.7685,  ..., 0.8443, 0.0748, 0.0676]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0489, 0.2080, 0.9715,  ..., 0.8430, 0.0618, 0.0754],
         [0.0489, 0.2780, 0.0095,  ..., 0.0523, 0.0618, 0.0754],
         [0.8532, 0.1718, 0.0095,  ..., 0.0523, 0.8145, 0.7738],
         [0.0489, 0.3422, 0.0095,  ..., 0.0523, 0.0618, 0.0754]],
        [[0.0335, 0.0052, 0.8867,  ..., 0.9272, 0.0057, 0.0596],
         [0.0335, 0.0052, 0.0355,  ..., 0.0243, 0.0057, 0.0596],
         [0.8995, 0.0052, 0.0355,  ..., 0.0243, 0.0057, 0.8212],
         [0.0335, 0.9843, 0.0423,  ..., 0.0243, 0.9830, 0.0596]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9413, 0.0935, 0.0823,  ..., 0.8830, 0.8677, 0.0703],
         [0.0196, 0.0868, 0.0823,  ..., 0.0390, 0.0454, 0.0703],
         [0.0196, 0.0868, 0.0823,  ..., 0.0390, 0.0435, 0.0703],
         [0.0196, 0.7329, 0.7531,  ..., 0.0390, 0.0435, 0.7890]],
        [[0.1295, 0.0663, 0.0545,  ..., 0.0839, 0.1140, 0.1757],
         [0.1295, 0.0663, 0.0545,  ..., 0.0839, 0.1140, 0.1489],
         [0.6116, 0.0663, 0.0545,  ..., 0.0839, 0.6581, 0.5322],
         [0.1295, 0.8012, 0.8366,  ..., 0.7484, 0.1140, 0.1432]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:37:39,446 [Process: 0] Synchronize training processes
2024-08-19 13:37:39,447 [Process: 0] Evaluating...
2024-08-19 13:37:39,449 [Process: 0] EPOCH 64:
2024-08-19 13:37:39,450 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:40,482 [Process: 0] Synchronize training processes
2024-08-19 13:37:40,482 [Process: 0] Evaluating...
2024-08-19 13:37:40,484 [Process: 0] EPOCH 65:
2024-08-19 13:37:40,486 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0682, 0.1365, 0.8919,  ..., 0.9759, 0.0935, 0.0678],
         [0.0682, 0.2194, 0.0410,  ..., 0.0080, 0.0935, 0.0678],
         [0.7953, 0.1365, 0.0335,  ..., 0.0080, 0.7129, 0.7965],
         [0.0682, 0.5075, 0.0335,  ..., 0.0080, 0.1001, 0.0678]],
        [[0.0347, 0.0096, 0.9251,  ..., 0.9175, 0.0237, 0.0645],
         [0.0347, 0.0096, 0.0243,  ..., 0.0302, 0.0237, 0.0645],
         [0.8959, 0.0096, 0.0236,  ..., 0.0262, 0.0237, 0.8049],
         [0.0347, 0.9712, 0.0271,  ..., 0.0262, 0.9288, 0.0662]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8593, 0.0526, 0.0581,  ..., 0.8528, 0.9128, 0.0379],
         [0.0500, 0.0526, 0.0581,  ..., 0.0634, 0.0291, 0.0379],
         [0.0453, 0.0526, 0.0581,  ..., 0.0419, 0.0291, 0.0379],
         [0.0453, 0.8422, 0.8257,  ..., 0.0419, 0.0291, 0.8862]],
        [[0.4307, 0.0961, 0.0696,  ..., 0.0336, 0.1033, 0.1531],
         [0.2112, 0.0961, 0.0696,  ..., 0.0336, 0.1033, 0.1488],
         [0.1634, 0.0961, 0.0696,  ..., 0.0336, 0.6901, 0.5560],
         [0.1947, 0.7118, 0.7912,  ..., 0.8992, 0.1033, 0.1421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0815, 0.1218, 0.9605,  ..., 0.9433, 0.0528, 0.0581],
         [0.0815, 0.1218, 0.0132,  ..., 0.0189, 0.0528, 0.0581],
         [0.7555, 0.1531, 0.0132,  ..., 0.0189, 0.8417, 0.8258],
         [0.0815, 0.6032, 0.0132,  ..., 0.0189, 0.0528, 0.0581]],
        [[0.0215, 0.0078, 0.9546,  ..., 0.8687, 0.0070, 0.0442],
         [0.0215, 0.0078, 0.0151,  ..., 0.0590, 0.0070, 0.0442],
         [0.9354, 0.0078, 0.0151,  ..., 0.0361, 0.0070, 0.8674],
         [0.0215, 0.9767, 0.0151,  ..., 0.0361, 0.9790, 0.0442]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9847, 0.0931, 0.1910,  ..., 0.9357, 0.9421, 0.0745],
         [0.0051, 0.0931, 0.2078,  ..., 0.0228, 0.0193, 0.0745],
         [0.0051, 0.0931, 0.1567,  ..., 0.0207, 0.0193, 0.0745],
         [0.0051, 0.7206, 0.4446,  ..., 0.0207, 0.0193, 0.7764]],
        [[0.6432, 0.0914, 0.0732,  ..., 0.0500, 0.0436, 0.0426],
         [0.1445, 0.0914, 0.0732,  ..., 0.0500, 0.0436, 0.0426],
         [0.1062, 0.0914, 0.0732,  ..., 0.0500, 0.8691, 0.8723],
         [0.1062, 0.7258, 0.7803,  ..., 0.8499, 0.0436, 0.0426]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:37:41,519 [Process: 0] Synchronize training processes
2024-08-19 13:37:41,519 [Process: 0] Evaluating...
2024-08-19 13:37:41,521 [Process: 0] EPOCH 66:
2024-08-19 13:37:41,522 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:42,554 [Process: 0] Synchronize training processes
2024-08-19 13:37:42,554 [Process: 0] Evaluating...
2024-08-19 13:37:42,556 [Process: 0] EPOCH 67:
2024-08-19 13:37:42,558 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1325, 0.0835, 0.9166,  ..., 0.8680, 0.0248, 0.0344],
         [0.1325, 0.0835, 0.0278,  ..., 0.0440, 0.0248, 0.0344],
         [0.4695, 0.0890, 0.0278,  ..., 0.0440, 0.9257, 0.8969],
         [0.2654, 0.7440, 0.0278,  ..., 0.0440, 0.0248, 0.0344]],
        [[0.0292, 0.0160, 0.9857,  ..., 0.9525, 0.0029, 0.0510],
         [0.0292, 0.0160, 0.0067,  ..., 0.0158, 0.0029, 0.0510],
         [0.9124, 0.0160, 0.0038,  ..., 0.0158, 0.0029, 0.8469],
         [0.0292, 0.9519, 0.0038,  ..., 0.0158, 0.9912, 0.0510]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9885, 0.0461, 0.0683,  ..., 0.8729, 0.9605, 0.0625],
         [0.0038, 0.0461, 0.0683,  ..., 0.0424, 0.0168, 0.0625],
         [0.0038, 0.0461, 0.0683,  ..., 0.0424, 0.0113, 0.0625],
         [0.0038, 0.8617, 0.7952,  ..., 0.0424, 0.0113, 0.8126]],
        [[0.5321, 0.0318, 0.0343,  ..., 0.0294, 0.0211, 0.0352],
         [0.2251, 0.0318, 0.0343,  ..., 0.0294, 0.0211, 0.0352],
         [0.1214, 0.0318, 0.0343,  ..., 0.0294, 0.9366, 0.8943],
         [0.1214, 0.9047, 0.8971,  ..., 0.9118, 0.0211, 0.0352]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0770, 0.0414, 0.9331,  ..., 0.9724, 0.0593, 0.0382],
         [0.0770, 0.0414, 0.0327,  ..., 0.0092, 0.0593, 0.0382],
         [0.7374, 0.0414, 0.0171,  ..., 0.0092, 0.8221, 0.8853],
         [0.1085, 0.8757, 0.0171,  ..., 0.0092, 0.0593, 0.0382]],
        [[0.0581, 0.0081, 0.9395,  ..., 0.8784, 0.0177, 0.0704],
         [0.0565, 0.0081, 0.0202,  ..., 0.0398, 0.0177, 0.0704],
         [0.8288, 0.0081, 0.0202,  ..., 0.0398, 0.0177, 0.7883],
         [0.0565, 0.9757, 0.0202,  ..., 0.0419, 0.9468, 0.0708]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9703, 0.0289, 0.0384,  ..., 0.8402, 0.8632, 0.0670],
         [0.0122, 0.0289, 0.0384,  ..., 0.0698, 0.0575, 0.0670],
         [0.0087, 0.0289, 0.0384,  ..., 0.0450, 0.0396, 0.0670],
         [0.0087, 0.9132, 0.8848,  ..., 0.0450, 0.0396, 0.7990]],
        [[0.1685, 0.0823, 0.0578,  ..., 0.0694, 0.0968, 0.0707],
         [0.2394, 0.0917, 0.0578,  ..., 0.0651, 0.0968, 0.0707],
         [0.4237, 0.0823, 0.0578,  ..., 0.0651, 0.7037, 0.7878],
         [0.1685, 0.7436, 0.8267,  ..., 0.8004, 0.1028, 0.0707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:37:43,590 [Process: 0] Synchronize training processes
2024-08-19 13:37:43,590 [Process: 0] Evaluating...
2024-08-19 13:37:43,592 [Process: 0] EPOCH 68:
2024-08-19 13:37:43,594 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:44,628 [Process: 0] Synchronize training processes
2024-08-19 13:37:44,628 [Process: 0] Evaluating...
2024-08-19 13:37:44,630 [Process: 0] EPOCH 69:
2024-08-19 13:37:44,632 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1036, 0.0170, 0.9805,  ..., 0.9822, 0.0511, 0.0450],
         [0.1036, 0.0170, 0.0067,  ..., 0.0059, 0.0511, 0.0450],
         [0.6892, 0.0170, 0.0064,  ..., 0.0059, 0.8468, 0.8649],
         [0.1036, 0.9489, 0.0064,  ..., 0.0059, 0.0511, 0.0450]],
        [[0.0353, 0.0345, 0.9908,  ..., 0.9628, 0.0221, 0.0746],
         [0.0353, 0.0248, 0.0031,  ..., 0.0124, 0.0221, 0.0746],
         [0.8942, 0.0248, 0.0031,  ..., 0.0124, 0.0221, 0.7762],
         [0.0353, 0.9160, 0.0031,  ..., 0.0124, 0.9336, 0.0746]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9557, 0.0922, 0.0634,  ..., 0.9309, 0.8552, 0.0526],
         [0.0160, 0.0922, 0.0634,  ..., 0.0258, 0.0591, 0.0526],
         [0.0141, 0.0922, 0.0634,  ..., 0.0216, 0.0429, 0.0526],
         [0.0141, 0.7235, 0.8097,  ..., 0.0216, 0.0429, 0.8423]],
        [[0.1558, 0.0451, 0.0702,  ..., 0.0944, 0.0937, 0.0411],
         [0.2118, 0.0451, 0.0702,  ..., 0.0928, 0.0937, 0.0411],
         [0.4766, 0.0451, 0.0702,  ..., 0.0928, 0.7188, 0.8767],
         [0.1558, 0.8646, 0.7895,  ..., 0.7200, 0.0937, 0.0411]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0696, 0.0313, 0.9284,  ..., 0.9823, 0.0255, 0.0246],
         [0.0696, 0.0270, 0.0307,  ..., 0.0059, 0.0255, 0.0246],
         [0.7298, 0.0270, 0.0205,  ..., 0.0059, 0.9235, 0.9262],
         [0.1310, 0.9146, 0.0205,  ..., 0.0059, 0.0255, 0.0246]],
        [[0.0298, 0.0211, 0.9251,  ..., 0.9525, 0.0120, 0.0724],
         [0.0298, 0.0211, 0.0250,  ..., 0.0210, 0.0120, 0.0720],
         [0.9106, 0.0211, 0.0250,  ..., 0.0133, 0.0120, 0.7724],
         [0.0298, 0.9366, 0.0250,  ..., 0.0133, 0.9640, 0.0831]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:37:45,664 [Process: 0] Synchronize training processes
2024-08-19 13:37:45,664 [Process: 0] Evaluating...
2024-08-19 13:37:45,666 [Process: 0] EPOCH 70:
2024-08-19 13:37:45,668 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:46,712 [Process: 0] Synchronize training processes
2024-08-19 13:37:46,713 [Process: 0] Evaluating...
2024-08-19 13:37:46,714 [Process: 0] EPOCH 71:
2024-08-19 13:37:46,716 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9849, 0.0302, 0.1142,  ..., 0.8979, 0.8352, 0.0273],
         [0.0050, 0.0302, 0.1219,  ..., 0.0380, 0.0664, 0.0273],
         [0.0050, 0.0302, 0.1142,  ..., 0.0321, 0.0492, 0.0273],
         [0.0050, 0.9095, 0.6496,  ..., 0.0321, 0.0492, 0.9181]],
        [[0.2170, 0.0772, 0.0526,  ..., 0.0504, 0.0743, 0.0226],
         [0.3534, 0.0772, 0.0526,  ..., 0.0504, 0.0830, 0.0226],
         [0.2558, 0.0772, 0.0526,  ..., 0.0504, 0.7683, 0.9323],
         [0.1738, 0.7685, 0.8423,  ..., 0.8489, 0.0743, 0.0226]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0583, 0.2088, 0.9832,  ..., 0.9506, 0.0356, 0.0550],
         [0.0583, 0.5117, 0.0056,  ..., 0.0165, 0.0356, 0.0550],
         [0.8128, 0.1020, 0.0056,  ..., 0.0165, 0.8931, 0.8349],
         [0.0707, 0.1776, 0.0056,  ..., 0.0165, 0.0356, 0.0550]],
        [[0.0341, 0.0379, 0.9611,  ..., 0.9019, 0.0315, 0.0547],
         [0.0341, 0.0379, 0.0130,  ..., 0.0327, 0.0315, 0.0547],
         [0.8976, 0.0379, 0.0130,  ..., 0.0327, 0.0315, 0.8358],
         [0.0341, 0.8862, 0.0130,  ..., 0.0327, 0.9055, 0.0547]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9146, 0.0740, 0.0607,  ..., 0.7476, 0.8042, 0.0713],
         [0.0291, 0.0740, 0.0607,  ..., 0.1175, 0.0919, 0.0834],
         [0.0281, 0.0740, 0.0607,  ..., 0.0675, 0.0520, 0.0713],
         [0.0281, 0.7780, 0.8178,  ..., 0.0675, 0.0520, 0.7741]],
        [[0.2838, 0.1082, 0.0685,  ..., 0.1013, 0.0468, 0.0250],
         [0.3110, 0.1494, 0.0685,  ..., 0.0962, 0.0468, 0.0250],
         [0.2073, 0.1082, 0.0685,  ..., 0.1028, 0.8597, 0.9250],
         [0.1979, 0.6341, 0.7944,  ..., 0.6997, 0.0468, 0.0250]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0808, 0.1052, 0.8754,  ..., 0.9674, 0.0470, 0.0622],
         [0.0808, 0.5913, 0.0415,  ..., 0.0109, 0.0470, 0.0622],
         [0.7575, 0.0988, 0.0415,  ..., 0.0109, 0.8589, 0.8135],
         [0.0808, 0.2047, 0.0415,  ..., 0.0109, 0.0470, 0.0622]],
        [[0.0312, 0.0091, 0.9459,  ..., 0.9075, 0.0068, 0.0843],
         [0.0312, 0.0091, 0.0180,  ..., 0.0273, 0.0068, 0.0824],
         [0.9064, 0.0091, 0.0180,  ..., 0.0273, 0.0068, 0.7394],
         [0.0312, 0.9728, 0.0180,  ..., 0.0379, 0.9795, 0.0939]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:47,748 [Process: 0] Synchronize training processes
2024-08-19 13:37:47,749 [Process: 0] Evaluating...
2024-08-19 13:37:48,734 [Process: 0] EPOCH 72:
2024-08-19 13:37:48,737 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9626, 0.0389, 0.0574,  ..., 0.9576, 0.8169, 0.0896],
         [0.0126, 0.0389, 0.0574,  ..., 0.0141, 0.0566, 0.1005],
         [0.0124, 0.0389, 0.0574,  ..., 0.0141, 0.0700, 0.0896],
         [0.0124, 0.8832, 0.8278,  ..., 0.0141, 0.0566, 0.7203]],
        [[0.0979, 0.0488, 0.0510,  ..., 0.0832, 0.0119, 0.0380],
         [0.1042, 0.0488, 0.0510,  ..., 0.0746, 0.0119, 0.0380],
         [0.6999, 0.0488, 0.0510,  ..., 0.0746, 0.9643, 0.8861],
         [0.0979, 0.8537, 0.8471,  ..., 0.7675, 0.0119, 0.0380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0351, 0.0323, 0.9677,  ..., 0.9387, 0.0406, 0.0643],
         [0.0351, 0.0323, 0.0108,  ..., 0.0263, 0.0406, 0.0643],
         [0.8948, 0.0323, 0.0108,  ..., 0.0175, 0.8782, 0.8071],
         [0.0351, 0.9030, 0.0108,  ..., 0.0175, 0.0406, 0.0643]],
        [[0.0431, 0.0375, 0.9845,  ..., 0.9237, 0.0188, 0.0412],
         [0.0431, 0.0375, 0.0052,  ..., 0.0254, 0.0213, 0.0412],
         [0.8707, 0.0375, 0.0052,  ..., 0.0254, 0.0188, 0.8763],
         [0.0431, 0.8876, 0.0052,  ..., 0.0254, 0.9412, 0.0412]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-19 13:37:49,731 [Process: 0] Synchronize training processes
2024-08-19 13:37:49,731 [Process: 0] Evaluating...
2024-08-19 13:37:49,733 [Process: 0] EPOCH 73:
2024-08-19 13:37:49,735 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:50,767 [Process: 0] Synchronize training processes
2024-08-19 13:37:50,767 [Process: 0] Evaluating...
2024-08-19 13:37:50,769 [Process: 0] EPOCH 74:
2024-08-19 13:37:50,771 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9606, 0.0772, 0.0831,  ..., 0.9563, 0.7954, 0.0795],
         [0.0131, 0.0772, 0.0831,  ..., 0.0193, 0.0944, 0.0795],
         [0.0131, 0.0772, 0.1006,  ..., 0.0122, 0.0551, 0.0795],
         [0.0131, 0.7684, 0.7332,  ..., 0.0122, 0.0551, 0.7616]],
        [[0.1004, 0.0210, 0.0581,  ..., 0.0471, 0.0330, 0.0487],
         [0.1004, 0.0210, 0.0581,  ..., 0.0471, 0.0330, 0.0487],
         [0.6988, 0.0210, 0.0581,  ..., 0.0471, 0.9009, 0.8539],
         [0.1004, 0.9370, 0.8256,  ..., 0.8588, 0.0330, 0.0487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0478, 0.0353, 0.9738,  ..., 0.9792, 0.0476, 0.0629],
         [0.0478, 0.0353, 0.0087,  ..., 0.0069, 0.0476, 0.0629],
         [0.8565, 0.0353, 0.0087,  ..., 0.0069, 0.8571, 0.8113],
         [0.0478, 0.8940, 0.0087,  ..., 0.0069, 0.0476, 0.0629]],
        [[0.0267, 0.0167, 0.9639,  ..., 0.9607, 0.0197, 0.0518],
         [0.0267, 0.0167, 0.0120,  ..., 0.0131, 0.0197, 0.0518],
         [0.9200, 0.0167, 0.0120,  ..., 0.0131, 0.0197, 0.8423],
         [0.0267, 0.9500, 0.0120,  ..., 0.0131, 0.9408, 0.0540]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9580, 0.0739, 0.0919,  ..., 0.9047, 0.9085, 0.0594],
         [0.0140, 0.0739, 0.0932,  ..., 0.0318, 0.0358, 0.0594],
         [0.0140, 0.0810, 0.1088,  ..., 0.0318, 0.0279, 0.0594],
         [0.0140, 0.7711, 0.7061,  ..., 0.0318, 0.0279, 0.8218]],
        [[0.3547, 0.0570, 0.0397,  ..., 0.0226, 0.0424, 0.0479],
         [0.2045, 0.0570, 0.0397,  ..., 0.0226, 0.0424, 0.0479],
         [0.2905, 0.0570, 0.0397,  ..., 0.0226, 0.8729, 0.8562],
         [0.1503, 0.8289, 0.8810,  ..., 0.9321, 0.0424, 0.0479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0757, 0.0108, 0.9809,  ..., 0.9152, 0.0660, 0.0730],
         [0.0757, 0.0108, 0.0062,  ..., 0.0283, 0.0660, 0.0730],
         [0.7712, 0.0108, 0.0062,  ..., 0.0283, 0.8021, 0.7809],
         [0.0774, 0.9676, 0.0066,  ..., 0.0283, 0.0660, 0.0730]],
        [[0.0246, 0.0368, 0.9941,  ..., 0.9219, 0.0196, 0.0308],
         [0.0246, 0.0341, 0.0020,  ..., 0.0321, 0.0196, 0.0308],
         [0.9261, 0.0341, 0.0020,  ..., 0.0230, 0.0196, 0.9075],
         [0.0246, 0.8949, 0.0020,  ..., 0.0230, 0.9412, 0.0308]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:51,805 [Process: 0] Synchronize training processes
2024-08-19 13:37:51,806 [Process: 0] Evaluating...
2024-08-19 13:37:51,807 [Process: 0] EPOCH 75:
2024-08-19 13:37:51,809 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:52,863 [Process: 0] Synchronize training processes
2024-08-19 13:37:52,864 [Process: 0] Evaluating...
2024-08-19 13:37:52,866 [Process: 0] EPOCH 76:
2024-08-19 13:37:52,867 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9869, 0.0260, 0.0477,  ..., 0.8865, 0.9072, 0.0329],
         [0.0044, 0.0260, 0.0477,  ..., 0.0399, 0.0317, 0.0329],
         [0.0044, 0.0260, 0.0477,  ..., 0.0368, 0.0306, 0.0356],
         [0.0044, 0.9220, 0.8568,  ..., 0.0368, 0.0306, 0.8985]],
        [[0.3713, 0.0504, 0.0262,  ..., 0.0460, 0.0822, 0.0226],
         [0.3119, 0.0504, 0.0262,  ..., 0.0460, 0.0822, 0.0226],
         [0.1733, 0.0504, 0.0262,  ..., 0.0460, 0.7534, 0.9321],
         [0.1434, 0.8489, 0.9215,  ..., 0.8621, 0.0822, 0.0226]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0355, 0.0255, 0.9251,  ..., 0.9777, 0.0639, 0.0605],
         [0.0355, 0.0255, 0.0250,  ..., 0.0074, 0.0639, 0.0605],
         [0.8936, 0.0255, 0.0250,  ..., 0.0074, 0.7950, 0.8135],
         [0.0355, 0.9235, 0.0250,  ..., 0.0074, 0.0772, 0.0655]],
        [[0.0321, 0.0313, 0.9199,  ..., 0.9383, 0.0210, 0.0376],
         [0.0321, 0.0313, 0.0267,  ..., 0.0206, 0.0210, 0.0376],
         [0.9037, 0.0313, 0.0267,  ..., 0.0206, 0.0210, 0.8873],
         [0.0321, 0.9060, 0.0267,  ..., 0.0206, 0.9370, 0.0376]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8789, 0.0375, 0.0350,  ..., 0.9716, 0.4876, 0.0757],
         [0.0457, 0.0375, 0.0350,  ..., 0.0095, 0.1579, 0.0757],
         [0.0377, 0.0375, 0.0350,  ..., 0.0095, 0.1098, 0.0757],
         [0.0377, 0.8876, 0.8951,  ..., 0.0095, 0.2447, 0.7730]],
        [[0.2022, 0.0239, 0.0139,  ..., 0.1346, 0.0249, 0.0137],
         [0.3550, 0.0239, 0.0139,  ..., 0.2906, 0.0249, 0.0137],
         [0.2645, 0.0239, 0.0139,  ..., 0.1346, 0.9253, 0.9590],
         [0.1782, 0.9282, 0.9584,  ..., 0.4402, 0.0249, 0.0137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0749, 0.0208, 0.9754,  ..., 0.9791, 0.0388, 0.0560],
         [0.0749, 0.0208, 0.0082,  ..., 0.0070, 0.0388, 0.0560],
         [0.7754, 0.0208, 0.0082,  ..., 0.0070, 0.8835, 0.8276],
         [0.0749, 0.9376, 0.0082,  ..., 0.0070, 0.0388, 0.0605]],
        [[0.0297, 0.0463, 0.9900,  ..., 0.9608, 0.0626, 0.0421],
         [0.0297, 0.0902, 0.0033,  ..., 0.0118, 0.1407, 0.0421],
         [0.9109, 0.0463, 0.0033,  ..., 0.0118, 0.0626, 0.8737],
         [0.0297, 0.8172, 0.0033,  ..., 0.0156, 0.7342, 0.0421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:53,901 [Process: 0] Synchronize training processes
2024-08-19 13:37:53,901 [Process: 0] Evaluating...
2024-08-19 13:37:53,902 [Process: 0] EPOCH 77:
2024-08-19 13:37:53,904 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:54,936 [Process: 0] Synchronize training processes
2024-08-19 13:37:54,936 [Process: 0] Evaluating...
2024-08-19 13:37:54,938 [Process: 0] EPOCH 78:
2024-08-19 13:37:54,940 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9124, 0.0293, 0.0518,  ..., 0.9588, 0.7395, 0.0531],
         [0.0293, 0.0293, 0.0518,  ..., 0.0137, 0.1247, 0.0531],
         [0.0292, 0.0293, 0.0518,  ..., 0.0137, 0.0679, 0.0531],
         [0.0292, 0.9122, 0.8447,  ..., 0.0137, 0.0679, 0.8406]],
        [[0.1627, 0.0374, 0.0671,  ..., 0.1352, 0.0597, 0.0569],
         [0.3180, 0.0374, 0.0682,  ..., 0.1352, 0.0597, 0.0569],
         [0.2327, 0.0374, 0.0671,  ..., 0.2728, 0.8210, 0.8292],
         [0.2866, 0.8879, 0.7975,  ..., 0.4569, 0.0597, 0.0569]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0537, 0.0217, 0.9491,  ..., 0.9587, 0.0343, 0.0346],
         [0.3942, 0.0217, 0.0170,  ..., 0.0138, 0.0343, 0.0346],
         [0.4984, 0.0217, 0.0170,  ..., 0.0138, 0.8972, 0.8963],
         [0.0537, 0.9349, 0.0170,  ..., 0.0138, 0.0343, 0.0346]],
        [[0.0367, 0.0081, 0.9703,  ..., 0.7182, 0.0030, 0.0311],
         [0.0367, 0.0081, 0.0096,  ..., 0.0393, 0.0030, 0.0311],
         [0.8899, 0.0081, 0.0096,  ..., 0.0393, 0.0030, 0.9066],
         [0.0367, 0.9757, 0.0106,  ..., 0.2031, 0.9911, 0.0311]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9834, 0.0622, 0.0536,  ..., 0.8853, 0.8952, 0.0589],
         [0.0055, 0.0622, 0.0536,  ..., 0.0382, 0.0375, 0.0589],
         [0.0055, 0.0622, 0.0547,  ..., 0.0382, 0.0336, 0.0589],
         [0.0055, 0.8134, 0.8381,  ..., 0.0383, 0.0336, 0.8233]],
        [[0.1641, 0.0316, 0.0353,  ..., 0.1566, 0.1220, 0.0403],
         [0.2327, 0.0316, 0.0353,  ..., 0.2039, 0.1220, 0.0403],
         [0.3943, 0.0316, 0.0353,  ..., 0.3353, 0.6340, 0.8791],
         [0.2090, 0.9052, 0.8940,  ..., 0.3043, 0.1220, 0.0403]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0428, 0.0032, 0.9713,  ..., 0.9799, 0.0357, 0.0536],
         [0.0428, 0.0032, 0.0096,  ..., 0.0067, 0.0357, 0.0536],
         [0.8717, 0.0032, 0.0096,  ..., 0.0067, 0.8928, 0.8393],
         [0.0428, 0.9903, 0.0096,  ..., 0.0067, 0.0357, 0.0536]],
        [[0.0674, 0.0186, 0.9656,  ..., 0.9456, 0.0065, 0.0445],
         [0.0674, 0.0186, 0.0115,  ..., 0.0166, 0.0065, 0.0445],
         [0.7927, 0.0186, 0.0115,  ..., 0.0166, 0.0065, 0.8665],
         [0.0725, 0.9441, 0.0115,  ..., 0.0213, 0.9804, 0.0445]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:55,976 [Process: 0] Synchronize training processes
2024-08-19 13:37:55,976 [Process: 0] Evaluating...
2024-08-19 13:37:55,978 [Process: 0] EPOCH 79:
2024-08-19 13:37:55,980 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:57,012 [Process: 0] Synchronize training processes
2024-08-19 13:37:57,012 [Process: 0] Evaluating...
2024-08-19 13:37:57,014 [Process: 0] EPOCH 80:
2024-08-19 13:37:57,015 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9740, 0.0571, 0.0235,  ..., 0.9751, 0.7855, 0.0894],
         [0.0087, 0.0571, 0.0235,  ..., 0.0083, 0.0797, 0.0794],
         [0.0087, 0.0571, 0.0235,  ..., 0.0083, 0.0668, 0.0777],
         [0.0087, 0.8288, 0.9296,  ..., 0.0083, 0.0680, 0.7535]],
        [[0.1026, 0.0613, 0.0495,  ..., 0.1773, 0.0884, 0.0212],
         [0.1407, 0.0685, 0.0495,  ..., 0.3417, 0.1032, 0.0212],
         [0.6541, 0.0613, 0.0495,  ..., 0.1986, 0.7200, 0.9364],
         [0.1026, 0.8088, 0.8516,  ..., 0.2824, 0.0884, 0.0212]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0837, 0.0210, 0.9418,  ..., 0.9689, 0.0274, 0.0206],
         [0.0837, 0.0210, 0.0184,  ..., 0.0104, 0.0274, 0.0206],
         [0.7488, 0.0210, 0.0184,  ..., 0.0104, 0.9177, 0.9382],
         [0.0837, 0.9370, 0.0213,  ..., 0.0104, 0.0274, 0.0206]],
        [[0.0185, 0.0060, 0.9474,  ..., 0.9671, 0.0082, 0.0291],
         [0.0185, 0.0060, 0.0161,  ..., 0.0110, 0.0082, 0.0291],
         [0.9445, 0.0060, 0.0161,  ..., 0.0110, 0.0082, 0.9127],
         [0.0185, 0.9819, 0.0203,  ..., 0.0110, 0.9754, 0.0291]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9800, 0.0928, 0.0152,  ..., 0.7990, 0.8431, 0.0218],
         [0.0067, 0.0925, 0.0152,  ..., 0.0670, 0.0563, 0.0218],
         [0.0067, 0.1279, 0.0152,  ..., 0.0670, 0.0532, 0.0218],
         [0.0067, 0.6868, 0.9544,  ..., 0.0670, 0.0474, 0.9345]],
        [[0.1099, 0.0442, 0.0170,  ..., 0.0334, 0.0806, 0.0351],
         [0.1211, 0.0442, 0.0170,  ..., 0.0334, 0.0806, 0.0351],
         [0.6591, 0.0442, 0.0170,  ..., 0.0334, 0.7583, 0.8948],
         [0.1099, 0.8675, 0.9490,  ..., 0.8997, 0.0806, 0.0351]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0992, 0.0157, 0.9594,  ..., 0.9768, 0.0184, 0.0684],
         [0.0992, 0.0157, 0.0128,  ..., 0.0077, 0.0184, 0.0673],
         [0.7023, 0.0157, 0.0128,  ..., 0.0077, 0.9448, 0.7954],
         [0.0992, 0.9530, 0.0150,  ..., 0.0077, 0.0184, 0.0689]],
        [[0.0347, 0.0045, 0.8308,  ..., 0.8990, 0.0024, 0.0422],
         [0.0347, 0.0045, 0.0633,  ..., 0.0337, 0.0024, 0.0422],
         [0.8959, 0.0045, 0.0530,  ..., 0.0337, 0.0024, 0.8733],
         [0.0347, 0.9865, 0.0530,  ..., 0.0337, 0.9929, 0.0422]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:58,051 [Process: 0] Synchronize training processes
2024-08-19 13:37:58,051 [Process: 0] Evaluating...
2024-08-19 13:37:58,053 [Process: 0] EPOCH 81:
2024-08-19 13:37:58,055 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:37:59,091 [Process: 0] Synchronize training processes
2024-08-19 13:37:59,091 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9320, 0.0553, 0.0396,  ..., 0.9415, 0.7599, 0.0515],
         [0.0224, 0.0553, 0.0396,  ..., 0.0278, 0.0950, 0.0515],
         [0.0232, 0.0553, 0.0396,  ..., 0.0153, 0.0726, 0.0515],
         [0.0224, 0.8341, 0.8812,  ..., 0.0153, 0.0726, 0.8456]],
        [[0.1594, 0.0184, 0.0321,  ..., 0.0768, 0.1586, 0.0559],
         [0.2147, 0.0184, 0.0321,  ..., 0.0840, 0.2343, 0.0559],
         [0.4665, 0.0184, 0.0321,  ..., 0.0768, 0.4485, 0.8322],
         [0.1594, 0.9449, 0.9037,  ..., 0.7623, 0.1586, 0.0559]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4233e-02, 1.1029e-01, 9.7802e-01,  ..., 9.8774e-01,
          4.1929e-02, 4.0768e-02],
         [2.4233e-02, 1.0639e-01, 7.3274e-03,  ..., 4.0880e-03,
          4.1929e-02, 3.9262e-02],
         [9.2730e-01, 7.8688e-02, 7.3274e-03,  ..., 4.0880e-03,
          8.7421e-01, 8.8071e-01],
         [2.4233e-02, 7.0464e-01, 7.3274e-03,  ..., 4.0880e-03,
          4.1929e-02, 3.9262e-02]],
        [[2.6655e-02, 5.6447e-04, 9.5629e-01,  ..., 9.7308e-01,
          3.1670e-03, 5.4261e-02],
         [2.6655e-02, 5.6447e-04, 1.4570e-02,  ..., 9.9546e-03,
          3.1670e-03, 5.4261e-02],
         [9.2004e-01, 5.6447e-04, 1.4570e-02,  ..., 8.4809e-03,
          3.1670e-03, 8.2859e-01],
         [2.6655e-02, 9.9831e-01, 1.4570e-02,  ..., 8.4809e-03,
          9.9050e-01, 6.2888e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9695, 0.0661, 0.0490,  ..., 0.9539, 0.1066, 0.0405],
         [0.0100, 0.0661, 0.0490,  ..., 0.0154, 0.1066, 0.0405],
         [0.0105, 0.0661, 0.0530,  ..., 0.0154, 0.5696, 0.0405],
         [0.0100, 0.8018, 0.8490,  ..., 0.0154, 0.2173, 0.8785]],
        [[0.1354, 0.0198, 0.0326,  ..., 0.0506, 0.1223, 0.0414],
         [0.1354, 0.0198, 0.0326,  ..., 0.0506, 0.1324, 0.0414],
         [0.5938, 0.0198, 0.0326,  ..., 0.0506, 0.6230, 0.8757],
         [0.1354, 0.9407, 0.9021,  ..., 0.8481, 0.1223, 0.0414]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0262, 0.0453, 0.9869,  ..., 0.9679, 0.0562, 0.0476],
         [0.0262, 0.0897, 0.0044,  ..., 0.0107, 0.0562, 0.0476],
         [0.9215, 0.0453, 0.0044,  ..., 0.0107, 0.8315, 0.8572],
         [0.0262, 0.8197, 0.0044,  ..., 0.0107, 0.0562, 0.0476]],
        [[0.0570, 0.0131, 0.9365,  ..., 0.9919, 0.0081, 0.0379],
         [0.0570, 0.0131, 0.0212,  ..., 0.0027, 0.0081, 0.0379],
         [0.8272, 0.0131, 0.0212,  ..., 0.0027, 0.0081, 0.8863],
         [0.0588, 0.9607, 0.0212,  ..., 0.0027, 0.9756, 0.0379]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:38:00,077 [Process: 0] EPOCH 82:
2024-08-19 13:38:00,079 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:38:01,076 [Process: 0] Synchronize training processes
2024-08-19 13:38:01,076 [Process: 0] Evaluating...
2024-08-19 13:38:01,078 [Process: 0] EPOCH 83:
2024-08-19 13:38:01,080 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9596, 0.0512, 0.0738,  ..., 0.9563, 0.5495, 0.1509],
         [0.0130, 0.0512, 0.0738,  ..., 0.0146, 0.2041, 0.1424],
         [0.0144, 0.0512, 0.0828,  ..., 0.0146, 0.1236, 0.4322],
         [0.0130, 0.8465, 0.7696,  ..., 0.0146, 0.1228, 0.2745]],
        [[0.0657, 0.0320, 0.0331,  ..., 0.0206, 0.1042, 0.1141],
         [0.0657, 0.0320, 0.0331,  ..., 0.0206, 0.1042, 0.1141],
         [0.8028, 0.0320, 0.0331,  ..., 0.0217, 0.6874, 0.3959],
         [0.0657, 0.9041, 0.9006,  ..., 0.9371, 0.1042, 0.3758]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0735, 0.0140, 0.9687,  ..., 0.9505, 0.0402, 0.0257],
         [0.3691, 0.0140, 0.0104,  ..., 0.0171, 0.0382, 0.0257],
         [0.4839, 0.0140, 0.0104,  ..., 0.0162, 0.8835, 0.9229],
         [0.0735, 0.9581, 0.0104,  ..., 0.0162, 0.0382, 0.0257]],
        [[0.0631, 0.0030, 0.9905,  ..., 0.9184, 0.0066, 0.0747],
         [0.0573, 0.0030, 0.0032,  ..., 0.0326, 0.0066, 0.0704],
         [0.8223, 0.0030, 0.0032,  ..., 0.0245, 0.0066, 0.7695],
         [0.0573, 0.9911, 0.0032,  ..., 0.0245, 0.9802, 0.0854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:38:02,118 [Process: 0] Synchronize training processes
2024-08-19 13:38:02,119 [Process: 0] Evaluating...
2024-08-19 13:38:02,120 [Process: 0] EPOCH 84:
2024-08-19 13:38:02,122 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:38:03,156 [Process: 0] Synchronize training processes
2024-08-19 13:38:03,157 [Process: 0] Evaluating...
2024-08-19 13:38:03,159 [Process: 0] EPOCH 85:
2024-08-19 13:38:03,160 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9011, 0.0106, 0.0346,  ..., 0.9817, 0.4534, 0.0775],
         [0.0316, 0.0106, 0.0346,  ..., 0.0061, 0.1704, 0.0775],
         [0.0357, 0.0106, 0.0346,  ..., 0.0061, 0.2463, 0.7676],
         [0.0316, 0.9683, 0.8962,  ..., 0.0061, 0.1298, 0.0775]],
        [[0.1658, 0.0456, 0.0182,  ..., 0.0429, 0.0266, 0.0213],
         [0.3067, 0.0456, 0.0182,  ..., 0.0429, 0.0266, 0.0213],
         [0.3720, 0.0456, 0.0182,  ..., 0.0429, 0.9203, 0.9362],
         [0.1555, 0.8632, 0.9454,  ..., 0.8712, 0.0266, 0.0213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0342, 0.0559, 0.9854,  ..., 0.9931, 0.0510, 0.0420],
         [0.0342, 0.0796, 0.0049,  ..., 0.0023, 0.0510, 0.0420],
         [0.8975, 0.0559, 0.0049,  ..., 0.0023, 0.8470, 0.8739],
         [0.0342, 0.8086, 0.0049,  ..., 0.0023, 0.0510, 0.0420]],
        [[0.0549, 0.0025, 0.9581,  ..., 0.9697, 0.0058, 0.0429],
         [0.0549, 0.0025, 0.0140,  ..., 0.0098, 0.0058, 0.0401],
         [0.8352, 0.0025, 0.0140,  ..., 0.0098, 0.0058, 0.8770],
         [0.0549, 0.9925, 0.0140,  ..., 0.0108, 0.9827, 0.0401]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6906, 0.0308, 0.0421,  ..., 0.9825, 0.4000, 0.0611],
         [0.0750, 0.0308, 0.0374,  ..., 0.0058, 0.2310, 0.0411],
         [0.1595, 0.0308, 0.0374,  ..., 0.0058, 0.2261, 0.0411],
         [0.0750, 0.9077, 0.8831,  ..., 0.0058, 0.1429, 0.8567]],
        [[0.1333, 0.0454, 0.0442,  ..., 0.0482, 0.0254, 0.0100],
         [0.6526, 0.0389, 0.0442,  ..., 0.0482, 0.0254, 0.0100],
         [0.1070, 0.0389, 0.0442,  ..., 0.0482, 0.9237, 0.9699],
         [0.1070, 0.8768, 0.8674,  ..., 0.8555, 0.0254, 0.0100]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0052, 0.0633, 0.9898,  ..., 0.9884, 0.0357, 0.0564],
         [0.0052, 0.1317, 0.0034,  ..., 0.0039, 0.0357, 0.0564],
         [0.9845, 0.0633, 0.0034,  ..., 0.0039, 0.8928, 0.8297],
         [0.0052, 0.7416, 0.0034,  ..., 0.0039, 0.0357, 0.0575]],
        [[0.0639, 0.0073, 0.9020,  ..., 0.9764, 0.0042, 0.0544],
         [0.0639, 0.0073, 0.0258,  ..., 0.0077, 0.0042, 0.0544],
         [0.7904, 0.0073, 0.0258,  ..., 0.0077, 0.0042, 0.8367],
         [0.0818, 0.9782, 0.0463,  ..., 0.0083, 0.9874, 0.0544]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:38:04,195 [Process: 0] Synchronize training processes
2024-08-19 13:38:04,195 [Process: 0] Evaluating...
2024-08-19 13:38:04,197 [Process: 0] EPOCH 86:
2024-08-19 13:38:04,199 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:38:05,234 [Process: 0] Synchronize training processes
2024-08-19 13:38:05,234 [Process: 0] Evaluating...
2024-08-19 13:38:05,236 [Process: 0] EPOCH 87:
2024-08-19 13:38:05,238 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8527, 0.0360, 0.0653,  ..., 0.9843, 0.5413, 0.0314],
         [0.0427, 0.0381, 0.0778,  ..., 0.0052, 0.1507, 0.0314],
         [0.0615, 0.0360, 0.0653,  ..., 0.0052, 0.1849, 0.0314],
         [0.0430, 0.8899, 0.7916,  ..., 0.0052, 0.1231, 0.9057]],
        [[0.1601, 0.0171, 0.0437,  ..., 0.0154, 0.0296, 0.0180],
         [0.5062, 0.0171, 0.0301,  ..., 0.0154, 0.0296, 0.0180],
         [0.1484, 0.0171, 0.0301,  ..., 0.0154, 0.9112, 0.9459],
         [0.1853, 0.9487, 0.8961,  ..., 0.9539, 0.0296, 0.0180]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0027, 0.0429, 0.9739,  ..., 0.9757, 0.0141, 0.0146],
         [0.0027, 0.0606, 0.0087,  ..., 0.0081, 0.0141, 0.0146],
         [0.9912, 0.0429, 0.0087,  ..., 0.0081, 0.9577, 0.9563],
         [0.0034, 0.8536, 0.0087,  ..., 0.0081, 0.0141, 0.0146]],
        [[0.0622, 0.0024, 0.9436,  ..., 0.8466, 0.0063, 0.0345],
         [0.0622, 0.0024, 0.0188,  ..., 0.0512, 0.0063, 0.0345],
         [0.8106, 0.0024, 0.0188,  ..., 0.0511, 0.0063, 0.8965],
         [0.0650, 0.9929, 0.0188,  ..., 0.0511, 0.9810, 0.0345]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9448, 0.0306, 0.0452,  ..., 0.9943, 0.9292, 0.0268],
         [0.0157, 0.0312, 0.0452,  ..., 0.0019, 0.0234, 0.0339],
         [0.0238, 0.0306, 0.0452,  ..., 0.0019, 0.0239, 0.0268],
         [0.0157, 0.9075, 0.8645,  ..., 0.0019, 0.0234, 0.9125]],
        [[0.1715, 0.0345, 0.0371,  ..., 0.0665, 0.0327, 0.0217],
         [0.5463, 0.0345, 0.0396,  ..., 0.0903, 0.0327, 0.0217],
         [0.1411, 0.0345, 0.0371,  ..., 0.0665, 0.9018, 0.9349],
         [0.1411, 0.8964, 0.8861,  ..., 0.7768, 0.0327, 0.0217]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0023, 0.0085, 0.9671,  ..., 0.9708, 0.0265, 0.0324],
         [0.0023, 0.0085, 0.0110,  ..., 0.0097, 0.0265, 0.0324],
         [0.9930, 0.0085, 0.0110,  ..., 0.0097, 0.9205, 0.9029],
         [0.0023, 0.9746, 0.0110,  ..., 0.0097, 0.0265, 0.0324]],
        [[0.0286, 0.0013, 0.9243,  ..., 0.9411, 0.0064, 0.0310],
         [0.0286, 0.0012, 0.0241,  ..., 0.0132, 0.0064, 0.0310],
         [0.9143, 0.0012, 0.0230,  ..., 0.0132, 0.0064, 0.9069],
         [0.0286, 0.9964, 0.0286,  ..., 0.0324, 0.9807, 0.0310]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:38:06,272 [Process: 0] Synchronize training processes
2024-08-19 13:38:06,272 [Process: 0] Evaluating...
2024-08-19 13:38:06,274 [Process: 0] EPOCH 88:
2024-08-19 13:38:06,276 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9728, 0.0259, 0.0518,  ..., 0.9741, 0.8701, 0.0402],
         [0.0087, 0.0259, 0.0419,  ..., 0.0086, 0.0394, 0.0402],
         [0.0097, 0.0262, 0.0419,  ..., 0.0086, 0.0492, 0.0445],
         [0.0087, 0.9220, 0.8643,  ..., 0.0086, 0.0412, 0.8752]],
        [[0.4228, 0.0268, 0.0149,  ..., 0.0347, 0.0281, 0.0062],
         [0.3386, 0.0241, 0.0149,  ..., 0.0347, 0.0281, 0.0062],
         [0.1193, 0.0241, 0.0149,  ..., 0.0347, 0.9156, 0.9813],
         [0.1193, 0.9249, 0.9553,  ..., 0.8959, 0.0281, 0.0062]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.4924e-04, 5.7161e-02, 9.5121e-01,  ..., 9.6432e-01,
          3.6714e-02, 4.7683e-02],
         [7.4924e-04, 6.5809e-02, 1.3623e-02,  ..., 1.0216e-02,
          3.6714e-02, 4.7683e-02],
         [9.9775e-01, 5.7161e-02, 1.3623e-02,  ..., 1.0216e-02,
          8.8986e-01, 8.5613e-01],
         [7.4924e-04, 8.1987e-01, 2.1545e-02,  ..., 1.5252e-02,
          3.6714e-02, 4.8506e-02]],
        [[2.1352e-02, 1.3815e-04, 9.4431e-01,  ..., 9.6643e-01,
          1.8209e-03, 3.5711e-02],
         [2.1352e-02, 1.3815e-04, 1.8563e-02,  ..., 1.1191e-02,
          1.8209e-03, 3.5711e-02],
         [9.3594e-01, 1.3815e-04, 1.8563e-02,  ..., 1.1191e-02,
          1.8209e-03, 8.9287e-01],
         [2.1352e-02, 9.9959e-01, 1.8563e-02,  ..., 1.1191e-02,
          9.9454e-01, 3.5711e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7887, 0.0446, 0.0488,  ..., 0.9066, 0.9699, 0.0815],
         [0.0449, 0.0446, 0.0488,  ..., 0.0311, 0.0097, 0.0838],
         [0.1214, 0.0446, 0.0512,  ..., 0.0311, 0.0108, 0.1196],
         [0.0449, 0.8663, 0.8511,  ..., 0.0311, 0.0097, 0.7151]],
        [[0.3141, 0.0157, 0.0079,  ..., 0.0169, 0.0855, 0.0078],
         [0.3619, 0.0157, 0.0079,  ..., 0.0169, 0.0855, 0.0078],
         [0.1603, 0.0157, 0.0079,  ..., 0.0169, 0.7355, 0.9765],
         [0.1638, 0.9529, 0.9763,  ..., 0.9492, 0.0934, 0.0078]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.4070e-03, 5.5884e-02, 9.8967e-01,  ..., 9.7607e-01,
          3.8160e-02, 2.4443e-02],
         [7.4070e-03, 7.2298e-02, 3.7769e-03,  ..., 7.9758e-03,
          3.8160e-02, 2.4443e-02],
         [9.3668e-01, 5.5884e-02, 3.2787e-03,  ..., 7.9758e-03,
          8.8552e-01, 9.2667e-01],
         [4.8501e-02, 8.1593e-01, 3.2787e-03,  ..., 7.9758e-03,
          3.8160e-02, 2.4443e-02]],
        [[4.8787e-02, 2.1811e-02, 9.6104e-01,  ..., 9.7663e-01,
          6.6418e-04, 1.8223e-02],
         [4.8787e-02, 2.1811e-02, 1.2987e-02,  ..., 7.7914e-03,
          6.6418e-04, 1.8223e-02],
         [8.3803e-01, 2.1811e-02, 1.2987e-02,  ..., 7.7914e-03,
          6.6418e-04, 9.4533e-01],
         [6.4392e-02, 9.3457e-01, 1.2987e-02,  ..., 7.7914e-03,
          9.9801e-01, 1.8223e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:38:07,311 [Process: 0] Synchronize training processes
2024-08-19 13:38:07,311 [Process: 0] Evaluating...
2024-08-19 13:38:07,313 [Process: 0] EPOCH 89:
2024-08-19 13:38:07,315 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:38:08,352 [Process: 0] Synchronize training processes
2024-08-19 13:38:08,352 [Process: 0] Evaluating...
2024-08-19 13:38:08,354 [Process: 0] EPOCH 90:
2024-08-19 13:38:08,356 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7124, 0.0277, 0.0601,  ..., 0.8511, 0.9422, 0.0411],
         [0.0580, 0.0277, 0.0601,  ..., 0.0584, 0.0169, 0.0476],
         [0.1716, 0.0277, 0.0759,  ..., 0.0453, 0.0241, 0.0411],
         [0.0580, 0.9168, 0.8038,  ..., 0.0453, 0.0169, 0.8701]],
        [[0.8650, 0.0324, 0.0254,  ..., 0.0076, 0.0307, 0.0294],
         [0.0551, 0.0324, 0.0254,  ..., 0.0071, 0.0307, 0.0294],
         [0.0400, 0.0324, 0.0254,  ..., 0.0071, 0.9080, 0.9117],
         [0.0400, 0.9027, 0.9239,  ..., 0.9782, 0.0307, 0.0294]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0285, 0.0106, 0.9768,  ..., 0.9383, 0.0395, 0.0472],
         [0.0285, 0.0096, 0.0077,  ..., 0.0209, 0.0395, 0.0472],
         [0.6895, 0.0096, 0.0077,  ..., 0.0204, 0.8815, 0.8583],
         [0.2535, 0.9702, 0.0077,  ..., 0.0204, 0.0395, 0.0472]],
        [[0.0343, 0.0092, 0.9796,  ..., 0.9741, 0.0036, 0.0466],
         [0.0343, 0.0083, 0.0068,  ..., 0.0086, 0.0027, 0.0466],
         [0.8972, 0.0083, 0.0068,  ..., 0.0086, 0.0027, 0.8602],
         [0.0343, 0.9741, 0.0068,  ..., 0.0086, 0.9911, 0.0466]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9340, 0.0483, 0.0465,  ..., 0.8617, 0.8141, 0.0300],
         [0.0200, 0.0483, 0.0465,  ..., 0.0461, 0.0869, 0.0300],
         [0.0259, 0.0483, 0.0465,  ..., 0.0461, 0.0495, 0.0300],
         [0.0200, 0.8552, 0.8604,  ..., 0.0461, 0.0495, 0.9099]],
        [[0.7719, 0.0417, 0.0612,  ..., 0.0213, 0.0451, 0.0382],
         [0.1073, 0.0417, 0.0694,  ..., 0.0138, 0.0451, 0.0382],
         [0.0604, 0.0417, 0.0612,  ..., 0.0138, 0.8647, 0.8854],
         [0.0604, 0.8750, 0.8082,  ..., 0.9510, 0.0451, 0.0382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:38:09,390 [Process: 0] Synchronize training processes
2024-08-19 13:38:09,390 [Process: 0] Evaluating...
2024-08-19 13:38:09,392 [Process: 0] EPOCH 91:
2024-08-19 13:38:09,394 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:38:10,428 [Process: 0] Synchronize training processes
2024-08-19 13:38:10,428 [Process: 0] Evaluating...
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0587, 0.0383, 0.9897,  ..., 0.9913, 0.0291, 0.0393],
         [0.0587, 0.0383, 0.0034,  ..., 0.0029, 0.0291, 0.0393],
         [0.6031, 0.0391, 0.0034,  ..., 0.0029, 0.9127, 0.8821],
         [0.2796, 0.8842, 0.0034,  ..., 0.0029, 0.0291, 0.0393]],
        [[0.0476, 0.0012, 0.9573,  ..., 0.9714, 0.0028, 0.0277],
         [0.0476, 0.0012, 0.0142,  ..., 0.0095, 0.0028, 0.0277],
         [0.8572, 0.0012, 0.0142,  ..., 0.0095, 0.0028, 0.9169],
         [0.0476, 0.9963, 0.0142,  ..., 0.0095, 0.9915, 0.0277]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9200, 0.0539, 0.0413,  ..., 0.9346, 0.8247, 0.0812],
         [0.0150, 0.0539, 0.0413,  ..., 0.0321, 0.0506, 0.1104],
         [0.0500, 0.0597, 0.0413,  ..., 0.0167, 0.0740, 0.0812],
         [0.0150, 0.8325, 0.8761,  ..., 0.0167, 0.0506, 0.7271]],
        [[0.5980, 0.0219, 0.0313,  ..., 0.0254, 0.0268, 0.0107],
         [0.2150, 0.0219, 0.0313,  ..., 0.0254, 0.0268, 0.0107],
         [0.0935, 0.0219, 0.0313,  ..., 0.0254, 0.9195, 0.9680],
         [0.0935, 0.9342, 0.9060,  ..., 0.9237, 0.0268, 0.0107]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0324, 0.0093, 0.9794,  ..., 0.9684, 0.0242, 0.0369],
         [0.0324, 0.0093, 0.0069,  ..., 0.0105, 0.0242, 0.0369],
         [0.9027, 0.0093, 0.0069,  ..., 0.0105, 0.9274, 0.8892],
         [0.0324, 0.9721, 0.0069,  ..., 0.0105, 0.0242, 0.0369]],
        [[0.0248, 0.0077, 0.9713,  ..., 0.9844, 0.0129, 0.0210],
         [0.0248, 0.0077, 0.0096,  ..., 0.0052, 0.0129, 0.0210],
         [0.9257, 0.0077, 0.0096,  ..., 0.0052, 0.0129, 0.9371],
         [0.0248, 0.9770, 0.0096,  ..., 0.0052, 0.9613, 0.0210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:38:11,415 [Process: 0] EPOCH 92:
2024-08-19 13:38:11,418 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:38:12,414 [Process: 0] Synchronize training processes
2024-08-19 13:38:12,414 [Process: 0] Evaluating...
2024-08-19 13:38:12,416 [Process: 0] EPOCH 93:
2024-08-19 13:38:12,417 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9671, 0.0233, 0.0428,  ..., 0.7183, 0.7577, 0.1148],
         [0.0101, 0.0233, 0.0428,  ..., 0.1249, 0.0842, 0.1632],
         [0.0127, 0.0233, 0.0428,  ..., 0.0784, 0.0941, 0.1021],
         [0.0101, 0.9302, 0.8715,  ..., 0.0784, 0.0640, 0.6200]],
        [[0.8650, 0.0151, 0.0594,  ..., 0.0226, 0.0270, 0.0210],
         [0.0456, 0.0151, 0.0531,  ..., 0.0226, 0.0270, 0.0210],
         [0.0447, 0.0151, 0.0531,  ..., 0.0262, 0.9189, 0.9369],
         [0.0447, 0.9547, 0.8345,  ..., 0.9287, 0.0270, 0.0210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3419e-02, 9.6511e-03, 9.7958e-01,  ..., 9.7394e-01,
          1.6340e-02, 3.0685e-02],
         [2.3419e-02, 9.6511e-03, 6.8070e-03,  ..., 8.6880e-03,
          1.6340e-02, 3.0473e-02],
         [9.2974e-01, 9.6511e-03, 6.8070e-03,  ..., 8.6880e-03,
          9.5098e-01, 9.0837e-01],
         [2.3419e-02, 9.7105e-01, 6.8070e-03,  ..., 8.6880e-03,
          1.6340e-02, 3.0473e-02]],
        [[3.6911e-02, 1.9425e-02, 9.8700e-01,  ..., 9.1933e-01,
          4.3347e-04, 4.1866e-02],
         [3.6911e-02, 1.9425e-02, 4.3316e-03,  ..., 1.4378e-02,
          4.3347e-04, 4.1866e-02],
         [8.8927e-01, 1.9425e-02, 4.3316e-03,  ..., 1.4378e-02,
          4.3347e-04, 8.7203e-01],
         [3.6911e-02, 9.4172e-01, 4.3316e-03,  ..., 5.1916e-02,
          9.9870e-01, 4.4236e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9959, 0.0411, 0.0825,  ..., 0.9635, 0.8094, 0.0352],
         [0.0014, 0.0411, 0.0626,  ..., 0.0153, 0.0703, 0.0352],
         [0.0014, 0.0493, 0.0808,  ..., 0.0106, 0.0634, 0.0352],
         [0.0014, 0.8684, 0.7741,  ..., 0.0106, 0.0569, 0.8945]],
        [[0.5878, 0.0205, 0.0184,  ..., 0.0243, 0.0146, 0.0111],
         [0.2263, 0.0205, 0.0184,  ..., 0.0243, 0.0146, 0.0111],
         [0.0929, 0.0205, 0.0184,  ..., 0.0243, 0.9561, 0.9666],
         [0.0929, 0.9384, 0.9447,  ..., 0.9272, 0.0146, 0.0111]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:38:13,451 [Process: 0] Synchronize training processes
2024-08-19 13:38:13,451 [Process: 0] Evaluating...
2024-08-19 13:38:13,453 [Process: 0] EPOCH 94:
2024-08-19 13:38:13,455 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:38:14,488 [Process: 0] Synchronize training processes
2024-08-19 13:38:14,489 [Process: 0] Evaluating...
2024-08-19 13:38:14,490 [Process: 0] EPOCH 95:
2024-08-19 13:38:14,492 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1207e-02, 2.7961e-03, 9.5803e-01,  ..., 9.8234e-01,
          1.4694e-02, 3.0308e-02],
         [9.1207e-02, 1.9845e-03, 1.3990e-02,  ..., 5.8874e-03,
          1.4694e-02, 3.0308e-02],
         [7.2638e-01, 1.9845e-03, 1.3990e-02,  ..., 5.8874e-03,
          9.5592e-01, 9.0908e-01],
         [9.1207e-02, 9.9323e-01, 1.3990e-02,  ..., 5.8874e-03,
          1.4694e-02, 3.0308e-02]],
        [[4.0818e-02, 5.8482e-04, 8.9716e-01,  ..., 9.6326e-01,
          9.4237e-03, 6.9809e-02],
         [4.0002e-02, 5.8482e-04, 2.6784e-02,  ..., 1.2246e-02,
          9.4237e-03, 6.3564e-02],
         [8.7918e-01, 5.8482e-04, 2.6784e-02,  ..., 1.2246e-02,
          9.4237e-03, 7.9029e-01],
         [4.0002e-02, 9.9825e-01, 4.9269e-02,  ..., 1.2246e-02,
          9.7173e-01, 7.6338e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8737, 0.0599, 0.0516,  ..., 0.9912, 0.8949, 0.0651],
         [0.0433, 0.0723, 0.0580,  ..., 0.0029, 0.0501, 0.0792],
         [0.0443, 0.0599, 0.0535,  ..., 0.0029, 0.0275, 0.0656],
         [0.0388, 0.8078, 0.8369,  ..., 0.0029, 0.0275, 0.7900]],
        [[0.3277, 0.0509, 0.0545,  ..., 0.0302, 0.0154, 0.0147],
         [0.3984, 0.0473, 0.0545,  ..., 0.0302, 0.0154, 0.0147],
         [0.1168, 0.0490, 0.0635,  ..., 0.0302, 0.9538, 0.9558],
         [0.1571, 0.8528, 0.8275,  ..., 0.9094, 0.0154, 0.0147]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0280, 0.0020, 0.9951,  ..., 0.9876, 0.0239, 0.0291],
         [0.0280, 0.0020, 0.0016,  ..., 0.0041, 0.0239, 0.0291],
         [0.9160, 0.0020, 0.0016,  ..., 0.0041, 0.9283, 0.9126],
         [0.0280, 0.9940, 0.0016,  ..., 0.0041, 0.0239, 0.0291]],
        [[0.0309, 0.0439, 0.9575,  ..., 0.9493, 0.0064, 0.0246],
         [0.0309, 0.0495, 0.0142,  ..., 0.0158, 0.0045, 0.0246],
         [0.9073, 0.0439, 0.0142,  ..., 0.0158, 0.0045, 0.9261],
         [0.0309, 0.8627, 0.0142,  ..., 0.0191, 0.9846, 0.0246]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9602, 0.0204, 0.0425,  ..., 0.9071, 0.2692, 0.0142],
         [0.0165, 0.0204, 0.0425,  ..., 0.0303, 0.2616, 0.0142],
         [0.0117, 0.0204, 0.0425,  ..., 0.0323, 0.1211, 0.0142],
         [0.0117, 0.9387, 0.8726,  ..., 0.0303, 0.3481, 0.9574]],
        [[0.8686, 0.0197, 0.0340,  ..., 0.0723, 0.0255, 0.0082],
         [0.0528, 0.0197, 0.0477,  ..., 0.0759, 0.0255, 0.0082],
         [0.0393, 0.0197, 0.0340,  ..., 0.0678, 0.9236, 0.9755],
         [0.0393, 0.9410, 0.8843,  ..., 0.7840, 0.0255, 0.0082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:38:15,531 [Process: 0] Synchronize training processes
2024-08-19 13:38:15,532 [Process: 0] Evaluating...
2024-08-19 13:38:15,533 [Process: 0] EPOCH 96:
2024-08-19 13:38:15,535 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:38:16,573 [Process: 0] Synchronize training processes
2024-08-19 13:38:16,573 [Process: 0] Evaluating...
2024-08-19 13:38:16,575 [Process: 0] EPOCH 97:
2024-08-19 13:38:16,577 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1055, 0.0023, 0.9617,  ..., 0.9897, 0.0204, 0.0153],
         [0.1055, 0.0023, 0.0112,  ..., 0.0034, 0.0204, 0.0153],
         [0.4833, 0.0023, 0.0112,  ..., 0.0034, 0.9389, 0.9542],
         [0.3057, 0.9932, 0.0159,  ..., 0.0034, 0.0204, 0.0153]],
        [[0.0411, 0.0011, 0.9843,  ..., 0.9822, 0.0080, 0.0441],
         [0.0411, 0.0011, 0.0052,  ..., 0.0059, 0.0080, 0.0441],
         [0.8764, 0.0011, 0.0052,  ..., 0.0059, 0.0080, 0.8677],
         [0.0414, 0.9966, 0.0052,  ..., 0.0059, 0.9761, 0.0441]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9858, 0.0252, 0.0398,  ..., 0.9679, 0.1072, 0.0838],
         [0.0074, 0.0252, 0.0815,  ..., 0.0144, 0.1296, 0.1019],
         [0.0034, 0.0252, 0.0398,  ..., 0.0089, 0.0885, 0.0708],
         [0.0034, 0.9244, 0.8389,  ..., 0.0089, 0.6746, 0.7434]],
        [[0.8083, 0.0524, 0.0477,  ..., 0.0342, 0.0024, 0.0071],
         [0.1198, 0.0421, 0.0371,  ..., 0.0342, 0.0024, 0.0071],
         [0.0359, 0.0421, 0.0371,  ..., 0.0342, 0.9928, 0.9787],
         [0.0359, 0.8635, 0.8781,  ..., 0.8975, 0.0024, 0.0071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.0777e-02, 9.8044e-04, 9.8588e-01,  ..., 9.8407e-01,
          1.4029e-02, 2.0782e-02],
         [8.0777e-02, 9.8044e-04, 4.7070e-03,  ..., 5.1772e-03,
          1.4029e-02, 2.0782e-02],
         [7.5767e-01, 9.8044e-04, 4.7070e-03,  ..., 5.1772e-03,
          9.5791e-01, 9.3765e-01],
         [8.0777e-02, 9.9706e-01, 4.7070e-03,  ..., 5.5778e-03,
          1.4029e-02, 2.0782e-02]],
        [[3.4371e-02, 1.0020e-02, 9.9265e-01,  ..., 9.4268e-01,
          1.1236e-02, 1.9938e-02],
         [3.4371e-02, 1.0020e-02, 2.4491e-03,  ..., 1.5130e-02,
          1.1236e-02, 1.9938e-02],
         [8.9270e-01, 1.0020e-02, 2.4491e-03,  ..., 1.5130e-02,
          1.1236e-02, 9.4019e-01],
         [3.8556e-02, 9.6994e-01, 2.4491e-03,  ..., 2.7056e-02,
          9.6629e-01, 1.9938e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9874, 0.0403, 0.0391,  ..., 0.9464, 0.1452, 0.0235],
         [0.0042, 0.0403, 0.0423,  ..., 0.0174, 0.1749, 0.0235],
         [0.0042, 0.0434, 0.0391,  ..., 0.0189, 0.1100, 0.0235],
         [0.0042, 0.8760, 0.8794,  ..., 0.0174, 0.5699, 0.9296]],
        [[0.2862, 0.0187, 0.0291,  ..., 0.0514, 0.0289, 0.0102],
         [0.6011, 0.0187, 0.0291,  ..., 0.0514, 0.0289, 0.0102],
         [0.0564, 0.0187, 0.0291,  ..., 0.0514, 0.9133, 0.9694],
         [0.0564, 0.9439, 0.9128,  ..., 0.8457, 0.0289, 0.0102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:38:17,611 [Process: 0] Synchronize training processes
2024-08-19 13:38:17,611 [Process: 0] Evaluating...
2024-08-19 13:38:17,613 [Process: 0] EPOCH 98:
2024-08-19 13:38:17,615 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:38:18,675 [Process: 0] Synchronize training processes
2024-08-19 13:38:18,676 [Process: 0] Evaluating...
2024-08-19 13:38:18,678 [Process: 0] EPOCH 99:
2024-08-19 13:38:18,680 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0269e-01, 3.7305e-04, 9.7068e-01,  ..., 9.4542e-01,
          3.1793e-02, 1.5703e-02],
         [1.2313e-01, 3.7305e-04, 9.8730e-03,  ..., 1.8193e-02,
          3.1793e-02, 1.5703e-02],
         [6.7149e-01, 3.7305e-04, 9.7215e-03,  ..., 1.8193e-02,
          9.0462e-01, 9.5289e-01],
         [1.0269e-01, 9.9888e-01, 9.7215e-03,  ..., 1.8193e-02,
          3.1793e-02, 1.5703e-02]],
        [[1.5380e-02, 5.4213e-03, 9.4419e-01,  ..., 9.5200e-01,
          1.2147e-02, 3.2578e-02],
         [1.5380e-02, 5.4213e-03, 1.8604e-02,  ..., 1.6001e-02,
          1.2147e-02, 3.2578e-02],
         [9.5386e-01, 5.4213e-03, 1.8604e-02,  ..., 1.6001e-02,
          1.2147e-02, 9.0227e-01],
         [1.5380e-02, 9.8374e-01, 1.8604e-02,  ..., 1.6001e-02,
          9.6356e-01, 3.2578e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0550, 0.0357, 0.0334,  ..., 0.9021, 0.6989, 0.0301],
         [0.0550, 0.0357, 0.0334,  ..., 0.0651, 0.0947, 0.0301],
         [0.8351, 0.0357, 0.0334,  ..., 0.0164, 0.0902, 0.0301],
         [0.0550, 0.8928, 0.8998,  ..., 0.0164, 0.1163, 0.9096]],
        [[0.7353, 0.0158, 0.0290,  ..., 0.0237, 0.0121, 0.0318],
         [0.1653, 0.0158, 0.0290,  ..., 0.0237, 0.0121, 0.0318],
         [0.0497, 0.0158, 0.0290,  ..., 0.0237, 0.9637, 0.9045],
         [0.0497, 0.9526, 0.9131,  ..., 0.9289, 0.0121, 0.0318]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0471, 0.0015, 0.9461,  ..., 0.9874, 0.0161, 0.0470],
         [0.0471, 0.0015, 0.0180,  ..., 0.0042, 0.0161, 0.0470],
         [0.8281, 0.0015, 0.0180,  ..., 0.0042, 0.9517, 0.8591],
         [0.0777, 0.9955, 0.0180,  ..., 0.0042, 0.0161, 0.0470]],
        [[0.0346, 0.0069, 0.9753,  ..., 0.9668, 0.0121, 0.0158],
         [0.0346, 0.0069, 0.0082,  ..., 0.0090, 0.0089, 0.0158],
         [0.8963, 0.0069, 0.0082,  ..., 0.0090, 0.0089, 0.9527],
         [0.0346, 0.9793, 0.0082,  ..., 0.0151, 0.9701, 0.0158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3358, 0.0351, 0.0161,  ..., 0.8870, 0.2200, 0.0319],
         [0.0850, 0.0351, 0.0161,  ..., 0.0377, 0.1203, 0.0319],
         [0.4942, 0.0371, 0.0161,  ..., 0.0377, 0.2091, 0.0319],
         [0.0850, 0.8927, 0.9518,  ..., 0.0377, 0.4507, 0.9042]],
        [[0.6308, 0.0298, 0.0105,  ..., 0.0229, 0.0073, 0.0202],
         [0.1956, 0.0298, 0.0105,  ..., 0.0229, 0.0073, 0.0202],
         [0.0868, 0.0298, 0.0105,  ..., 0.0229, 0.9782, 0.9395],
         [0.0868, 0.9106, 0.9685,  ..., 0.9314, 0.0073, 0.0202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:38:19,718 [Process: 0] Synchronize training processes
2024-08-19 13:38:19,718 [Process: 0] Evaluating...
2024-08-19 13:38:19,720 [Process: 0] EPOCH 100:
2024-08-19 13:38:19,722 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:38:20,773 [Process: 0] Synchronize training processes
2024-08-19 13:38:20,773 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0684, 0.0022, 0.9917,  ..., 0.9691, 0.0404, 0.0499],
         [0.0684, 0.0022, 0.0028,  ..., 0.0100, 0.0404, 0.0499],
         [0.7671, 0.0022, 0.0028,  ..., 0.0100, 0.8787, 0.8503],
         [0.0960, 0.9933, 0.0028,  ..., 0.0109, 0.0404, 0.0499]],
        [[0.0224, 0.0158, 0.9732,  ..., 0.9309, 0.0370, 0.0211],
         [0.0224, 0.0160, 0.0089,  ..., 0.0220, 0.0886, 0.0211],
         [0.9327, 0.0158, 0.0089,  ..., 0.0220, 0.0370, 0.9367],
         [0.0224, 0.9525, 0.0089,  ..., 0.0252, 0.8374, 0.0211]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8361, 0.0309, 0.0581,  ..., 0.9515, 0.7590, 0.0680],
         [0.0485, 0.0309, 0.0581,  ..., 0.0214, 0.0710, 0.0824],
         [0.0765, 0.0309, 0.0817,  ..., 0.0135, 0.1045, 0.0654],
         [0.0389, 0.9074, 0.8022,  ..., 0.0135, 0.0655, 0.7842]],
        [[0.0715, 0.1071, 0.1506,  ..., 0.0138, 0.0537, 0.0333],
         [0.7455, 0.0876, 0.1461,  ..., 0.0138, 0.0537, 0.0333],
         [0.0958, 0.1366, 0.1000,  ..., 0.0138, 0.8355, 0.0333],
         [0.0872, 0.6686, 0.6033,  ..., 0.9587, 0.0570, 0.9002]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0159, 0.0023, 0.9923,  ..., 0.9870, 0.0338, 0.0243],
         [0.0159, 0.0023, 0.0026,  ..., 0.0043, 0.0338, 0.0243],
         [0.9523, 0.0023, 0.0026,  ..., 0.0043, 0.8987, 0.9271],
         [0.0159, 0.9931, 0.0026,  ..., 0.0043, 0.0338, 0.0243]],
        [[0.0224, 0.0082, 0.8904,  ..., 0.8888, 0.0019, 0.0158],
         [0.0224, 0.0093, 0.0381,  ..., 0.0244, 0.0019, 0.0158],
         [0.9329, 0.0082, 0.0280,  ..., 0.0244, 0.0019, 0.9525],
         [0.0224, 0.9744, 0.0435,  ..., 0.0624, 0.9943, 0.0158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...