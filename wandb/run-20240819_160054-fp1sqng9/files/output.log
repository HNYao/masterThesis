2024-08-19 16:00:55,774 [Worker 0] Is distributed: False
2024-08-19 16:00:55,775 [Process: 0] Starting training
2024-08-19 16:00:55,775 [Process: 0] EPOCH 1:
2024-08-19 16:00:55,777 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2028, 0.3592, 0.1945,  ..., 0.1251, 0.4740, 0.1963],
         [0.3724, 0.2667, 0.1582,  ..., 0.1394, 0.1753, 0.4111],
         [0.2220, 0.1966, 0.4491,  ..., 0.5495, 0.1753, 0.1963],
         [0.2028, 0.1774, 0.1982,  ..., 0.1860, 0.1753, 0.1963]],
        [[0.3022, 0.1658, 0.5318,  ..., 0.2739, 0.2172, 0.1463],
         [0.1963, 0.4420, 0.0963,  ..., 0.3728, 0.2172, 0.2151],
         [0.1502, 0.2115, 0.0963,  ..., 0.1767, 0.3485, 0.1463],
         [0.3513, 0.1806, 0.2755,  ..., 0.1767, 0.2172, 0.4923]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 16:01:04,979 [Process: 0] Synchronize training processes
2024-08-19 16:01:04,979 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2680, 0.2511, 0.2248,  ..., 0.3109, 0.2208, 0.2180],
         [0.2706, 0.2555, 0.2486,  ..., 0.2481, 0.1533, 0.2216],
         [0.2307, 0.2467, 0.1572,  ..., 0.1854, 0.1470, 0.2180],
         [0.2307, 0.2467, 0.3695,  ..., 0.2557, 0.4789, 0.3425]],
        [[0.2856, 0.2551, 0.2473,  ..., 0.2800, 0.2359, 0.2102],
         [0.2434, 0.3104, 0.2716,  ..., 0.2768, 0.2565, 0.2102],
         [0.2049, 0.1746, 0.2173,  ..., 0.1722, 0.2266, 0.3693],
         [0.2662, 0.2599, 0.2637,  ..., 0.2710, 0.2810, 0.2102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 16:01:05,948 [Process: 0] EPOCH 2:
2024-08-19 16:01:05,950 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 16:01:06,879 [Process: 0] Synchronize training processes
2024-08-19 16:01:06,879 [Process: 0] Evaluating...
2024-08-19 16:01:06,881 [Process: 0] EPOCH 3:
2024-08-19 16:01:06,882 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2758, 0.2683, 0.2722,  ..., 0.2519, 0.2713, 0.2835],
         [0.2524, 0.2529, 0.2581,  ..., 0.2551, 0.2625, 0.2466],
         [0.1956, 0.2001, 0.1923,  ..., 0.2354, 0.1797, 0.2003],
         [0.2763, 0.2786, 0.2774,  ..., 0.2576, 0.2865, 0.2695]],
        [[0.2500, 0.2671, 0.2627,  ..., 0.2440, 0.0696, 0.2624],
         [0.2500, 0.2288, 0.2861,  ..., 0.2703, 0.0696, 0.2525],
         [0.2500, 0.2288, 0.1910,  ..., 0.2011, 0.7911, 0.2059],
         [0.2500, 0.2754, 0.2603,  ..., 0.2846, 0.0696, 0.2792]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2864, 0.2659, 0.2778,  ..., 0.2684, 0.1288, 0.2171],
         [0.2449, 0.2465, 0.2558,  ..., 0.2541, 0.1288, 0.2528],
         [0.2002, 0.1985, 0.1979,  ..., 0.2008, 0.6137, 0.3130],
         [0.2685, 0.2891, 0.2684,  ..., 0.2766, 0.1288, 0.2171]],
        [[0.2425, 0.2742, 0.2729,  ..., 0.2756, 0.2783, 0.1012],
         [0.2424, 0.2458, 0.2416,  ..., 0.2525, 0.2622, 0.1012],
         [0.2573, 0.1965, 0.2132,  ..., 0.1979, 0.2023, 0.6963],
         [0.2579, 0.2835, 0.2723,  ..., 0.2739, 0.2572, 0.1012]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2702, 0.2631, 0.2796,  ..., 0.2738, 0.2632, 0.2693],
         [0.2399, 0.2366, 0.2372,  ..., 0.2452, 0.2531, 0.2552],
         [0.1981, 0.2123, 0.2058,  ..., 0.1979, 0.2110, 0.2045],
         [0.2919, 0.2880, 0.2775,  ..., 0.2831, 0.2726, 0.2710]],
        [[0.1041, 0.2688, 0.2733,  ..., 0.2701, 0.1850, 0.2404],
         [0.1041, 0.2456, 0.2489,  ..., 0.2479, 0.1850, 0.2607],
         [0.6878, 0.1992, 0.1933,  ..., 0.2092, 0.4450, 0.2538],
         [0.1041, 0.2864, 0.2845,  ..., 0.2728, 0.1850, 0.2452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 16:01:07,783 [Process: 0] Synchronize training processes
2024-08-19 16:01:07,783 [Process: 0] Evaluating...
2024-08-19 16:01:07,785 [Process: 0] EPOCH 4:
2024-08-19 16:01:07,787 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 16:01:08,711 [Process: 0] Synchronize training processes
2024-08-19 16:01:08,711 [Process: 0] Evaluating...
2024-08-19 16:01:08,713 [Process: 0] EPOCH 5:
2024-08-19 16:01:08,714 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2957, 0.2985, 0.2876,  ..., 0.2798, 0.0769, 0.2308],
         [0.2404, 0.2398, 0.2243,  ..., 0.2379, 0.0769, 0.2645],
         [0.1803, 0.1754, 0.1951,  ..., 0.1904, 0.7693, 0.2445],
         [0.2836, 0.2863, 0.2930,  ..., 0.2919, 0.0769, 0.2602]],
        [[0.0986, 0.2914, 0.2973,  ..., 0.2791, 0.2982, 0.1050],
         [0.0986, 0.2489, 0.2334,  ..., 0.2585, 0.2454, 0.1050],
         [0.7041, 0.1847, 0.1903,  ..., 0.1811, 0.1835, 0.6850],
         [0.0986, 0.2750, 0.2789,  ..., 0.2813, 0.2728, 0.1050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2869, 0.2935, 0.2891,  ..., 0.2905, 0.3050, 0.2819],
         [0.2289, 0.2428, 0.2378,  ..., 0.2259, 0.2331, 0.2208],
         [0.1903, 0.1819, 0.2015,  ..., 0.1859, 0.1925, 0.1984],
         [0.2939, 0.2818, 0.2717,  ..., 0.2976, 0.2694, 0.2989]],
        [[0.0153, 0.2845, 0.2994,  ..., 0.3073, 0.1650, 0.2392],
         [0.0153, 0.2434, 0.2177,  ..., 0.2236, 0.1650, 0.2529],
         [0.9540, 0.1873, 0.2074,  ..., 0.2008, 0.5051, 0.2476],
         [0.0153, 0.2847, 0.2755,  ..., 0.2682, 0.1650, 0.2603]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3001, 0.2980, 0.2881,  ..., 0.2972, 0.0499, 0.2317],
         [0.2230, 0.2241, 0.2386,  ..., 0.2239, 0.0499, 0.2556],
         [0.1881, 0.1822, 0.1869,  ..., 0.1923, 0.8502, 0.2716],
         [0.2889, 0.2957, 0.2864,  ..., 0.2866, 0.0499, 0.2411]],
        [[0.1450, 0.3014, 0.2964,  ..., 0.2943, 0.2335, 0.1688],
         [0.1450, 0.2306, 0.2143,  ..., 0.2356, 0.2621, 0.1688],
         [0.5651, 0.1926, 0.1945,  ..., 0.1917, 0.2793, 0.4937],
         [0.1450, 0.2753, 0.2948,  ..., 0.2784, 0.2252, 0.1688]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2930, 0.2997, 0.2841,  ..., 0.3080, 0.3039, 0.3023],
         [0.2118, 0.2188, 0.2073,  ..., 0.2177, 0.2144, 0.2096],
         [0.1970, 0.1887, 0.2025,  ..., 0.1893, 0.2017, 0.2000],
         [0.2981, 0.2928, 0.3060,  ..., 0.2850, 0.2800, 0.2880]],
        [[0.1675, 0.2932, 0.2916,  ..., 0.2731, 0.1779, 0.2853],
         [0.2388, 0.2201, 0.2286,  ..., 0.2542, 0.1779, 0.2329],
         [0.4101, 0.1870, 0.1915,  ..., 0.2070, 0.4663, 0.2110],
         [0.1836, 0.2997, 0.2883,  ..., 0.2657, 0.1779, 0.2708]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-19 16:01:09,659 [Process: 0] Synchronize training processes
2024-08-19 16:01:09,660 [Process: 0] Evaluating...
2024-08-19 16:01:09,661 [Process: 0] EPOCH 6:
2024-08-19 16:01:09,663 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 16:01:10,596 [Process: 0] Synchronize training processes
2024-08-19 16:01:10,596 [Process: 0] Evaluating...
2024-08-19 16:01:10,598 [Process: 0] EPOCH 7:
2024-08-19 16:01:10,599 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 16:01:11,525 [Process: 0] Synchronize training processes
2024-08-19 16:01:11,525 [Process: 0] Evaluating...
2024-08-19 16:01:11,527 [Process: 0] EPOCH 8:
2024-08-19 16:01:11,528 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.2834, 0.2922, 0.2908,  ..., 0.2985, 0.1381, 0.2200],
         [0.2411, 0.2099, 0.2271,  ..., 0.2153, 0.2589, 0.2680],
         [0.2043, 0.1994, 0.2004,  ..., 0.1890, 0.4650, 0.2892],
         [0.2713, 0.2985, 0.2817,  ..., 0.2972, 0.1381, 0.2228]],
        [[0.1632, 0.3105, 0.2955,  ..., 0.3039, 0.1899, 0.1799],
         [0.2386, 0.2122, 0.1974,  ..., 0.2113, 0.2657, 0.1799],
         [0.4350, 0.2122, 0.1922,  ..., 0.1849, 0.3546, 0.4603],
         [0.1632, 0.2651, 0.3149,  ..., 0.2999, 0.1899, 0.1799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3126, 0.2527, 0.3416,  ..., 0.3087, 0.2973, 0.3171],
         [0.1951, 0.2593, 0.1977,  ..., 0.1987, 0.2279, 0.1952],
         [0.1951, 0.2501, 0.1699,  ..., 0.1807, 0.1942, 0.1952],
         [0.2973, 0.2379, 0.2908,  ..., 0.3119, 0.2807, 0.2924]],
        [[0.1901, 0.3135, 0.2999,  ..., 0.2998, 0.1999, 0.3067],
         [0.2696, 0.1982, 0.2298,  ..., 0.2360, 0.1999, 0.2000],
         [0.3501, 0.1805, 0.1859,  ..., 0.1935, 0.4002, 0.1892],
         [0.1901, 0.3077, 0.2844,  ..., 0.2707, 0.1999, 0.3041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2698, 0.3188, 0.3239,  ..., 0.3158, 0.1194, 0.2775],
         [0.2481, 0.1912, 0.1932,  ..., 0.2019, 0.1431, 0.2500],
         [0.2259, 0.1912, 0.1932,  ..., 0.2019, 0.6180, 0.2070],
         [0.2562, 0.2988, 0.2896,  ..., 0.2803, 0.1194, 0.2654]],
        [[0.3225, 0.3220, 0.3067,  ..., 0.3087, 0.3224, 0.2373],
         [0.1984, 0.1923, 0.1901,  ..., 0.1913, 0.1838, 0.2549],
         [0.1848, 0.1855, 0.1901,  ..., 0.1882, 0.1838, 0.2727],
         [0.2942, 0.3002, 0.3132,  ..., 0.3118, 0.3101, 0.2351]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3076, 0.3066, 0.3261,  ..., 0.3145, 0.3184, 0.3102],
         [0.2011, 0.2078, 0.1924,  ..., 0.1966, 0.2026, 0.2042],
         [0.1992, 0.1982, 0.1821,  ..., 0.1849, 0.1878, 0.1883],
         [0.2921, 0.2874, 0.2995,  ..., 0.3040, 0.2913, 0.2974]],
        [[0.2060, 0.3189, 0.3172,  ..., 0.2879, 0.1667, 0.1088],
         [0.2060, 0.1945, 0.2038,  ..., 0.2303, 0.1667, 0.1088],
         [0.3821, 0.1945, 0.1870,  ..., 0.2105, 0.5000, 0.6735],
         [0.2060, 0.2921, 0.2921,  ..., 0.2714, 0.1667, 0.1088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2186, 0.3241, 0.3462,  ..., 0.3065, 0.0782, 0.1506],
         [0.2239, 0.1794, 0.1914,  ..., 0.2172, 0.0782, 0.1987],
         [0.3390, 0.1794, 0.1708,  ..., 0.1935, 0.7655, 0.5002],
         [0.2185, 0.3171, 0.2916,  ..., 0.2828, 0.0782, 0.1506]],
        [[0.3496, 0.3268, 0.3331,  ..., 0.3307, 0.3406, 0.0995],
         [0.1824, 0.2009, 0.1722,  ..., 0.1918, 0.1845, 0.1103],
         [0.1705, 0.1759, 0.1722,  ..., 0.1810, 0.1845, 0.6907],
         [0.2975, 0.2963, 0.3225,  ..., 0.2966, 0.2905, 0.0995]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 16:01:12,528 [Process: 0] Synchronize training processes
2024-08-19 16:01:12,528 [Process: 0] Evaluating...
2024-08-19 16:01:12,530 [Process: 0] EPOCH 9:
2024-08-19 16:01:12,531 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3028, 0.1125, 0.3070,  ..., 0.3140, 0.3032, 0.3353],
         [0.2026, 0.1273, 0.2046,  ..., 0.2064, 0.1994, 0.1910],
         [0.1877, 0.6477, 0.2041,  ..., 0.1769, 0.1886, 0.1824],
         [0.3069, 0.1125, 0.2843,  ..., 0.3028, 0.3089, 0.2913]],
        [[0.1757, 0.3351, 0.3137,  ..., 0.2036, 0.1104, 0.1321],
         [0.1757, 0.1990, 0.2000,  ..., 0.2154, 0.1104, 0.1321],
         [0.4729, 0.1701, 0.1926,  ..., 0.3781, 0.6687, 0.6038],
         [0.1757, 0.2958, 0.2937,  ..., 0.2030, 0.1104, 0.1321]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1611, 0.3251, 0.2916,  ..., 0.3386, 0.1424, 0.1294],
         [0.1745, 0.2029, 0.2137,  ..., 0.1893, 0.1424, 0.1294],
         [0.5033, 0.1675, 0.2114,  ..., 0.1694, 0.5727, 0.6119],
         [0.1611, 0.3045, 0.2833,  ..., 0.3027, 0.1424, 0.1294]],
        [[0.3305, 0.3240, 0.3338,  ..., 0.3246, 0.3682, 0.1034],
         [0.1947, 0.1957, 0.1838,  ..., 0.1871, 0.1669, 0.1034],
         [0.1686, 0.1907, 0.1676,  ..., 0.1617, 0.1511, 0.6898],
         [0.3062, 0.2895, 0.3147,  ..., 0.3266, 0.3138, 0.1034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3232, 0.1643, 0.3522,  ..., 0.3210, 0.2931, 0.3394],
         [0.2006, 0.1643, 0.1889,  ..., 0.1879, 0.2134, 0.1804],
         [0.1750, 0.5070, 0.1575,  ..., 0.1879, 0.2030, 0.1619],
         [0.3012, 0.1643, 0.3014,  ..., 0.3032, 0.2905, 0.3184]],
        [[0.1923, 0.2872, 0.2823,  ..., 0.3422, 0.0497, 0.0911],
         [0.2085, 0.2192, 0.2161,  ..., 0.1856, 0.0497, 0.0911],
         [0.4068, 0.2219, 0.2282,  ..., 0.1521, 0.8510, 0.7267],
         [0.1923, 0.2717, 0.2733,  ..., 0.3202, 0.0497, 0.0911]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3187, 0.3275, 0.3379,  ..., 0.3315, 0.1092, 0.1213],
         [0.2029, 0.2056, 0.1946,  ..., 0.1954, 0.1092, 0.1213],
         [0.1820, 0.1818, 0.1695,  ..., 0.1782, 0.6724, 0.6362],
         [0.2964, 0.2851, 0.2979,  ..., 0.2948, 0.1092, 0.1213]],
        [[0.1348, 0.3325, 0.3353,  ..., 0.3249, 0.3661, 0.1204],
         [0.1348, 0.1942, 0.1924,  ..., 0.1897, 0.1708, 0.1489],
         [0.5955, 0.1718, 0.1683,  ..., 0.1773, 0.1540, 0.6103],
         [0.1348, 0.3014, 0.3040,  ..., 0.3082, 0.3092, 0.1204]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 16:01:13,585 [Process: 0] Synchronize training processes
2024-08-19 16:01:13,585 [Process: 0] Evaluating...
2024-08-19 16:01:13,587 [Process: 0] EPOCH 10:
2024-08-19 16:01:13,589 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 16:01:14,579 [Process: 0] Synchronize training processes
2024-08-19 16:01:14,579 [Process: 0] Evaluating...
2024-08-19 16:01:14,581 [Process: 0] EPOCH 11:
2024-08-19 16:01:14,582 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2309, 0.1265, 0.2816,  ..., 0.3350, 0.2986, 0.3318],
         [0.2186, 0.1265, 0.2184,  ..., 0.1891, 0.2124, 0.1845],
         [0.3207, 0.6204, 0.2273,  ..., 0.1818, 0.2094, 0.1823],
         [0.2299, 0.1265, 0.2726,  ..., 0.2941, 0.2796, 0.3014]],
        [[0.3111, 0.3192, 0.3305,  ..., 0.2796, 0.1647, 0.0890],
         [0.2032, 0.1924, 0.1774,  ..., 0.2205, 0.1647, 0.0890],
         [0.2032, 0.1808, 0.1692,  ..., 0.2240, 0.5058, 0.7331],
         [0.2826, 0.3076, 0.3230,  ..., 0.2759, 0.1647, 0.0890]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2785, 0.2949, 0.3069,  ..., 0.3196, 0.0556, 0.0884],
         [0.2202, 0.2117, 0.2046,  ..., 0.1920, 0.0556, 0.0884],
         [0.2262, 0.2056, 0.1888,  ..., 0.1862, 0.8332, 0.7347],
         [0.2751, 0.2878, 0.2997,  ..., 0.3021, 0.0556, 0.0884]],
        [[0.3280, 0.3325, 0.3571,  ..., 0.3552, 0.3281, 0.1608],
         [0.1901, 0.1906, 0.1839,  ..., 0.1750, 0.1818, 0.1608],
         [0.1808, 0.1613, 0.1558,  ..., 0.1633, 0.1711, 0.5177],
         [0.3011, 0.3156, 0.3033,  ..., 0.3065, 0.3190, 0.1608]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3128, 0.1656, 0.2649,  ..., 0.2990, 0.3096, 0.3275],
         [0.1924, 0.1656, 0.2189,  ..., 0.2141, 0.1939, 0.1929],
         [0.1921, 0.5032, 0.2570,  ..., 0.2043, 0.1939, 0.1929],
         [0.3028, 0.1656, 0.2592,  ..., 0.2826, 0.3026, 0.2868]],
        [[0.3805, 0.3620, 0.3620,  ..., 0.3797, 0.0824, 0.1552],
         [0.1679, 0.1810, 0.1797,  ..., 0.1747, 0.0824, 0.1775],
         [0.1367, 0.1384, 0.1778,  ..., 0.1442, 0.7529, 0.5122],
         [0.3149, 0.3187, 0.2805,  ..., 0.3014, 0.0824, 0.1552]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3786, 0.3362, 0.3749,  ..., 0.3721, 0.0858, 0.1359],
         [0.1687, 0.1883, 0.1783,  ..., 0.1844, 0.0858, 0.1359],
         [0.1626, 0.1718, 0.1460,  ..., 0.1552, 0.7425, 0.5923],
         [0.2902, 0.3038, 0.3007,  ..., 0.2883, 0.0858, 0.1359]],
        [[0.3565, 0.3340, 0.3412,  ..., 0.3488, 0.3830, 0.1743],
         [0.1808, 0.1877, 0.1932,  ..., 0.1833, 0.1569, 0.1743],
         [0.1452, 0.1877, 0.1932,  ..., 0.1827, 0.1313, 0.4772],
         [0.3174, 0.2905, 0.2723,  ..., 0.2852, 0.3288, 0.1743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-19 16:01:15,604 [Process: 0] Synchronize training processes
2024-08-19 16:01:15,604 [Process: 0] Evaluating...
2024-08-19 16:01:16,572 [Process: 0] EPOCH 12:
2024-08-19 16:01:16,574 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
(2, 512, 3)
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3492, 0.3313, 0.3342,  ..., 0.3355, 0.3659, 0.3318],
         [0.1786, 0.1859, 0.1895,  ..., 0.1838, 0.1813, 0.1909],
         [0.1712, 0.1859, 0.1653,  ..., 0.1797, 0.1592, 0.1858],
         [0.3010, 0.2970, 0.3110,  ..., 0.3010, 0.2936, 0.2915]],
        [[0.3469, 0.3118, 0.3226,  ..., 0.2949, 0.1332, 0.1689],
         [0.1872, 0.1968, 0.1962,  ..., 0.2071, 0.1332, 0.1757],
         [0.1738, 0.1968, 0.1899,  ..., 0.2071, 0.6003, 0.4864],
         [0.2921, 0.2946, 0.2913,  ..., 0.2909, 0.1332, 0.1689]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3724, 0.3663, 0.3572,  ..., 0.3231, 0.0644, 0.1769],
         [0.1669, 0.1816, 0.1756,  ..., 0.1915, 0.0644, 0.1769],
         [0.1539, 0.1562, 0.1655,  ..., 0.1901, 0.8069, 0.4692],
         [0.3068, 0.2959, 0.3017,  ..., 0.2953, 0.0644, 0.1769]],
        [[0.3320, 0.3112, 0.3557,  ..., 0.3567, 0.3617, 0.1950],
         [0.1872, 0.1969, 0.1795,  ..., 0.1756, 0.1755, 0.1990],
         [0.1796, 0.1969, 0.1677,  ..., 0.1603, 0.1502, 0.4083],
         [0.3012, 0.2951, 0.2971,  ..., 0.3074, 0.3126, 0.1977]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 16:01:17,614 [Process: 0] Synchronize training processes
2024-08-19 16:01:17,614 [Process: 0] Evaluating...
2024-08-19 16:01:17,616 [Process: 0] EPOCH 13:
2024-08-19 16:01:17,617 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 16:01:18,635 [Process: 0] Synchronize training processes
2024-08-19 16:01:18,636 [Process: 0] Evaluating...
2024-08-19 16:01:18,637 [Process: 0] EPOCH 14:
2024-08-19 16:01:18,639 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3468, 0.3418, 0.3613,  ..., 0.3145, 0.3222, 0.3130],
         [0.1782, 0.1823, 0.1802,  ..., 0.2024, 0.1905, 0.1923],
         [0.1782, 0.1823, 0.1705,  ..., 0.2024, 0.1905, 0.1923],
         [0.2969, 0.2936, 0.2880,  ..., 0.2807, 0.2968, 0.3023]],
        [[0.3607, 0.3699, 0.3542,  ..., 0.2871, 0.1068, 0.1862],
         [0.1831, 0.1646, 0.1773,  ..., 0.2177, 0.1068, 0.1862],
         [0.1568, 0.1565, 0.1751,  ..., 0.2243, 0.6797, 0.4156],
         [0.2994, 0.3089, 0.2934,  ..., 0.2709, 0.1068, 0.2121]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3808, 0.3509, 0.3660,  ..., 0.3275, 0.0798, 0.0698],
         [0.1585, 0.1792, 0.1572,  ..., 0.1876, 0.0798, 0.0730],
         [0.1541, 0.1792, 0.1572,  ..., 0.1876, 0.7606, 0.7875],
         [0.3066, 0.2908, 0.3195,  ..., 0.2973, 0.0798, 0.0698]],
        [[0.3346, 0.3782, 0.4111,  ..., 0.4349, 0.3739, 0.2609],
         [0.1728, 0.1595, 0.1581,  ..., 0.1360, 0.1755, 0.2193],
         [0.1728, 0.1516, 0.1387,  ..., 0.1240, 0.1604, 0.2563],
         [0.3198, 0.3106, 0.2921,  ..., 0.3051, 0.2902, 0.2635]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3321, 0.2834, 0.2954,  ..., 0.3413, 0.2697, 0.3034],
         [0.1939, 0.2129, 0.2034,  ..., 0.1809, 0.2102, 0.2023],
         [0.1751, 0.2263, 0.2034,  ..., 0.1764, 0.2325, 0.2023],
         [0.2989, 0.2774, 0.2977,  ..., 0.3013, 0.2876, 0.2919]],
        [[0.0924, 0.4020, 0.3977,  ..., 0.3536, 0.2265, 0.2793],
         [0.0930, 0.1513, 0.1609,  ..., 0.1714, 0.2081, 0.1975],
         [0.7221, 0.1513, 0.1440,  ..., 0.1529, 0.3525, 0.2385],
         [0.0924, 0.2953, 0.2974,  ..., 0.3221, 0.2129, 0.2848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1200, 0.4053, 0.3970,  ..., 0.4230, 0.1072, 0.0841],
         [0.1202, 0.1567, 0.1602,  ..., 0.1426, 0.1072, 0.0841],
         [0.6399, 0.1567, 0.1394,  ..., 0.1411, 0.6784, 0.7478],
         [0.1200, 0.2813, 0.3034,  ..., 0.2933, 0.1072, 0.0841]],
        [[0.3775, 0.3404, 0.3452,  ..., 0.4149, 0.4089, 0.4038],
         [0.1565, 0.1771, 0.1790,  ..., 0.1466, 0.1449, 0.1522],
         [0.1565, 0.1723, 0.1790,  ..., 0.1324, 0.1379, 0.1522],
         [0.3095, 0.3103, 0.2968,  ..., 0.3061, 0.3083, 0.2919]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 16:01:19,644 [Process: 0] Synchronize training processes
2024-08-19 16:01:19,645 [Process: 0] Evaluating...
2024-08-19 16:01:19,646 [Process: 0] EPOCH 15:
2024-08-19 16:01:19,648 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 16:01:20,629 [Process: 0] Synchronize training processes
2024-08-19 16:01:20,629 [Process: 0] Evaluating...
2024-08-19 16:01:20,631 [Process: 0] EPOCH 16:
2024-08-19 16:01:20,632 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3567, 0.3580, 0.3468,  ..., 0.3862, 0.3338, 0.3553],
         [0.1709, 0.1924, 0.1886,  ..., 0.1621, 0.1837, 0.1766],
         [0.1495, 0.1594, 0.1701,  ..., 0.1579, 0.1789, 0.1766],
         [0.3229, 0.2902, 0.2945,  ..., 0.2938, 0.3036, 0.2915]],
        [[0.1114, 0.3267, 0.3250,  ..., 0.3341, 0.1073, 0.1522],
         [0.1114, 0.1897, 0.1884,  ..., 0.1924, 0.1073, 0.1522],
         [0.6657, 0.1897, 0.1884,  ..., 0.1757, 0.6780, 0.5434],
         [0.1114, 0.2938, 0.2982,  ..., 0.2978, 0.1073, 0.1522]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1793, 0.4036, 0.3798,  ..., 0.3443, 0.0312, 0.0968],
         [0.1793, 0.1574, 0.1603,  ..., 0.1717, 0.0312, 0.0968],
         [0.4622, 0.1517, 0.1603,  ..., 0.1637, 0.9065, 0.7097],
         [0.1793, 0.2874, 0.2995,  ..., 0.3203, 0.0312, 0.0968]],
        [[0.3061, 0.3555, 0.3977,  ..., 0.3565, 0.3950, 0.1817],
         [0.1912, 0.1658, 0.1578,  ..., 0.1815, 0.1613, 0.1817],
         [0.1912, 0.1658, 0.1578,  ..., 0.1815, 0.1613, 0.4550],
         [0.3114, 0.3129, 0.2868,  ..., 0.2804, 0.2824, 0.1817]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2474, 0.2761, 0.2929,  ..., 0.2161, 0.3071, 0.4058],
         [0.2202, 0.2169, 0.2135,  ..., 0.2161, 0.2052, 0.1559],
         [0.2583, 0.2219, 0.2135,  ..., 0.3211, 0.2052, 0.1468],
         [0.2740, 0.2850, 0.2802,  ..., 0.2467, 0.2825, 0.2915]],
        [[0.1672, 0.4318, 0.3981,  ..., 0.3354, 0.1431, 0.1777],
         [0.1672, 0.1464, 0.1632,  ..., 0.1892, 0.1431, 0.1777],
         [0.4984, 0.1221, 0.1632,  ..., 0.1892, 0.5706, 0.4668],
         [0.1672, 0.2997, 0.2756,  ..., 0.2861, 0.1431, 0.1777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2418, 0.3433, 0.4164,  ..., 0.3559, 0.0776, 0.1994],
         [0.2161, 0.1798, 0.1596,  ..., 0.1788, 0.0776, 0.1994],
         [0.2575, 0.1798, 0.1251,  ..., 0.1788, 0.7671, 0.4019],
         [0.2845, 0.2971, 0.2989,  ..., 0.2865, 0.0776, 0.1994]],
        [[0.3125, 0.3350, 0.3396,  ..., 0.4187, 0.4273, 0.1358],
         [0.1969, 0.1776, 0.1816,  ..., 0.1458, 0.1513, 0.1358],
         [0.1969, 0.1776, 0.1816,  ..., 0.1356, 0.1297, 0.5927],
         [0.2937, 0.3097, 0.2971,  ..., 0.2999, 0.2918, 0.1358]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 16:01:21,609 [Process: 0] Synchronize training processes
2024-08-19 16:01:21,609 [Process: 0] Evaluating...
2024-08-19 16:01:21,611 [Process: 0] EPOCH 17:
2024-08-19 16:01:21,613 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 16:01:22,624 [Process: 0] Synchronize training processes
2024-08-19 16:01:22,624 [Process: 0] Evaluating...
2024-08-19 16:01:22,626 [Process: 0] EPOCH 18:
2024-08-19 16:01:22,628 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3998, 0.3122, 0.2884,  ..., 0.3341, 0.3523, 0.3821],
         [0.1581, 0.1965, 0.2047,  ..., 0.1807, 0.1742, 0.1657],
         [0.1481, 0.1871, 0.2047,  ..., 0.1807, 0.1676, 0.1624],
         [0.2940, 0.3042, 0.3023,  ..., 0.3046, 0.3058, 0.2898]],
        [[0.0785, 0.3808, 0.3919,  ..., 0.2071, 0.0580, 0.3478],
         [0.0785, 0.1625, 0.1632,  ..., 0.2071, 0.0652, 0.1810],
         [0.7644, 0.1620, 0.1533,  ..., 0.3787, 0.8188, 0.1810],
         [0.0785, 0.2947, 0.2916,  ..., 0.2071, 0.0580, 0.2902]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2236, 0.3327, 0.3657,  ..., 0.3997, 0.0846, 0.2582],
         [0.2202, 0.1836, 0.1759,  ..., 0.1472, 0.0846, 0.2104],
         [0.2798, 0.1836, 0.1759,  ..., 0.1464, 0.7463, 0.2218],
         [0.2764, 0.3002, 0.2825,  ..., 0.3066, 0.0846, 0.3095]],
        [[0.2826, 0.4128, 0.3454,  ..., 0.4218, 0.4474, 0.1522],
         [0.2074, 0.1462, 0.1689,  ..., 0.1517, 0.1351, 0.1522],
         [0.2074, 0.1462, 0.1689,  ..., 0.1238, 0.1351, 0.5435],
         [0.3027, 0.2948, 0.3167,  ..., 0.3028, 0.2824, 0.1522]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3700, 0.2795, 0.2905,  ..., 0.3646, 0.2889, 0.3043],
         [0.1732, 0.2026, 0.2125,  ..., 0.1685, 0.2081, 0.1977],
         [0.1732, 0.1996, 0.2125,  ..., 0.1623, 0.2081, 0.1977],
         [0.2836, 0.3183, 0.2845,  ..., 0.3046, 0.2949, 0.3004]],
        [[0.1291, 0.3097, 0.3639,  ..., 0.2771, 0.0445, 0.3760],
         [0.1463, 0.1880, 0.1716,  ..., 0.2061, 0.0445, 0.1728],
         [0.5956, 0.1880, 0.1553,  ..., 0.2384, 0.8664, 0.1483],
         [0.1291, 0.3143, 0.3092,  ..., 0.2785, 0.0445, 0.3029]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2118, 0.3224, 0.3895,  ..., 0.3891, 0.0826, 0.2066],
         [0.2118, 0.1845, 0.1597,  ..., 0.1577, 0.0826, 0.2066],
         [0.3472, 0.1845, 0.1447,  ..., 0.1577, 0.7522, 0.3740],
         [0.2291, 0.3087, 0.3061,  ..., 0.2955, 0.0826, 0.2128]],
        [[0.1989, 0.3757, 0.3467,  ..., 0.3602, 0.3701, 0.1545],
         [0.1989, 0.1730, 0.1728,  ..., 0.1785, 0.1639, 0.1545],
         [0.3741, 0.1406, 0.1716,  ..., 0.1785, 0.1633, 0.5364],
         [0.2280, 0.3107, 0.3089,  ..., 0.2828, 0.3028, 0.1545]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-19 16:01:23,636 [Process: 0] Synchronize training processes
2024-08-19 16:01:23,636 [Process: 0] Evaluating...
2024-08-19 16:01:23,638 [Process: 0] EPOCH 19:
2024-08-19 16:01:23,639 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 16:01:24,650 [Process: 0] Synchronize training processes
2024-08-19 16:01:24,650 [Process: 0] Evaluating...
2024-08-19 16:01:24,652 [Process: 0] EPOCH 20:
2024-08-19 16:01:24,654 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3580, 0.2607, 0.2915,  ..., 0.3456, 0.3291, 0.2876],
         [0.1700, 0.2010, 0.2014,  ..., 0.1748, 0.1842, 0.2075],
         [0.1664, 0.2271, 0.2014,  ..., 0.1748, 0.1842, 0.2075],
         [0.3055, 0.3112, 0.3057,  ..., 0.3049, 0.3024, 0.2975]],
        [[0.1423, 0.3966, 0.3308,  ..., 0.3561, 0.0557, 0.3804],
         [0.1423, 0.1631, 0.1788,  ..., 0.1693, 0.0557, 0.1696],
         [0.5732, 0.1631, 0.1788,  ..., 0.1693, 0.8330, 0.1525],
         [0.1423, 0.2772, 0.3116,  ..., 0.3053, 0.0557, 0.2976]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1941, 0.3844, 0.3407,  ..., 0.3342, 0.0604, 0.1961],
         [0.1941, 0.1542, 0.1755,  ..., 0.1679, 0.0604, 0.1961],
         [0.4137, 0.1518, 0.1755,  ..., 0.1649, 0.8188, 0.4117],
         [0.1980, 0.3095, 0.3083,  ..., 0.3330, 0.0604, 0.1961]],
        [[0.1772, 0.3679, 0.3496,  ..., 0.4338, 0.3829, 0.1239],
         [0.1778, 0.1633, 0.1725,  ..., 0.1389, 0.1573, 0.1239],
         [0.4436, 0.1565, 0.1725,  ..., 0.1245, 0.1573, 0.6284],
         [0.2014, 0.3122, 0.3054,  ..., 0.3028, 0.3025, 0.1239]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3861, 0.2488, 0.2844,  ..., 0.4975, 0.2923, 0.4445],
         [0.1558, 0.2103, 0.1977,  ..., 0.1300, 0.1983, 0.1408],
         [0.1558, 0.2379, 0.1977,  ..., 0.1054, 0.1983, 0.1408],
         [0.3022, 0.3030, 0.3203,  ..., 0.2671, 0.3110, 0.2740]],
        [[0.0534, 0.1700, 0.1681,  ..., 0.1834, 0.0753, 0.4067],
         [0.0534, 0.1700, 0.1681,  ..., 0.1834, 0.0753, 0.1496],
         [0.8398, 0.4900, 0.4957,  ..., 0.4499, 0.7740, 0.1496],
         [0.0534, 0.1700, 0.1681,  ..., 0.1834, 0.0753, 0.2942]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1540, 0.3472, 0.3588,  ..., 0.3459, 0.0903, 0.2015],
         [0.1540, 0.1715, 0.1641,  ..., 0.1690, 0.0903, 0.2015],
         [0.5380, 0.1715, 0.1641,  ..., 0.1690, 0.7291, 0.3236],
         [0.1540, 0.3098, 0.3130,  ..., 0.3162, 0.0903, 0.2734]],
        [[0.1910, 0.3622, 0.4199,  ..., 0.4416, 0.4067, 0.0716],
         [0.1910, 0.1720, 0.1440,  ..., 0.1418, 0.1478, 0.0716],
         [0.3905, 0.1720, 0.1440,  ..., 0.1418, 0.1478, 0.7851],
         [0.2274, 0.2939, 0.2922,  ..., 0.2748, 0.2976, 0.0716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 16:01:25,670 [Process: 0] Synchronize training processes
2024-08-19 16:01:25,670 [Process: 0] Evaluating...
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...