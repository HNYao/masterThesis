2024-08-22 14:38:29,743 [Worker 0] Is distributed: False
2024-08-22 14:38:29,744 [Process: 0] Starting training
2024-08-22 14:38:29,744 [Process: 0] EPOCH 1:
2024-08-22 14:38:29,747 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-22 14:38:39,959 [Process: 0] Synchronize training processes
2024-08-22 14:38:39,959 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2674, 0.2490, 0.2252,  ..., 0.2755, 0.2275, 0.1161],
         [0.2798, 0.2490, 0.2252,  ..., 0.2843, 0.3054, 0.2130],
         [0.1999, 0.2490, 0.2276,  ..., 0.1879, 0.1603, 0.1852],
         [0.2529, 0.2529, 0.3220,  ..., 0.2523, 0.3068, 0.4856]],
        [[0.2897, 0.2955, 0.2991,  ..., 0.3031, 0.2814, 0.1509],
         [0.2212, 0.2907, 0.2122,  ..., 0.2699, 0.2610, 0.1509],
         [0.1788, 0.1661, 0.2123,  ..., 0.2078, 0.2102, 0.5472],
         [0.3103, 0.2477, 0.2764,  ..., 0.2192, 0.2474, 0.1509]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-22 14:38:41,947 [Process: 0] EPOCH 2:
2024-08-22 14:38:41,950 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-22 14:38:42,933 [Process: 0] Synchronize training processes
2024-08-22 14:38:42,933 [Process: 0] Evaluating...
2024-08-22 14:38:42,935 [Process: 0] EPOCH 3:
2024-08-22 14:38:42,937 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2807, 0.1491, 0.2500,  ..., 0.2800, 0.2642, 0.2763],
         [0.2447, 0.1491, 0.2500,  ..., 0.2610, 0.2712, 0.2542],
         [0.1932, 0.5527, 0.2500,  ..., 0.1884, 0.1963, 0.1954],
         [0.2813, 0.1491, 0.2500,  ..., 0.2706, 0.2684, 0.2741]],
        [[0.2643, 0.2946, 0.2838,  ..., 0.2624, 0.1380, 0.1452],
         [0.2357, 0.2456, 0.2623,  ..., 0.2630, 0.1380, 0.1452],
         [0.2257, 0.2002, 0.1781,  ..., 0.2117, 0.5859, 0.5643],
         [0.2742, 0.2597, 0.2758,  ..., 0.2630, 0.1380, 0.1452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2796, 0.2733, 0.2702,  ..., 0.2717, 0.2495, 0.2204],
         [0.2484, 0.2527, 0.2547,  ..., 0.2638, 0.2426, 0.2204],
         [0.2037, 0.1944, 0.1979,  ..., 0.2034, 0.2737, 0.3388],
         [0.2682, 0.2796, 0.2772,  ..., 0.2611, 0.2342, 0.2204]],
        [[0.2725, 0.2663, 0.2689,  ..., 0.2727, 0.2254, 0.2382],
         [0.2494, 0.2502, 0.2544,  ..., 0.2527, 0.2370, 0.2382],
         [0.2160, 0.2002, 0.2080,  ..., 0.2022, 0.3054, 0.2853],
         [0.2621, 0.2834, 0.2686,  ..., 0.2724, 0.2322, 0.2382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5609e-01, 5.4118e-04, 2.6087e-01,  ..., 2.6542e-01,
          2.6510e-01, 2.6424e-01],
         [2.4965e-01, 5.4118e-04, 2.5129e-01,  ..., 2.4877e-01,
          2.4642e-01, 2.5136e-01],
         [2.3508e-01, 9.9838e-01, 2.2414e-01,  ..., 2.2044e-01,
          2.2494e-01, 2.2284e-01],
         [2.5918e-01, 5.4118e-04, 2.6370e-01,  ..., 2.6537e-01,
          2.6354e-01, 2.6156e-01]],
        [[2.6635e-01, 2.6304e-01, 2.6676e-01,  ..., 2.6425e-01,
          2.6295e-01, 2.6384e-01],
         [2.4177e-01, 2.4814e-01, 2.4767e-01,  ..., 2.4868e-01,
          2.5534e-01, 2.4734e-01],
         [2.3154e-01, 2.2215e-01, 2.2026e-01,  ..., 2.1770e-01,
          2.2011e-01, 2.2052e-01],
         [2.6035e-01, 2.6667e-01, 2.6531e-01,  ..., 2.6938e-01,
          2.6160e-01, 2.6829e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-22 14:38:43,907 [Process: 0] Synchronize training processes
2024-08-22 14:38:43,908 [Process: 0] Evaluating...
2024-08-22 14:38:43,909 [Process: 0] EPOCH 4:
2024-08-22 14:38:43,911 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-22 14:38:44,884 [Process: 0] Synchronize training processes
2024-08-22 14:38:44,884 [Process: 0] Evaluating...
2024-08-22 14:38:44,886 [Process: 0] EPOCH 5:
2024-08-22 14:38:44,888 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2304, 0.2758, 0.2785,  ..., 0.2679, 0.0037, 0.1482],
         [0.2304, 0.2481, 0.2476,  ..., 0.2467, 0.0037, 0.1482],
         [0.3087, 0.2039, 0.2087,  ..., 0.2114, 0.9889, 0.5554],
         [0.2304, 0.2721, 0.2652,  ..., 0.2740, 0.0037, 0.1482]],
        [[0.2676, 0.2773, 0.2750,  ..., 0.2702, 0.2811, 0.2827],
         [0.2531, 0.2539, 0.2515,  ..., 0.2522, 0.2494, 0.2459],
         [0.2121, 0.2075, 0.2086,  ..., 0.2076, 0.2035, 0.2104],
         [0.2671, 0.2613, 0.2649,  ..., 0.2700, 0.2660, 0.2611]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5801e-01, 3.2324e-04, 2.6465e-01,  ..., 2.6593e-01,
          2.6698e-01, 2.6701e-01],
         [2.4553e-01, 3.2324e-04, 2.4687e-01,  ..., 2.4383e-01,
          2.4450e-01, 2.4280e-01],
         [2.4017e-01, 9.9903e-01, 2.2929e-01,  ..., 2.2466e-01,
          2.2658e-01, 2.2622e-01],
         [2.5628e-01, 3.2324e-04, 2.5919e-01,  ..., 2.6559e-01,
          2.6194e-01, 2.6397e-01]],
        [[2.0241e-01, 2.6750e-01, 2.6896e-01,  ..., 2.7331e-01,
          2.7128e-01, 2.6746e-01],
         [2.0241e-01, 2.4506e-01, 2.4238e-01,  ..., 2.3759e-01,
          2.4543e-01, 2.4420e-01],
         [3.9278e-01, 2.2372e-01, 2.3011e-01,  ..., 2.2442e-01,
          2.2181e-01, 2.2356e-01],
         [2.0241e-01, 2.6372e-01, 2.5855e-01,  ..., 2.6467e-01,
          2.6148e-01, 2.6478e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2143, 0.2886, 0.2726,  ..., 0.1403, 0.0267, 0.0765],
         [0.2143, 0.2460, 0.2493,  ..., 0.1403, 0.0267, 0.0765],
         [0.3571, 0.1901, 0.2016,  ..., 0.5791, 0.9198, 0.7706],
         [0.2143, 0.2754, 0.2765,  ..., 0.1403, 0.0267, 0.0765]],
        [[0.2798, 0.2899, 0.2811,  ..., 0.2764, 0.2835, 0.2808],
         [0.2397, 0.2474, 0.2381,  ..., 0.2464, 0.2403, 0.2379],
         [0.2050, 0.2013, 0.2022,  ..., 0.2047, 0.1942, 0.2039],
         [0.2755, 0.2614, 0.2786,  ..., 0.2724, 0.2820, 0.2774]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2752, 0.0101, 0.2721,  ..., 0.2847, 0.2600, 0.2788],
         [0.2427, 0.0101, 0.2385,  ..., 0.2368, 0.2454, 0.2288],
         [0.2220, 0.9696, 0.2230,  ..., 0.2144, 0.2396, 0.2277],
         [0.2601, 0.0101, 0.2664,  ..., 0.2641, 0.2550, 0.2648]],
        [[0.0761, 0.2663, 0.2762,  ..., 0.2780, 0.2550, 0.2835],
         [0.0761, 0.2443, 0.2424,  ..., 0.2409, 0.2334, 0.2396],
         [0.7718, 0.2203, 0.2169,  ..., 0.2139, 0.2567, 0.2200],
         [0.0761, 0.2691, 0.2646,  ..., 0.2672, 0.2548, 0.2569]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-22 14:38:45,864 [Process: 0] Synchronize training processes
2024-08-22 14:38:45,864 [Process: 0] Evaluating...
2024-08-22 14:38:45,866 [Process: 0] EPOCH 6:
2024-08-22 14:38:45,868 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-22 14:38:46,840 [Process: 0] Synchronize training processes
2024-08-22 14:38:46,840 [Process: 0] Evaluating...
2024-08-22 14:38:46,842 [Process: 0] EPOCH 7:
2024-08-22 14:38:46,844 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2606, 0.2841, 0.2896,  ..., 0.2879, 0.0257, 0.2002],
         [0.2440, 0.2310, 0.2472,  ..., 0.2390, 0.0257, 0.2002],
         [0.2355, 0.2001, 0.2006,  ..., 0.2006, 0.9228, 0.3994],
         [0.2599, 0.2848, 0.2625,  ..., 0.2725, 0.0257, 0.2002]],
        [[0.2996, 0.2931, 0.2822,  ..., 0.2917, 0.2912, 0.2881],
         [0.2451, 0.2274, 0.2423,  ..., 0.2431, 0.2312, 0.2337],
         [0.1924, 0.2143, 0.2006,  ..., 0.1978, 0.2023, 0.1998],
         [0.2630, 0.2653, 0.2749,  ..., 0.2674, 0.2753, 0.2783]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9073e-01, 2.7163e-04, 2.9150e-01,  ..., 2.9298e-01,
          3.0001e-01, 2.9845e-01],
         [2.3109e-01, 2.7163e-04, 2.3931e-01,  ..., 2.3669e-01,
          2.2668e-01, 2.1997e-01],
         [2.1158e-01, 9.9919e-01, 2.0613e-01,  ..., 2.0396e-01,
          2.1392e-01, 2.1380e-01],
         [2.6660e-01, 2.7163e-04, 2.6307e-01,  ..., 2.6638e-01,
          2.5939e-01, 2.6778e-01]],
        [[8.4288e-02, 2.8621e-01, 2.8121e-01,  ..., 2.9581e-01,
          1.2670e-01, 2.8882e-01],
         [8.4288e-02, 2.3625e-01, 2.4237e-01,  ..., 2.3455e-01,
          1.2670e-01, 2.3180e-01],
         [7.4714e-01, 2.1017e-01, 2.1083e-01,  ..., 2.0740e-01,
          6.1991e-01, 2.1292e-01],
         [8.4288e-02, 2.6737e-01, 2.6559e-01,  ..., 2.6224e-01,
          1.2670e-01, 2.6647e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0499, 0.2978, 0.2344,  ..., 0.2881, 0.1735, 0.0498],
         [0.0499, 0.2249, 0.1995,  ..., 0.2254, 0.1735, 0.0498],
         [0.8503, 0.1999, 0.3468,  ..., 0.2163, 0.4796, 0.8505],
         [0.0499, 0.2773, 0.2193,  ..., 0.2703, 0.1735, 0.0498]],
        [[0.3238, 0.3015, 0.3006,  ..., 0.3015, 0.3074, 0.2938],
         [0.2206, 0.2307, 0.2246,  ..., 0.2314, 0.2169, 0.2214],
         [0.1931, 0.1995, 0.2021,  ..., 0.1954, 0.2005, 0.2122],
         [0.2625, 0.2683, 0.2727,  ..., 0.2716, 0.2752, 0.2726]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3051, 0.2500, 0.2982,  ..., 0.3128, 0.2951, 0.2915],
         [0.2219, 0.2500, 0.2268,  ..., 0.2191, 0.2273, 0.2226],
         [0.2124, 0.2500, 0.2094,  ..., 0.2044, 0.2133, 0.2175],
         [0.2606, 0.2500, 0.2656,  ..., 0.2637, 0.2643, 0.2684]],
        [[0.2576, 0.2987, 0.3025,  ..., 0.2981, 0.1061, 0.2932],
         [0.2229, 0.2191, 0.2192,  ..., 0.2185, 0.1191, 0.2223],
         [0.2635, 0.2191, 0.2118,  ..., 0.2170, 0.6627, 0.2135],
         [0.2559, 0.2631, 0.2666,  ..., 0.2663, 0.1121, 0.2710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-22 14:38:47,814 [Process: 0] Synchronize training processes
2024-08-22 14:38:47,815 [Process: 0] Evaluating...
2024-08-22 14:38:47,816 [Process: 0] EPOCH 8:
2024-08-22 14:38:47,818 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 179, in train_one_epoch
    for i, batch in enumerate(self.train_loader):
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 186, in __getitem__
    scene_ref_pcd = o3d.io.read_point_cloud(os.path.join(file_path, "mask_ref.ply"))
KeyboardInterrupt
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.3049, 0.3478,  ..., 0.3316, 0.1958, 0.1448],
         [0.2500, 0.2206, 0.2046,  ..., 0.2129, 0.1958, 0.1448],
         [0.2500, 0.1981, 0.1702,  ..., 0.1855, 0.4126, 0.5656],
         [0.2500, 0.2764, 0.2773,  ..., 0.2699, 0.1958, 0.1448]],
        [[0.3450, 0.3041, 0.3104,  ..., 0.3256, 0.3139, 0.3041],
         [0.2105, 0.2302, 0.2165,  ..., 0.2151, 0.2156, 0.2209],
         [0.1833, 0.2004, 0.1915,  ..., 0.1970, 0.2021, 0.2005],
         [0.2611, 0.2653, 0.2817,  ..., 0.2623, 0.2684, 0.2745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True