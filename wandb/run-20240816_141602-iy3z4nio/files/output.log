2024-08-16 14:16:08,084 [Worker 0] Is distributed: False
2024-08-16 14:16:08,085 [Process: 0] Starting training
2024-08-16 14:16:08,085 [Process: 0] EPOCH 1:
2024-08-16 14:16:08,087 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2288, 0.2102, 0.2691,  ..., 0.3613, 0.3844, 0.3568],
         [0.2360, 0.3695, 0.2254,  ..., 0.2129, 0.2029, 0.2303],
         [0.3065, 0.2102, 0.2067,  ..., 0.2129, 0.2029, 0.2065],
         [0.2288, 0.2102, 0.2988,  ..., 0.2129, 0.2099, 0.2065]],
        [[0.2659, 0.2759, 0.2439,  ..., 0.2364, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2683,  ..., 0.2658, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2439,  ..., 0.2615, 0.3221, 0.2638],
         [0.2447, 0.2414, 0.2439,  ..., 0.2364, 0.2260, 0.2454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:10,810 [Process: 0] Synchronize training processes
2024-08-16 14:16:10,811 [Process: 0] Evaluating...
2024-08-16 14:16:10,820 [Process: 0] EPOCH 2:
2024-08-16 14:16:10,822 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2203, 0.1017, 0.1348,  ..., 0.1602, 0.1801, 0.3390],
         [0.2110, 0.1017, 0.1348,  ..., 0.1602, 0.1801, 0.2203],
         [0.3578, 0.6798, 0.5957,  ..., 0.5195, 0.4598, 0.2203],
         [0.2110, 0.1168, 0.1348,  ..., 0.1602, 0.1801, 0.2203]],
        [[0.1615, 0.2078, 0.1307,  ..., 0.1469, 0.0809, 0.1508],
         [0.2211, 0.2957, 0.3222,  ..., 0.3226, 0.1586, 0.3048],
         [0.1615, 0.2078, 0.1307,  ..., 0.1469, 0.2504, 0.1508],
         [0.4559, 0.2886, 0.4165,  ..., 0.3836, 0.5101, 0.3936]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2283, 0.2287, 0.2216,  ..., 0.2262, 0.2246, 0.2285],
         [0.2283, 0.2287, 0.2216,  ..., 0.2262, 0.2246, 0.2285],
         [0.2283, 0.2287, 0.2216,  ..., 0.2262, 0.2246, 0.2285],
         [0.3151, 0.3138, 0.3352,  ..., 0.3213, 0.3263, 0.3144]],
        [[0.2305, 0.2289, 0.2291,  ..., 0.2302, 0.2351, 0.2292],
         [0.2305, 0.2289, 0.2291,  ..., 0.2302, 0.2351, 0.2292],
         [0.2305, 0.2289, 0.2291,  ..., 0.2302, 0.2351, 0.2292],
         [0.3086, 0.3132, 0.3126,  ..., 0.3093, 0.2947, 0.3125]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:12,800 [Process: 0] Synchronize training processes
2024-08-16 14:16:12,800 [Process: 0] Evaluating...
2024-08-16 14:16:12,802 [Process: 0] EPOCH 3:
2024-08-16 14:16:12,804 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2597, 0.2500, 0.3065,  ..., 0.2249, 0.2472, 0.1441],
         [0.2147, 0.2500, 0.2312,  ..., 0.2249, 0.2583, 0.1056],
         [0.3109, 0.2500, 0.2312,  ..., 0.2249, 0.2472, 0.6447],
         [0.2147, 0.2500, 0.2312,  ..., 0.3252, 0.2472, 0.1056]],
        [[0.1785, 0.2751, 0.2140,  ..., 0.1316, 0.3493, 0.2447],
         [0.2150, 0.1951, 0.2601,  ..., 0.1316, 0.2169, 0.2447],
         [0.1834, 0.1951, 0.3120,  ..., 0.1316, 0.2169, 0.2660],
         [0.4231, 0.3347, 0.2140,  ..., 0.6051, 0.2169, 0.2447]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2106, 0.2095, 0.2156,  ..., 0.2124, 0.2114, 0.2162],
         [0.2106, 0.2095, 0.2156,  ..., 0.2124, 0.2114, 0.2162],
         [0.2106, 0.2095, 0.2156,  ..., 0.2124, 0.2114, 0.2162],
         [0.3682, 0.3716, 0.3531,  ..., 0.3627, 0.3659, 0.3515]],
        [[0.2130, 0.2138, 0.2128,  ..., 0.2114, 0.2127, 0.2097],
         [0.2130, 0.2138, 0.2128,  ..., 0.2114, 0.2127, 0.2097],
         [0.2130, 0.2138, 0.2128,  ..., 0.2114, 0.2127, 0.2097],
         [0.3610, 0.3585, 0.3616,  ..., 0.3658, 0.3618, 0.3710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:14,801 [Process: 0] Synchronize training processes
2024-08-16 14:16:14,801 [Process: 0] Evaluating...
2024-08-16 14:16:14,803 [Process: 0] EPOCH 4:
2024-08-16 14:16:14,805 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2224, 0.2429, 0.2263,  ..., 0.2496, 0.2240, 0.2195],
         [0.2313, 0.2008, 0.2062,  ..., 0.2496, 0.2300, 0.2446],
         [0.3612, 0.3850, 0.4341,  ..., 0.2496, 0.4021, 0.3164],
         [0.1852, 0.1712, 0.1334,  ..., 0.2511, 0.1439, 0.2195]],
        [[0.0920, 0.1128, 0.1032,  ..., 0.1469, 0.1437, 0.1449],
         [0.0920, 0.1128, 0.1032,  ..., 0.1469, 0.1437, 0.1449],
         [0.0920, 0.1128, 0.1032,  ..., 0.1469, 0.1437, 0.1449],
         [0.7239, 0.6615, 0.6904,  ..., 0.5594, 0.5688, 0.5654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1937, 0.1829, 0.1930,  ..., 0.1903, 0.1897, 0.1853],
         [0.1937, 0.1829, 0.1930,  ..., 0.1903, 0.1897, 0.1853],
         [0.1937, 0.1829, 0.1930,  ..., 0.1903, 0.1897, 0.1853],
         [0.4189, 0.4514, 0.4211,  ..., 0.4292, 0.4310, 0.4442]],
        [[0.1874, 0.1857, 0.1877,  ..., 0.1902, 0.1919, 0.1914],
         [0.1874, 0.1857, 0.1877,  ..., 0.1902, 0.1919, 0.1914],
         [0.1874, 0.1857, 0.1877,  ..., 0.1902, 0.1919, 0.1914],
         [0.4378, 0.4428, 0.4368,  ..., 0.4294, 0.4244, 0.4257]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:16,778 [Process: 0] Synchronize training processes
2024-08-16 14:16:16,778 [Process: 0] Evaluating...
2024-08-16 14:16:16,780 [Process: 0] EPOCH 5:
2024-08-16 14:16:16,782 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2095, 0.1064, 0.1842,  ..., 0.2104, 0.1706, 0.0797],
         [0.2095, 0.1064, 0.1842,  ..., 0.2104, 0.1706, 0.0797],
         [0.2095, 0.1064, 0.1842,  ..., 0.2104, 0.1706, 0.0797],
         [0.3716, 0.6809, 0.4475,  ..., 0.3688, 0.4881, 0.7608]],
        [[0.2274, 0.2439, 0.2122,  ..., 0.2364, 0.2500, 0.1709],
         [0.2274, 0.2439, 0.2122,  ..., 0.2364, 0.2500, 0.1986],
         [0.3177, 0.2684, 0.3635,  ..., 0.2364, 0.2500, 0.4605],
         [0.2274, 0.2439, 0.2122,  ..., 0.2908, 0.2500, 0.1700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1690, 0.1663, 0.1727,  ..., 0.1731, 0.1658, 0.1754],
         [0.1690, 0.1663, 0.1727,  ..., 0.1731, 0.1658, 0.1754],
         [0.1690, 0.1663, 0.1727,  ..., 0.1731, 0.1658, 0.1754],
         [0.4931, 0.5012, 0.4820,  ..., 0.4806, 0.5026, 0.4737]],
        [[0.1649, 0.1744, 0.1741,  ..., 0.1712, 0.1710, 0.1726],
         [0.1649, 0.1744, 0.1741,  ..., 0.1712, 0.1710, 0.1726],
         [0.1649, 0.1744, 0.1741,  ..., 0.1712, 0.1710, 0.1726],
         [0.5054, 0.4768, 0.4776,  ..., 0.4863, 0.4871, 0.4821]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:18,750 [Process: 0] Synchronize training processes
2024-08-16 14:16:18,750 [Process: 0] Evaluating...
2024-08-16 14:16:18,752 [Process: 0] EPOCH 6:
2024-08-16 14:16:18,754 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2304, 0.2286, 0.2497,  ..., 0.2252, 0.2253, 0.2244],
         [0.2304, 0.2286, 0.2497,  ..., 0.2252, 0.2253, 0.2244],
         [0.3088, 0.3143, 0.2497,  ..., 0.3243, 0.3240, 0.3267],
         [0.2304, 0.2286, 0.2510,  ..., 0.2252, 0.2253, 0.2244]],
        [[0.0484, 0.0834, 0.1042,  ..., 0.0459, 0.0691, 0.0476],
         [0.0484, 0.0834, 0.1042,  ..., 0.0459, 0.0691, 0.0476],
         [0.0484, 0.0834, 0.1042,  ..., 0.0459, 0.0691, 0.0476],
         [0.8549, 0.7498, 0.6873,  ..., 0.8624, 0.7927, 0.8573]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1442, 0.1438, 0.1451,  ..., 0.1422, 0.1380, 0.1397],
         [0.1442, 0.1438, 0.1451,  ..., 0.1422, 0.1380, 0.1397],
         [0.1442, 0.1438, 0.1451,  ..., 0.1422, 0.1380, 0.1397],
         [0.5673, 0.5686, 0.5647,  ..., 0.5735, 0.5861, 0.5809]],
        [[0.1367, 0.1475, 0.1405,  ..., 0.1431, 0.1508, 0.1477],
         [0.1367, 0.1475, 0.1405,  ..., 0.1431, 0.1508, 0.1477],
         [0.1367, 0.1475, 0.1405,  ..., 0.1431, 0.1508, 0.1477],
         [0.5898, 0.5576, 0.5785,  ..., 0.5707, 0.5477, 0.5570]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:20,751 [Process: 0] Synchronize training processes
2024-08-16 14:16:20,751 [Process: 0] Evaluating...
2024-08-16 14:16:20,753 [Process: 0] EPOCH 7:
2024-08-16 14:16:20,755 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1302, 0.1177, 0.1238,  ..., 0.1252, 0.1314, 0.1262],
         [0.1302, 0.1177, 0.1238,  ..., 0.1252, 0.1314, 0.1262],
         [0.1302, 0.1177, 0.1238,  ..., 0.1252, 0.1314, 0.1262],
         [0.6093, 0.6468, 0.6287,  ..., 0.6244, 0.6057, 0.6213]],
        [[0.1332, 0.1389, 0.1328,  ..., 0.1385, 0.1346, 0.1414],
         [0.1332, 0.1389, 0.1328,  ..., 0.1385, 0.1346, 0.1414],
         [0.1332, 0.1389, 0.1328,  ..., 0.1385, 0.1346, 0.1414],
         [0.6003, 0.5834, 0.6016,  ..., 0.5844, 0.5961, 0.5758]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1088, 0.0989, 0.1051,  ..., 0.1091, 0.0995, 0.1083],
         [0.1088, 0.0989, 0.1051,  ..., 0.1091, 0.0995, 0.1083],
         [0.1088, 0.0989, 0.1051,  ..., 0.1091, 0.0995, 0.1083],
         [0.6735, 0.7033, 0.6847,  ..., 0.6727, 0.7016, 0.6750]],
        [[0.1202, 0.1237, 0.1233,  ..., 0.1157, 0.1255, 0.1162],
         [0.1202, 0.1237, 0.1233,  ..., 0.1157, 0.1255, 0.1162],
         [0.1202, 0.1237, 0.1233,  ..., 0.1157, 0.1255, 0.1162],
         [0.6393, 0.6290, 0.6301,  ..., 0.6528, 0.6236, 0.6513]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:22,728 [Process: 0] Synchronize training processes
2024-08-16 14:16:22,728 [Process: 0] Evaluating...
2024-08-16 14:16:22,730 [Process: 0] EPOCH 8:
2024-08-16 14:16:22,732 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0315, 0.0449, 0.0432,  ..., 0.0302, 0.0447, 0.0241],
         [0.0315, 0.0449, 0.0432,  ..., 0.0302, 0.0447, 0.0241],
         [0.0315, 0.0449, 0.0432,  ..., 0.0302, 0.0447, 0.0241],
         [0.9055, 0.8654, 0.8704,  ..., 0.9095, 0.8660, 0.9277]],
        [[0.2306, 0.2500, 0.2500,  ..., 0.2500, 0.2328, 0.2496],
         [0.2306, 0.2500, 0.2500,  ..., 0.2500, 0.2328, 0.2496],
         [0.3082, 0.2500, 0.2500,  ..., 0.2501, 0.2328, 0.2513],
         [0.2306, 0.2500, 0.2500,  ..., 0.2500, 0.3015, 0.2496]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1179, 0.1041, 0.0932,  ..., 0.1087, 0.1191, 0.1048],
         [0.1179, 0.1041, 0.0932,  ..., 0.1087, 0.1191, 0.1048],
         [0.1179, 0.1041, 0.0932,  ..., 0.1087, 0.1191, 0.1048],
         [0.6462, 0.6876, 0.7203,  ..., 0.6740, 0.6427, 0.6855]],
        [[0.0614, 0.0805, 0.0694,  ..., 0.0713, 0.0676, 0.0726],
         [0.0614, 0.0805, 0.0694,  ..., 0.0713, 0.0676, 0.0726],
         [0.0614, 0.0805, 0.0694,  ..., 0.0713, 0.0676, 0.0726],
         [0.8159, 0.7585, 0.7918,  ..., 0.7860, 0.7973, 0.7823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:24,661 [Process: 0] Synchronize training processes
2024-08-16 14:16:24,662 [Process: 0] Evaluating...
2024-08-16 14:16:24,663 [Process: 0] EPOCH 9:
2024-08-16 14:16:24,665 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0256, 0.0307, 0.0225,  ..., 0.0219, 0.0272, 0.0273],
         [0.0256, 0.0307, 0.0225,  ..., 0.0219, 0.0272, 0.0273],
         [0.0256, 0.0307, 0.0225,  ..., 0.0219, 0.0272, 0.0273],
         [0.9231, 0.9080, 0.9324,  ..., 0.9342, 0.9185, 0.9180]],
        [[0.2500, 0.2129, 0.2456,  ..., 0.2213, 0.2382, 0.2500],
         [0.2500, 0.2129, 0.2456,  ..., 0.2213, 0.2382, 0.2500],
         [0.2500, 0.2129, 0.2633,  ..., 0.3362, 0.2853, 0.2500],
         [0.2500, 0.3614, 0.2456,  ..., 0.2213, 0.2382, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0392, 0.0427, 0.0473,  ..., 0.0452, 0.0492, 0.0477],
         [0.0392, 0.0427, 0.0473,  ..., 0.0452, 0.0492, 0.0477],
         [0.0392, 0.0427, 0.0473,  ..., 0.0452, 0.0492, 0.0477],
         [0.8824, 0.8720, 0.8581,  ..., 0.8645, 0.8523, 0.8568]],
        [[0.1434, 0.0915, 0.0992,  ..., 0.1047, 0.1137, 0.1089],
         [0.1434, 0.0915, 0.0992,  ..., 0.1047, 0.1137, 0.1089],
         [0.1434, 0.0915, 0.0992,  ..., 0.1047, 0.1137, 0.1089],
         [0.5699, 0.7254, 0.7025,  ..., 0.6859, 0.6590, 0.6732]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:26,621 [Process: 0] Synchronize training processes
2024-08-16 14:16:26,622 [Process: 0] Evaluating...
2024-08-16 14:16:26,624 [Process: 0] EPOCH 10:
2024-08-16 14:16:26,626 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0149, 0.0140, 0.0134,  ..., 0.0197, 0.0139, 0.0167],
         [0.0149, 0.0140, 0.0134,  ..., 0.0197, 0.0139, 0.0167],
         [0.0149, 0.0140, 0.0134,  ..., 0.0197, 0.0139, 0.0167],
         [0.9554, 0.9580, 0.9599,  ..., 0.9409, 0.9583, 0.9499]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2449, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2449, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2654, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2449, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0613, 0.0583, 0.0522,  ..., 0.0550, 0.0526, 0.0548],
         [0.0613, 0.0583, 0.0522,  ..., 0.0550, 0.0526, 0.0548],
         [0.0613, 0.0583, 0.0522,  ..., 0.0550, 0.0526, 0.0548],
         [0.8160, 0.8250, 0.8434,  ..., 0.8349, 0.8423, 0.8355]],
        [[0.0570, 0.0566, 0.0585,  ..., 0.0647, 0.0606, 0.0585],
         [0.0570, 0.0566, 0.0585,  ..., 0.0647, 0.0606, 0.0585],
         [0.0570, 0.0566, 0.0585,  ..., 0.0647, 0.0606, 0.0585],
         [0.8290, 0.8301, 0.8244,  ..., 0.8058, 0.8183, 0.8246]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:28,668 [Process: 0] Synchronize training processes
2024-08-16 14:16:28,668 [Process: 0] Evaluating...
2024-08-16 14:16:28,670 [Process: 0] EPOCH 11:
2024-08-16 14:16:28,672 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0133, 0.0112,  ..., 0.0136, 0.0119, 0.0121],
         [0.0082, 0.0133, 0.0112,  ..., 0.0136, 0.0119, 0.0121],
         [0.0082, 0.0133, 0.0112,  ..., 0.0136, 0.0119, 0.0121],
         [0.9753, 0.9602, 0.9664,  ..., 0.9591, 0.9643, 0.9637]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2376, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2376, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2376, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2872, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0457, 0.0441, 0.0398,  ..., 0.0504, 0.0447, 0.0497],
         [0.0457, 0.0441, 0.0398,  ..., 0.0504, 0.0447, 0.0497],
         [0.0457, 0.0441, 0.0398,  ..., 0.0504, 0.0447, 0.0497],
         [0.8628, 0.8678, 0.8807,  ..., 0.8487, 0.8660, 0.8508]],
        [[0.0440, 0.0483, 0.0456,  ..., 0.0437, 0.0490, 0.0467],
         [0.0440, 0.0483, 0.0456,  ..., 0.0437, 0.0490, 0.0467],
         [0.0440, 0.0483, 0.0456,  ..., 0.0437, 0.0490, 0.0467],
         [0.8681, 0.8550, 0.8632,  ..., 0.8689, 0.8530, 0.8599]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:30,686 [Process: 0] Synchronize training processes
2024-08-16 14:16:30,686 [Process: 0] Evaluating...
2024-08-16 14:16:30,695 [Process: 0] EPOCH 12:
2024-08-16 14:16:30,697 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0160, 0.0093, 0.0046,  ..., 0.0065, 0.0105, 0.0057],
         [0.0160, 0.0093, 0.0046,  ..., 0.0065, 0.0105, 0.0057],
         [0.0160, 0.0093, 0.0046,  ..., 0.0065, 0.0105, 0.0057],
         [0.9520, 0.9722, 0.9863,  ..., 0.9804, 0.9685, 0.9828]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0380, 0.0355, 0.0408,  ..., 0.0396, 0.0399, 0.0367],
         [0.0380, 0.0355, 0.0408,  ..., 0.0396, 0.0399, 0.0367],
         [0.0380, 0.0355, 0.0408,  ..., 0.0396, 0.0399, 0.0367],
         [0.8860, 0.8934, 0.8777,  ..., 0.8813, 0.8804, 0.8898]],
        [[0.0414, 0.0394, 0.0348,  ..., 0.0361, 0.0340, 0.0351],
         [0.0414, 0.0394, 0.0348,  ..., 0.0361, 0.0340, 0.0351],
         [0.0414, 0.0394, 0.0348,  ..., 0.0361, 0.0340, 0.0351],
         [0.8759, 0.8818, 0.8957,  ..., 0.8918, 0.8980, 0.8948]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:32,642 [Process: 0] Synchronize training processes
2024-08-16 14:16:32,642 [Process: 0] Evaluating...
2024-08-16 14:16:32,644 [Process: 0] EPOCH 13:
2024-08-16 14:16:32,646 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0036, 0.0058,  ..., 0.0148, 0.0101, 0.0061],
         [0.0090, 0.0036, 0.0058,  ..., 0.0148, 0.0101, 0.0061],
         [0.0090, 0.0036, 0.0058,  ..., 0.0148, 0.0101, 0.0061],
         [0.9730, 0.9891, 0.9826,  ..., 0.9556, 0.9696, 0.9817]],
        [[0.1676, 0.1539, 0.2500,  ..., 0.2492, 0.2500, 0.2500],
         [0.1676, 0.1539, 0.2500,  ..., 0.2492, 0.2500, 0.2500],
         [0.1676, 0.1539, 0.2500,  ..., 0.2524, 0.2500, 0.2500],
         [0.4972, 0.5384, 0.2500,  ..., 0.2492, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0338, 0.0310, 0.0408,  ..., 0.0280, 0.0261, 0.0414],
         [0.0338, 0.0310, 0.0408,  ..., 0.0280, 0.0261, 0.0414],
         [0.0338, 0.0310, 0.0408,  ..., 0.0280, 0.0261, 0.0414],
         [0.8986, 0.9071, 0.8775,  ..., 0.9159, 0.9217, 0.8759]],
        [[0.0368, 0.0351, 0.0267,  ..., 0.0366, 0.0332, 0.0367],
         [0.0368, 0.0351, 0.0267,  ..., 0.0366, 0.0332, 0.0367],
         [0.0368, 0.0351, 0.0267,  ..., 0.0366, 0.0332, 0.0367],
         [0.8896, 0.8947, 0.9200,  ..., 0.8903, 0.9005, 0.8899]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:34,588 [Process: 0] Synchronize training processes
2024-08-16 14:16:34,589 [Process: 0] Evaluating...
2024-08-16 14:16:34,591 [Process: 0] EPOCH 14:
2024-08-16 14:16:34,593 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0027, 0.0061,  ..., 0.0080, 0.0083, 0.0159],
         [0.0057, 0.0027, 0.0061,  ..., 0.0080, 0.0083, 0.0159],
         [0.0057, 0.0027, 0.0061,  ..., 0.0080, 0.0083, 0.0159],
         [0.9828, 0.9920, 0.9817,  ..., 0.9759, 0.9751, 0.9522]],
        [[0.2500, 0.0365, 0.2247,  ..., 0.2500, 0.2294, 0.2500],
         [0.2500, 0.0365, 0.2247,  ..., 0.2500, 0.2294, 0.2500],
         [0.2500, 0.0365, 0.3259,  ..., 0.2500, 0.2294, 0.2500],
         [0.2500, 0.8906, 0.2247,  ..., 0.2500, 0.3118, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0181, 0.0419, 0.0178,  ..., 0.0252, 0.0324, 0.0442],
         [0.0181, 0.0419, 0.0178,  ..., 0.0252, 0.0324, 0.0442],
         [0.0181, 0.0419, 0.0178,  ..., 0.0252, 0.0324, 0.0442],
         [0.9458, 0.8743, 0.9467,  ..., 0.9243, 0.9028, 0.8674]],
        [[0.0232, 0.0440, 0.0263,  ..., 0.0295, 0.0264, 0.0547],
         [0.0232, 0.0440, 0.0263,  ..., 0.0295, 0.0264, 0.0547],
         [0.0232, 0.0440, 0.0263,  ..., 0.0295, 0.0264, 0.0547],
         [0.9304, 0.8680, 0.9212,  ..., 0.9115, 0.9207, 0.8360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:36,664 [Process: 0] Synchronize training processes
2024-08-16 14:16:36,664 [Process: 0] Evaluating...
2024-08-16 14:16:36,666 [Process: 0] EPOCH 15:
2024-08-16 14:16:36,668 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0735, 0.0109, 0.1513,  ..., 0.0256, 0.1989, 0.0406],
         [0.0735, 0.0109, 0.1513,  ..., 0.0256, 0.1989, 0.0406],
         [0.0735, 0.0109, 0.1513,  ..., 0.0256, 0.1989, 0.0406],
         [0.7794, 0.9673, 0.5460,  ..., 0.9232, 0.4033, 0.8783]],
        [[0.2500, 0.2500, 0.0133,  ..., 0.1251, 0.1604, 0.2500],
         [0.2500, 0.2500, 0.0133,  ..., 0.1251, 0.1604, 0.2500],
         [0.2500, 0.2500, 0.0133,  ..., 0.1251, 0.1933, 0.2500],
         [0.2500, 0.2500, 0.9600,  ..., 0.6248, 0.4859, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0275, 0.0231, 0.0284,  ..., 0.0308, 0.0181, 0.0218],
         [0.0275, 0.0231, 0.0284,  ..., 0.0308, 0.0181, 0.0218],
         [0.0275, 0.0231, 0.0284,  ..., 0.0308, 0.0181, 0.0218],
         [0.9176, 0.9308, 0.9147,  ..., 0.9077, 0.9458, 0.9345]],
        [[0.0194, 0.0263, 0.0227,  ..., 0.0313, 0.0254, 0.0344],
         [0.0194, 0.0263, 0.0227,  ..., 0.0313, 0.0254, 0.0344],
         [0.0194, 0.0263, 0.0227,  ..., 0.0313, 0.0254, 0.0344],
         [0.9418, 0.9211, 0.9319,  ..., 0.9060, 0.9237, 0.8968]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:38,795 [Process: 0] Synchronize training processes
2024-08-16 14:16:38,796 [Process: 0] Evaluating...
2024-08-16 14:16:38,798 [Process: 0] EPOCH 16:
2024-08-16 14:16:38,800 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.1273, 0.1004,  ..., 0.0134, 0.0731, 0.1323],
         [0.0059, 0.1273, 0.1004,  ..., 0.0134, 0.0731, 0.1323],
         [0.0059, 0.1273, 0.1004,  ..., 0.0286, 0.0731, 0.6030],
         [0.9824, 0.6180, 0.6988,  ..., 0.9447, 0.7806, 0.1323]],
        [[0.0039, 0.0038, 0.0064,  ..., 0.0035, 0.0045, 0.0043],
         [0.0039, 0.0038, 0.0064,  ..., 0.0035, 0.0045, 0.0043],
         [0.0039, 0.0038, 0.0064,  ..., 0.0035, 0.0045, 0.0043],
         [0.9882, 0.9886, 0.9808,  ..., 0.9895, 0.9865, 0.9872]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0277, 0.0223, 0.0269,  ..., 0.0224, 0.0245, 0.0259],
         [0.0277, 0.0223, 0.0269,  ..., 0.0224, 0.0245, 0.0259],
         [0.0277, 0.0223, 0.0269,  ..., 0.0224, 0.0245, 0.0259],
         [0.9170, 0.9331, 0.9194,  ..., 0.9327, 0.9265, 0.9222]],
        [[0.0218, 0.0215, 0.0247,  ..., 0.0229, 0.0221, 0.0261],
         [0.0218, 0.0215, 0.0247,  ..., 0.0229, 0.0221, 0.0261],
         [0.0218, 0.0215, 0.0247,  ..., 0.0229, 0.0221, 0.0261],
         [0.9345, 0.9355, 0.9259,  ..., 0.9312, 0.9336, 0.9217]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:40,749 [Process: 0] Synchronize training processes
2024-08-16 14:16:40,750 [Process: 0] Evaluating...
2024-08-16 14:16:40,752 [Process: 0] EPOCH 17:
2024-08-16 14:16:40,754 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.0640e-03, 3.1344e-03, 7.2091e-03,  ..., 7.0919e-04,
          5.4468e-03, 4.5426e-03],
         [4.0640e-03, 3.1344e-03, 7.2091e-03,  ..., 7.0919e-04,
          5.4468e-03, 4.5426e-03],
         [4.0640e-03, 3.1344e-03, 7.2091e-03,  ..., 7.0919e-04,
          5.4468e-03, 4.5426e-03],
         [9.8781e-01, 9.9060e-01, 9.7837e-01,  ..., 9.9787e-01,
          9.8366e-01, 9.8637e-01]],
        [[2.5000e-01, 2.3321e-01, 2.0432e-01,  ..., 2.5000e-01,
          2.9671e-02, 2.2117e-01],
         [2.5000e-01, 2.3321e-01, 2.0432e-01,  ..., 2.5000e-01,
          2.9671e-02, 2.2117e-01],
         [2.5000e-01, 3.0036e-01, 2.0432e-01,  ..., 2.5000e-01,
          2.9671e-02, 2.2117e-01],
         [2.5000e-01, 2.3321e-01, 3.8703e-01,  ..., 2.5000e-01,
          9.1099e-01, 3.3648e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0176, 0.0260, 0.0258,  ..., 0.0195, 0.0231, 0.0188],
         [0.0176, 0.0260, 0.0258,  ..., 0.0195, 0.0231, 0.0188],
         [0.0176, 0.0260, 0.0258,  ..., 0.0195, 0.0231, 0.0188],
         [0.9472, 0.9220, 0.9227,  ..., 0.9416, 0.9307, 0.9437]],
        [[0.0231, 0.0239, 0.0240,  ..., 0.0230, 0.0215, 0.0226],
         [0.0231, 0.0239, 0.0240,  ..., 0.0230, 0.0215, 0.0226],
         [0.0231, 0.0239, 0.0240,  ..., 0.0230, 0.0215, 0.0226],
         [0.9306, 0.9283, 0.9281,  ..., 0.9310, 0.9355, 0.9323]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:42,658 [Process: 0] Synchronize training processes
2024-08-16 14:16:42,658 [Process: 0] Evaluating...
2024-08-16 14:16:42,660 [Process: 0] EPOCH 18:
2024-08-16 14:16:42,662 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0022, 0.0040, 0.0034,  ..., 0.0048, 0.0041, 0.0085],
         [0.0022, 0.0040, 0.0034,  ..., 0.0048, 0.0041, 0.0085],
         [0.0022, 0.0040, 0.0034,  ..., 0.0048, 0.0041, 0.0085],
         [0.9934, 0.9879, 0.9898,  ..., 0.9855, 0.9877, 0.9746]],
        [[0.2500, 0.1980, 0.2425,  ..., 0.2500, 0.2354, 0.0584],
         [0.2500, 0.1980, 0.2425,  ..., 0.2500, 0.2354, 0.0584],
         [0.2500, 0.1980, 0.2724,  ..., 0.2500, 0.2939, 0.0584],
         [0.2500, 0.4061, 0.2425,  ..., 0.2500, 0.2354, 0.8249]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0218, 0.0193, 0.0214,  ..., 0.0208, 0.0198, 0.0169],
         [0.0218, 0.0193, 0.0214,  ..., 0.0208, 0.0198, 0.0169],
         [0.0218, 0.0193, 0.0214,  ..., 0.0208, 0.0198, 0.0169],
         [0.9345, 0.9421, 0.9358,  ..., 0.9377, 0.9405, 0.9493]],
        [[0.0181, 0.0232, 0.0222,  ..., 0.0223, 0.0163, 0.0158],
         [0.0181, 0.0232, 0.0222,  ..., 0.0223, 0.0163, 0.0158],
         [0.0181, 0.0232, 0.0222,  ..., 0.0223, 0.0163, 0.0158],
         [0.9457, 0.9305, 0.9333,  ..., 0.9330, 0.9512, 0.9527]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:44,581 [Process: 0] Synchronize training processes
2024-08-16 14:16:44,581 [Process: 0] Evaluating...
2024-08-16 14:16:44,583 [Process: 0] EPOCH 19:
2024-08-16 14:16:44,585 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0036, 0.0060, 0.0032,  ..., 0.0055, 0.0066, 0.0035],
         [0.0036, 0.0060, 0.0032,  ..., 0.0055, 0.0066, 0.0035],
         [0.0036, 0.0060, 0.0032,  ..., 0.0055, 0.0066, 0.0035],
         [0.9893, 0.9821, 0.9903,  ..., 0.9835, 0.9802, 0.9894]],
        [[0.1166, 0.2500, 0.2492,  ..., 0.2500, 0.0218, 0.0221],
         [0.1166, 0.2500, 0.2492,  ..., 0.2500, 0.0218, 0.0221],
         [0.1271, 0.2500, 0.2523,  ..., 0.2500, 0.0218, 0.0221],
         [0.6398, 0.2500, 0.2492,  ..., 0.2500, 0.9346, 0.9338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0152, 0.0133, 0.0149,  ..., 0.0165, 0.0185, 0.0253],
         [0.0152, 0.0133, 0.0149,  ..., 0.0165, 0.0185, 0.0253],
         [0.0152, 0.0133, 0.0149,  ..., 0.0165, 0.0185, 0.0253],
         [0.9544, 0.9600, 0.9552,  ..., 0.9504, 0.9446, 0.9242]],
        [[0.0131, 0.0203, 0.0164,  ..., 0.0153, 0.0234, 0.0187],
         [0.0131, 0.0203, 0.0164,  ..., 0.0153, 0.0234, 0.0187],
         [0.0131, 0.0203, 0.0164,  ..., 0.0153, 0.0234, 0.0187],
         [0.9607, 0.9391, 0.9509,  ..., 0.9541, 0.9297, 0.9438]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:46,620 [Process: 0] Synchronize training processes
2024-08-16 14:16:46,620 [Process: 0] Evaluating...
2024-08-16 14:16:46,622 [Process: 0] EPOCH 20:
2024-08-16 14:16:46,624 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.1104e-03, 8.2619e-03, 3.3510e-02,  ..., 1.4543e-02,
          8.5351e-03, 2.3419e-03],
         [9.1104e-03, 8.2619e-03, 3.3510e-02,  ..., 1.4543e-02,
          8.5351e-03, 2.3419e-03],
         [9.1104e-03, 8.2619e-03, 3.3510e-02,  ..., 1.4543e-02,
          8.5351e-03, 2.3419e-03],
         [9.7267e-01, 9.7521e-01, 8.9947e-01,  ..., 9.5637e-01,
          9.7439e-01, 9.9297e-01]],
        [[6.5602e-04, 2.5226e-03, 2.5000e-01,  ..., 2.5000e-01,
          3.1850e-03, 2.4107e-01],
         [6.5602e-04, 2.5226e-03, 2.5000e-01,  ..., 2.5000e-01,
          3.1850e-03, 2.4107e-01],
         [6.5602e-04, 2.5226e-03, 2.5000e-01,  ..., 2.5000e-01,
          3.1850e-03, 2.7679e-01],
         [9.9803e-01, 9.9243e-01, 2.5000e-01,  ..., 2.5000e-01,
          9.9044e-01, 2.4107e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0114, 0.0274, 0.0168,  ..., 0.0149, 0.0209, 0.0181],
         [0.0114, 0.0274, 0.0168,  ..., 0.0149, 0.0209, 0.0181],
         [0.0114, 0.0274, 0.0168,  ..., 0.0149, 0.0209, 0.0181],
         [0.9659, 0.9177, 0.9496,  ..., 0.9553, 0.9372, 0.9457]],
        [[0.0212, 0.0177, 0.0238,  ..., 0.0137, 0.0121, 0.0155],
         [0.0212, 0.0177, 0.0238,  ..., 0.0137, 0.0121, 0.0155],
         [0.0212, 0.0177, 0.0238,  ..., 0.0137, 0.0121, 0.0155],
         [0.9364, 0.9470, 0.9286,  ..., 0.9588, 0.9638, 0.9535]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:48,576 [Process: 0] Synchronize training processes
2024-08-16 14:16:48,577 [Process: 0] Evaluating...
2024-08-16 14:16:48,578 [Process: 0] EPOCH 21:
2024-08-16 14:16:48,580 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2283e-02, 3.1429e-02, 1.4092e-02,  ..., 8.0421e-02,
          1.7347e-02, 8.4154e-02],
         [1.2283e-02, 3.1429e-02, 1.4092e-02,  ..., 8.0421e-02,
          1.7347e-02, 8.4154e-02],
         [1.2283e-02, 3.1429e-02, 1.4092e-02,  ..., 8.0421e-02,
          1.7347e-02, 8.4154e-02],
         [9.6315e-01, 9.0571e-01, 9.5772e-01,  ..., 7.5874e-01,
          9.4796e-01, 7.4754e-01]],
        [[3.3379e-03, 3.1830e-03, 7.3126e-03,  ..., 2.3036e-05,
          2.4264e-01, 4.2112e-03],
         [3.3379e-03, 3.1830e-03, 7.3126e-03,  ..., 2.3036e-05,
          2.4264e-01, 4.2112e-03],
         [3.3379e-03, 3.1830e-03, 7.3126e-03,  ..., 2.3036e-05,
          2.7209e-01, 4.2112e-03],
         [9.8999e-01, 9.9045e-01, 9.7806e-01,  ..., 9.9993e-01,
          2.4264e-01, 9.8737e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0130, 0.0185, 0.0100,  ..., 0.0092, 0.0140, 0.0158],
         [0.0130, 0.0185, 0.0100,  ..., 0.0092, 0.0140, 0.0158],
         [0.0130, 0.0185, 0.0100,  ..., 0.0092, 0.0140, 0.0158],
         [0.9610, 0.9445, 0.9701,  ..., 0.9723, 0.9579, 0.9526]],
        [[0.0186, 0.0215, 0.0149,  ..., 0.0167, 0.0158, 0.0130],
         [0.0186, 0.0215, 0.0149,  ..., 0.0167, 0.0158, 0.0130],
         [0.0186, 0.0215, 0.0149,  ..., 0.0167, 0.0158, 0.0130],
         [0.9442, 0.9355, 0.9554,  ..., 0.9499, 0.9525, 0.9610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:50,556 [Process: 0] Synchronize training processes
2024-08-16 14:16:50,557 [Process: 0] Evaluating...
2024-08-16 14:16:50,564 [Process: 0] EPOCH 22:
2024-08-16 14:16:50,567 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4395e-02, 3.6270e-02, 2.3832e-02,  ..., 2.2363e-02,
          1.5724e-02, 4.0549e-02],
         [1.4395e-02, 3.6270e-02, 2.3832e-02,  ..., 2.2363e-02,
          1.5724e-02, 4.0549e-02],
         [1.4395e-02, 3.6270e-02, 2.3832e-02,  ..., 2.2363e-02,
          1.5724e-02, 4.0549e-02],
         [9.5682e-01, 8.9119e-01, 9.2850e-01,  ..., 9.3291e-01,
          9.5283e-01, 8.7835e-01]],
        [[2.3960e-01, 9.8761e-02, 1.6956e-01,  ..., 7.0060e-04,
          1.0529e-05, 1.0788e-01],
         [2.3960e-01, 9.8761e-02, 1.6956e-01,  ..., 7.0060e-04,
          1.0529e-05, 1.0788e-01],
         [2.8119e-01, 9.8761e-02, 1.6956e-01,  ..., 7.0060e-04,
          1.0529e-05, 1.0788e-01],
         [2.3960e-01, 7.0372e-01, 4.9131e-01,  ..., 9.9790e-01,
          9.9997e-01, 6.7637e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0118, 0.0193, 0.0113,  ..., 0.0137, 0.0108, 0.0135],
         [0.0118, 0.0193, 0.0113,  ..., 0.0137, 0.0108, 0.0135],
         [0.0118, 0.0193, 0.0113,  ..., 0.0137, 0.0108, 0.0135],
         [0.9646, 0.9420, 0.9661,  ..., 0.9590, 0.9676, 0.9594]],
        [[0.0167, 0.0133, 0.0117,  ..., 0.0126, 0.0103, 0.0100],
         [0.0167, 0.0133, 0.0117,  ..., 0.0126, 0.0103, 0.0100],
         [0.0167, 0.0133, 0.0117,  ..., 0.0126, 0.0103, 0.0100],
         [0.9498, 0.9600, 0.9648,  ..., 0.9622, 0.9692, 0.9700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:52,634 [Process: 0] Synchronize training processes
2024-08-16 14:16:52,635 [Process: 0] Evaluating...
2024-08-16 14:16:52,636 [Process: 0] EPOCH 23:
2024-08-16 14:16:52,638 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6012e-02, 4.4477e-03, 3.0628e-03,  ..., 5.8598e-03,
          7.0221e-03, 6.5575e-03],
         [1.6012e-02, 4.4477e-03, 3.0628e-03,  ..., 5.8598e-03,
          7.0221e-03, 6.5575e-03],
         [1.6012e-02, 4.4477e-03, 3.0628e-03,  ..., 5.8598e-03,
          7.0221e-03, 6.5575e-03],
         [9.5196e-01, 9.8666e-01, 9.9081e-01,  ..., 9.8242e-01,
          9.7893e-01, 9.8033e-01]],
        [[2.7330e-02, 7.0952e-03, 5.9202e-04,  ..., 1.1289e-02,
          1.3586e-02, 2.4923e-01],
         [2.7330e-02, 7.0952e-03, 5.9202e-04,  ..., 1.1289e-02,
          1.3586e-02, 2.4923e-01],
         [2.7330e-02, 7.0952e-03, 5.9202e-04,  ..., 1.1289e-02,
          1.3586e-02, 2.5231e-01],
         [9.1801e-01, 9.7871e-01, 9.9822e-01,  ..., 9.6613e-01,
          9.5924e-01, 2.4923e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0118, 0.0085, 0.0112,  ..., 0.0117, 0.0123, 0.0107],
         [0.0118, 0.0085, 0.0112,  ..., 0.0117, 0.0123, 0.0107],
         [0.0118, 0.0085, 0.0112,  ..., 0.0117, 0.0123, 0.0107],
         [0.9645, 0.9746, 0.9664,  ..., 0.9649, 0.9632, 0.9680]],
        [[0.0090, 0.0146, 0.0131,  ..., 0.0103, 0.0138, 0.0132],
         [0.0090, 0.0146, 0.0131,  ..., 0.0103, 0.0138, 0.0132],
         [0.0090, 0.0146, 0.0131,  ..., 0.0103, 0.0138, 0.0132],
         [0.9731, 0.9562, 0.9607,  ..., 0.9691, 0.9585, 0.9603]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:54,707 [Process: 0] Synchronize training processes
2024-08-16 14:16:54,707 [Process: 0] Evaluating...
2024-08-16 14:16:54,709 [Process: 0] EPOCH 24:
2024-08-16 14:16:54,711 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.0320e-03, 3.8620e-03, 2.5400e-03,  ..., 4.7379e-03,
          3.4002e-03, 3.4985e-03],
         [4.0320e-03, 3.8620e-03, 2.5400e-03,  ..., 4.7379e-03,
          3.4002e-03, 3.4985e-03],
         [4.0320e-03, 3.8620e-03, 2.5400e-03,  ..., 4.7379e-03,
          3.4002e-03, 3.4985e-03],
         [9.8790e-01, 9.8841e-01, 9.9238e-01,  ..., 9.8579e-01,
          9.8980e-01, 9.8950e-01]],
        [[2.5000e-01, 1.0616e-02, 2.4725e-01,  ..., 2.5000e-01,
          1.4596e-03, 7.7482e-04],
         [2.5000e-01, 1.0616e-02, 2.4725e-01,  ..., 2.5000e-01,
          1.4596e-03, 7.7482e-04],
         [2.5000e-01, 1.0616e-02, 2.5824e-01,  ..., 2.5000e-01,
          1.4596e-03, 7.7482e-04],
         [2.5000e-01, 9.6815e-01, 2.4725e-01,  ..., 2.5000e-01,
          9.9562e-01, 9.9768e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0110, 0.0096, 0.0091,  ..., 0.0082, 0.0093, 0.0091],
         [0.0110, 0.0096, 0.0091,  ..., 0.0082, 0.0093, 0.0091],
         [0.0110, 0.0096, 0.0091,  ..., 0.0082, 0.0093, 0.0091],
         [0.9670, 0.9712, 0.9727,  ..., 0.9753, 0.9720, 0.9726]],
        [[0.0109, 0.0082, 0.0111,  ..., 0.0108, 0.0102, 0.0110],
         [0.0109, 0.0082, 0.0111,  ..., 0.0108, 0.0102, 0.0110],
         [0.0109, 0.0082, 0.0111,  ..., 0.0108, 0.0102, 0.0110],
         [0.9673, 0.9755, 0.9667,  ..., 0.9676, 0.9694, 0.9670]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:56,779 [Process: 0] Synchronize training processes
2024-08-16 14:16:56,780 [Process: 0] Evaluating...
2024-08-16 14:16:56,782 [Process: 0] EPOCH 25:
2024-08-16 14:16:56,784 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0029, 0.0037,  ..., 0.0034, 0.0048, 0.0062],
         [0.0053, 0.0029, 0.0037,  ..., 0.0034, 0.0048, 0.0062],
         [0.0053, 0.0029, 0.0037,  ..., 0.0034, 0.0048, 0.0062],
         [0.9841, 0.9912, 0.9890,  ..., 0.9898, 0.9856, 0.9815]],
        [[0.2297, 0.2339, 0.2175,  ..., 0.2460, 0.2500, 0.2500],
         [0.2297, 0.2339, 0.2175,  ..., 0.2460, 0.2500, 0.2500],
         [0.3110, 0.2982, 0.3475,  ..., 0.2621, 0.2500, 0.2500],
         [0.2297, 0.2339, 0.2175,  ..., 0.2460, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0075, 0.0080,  ..., 0.0122, 0.0094, 0.0089],
         [0.0086, 0.0075, 0.0080,  ..., 0.0122, 0.0094, 0.0089],
         [0.0086, 0.0075, 0.0080,  ..., 0.0122, 0.0094, 0.0089],
         [0.9742, 0.9774, 0.9759,  ..., 0.9633, 0.9719, 0.9734]],
        [[0.0085, 0.0114, 0.0075,  ..., 0.0082, 0.0076, 0.0084],
         [0.0085, 0.0114, 0.0075,  ..., 0.0082, 0.0076, 0.0084],
         [0.0085, 0.0114, 0.0075,  ..., 0.0082, 0.0076, 0.0084],
         [0.9746, 0.9659, 0.9776,  ..., 0.9755, 0.9771, 0.9749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:16:58,863 [Process: 0] Synchronize training processes
2024-08-16 14:16:58,863 [Process: 0] Evaluating...
2024-08-16 14:16:58,865 [Process: 0] EPOCH 26:
2024-08-16 14:16:58,867 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4386e-03, 2.1201e-03, 2.9547e-03,  ..., 2.2865e-03,
          2.8714e-03, 2.1998e-03],
         [3.4386e-03, 2.1201e-03, 2.9547e-03,  ..., 2.2865e-03,
          2.8714e-03, 2.1998e-03],
         [3.4386e-03, 2.1201e-03, 2.9547e-03,  ..., 2.2865e-03,
          2.8714e-03, 2.1998e-03],
         [9.8968e-01, 9.9364e-01, 9.9114e-01,  ..., 9.9314e-01,
          9.9139e-01, 9.9340e-01]],
        [[2.5000e-01, 1.1573e-02, 2.2975e-01,  ..., 2.5000e-01,
          1.0853e-04, 2.4987e-01],
         [2.5000e-01, 1.1573e-02, 2.2975e-01,  ..., 2.5000e-01,
          1.0853e-04, 2.4987e-01],
         [2.5000e-01, 1.1573e-02, 2.2975e-01,  ..., 2.5000e-01,
          1.0853e-04, 2.5039e-01],
         [2.5000e-01, 9.6528e-01, 3.1074e-01,  ..., 2.5000e-01,
          9.9967e-01, 2.4987e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0078, 0.0073,  ..., 0.0062, 0.0070, 0.0105],
         [0.0076, 0.0078, 0.0073,  ..., 0.0062, 0.0070, 0.0105],
         [0.0076, 0.0078, 0.0073,  ..., 0.0062, 0.0070, 0.0105],
         [0.9772, 0.9767, 0.9782,  ..., 0.9813, 0.9791, 0.9686]],
        [[0.0071, 0.0088, 0.0088,  ..., 0.0076, 0.0072, 0.0067],
         [0.0071, 0.0088, 0.0088,  ..., 0.0076, 0.0072, 0.0067],
         [0.0071, 0.0088, 0.0088,  ..., 0.0076, 0.0072, 0.0067],
         [0.9786, 0.9735, 0.9736,  ..., 0.9771, 0.9784, 0.9799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:17:00,963 [Process: 0] Synchronize training processes
2024-08-16 14:17:00,963 [Process: 0] Evaluating...
2024-08-16 14:17:00,965 [Process: 0] EPOCH 27:
2024-08-16 14:17:00,967 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1649e-03, 2.1603e-03, 5.0437e-03,  ..., 1.8749e-03,
          4.5797e-03, 2.3796e-03],
         [5.1649e-03, 2.1603e-03, 5.0437e-03,  ..., 1.8749e-03,
          4.5797e-03, 2.3796e-03],
         [5.1649e-03, 2.1603e-03, 5.0437e-03,  ..., 1.8749e-03,
          4.5797e-03, 2.3796e-03],
         [9.8451e-01, 9.9352e-01, 9.8487e-01,  ..., 9.9438e-01,
          9.8626e-01, 9.9286e-01]],
        [[1.0090e-01, 2.3939e-02, 1.3724e-03,  ..., 4.3753e-04,
          2.5000e-01, 1.8482e-03],
         [1.0090e-01, 2.3939e-02, 1.3724e-03,  ..., 4.3753e-04,
          2.5000e-01, 1.8482e-03],
         [1.0090e-01, 2.3939e-02, 1.3724e-03,  ..., 4.3753e-04,
          2.5000e-01, 1.8482e-03],
         [6.9730e-01, 9.2818e-01, 9.9588e-01,  ..., 9.9869e-01,
          2.5000e-01, 9.9446e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0073, 0.0095,  ..., 0.0095, 0.0087, 0.0074],
         [0.0069, 0.0073, 0.0095,  ..., 0.0095, 0.0087, 0.0074],
         [0.0069, 0.0073, 0.0095,  ..., 0.0095, 0.0087, 0.0074],
         [0.9794, 0.9780, 0.9715,  ..., 0.9716, 0.9739, 0.9779]],
        [[0.0085, 0.0107, 0.0064,  ..., 0.0075, 0.0061, 0.0063],
         [0.0085, 0.0107, 0.0064,  ..., 0.0075, 0.0061, 0.0063],
         [0.0085, 0.0107, 0.0064,  ..., 0.0075, 0.0061, 0.0063],
         [0.9746, 0.9679, 0.9807,  ..., 0.9774, 0.9817, 0.9810]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:17:03,028 [Process: 0] Synchronize training processes
2024-08-16 14:17:03,028 [Process: 0] Evaluating...
2024-08-16 14:17:03,030 [Process: 0] EPOCH 28:
2024-08-16 14:17:03,032 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0047, 0.0046,  ..., 0.0053, 0.0034, 0.0048],
         [0.0047, 0.0047, 0.0046,  ..., 0.0053, 0.0034, 0.0048],
         [0.0047, 0.0047, 0.0046,  ..., 0.0053, 0.0034, 0.0048],
         [0.9860, 0.9860, 0.9862,  ..., 0.9841, 0.9897, 0.9855]],
        [[0.0021, 0.0086, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0021, 0.0086, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.0021, 0.0086, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.9936, 0.9743, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0091, 0.0073,  ..., 0.0066, 0.0093, 0.0102],
         [0.0096, 0.0091, 0.0073,  ..., 0.0066, 0.0093, 0.0102],
         [0.0096, 0.0091, 0.0073,  ..., 0.0066, 0.0093, 0.0102],
         [0.9713, 0.9727, 0.9780,  ..., 0.9803, 0.9720, 0.9695]],
        [[0.0090, 0.0091, 0.0064,  ..., 0.0099, 0.0063, 0.0071],
         [0.0090, 0.0091, 0.0064,  ..., 0.0099, 0.0063, 0.0071],
         [0.0090, 0.0091, 0.0064,  ..., 0.0099, 0.0063, 0.0071],
         [0.9730, 0.9726, 0.9808,  ..., 0.9704, 0.9810, 0.9786]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:17:05,065 [Process: 0] Synchronize training processes
2024-08-16 14:17:05,065 [Process: 0] Evaluating...
2024-08-16 14:17:05,067 [Process: 0] EPOCH 29:
2024-08-16 14:17:05,069 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1681e-03, 4.5365e-03, 2.8979e-03,  ..., 3.1660e-03,
          3.2095e-03, 4.0833e-03],
         [3.1681e-03, 4.5365e-03, 2.8979e-03,  ..., 3.1660e-03,
          3.2095e-03, 4.0833e-03],
         [3.1681e-03, 4.5365e-03, 2.8979e-03,  ..., 3.1660e-03,
          3.2095e-03, 4.0833e-03],
         [9.9050e-01, 9.8639e-01, 9.9131e-01,  ..., 9.9050e-01,
          9.9037e-01, 9.8775e-01]],
        [[4.7649e-04, 2.4694e-01, 2.2984e-01,  ..., 6.2239e-03,
          2.4572e-03, 2.5000e-01],
         [4.7649e-04, 2.4694e-01, 2.2984e-01,  ..., 6.2239e-03,
          2.4572e-03, 2.5000e-01],
         [4.7649e-04, 2.5917e-01, 3.1048e-01,  ..., 6.2239e-03,
          2.4572e-03, 2.5000e-01],
         [9.9857e-01, 2.4694e-01, 2.2984e-01,  ..., 9.8133e-01,
          9.9263e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0050, 0.0068,  ..., 0.0080, 0.0059, 0.0064],
         [0.0086, 0.0050, 0.0068,  ..., 0.0080, 0.0059, 0.0064],
         [0.0086, 0.0050, 0.0068,  ..., 0.0080, 0.0059, 0.0064],
         [0.9742, 0.9849, 0.9795,  ..., 0.9761, 0.9822, 0.9809]],
        [[0.0066, 0.0088, 0.0064,  ..., 0.0069, 0.0098, 0.0066],
         [0.0066, 0.0088, 0.0064,  ..., 0.0069, 0.0098, 0.0066],
         [0.0066, 0.0088, 0.0064,  ..., 0.0069, 0.0098, 0.0066],
         [0.9803, 0.9736, 0.9808,  ..., 0.9794, 0.9707, 0.9801]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:17:07,151 [Process: 0] Synchronize training processes
2024-08-16 14:17:07,151 [Process: 0] Evaluating...
2024-08-16 14:17:07,153 [Process: 0] EPOCH 30:
2024-08-16 14:17:07,155 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.4110e-03, 2.8111e-03, 4.0179e-03,  ..., 3.9313e-03,
          3.8981e-03, 5.1419e-03],
         [2.4110e-03, 2.8111e-03, 4.0179e-03,  ..., 3.9313e-03,
          3.8981e-03, 5.1419e-03],
         [2.4110e-03, 2.8111e-03, 4.0179e-03,  ..., 3.9313e-03,
          3.8981e-03, 5.1419e-03],
         [9.9277e-01, 9.9157e-01, 9.8795e-01,  ..., 9.8821e-01,
          9.8831e-01, 9.8457e-01]],
        [[8.4330e-04, 8.6173e-04, 6.5372e-04,  ..., 2.5000e-01,
          2.5000e-01, 2.5000e-01],
         [8.4330e-04, 8.6173e-04, 6.5372e-04,  ..., 2.5000e-01,
          2.5000e-01, 2.5000e-01],
         [8.4330e-04, 8.6173e-04, 6.5372e-04,  ..., 2.5000e-01,
          2.5000e-01, 2.5000e-01],
         [9.9747e-01, 9.9741e-01, 9.9804e-01,  ..., 2.5000e-01,
          2.5000e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:17:09,233 [Process: 0] Synchronize training processes
2024-08-16 14:17:09,233 [Process: 0] Evaluating...
2024-08-16 14:17:09,235 [Process: 0] EPOCH 31:
2024-08-16 14:17:09,237 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0068, 0.0077, 0.0077,  ..., 0.0087, 0.0087, 0.0085],
         [0.0068, 0.0077, 0.0077,  ..., 0.0087, 0.0087, 0.0085],
         [0.0068, 0.0077, 0.0077,  ..., 0.0087, 0.0087, 0.0085],
         [0.9795, 0.9770, 0.9770,  ..., 0.9738, 0.9739, 0.9744]],
        [[0.0089, 0.0071, 0.0088,  ..., 0.0080, 0.0079, 0.0067],
         [0.0089, 0.0071, 0.0088,  ..., 0.0080, 0.0079, 0.0067],
         [0.0089, 0.0071, 0.0088,  ..., 0.0080, 0.0079, 0.0067],
         [0.9732, 0.9786, 0.9735,  ..., 0.9760, 0.9764, 0.9799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.7666e-03, 3.5212e-03, 3.9786e-03,  ..., 2.8757e-03,
          3.4917e-03, 3.1493e-03],
         [2.7666e-03, 3.5212e-03, 3.9786e-03,  ..., 2.8757e-03,
          3.4917e-03, 3.1493e-03],
         [2.7666e-03, 3.5212e-03, 3.9786e-03,  ..., 2.8757e-03,
          3.4917e-03, 3.1493e-03],
         [9.9170e-01, 9.8944e-01, 9.8806e-01,  ..., 9.9137e-01,
          9.8952e-01, 9.9055e-01]],
        [[8.7315e-05, 2.8002e-04, 4.4343e-03,  ..., 2.4669e-01,
          6.6795e-03, 2.5000e-01],
         [8.7315e-05, 2.8002e-04, 4.4343e-03,  ..., 2.4669e-01,
          6.6795e-03, 2.5000e-01],
         [8.7315e-05, 2.8002e-04, 4.4343e-03,  ..., 2.5993e-01,
          6.6795e-03, 2.5000e-01],
         [9.9974e-01, 9.9916e-01, 9.8670e-01,  ..., 2.4669e-01,
          9.7996e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:11,303 [Process: 0] Synchronize training processes
2024-08-16 14:17:11,303 [Process: 0] Evaluating...
2024-08-16 14:17:11,312 [Process: 0] EPOCH 32:
2024-08-16 14:17:11,314 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0069, 0.0081,  ..., 0.0056, 0.0062, 0.0067],
         [0.0058, 0.0069, 0.0081,  ..., 0.0056, 0.0062, 0.0067],
         [0.0058, 0.0069, 0.0081,  ..., 0.0056, 0.0062, 0.0067],
         [0.9825, 0.9794, 0.9756,  ..., 0.9833, 0.9813, 0.9799]],
        [[0.0061, 0.0064, 0.0068,  ..., 0.0055, 0.0055, 0.0060],
         [0.0061, 0.0064, 0.0068,  ..., 0.0055, 0.0055, 0.0060],
         [0.0061, 0.0064, 0.0068,  ..., 0.0055, 0.0055, 0.0060],
         [0.9816, 0.9809, 0.9795,  ..., 0.9834, 0.9834, 0.9819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.7485e-03, 2.8435e-03, 3.0483e-03,  ..., 3.3309e-03,
          3.4513e-03, 2.5195e-03],
         [2.7485e-03, 2.8435e-03, 3.0483e-03,  ..., 3.3309e-03,
          3.4513e-03, 2.5195e-03],
         [2.7485e-03, 2.8435e-03, 3.0483e-03,  ..., 3.3309e-03,
          3.4513e-03, 2.5195e-03],
         [9.9175e-01, 9.9147e-01, 9.9086e-01,  ..., 9.9001e-01,
          9.8965e-01, 9.9244e-01]],
        [[2.6265e-03, 2.5000e-01, 2.5000e-01,  ..., 1.9280e-02,
          8.8650e-04, 2.2873e-01],
         [2.6265e-03, 2.5000e-01, 2.5000e-01,  ..., 1.9280e-02,
          8.8650e-04, 2.2873e-01],
         [2.6265e-03, 2.5000e-01, 2.5000e-01,  ..., 1.9280e-02,
          8.8650e-04, 3.1381e-01],
         [9.9212e-01, 2.5000e-01, 2.5000e-01,  ..., 9.4216e-01,
          9.9734e-01, 2.2873e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:13,421 [Process: 0] Synchronize training processes
2024-08-16 14:17:13,421 [Process: 0] Evaluating...
2024-08-16 14:17:13,423 [Process: 0] EPOCH 33:
2024-08-16 14:17:13,425 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.0068, 0.0083,  ..., 0.0078, 0.0089, 0.0066],
         [0.0065, 0.0068, 0.0083,  ..., 0.0078, 0.0089, 0.0066],
         [0.0065, 0.0068, 0.0083,  ..., 0.0078, 0.0089, 0.0066],
         [0.9806, 0.9796, 0.9752,  ..., 0.9765, 0.9733, 0.9802]],
        [[0.0066, 0.0068, 0.0070,  ..., 0.0078, 0.0053, 0.0070],
         [0.0066, 0.0068, 0.0070,  ..., 0.0078, 0.0053, 0.0070],
         [0.0066, 0.0068, 0.0070,  ..., 0.0078, 0.0053, 0.0070],
         [0.9803, 0.9795, 0.9790,  ..., 0.9765, 0.9841, 0.9791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7585e-03, 3.1221e-03, 2.0940e-03,  ..., 3.2083e-03,
          2.6045e-03, 3.0879e-03],
         [1.7585e-03, 3.1221e-03, 2.0940e-03,  ..., 3.2083e-03,
          2.6045e-03, 3.0879e-03],
         [1.7585e-03, 3.1221e-03, 2.0940e-03,  ..., 3.2083e-03,
          2.6045e-03, 3.0879e-03],
         [9.9472e-01, 9.9063e-01, 9.9372e-01,  ..., 9.9038e-01,
          9.9219e-01, 9.9074e-01]],
        [[1.0821e-03, 2.3722e-01, 2.5000e-01,  ..., 2.1153e-03,
          2.6945e-04, 1.5452e-03],
         [1.0821e-03, 2.3722e-01, 2.5000e-01,  ..., 2.1153e-03,
          2.6945e-04, 1.5452e-03],
         [1.0821e-03, 2.8834e-01, 2.5000e-01,  ..., 2.1153e-03,
          2.6945e-04, 1.5452e-03],
         [9.9675e-01, 2.3722e-01, 2.5000e-01,  ..., 9.9365e-01,
          9.9919e-01, 9.9536e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:15,470 [Process: 0] Synchronize training processes
2024-08-16 14:17:15,471 [Process: 0] Evaluating...
2024-08-16 14:17:15,473 [Process: 0] EPOCH 34:
2024-08-16 14:17:15,475 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0066, 0.0054, 0.0055,  ..., 0.0079, 0.0077, 0.0067],
         [0.0066, 0.0054, 0.0055,  ..., 0.0079, 0.0077, 0.0067],
         [0.0066, 0.0054, 0.0055,  ..., 0.0079, 0.0077, 0.0067],
         [0.9803, 0.9837, 0.9836,  ..., 0.9762, 0.9769, 0.9798]],
        [[0.0054, 0.0055, 0.0064,  ..., 0.0041, 0.0062, 0.0058],
         [0.0054, 0.0055, 0.0064,  ..., 0.0041, 0.0062, 0.0058],
         [0.0054, 0.0055, 0.0064,  ..., 0.0041, 0.0062, 0.0058],
         [0.9837, 0.9836, 0.9807,  ..., 0.9876, 0.9815, 0.9825]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0024, 0.0016, 0.0019,  ..., 0.0020, 0.0025, 0.0029],
         [0.0024, 0.0016, 0.0019,  ..., 0.0020, 0.0025, 0.0029],
         [0.0024, 0.0016, 0.0019,  ..., 0.0020, 0.0025, 0.0029],
         [0.9927, 0.9953, 0.9944,  ..., 0.9939, 0.9925, 0.9912]],
        [[0.2500, 0.0028, 0.2500,  ..., 0.0017, 0.2500, 0.2500],
         [0.2500, 0.0028, 0.2500,  ..., 0.0017, 0.2500, 0.2500],
         [0.2500, 0.0028, 0.2500,  ..., 0.0017, 0.2500, 0.2500],
         [0.2500, 0.9915, 0.2500,  ..., 0.9950, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:17,462 [Process: 0] Synchronize training processes
2024-08-16 14:17:17,463 [Process: 0] Evaluating...
2024-08-16 14:17:17,465 [Process: 0] EPOCH 35:
2024-08-16 14:17:17,466 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0051, 0.0044,  ..., 0.0042, 0.0052, 0.0059],
         [0.0058, 0.0051, 0.0044,  ..., 0.0042, 0.0052, 0.0059],
         [0.0058, 0.0051, 0.0044,  ..., 0.0042, 0.0052, 0.0059],
         [0.9827, 0.9848, 0.9867,  ..., 0.9875, 0.9845, 0.9823]],
        [[0.0069, 0.0056, 0.0051,  ..., 0.0051, 0.0057, 0.0060],
         [0.0069, 0.0056, 0.0051,  ..., 0.0051, 0.0057, 0.0060],
         [0.0069, 0.0056, 0.0051,  ..., 0.0051, 0.0057, 0.0060],
         [0.9794, 0.9832, 0.9847,  ..., 0.9846, 0.9829, 0.9819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0032, 0.0030, 0.0025,  ..., 0.0017, 0.0021, 0.0024],
         [0.0032, 0.0030, 0.0025,  ..., 0.0017, 0.0021, 0.0024],
         [0.0032, 0.0030, 0.0025,  ..., 0.0017, 0.0021, 0.0024],
         [0.9904, 0.9911, 0.9925,  ..., 0.9949, 0.9938, 0.9929]],
        [[0.2500, 0.2500, 0.0041,  ..., 0.0052, 0.2500, 0.0050],
         [0.2500, 0.2500, 0.0041,  ..., 0.0052, 0.2500, 0.0050],
         [0.2500, 0.2500, 0.0041,  ..., 0.0052, 0.2500, 0.0050],
         [0.2500, 0.2500, 0.9878,  ..., 0.9843, 0.2500, 0.9850]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:19,421 [Process: 0] Synchronize training processes
2024-08-16 14:17:19,422 [Process: 0] Evaluating...
2024-08-16 14:17:19,424 [Process: 0] EPOCH 36:
2024-08-16 14:17:19,426 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0038, 0.0066, 0.0051,  ..., 0.0066, 0.0056, 0.0057],
         [0.0038, 0.0066, 0.0051,  ..., 0.0066, 0.0056, 0.0057],
         [0.0038, 0.0066, 0.0051,  ..., 0.0066, 0.0056, 0.0057],
         [0.9886, 0.9801, 0.9848,  ..., 0.9803, 0.9832, 0.9828]],
        [[0.0059, 0.0068, 0.0066,  ..., 0.0061, 0.0041, 0.0057],
         [0.0059, 0.0068, 0.0066,  ..., 0.0061, 0.0041, 0.0057],
         [0.0059, 0.0068, 0.0066,  ..., 0.0061, 0.0041, 0.0057],
         [0.9822, 0.9795, 0.9801,  ..., 0.9817, 0.9877, 0.9828]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.2556e-03, 1.6085e-03, 2.1277e-03,  ..., 1.8832e-03,
          2.2004e-03, 2.0926e-03],
         [2.2556e-03, 1.6085e-03, 2.1277e-03,  ..., 1.8832e-03,
          2.2004e-03, 2.0926e-03],
         [2.2556e-03, 1.6085e-03, 2.1277e-03,  ..., 1.8832e-03,
          2.2004e-03, 2.0926e-03],
         [9.9323e-01, 9.9517e-01, 9.9362e-01,  ..., 9.9435e-01,
          9.9340e-01, 9.9372e-01]],
        [[5.3983e-03, 2.4857e-01, 2.5000e-01,  ..., 1.3377e-03,
          7.7240e-04, 2.5000e-01],
         [5.3983e-03, 2.4857e-01, 2.5000e-01,  ..., 1.3377e-03,
          7.7240e-04, 2.5000e-01],
         [5.3983e-03, 2.5430e-01, 2.5000e-01,  ..., 1.3377e-03,
          7.7240e-04, 2.5000e-01],
         [9.8381e-01, 2.4857e-01, 2.5000e-01,  ..., 9.9599e-01,
          9.9768e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:21,502 [Process: 0] Synchronize training processes
2024-08-16 14:17:21,502 [Process: 0] Evaluating...
2024-08-16 14:17:21,504 [Process: 0] EPOCH 37:
2024-08-16 14:17:21,506 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0056, 0.0057,  ..., 0.0056, 0.0060, 0.0053],
         [0.0050, 0.0056, 0.0057,  ..., 0.0056, 0.0060, 0.0053],
         [0.0050, 0.0056, 0.0057,  ..., 0.0056, 0.0060, 0.0053],
         [0.9850, 0.9831, 0.9828,  ..., 0.9831, 0.9819, 0.9840]],
        [[0.0044, 0.0051, 0.0059,  ..., 0.0048, 0.0043, 0.0052],
         [0.0044, 0.0051, 0.0059,  ..., 0.0048, 0.0043, 0.0052],
         [0.0044, 0.0051, 0.0059,  ..., 0.0048, 0.0043, 0.0052],
         [0.9869, 0.9847, 0.9822,  ..., 0.9857, 0.9870, 0.9843]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0019, 0.0023, 0.0021,  ..., 0.0022, 0.0016, 0.0016],
         [0.0019, 0.0023, 0.0021,  ..., 0.0022, 0.0016, 0.0016],
         [0.0019, 0.0023, 0.0021,  ..., 0.0022, 0.0016, 0.0016],
         [0.9943, 0.9932, 0.9938,  ..., 0.9935, 0.9952, 0.9953]],
        [[0.2500, 0.2500, 0.0029,  ..., 0.2500, 0.2500, 0.0032],
         [0.2500, 0.2500, 0.0029,  ..., 0.2500, 0.2500, 0.0032],
         [0.2500, 0.2500, 0.0029,  ..., 0.2500, 0.2500, 0.0032],
         [0.2500, 0.2500, 0.9914,  ..., 0.2500, 0.2500, 0.9904]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:23,589 [Process: 0] Synchronize training processes
2024-08-16 14:17:23,589 [Process: 0] Evaluating...
2024-08-16 14:17:23,591 [Process: 0] EPOCH 38:
2024-08-16 14:17:23,593 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0039, 0.0049, 0.0058,  ..., 0.0039, 0.0046, 0.0050],
         [0.0039, 0.0049, 0.0058,  ..., 0.0039, 0.0046, 0.0050],
         [0.0039, 0.0049, 0.0058,  ..., 0.0039, 0.0046, 0.0050],
         [0.9882, 0.9853, 0.9825,  ..., 0.9882, 0.9862, 0.9850]],
        [[0.0044, 0.0061, 0.0046,  ..., 0.0061, 0.0048, 0.0049],
         [0.0044, 0.0061, 0.0046,  ..., 0.0061, 0.0048, 0.0049],
         [0.0044, 0.0061, 0.0046,  ..., 0.0061, 0.0048, 0.0049],
         [0.9868, 0.9818, 0.9863,  ..., 0.9818, 0.9855, 0.9852]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6937e-03, 1.2229e-03, 1.7270e-03,  ..., 1.6918e-03,
          1.4458e-03, 1.6115e-03],
         [1.6937e-03, 1.2229e-03, 1.7270e-03,  ..., 1.6918e-03,
          1.4458e-03, 1.6115e-03],
         [1.6937e-03, 1.2229e-03, 1.7270e-03,  ..., 1.6918e-03,
          1.4458e-03, 1.6115e-03],
         [9.9492e-01, 9.9633e-01, 9.9482e-01,  ..., 9.9492e-01,
          9.9566e-01, 9.9517e-01]],
        [[2.5000e-01, 6.5083e-03, 2.4363e-01,  ..., 7.8194e-04,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 6.5083e-03, 2.4363e-01,  ..., 7.8194e-04,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 6.5083e-03, 2.6912e-01,  ..., 7.8194e-04,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 9.8047e-01, 2.4363e-01,  ..., 9.9765e-01,
          2.5000e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:25,673 [Process: 0] Synchronize training processes
2024-08-16 14:17:25,673 [Process: 0] Evaluating...
2024-08-16 14:17:25,675 [Process: 0] EPOCH 39:
2024-08-16 14:17:25,677 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0043, 0.0061,  ..., 0.0049, 0.0055, 0.0052],
         [0.0050, 0.0043, 0.0061,  ..., 0.0049, 0.0055, 0.0052],
         [0.0050, 0.0043, 0.0061,  ..., 0.0049, 0.0055, 0.0052],
         [0.9850, 0.9871, 0.9817,  ..., 0.9854, 0.9835, 0.9845]],
        [[0.0041, 0.0044, 0.0046,  ..., 0.0047, 0.0047, 0.0052],
         [0.0041, 0.0044, 0.0046,  ..., 0.0047, 0.0047, 0.0052],
         [0.0041, 0.0044, 0.0046,  ..., 0.0047, 0.0047, 0.0052],
         [0.9877, 0.9868, 0.9861,  ..., 0.9860, 0.9858, 0.9843]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1853e-03, 1.6370e-03, 2.2971e-03,  ..., 2.4207e-03,
          9.8406e-04, 1.2013e-03],
         [1.1853e-03, 1.6370e-03, 2.2971e-03,  ..., 2.4207e-03,
          9.8406e-04, 1.2013e-03],
         [1.1853e-03, 1.6370e-03, 2.2971e-03,  ..., 2.4207e-03,
          9.8406e-04, 1.2013e-03],
         [9.9644e-01, 9.9509e-01, 9.9311e-01,  ..., 9.9274e-01,
          9.9705e-01, 9.9640e-01]],
        [[1.3319e-03, 2.5000e-01, 2.5000e-01,  ..., 3.0513e-03,
          7.7425e-03, 2.5000e-01],
         [1.3319e-03, 2.5000e-01, 2.5000e-01,  ..., 3.0513e-03,
          7.7425e-03, 2.5000e-01],
         [1.3319e-03, 2.5000e-01, 2.5000e-01,  ..., 3.0513e-03,
          7.7425e-03, 2.5000e-01],
         [9.9600e-01, 2.5000e-01, 2.5000e-01,  ..., 9.9085e-01,
          9.7677e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:27,708 [Process: 0] Synchronize training processes
2024-08-16 14:17:27,708 [Process: 0] Evaluating...
2024-08-16 14:17:27,710 [Process: 0] EPOCH 40:
2024-08-16 14:17:27,712 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0040, 0.0040,  ..., 0.0045, 0.0051, 0.0047],
         [0.0053, 0.0040, 0.0040,  ..., 0.0045, 0.0051, 0.0047],
         [0.0053, 0.0040, 0.0040,  ..., 0.0045, 0.0051, 0.0047],
         [0.9840, 0.9880, 0.9881,  ..., 0.9864, 0.9846, 0.9860]],
        [[0.0039, 0.0040, 0.0036,  ..., 0.0049, 0.0052, 0.0039],
         [0.0039, 0.0040, 0.0036,  ..., 0.0049, 0.0052, 0.0039],
         [0.0039, 0.0040, 0.0036,  ..., 0.0049, 0.0052, 0.0039],
         [0.9882, 0.9880, 0.9891,  ..., 0.9853, 0.9843, 0.9884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7582e-03, 6.1175e-04, 1.7318e-03,  ..., 1.2169e-03,
          1.4216e-03, 1.5470e-03],
         [1.7582e-03, 6.1175e-04, 1.7318e-03,  ..., 1.2169e-03,
          1.4216e-03, 1.5470e-03],
         [1.7582e-03, 6.1175e-04, 1.7318e-03,  ..., 1.2169e-03,
          1.4216e-03, 1.5470e-03],
         [9.9473e-01, 9.9816e-01, 9.9480e-01,  ..., 9.9635e-01,
          9.9574e-01, 9.9536e-01]],
        [[2.5000e-01, 1.8336e-03, 2.5000e-01,  ..., 2.4362e-01,
          2.7727e-03, 2.5610e-03],
         [2.5000e-01, 1.8336e-03, 2.5000e-01,  ..., 2.4362e-01,
          2.7727e-03, 2.5610e-03],
         [2.5000e-01, 1.8336e-03, 2.5000e-01,  ..., 2.6914e-01,
          2.7727e-03, 2.5610e-03],
         [2.5000e-01, 9.9450e-01, 2.5000e-01,  ..., 2.4362e-01,
          9.9168e-01, 9.9232e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:29,695 [Process: 0] Synchronize training processes
2024-08-16 14:17:29,696 [Process: 0] Evaluating...
2024-08-16 14:17:29,699 [Process: 0] EPOCH 41:
2024-08-16 14:17:29,702 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0045, 0.0039, 0.0046,  ..., 0.0048, 0.0038, 0.0051],
         [0.0045, 0.0039, 0.0046,  ..., 0.0048, 0.0038, 0.0051],
         [0.0045, 0.0039, 0.0046,  ..., 0.0048, 0.0038, 0.0051],
         [0.9864, 0.9883, 0.9863,  ..., 0.9855, 0.9886, 0.9846]],
        [[0.0046, 0.0052, 0.0039,  ..., 0.0044, 0.0044, 0.0037],
         [0.0046, 0.0052, 0.0039,  ..., 0.0044, 0.0044, 0.0037],
         [0.0046, 0.0052, 0.0039,  ..., 0.0044, 0.0044, 0.0037],
         [0.9861, 0.9845, 0.9884,  ..., 0.9868, 0.9869, 0.9890]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0189e-03, 1.8615e-03, 1.0967e-03,  ..., 9.0209e-04,
          1.9580e-03, 1.5012e-03],
         [2.0189e-03, 1.8615e-03, 1.0967e-03,  ..., 9.0209e-04,
          1.9580e-03, 1.5012e-03],
         [2.0189e-03, 1.8615e-03, 1.0967e-03,  ..., 9.0209e-04,
          1.9580e-03, 1.5012e-03],
         [9.9394e-01, 9.9442e-01, 9.9671e-01,  ..., 9.9729e-01,
          9.9413e-01, 9.9550e-01]],
        [[2.5000e-01, 9.0000e-04, 3.3064e-03,  ..., 2.3420e-01,
          1.3276e-03, 2.5000e-01],
         [2.5000e-01, 9.0000e-04, 3.3064e-03,  ..., 2.3420e-01,
          1.3276e-03, 2.5000e-01],
         [2.5000e-01, 9.0000e-04, 3.3064e-03,  ..., 2.9741e-01,
          1.3276e-03, 2.5000e-01],
         [2.5000e-01, 9.9730e-01, 9.9008e-01,  ..., 2.3420e-01,
          9.9602e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:31,697 [Process: 0] Synchronize training processes
2024-08-16 14:17:31,698 [Process: 0] Evaluating...
2024-08-16 14:17:31,705 [Process: 0] EPOCH 42:
2024-08-16 14:17:31,707 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0046, 0.0038, 0.0041,  ..., 0.0039, 0.0045, 0.0052],
         [0.0046, 0.0038, 0.0041,  ..., 0.0039, 0.0045, 0.0052],
         [0.0046, 0.0038, 0.0041,  ..., 0.0039, 0.0045, 0.0052],
         [0.9863, 0.9887, 0.9876,  ..., 0.9884, 0.9864, 0.9845]],
        [[0.0047, 0.0050, 0.0042,  ..., 0.0034, 0.0038, 0.0052],
         [0.0047, 0.0050, 0.0042,  ..., 0.0034, 0.0038, 0.0052],
         [0.0047, 0.0050, 0.0042,  ..., 0.0034, 0.0038, 0.0052],
         [0.9859, 0.9850, 0.9874,  ..., 0.9897, 0.9887, 0.9843]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6962e-03, 2.0226e-03, 1.2745e-03,  ..., 1.0946e-03,
          1.3636e-03, 2.0487e-03],
         [1.6962e-03, 2.0226e-03, 1.2745e-03,  ..., 1.0946e-03,
          1.3636e-03, 2.0487e-03],
         [1.6962e-03, 2.0226e-03, 1.2745e-03,  ..., 1.0946e-03,
          1.3636e-03, 2.0487e-03],
         [9.9491e-01, 9.9393e-01, 9.9618e-01,  ..., 9.9672e-01,
          9.9591e-01, 9.9385e-01]],
        [[2.5000e-01, 2.5000e-01, 5.3778e-04,  ..., 2.5000e-01,
          1.3997e-03, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 5.3778e-04,  ..., 2.5000e-01,
          1.3997e-03, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 5.3778e-04,  ..., 2.5000e-01,
          2.3092e-03, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 9.9839e-01,  ..., 2.5000e-01,
          9.9489e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:33,764 [Process: 0] Synchronize training processes
2024-08-16 14:17:33,765 [Process: 0] Evaluating...
2024-08-16 14:17:33,767 [Process: 0] EPOCH 43:
2024-08-16 14:17:33,769 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0047, 0.0043, 0.0047,  ..., 0.0040, 0.0036, 0.0035],
         [0.0047, 0.0043, 0.0047,  ..., 0.0040, 0.0036, 0.0035],
         [0.0047, 0.0043, 0.0047,  ..., 0.0040, 0.0036, 0.0035],
         [0.9859, 0.9870, 0.9860,  ..., 0.9880, 0.9892, 0.9895]],
        [[0.0035, 0.0034, 0.0038,  ..., 0.0032, 0.0041, 0.0045],
         [0.0035, 0.0034, 0.0038,  ..., 0.0032, 0.0041, 0.0045],
         [0.0035, 0.0034, 0.0038,  ..., 0.0032, 0.0041, 0.0045],
         [0.9896, 0.9899, 0.9887,  ..., 0.9903, 0.9878, 0.9865]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.8401e-03, 6.6480e-04, 2.8387e-03,  ..., 1.1596e-03,
          1.4464e-03, 2.2840e-04],
         [2.8401e-03, 6.6480e-04, 2.8387e-03,  ..., 1.1596e-03,
          1.4464e-03, 2.2840e-04],
         [2.8401e-03, 6.6480e-04, 2.8387e-03,  ..., 1.1596e-03,
          1.4464e-03, 2.2840e-04],
         [9.9148e-01, 9.9801e-01, 9.9148e-01,  ..., 9.9652e-01,
          9.9566e-01, 9.9931e-01]],
        [[2.5000e-01, 4.8427e-03, 6.4109e-04,  ..., 1.8080e-03,
          6.1201e-04, 7.6968e-04],
         [2.5000e-01, 4.8427e-03, 6.4109e-04,  ..., 1.8080e-03,
          6.1201e-04, 7.6968e-04],
         [2.5000e-01, 9.3982e-03, 6.4109e-04,  ..., 1.8080e-03,
          6.1201e-04, 7.6968e-04],
         [2.5000e-01, 9.8092e-01, 9.9808e-01,  ..., 9.9458e-01,
          9.9816e-01, 9.9769e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:35,819 [Process: 0] Synchronize training processes
2024-08-16 14:17:35,820 [Process: 0] Evaluating...
2024-08-16 14:17:35,822 [Process: 0] EPOCH 44:
2024-08-16 14:17:35,824 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0039, 0.0034, 0.0044,  ..., 0.0043, 0.0034, 0.0034],
         [0.0039, 0.0034, 0.0044,  ..., 0.0043, 0.0034, 0.0034],
         [0.0039, 0.0034, 0.0044,  ..., 0.0043, 0.0034, 0.0034],
         [0.9883, 0.9897, 0.9869,  ..., 0.9870, 0.9897, 0.9897]],
        [[0.0038, 0.0036, 0.0034,  ..., 0.0041, 0.0035, 0.0045],
         [0.0038, 0.0036, 0.0034,  ..., 0.0041, 0.0035, 0.0045],
         [0.0038, 0.0036, 0.0034,  ..., 0.0041, 0.0035, 0.0045],
         [0.9887, 0.9892, 0.9898,  ..., 0.9876, 0.9896, 0.9866]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7167e-03, 1.3046e-03, 9.5160e-04,  ..., 1.4348e-03,
          1.1678e-03, 1.0139e-03],
         [1.7167e-03, 1.3046e-03, 9.5160e-04,  ..., 1.4348e-03,
          1.1678e-03, 1.0139e-03],
         [1.7167e-03, 1.3046e-03, 9.5160e-04,  ..., 1.4348e-03,
          1.1678e-03, 1.0139e-03],
         [9.9485e-01, 9.9609e-01, 9.9715e-01,  ..., 9.9570e-01,
          9.9650e-01, 9.9696e-01]],
        [[2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.5000e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:37,761 [Process: 0] Synchronize training processes
2024-08-16 14:17:37,761 [Process: 0] Evaluating...
2024-08-16 14:17:37,763 [Process: 0] EPOCH 45:
2024-08-16 14:17:37,765 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0042, 0.0047, 0.0040,  ..., 0.0033, 0.0045, 0.0033],
         [0.0042, 0.0047, 0.0040,  ..., 0.0033, 0.0045, 0.0033],
         [0.0042, 0.0047, 0.0040,  ..., 0.0033, 0.0045, 0.0033],
         [0.9875, 0.9859, 0.9881,  ..., 0.9901, 0.9864, 0.9901]],
        [[0.0042, 0.0042, 0.0047,  ..., 0.0035, 0.0041, 0.0044],
         [0.0042, 0.0042, 0.0047,  ..., 0.0035, 0.0041, 0.0044],
         [0.0042, 0.0042, 0.0047,  ..., 0.0035, 0.0041, 0.0044],
         [0.9873, 0.9875, 0.9859,  ..., 0.9894, 0.9876, 0.9867]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.3331e-04, 1.1973e-03, 1.2448e-03,  ..., 9.3477e-04,
          1.1086e-03, 1.8419e-03],
         [7.3331e-04, 1.1973e-03, 1.2448e-03,  ..., 9.3477e-04,
          1.1086e-03, 1.8419e-03],
         [7.3331e-04, 1.1973e-03, 1.2448e-03,  ..., 9.3477e-04,
          1.1086e-03, 1.8419e-03],
         [9.9780e-01, 9.9641e-01, 9.9627e-01,  ..., 9.9720e-01,
          9.9667e-01, 9.9447e-01]],
        [[5.5274e-03, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          9.0813e-04, 2.5000e-01],
         [5.5274e-03, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          9.0813e-04, 2.5000e-01],
         [5.5274e-03, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          1.4502e-03, 2.5000e-01],
         [9.8342e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          9.9673e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:39,697 [Process: 0] Synchronize training processes
2024-08-16 14:17:39,697 [Process: 0] Evaluating...
2024-08-16 14:17:39,699 [Process: 0] EPOCH 46:
2024-08-16 14:17:39,701 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0044, 0.0039, 0.0033,  ..., 0.0032, 0.0029, 0.0038],
         [0.0044, 0.0039, 0.0033,  ..., 0.0032, 0.0029, 0.0038],
         [0.0044, 0.0039, 0.0033,  ..., 0.0032, 0.0029, 0.0038],
         [0.9869, 0.9884, 0.9900,  ..., 0.9904, 0.9912, 0.9887]],
        [[0.0045, 0.0037, 0.0041,  ..., 0.0048, 0.0033, 0.0035],
         [0.0045, 0.0037, 0.0041,  ..., 0.0048, 0.0033, 0.0035],
         [0.0045, 0.0037, 0.0041,  ..., 0.0048, 0.0033, 0.0035],
         [0.9865, 0.9888, 0.9877,  ..., 0.9856, 0.9902, 0.9894]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.7770e-04, 1.2510e-03, 2.2058e-03,  ..., 1.0969e-03,
          1.0355e-03, 1.0045e-03],
         [8.7770e-04, 1.2510e-03, 2.2058e-03,  ..., 1.0969e-03,
          1.0355e-03, 1.0045e-03],
         [8.7770e-04, 1.2510e-03, 2.2058e-03,  ..., 1.0969e-03,
          1.0355e-03, 1.0045e-03],
         [9.9737e-01, 9.9625e-01, 9.9338e-01,  ..., 9.9671e-01,
          9.9689e-01, 9.9699e-01]],
        [[2.6573e-03, 2.5000e-01, 3.1761e-04,  ..., 2.4973e-01,
          2.5896e-03, 2.5000e-01],
         [2.6573e-03, 2.5000e-01, 3.1761e-04,  ..., 2.4973e-01,
          2.5896e-03, 2.5000e-01],
         [2.6573e-03, 2.5000e-01, 3.1761e-04,  ..., 2.5081e-01,
          5.6089e-03, 2.5000e-01],
         [9.9203e-01, 2.5000e-01, 9.9905e-01,  ..., 2.4973e-01,
          9.8921e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:41,645 [Process: 0] Synchronize training processes
2024-08-16 14:17:41,645 [Process: 0] Evaluating...
2024-08-16 14:17:41,647 [Process: 0] EPOCH 47:
2024-08-16 14:17:41,649 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0035, 0.0040, 0.0039,  ..., 0.0040, 0.0032, 0.0037],
         [0.0035, 0.0040, 0.0039,  ..., 0.0040, 0.0032, 0.0037],
         [0.0035, 0.0040, 0.0039,  ..., 0.0040, 0.0032, 0.0037],
         [0.9896, 0.9881, 0.9882,  ..., 0.9881, 0.9904, 0.9889]],
        [[0.0037, 0.0033, 0.0033,  ..., 0.0038, 0.0036, 0.0040],
         [0.0037, 0.0033, 0.0033,  ..., 0.0038, 0.0036, 0.0040],
         [0.0037, 0.0033, 0.0033,  ..., 0.0038, 0.0036, 0.0040],
         [0.9890, 0.9900, 0.9900,  ..., 0.9887, 0.9893, 0.9879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.1947e-04, 1.6428e-03, 1.0269e-03,  ..., 1.1317e-03,
          1.1206e-03, 1.3722e-03],
         [8.1947e-04, 1.6428e-03, 1.0269e-03,  ..., 1.1317e-03,
          1.1206e-03, 1.3722e-03],
         [8.1947e-04, 1.6428e-03, 1.0269e-03,  ..., 1.1317e-03,
          1.1206e-03, 1.3722e-03],
         [9.9754e-01, 9.9507e-01, 9.9692e-01,  ..., 9.9660e-01,
          9.9664e-01, 9.9588e-01]],
        [[2.2381e-04, 2.5000e-01, 2.3848e-04,  ..., 2.5000e-01,
          2.5000e-01, 3.7896e-03],
         [2.2381e-04, 2.5000e-01, 2.3848e-04,  ..., 2.5000e-01,
          2.5000e-01, 3.7896e-03],
         [2.3001e-04, 2.5000e-01, 3.7030e-04,  ..., 2.5000e-01,
          2.5000e-01, 3.7896e-03],
         [9.9932e-01, 2.5000e-01, 9.9915e-01,  ..., 2.5000e-01,
          2.5000e-01, 9.8863e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:43,639 [Process: 0] Synchronize training processes
2024-08-16 14:17:43,639 [Process: 0] Evaluating...
2024-08-16 14:17:43,641 [Process: 0] EPOCH 48:
2024-08-16 14:17:43,643 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0029, 0.0042, 0.0029,  ..., 0.0031, 0.0040, 0.0046],
         [0.0029, 0.0042, 0.0029,  ..., 0.0031, 0.0040, 0.0046],
         [0.0029, 0.0042, 0.0029,  ..., 0.0031, 0.0040, 0.0046],
         [0.9913, 0.9874, 0.9912,  ..., 0.9907, 0.9881, 0.9863]],
        [[0.0041, 0.0035, 0.0038,  ..., 0.0038, 0.0039, 0.0032],
         [0.0041, 0.0035, 0.0038,  ..., 0.0038, 0.0039, 0.0032],
         [0.0041, 0.0035, 0.0038,  ..., 0.0038, 0.0039, 0.0032],
         [0.9876, 0.9896, 0.9885,  ..., 0.9887, 0.9884, 0.9903]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4085e-03, 8.7915e-04, 1.2494e-03,  ..., 1.2304e-03,
          1.2867e-03, 8.9260e-04],
         [1.4085e-03, 8.7915e-04, 1.2494e-03,  ..., 1.2304e-03,
          1.2867e-03, 8.9260e-04],
         [1.4085e-03, 8.7915e-04, 1.2494e-03,  ..., 1.2304e-03,
          1.2867e-03, 8.9260e-04],
         [9.9577e-01, 9.9736e-01, 9.9625e-01,  ..., 9.9631e-01,
          9.9614e-01, 9.9732e-01]],
        [[2.5000e-01, 2.5000e-01, 1.8953e-03,  ..., 2.5000e-01,
          1.0455e-03, 1.7240e-03],
         [2.5000e-01, 2.5000e-01, 1.8953e-03,  ..., 2.5000e-01,
          1.0455e-03, 1.7240e-03],
         [2.5000e-01, 2.5000e-01, 2.9117e-03,  ..., 2.5000e-01,
          1.0455e-03, 4.5989e-03],
         [2.5000e-01, 2.5000e-01, 9.9330e-01,  ..., 2.5000e-01,
          9.9686e-01, 9.9195e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:45,546 [Process: 0] Synchronize training processes
2024-08-16 14:17:45,546 [Process: 0] Evaluating...
2024-08-16 14:17:45,548 [Process: 0] EPOCH 49:
2024-08-16 14:17:45,550 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0037, 0.0042, 0.0037,  ..., 0.0038, 0.0040, 0.0039],
         [0.0037, 0.0042, 0.0037,  ..., 0.0038, 0.0040, 0.0039],
         [0.0037, 0.0042, 0.0037,  ..., 0.0038, 0.0040, 0.0039],
         [0.9889, 0.9875, 0.9890,  ..., 0.9885, 0.9880, 0.9884]],
        [[0.0036, 0.0030, 0.0036,  ..., 0.0040, 0.0032, 0.0032],
         [0.0036, 0.0030, 0.0036,  ..., 0.0040, 0.0032, 0.0032],
         [0.0036, 0.0030, 0.0036,  ..., 0.0040, 0.0032, 0.0032],
         [0.9892, 0.9910, 0.9893,  ..., 0.9881, 0.9905, 0.9903]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5654e-03, 1.3188e-03, 1.0318e-03,  ..., 9.5321e-04,
          1.4416e-03, 1.3314e-03],
         [1.5654e-03, 1.3188e-03, 1.0318e-03,  ..., 9.5321e-04,
          1.4416e-03, 1.3314e-03],
         [1.5654e-03, 1.3188e-03, 1.0318e-03,  ..., 9.5321e-04,
          1.4416e-03, 1.3314e-03],
         [9.9530e-01, 9.9604e-01, 9.9690e-01,  ..., 9.9714e-01,
          9.9568e-01, 9.9601e-01]],
        [[1.0682e-03, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.5000e-01, 4.6509e-04],
         [1.0682e-03, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.5000e-01, 4.6509e-04],
         [1.0682e-03, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.5000e-01, 4.6509e-04],
         [9.9680e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.5000e-01, 9.9860e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:47,525 [Process: 0] Synchronize training processes
2024-08-16 14:17:47,525 [Process: 0] Evaluating...
2024-08-16 14:17:47,527 [Process: 0] EPOCH 50:
2024-08-16 14:17:47,529 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0038, 0.0039, 0.0031,  ..., 0.0033, 0.0041, 0.0032],
         [0.0038, 0.0039, 0.0031,  ..., 0.0033, 0.0041, 0.0032],
         [0.0038, 0.0039, 0.0031,  ..., 0.0033, 0.0041, 0.0032],
         [0.9887, 0.9882, 0.9906,  ..., 0.9901, 0.9876, 0.9903]],
        [[0.0034, 0.0034, 0.0031,  ..., 0.0033, 0.0029, 0.0032],
         [0.0034, 0.0034, 0.0031,  ..., 0.0033, 0.0029, 0.0032],
         [0.0034, 0.0034, 0.0031,  ..., 0.0033, 0.0029, 0.0032],
         [0.9898, 0.9897, 0.9908,  ..., 0.9902, 0.9912, 0.9904]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1668e-03, 7.4898e-04, 1.3418e-03,  ..., 1.5489e-03,
          1.1725e-03, 1.1512e-03],
         [1.1668e-03, 7.4898e-04, 1.3418e-03,  ..., 1.5489e-03,
          1.1725e-03, 1.1512e-03],
         [1.1668e-03, 7.4898e-04, 1.3418e-03,  ..., 1.5489e-03,
          1.1725e-03, 1.1512e-03],
         [9.9650e-01, 9.9775e-01, 9.9597e-01,  ..., 9.9535e-01,
          9.9648e-01, 9.9655e-01]],
        [[3.7705e-03, 1.0030e-03, 3.0941e-03,  ..., 1.7872e-03,
          1.2097e-03, 1.9532e-03],
         [3.7705e-03, 1.0030e-03, 3.0941e-03,  ..., 1.7872e-03,
          1.2097e-03, 1.9532e-03],
         [3.7705e-03, 1.6201e-03, 3.3293e-03,  ..., 4.3682e-03,
          1.2097e-03, 4.0144e-03],
         [9.8869e-01, 9.9637e-01, 9.9048e-01,  ..., 9.9206e-01,
          9.9637e-01, 9.9208e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:49,520 [Process: 0] Synchronize training processes
2024-08-16 14:17:49,520 [Process: 0] Evaluating...
2024-08-16 14:17:49,522 [Process: 0] EPOCH 51:
2024-08-16 14:17:49,524 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0037, 0.0032, 0.0028,  ..., 0.0041, 0.0042, 0.0030],
         [0.0037, 0.0032, 0.0028,  ..., 0.0041, 0.0042, 0.0030],
         [0.0037, 0.0032, 0.0028,  ..., 0.0041, 0.0042, 0.0030],
         [0.9890, 0.9905, 0.9915,  ..., 0.9878, 0.9874, 0.9910]],
        [[0.0033, 0.0035, 0.0035,  ..., 0.0033, 0.0029, 0.0042],
         [0.0033, 0.0035, 0.0035,  ..., 0.0033, 0.0029, 0.0042],
         [0.0033, 0.0035, 0.0035,  ..., 0.0033, 0.0029, 0.0042],
         [0.9902, 0.9895, 0.9895,  ..., 0.9900, 0.9913, 0.9873]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1724e-03, 8.0743e-04, 1.1391e-03,  ..., 5.8588e-04,
          9.4281e-04, 1.1599e-03],
         [1.1724e-03, 8.0743e-04, 1.1391e-03,  ..., 5.8588e-04,
          9.4281e-04, 1.1599e-03],
         [1.1724e-03, 8.0743e-04, 1.1391e-03,  ..., 5.8588e-04,
          9.4281e-04, 1.1599e-03],
         [9.9648e-01, 9.9758e-01, 9.9658e-01,  ..., 9.9824e-01,
          9.9717e-01, 9.9652e-01]],
        [[2.5000e-01, 6.4308e-04, 1.8635e-04,  ..., 7.0917e-04,
          5.1770e-03, 1.0799e-03],
         [2.5000e-01, 6.4308e-04, 1.8635e-04,  ..., 7.0917e-04,
          5.1770e-03, 1.0799e-03],
         [2.5000e-01, 9.2598e-04, 1.8635e-04,  ..., 1.9833e-03,
          5.1770e-03, 4.5529e-03],
         [2.5000e-01, 9.9779e-01, 9.9944e-01,  ..., 9.9660e-01,
          9.8447e-01, 9.9329e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:51,618 [Process: 0] Synchronize training processes
2024-08-16 14:17:51,619 [Process: 0] Evaluating...
2024-08-16 14:17:51,627 [Process: 0] EPOCH 52:
2024-08-16 14:17:51,629 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0035, 0.0034, 0.0037,  ..., 0.0035, 0.0028, 0.0031],
         [0.0035, 0.0034, 0.0037,  ..., 0.0035, 0.0028, 0.0031],
         [0.0035, 0.0034, 0.0037,  ..., 0.0035, 0.0028, 0.0031],
         [0.9895, 0.9899, 0.9889,  ..., 0.9894, 0.9915, 0.9907]],
        [[0.0035, 0.0031, 0.0033,  ..., 0.0036, 0.0033, 0.0035],
         [0.0035, 0.0031, 0.0033,  ..., 0.0036, 0.0033, 0.0035],
         [0.0035, 0.0031, 0.0033,  ..., 0.0036, 0.0033, 0.0035],
         [0.9896, 0.9907, 0.9900,  ..., 0.9893, 0.9901, 0.9895]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1889e-03, 1.3415e-03, 1.1462e-03,  ..., 1.5504e-03,
          8.7760e-04, 7.9749e-04],
         [1.1889e-03, 1.3415e-03, 1.1462e-03,  ..., 1.5504e-03,
          8.7760e-04, 7.9749e-04],
         [1.1889e-03, 1.3415e-03, 1.1462e-03,  ..., 1.5504e-03,
          8.7760e-04, 7.9749e-04],
         [9.9643e-01, 9.9598e-01, 9.9656e-01,  ..., 9.9535e-01,
          9.9737e-01, 9.9761e-01]],
        [[1.9494e-03, 2.5000e-01, 3.0422e-03,  ..., 1.5123e-03,
          9.8536e-04, 3.2443e-04],
         [1.9494e-03, 2.5000e-01, 3.0422e-03,  ..., 1.5123e-03,
          9.8536e-04, 3.2443e-04],
         [2.1068e-03, 2.5000e-01, 3.3116e-03,  ..., 1.5123e-03,
          1.1185e-03, 3.8481e-04],
         [9.9399e-01, 2.5000e-01, 9.9060e-01,  ..., 9.9546e-01,
          9.9691e-01, 9.9897e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:53,735 [Process: 0] Synchronize training processes
2024-08-16 14:17:53,736 [Process: 0] Evaluating...
2024-08-16 14:17:53,738 [Process: 0] EPOCH 53:
2024-08-16 14:17:53,740 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0035, 0.0035, 0.0039,  ..., 0.0030, 0.0031, 0.0030],
         [0.0035, 0.0035, 0.0039,  ..., 0.0030, 0.0031, 0.0030],
         [0.0035, 0.0035, 0.0039,  ..., 0.0030, 0.0031, 0.0030],
         [0.9895, 0.9894, 0.9883,  ..., 0.9911, 0.9908, 0.9910]],
        [[0.0029, 0.0031, 0.0028,  ..., 0.0032, 0.0032, 0.0034],
         [0.0029, 0.0031, 0.0028,  ..., 0.0032, 0.0032, 0.0034],
         [0.0029, 0.0031, 0.0028,  ..., 0.0032, 0.0032, 0.0034],
         [0.9913, 0.9908, 0.9916,  ..., 0.9905, 0.9903, 0.9897]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1074e-03, 1.0348e-03, 1.2468e-03,  ..., 9.9131e-04,
          1.3738e-03, 1.5323e-03],
         [1.1074e-03, 1.0348e-03, 1.2468e-03,  ..., 9.9131e-04,
          1.3738e-03, 1.5323e-03],
         [1.1074e-03, 1.0348e-03, 1.2468e-03,  ..., 9.9131e-04,
          1.3738e-03, 1.5323e-03],
         [9.9668e-01, 9.9690e-01, 9.9626e-01,  ..., 9.9703e-01,
          9.9588e-01, 9.9540e-01]],
        [[2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          3.2816e-04, 1.2645e-03],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          3.2816e-04, 1.2645e-03],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          3.3125e-04, 1.2645e-03],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          9.9901e-01, 9.9621e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:55,807 [Process: 0] Synchronize training processes
2024-08-16 14:17:55,808 [Process: 0] Evaluating...
2024-08-16 14:17:55,809 [Process: 0] EPOCH 54:
2024-08-16 14:17:55,811 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0032, 0.0034, 0.0037,  ..., 0.0036, 0.0033, 0.0038],
         [0.0032, 0.0034, 0.0037,  ..., 0.0036, 0.0033, 0.0038],
         [0.0032, 0.0034, 0.0037,  ..., 0.0036, 0.0033, 0.0038],
         [0.9905, 0.9898, 0.9888,  ..., 0.9892, 0.9902, 0.9886]],
        [[0.0036, 0.0038, 0.0029,  ..., 0.0029, 0.0030, 0.0034],
         [0.0036, 0.0038, 0.0029,  ..., 0.0029, 0.0030, 0.0034],
         [0.0036, 0.0038, 0.0029,  ..., 0.0029, 0.0030, 0.0034],
         [0.9893, 0.9885, 0.9914,  ..., 0.9914, 0.9911, 0.9899]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6649e-03, 1.2996e-03, 6.6831e-04,  ..., 1.4762e-03,
          5.9194e-04, 9.7321e-04],
         [1.6649e-03, 1.2996e-03, 6.6831e-04,  ..., 1.4762e-03,
          5.9194e-04, 9.7321e-04],
         [1.6649e-03, 1.2996e-03, 6.6831e-04,  ..., 1.4762e-03,
          5.9194e-04, 9.7321e-04],
         [9.9501e-01, 9.9610e-01, 9.9800e-01,  ..., 9.9557e-01,
          9.9822e-01, 9.9708e-01]],
        [[7.4938e-04, 2.5000e-01, 2.5000e-01,  ..., 2.4503e-01,
          5.0284e-04, 2.5000e-01],
         [7.4938e-04, 2.5000e-01, 2.5000e-01,  ..., 2.4503e-01,
          5.0284e-04, 2.5000e-01],
         [8.4091e-04, 2.5000e-01, 2.5000e-01,  ..., 2.6490e-01,
          5.0284e-04, 2.5000e-01],
         [9.9766e-01, 2.5000e-01, 2.5000e-01,  ..., 2.4503e-01,
          9.9849e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:57,875 [Process: 0] Synchronize training processes
2024-08-16 14:17:57,875 [Process: 0] Evaluating...
2024-08-16 14:17:57,877 [Process: 0] EPOCH 55:
2024-08-16 14:17:57,879 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0030, 0.0028, 0.0034,  ..., 0.0034, 0.0035, 0.0032],
         [0.0030, 0.0028, 0.0034,  ..., 0.0034, 0.0035, 0.0032],
         [0.0030, 0.0028, 0.0034,  ..., 0.0034, 0.0035, 0.0032],
         [0.9910, 0.9915, 0.9899,  ..., 0.9898, 0.9896, 0.9905]],
        [[0.0031, 0.0031, 0.0034,  ..., 0.0032, 0.0027, 0.0029],
         [0.0031, 0.0031, 0.0034,  ..., 0.0032, 0.0027, 0.0029],
         [0.0031, 0.0031, 0.0034,  ..., 0.0032, 0.0027, 0.0029],
         [0.9906, 0.9908, 0.9899,  ..., 0.9904, 0.9919, 0.9912]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5349e-03, 1.7762e-03, 8.9124e-04,  ..., 1.2922e-03,
          1.1872e-03, 8.7399e-04],
         [1.5349e-03, 1.7762e-03, 8.9124e-04,  ..., 1.2922e-03,
          1.1872e-03, 8.7399e-04],
         [1.5349e-03, 1.7762e-03, 8.9124e-04,  ..., 1.2922e-03,
          1.1872e-03, 8.7399e-04],
         [9.9540e-01, 9.9467e-01, 9.9733e-01,  ..., 9.9612e-01,
          9.9644e-01, 9.9738e-01]],
        [[2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.1436e-04,
          1.1829e-03, 6.2698e-04],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.1436e-04,
          1.1829e-03, 6.2698e-04],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.1436e-04,
          1.8025e-03, 1.1033e-03],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 9.9936e-01,
          9.9583e-01, 9.9764e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0025, 0.0033, 0.0032,  ..., 0.0030, 0.0026, 0.0028],
         [0.0025, 0.0033, 0.0032,  ..., 0.0030, 0.0026, 0.0028],
         [0.0025, 0.0033, 0.0032,  ..., 0.0030, 0.0026, 0.0028],
         [0.9924, 0.9901, 0.9904,  ..., 0.9911, 0.9921, 0.9917]],
        [[0.0031, 0.0029, 0.0029,  ..., 0.0034, 0.0027, 0.0027],
         [0.0031, 0.0029, 0.0029,  ..., 0.0034, 0.0027, 0.0027],
         [0.0031, 0.0029, 0.0029,  ..., 0.0034, 0.0027, 0.0027],
         [0.9906, 0.9914, 0.9912,  ..., 0.9898, 0.9920, 0.9918]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5695e-04, 5.7632e-04, 9.1384e-04,  ..., 8.3413e-04,
          9.3715e-04, 8.2334e-04],
         [7.5695e-04, 5.7632e-04, 9.1384e-04,  ..., 8.3413e-04,
          9.3715e-04, 8.2334e-04],
         [7.5695e-04, 5.7632e-04, 9.1384e-04,  ..., 8.3413e-04,
          9.3715e-04, 8.2334e-04],
         [9.9773e-01, 9.9827e-01, 9.9726e-01,  ..., 9.9750e-01,
          9.9719e-01, 9.9753e-01]],
        [[2.5000e-01, 2.5000e-01, 3.5039e-03,  ..., 5.1714e-04,
          2.5967e-03, 6.0422e-04],
         [2.5000e-01, 2.5000e-01, 3.5039e-03,  ..., 5.1714e-04,
          2.5967e-03, 6.0422e-04],
         [2.5000e-01, 2.5000e-01, 3.5039e-03,  ..., 1.6049e-03,
          5.8223e-03, 6.6927e-04],
         [2.5000e-01, 2.5000e-01, 9.8949e-01,  ..., 9.9736e-01,
          9.8898e-01, 9.9812e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:17:59,987 [Process: 0] Synchronize training processes
2024-08-16 14:17:59,987 [Process: 0] Evaluating...
2024-08-16 14:17:59,989 [Process: 0] EPOCH 56:
2024-08-16 14:17:59,991 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0027, 0.0033, 0.0033,  ..., 0.0027, 0.0028, 0.0028],
         [0.0027, 0.0033, 0.0033,  ..., 0.0027, 0.0028, 0.0028],
         [0.0027, 0.0033, 0.0033,  ..., 0.0027, 0.0028, 0.0028],
         [0.9918, 0.9900, 0.9901,  ..., 0.9920, 0.9917, 0.9915]],
        [[0.0028, 0.0034, 0.0030,  ..., 0.0032, 0.0032, 0.0028],
         [0.0028, 0.0034, 0.0030,  ..., 0.0032, 0.0032, 0.0028],
         [0.0028, 0.0034, 0.0030,  ..., 0.0032, 0.0032, 0.0028],
         [0.9917, 0.9898, 0.9911,  ..., 0.9905, 0.9903, 0.9916]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.5907e-04, 8.6157e-04, 1.1099e-03,  ..., 8.5608e-04,
          1.2764e-03, 9.5006e-04],
         [8.5907e-04, 8.6157e-04, 1.1099e-03,  ..., 8.5608e-04,
          1.2764e-03, 9.5006e-04],
         [8.5907e-04, 8.6157e-04, 1.1099e-03,  ..., 8.5608e-04,
          1.2764e-03, 9.5006e-04],
         [9.9742e-01, 9.9742e-01, 9.9667e-01,  ..., 9.9743e-01,
          9.9617e-01, 9.9715e-01]],
        [[2.5000e-01, 2.5000e-01, 1.8446e-03,  ..., 2.3302e-04,
          4.3718e-04, 2.2921e-03],
         [2.5000e-01, 2.5000e-01, 1.8446e-03,  ..., 2.3302e-04,
          4.3718e-04, 2.2921e-03],
         [2.5000e-01, 2.5000e-01, 1.8446e-03,  ..., 4.8966e-04,
          1.1144e-03, 5.8666e-03],
         [2.5000e-01, 2.5000e-01, 9.9447e-01,  ..., 9.9904e-01,
          9.9801e-01, 9.8955e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:18:02,094 [Process: 0] Synchronize training processes
2024-08-16 14:18:02,095 [Process: 0] Evaluating...
2024-08-16 14:18:02,096 [Process: 0] EPOCH 57:
2024-08-16 14:18:02,099 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0029, 0.0027, 0.0029,  ..., 0.0038, 0.0028, 0.0032],
         [0.0029, 0.0027, 0.0029,  ..., 0.0038, 0.0028, 0.0032],
         [0.0029, 0.0027, 0.0029,  ..., 0.0038, 0.0028, 0.0032],
         [0.9912, 0.9919, 0.9913,  ..., 0.9886, 0.9915, 0.9905]],
        [[0.0027, 0.0030, 0.0032,  ..., 0.0034, 0.0032, 0.0027],
         [0.0027, 0.0030, 0.0032,  ..., 0.0034, 0.0032, 0.0027],
         [0.0027, 0.0030, 0.0032,  ..., 0.0034, 0.0032, 0.0027],
         [0.9920, 0.9911, 0.9905,  ..., 0.9899, 0.9905, 0.9920]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.3113e-04, 9.4995e-04, 9.6991e-04,  ..., 1.0400e-03,
          1.0524e-03, 7.8823e-04],
         [9.3113e-04, 9.4995e-04, 9.6991e-04,  ..., 1.0400e-03,
          1.0524e-03, 7.8823e-04],
         [9.3113e-04, 9.4995e-04, 9.6991e-04,  ..., 1.0400e-03,
          1.0524e-03, 7.8823e-04],
         [9.9721e-01, 9.9715e-01, 9.9709e-01,  ..., 9.9688e-01,
          9.9684e-01, 9.9764e-01]],
        [[2.1253e-03, 2.5000e-01, 2.5000e-01,  ..., 2.3171e-01,
          5.8235e-04, 7.7769e-04],
         [2.1253e-03, 2.5000e-01, 2.5000e-01,  ..., 2.3171e-01,
          5.8235e-04, 7.7769e-04],
         [4.0528e-03, 2.5000e-01, 2.5000e-01,  ..., 3.0486e-01,
          5.8235e-04, 1.2056e-03],
         [9.9170e-01, 2.5000e-01, 2.5000e-01,  ..., 2.3171e-01,
          9.9825e-01, 9.9724e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:04,219 [Process: 0] Synchronize training processes
2024-08-16 14:18:04,219 [Process: 0] Evaluating...
2024-08-16 14:18:04,221 [Process: 0] EPOCH 58:
2024-08-16 14:18:04,223 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0032, 0.0028, 0.0033,  ..., 0.0032, 0.0032, 0.0029],
         [0.0032, 0.0028, 0.0033,  ..., 0.0032, 0.0032, 0.0029],
         [0.0032, 0.0028, 0.0033,  ..., 0.0032, 0.0032, 0.0029],
         [0.9904, 0.9916, 0.9900,  ..., 0.9903, 0.9905, 0.9913]],
        [[0.0026, 0.0023, 0.0032,  ..., 0.0028, 0.0031, 0.0026],
         [0.0026, 0.0023, 0.0032,  ..., 0.0028, 0.0031, 0.0026],
         [0.0026, 0.0023, 0.0032,  ..., 0.0028, 0.0031, 0.0026],
         [0.9921, 0.9932, 0.9904,  ..., 0.9915, 0.9906, 0.9923]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:18:06,316 [Process: 0] Synchronize training processes
2024-08-16 14:18:06,316 [Process: 0] Evaluating...
2024-08-16 14:18:06,318 [Process: 0] EPOCH 59:
2024-08-16 14:18:06,320 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4579e-03, 1.5126e-03, 1.2234e-03,  ..., 7.7267e-04,
          8.7039e-04, 1.5878e-03],
         [1.4579e-03, 1.5126e-03, 1.2234e-03,  ..., 7.7267e-04,
          8.7039e-04, 1.5878e-03],
         [1.4579e-03, 1.5126e-03, 1.2234e-03,  ..., 7.7267e-04,
          8.7039e-04, 1.5878e-03],
         [9.9563e-01, 9.9546e-01, 9.9633e-01,  ..., 9.9768e-01,
          9.9739e-01, 9.9524e-01]],
        [[7.7647e-04, 2.0399e-01, 1.5738e-03,  ..., 2.5378e-04,
          4.9331e-04, 6.0988e-04],
         [7.7647e-04, 2.0399e-01, 1.5738e-03,  ..., 2.5378e-04,
          4.9331e-04, 6.0988e-04],
         [7.7647e-04, 3.8804e-01, 4.4142e-03,  ..., 2.5378e-04,
          1.2205e-03, 6.0988e-04],
         [9.9767e-01, 2.0399e-01, 9.9244e-01,  ..., 9.9924e-01,
          9.9779e-01, 9.9817e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0033, 0.0033, 0.0026,  ..., 0.0027, 0.0029, 0.0025],
         [0.0033, 0.0033, 0.0026,  ..., 0.0027, 0.0029, 0.0025],
         [0.0033, 0.0033, 0.0026,  ..., 0.0027, 0.0029, 0.0025],
         [0.9901, 0.9901, 0.9921,  ..., 0.9918, 0.9912, 0.9926]],
        [[0.0028, 0.0027, 0.0033,  ..., 0.0029, 0.0030, 0.0023],
         [0.0028, 0.0027, 0.0033,  ..., 0.0029, 0.0030, 0.0023],
         [0.0028, 0.0027, 0.0033,  ..., 0.0029, 0.0030, 0.0023],
         [0.9916, 0.9920, 0.9902,  ..., 0.9913, 0.9910, 0.9932]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:08,444 [Process: 0] Synchronize training processes
2024-08-16 14:18:08,444 [Process: 0] Evaluating...
2024-08-16 14:18:08,446 [Process: 0] EPOCH 60:
2024-08-16 14:18:08,448 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.5790e-04, 5.4990e-04, 9.4791e-04,  ..., 7.1570e-04,
          9.6485e-04, 9.5384e-04],
         [9.5790e-04, 5.4990e-04, 9.4791e-04,  ..., 7.1570e-04,
          9.6485e-04, 9.5384e-04],
         [9.5790e-04, 5.4990e-04, 9.4791e-04,  ..., 7.1570e-04,
          9.6485e-04, 9.5384e-04],
         [9.9713e-01, 9.9835e-01, 9.9716e-01,  ..., 9.9785e-01,
          9.9711e-01, 9.9714e-01]],
        [[2.5000e-01, 2.2083e-03, 6.0787e-04,  ..., 5.4142e-04,
          2.0980e-03, 1.6792e-03],
         [2.5000e-01, 2.2083e-03, 6.0787e-04,  ..., 5.4142e-04,
          2.0980e-03, 1.6792e-03],
         [2.5000e-01, 2.9284e-03, 6.8753e-04,  ..., 5.4142e-04,
          3.0751e-03, 1.6792e-03],
         [2.5000e-01, 9.9266e-01, 9.9810e-01,  ..., 9.9838e-01,
          9.9273e-01, 9.9496e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0028, 0.0029, 0.0028,  ..., 0.0026, 0.0029, 0.0026],
         [0.0028, 0.0029, 0.0028,  ..., 0.0026, 0.0029, 0.0026],
         [0.0028, 0.0029, 0.0028,  ..., 0.0026, 0.0029, 0.0026],
         [0.9915, 0.9912, 0.9915,  ..., 0.9922, 0.9912, 0.9921]],
        [[0.0027, 0.0028, 0.0031,  ..., 0.0026, 0.0024, 0.0025],
         [0.0027, 0.0028, 0.0031,  ..., 0.0026, 0.0024, 0.0025],
         [0.0027, 0.0028, 0.0031,  ..., 0.0026, 0.0024, 0.0025],
         [0.9920, 0.9915, 0.9908,  ..., 0.9923, 0.9929, 0.9926]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:10,581 [Process: 0] Synchronize training processes
2024-08-16 14:18:10,582 [Process: 0] Evaluating...
2024-08-16 14:18:10,584 [Process: 0] EPOCH 61:
2024-08-16 14:18:10,586 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.5743e-04, 1.0212e-03, 1.4015e-03,  ..., 7.1268e-04,
          6.9781e-04, 5.1498e-04],
         [4.5743e-04, 1.0212e-03, 1.4015e-03,  ..., 7.1268e-04,
          6.9781e-04, 5.1498e-04],
         [4.5743e-04, 1.0212e-03, 1.4015e-03,  ..., 7.1268e-04,
          6.9781e-04, 5.1498e-04],
         [9.9863e-01, 9.9694e-01, 9.9580e-01,  ..., 9.9786e-01,
          9.9791e-01, 9.9846e-01]],
        [[2.5000e-01, 2.5000e-01, 1.6046e-03,  ..., 3.5552e-04,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 1.6046e-03,  ..., 3.5552e-04,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.0609e-03,  ..., 4.0403e-04,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 9.9473e-01,  ..., 9.9888e-01,
          2.5000e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0023, 0.0027, 0.0024,  ..., 0.0031, 0.0026, 0.0027],
         [0.0023, 0.0027, 0.0024,  ..., 0.0031, 0.0026, 0.0027],
         [0.0023, 0.0027, 0.0024,  ..., 0.0031, 0.0026, 0.0027],
         [0.9931, 0.9920, 0.9927,  ..., 0.9907, 0.9922, 0.9920]],
        [[0.0026, 0.0026, 0.0028,  ..., 0.0025, 0.0030, 0.0028],
         [0.0026, 0.0026, 0.0028,  ..., 0.0025, 0.0030, 0.0028],
         [0.0026, 0.0026, 0.0028,  ..., 0.0025, 0.0030, 0.0028],
         [0.9921, 0.9921, 0.9917,  ..., 0.9926, 0.9910, 0.9916]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:12,712 [Process: 0] Synchronize training processes
2024-08-16 14:18:12,712 [Process: 0] Evaluating...
2024-08-16 14:18:12,720 [Process: 0] EPOCH 62:
2024-08-16 14:18:12,722 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.7961e-04, 6.8152e-04, 9.4729e-04,  ..., 6.7728e-04,
          1.3740e-03, 1.0520e-03],
         [9.7961e-04, 6.8152e-04, 9.4729e-04,  ..., 6.7728e-04,
          1.3740e-03, 1.0520e-03],
         [9.7961e-04, 6.8152e-04, 9.4729e-04,  ..., 6.7728e-04,
          1.3740e-03, 1.0520e-03],
         [9.9706e-01, 9.9796e-01, 9.9716e-01,  ..., 9.9797e-01,
          9.9588e-01, 9.9684e-01]],
        [[2.5000e-01, 5.5368e-04, 1.5768e-03,  ..., 2.5000e-01,
          9.2040e-04, 2.5000e-01],
         [2.5000e-01, 5.5368e-04, 1.5768e-03,  ..., 2.5000e-01,
          9.2040e-04, 2.5000e-01],
         [2.5000e-01, 5.5368e-04, 1.9490e-03,  ..., 2.5000e-01,
          1.6153e-03, 2.5000e-01],
         [2.5000e-01, 9.9834e-01, 9.9490e-01,  ..., 2.5000e-01,
          9.9654e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0027, 0.0024, 0.0025,  ..., 0.0031, 0.0025, 0.0032],
         [0.0027, 0.0024, 0.0025,  ..., 0.0031, 0.0025, 0.0032],
         [0.0027, 0.0024, 0.0025,  ..., 0.0031, 0.0025, 0.0032],
         [0.9920, 0.9928, 0.9925,  ..., 0.9908, 0.9924, 0.9905]],
        [[0.0028, 0.0028, 0.0031,  ..., 0.0023, 0.0028, 0.0029],
         [0.0028, 0.0028, 0.0031,  ..., 0.0023, 0.0028, 0.0029],
         [0.0028, 0.0028, 0.0031,  ..., 0.0023, 0.0028, 0.0029],
         [0.9916, 0.9917, 0.9908,  ..., 0.9931, 0.9917, 0.9913]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:14,805 [Process: 0] Synchronize training processes
2024-08-16 14:18:14,806 [Process: 0] Evaluating...
2024-08-16 14:18:14,808 [Process: 0] EPOCH 63:
2024-08-16 14:18:14,810 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3129e-03, 6.1272e-04, 6.2384e-04,  ..., 1.2068e-03,
          5.3440e-04, 7.9354e-04],
         [1.3129e-03, 6.1272e-04, 6.2384e-04,  ..., 1.2068e-03,
          5.3440e-04, 7.9354e-04],
         [1.3129e-03, 6.1272e-04, 6.2384e-04,  ..., 1.2068e-03,
          5.3440e-04, 7.9354e-04],
         [9.9606e-01, 9.9816e-01, 9.9813e-01,  ..., 9.9638e-01,
          9.9840e-01, 9.9762e-01]],
        [[2.5000e-01, 5.1684e-04, 2.5000e-01,  ..., 7.1460e-04,
          2.3163e-03, 5.0482e-04],
         [2.5000e-01, 5.1684e-04, 2.5000e-01,  ..., 7.1460e-04,
          2.3163e-03, 5.0482e-04],
         [2.5000e-01, 1.2360e-03, 2.5000e-01,  ..., 7.1460e-04,
          3.5584e-03, 1.6753e-03],
         [2.5000e-01, 9.9773e-01, 2.5000e-01,  ..., 9.9786e-01,
          9.9181e-01, 9.9731e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0026, 0.0021, 0.0023,  ..., 0.0028, 0.0030, 0.0026],
         [0.0026, 0.0021, 0.0023,  ..., 0.0028, 0.0030, 0.0026],
         [0.0026, 0.0021, 0.0023,  ..., 0.0028, 0.0030, 0.0026],
         [0.9922, 0.9938, 0.9930,  ..., 0.9916, 0.9911, 0.9923]],
        [[0.0022, 0.0025, 0.0024,  ..., 0.0027, 0.0023, 0.0023],
         [0.0022, 0.0025, 0.0024,  ..., 0.0027, 0.0023, 0.0023],
         [0.0022, 0.0025, 0.0024,  ..., 0.0027, 0.0023, 0.0023],
         [0.9933, 0.9925, 0.9929,  ..., 0.9918, 0.9930, 0.9930]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:16,885 [Process: 0] Synchronize training processes
2024-08-16 14:18:16,885 [Process: 0] Evaluating...
2024-08-16 14:18:16,887 [Process: 0] EPOCH 64:
2024-08-16 14:18:16,889 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.7471e-04, 6.2322e-04, 8.8957e-04,  ..., 7.8427e-04,
          1.3611e-03, 6.2006e-04],
         [8.7471e-04, 6.2322e-04, 8.8957e-04,  ..., 7.8427e-04,
          1.3611e-03, 6.2006e-04],
         [8.7471e-04, 6.2322e-04, 8.8957e-04,  ..., 7.8427e-04,
          1.3611e-03, 6.2006e-04],
         [9.9738e-01, 9.9813e-01, 9.9733e-01,  ..., 9.9765e-01,
          9.9592e-01, 9.9814e-01]],
        [[2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          1.9284e-03, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          1.9284e-03, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          1.9284e-03, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          9.9421e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0031, 0.0025, 0.0026,  ..., 0.0030, 0.0025, 0.0027],
         [0.0031, 0.0025, 0.0026,  ..., 0.0030, 0.0025, 0.0027],
         [0.0031, 0.0025, 0.0026,  ..., 0.0030, 0.0025, 0.0027],
         [0.9908, 0.9926, 0.9921,  ..., 0.9909, 0.9926, 0.9918]],
        [[0.0024, 0.0025, 0.0027,  ..., 0.0026, 0.0026, 0.0030],
         [0.0024, 0.0025, 0.0027,  ..., 0.0026, 0.0026, 0.0030],
         [0.0024, 0.0025, 0.0027,  ..., 0.0026, 0.0026, 0.0030],
         [0.9927, 0.9926, 0.9918,  ..., 0.9921, 0.9922, 0.9910]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:18,970 [Process: 0] Synchronize training processes
2024-08-16 14:18:18,971 [Process: 0] Evaluating...
2024-08-16 14:18:18,973 [Process: 0] EPOCH 65:
2024-08-16 14:18:18,974 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.4222e-04, 9.5728e-04, 6.1779e-04,  ..., 5.8420e-04,
          7.7013e-04, 8.5764e-04],
         [4.4222e-04, 9.5728e-04, 6.1779e-04,  ..., 5.8420e-04,
          7.7013e-04, 8.5764e-04],
         [4.4222e-04, 9.5728e-04, 6.1779e-04,  ..., 5.8420e-04,
          7.7013e-04, 8.5764e-04],
         [9.9867e-01, 9.9713e-01, 9.9815e-01,  ..., 9.9825e-01,
          9.9769e-01, 9.9743e-01]],
        [[9.1154e-04, 9.4451e-04, 2.5000e-01,  ..., 2.9133e-04,
          2.5000e-01, 2.5000e-01],
         [9.1154e-04, 9.4451e-04, 2.5000e-01,  ..., 2.9133e-04,
          2.5000e-01, 2.5000e-01],
         [1.1468e-03, 9.4451e-04, 2.5000e-01,  ..., 4.5740e-04,
          2.5000e-01, 2.5000e-01],
         [9.9703e-01, 9.9717e-01, 2.5000e-01,  ..., 9.9896e-01,
          2.5000e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0026, 0.0025, 0.0024,  ..., 0.0027, 0.0020, 0.0025],
         [0.0026, 0.0025, 0.0024,  ..., 0.0027, 0.0020, 0.0025],
         [0.0026, 0.0025, 0.0024,  ..., 0.0027, 0.0020, 0.0025],
         [0.9922, 0.9926, 0.9929,  ..., 0.9918, 0.9939, 0.9925]],
        [[0.0023, 0.0024, 0.0025,  ..., 0.0024, 0.0022, 0.0024],
         [0.0023, 0.0024, 0.0025,  ..., 0.0024, 0.0022, 0.0024],
         [0.0023, 0.0024, 0.0025,  ..., 0.0024, 0.0022, 0.0024],
         [0.9932, 0.9929, 0.9924,  ..., 0.9927, 0.9933, 0.9928]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:21,057 [Process: 0] Synchronize training processes
2024-08-16 14:18:21,057 [Process: 0] Evaluating...
2024-08-16 14:18:21,059 [Process: 0] EPOCH 66:
2024-08-16 14:18:21,061 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4565e-04, 5.7589e-04, 1.3240e-03,  ..., 1.2429e-03,
          5.2743e-04, 1.0156e-03],
         [5.4565e-04, 5.7589e-04, 1.3240e-03,  ..., 1.2429e-03,
          5.2743e-04, 1.0156e-03],
         [5.4565e-04, 5.7589e-04, 1.3240e-03,  ..., 1.2429e-03,
          5.2743e-04, 1.0156e-03],
         [9.9836e-01, 9.9827e-01, 9.9603e-01,  ..., 9.9627e-01,
          9.9842e-01, 9.9695e-01]],
        [[2.5000e-01, 4.5921e-04, 1.4047e-03,  ..., 2.2978e-01,
          6.3112e-04, 2.5000e-01],
         [2.5000e-01, 4.5921e-04, 1.4047e-03,  ..., 2.2978e-01,
          6.3112e-04, 2.5000e-01],
         [2.5000e-01, 6.6550e-04, 2.2765e-03,  ..., 3.1067e-01,
          1.2445e-03, 2.5000e-01],
         [2.5000e-01, 9.9842e-01, 9.9491e-01,  ..., 2.2978e-01,
          9.9749e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0029, 0.0024, 0.0021,  ..., 0.0031, 0.0030, 0.0023],
         [0.0029, 0.0024, 0.0021,  ..., 0.0031, 0.0030, 0.0023],
         [0.0029, 0.0024, 0.0021,  ..., 0.0031, 0.0030, 0.0023],
         [0.9914, 0.9929, 0.9936,  ..., 0.9906, 0.9911, 0.9930]],
        [[0.0023, 0.0028, 0.0023,  ..., 0.0021, 0.0026, 0.0026],
         [0.0023, 0.0028, 0.0023,  ..., 0.0021, 0.0026, 0.0026],
         [0.0023, 0.0028, 0.0023,  ..., 0.0021, 0.0026, 0.0026],
         [0.9932, 0.9917, 0.9931,  ..., 0.9938, 0.9921, 0.9923]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:23,149 [Process: 0] Synchronize training processes
2024-08-16 14:18:23,150 [Process: 0] Evaluating...
2024-08-16 14:18:23,152 [Process: 0] EPOCH 67:
2024-08-16 14:18:23,154 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0340e-03, 1.1752e-03, 9.9049e-04,  ..., 1.3958e-03,
          8.9460e-04, 5.0023e-04],
         [1.0340e-03, 1.1752e-03, 9.9049e-04,  ..., 1.3958e-03,
          8.9460e-04, 5.0023e-04],
         [1.0340e-03, 1.1752e-03, 9.9049e-04,  ..., 1.3958e-03,
          8.9460e-04, 5.0023e-04],
         [9.9690e-01, 9.9647e-01, 9.9703e-01,  ..., 9.9581e-01,
          9.9732e-01, 9.9850e-01]],
        [[2.5000e-01, 9.2261e-04, 2.5000e-01,  ..., 5.9289e-04,
          2.5000e-01, 2.8915e-04],
         [2.5000e-01, 9.2261e-04, 2.5000e-01,  ..., 5.9289e-04,
          2.5000e-01, 2.8915e-04],
         [2.5000e-01, 9.2261e-04, 2.5000e-01,  ..., 1.0458e-03,
          2.5000e-01, 2.8915e-04],
         [2.5000e-01, 9.9723e-01, 2.5000e-01,  ..., 9.9777e-01,
          2.5000e-01, 9.9913e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0021, 0.0026, 0.0027,  ..., 0.0025, 0.0025, 0.0023],
         [0.0021, 0.0026, 0.0027,  ..., 0.0025, 0.0025, 0.0023],
         [0.0021, 0.0026, 0.0027,  ..., 0.0025, 0.0025, 0.0023],
         [0.9936, 0.9921, 0.9918,  ..., 0.9925, 0.9924, 0.9932]],
        [[0.0027, 0.0022, 0.0027,  ..., 0.0024, 0.0024, 0.0021],
         [0.0027, 0.0022, 0.0027,  ..., 0.0024, 0.0024, 0.0021],
         [0.0027, 0.0022, 0.0027,  ..., 0.0024, 0.0024, 0.0021],
         [0.9919, 0.9933, 0.9918,  ..., 0.9927, 0.9927, 0.9936]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:25,180 [Process: 0] Synchronize training processes
2024-08-16 14:18:25,180 [Process: 0] Evaluating...
2024-08-16 14:18:25,182 [Process: 0] EPOCH 68:
2024-08-16 14:18:25,184 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.1324e-04, 9.7799e-04, 7.1908e-04,  ..., 8.8957e-04,
          7.2182e-04, 7.1162e-04],
         [8.1324e-04, 9.7799e-04, 7.1908e-04,  ..., 8.8957e-04,
          7.2182e-04, 7.1162e-04],
         [8.1324e-04, 9.7799e-04, 7.1908e-04,  ..., 8.8957e-04,
          7.2182e-04, 7.1162e-04],
         [9.9756e-01, 9.9707e-01, 9.9784e-01,  ..., 9.9733e-01,
          9.9783e-01, 9.9787e-01]],
        [[1.3691e-03, 1.3176e-03, 2.5000e-01,  ..., 2.5000e-01,
          6.3233e-04, 2.5000e-01],
         [1.3691e-03, 1.3176e-03, 2.5000e-01,  ..., 2.5000e-01,
          6.3233e-04, 2.5000e-01],
         [2.0345e-03, 5.6658e-03, 2.5000e-01,  ..., 2.5000e-01,
          1.3171e-03, 2.5000e-01],
         [9.9523e-01, 9.9170e-01, 2.5000e-01,  ..., 2.5000e-01,
          9.9742e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0022, 0.0024, 0.0029,  ..., 0.0022, 0.0030, 0.0026],
         [0.0022, 0.0024, 0.0029,  ..., 0.0022, 0.0030, 0.0026],
         [0.0022, 0.0024, 0.0029,  ..., 0.0022, 0.0030, 0.0026],
         [0.9934, 0.9928, 0.9913,  ..., 0.9933, 0.9911, 0.9922]],
        [[0.0025, 0.0025, 0.0022,  ..., 0.0026, 0.0024, 0.0021],
         [0.0025, 0.0025, 0.0022,  ..., 0.0026, 0.0024, 0.0021],
         [0.0025, 0.0025, 0.0022,  ..., 0.0026, 0.0024, 0.0021],
         [0.9925, 0.9924, 0.9934,  ..., 0.9923, 0.9929, 0.9937]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:27,132 [Process: 0] Synchronize training processes
2024-08-16 14:18:27,133 [Process: 0] Evaluating...
2024-08-16 14:18:27,134 [Process: 0] EPOCH 69:
2024-08-16 14:18:27,136 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.7883e-04, 6.3812e-04, 1.2377e-03,  ..., 7.8827e-04,
          6.4384e-04, 7.7758e-04],
         [9.7883e-04, 6.3812e-04, 1.2377e-03,  ..., 7.8827e-04,
          6.4384e-04, 7.7758e-04],
         [9.7883e-04, 6.3812e-04, 1.2377e-03,  ..., 7.8827e-04,
          6.4384e-04, 7.7758e-04],
         [9.9706e-01, 9.9809e-01, 9.9629e-01,  ..., 9.9764e-01,
          9.9807e-01, 9.9767e-01]],
        [[2.5000e-01, 2.5000e-01, 6.9735e-04,  ..., 2.5000e-01,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 6.9735e-04,  ..., 2.5000e-01,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 6.9735e-04,  ..., 2.5000e-01,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 9.9791e-01,  ..., 2.5000e-01,
          2.5000e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0023, 0.0023, 0.0024,  ..., 0.0024, 0.0027, 0.0024],
         [0.0023, 0.0023, 0.0024,  ..., 0.0024, 0.0027, 0.0024],
         [0.0023, 0.0023, 0.0024,  ..., 0.0024, 0.0027, 0.0024],
         [0.9930, 0.9930, 0.9927,  ..., 0.9927, 0.9919, 0.9927]],
        [[0.0024, 0.0026, 0.0024,  ..., 0.0021, 0.0024, 0.0023],
         [0.0024, 0.0026, 0.0024,  ..., 0.0021, 0.0024, 0.0023],
         [0.0024, 0.0026, 0.0024,  ..., 0.0021, 0.0024, 0.0023],
         [0.9927, 0.9923, 0.9929,  ..., 0.9937, 0.9928, 0.9930]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:29,187 [Process: 0] Synchronize training processes
2024-08-16 14:18:29,188 [Process: 0] Evaluating...
2024-08-16 14:18:29,190 [Process: 0] EPOCH 70:
2024-08-16 14:18:29,192 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5191e-04, 5.4597e-04, 1.0955e-03,  ..., 7.8025e-04,
          5.6105e-04, 3.6802e-04],
         [6.5191e-04, 5.4597e-04, 1.0955e-03,  ..., 7.8025e-04,
          5.6105e-04, 3.6802e-04],
         [6.5191e-04, 5.4597e-04, 1.0955e-03,  ..., 7.8025e-04,
          5.6105e-04, 3.6802e-04],
         [9.9804e-01, 9.9836e-01, 9.9671e-01,  ..., 9.9766e-01,
          9.9832e-01, 9.9890e-01]],
        [[5.8631e-04, 2.5000e-01, 5.0544e-04,  ..., 4.4223e-04,
          2.5000e-01, 2.5000e-01],
         [5.8631e-04, 2.5000e-01, 5.0544e-04,  ..., 4.4223e-04,
          2.5000e-01, 2.5000e-01],
         [1.3290e-03, 2.5000e-01, 5.0544e-04,  ..., 4.6470e-04,
          2.5000e-01, 2.5000e-01],
         [9.9750e-01, 2.5000e-01, 9.9848e-01,  ..., 9.9865e-01,
          2.5000e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0028, 0.0025, 0.0021,  ..., 0.0023, 0.0025, 0.0023],
         [0.0028, 0.0025, 0.0021,  ..., 0.0023, 0.0025, 0.0023],
         [0.0028, 0.0025, 0.0021,  ..., 0.0023, 0.0025, 0.0023],
         [0.9915, 0.9924, 0.9936,  ..., 0.9931, 0.9925, 0.9932]],
        [[0.0020, 0.0022, 0.0021,  ..., 0.0025, 0.0020, 0.0024],
         [0.0020, 0.0022, 0.0021,  ..., 0.0025, 0.0020, 0.0024],
         [0.0020, 0.0022, 0.0021,  ..., 0.0025, 0.0020, 0.0024],
         [0.9941, 0.9934, 0.9938,  ..., 0.9926, 0.9941, 0.9927]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:31,268 [Process: 0] Synchronize training processes
2024-08-16 14:18:31,269 [Process: 0] Evaluating...
2024-08-16 14:18:31,271 [Process: 0] EPOCH 71:
2024-08-16 14:18:31,273 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4322e-03, 5.7598e-04, 7.5552e-04,  ..., 7.0022e-04,
          6.7944e-04, 7.8961e-04],
         [1.4322e-03, 5.7598e-04, 7.5552e-04,  ..., 7.0022e-04,
          6.7944e-04, 7.8961e-04],
         [1.4322e-03, 5.7598e-04, 7.5552e-04,  ..., 7.0022e-04,
          6.7944e-04, 7.8961e-04],
         [9.9570e-01, 9.9827e-01, 9.9773e-01,  ..., 9.9790e-01,
          9.9796e-01, 9.9763e-01]],
        [[4.1244e-04, 2.5000e-01, 2.5000e-01,  ..., 3.0685e-04,
          2.5000e-01, 2.5000e-01],
         [4.1244e-04, 2.5000e-01, 2.5000e-01,  ..., 3.0685e-04,
          2.5000e-01, 2.5000e-01],
         [4.7719e-04, 2.5000e-01, 2.5000e-01,  ..., 8.6004e-04,
          2.5000e-01, 2.5000e-01],
         [9.9870e-01, 2.5000e-01, 2.5000e-01,  ..., 9.9853e-01,
          2.5000e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0022, 0.0023, 0.0022,  ..., 0.0023, 0.0022, 0.0026],
         [0.0022, 0.0023, 0.0022,  ..., 0.0023, 0.0022, 0.0026],
         [0.0022, 0.0023, 0.0022,  ..., 0.0023, 0.0022, 0.0026],
         [0.9935, 0.9931, 0.9935,  ..., 0.9930, 0.9935, 0.9922]],
        [[0.0022, 0.0023, 0.0021,  ..., 0.0023, 0.0022, 0.0024],
         [0.0022, 0.0023, 0.0021,  ..., 0.0023, 0.0022, 0.0024],
         [0.0022, 0.0023, 0.0021,  ..., 0.0023, 0.0022, 0.0024],
         [0.9934, 0.9932, 0.9937,  ..., 0.9931, 0.9934, 0.9929]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:33,323 [Process: 0] Synchronize training processes
2024-08-16 14:18:33,323 [Process: 0] Evaluating...
2024-08-16 14:18:33,331 [Process: 0] EPOCH 72:
2024-08-16 14:18:33,333 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.6628e-04, 5.2355e-04, 6.5018e-04,  ..., 6.2741e-04,
          7.2520e-04, 5.0070e-04],
         [9.6628e-04, 5.2355e-04, 6.5018e-04,  ..., 6.2741e-04,
          7.2520e-04, 5.0070e-04],
         [9.6628e-04, 5.2355e-04, 6.5018e-04,  ..., 6.2741e-04,
          7.2520e-04, 5.0070e-04],
         [9.9710e-01, 9.9843e-01, 9.9805e-01,  ..., 9.9812e-01,
          9.9782e-01, 9.9850e-01]],
        [[3.5302e-04, 7.1746e-04, 1.3956e-03,  ..., 2.5000e-01,
          1.0465e-03, 2.5000e-01],
         [3.5302e-04, 7.1746e-04, 1.3956e-03,  ..., 2.5000e-01,
          1.0465e-03, 2.5000e-01],
         [4.4243e-04, 1.3536e-03, 3.3107e-03,  ..., 2.5000e-01,
          1.2566e-03, 2.5000e-01],
         [9.9885e-01, 9.9721e-01, 9.9390e-01,  ..., 2.5000e-01,
          9.9665e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0019, 0.0022, 0.0022,  ..., 0.0022, 0.0020, 0.0023],
         [0.0019, 0.0022, 0.0022,  ..., 0.0022, 0.0020, 0.0023],
         [0.0019, 0.0022, 0.0022,  ..., 0.0022, 0.0020, 0.0023],
         [0.9942, 0.9935, 0.9935,  ..., 0.9933, 0.9940, 0.9932]],
        [[0.0021, 0.0023, 0.0023,  ..., 0.0022, 0.0021, 0.0020],
         [0.0021, 0.0023, 0.0023,  ..., 0.0022, 0.0021, 0.0020],
         [0.0021, 0.0023, 0.0023,  ..., 0.0022, 0.0021, 0.0020],
         [0.9938, 0.9932, 0.9931,  ..., 0.9935, 0.9937, 0.9940]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:35,337 [Process: 0] Synchronize training processes
2024-08-16 14:18:35,337 [Process: 0] Evaluating...
2024-08-16 14:18:35,339 [Process: 0] EPOCH 73:
2024-08-16 14:18:35,341 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3005e-04, 4.9904e-04, 1.0571e-03,  ..., 4.2203e-04,
          4.7109e-04, 9.5378e-04],
         [5.3005e-04, 4.9904e-04, 1.0571e-03,  ..., 4.2203e-04,
          4.7109e-04, 9.5378e-04],
         [5.3005e-04, 4.9904e-04, 1.0571e-03,  ..., 4.2203e-04,
          4.7109e-04, 9.5378e-04],
         [9.9841e-01, 9.9850e-01, 9.9683e-01,  ..., 9.9873e-01,
          9.9859e-01, 9.9714e-01]],
        [[1.6099e-03, 1.1750e-03, 2.5000e-01,  ..., 2.5000e-01,
          9.2402e-04, 2.5000e-01],
         [1.6099e-03, 1.1750e-03, 2.5000e-01,  ..., 2.5000e-01,
          9.2402e-04, 2.5000e-01],
         [1.6099e-03, 1.4353e-03, 2.5000e-01,  ..., 2.5000e-01,
          9.5229e-04, 2.5000e-01],
         [9.9517e-01, 9.9621e-01, 2.5000e-01,  ..., 2.5000e-01,
          9.9720e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0024, 0.0021, 0.0021,  ..., 0.0021, 0.0021, 0.0019],
         [0.0024, 0.0021, 0.0021,  ..., 0.0021, 0.0021, 0.0019],
         [0.0024, 0.0021, 0.0021,  ..., 0.0021, 0.0021, 0.0019],
         [0.9928, 0.9937, 0.9937,  ..., 0.9936, 0.9938, 0.9944]],
        [[0.0019, 0.0022, 0.0021,  ..., 0.0020, 0.0023, 0.0022],
         [0.0019, 0.0022, 0.0021,  ..., 0.0020, 0.0023, 0.0022],
         [0.0019, 0.0022, 0.0021,  ..., 0.0020, 0.0023, 0.0022],
         [0.9942, 0.9934, 0.9936,  ..., 0.9940, 0.9931, 0.9935]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:37,343 [Process: 0] Synchronize training processes
2024-08-16 14:18:37,343 [Process: 0] Evaluating...
2024-08-16 14:18:37,345 [Process: 0] EPOCH 74:
2024-08-16 14:18:37,347 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6650e-04, 4.8281e-04, 4.7496e-04,  ..., 7.8402e-04,
          6.2398e-04, 4.1342e-04],
         [7.6650e-04, 4.8281e-04, 4.7496e-04,  ..., 7.8402e-04,
          6.2398e-04, 4.1342e-04],
         [7.6650e-04, 4.8281e-04, 4.7496e-04,  ..., 7.8402e-04,
          6.2398e-04, 4.1342e-04],
         [9.9770e-01, 9.9855e-01, 9.9858e-01,  ..., 9.9765e-01,
          9.9813e-01, 9.9876e-01]],
        [[2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 5.1346e-04,
          8.8242e-04, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 5.1346e-04,
          8.8242e-04, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 1.2742e-03,
          8.8242e-04, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 9.9770e-01,
          9.9735e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:18:39,433 [Process: 0] Synchronize training processes
2024-08-16 14:18:39,433 [Process: 0] Evaluating...
2024-08-16 14:18:39,435 [Process: 0] EPOCH 75:
2024-08-16 14:18:39,437 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0024, 0.0020, 0.0024,  ..., 0.0024, 0.0020, 0.0022],
         [0.0024, 0.0020, 0.0024,  ..., 0.0024, 0.0020, 0.0022],
         [0.0024, 0.0020, 0.0024,  ..., 0.0024, 0.0020, 0.0022],
         [0.9927, 0.9939, 0.9928,  ..., 0.9929, 0.9940, 0.9935]],
        [[0.0021, 0.0025, 0.0024,  ..., 0.0020, 0.0025, 0.0022],
         [0.0021, 0.0025, 0.0024,  ..., 0.0020, 0.0025, 0.0022],
         [0.0021, 0.0025, 0.0024,  ..., 0.0020, 0.0025, 0.0022],
         [0.9936, 0.9924, 0.9927,  ..., 0.9940, 0.9925, 0.9934]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8119e-04, 4.4033e-04, 6.4535e-04,  ..., 7.7382e-04,
          4.9158e-04, 3.8490e-04],
         [5.8119e-04, 4.4033e-04, 6.4535e-04,  ..., 7.7382e-04,
          4.9158e-04, 3.8490e-04],
         [5.8119e-04, 4.4033e-04, 6.4535e-04,  ..., 7.7382e-04,
          4.9158e-04, 3.8490e-04],
         [9.9826e-01, 9.9868e-01, 9.9806e-01,  ..., 9.9768e-01,
          9.9853e-01, 9.9885e-01]],
        [[4.4310e-04, 5.5104e-04, 6.4253e-04,  ..., 3.0859e-04,
          8.1819e-04, 2.5000e-01],
         [4.4310e-04, 5.5104e-04, 6.4253e-04,  ..., 3.0859e-04,
          8.1819e-04, 2.5000e-01],
         [6.8647e-04, 8.3779e-04, 9.0519e-04,  ..., 7.6838e-04,
          2.3846e-03, 2.5000e-01],
         [9.9843e-01, 9.9806e-01, 9.9781e-01,  ..., 9.9861e-01,
          9.9598e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:18:41,487 [Process: 0] Synchronize training processes
2024-08-16 14:18:41,487 [Process: 0] Evaluating...
2024-08-16 14:18:41,489 [Process: 0] EPOCH 76:
2024-08-16 14:18:41,491 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0021, 0.0021, 0.0022,  ..., 0.0021, 0.0023, 0.0020],
         [0.0021, 0.0021, 0.0022,  ..., 0.0021, 0.0023, 0.0020],
         [0.0021, 0.0021, 0.0022,  ..., 0.0021, 0.0023, 0.0020],
         [0.9936, 0.9936, 0.9934,  ..., 0.9937, 0.9931, 0.9941]],
        [[0.0019, 0.0023, 0.0020,  ..., 0.0021, 0.0021, 0.0022],
         [0.0019, 0.0023, 0.0020,  ..., 0.0021, 0.0021, 0.0022],
         [0.0019, 0.0023, 0.0020,  ..., 0.0021, 0.0021, 0.0022],
         [0.9942, 0.9931, 0.9941,  ..., 0.9937, 0.9937, 0.9934]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.0674e-04, 4.0751e-04, 5.4025e-04,  ..., 5.0123e-04,
          5.1036e-04, 9.0339e-04],
         [5.0674e-04, 4.0751e-04, 5.4025e-04,  ..., 5.0123e-04,
          5.1036e-04, 9.0339e-04],
         [5.0674e-04, 4.0751e-04, 5.4025e-04,  ..., 5.0123e-04,
          5.1036e-04, 9.0339e-04],
         [9.9848e-01, 9.9878e-01, 9.9838e-01,  ..., 9.9850e-01,
          9.9847e-01, 9.9729e-01]],
        [[2.5000e-01, 1.3104e-03, 2.5000e-01,  ..., 2.5000e-01,
          1.5945e-04, 1.9654e-03],
         [2.5000e-01, 1.3104e-03, 2.5000e-01,  ..., 2.5000e-01,
          1.5945e-04, 1.9654e-03],
         [2.5000e-01, 3.1546e-03, 2.5000e-01,  ..., 2.5000e-01,
          2.7501e-04, 3.1595e-03],
         [2.5000e-01, 9.9422e-01, 2.5000e-01,  ..., 2.5000e-01,
          9.9941e-01, 9.9291e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:18:43,455 [Process: 0] Synchronize training processes
2024-08-16 14:18:43,455 [Process: 0] Evaluating...
2024-08-16 14:18:43,457 [Process: 0] EPOCH 77:
2024-08-16 14:18:43,460 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0022, 0.0020, 0.0022,  ..., 0.0020, 0.0019, 0.0018],
         [0.0022, 0.0020, 0.0022,  ..., 0.0020, 0.0019, 0.0018],
         [0.0022, 0.0020, 0.0022,  ..., 0.0020, 0.0019, 0.0018],
         [0.9934, 0.9941, 0.9933,  ..., 0.9941, 0.9942, 0.9945]],
        [[0.0019, 0.0021, 0.0020,  ..., 0.0016, 0.0021, 0.0019],
         [0.0019, 0.0021, 0.0020,  ..., 0.0016, 0.0021, 0.0019],
         [0.0019, 0.0021, 0.0020,  ..., 0.0016, 0.0021, 0.0019],
         [0.9942, 0.9937, 0.9939,  ..., 0.9951, 0.9936, 0.9942]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.1191e-04, 5.5031e-04, 5.1385e-04,  ..., 4.1904e-04,
          9.5982e-04, 5.7627e-04],
         [8.1191e-04, 5.5031e-04, 5.1385e-04,  ..., 4.1904e-04,
          9.5982e-04, 5.7627e-04],
         [8.1191e-04, 5.5031e-04, 5.1385e-04,  ..., 4.1904e-04,
          9.5982e-04, 5.7627e-04],
         [9.9756e-01, 9.9835e-01, 9.9846e-01,  ..., 9.9874e-01,
          9.9712e-01, 9.9827e-01]],
        [[2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 1.4823e-03,
          5.7788e-04, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 1.4823e-03,
          5.7788e-04, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 4.5666e-03,
          1.0382e-03, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 9.9247e-01,
          9.9781e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0023, 0.0022, 0.0021,  ..., 0.0017, 0.0018, 0.0022],
         [0.0023, 0.0022, 0.0021,  ..., 0.0017, 0.0018, 0.0022],
         [0.0023, 0.0022, 0.0021,  ..., 0.0017, 0.0018, 0.0022],
         [0.9932, 0.9933, 0.9938,  ..., 0.9949, 0.9946, 0.9933]],
        [[0.0021, 0.0021, 0.0019,  ..., 0.0021, 0.0021, 0.0018],
         [0.0021, 0.0021, 0.0019,  ..., 0.0021, 0.0021, 0.0018],
         [0.0021, 0.0021, 0.0019,  ..., 0.0021, 0.0021, 0.0018],
         [0.9936, 0.9937, 0.9942,  ..., 0.9936, 0.9938, 0.9945]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:45,369 [Process: 0] Synchronize training processes
2024-08-16 14:18:45,370 [Process: 0] Evaluating...
2024-08-16 14:18:45,372 [Process: 0] EPOCH 78:
2024-08-16 14:18:45,374 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2638e-04, 8.1906e-04, 8.3873e-04,  ..., 1.4904e-03,
          9.4841e-04, 4.9804e-04],
         [5.2638e-04, 8.1906e-04, 8.3873e-04,  ..., 1.4904e-03,
          9.4841e-04, 4.9804e-04],
         [5.2638e-04, 8.1906e-04, 8.3873e-04,  ..., 1.4904e-03,
          9.4841e-04, 4.9804e-04],
         [9.9842e-01, 9.9754e-01, 9.9748e-01,  ..., 9.9553e-01,
          9.9715e-01, 9.9851e-01]],
        [[1.1316e-03, 2.5000e-01, 2.5000e-01,  ..., 2.4994e-04,
          1.9323e-04, 7.3353e-04],
         [1.1316e-03, 2.5000e-01, 2.5000e-01,  ..., 2.4994e-04,
          1.9323e-04, 7.3353e-04],
         [1.6797e-03, 2.5000e-01, 2.5000e-01,  ..., 2.5438e-04,
          4.2962e-04, 7.3353e-04],
         [9.9606e-01, 2.5000e-01, 2.5000e-01,  ..., 9.9925e-01,
          9.9918e-01, 9.9780e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0020, 0.0023, 0.0022,  ..., 0.0023, 0.0023, 0.0021],
         [0.0020, 0.0023, 0.0022,  ..., 0.0023, 0.0023, 0.0021],
         [0.0020, 0.0023, 0.0022,  ..., 0.0023, 0.0023, 0.0021],
         [0.9941, 0.9932, 0.9934,  ..., 0.9931, 0.9931, 0.9937]],
        [[0.0021, 0.0021, 0.0020,  ..., 0.0020, 0.0019, 0.0022],
         [0.0021, 0.0021, 0.0020,  ..., 0.0020, 0.0019, 0.0022],
         [0.0021, 0.0021, 0.0020,  ..., 0.0020, 0.0019, 0.0022],
         [0.9937, 0.9936, 0.9941,  ..., 0.9940, 0.9942, 0.9935]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:47,324 [Process: 0] Synchronize training processes
2024-08-16 14:18:47,325 [Process: 0] Evaluating...
2024-08-16 14:18:47,327 [Process: 0] EPOCH 79:
2024-08-16 14:18:47,329 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.3883e-04, 5.3815e-04, 7.8929e-04,  ..., 3.9129e-04,
          3.6394e-04, 5.6133e-04],
         [8.3883e-04, 5.3815e-04, 7.8929e-04,  ..., 3.9129e-04,
          3.6394e-04, 5.6133e-04],
         [8.3883e-04, 5.3815e-04, 7.8929e-04,  ..., 3.9129e-04,
          3.6394e-04, 5.6133e-04],
         [9.9748e-01, 9.9839e-01, 9.9763e-01,  ..., 9.9883e-01,
          9.9891e-01, 9.9832e-01]],
        [[1.4185e-04, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          6.9447e-04, 2.5000e-01],
         [1.4185e-04, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          6.9447e-04, 2.5000e-01],
         [2.7550e-04, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          6.9447e-04, 2.5000e-01],
         [9.9944e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          9.9792e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0020, 0.0019, 0.0021,  ..., 0.0022, 0.0018, 0.0020],
         [0.0020, 0.0019, 0.0021,  ..., 0.0022, 0.0018, 0.0020],
         [0.0020, 0.0019, 0.0021,  ..., 0.0022, 0.0018, 0.0020],
         [0.9939, 0.9944, 0.9938,  ..., 0.9933, 0.9945, 0.9939]],
        [[0.0019, 0.0020, 0.0018,  ..., 0.0020, 0.0019, 0.0022],
         [0.0019, 0.0020, 0.0018,  ..., 0.0020, 0.0019, 0.0022],
         [0.0019, 0.0020, 0.0018,  ..., 0.0020, 0.0019, 0.0022],
         [0.9943, 0.9940, 0.9945,  ..., 0.9941, 0.9942, 0.9935]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:49,346 [Process: 0] Synchronize training processes
2024-08-16 14:18:49,346 [Process: 0] Evaluating...
2024-08-16 14:18:49,348 [Process: 0] EPOCH 80:
2024-08-16 14:18:49,350 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.1733e-04, 6.2743e-04, 8.2617e-04,  ..., 6.6274e-04,
          5.7532e-04, 6.4200e-04],
         [6.1733e-04, 6.2743e-04, 8.2617e-04,  ..., 6.6274e-04,
          5.7532e-04, 6.4200e-04],
         [6.1733e-04, 6.2743e-04, 8.2617e-04,  ..., 6.6274e-04,
          5.7532e-04, 6.4200e-04],
         [9.9815e-01, 9.9812e-01, 9.9752e-01,  ..., 9.9801e-01,
          9.9827e-01, 9.9807e-01]],
        [[2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 1.1484e-03,
          1.8355e-03, 4.8761e-04],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 1.1484e-03,
          1.8355e-03, 4.8761e-04],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 1.2084e-03,
          1.8355e-03, 4.8761e-04],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 9.9649e-01,
          9.9449e-01, 9.9854e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0017, 0.0021, 0.0017,  ..., 0.0020, 0.0017, 0.0022],
         [0.0017, 0.0021, 0.0017,  ..., 0.0020, 0.0017, 0.0022],
         [0.0017, 0.0021, 0.0017,  ..., 0.0020, 0.0017, 0.0022],
         [0.9949, 0.9937, 0.9948,  ..., 0.9941, 0.9948, 0.9933]],
        [[0.0021, 0.0018, 0.0020,  ..., 0.0017, 0.0017, 0.0021],
         [0.0021, 0.0018, 0.0020,  ..., 0.0017, 0.0017, 0.0021],
         [0.0021, 0.0018, 0.0020,  ..., 0.0017, 0.0017, 0.0021],
         [0.9936, 0.9945, 0.9940,  ..., 0.9949, 0.9948, 0.9936]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:51,247 [Process: 0] Synchronize training processes
2024-08-16 14:18:51,247 [Process: 0] Evaluating...
2024-08-16 14:18:51,249 [Process: 0] EPOCH 81:
2024-08-16 14:18:51,251 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.3746e-04, 2.5453e-04, 6.7936e-04,  ..., 3.3118e-04,
          1.0035e-03, 3.1430e-04],
         [4.3746e-04, 2.5453e-04, 6.7936e-04,  ..., 3.3118e-04,
          1.0035e-03, 3.1430e-04],
         [4.3746e-04, 2.5453e-04, 6.7936e-04,  ..., 3.3118e-04,
          1.0035e-03, 3.1430e-04],
         [9.9869e-01, 9.9924e-01, 9.9796e-01,  ..., 9.9901e-01,
          9.9699e-01, 9.9906e-01]],
        [[9.2604e-04, 6.9583e-04, 4.8278e-04,  ..., 2.5000e-01,
          5.1602e-04, 2.5000e-01],
         [9.2604e-04, 6.9583e-04, 4.8278e-04,  ..., 2.5000e-01,
          5.1602e-04, 2.5000e-01],
         [9.4214e-04, 1.1775e-03, 7.4711e-04,  ..., 2.5000e-01,
          6.6244e-04, 2.5000e-01],
         [9.9721e-01, 9.9743e-01, 9.9829e-01,  ..., 2.5000e-01,
          9.9831e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0018, 0.0019, 0.0019,  ..., 0.0017, 0.0021, 0.0017],
         [0.0018, 0.0019, 0.0019,  ..., 0.0017, 0.0021, 0.0017],
         [0.0018, 0.0019, 0.0019,  ..., 0.0017, 0.0021, 0.0017],
         [0.9947, 0.9943, 0.9944,  ..., 0.9949, 0.9937, 0.9948]],
        [[0.0021, 0.0018, 0.0020,  ..., 0.0019, 0.0020, 0.0017],
         [0.0021, 0.0018, 0.0020,  ..., 0.0019, 0.0020, 0.0017],
         [0.0021, 0.0018, 0.0020,  ..., 0.0019, 0.0020, 0.0017],
         [0.9937, 0.9946, 0.9939,  ..., 0.9943, 0.9939, 0.9948]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:18:53,213 [Process: 0] Synchronize training processes
2024-08-16 14:18:53,213 [Process: 0] Evaluating...
2024-08-16 14:18:53,221 [Process: 0] EPOCH 82:
2024-08-16 14:18:53,223 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 179, in train_one_epoch
    for i, batch in enumerate(self.train_loader):
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 116, in __getitem__
    fps_indices_scene_np = fps_indices_scene.squeeze(0).cpu().numpy()
KeyboardInterrupt
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3760e-04, 8.2844e-04, 5.9707e-04,  ..., 8.0813e-04,
          6.7268e-04, 3.5934e-04],
         [5.3760e-04, 8.2844e-04, 5.9707e-04,  ..., 8.0813e-04,
          6.7268e-04, 3.5934e-04],
         [5.3760e-04, 8.2844e-04, 5.9707e-04,  ..., 8.0813e-04,
          6.7268e-04, 3.5934e-04],
         [9.9839e-01, 9.9751e-01, 9.9821e-01,  ..., 9.9758e-01,
          9.9798e-01, 9.9892e-01]],
        [[3.8123e-04, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.3857e-01, 2.5000e-01],
         [3.8123e-04, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.3857e-01, 2.5000e-01],
         [3.8123e-04, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.8428e-01, 2.5000e-01],
         [9.9886e-01, 2.5000e-01, 2.5000e-01,  ..., 2.5000e-01,
          2.3857e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True