2024-08-18 15:02:12,347 [Worker 0] Is distributed: False
2024-08-18 15:02:12,348 [Process: 0] Starting training
2024-08-18 15:02:12,348 [Process: 0] EPOCH 1:
2024-08-18 15:02:12,350 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3059, 0.1693, 0.2412,  ..., 0.2963, 0.2612, 0.2339],
         [0.2214, 0.2849, 0.2412,  ..., 0.2640, 0.2685, 0.2208],
         [0.2214, 0.1693, 0.2764,  ..., 0.2055, 0.1484, 0.1924],
         [0.2514, 0.3765, 0.2412,  ..., 0.2342, 0.3219, 0.3530]],
        [[0.2988, 0.1924, 0.2677,  ..., 0.0834, 0.1014, 0.3010],
         [0.1776, 0.1924, 0.2458,  ..., 0.7302, 0.1086, 0.2648],
         [0.1714, 0.4132, 0.1862,  ..., 0.0834, 0.6885, 0.2419],
         [0.3522, 0.2020, 0.3003,  ..., 0.1030, 0.1014, 0.1924]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:02:14,088 [Process: 0] Synchronize training processes
2024-08-18 15:02:14,088 [Process: 0] Evaluating...
2024-08-18 15:02:14,093 [Process: 0] EPOCH 2:
2024-08-18 15:02:14,095 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:15,170 [Process: 0] Synchronize training processes
2024-08-18 15:02:15,170 [Process: 0] Evaluating...
2024-08-18 15:02:15,172 [Process: 0] EPOCH 3:
2024-08-18 15:02:15,174 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2592, 0.2744, 0.2647,  ..., 0.2872, 0.2538, 0.2860],
         [0.2389, 0.2638, 0.2392,  ..., 0.2648, 0.2843, 0.2430],
         [0.1706, 0.1933, 0.1611,  ..., 0.1801, 0.1701, 0.1912],
         [0.3313, 0.2685, 0.3350,  ..., 0.2680, 0.2917, 0.2798]],
        [[0.2636, 0.2684, 0.0016,  ..., 0.2539, 0.2825, 0.2114],
         [0.2985, 0.2605, 0.0016,  ..., 0.2597, 0.2527, 0.2803],
         [0.2190, 0.2185, 0.9951,  ..., 0.2013, 0.1916, 0.2968],
         [0.2190, 0.2526, 0.0016,  ..., 0.2851, 0.2731, 0.2114]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3399, 0.2921, 0.3035,  ..., 0.2939, 0.3034, 0.2943],
         [0.2404, 0.2353, 0.2368,  ..., 0.2515, 0.2340, 0.2555],
         [0.1949, 0.1761, 0.1786,  ..., 0.1965, 0.1993, 0.1911],
         [0.2248, 0.2965, 0.2810,  ..., 0.2581, 0.2633, 0.2591]],
        [[0.2759, 0.2897, 0.3004,  ..., 0.2476, 0.0612, 0.2350],
         [0.2314, 0.2326, 0.2410,  ..., 0.2535, 0.0612, 0.2394],
         [0.1981, 0.1890, 0.1905,  ..., 0.2313, 0.8164, 0.1739],
         [0.2946, 0.2887, 0.2681,  ..., 0.2676, 0.0612, 0.3516]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2473, 0.3042, 0.3274,  ..., 0.3163, 0.3260, 0.3117],
         [0.2057, 0.2386, 0.2287,  ..., 0.2227, 0.2330, 0.2471],
         [0.1675, 0.1712, 0.1715,  ..., 0.1608, 0.1747, 0.1824],
         [0.3795, 0.2861, 0.2724,  ..., 0.3002, 0.2663, 0.2588]],
        [[0.2815, 0.2939, 0.3103,  ..., 0.1798, 0.1002, 0.0241],
         [0.2550, 0.2385, 0.2560,  ..., 0.2226, 0.1002, 0.0241],
         [0.1878, 0.1648, 0.1841,  ..., 0.4086, 0.6994, 0.9278],
         [0.2758, 0.3028, 0.2496,  ..., 0.1891, 0.1002, 0.0241]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:02:16,252 [Process: 0] Synchronize training processes
2024-08-18 15:02:16,252 [Process: 0] Evaluating...
2024-08-18 15:02:16,254 [Process: 0] EPOCH 4:
2024-08-18 15:02:16,256 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:17,336 [Process: 0] Synchronize training processes
2024-08-18 15:02:17,337 [Process: 0] Evaluating...
2024-08-18 15:02:17,338 [Process: 0] EPOCH 5:
2024-08-18 15:02:17,340 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3287, 0.3256, 0.0095,  ..., 0.3129, 0.3034, 0.1976],
         [0.2341, 0.2330, 0.0095,  ..., 0.2371, 0.2212, 0.2518],
         [0.1817, 0.1761, 0.9716,  ..., 0.1840, 0.1733, 0.3529],
         [0.2554, 0.2652, 0.0095,  ..., 0.2660, 0.3021, 0.1976]],
        [[0.3078, 0.3341, 0.3383,  ..., 0.2887, 0.2178, 0.2735],
         [0.2195, 0.2046, 0.2155,  ..., 0.2001, 0.2248, 0.2474],
         [0.1878, 0.1562, 0.1713,  ..., 0.1488, 0.2588, 0.2157],
         [0.2849, 0.3051, 0.2749,  ..., 0.3624, 0.2986, 0.2634]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0067, 0.3154, 0.2849,  ..., 0.3026, 0.2960, 0.2752],
         [0.0067, 0.1975, 0.2321,  ..., 0.2166, 0.2264, 0.2038],
         [0.9799, 0.1617, 0.1849,  ..., 0.1749, 0.1952, 0.1794],
         [0.0067, 0.3253, 0.2981,  ..., 0.3059, 0.2824, 0.3416]],
        [[0.0752, 0.3050, 0.3463,  ..., 0.2252, 0.0997, 0.1130],
         [0.0752, 0.2276, 0.2161,  ..., 0.2603, 0.0997, 0.1433],
         [0.7745, 0.1855, 0.1940,  ..., 0.2893, 0.7008, 0.6307],
         [0.0752, 0.2818, 0.2435,  ..., 0.2252, 0.0997, 0.1130]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1856, 0.2983, 0.0383,  ..., 0.2156, 0.1858, 0.0547],
         [0.2508, 0.1996, 0.0741,  ..., 0.2654, 0.2171, 0.0547],
         [0.3779, 0.1721, 0.8494,  ..., 0.3098, 0.4114, 0.8358],
         [0.1856, 0.3300, 0.0383,  ..., 0.2092, 0.1858, 0.0547]],
        [[0.3162, 0.3106, 0.2975,  ..., 0.2927, 0.3252, 0.3000],
         [0.1904, 0.1856, 0.1810,  ..., 0.1895, 0.1893, 0.1871],
         [0.1797, 0.1777, 0.1763,  ..., 0.1895, 0.1708, 0.1730],
         [0.3137, 0.3261, 0.3452,  ..., 0.3283, 0.3147, 0.3399]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0515, 0.3335, 0.2856,  ..., 0.3314, 0.3318, 0.3327],
         [0.0805, 0.1652, 0.1808,  ..., 0.1701, 0.2352, 0.1864],
         [0.8164, 0.1632, 0.1808,  ..., 0.1701, 0.2143, 0.1707],
         [0.0515, 0.3380, 0.3527,  ..., 0.3284, 0.2186, 0.3102]],
        [[0.2559, 0.2845, 0.3228,  ..., 0.1044, 0.1680, 0.0888],
         [0.2562, 0.2005, 0.1891,  ..., 0.1398, 0.1680, 0.0888],
         [0.2733, 0.1718, 0.1749,  ..., 0.6515, 0.4961, 0.7335],
         [0.2146, 0.3432, 0.3132,  ..., 0.1044, 0.1680, 0.0888]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:02:18,417 [Process: 0] Synchronize training processes
2024-08-18 15:02:18,417 [Process: 0] Evaluating...
2024-08-18 15:02:18,419 [Process: 0] EPOCH 6:
2024-08-18 15:02:18,421 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:19,502 [Process: 0] Synchronize training processes
2024-08-18 15:02:19,502 [Process: 0] Evaluating...
2024-08-18 15:02:19,503 [Process: 0] EPOCH 7:
2024-08-18 15:02:19,505 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3444, 0.3413, 0.1178,  ..., 0.1083, 0.3034, 0.1615],
         [0.1427, 0.1668, 0.1684,  ..., 0.2022, 0.1329, 0.1989],
         [0.1427, 0.1604, 0.5960,  ..., 0.5812, 0.1329, 0.4780],
         [0.3702, 0.3315, 0.1178,  ..., 0.1083, 0.4308, 0.1615]],
        [[0.3601, 0.3669, 0.3444,  ..., 0.2836, 0.3011, 0.2871],
         [0.1714, 0.1915, 0.1790,  ..., 0.1553, 0.1531, 0.1497],
         [0.1714, 0.1915, 0.1668,  ..., 0.1553, 0.1531, 0.1497],
         [0.2970, 0.2501, 0.3097,  ..., 0.4057, 0.3926, 0.4134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1228, 0.3471, 0.3727,  ..., 0.2652, 0.3217, 0.3338],
         [0.1228, 0.1671, 0.1312,  ..., 0.1496, 0.1670, 0.1724],
         [0.6315, 0.1647, 0.1233,  ..., 0.1289, 0.1670, 0.1724],
         [0.1228, 0.3212, 0.3727,  ..., 0.4563, 0.3443, 0.3213]],
        [[0.3683, 0.1117, 0.3178,  ..., 0.1167, 0.0761, 0.1079],
         [0.1793, 0.1858, 0.1638,  ..., 0.2116, 0.0761, 0.1079],
         [0.1755, 0.5908, 0.1449,  ..., 0.5549, 0.7717, 0.6763],
         [0.2769, 0.1117, 0.3735,  ..., 0.1167, 0.0761, 0.1079]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3624, 0.3642, 0.1883,  ..., 0.3481, 0.3163, 0.1292],
         [0.1782, 0.1660, 0.1952,  ..., 0.1853, 0.1683, 0.1292],
         [0.1499, 0.1546, 0.4282,  ..., 0.1763, 0.1683, 0.6125],
         [0.3095, 0.3152, 0.1883,  ..., 0.2904, 0.3472, 0.1292]],
        [[0.3809, 0.3206, 0.3102,  ..., 0.2880, 0.2366, 0.3117],
         [0.1430, 0.1673, 0.1496,  ..., 0.1524, 0.2416, 0.1931],
         [0.1285, 0.1439, 0.1487,  ..., 0.1356, 0.2990, 0.1807],
         [0.3476, 0.3682, 0.3915,  ..., 0.4240, 0.2227, 0.3145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0296, 0.3251, 0.3468,  ..., 0.2850, 0.0928, 0.3059],
         [0.0296, 0.1792, 0.1881,  ..., 0.1718, 0.1133, 0.1890],
         [0.9112, 0.1456, 0.1678,  ..., 0.1415, 0.7011, 0.1788],
         [0.0296, 0.3501, 0.2972,  ..., 0.4017, 0.0928, 0.3263]],
        [[0.3858, 0.1853, 0.3556,  ..., 0.1689, 0.1115, 0.0575],
         [0.2047, 0.1853, 0.1547,  ..., 0.1689, 0.1115, 0.0575],
         [0.2047, 0.4440, 0.1438,  ..., 0.4934, 0.6654, 0.8276],
         [0.2047, 0.1853, 0.3459,  ..., 0.1689, 0.1115, 0.0575]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:02:20,584 [Process: 0] Synchronize training processes
2024-08-18 15:02:20,584 [Process: 0] Evaluating...
2024-08-18 15:02:20,586 [Process: 0] EPOCH 8:
2024-08-18 15:02:20,588 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:21,671 [Process: 0] Synchronize training processes
2024-08-18 15:02:21,671 [Process: 0] Evaluating...
2024-08-18 15:02:21,673 [Process: 0] EPOCH 9:
2024-08-18 15:02:21,675 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3085, 0.3364, 0.3739,  ..., 0.3507, 0.2994, 0.0753],
         [0.1579, 0.1869, 0.1266,  ..., 0.1869, 0.1633, 0.0753],
         [0.1368, 0.1690, 0.1107,  ..., 0.1773, 0.1473, 0.7740],
         [0.3968, 0.3077, 0.3887,  ..., 0.2851, 0.3900, 0.0753]],
        [[0.1925, 0.3480, 0.2498,  ..., 0.2408, 0.1619, 0.3690],
         [0.1925, 0.1501, 0.2222,  ..., 0.2129, 0.1619, 0.1791],
         [0.4224, 0.1410, 0.3057,  ..., 0.3334, 0.5143, 0.1387],
         [0.1925, 0.3609, 0.2222,  ..., 0.2129, 0.1619, 0.3132]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1042, 0.2904, 0.3151,  ..., 0.3219, 0.1903, 0.3571],
         [0.1042, 0.1773, 0.1901,  ..., 0.1783, 0.1903, 0.1548],
         [0.6873, 0.1663, 0.1842,  ..., 0.1660, 0.4290, 0.1533],
         [0.1042, 0.3660, 0.3106,  ..., 0.3337, 0.1903, 0.3348]],
        [[0.3289, 0.1744, 0.3636,  ..., 0.1692, 0.0872, 0.1421],
         [0.1966, 0.1744, 0.1429,  ..., 0.1692, 0.0872, 0.1421],
         [0.2780, 0.4768, 0.1429,  ..., 0.4923, 0.7383, 0.5737],
         [0.1966, 0.1744, 0.3507,  ..., 0.1692, 0.0872, 0.1421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4060, 0.4046, 0.3729,  ..., 0.3022, 0.3142, 0.1390],
         [0.1315, 0.1693, 0.1808,  ..., 0.2200, 0.1050, 0.1480],
         [0.1179, 0.1693, 0.1808,  ..., 0.2391, 0.0963, 0.5739],
         [0.3446, 0.2569, 0.2655,  ..., 0.2388, 0.4844, 0.1390]],
        [[0.3560, 0.2930, 0.3202,  ..., 0.1228, 0.1227, 0.3397],
         [0.1483, 0.1329, 0.1047,  ..., 0.1228, 0.1227, 0.0918],
         [0.1293, 0.1329, 0.0939,  ..., 0.6315, 0.6320, 0.0749],
         [0.3664, 0.4411, 0.4812,  ..., 0.1228, 0.1227, 0.4936]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0472, 0.3491, 0.2961,  ..., 0.3104, 0.2214, 0.3166],
         [0.0472, 0.1464, 0.1621,  ..., 0.1708, 0.2214, 0.1701],
         [0.8583, 0.1458, 0.1621,  ..., 0.1708, 0.3357, 0.1701],
         [0.0472, 0.3587, 0.3797,  ..., 0.3479, 0.2214, 0.3431]],
        [[0.1495, 0.2338, 0.4353,  ..., 0.1061, 0.0326, 0.1115],
         [0.1495, 0.2120, 0.1309,  ..., 0.1173, 0.0326, 0.1115],
         [0.5514, 0.3422, 0.1309,  ..., 0.6706, 0.9022, 0.6656],
         [0.1495, 0.2120, 0.3029,  ..., 0.1061, 0.0326, 0.1115]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:02:22,756 [Process: 0] Synchronize training processes
2024-08-18 15:02:22,756 [Process: 0] Evaluating...
2024-08-18 15:02:22,758 [Process: 0] EPOCH 10:
2024-08-18 15:02:22,760 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:23,837 [Process: 0] Synchronize training processes
2024-08-18 15:02:23,837 [Process: 0] Evaluating...
2024-08-18 15:02:23,839 [Process: 0] EPOCH 11:
2024-08-18 15:02:23,841 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3290, 0.3575, 0.2452,  ..., 0.1791, 0.3168, 0.1499],
         [0.2005, 0.2056, 0.2380,  ..., 0.1791, 0.1102, 0.1499],
         [0.2005, 0.2056, 0.2789,  ..., 0.4628, 0.1102, 0.5503],
         [0.2699, 0.2313, 0.2380,  ..., 0.1791, 0.4627, 0.1499]],
        [[0.3431, 0.4564, 0.4003,  ..., 0.1431, 0.0896, 0.4521],
         [0.1502, 0.0885, 0.0713,  ..., 0.1601, 0.0956, 0.0716],
         [0.1465, 0.0885, 0.0635,  ..., 0.5536, 0.7251, 0.0716],
         [0.3602, 0.3667, 0.4648,  ..., 0.1431, 0.0896, 0.4046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0659, 0.2810, 0.2019,  ..., 0.2898, 0.2311, 0.2797],
         [0.0659, 0.1705, 0.1665,  ..., 0.1238, 0.2311, 0.1502],
         [0.8024, 0.1705, 0.1665,  ..., 0.1238, 0.3066, 0.1502],
         [0.0659, 0.3779, 0.4652,  ..., 0.4627, 0.2311, 0.4199]],
        [[0.3949, 0.0919, 0.4407,  ..., 0.0913, 0.0577, 0.1165],
         [0.1981, 0.1010, 0.0832,  ..., 0.1218, 0.0577, 0.1165],
         [0.1981, 0.7152, 0.0832,  ..., 0.6955, 0.8269, 0.6504],
         [0.2089, 0.0919, 0.3930,  ..., 0.0913, 0.0577, 0.1165]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3557, 0.3488, 0.3183,  ..., 0.1400, 0.4945, 0.1804],
         [0.1349, 0.1341, 0.1382,  ..., 0.1400, 0.0987, 0.1804],
         [0.1261, 0.1341, 0.1226,  ..., 0.5801, 0.0921, 0.4588],
         [0.3833, 0.3830, 0.4209,  ..., 0.1400, 0.3148, 0.1804]],
        [[0.4173, 0.3914, 0.3350,  ..., 0.1321, 0.0964, 0.2316],
         [0.0487, 0.1275, 0.0672,  ..., 0.1321, 0.0964, 0.0684],
         [0.0487, 0.1118, 0.0658,  ..., 0.6038, 0.7108, 0.0684],
         [0.4853, 0.3693, 0.5320,  ..., 0.1321, 0.0964, 0.6315]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:24,918 [Process: 0] Synchronize training processes
2024-08-18 15:02:24,919 [Process: 0] Evaluating...
2024-08-18 15:02:24,923 [Process: 0] EPOCH 12:
2024-08-18 15:02:24,924 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:26,003 [Process: 0] Synchronize training processes
2024-08-18 15:02:26,003 [Process: 0] Evaluating...
2024-08-18 15:02:26,005 [Process: 0] EPOCH 13:
2024-08-18 15:02:26,006 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.2933, 0.2877,  ..., 0.3011, 0.2518, 0.2026],
         [0.2500, 0.1291, 0.1205,  ..., 0.1106, 0.1752, 0.1260],
         [0.2500, 0.1210, 0.1177,  ..., 0.1106, 0.1703, 0.1260],
         [0.2500, 0.4567, 0.4740,  ..., 0.4778, 0.4027, 0.5454]],
        [[0.5135, 0.0826, 0.6526,  ..., 0.1068, 0.1010, 0.1396],
         [0.1583, 0.0826, 0.0942,  ..., 0.1068, 0.1010, 0.1396],
         [0.1583, 0.7522, 0.0942,  ..., 0.6796, 0.6971, 0.5811],
         [0.1698, 0.0826, 0.1591,  ..., 0.1068, 0.1010, 0.1396]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5294, 0.3877, 0.3637,  ..., 0.1028, 0.1997, 0.1494],
         [0.1071, 0.1393, 0.1613,  ..., 0.1042, 0.1997, 0.1494],
         [0.1036, 0.1259, 0.1549,  ..., 0.6902, 0.2089, 0.5518],
         [0.2599, 0.3471, 0.3200,  ..., 0.1028, 0.3917, 0.1494]],
        [[0.2933, 0.4434, 0.1697,  ..., 0.1641, 0.1330, 0.4328],
         [0.0836, 0.1083, 0.1697,  ..., 0.1641, 0.1330, 0.0944],
         [0.0718, 0.1083, 0.4908,  ..., 0.5078, 0.6011, 0.0923],
         [0.5512, 0.3400, 0.1697,  ..., 0.1641, 0.1330, 0.3804]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9256, 0.1845, 0.2041,  ..., 0.1440, 0.3340, 0.1648],
         [0.0248, 0.1387, 0.1165,  ..., 0.1088, 0.0723, 0.1385],
         [0.0248, 0.1320, 0.1040,  ..., 0.1088, 0.0723, 0.1385],
         [0.0248, 0.5449, 0.5754,  ..., 0.6385, 0.5215, 0.5582]],
        [[0.5548, 0.1149, 0.6275,  ..., 0.1321, 0.0595, 0.1760],
         [0.1484, 0.1149, 0.1180,  ..., 0.1321, 0.0595, 0.1693],
         [0.1484, 0.6553, 0.1180,  ..., 0.6038, 0.8214, 0.4854],
         [0.1484, 0.1149, 0.1365,  ..., 0.1321, 0.0595, 0.1693]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4155, 0.5684, 0.6949,  ..., 0.1269, 0.2742, 0.1658],
         [0.0897, 0.0906, 0.0754,  ..., 0.1311, 0.1408, 0.1658],
         [0.0859, 0.0884, 0.0741,  ..., 0.6152, 0.1341, 0.5027],
         [0.4089, 0.2525, 0.1556,  ..., 0.1269, 0.4510, 0.1658]],
        [[0.2560, 0.1637, 0.2325,  ..., 0.1378, 0.1342, 0.4157],
         [0.1613, 0.1637, 0.2325,  ..., 0.1378, 0.1342, 0.1200],
         [0.1613, 0.1637, 0.2885,  ..., 0.5866, 0.5975, 0.1200],
         [0.4214, 0.5089, 0.2464,  ..., 0.1378, 0.1342, 0.3442]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:27,087 [Process: 0] Synchronize training processes
2024-08-18 15:02:27,087 [Process: 0] Evaluating...
2024-08-18 15:02:27,089 [Process: 0] EPOCH 14:
2024-08-18 15:02:27,091 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4657, 0.1937, 0.1399,  ..., 0.1019, 0.0611, 0.1891],
         [0.1781, 0.1937, 0.1399,  ..., 0.1019, 0.0611, 0.1891],
         [0.1781, 0.2418, 0.1399,  ..., 0.1019, 0.0611, 0.4214],
         [0.1781, 0.3708, 0.5804,  ..., 0.6944, 0.8167, 0.2004]],
        [[0.6982, 0.2903, 0.5374,  ..., 0.1487, 0.0624, 0.5221],
         [0.0979, 0.2202, 0.1260,  ..., 0.1487, 0.0624, 0.1593],
         [0.0979, 0.2751, 0.1260,  ..., 0.5538, 0.8128, 0.1593],
         [0.1059, 0.2144, 0.2106,  ..., 0.1487, 0.0624, 0.1593]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6661, 0.8316, 0.5597,  ..., 0.1788, 0.5884, 0.1229],
         [0.1032, 0.0507, 0.0952,  ..., 0.1683, 0.1188, 0.1229],
         [0.1032, 0.0507, 0.0952,  ..., 0.4845, 0.1188, 0.6313],
         [0.1275, 0.0670, 0.2500,  ..., 0.1683, 0.1739, 0.1229]],
        [[0.1562, 0.2073, 0.1849,  ..., 0.1774, 0.1394, 0.2128],
         [0.1562, 0.0876, 0.1575,  ..., 0.1825, 0.1394, 0.1279],
         [0.5314, 0.0876, 0.1575,  ..., 0.1774, 0.5817, 0.1279],
         [0.1562, 0.6174, 0.5001,  ..., 0.4628, 0.1394, 0.5314]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9833, 0.1235, 0.0594,  ..., 0.0832, 0.2484, 0.1604],
         [0.0056, 0.1235, 0.0594,  ..., 0.0832, 0.1369, 0.1604],
         [0.0056, 0.1235, 0.0594,  ..., 0.0832, 0.1369, 0.2721],
         [0.0056, 0.6296, 0.8217,  ..., 0.7505, 0.4777, 0.4072]],
        [[0.3633, 0.3021, 0.6257,  ..., 0.1200, 0.1125, 0.1270],
         [0.1607, 0.2039, 0.1248,  ..., 0.1200, 0.0853, 0.1270],
         [0.3153, 0.2901, 0.1248,  ..., 0.6400, 0.7168, 0.6190],
         [0.1607, 0.2039, 0.1248,  ..., 0.1200, 0.0853, 0.1270]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8199, 0.9437, 0.7951,  ..., 0.0946, 0.8656, 0.1430],
         [0.0600, 0.0188, 0.0679,  ..., 0.1034, 0.0448, 0.1430],
         [0.0600, 0.0188, 0.0679,  ..., 0.7074, 0.0448, 0.5710],
         [0.0600, 0.0188, 0.0691,  ..., 0.0946, 0.0448, 0.1430]],
        [[0.1440, 0.1741, 0.0709,  ..., 0.1735, 0.1148, 0.0909],
         [0.1440, 0.1741, 0.0709,  ..., 0.1735, 0.1148, 0.0688],
         [0.1440, 0.1741, 0.0709,  ..., 0.1923, 0.6556, 0.0688],
         [0.5680, 0.4776, 0.7874,  ..., 0.4607, 0.1148, 0.7715]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:02:28,170 [Process: 0] Synchronize training processes
2024-08-18 15:02:28,171 [Process: 0] Evaluating...
2024-08-18 15:02:28,172 [Process: 0] EPOCH 15:
2024-08-18 15:02:28,174 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:29,257 [Process: 0] Synchronize training processes
2024-08-18 15:02:29,257 [Process: 0] Evaluating...
2024-08-18 15:02:29,259 [Process: 0] EPOCH 16:
2024-08-18 15:02:29,261 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1977, 0.2386, 0.1397,  ..., 0.1851, 0.6517, 0.1036],
         [0.1977, 0.1375, 0.1397,  ..., 0.1196, 0.1161, 0.1036],
         [0.4068, 0.1375, 0.1397,  ..., 0.1196, 0.1161, 0.1036],
         [0.1977, 0.4865, 0.5810,  ..., 0.5757, 0.1161, 0.6892]],
        [[0.1056, 0.2351, 0.6026,  ..., 0.1032, 0.0257, 0.0382],
         [0.0909, 0.1761, 0.1325,  ..., 0.1142, 0.0257, 0.0382],
         [0.7127, 0.4126, 0.1325,  ..., 0.6795, 0.9228, 0.8855],
         [0.0909, 0.1761, 0.1325,  ..., 0.1032, 0.0257, 0.0382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7872, 0.8203, 0.8518,  ..., 0.1502, 0.6541, 0.0782],
         [0.0709, 0.0599, 0.0494,  ..., 0.1593, 0.1153, 0.0782],
         [0.0709, 0.0599, 0.0494,  ..., 0.5403, 0.1153, 0.7655],
         [0.0709, 0.0599, 0.0494,  ..., 0.1502, 0.1153, 0.0782]],
        [[0.1326, 0.1805, 0.2460,  ..., 0.1335, 0.0975, 0.1684],
         [0.1326, 0.1568, 0.1647,  ..., 0.1335, 0.0975, 0.1651],
         [0.1326, 0.1553, 0.1647,  ..., 0.5996, 0.7075, 0.1651],
         [0.6023, 0.5074, 0.4247,  ..., 0.1335, 0.0975, 0.5014]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.1131, 0.0900,  ..., 0.1160, 0.8583, 0.1090],
         [0.2500, 0.1131, 0.0900,  ..., 0.1160, 0.0472, 0.1090],
         [0.2500, 0.1131, 0.0900,  ..., 0.1160, 0.0472, 0.1090],
         [0.2500, 0.6608, 0.7299,  ..., 0.6521, 0.0472, 0.6730]],
        [[0.1214, 0.6215, 0.6300,  ..., 0.1357, 0.0543, 0.0368],
         [0.1214, 0.1262, 0.1233,  ..., 0.1355, 0.0543, 0.0368],
         [0.6357, 0.1262, 0.1233,  ..., 0.5932, 0.8372, 0.8895],
         [0.1214, 0.1262, 0.1233,  ..., 0.1355, 0.0543, 0.0368]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-18 15:02:30,332 [Process: 0] Synchronize training processes
2024-08-18 15:02:30,332 [Process: 0] Evaluating...
2024-08-18 15:02:30,334 [Process: 0] EPOCH 17:
2024-08-18 15:02:30,336 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:31,419 [Process: 0] Synchronize training processes
2024-08-18 15:02:31,420 [Process: 0] Evaluating...
2024-08-18 15:02:31,422 [Process: 0] EPOCH 18:
2024-08-18 15:02:31,423 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4476, 0.8240, 0.9242,  ..., 0.1222, 0.5860, 0.1483],
         [0.1669, 0.0587, 0.0253,  ..., 0.1222, 0.1380, 0.1283],
         [0.1669, 0.0587, 0.0253,  ..., 0.6334, 0.1380, 0.5951],
         [0.2187, 0.0587, 0.0253,  ..., 0.1222, 0.1380, 0.1283]],
        [[0.0705, 0.1216, 0.1238,  ..., 0.1474, 0.0918, 0.1121],
         [0.0705, 0.1216, 0.1238,  ..., 0.1474, 0.0918, 0.1156],
         [0.0705, 0.1216, 0.1238,  ..., 0.5516, 0.7247, 0.1121],
         [0.7884, 0.6351, 0.6287,  ..., 0.1536, 0.0918, 0.6601]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9838e-01, 1.0063e-01, 1.3295e-01,  ..., 8.6736e-02,
          7.3745e-01, 1.1219e-01],
         [5.4139e-04, 1.0063e-01, 1.3295e-01,  ..., 8.6736e-02,
          8.7518e-02, 1.1219e-01],
         [5.4139e-04, 1.0063e-01, 1.3295e-01,  ..., 8.6736e-02,
          8.7518e-02, 1.1219e-01],
         [5.4139e-04, 6.9812e-01, 6.0116e-01,  ..., 7.3979e-01,
          8.7518e-02, 6.6342e-01]],
        [[7.1873e-01, 7.9664e-01, 7.1632e-01,  ..., 1.3318e-01,
          6.7632e-02, 8.6339e-02],
         [9.3758e-02, 6.7787e-02, 9.4559e-02,  ..., 1.3318e-01,
          6.7632e-02, 8.6339e-02],
         [9.3758e-02, 6.7787e-02, 9.4559e-02,  ..., 6.0047e-01,
          7.9710e-01, 7.4098e-01],
         [9.3758e-02, 6.7787e-02, 9.4559e-02,  ..., 1.3318e-01,
          6.7632e-02, 8.6339e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6373, 0.7071, 0.9466,  ..., 0.1132, 0.3221, 0.1158],
         [0.1209, 0.0976, 0.0178,  ..., 0.1132, 0.2035, 0.1158],
         [0.1209, 0.0976, 0.0178,  ..., 0.6603, 0.2101, 0.6527],
         [0.1209, 0.0976, 0.0178,  ..., 0.1132, 0.2642, 0.1158]],
        [[0.0990, 0.0843, 0.1173,  ..., 0.1570, 0.1122, 0.0835],
         [0.0990, 0.0843, 0.1173,  ..., 0.1570, 0.1122, 0.0927],
         [0.0990, 0.0843, 0.1173,  ..., 0.1756, 0.6633, 0.0835],
         [0.7031, 0.7470, 0.6481,  ..., 0.5104, 0.1122, 0.7402]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8824, 0.0761, 0.1072,  ..., 0.0832, 0.4104, 0.1465],
         [0.0392, 0.0761, 0.1072,  ..., 0.0832, 0.1554, 0.1465],
         [0.0392, 0.0761, 0.1072,  ..., 0.0832, 0.1554, 0.1465],
         [0.0392, 0.7717, 0.6784,  ..., 0.7503, 0.2787, 0.5606]],
        [[0.8168, 0.6329, 0.6107,  ..., 0.1880, 0.1007, 0.0947],
         [0.0611, 0.1224, 0.1407,  ..., 0.1496, 0.1007, 0.0947],
         [0.0611, 0.1224, 0.1243,  ..., 0.5127, 0.6980, 0.7158],
         [0.0611, 0.1224, 0.1243,  ..., 0.1496, 0.1007, 0.0947]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:02:32,499 [Process: 0] Synchronize training processes
2024-08-18 15:02:32,499 [Process: 0] Evaluating...
2024-08-18 15:02:32,502 [Process: 0] EPOCH 19:
2024-08-18 15:02:32,506 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:33,584 [Process: 0] Synchronize training processes
2024-08-18 15:02:33,584 [Process: 0] Evaluating...
2024-08-18 15:02:33,586 [Process: 0] EPOCH 20:
2024-08-18 15:02:33,588 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8113, 0.6814, 0.9204,  ..., 0.1355, 0.8462, 0.1138],
         [0.0629, 0.1062, 0.0265,  ..., 0.1355, 0.0513, 0.1138],
         [0.0629, 0.1062, 0.0265,  ..., 0.5936, 0.0513, 0.6586],
         [0.0629, 0.1062, 0.0265,  ..., 0.1355, 0.0513, 0.1138]],
        [[0.1615, 0.1013, 0.0506,  ..., 0.0994, 0.1055, 0.1908],
         [0.1615, 0.1053, 0.0506,  ..., 0.0994, 0.1055, 0.1056],
         [0.1657, 0.0984, 0.0506,  ..., 0.7018, 0.6834, 0.1056],
         [0.5114, 0.6949, 0.8481,  ..., 0.0994, 0.1055, 0.5980]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2279, 0.1164, 0.0778,  ..., 0.0673, 0.6774, 0.1311],
         [0.1504, 0.1107, 0.0778,  ..., 0.0673, 0.0902, 0.1124],
         [0.4418, 0.1107, 0.0778,  ..., 0.0673, 0.0817, 0.1124],
         [0.1799, 0.6622, 0.7666,  ..., 0.7980, 0.1506, 0.6442]],
        [[0.7847, 0.8805, 0.7429,  ..., 0.1554, 0.1023, 0.1010],
         [0.0771, 0.0398, 0.0857,  ..., 0.1534, 0.1023, 0.1010],
         [0.0691, 0.0398, 0.0857,  ..., 0.5392, 0.6932, 0.6971],
         [0.0691, 0.0398, 0.0857,  ..., 0.1520, 0.1023, 0.1010]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7619, 0.8846, 0.8584,  ..., 0.1268, 0.3331, 0.1222],
         [0.0794, 0.0385, 0.0472,  ..., 0.1268, 0.1590, 0.1222],
         [0.0794, 0.0385, 0.0472,  ..., 0.6197, 0.1590, 0.6333],
         [0.0794, 0.0385, 0.0472,  ..., 0.1268, 0.3489, 0.1222]],
        [[0.1789, 0.0875, 0.1290,  ..., 0.1259, 0.0963, 0.0455],
         [0.1789, 0.0875, 0.0819,  ..., 0.1259, 0.0963, 0.0455],
         [0.2897, 0.0875, 0.0819,  ..., 0.6224, 0.7111, 0.0455],
         [0.3525, 0.7374, 0.7071,  ..., 0.1259, 0.0963, 0.8634]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9583, 0.0813, 0.1667,  ..., 0.1575, 0.8267, 0.1120],
         [0.0139, 0.0813, 0.1175,  ..., 0.1195, 0.0578, 0.1120],
         [0.0139, 0.0813, 0.1175,  ..., 0.0956, 0.0578, 0.1120],
         [0.0139, 0.7560, 0.5982,  ..., 0.6273, 0.0578, 0.6639]],
        [[0.7999, 0.8908, 0.7529,  ..., 0.1305, 0.0914, 0.1138],
         [0.0667, 0.0364, 0.0852,  ..., 0.1305, 0.0914, 0.1138],
         [0.0667, 0.0364, 0.0810,  ..., 0.6085, 0.7258, 0.6586],
         [0.0667, 0.0364, 0.0810,  ..., 0.1305, 0.0914, 0.1138]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:02:34,665 [Process: 0] Synchronize training processes
2024-08-18 15:02:34,665 [Process: 0] Evaluating...
2024-08-18 15:02:34,667 [Process: 0] EPOCH 21:
2024-08-18 15:02:34,669 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:35,743 [Process: 0] Synchronize training processes
2024-08-18 15:02:35,743 [Process: 0] Evaluating...
2024-08-18 15:02:35,749 [Process: 0] EPOCH 22:
2024-08-18 15:02:35,750 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7588, 0.8107, 0.9345,  ..., 0.1069, 0.1799, 0.1282],
         [0.0688, 0.0631, 0.0218,  ..., 0.1069, 0.1799, 0.1282],
         [0.0688, 0.0631, 0.0218,  ..., 0.6794, 0.2641, 0.6153],
         [0.1037, 0.0631, 0.0218,  ..., 0.1069, 0.3761, 0.1282]],
        [[0.1595, 0.0656, 0.0668,  ..., 0.1393, 0.0930, 0.1079],
         [0.1595, 0.0656, 0.0668,  ..., 0.1393, 0.0930, 0.0750],
         [0.4762, 0.0656, 0.0668,  ..., 0.5821, 0.7210, 0.0750],
         [0.2047, 0.8033, 0.7995,  ..., 0.1393, 0.0930, 0.7421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6973, 0.0824, 0.1369,  ..., 0.0610, 0.7532, 0.1628],
         [0.1009, 0.0824, 0.1250,  ..., 0.0556, 0.0773, 0.1315],
         [0.1009, 0.0824, 0.1250,  ..., 0.0556, 0.0773, 0.1273],
         [0.1009, 0.7528, 0.6131,  ..., 0.8278, 0.0921, 0.5784]],
        [[0.6586, 0.7973, 0.8514,  ..., 0.1117, 0.0504, 0.1048],
         [0.1138, 0.0703, 0.0495,  ..., 0.1117, 0.0504, 0.1048],
         [0.1138, 0.0662, 0.0495,  ..., 0.6650, 0.8488, 0.6855],
         [0.1138, 0.0662, 0.0495,  ..., 0.1117, 0.0504, 0.1048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6179, 0.7693, 0.8040,  ..., 0.1393, 0.2365, 0.0850],
         [0.1032, 0.0756, 0.0653,  ..., 0.1393, 0.1259, 0.0850],
         [0.1032, 0.0756, 0.0653,  ..., 0.5822, 0.1259, 0.7450],
         [0.1756, 0.0795, 0.0653,  ..., 0.1393, 0.5116, 0.0850]],
        [[0.1240, 0.1291, 0.0419,  ..., 0.1755, 0.1097, 0.0973],
         [0.1240, 0.0859, 0.0419,  ..., 0.1755, 0.1097, 0.0973],
         [0.6281, 0.0859, 0.0419,  ..., 0.3777, 0.6708, 0.0973],
         [0.1240, 0.6992, 0.8744,  ..., 0.2713, 0.1097, 0.7081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:02:36,861 [Process: 0] Synchronize training processes
2024-08-18 15:02:36,861 [Process: 0] Evaluating...
2024-08-18 15:02:36,863 [Process: 0] EPOCH 23:
2024-08-18 15:02:36,865 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:37,934 [Process: 0] Synchronize training processes
2024-08-18 15:02:37,934 [Process: 0] Evaluating...
2024-08-18 15:02:37,936 [Process: 0] EPOCH 24:
2024-08-18 15:02:37,938 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6721, 0.1108, 0.0929,  ..., 0.0762, 0.6812, 0.0648],
         [0.0925, 0.1030, 0.0929,  ..., 0.0762, 0.1063, 0.0648],
         [0.0925, 0.1030, 0.0929,  ..., 0.0762, 0.1063, 0.0648],
         [0.1429, 0.6831, 0.7212,  ..., 0.7715, 0.1063, 0.8056]],
        [[0.9141, 0.7404, 0.8178,  ..., 0.1001, 0.0812, 0.0665],
         [0.0286, 0.0865, 0.0607,  ..., 0.1001, 0.0812, 0.0665],
         [0.0286, 0.0865, 0.0607,  ..., 0.6996, 0.7563, 0.8006],
         [0.0286, 0.0865, 0.0607,  ..., 0.1001, 0.0812, 0.0665]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6885, 0.8595, 0.9021,  ..., 0.1083, 0.1759, 0.1303],
         [0.0942, 0.0468, 0.0326,  ..., 0.1083, 0.1739, 0.1310],
         [0.0942, 0.0468, 0.0326,  ..., 0.6751, 0.2299, 0.6083],
         [0.1232, 0.0468, 0.0326,  ..., 0.1083, 0.4203, 0.1303]],
        [[0.1074, 0.0908, 0.0465,  ..., 0.1074, 0.0849, 0.0916],
         [0.1074, 0.0714, 0.0465,  ..., 0.1074, 0.0849, 0.0598],
         [0.6778, 0.0714, 0.0465,  ..., 0.6779, 0.7453, 0.0598],
         [0.1074, 0.7663, 0.8605,  ..., 0.1074, 0.0849, 0.7887]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3926, 0.1687, 0.0689,  ..., 0.0728, 0.8758, 0.0577],
         [0.1352, 0.1436, 0.0689,  ..., 0.0728, 0.0414, 0.0577],
         [0.2105, 0.1436, 0.0689,  ..., 0.0728, 0.0414, 0.0577],
         [0.2617, 0.5442, 0.7933,  ..., 0.7817, 0.0414, 0.8269]],
        [[0.6294, 0.4663, 0.8467,  ..., 0.0905, 0.0615, 0.0747],
         [0.1403, 0.1831, 0.0511,  ..., 0.0905, 0.0615, 0.0747],
         [0.1151, 0.1605, 0.0511,  ..., 0.7286, 0.8156, 0.7758],
         [0.1151, 0.1901, 0.0511,  ..., 0.0905, 0.0615, 0.0747]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6677, 0.9603, 0.9095,  ..., 0.1052, 0.1680, 0.1166],
         [0.0917, 0.0132, 0.0302,  ..., 0.1052, 0.1081, 0.1211],
         [0.0917, 0.0132, 0.0302,  ..., 0.6843, 0.1081, 0.6457],
         [0.1488, 0.0132, 0.0302,  ..., 0.1052, 0.6159, 0.1166]],
        [[0.1025, 0.0945, 0.0717,  ..., 0.1240, 0.1127, 0.1203],
         [0.1025, 0.0945, 0.0717,  ..., 0.1240, 0.1127, 0.0929],
         [0.6924, 0.0945, 0.0717,  ..., 0.6280, 0.6619, 0.0929],
         [0.1025, 0.7164, 0.7848,  ..., 0.1240, 0.1127, 0.6938]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:39,018 [Process: 0] Synchronize training processes
2024-08-18 15:02:39,019 [Process: 0] Evaluating...
2024-08-18 15:02:39,020 [Process: 0] EPOCH 25:
2024-08-18 15:02:39,022 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8753, 0.0599, 0.0938,  ..., 0.0855, 0.8279, 0.0795],
         [0.0402, 0.0599, 0.0938,  ..., 0.0855, 0.0574, 0.0795],
         [0.0402, 0.0599, 0.0938,  ..., 0.0855, 0.0574, 0.0795],
         [0.0443, 0.8204, 0.7185,  ..., 0.7434, 0.0574, 0.7615]],
        [[0.9195, 0.1188, 0.6261,  ..., 0.2638, 0.0378, 0.0811],
         [0.0268, 0.1188, 0.1246,  ..., 0.1787, 0.0378, 0.0811],
         [0.0268, 0.6437, 0.1246,  ..., 0.3884, 0.8865, 0.7566],
         [0.0268, 0.1188, 0.1246,  ..., 0.1691, 0.0378, 0.0811]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8212, 0.9436, 0.8642,  ..., 0.0984, 0.8279, 0.0940],
         [0.0596, 0.0188, 0.0453,  ..., 0.0984, 0.0574, 0.0940],
         [0.0596, 0.0188, 0.0453,  ..., 0.7049, 0.0574, 0.7179],
         [0.0596, 0.0188, 0.0453,  ..., 0.0984, 0.0574, 0.0940]],
        [[0.0781, 0.1645, 0.0921,  ..., 0.0988, 0.0837, 0.1444],
         [0.0781, 0.0718, 0.0607,  ..., 0.0988, 0.0837, 0.0804],
         [0.7658, 0.0718, 0.0607,  ..., 0.7037, 0.7489, 0.0804],
         [0.0781, 0.6918, 0.7866,  ..., 0.0988, 0.0837, 0.6948]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4126, 0.0427, 0.0612,  ..., 0.0654, 0.8647, 0.0772],
         [0.0843, 0.0427, 0.0612,  ..., 0.0654, 0.0451, 0.0772],
         [0.4188, 0.0427, 0.0612,  ..., 0.0654, 0.0451, 0.0772],
         [0.0843, 0.8719, 0.8165,  ..., 0.8038, 0.0451, 0.7685]],
        [[0.9525, 0.1990, 0.8336,  ..., 0.3450, 0.0424, 0.0689],
         [0.0158, 0.1791, 0.0555,  ..., 0.1843, 0.0424, 0.0689],
         [0.0158, 0.3029, 0.0555,  ..., 0.2675, 0.8729, 0.7932],
         [0.0158, 0.3190, 0.0555,  ..., 0.2033, 0.0424, 0.0689]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8811, 0.9262, 0.7405,  ..., 0.0886, 0.1038, 0.0863],
         [0.0396, 0.0246, 0.0865,  ..., 0.0886, 0.1038, 0.0863],
         [0.0396, 0.0246, 0.0865,  ..., 0.7342, 0.1053, 0.7412],
         [0.0396, 0.0246, 0.0865,  ..., 0.0886, 0.6871, 0.0863]],
        [[0.1152, 0.5203, 0.0071,  ..., 0.1420, 0.0796, 0.7084],
         [0.1152, 0.0860, 0.0071,  ..., 0.1420, 0.0796, 0.0790],
         [0.6545, 0.0860, 0.0071,  ..., 0.3271, 0.7612, 0.0790],
         [0.1152, 0.3077, 0.9788,  ..., 0.3889, 0.0796, 0.1336]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:40,101 [Process: 0] Synchronize training processes
2024-08-18 15:02:40,101 [Process: 0] Evaluating...
2024-08-18 15:02:40,103 [Process: 0] EPOCH 26:
2024-08-18 15:02:40,105 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:41,185 [Process: 0] Synchronize training processes
2024-08-18 15:02:41,185 [Process: 0] Evaluating...
2024-08-18 15:02:41,187 [Process: 0] EPOCH 27:
2024-08-18 15:02:41,189 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6013, 0.0304, 0.0814,  ..., 0.0694, 0.8742, 0.0350],
         [0.1271, 0.0304, 0.0814,  ..., 0.0694, 0.0419, 0.0350],
         [0.1271, 0.0304, 0.0814,  ..., 0.0694, 0.0419, 0.0350],
         [0.1445, 0.9087, 0.7557,  ..., 0.7918, 0.0419, 0.8951]],
        [[0.9415, 0.1719, 0.8361,  ..., 0.2510, 0.0706, 0.0659],
         [0.0195, 0.1727, 0.0546,  ..., 0.2058, 0.0706, 0.0659],
         [0.0195, 0.4298, 0.0546,  ..., 0.3145, 0.7882, 0.8024],
         [0.0195, 0.2256, 0.0546,  ..., 0.2287, 0.0706, 0.0659]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8764, 0.7680, 0.9327,  ..., 0.0888, 0.0457, 0.0999],
         [0.0412, 0.0757, 0.0224,  ..., 0.0888, 0.0433, 0.0999],
         [0.0412, 0.0757, 0.0224,  ..., 0.7335, 0.0433, 0.7003],
         [0.0412, 0.0805, 0.0224,  ..., 0.0888, 0.8677, 0.0999]],
        [[0.1050, 0.0653, 0.0341,  ..., 0.0620, 0.1122, 0.0677],
         [0.1050, 0.0653, 0.0341,  ..., 0.0620, 0.1122, 0.0614],
         [0.6850, 0.0653, 0.0341,  ..., 0.8140, 0.6634, 0.0614],
         [0.1050, 0.8040, 0.8977,  ..., 0.0620, 0.1122, 0.8095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9353, 0.0448, 0.0728,  ..., 0.0795, 0.8895, 0.1321],
         [0.0216, 0.0448, 0.0728,  ..., 0.0795, 0.0368, 0.1035],
         [0.0216, 0.0448, 0.0728,  ..., 0.0795, 0.0368, 0.1035],
         [0.0216, 0.8655, 0.7815,  ..., 0.7614, 0.0368, 0.6608]],
        [[0.9367, 0.1450, 0.7987,  ..., 0.1635, 0.0447, 0.0434],
         [0.0211, 0.1450, 0.0671,  ..., 0.1616, 0.0447, 0.0434],
         [0.0211, 0.3858, 0.0671,  ..., 0.1635, 0.8659, 0.8697],
         [0.0211, 0.3242, 0.0671,  ..., 0.5114, 0.0447, 0.0434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1533, 0.7684, 0.8227,  ..., 0.0818, 0.1353, 0.0861],
         [0.0667, 0.0753, 0.0591,  ..., 0.0818, 0.1353, 0.0861],
         [0.0667, 0.0753, 0.0591,  ..., 0.7545, 0.4961, 0.7417],
         [0.7133, 0.0811, 0.0591,  ..., 0.0818, 0.2334, 0.0861]],
        [[0.1052, 0.0221, 0.7265,  ..., 0.1145, 0.0791, 0.6678],
         [0.1052, 0.0221, 0.0808,  ..., 0.1145, 0.0791, 0.0804],
         [0.6637, 0.0221, 0.0808,  ..., 0.6564, 0.7627, 0.0804],
         [0.1259, 0.9337, 0.1120,  ..., 0.1145, 0.0791, 0.1713]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:02:42,268 [Process: 0] Synchronize training processes
2024-08-18 15:02:42,269 [Process: 0] Evaluating...
2024-08-18 15:02:42,270 [Process: 0] EPOCH 28:
2024-08-18 15:02:42,272 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:43,349 [Process: 0] Synchronize training processes
2024-08-18 15:02:43,350 [Process: 0] Evaluating...
2024-08-18 15:02:43,351 [Process: 0] EPOCH 29:
2024-08-18 15:02:43,353 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9822, 0.0828, 0.3204,  ..., 0.2333, 0.5997, 0.1606],
         [0.0059, 0.0784, 0.1209,  ..., 0.1045, 0.1137, 0.0997],
         [0.0059, 0.0784, 0.1209,  ..., 0.1045, 0.1137, 0.0997],
         [0.0059, 0.7605, 0.4378,  ..., 0.5577, 0.1728, 0.6399]],
        [[0.8739, 0.0151, 0.9337,  ..., 0.0580, 0.0528, 0.0503],
         [0.0420, 0.0151, 0.0221,  ..., 0.0580, 0.0528, 0.0513],
         [0.0420, 0.0151, 0.0221,  ..., 0.0580, 0.8416, 0.8480],
         [0.0420, 0.9548, 0.0221,  ..., 0.8261, 0.0528, 0.0503]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0824, 0.7590, 0.9072,  ..., 0.0641, 0.0509, 0.0711],
         [0.0824, 0.0798, 0.0309,  ..., 0.0641, 0.0509, 0.0711],
         [0.1526, 0.0798, 0.0309,  ..., 0.8078, 0.0509, 0.7866],
         [0.6826, 0.0814, 0.0309,  ..., 0.0641, 0.8472, 0.0711]],
        [[0.1147, 0.0678, 0.6307,  ..., 0.0821, 0.0971, 0.8590],
         [0.1147, 0.0351, 0.0814,  ..., 0.0821, 0.0971, 0.0470],
         [0.5735, 0.0351, 0.0814,  ..., 0.1357, 0.7087, 0.0470],
         [0.1971, 0.8621, 0.2065,  ..., 0.7001, 0.0971, 0.0470]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9885, 0.0987, 0.0684,  ..., 0.0718, 0.8476, 0.0561],
         [0.0038, 0.0987, 0.0684,  ..., 0.0718, 0.0508, 0.0561],
         [0.0038, 0.0987, 0.0684,  ..., 0.0718, 0.0508, 0.0561],
         [0.0038, 0.7040, 0.7947,  ..., 0.7846, 0.0508, 0.8316]],
        [[0.9526, 0.1029, 0.8456,  ..., 0.0836, 0.0377, 0.0769],
         [0.0158, 0.0959, 0.0515,  ..., 0.0836, 0.0377, 0.0769],
         [0.0158, 0.0947, 0.0515,  ..., 0.0836, 0.8869, 0.7692],
         [0.0158, 0.7066, 0.0515,  ..., 0.7491, 0.0377, 0.0769]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:02:44,430 [Process: 0] Synchronize training processes
2024-08-18 15:02:44,430 [Process: 0] Evaluating...
2024-08-18 15:02:44,432 [Process: 0] EPOCH 30:
2024-08-18 15:02:44,434 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8876, 0.9811, 0.1903,  ..., 0.1124, 0.9026, 0.0825],
         [0.0375, 0.0063, 0.0644,  ..., 0.1124, 0.0325, 0.0825],
         [0.0375, 0.0063, 0.0644,  ..., 0.6627, 0.0325, 0.7526],
         [0.0375, 0.0063, 0.6809,  ..., 0.1124, 0.0325, 0.0825]],
        [[0.1484, 0.1355, 0.0368,  ..., 0.0783, 0.0712, 0.7443],
         [0.1484, 0.1355, 0.0368,  ..., 0.0783, 0.0712, 0.0533],
         [0.5022, 0.5663, 0.0368,  ..., 0.7651, 0.7864, 0.0533],
         [0.2011, 0.1627, 0.8896,  ..., 0.0783, 0.0712, 0.1491]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9445, 0.0477, 0.0512,  ..., 0.0559, 0.4856, 0.0910],
         [0.0184, 0.0477, 0.0512,  ..., 0.0559, 0.1268, 0.0910],
         [0.0187, 0.0477, 0.0512,  ..., 0.0559, 0.1268, 0.0910],
         [0.0184, 0.8568, 0.8463,  ..., 0.8322, 0.2607, 0.7269]],
        [[0.8718, 0.0861, 0.8850,  ..., 0.1195, 0.0262, 0.0455],
         [0.0427, 0.0861, 0.0383,  ..., 0.0832, 0.0262, 0.0455],
         [0.0427, 0.0861, 0.0383,  ..., 0.0832, 0.9213, 0.8634],
         [0.0427, 0.7418, 0.0383,  ..., 0.7142, 0.0262, 0.0455]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3745, 0.8364, 0.1696,  ..., 0.0444, 0.0876, 0.0484],
         [0.1118, 0.0545, 0.0994,  ..., 0.0444, 0.0575, 0.0484],
         [0.1118, 0.0545, 0.0994,  ..., 0.8667, 0.0575, 0.8548],
         [0.4018, 0.0545, 0.6315,  ..., 0.0444, 0.7975, 0.0484]],
        [[0.9595, 0.0233, 0.9262,  ..., 0.0659, 0.0718, 0.8466],
         [0.0135, 0.0233, 0.0246,  ..., 0.0659, 0.0718, 0.0511],
         [0.0135, 0.0233, 0.0246,  ..., 0.8024, 0.7847, 0.0511],
         [0.0135, 0.9302, 0.0246,  ..., 0.0659, 0.0718, 0.0511]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
2024-08-18 15:02:45,587 [Process: 0] Synchronize training processes
2024-08-18 15:02:45,588 [Process: 0] Evaluating...
2024-08-18 15:02:45,589 [Process: 0] EPOCH 31:
2024-08-18 15:02:45,591 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:47,594 [Process: 0] Synchronize training processes
2024-08-18 15:02:47,594 [Process: 0] Evaluating...
2024-08-18 15:02:47,603 [Process: 0] EPOCH 32:
2024-08-18 15:02:47,604 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4439, 0.0456, 0.0864,  ..., 0.0727, 0.7153, 0.1006],
         [0.1854, 0.0456, 0.0864,  ..., 0.0727, 0.0853, 0.0934],
         [0.1854, 0.0456, 0.0864,  ..., 0.0727, 0.0853, 0.0934],
         [0.1854, 0.8632, 0.7409,  ..., 0.7818, 0.1141, 0.7127]],
        [[0.7506, 0.0137, 0.9745,  ..., 0.0602, 0.0467, 0.0175],
         [0.0831, 0.0137, 0.0085,  ..., 0.0602, 0.0467, 0.0175],
         [0.0831, 0.0137, 0.0085,  ..., 0.0602, 0.8598, 0.9475],
         [0.0831, 0.9589, 0.0085,  ..., 0.8195, 0.0467, 0.0175]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0600, 0.4165, 0.8745,  ..., 0.0492, 0.1260, 0.0717],
         [0.0600, 0.1091, 0.0418,  ..., 0.0492, 0.1260, 0.0717],
         [0.8200, 0.1091, 0.0418,  ..., 0.8525, 0.5299, 0.7849],
         [0.0600, 0.3652, 0.0418,  ..., 0.0492, 0.2181, 0.0717]],
        [[0.7367, 0.0206, 0.8594,  ..., 0.0534, 0.0590, 0.8093],
         [0.0818, 0.0170, 0.0457,  ..., 0.0534, 0.0590, 0.0636],
         [0.0818, 0.0170, 0.0457,  ..., 0.8397, 0.8231, 0.0636],
         [0.0997, 0.9454, 0.0493,  ..., 0.0534, 0.0590, 0.0636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8993, 0.0631, 0.0692,  ..., 0.0599, 0.4154, 0.0918],
         [0.0336, 0.0631, 0.0606,  ..., 0.0542, 0.1364, 0.0734],
         [0.0336, 0.0631, 0.0606,  ..., 0.0542, 0.1364, 0.0734],
         [0.0336, 0.8106, 0.8095,  ..., 0.8318, 0.3118, 0.7614]],
        [[0.8346, 0.0592, 0.9734,  ..., 0.0430, 0.0596, 0.0849],
         [0.0528, 0.0592, 0.0089,  ..., 0.0430, 0.0596, 0.0849],
         [0.0528, 0.0592, 0.0089,  ..., 0.0430, 0.8213, 0.7453],
         [0.0598, 0.8225, 0.0089,  ..., 0.8711, 0.0596, 0.0849]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:02:48,688 [Process: 0] Synchronize training processes
2024-08-18 15:02:48,689 [Process: 0] Evaluating...
2024-08-18 15:02:48,690 [Process: 0] EPOCH 33:
2024-08-18 15:02:48,692 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:49,770 [Process: 0] Synchronize training processes
2024-08-18 15:02:49,770 [Process: 0] Evaluating...
2024-08-18 15:02:49,772 [Process: 0] EPOCH 34:
2024-08-18 15:02:49,774 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4638, 0.4060, 0.9436,  ..., 0.7867, 0.8042, 0.0944],
         [0.1787, 0.0970, 0.0188,  ..., 0.0701, 0.0644, 0.0944],
         [0.1787, 0.0970, 0.0188,  ..., 0.0701, 0.0644, 0.7168],
         [0.1787, 0.4001, 0.0188,  ..., 0.0730, 0.0669, 0.0944]],
        [[0.1101, 0.0981, 0.0446,  ..., 0.0269, 0.0827, 0.1727],
         [0.0827, 0.0981, 0.0446,  ..., 0.0269, 0.0827, 0.0785],
         [0.0807, 0.6862, 0.0446,  ..., 0.9194, 0.7518, 0.0785],
         [0.7264, 0.1176, 0.8662,  ..., 0.0269, 0.0827, 0.6702]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9571, 0.0693, 0.1737,  ..., 0.1385, 0.6155, 0.0437],
         [0.0143, 0.0640, 0.0938,  ..., 0.0729, 0.1254, 0.0437],
         [0.0143, 0.0640, 0.0903,  ..., 0.0710, 0.1451, 0.0437],
         [0.0143, 0.8026, 0.6422,  ..., 0.7176, 0.1141, 0.8690]],
        [[0.6601, 0.0658, 0.9307,  ..., 0.1016, 0.0417, 0.7165],
         [0.1147, 0.0654, 0.0231,  ..., 0.1016, 0.0417, 0.0930],
         [0.1046, 0.0654, 0.0231,  ..., 0.6953, 0.8748, 0.0879],
         [0.1206, 0.8034, 0.0231,  ..., 0.1016, 0.0417, 0.1026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8887, 0.6109, 0.8845,  ..., 0.8599, 0.0685, 0.0270],
         [0.0371, 0.0946, 0.0385,  ..., 0.0444, 0.0685, 0.0270],
         [0.0371, 0.0946, 0.0385,  ..., 0.0444, 0.7944, 0.9191],
         [0.0371, 0.2000, 0.0385,  ..., 0.0513, 0.0685, 0.0270]],
        [[0.0410, 0.0545, 0.4240,  ..., 0.0179, 0.0468, 0.9428],
         [0.0410, 0.0545, 0.0860,  ..., 0.0179, 0.0468, 0.0191],
         [0.0410, 0.0545, 0.0830,  ..., 0.0179, 0.8595, 0.0191],
         [0.8769, 0.8365, 0.4071,  ..., 0.9464, 0.0468, 0.0191]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8120, 0.0623, 0.0486,  ..., 0.3306, 0.4707, 0.0253],
         [0.0627, 0.0623, 0.0400,  ..., 0.1189, 0.1365, 0.0264],
         [0.0627, 0.0623, 0.0400,  ..., 0.1050, 0.2213, 0.0253],
         [0.0627, 0.8132, 0.8714,  ..., 0.4455, 0.1714, 0.9230]],
        [[0.0808, 0.0357, 0.9601,  ..., 0.1256, 0.0312, 0.0831],
         [0.0808, 0.0379, 0.0133,  ..., 0.1256, 0.0312, 0.0831],
         [0.7575, 0.0357, 0.0133,  ..., 0.4078, 0.9063, 0.7506],
         [0.0808, 0.8908, 0.0133,  ..., 0.3409, 0.0312, 0.0831]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:02:50,853 [Process: 0] Synchronize training processes
2024-08-18 15:02:50,853 [Process: 0] Evaluating...
2024-08-18 15:02:50,855 [Process: 0] EPOCH 35:
2024-08-18 15:02:50,857 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:51,935 [Process: 0] Synchronize training processes
2024-08-18 15:02:51,936 [Process: 0] Evaluating...
2024-08-18 15:02:51,938 [Process: 0] EPOCH 36:
2024-08-18 15:02:51,940 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0526, 0.8562, 0.9517,  ..., 0.0776, 0.0572, 0.0973],
         [0.0526, 0.0391, 0.0161,  ..., 0.0776, 0.0572, 0.0973],
         [0.8422, 0.0391, 0.0161,  ..., 0.7671, 0.8284, 0.6848],
         [0.0526, 0.0656, 0.0161,  ..., 0.0776, 0.0572, 0.1206]],
        [[0.0020, 0.0157, 0.0783,  ..., 0.0926, 0.1088, 0.9592],
         [0.0020, 0.0157, 0.0374,  ..., 0.0926, 0.1088, 0.0136],
         [0.0020, 0.0157, 0.0374,  ..., 0.6958, 0.6658, 0.0136],
         [0.9941, 0.9529, 0.8470,  ..., 0.1189, 0.1166, 0.0136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5482, 0.0467, 0.0425,  ..., 0.5596, 0.1734, 0.1068],
         [0.1506, 0.0467, 0.0425,  ..., 0.0874, 0.1227, 0.0696],
         [0.1506, 0.0467, 0.0425,  ..., 0.0870, 0.1351, 0.0688],
         [0.1506, 0.8600, 0.8726,  ..., 0.2660, 0.5688, 0.7548]],
        [[0.0403, 0.8741, 0.9276,  ..., 0.0108, 0.0332, 0.0402],
         [0.0403, 0.0420, 0.0241,  ..., 0.0108, 0.0332, 0.0402],
         [0.8791, 0.0420, 0.0241,  ..., 0.0108, 0.9005, 0.8793],
         [0.0403, 0.0420, 0.0241,  ..., 0.9675, 0.0332, 0.0402]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0772, 0.7936, 0.9373,  ..., 0.0783, 0.0723, 0.0731],
         [0.0772, 0.0602, 0.0209,  ..., 0.0783, 0.0723, 0.0731],
         [0.7685, 0.0602, 0.0209,  ..., 0.7650, 0.7832, 0.7806],
         [0.0772, 0.0860, 0.0209,  ..., 0.0783, 0.0723, 0.0731]],
        [[0.8742, 0.0045, 0.0261,  ..., 0.0972, 0.0859, 0.9516],
         [0.0419, 0.0045, 0.0261,  ..., 0.0972, 0.0859, 0.0161],
         [0.0419, 0.0045, 0.0261,  ..., 0.7084, 0.7358, 0.0161],
         [0.0419, 0.9865, 0.9216,  ..., 0.0972, 0.0924, 0.0161]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:53,017 [Process: 0] Synchronize training processes
2024-08-18 15:02:53,018 [Process: 0] Evaluating...
2024-08-18 15:02:53,019 [Process: 0] EPOCH 37:
2024-08-18 15:02:53,021 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0898, 0.0036, 0.0153,  ..., 0.8014, 0.0869, 0.0467],
         [0.0871, 0.0036, 0.0153,  ..., 0.0593, 0.0869, 0.0330],
         [0.7360, 0.0036, 0.0153,  ..., 0.0593, 0.7393, 0.0330],
         [0.0871, 0.9892, 0.9540,  ..., 0.0799, 0.0869, 0.8873]],
        [[0.0654, 0.1005, 0.9304,  ..., 0.0956, 0.0649, 0.0544],
         [0.0654, 0.1005, 0.0232,  ..., 0.0956, 0.0649, 0.0544],
         [0.8039, 0.5475, 0.0232,  ..., 0.5176, 0.8054, 0.8368],
         [0.0654, 0.2514, 0.0232,  ..., 0.2912, 0.0649, 0.0544]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0992, 0.8742, 0.9445,  ..., 0.0640, 0.0527, 0.0702],
         [0.0992, 0.0419, 0.0185,  ..., 0.0640, 0.0527, 0.0702],
         [0.6759, 0.0419, 0.0185,  ..., 0.8081, 0.8420, 0.7893],
         [0.1258, 0.0419, 0.0185,  ..., 0.0640, 0.0527, 0.0702]],
        [[0.9467, 0.0235, 0.0248,  ..., 0.0930, 0.0716, 0.8956],
         [0.0178, 0.0235, 0.0180,  ..., 0.0930, 0.0716, 0.0341],
         [0.0178, 0.0235, 0.0180,  ..., 0.7209, 0.7851, 0.0341],
         [0.0178, 0.9295, 0.9391,  ..., 0.0930, 0.0716, 0.0362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2812, 0.0115, 0.1119,  ..., 0.1502, 0.0618, 0.0844],
         [0.0915, 0.0115, 0.0574,  ..., 0.0798, 0.0618, 0.0787],
         [0.5358, 0.0115, 0.0574,  ..., 0.0798, 0.8145, 0.0787],
         [0.0915, 0.9654, 0.7734,  ..., 0.6902, 0.0618, 0.7581]],
        [[0.5057, 0.0027, 0.9176,  ..., 0.8277, 0.1172, 0.0725],
         [0.1351, 0.0027, 0.0275,  ..., 0.0448, 0.1172, 0.0725],
         [0.1756, 0.9918, 0.0275,  ..., 0.0448, 0.6369, 0.7825],
         [0.1837, 0.0027, 0.0275,  ..., 0.0826, 0.1286, 0.0725]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0646, 0.5200, 0.7737,  ..., 0.0709, 0.0666, 0.0616],
         [0.0646, 0.0944, 0.0701,  ..., 0.0709, 0.0666, 0.0616],
         [0.8063, 0.0944, 0.0701,  ..., 0.7872, 0.8001, 0.8151],
         [0.0646, 0.2913, 0.0862,  ..., 0.0709, 0.0666, 0.0616]],
        [[0.9362, 0.0333, 0.0142,  ..., 0.0871, 0.0691, 0.9059],
         [0.0213, 0.0285, 0.0142,  ..., 0.0871, 0.0691, 0.0314],
         [0.0213, 0.0285, 0.0142,  ..., 0.7388, 0.7928, 0.0314],
         [0.0213, 0.9096, 0.9574,  ..., 0.0871, 0.0691, 0.0314]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:54,098 [Process: 0] Synchronize training processes
2024-08-18 15:02:54,098 [Process: 0] Evaluating...
2024-08-18 15:02:54,100 [Process: 0] EPOCH 38:
2024-08-18 15:02:54,102 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:55,178 [Process: 0] Synchronize training processes
2024-08-18 15:02:55,179 [Process: 0] Evaluating...
2024-08-18 15:02:55,180 [Process: 0] EPOCH 39:
2024-08-18 15:02:55,182 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9145, 0.0093, 0.8696,  ..., 0.8677, 0.0425, 0.1512],
         [0.0285, 0.0093, 0.0452,  ..., 0.0441, 0.0425, 0.0613],
         [0.0285, 0.0093, 0.0426,  ..., 0.0441, 0.0425, 0.0613],
         [0.0285, 0.9720, 0.0426,  ..., 0.0441, 0.8724, 0.7262]],
        [[0.1058, 0.0176, 0.8728,  ..., 0.0986, 0.0764, 0.1130],
         [0.1058, 0.0176, 0.0424,  ..., 0.0528, 0.0764, 0.1130],
         [0.5387, 0.9472, 0.0424,  ..., 0.0528, 0.7708, 0.5494],
         [0.2498, 0.0176, 0.0424,  ..., 0.7958, 0.0764, 0.2246]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0327, 0.2814, 0.8057,  ..., 0.0674, 0.0877, 0.0701],
         [0.0327, 0.0681, 0.0582,  ..., 0.0674, 0.0877, 0.0701],
         [0.9020, 0.0681, 0.0582,  ..., 0.7978, 0.7038, 0.7897],
         [0.0327, 0.5823, 0.0779,  ..., 0.0674, 0.1207, 0.0701]],
        [[0.9532, 0.0114, 0.0052,  ..., 0.0674, 0.0828, 0.9541],
         [0.0156, 0.0114, 0.0052,  ..., 0.0674, 0.0828, 0.0153],
         [0.0156, 0.0114, 0.0052,  ..., 0.7977, 0.7517, 0.0153],
         [0.0156, 0.9657, 0.9843,  ..., 0.0674, 0.0828, 0.0153]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9815, 0.0042, 0.0118,  ..., 0.5664, 0.0359, 0.0119],
         [0.0062, 0.0042, 0.0118,  ..., 0.0812, 0.0323, 0.0119],
         [0.0062, 0.0042, 0.0118,  ..., 0.0812, 0.0323, 0.0119],
         [0.0062, 0.9875, 0.9646,  ..., 0.2713, 0.8995, 0.9643]],
        [[0.8723, 0.0556, 0.9107,  ..., 0.8689, 0.0624, 0.0816],
         [0.0423, 0.0556, 0.0298,  ..., 0.0437, 0.0624, 0.0816],
         [0.0423, 0.8332, 0.0298,  ..., 0.0437, 0.8129, 0.6905],
         [0.0430, 0.0556, 0.0298,  ..., 0.0437, 0.0624, 0.1462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0664, 0.4575, 0.8664,  ..., 0.0513, 0.8581, 0.0789],
         [0.0664, 0.1052, 0.0398,  ..., 0.0513, 0.0410, 0.0789],
         [0.8009, 0.1052, 0.0398,  ..., 0.8461, 0.0410, 0.7632],
         [0.0664, 0.3321, 0.0541,  ..., 0.0513, 0.0599, 0.0789]],
        [[0.9600, 0.0063, 0.0052,  ..., 0.0598, 0.0563, 0.9411],
         [0.0133, 0.0063, 0.0052,  ..., 0.0598, 0.0563, 0.0196],
         [0.0133, 0.0063, 0.0052,  ..., 0.8207, 0.8312, 0.0196],
         [0.0133, 0.9811, 0.9844,  ..., 0.0598, 0.0563, 0.0196]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:56,259 [Process: 0] Synchronize training processes
2024-08-18 15:02:56,259 [Process: 0] Evaluating...
2024-08-18 15:02:56,260 [Process: 0] EPOCH 40:
2024-08-18 15:02:56,262 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:57,341 [Process: 0] Synchronize training processes
2024-08-18 15:02:57,341 [Process: 0] Evaluating...
2024-08-18 15:02:57,343 [Process: 0] EPOCH 41:
2024-08-18 15:02:57,345 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9825, 0.0355, 0.0171,  ..., 0.6293, 0.5150, 0.0185],
         [0.0058, 0.0214, 0.0171,  ..., 0.0742, 0.0645, 0.0185],
         [0.0058, 0.0214, 0.0171,  ..., 0.0742, 0.0645, 0.0185],
         [0.0058, 0.9218, 0.9487,  ..., 0.2223, 0.3560, 0.9444]],
        [[0.9040, 0.0416, 0.9641,  ..., 0.8840, 0.0726, 0.0955],
         [0.0320, 0.0416, 0.0120,  ..., 0.0387, 0.0726, 0.0955],
         [0.0320, 0.8753, 0.0120,  ..., 0.0387, 0.7823, 0.7136],
         [0.0320, 0.0416, 0.0120,  ..., 0.0387, 0.0726, 0.0955]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0818, 0.7387, 0.9303,  ..., 0.0469, 0.9021, 0.0638],
         [0.0818, 0.0704, 0.0232,  ..., 0.0469, 0.0326, 0.0638],
         [0.7546, 0.0704, 0.0232,  ..., 0.8594, 0.0326, 0.7998],
         [0.0818, 0.1206, 0.0232,  ..., 0.0469, 0.0326, 0.0726]],
        [[0.3361, 0.0343, 0.0119,  ..., 0.0809, 0.0699, 0.9248],
         [0.1317, 0.0343, 0.0119,  ..., 0.0809, 0.0699, 0.0251],
         [0.3519, 0.0343, 0.0119,  ..., 0.7572, 0.7903, 0.0251],
         [0.1802, 0.8970, 0.9644,  ..., 0.0809, 0.0699, 0.0251]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0351, 0.0666, 0.0329,  ..., 0.8777, 0.9801, 0.0160],
         [0.0351, 0.0579, 0.0329,  ..., 0.0399, 0.0066, 0.0160],
         [0.8948, 0.0579, 0.0329,  ..., 0.0399, 0.0066, 0.0160],
         [0.0351, 0.8175, 0.9014,  ..., 0.0424, 0.0066, 0.9521]],
        [[0.9048, 0.0882, 0.8917,  ..., 0.8751, 0.0551, 0.0646],
         [0.0317, 0.0867, 0.0361,  ..., 0.0416, 0.0551, 0.0646],
         [0.0317, 0.7383, 0.0361,  ..., 0.0416, 0.8346, 0.8023],
         [0.0317, 0.0867, 0.0361,  ..., 0.0416, 0.0551, 0.0686]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-18 15:02:58,426 [Process: 0] Synchronize training processes
2024-08-18 15:02:58,426 [Process: 0] Evaluating...
2024-08-18 15:02:58,431 [Process: 0] EPOCH 42:
2024-08-18 15:02:58,433 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:02:59,510 [Process: 0] Synchronize training processes
2024-08-18 15:02:59,511 [Process: 0] Evaluating...
2024-08-18 15:02:59,513 [Process: 0] EPOCH 43:
2024-08-18 15:02:59,514 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.0441, 0.6554, 0.7666,  ..., 0.0498, 0.9040, 0.1252],
         [0.0441, 0.1023, 0.0588,  ..., 0.0498, 0.0307, 0.1167],
         [0.8676, 0.1351, 0.0588,  ..., 0.8506, 0.0307, 0.5610],
         [0.0441, 0.1073, 0.1158,  ..., 0.0498, 0.0345, 0.1971]],
        [[0.0828, 0.0078, 0.0079,  ..., 0.0547, 0.0443, 0.9539],
         [0.0828, 0.0078, 0.0079,  ..., 0.0547, 0.0443, 0.0154],
         [0.7516, 0.0078, 0.0079,  ..., 0.8354, 0.8671, 0.0154],
         [0.0828, 0.9766, 0.9763,  ..., 0.0551, 0.0443, 0.0154]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0548, 0.0432, 0.0960,  ..., 0.4246, 0.9809, 0.0622],
         [0.0548, 0.0402, 0.0516,  ..., 0.0761, 0.0064, 0.0439],
         [0.8355, 0.0402, 0.0516,  ..., 0.0761, 0.0064, 0.0439],
         [0.0548, 0.8763, 0.8007,  ..., 0.4232, 0.0064, 0.8499]],
        [[0.8404, 0.0341, 0.8896,  ..., 0.8341, 0.0349, 0.0705],
         [0.0455, 0.0341, 0.0368,  ..., 0.0466, 0.0349, 0.0705],
         [0.0455, 0.8976, 0.0368,  ..., 0.0466, 0.8953, 0.7884],
         [0.0685, 0.0341, 0.0368,  ..., 0.0726, 0.0349, 0.0705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0320, 0.7541, 0.8226,  ..., 0.0673, 0.1023, 0.0750],
         [0.0320, 0.0711, 0.0521,  ..., 0.0673, 0.1023, 0.0750],
         [0.9041, 0.0711, 0.0521,  ..., 0.7982, 0.6258, 0.7750],
         [0.0320, 0.1036, 0.0731,  ..., 0.0673, 0.1696, 0.0750]],
        [[0.4358, 0.0054, 0.0010,  ..., 0.0809, 0.0829, 0.9042],
         [0.0705, 0.0054, 0.0010,  ..., 0.0809, 0.0829, 0.0303],
         [0.0705, 0.0054, 0.0010,  ..., 0.7508, 0.7038, 0.0303],
         [0.4233, 0.9839, 0.9969,  ..., 0.0875, 0.1305, 0.0351]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9466, 0.0232, 0.0407,  ..., 0.9403, 0.8868, 0.0521],
         [0.0178, 0.0232, 0.0340,  ..., 0.0199, 0.0377, 0.0521],
         [0.0178, 0.0232, 0.0340,  ..., 0.0199, 0.0377, 0.0604],
         [0.0178, 0.9305, 0.8913,  ..., 0.0199, 0.0377, 0.8354]],
        [[0.8903, 0.0351, 0.4752,  ..., 0.8475, 0.0488, 0.3782],
         [0.0366, 0.0351, 0.0892,  ..., 0.0508, 0.0488, 0.1309],
         [0.0366, 0.8946, 0.0892,  ..., 0.0508, 0.8535, 0.3570],
         [0.0366, 0.0351, 0.3465,  ..., 0.0508, 0.0488, 0.1339]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:00,594 [Process: 0] Synchronize training processes
2024-08-18 15:03:00,594 [Process: 0] Evaluating...
2024-08-18 15:03:00,596 [Process: 0] EPOCH 44:
2024-08-18 15:03:00,598 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:01,674 [Process: 0] Synchronize training processes
2024-08-18 15:03:01,675 [Process: 0] Evaluating...
2024-08-18 15:03:01,677 [Process: 0] EPOCH 45:
2024-08-18 15:03:01,679 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0516, 0.8227, 0.7108,  ..., 0.0541, 0.0551, 0.0518],
         [0.0516, 0.0554, 0.0876,  ..., 0.0541, 0.0551, 0.0518],
         [0.8451, 0.0554, 0.0914,  ..., 0.8376, 0.8348, 0.8445],
         [0.0516, 0.0665, 0.1102,  ..., 0.0541, 0.0551, 0.0518]],
        [[0.1702, 0.0157, 0.0058,  ..., 0.0677, 0.0588, 0.9672],
         [0.0629, 0.0157, 0.0059,  ..., 0.0677, 0.0588, 0.0109],
         [0.0629, 0.0157, 0.0058,  ..., 0.7945, 0.8112, 0.0109],
         [0.7040, 0.9530, 0.9826,  ..., 0.0702, 0.0711, 0.0109]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9867, 0.0220, 0.0124,  ..., 0.9616, 0.9280, 0.0439],
         [0.0044, 0.0220, 0.0124,  ..., 0.0128, 0.0240, 0.0439],
         [0.0044, 0.0220, 0.0124,  ..., 0.0128, 0.0240, 0.0439],
         [0.0044, 0.9341, 0.9628,  ..., 0.0128, 0.0240, 0.8684]],
        [[0.8445, 0.0366, 0.0197,  ..., 0.4429, 0.0395, 0.0585],
         [0.0499, 0.0366, 0.0197,  ..., 0.0885, 0.0395, 0.0585],
         [0.0499, 0.8902, 0.0197,  ..., 0.0885, 0.8816, 0.8244],
         [0.0556, 0.0366, 0.9409,  ..., 0.3800, 0.0395, 0.0585]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0454, 0.8810, 0.8687,  ..., 0.0466, 0.0439, 0.0518],
         [0.0454, 0.0379, 0.0387,  ..., 0.0466, 0.0439, 0.0518],
         [0.8638, 0.0379, 0.0387,  ..., 0.8602, 0.8684, 0.8446],
         [0.0454, 0.0433, 0.0539,  ..., 0.0466, 0.0439, 0.0518]],
        [[0.0814, 0.0028, 0.0053,  ..., 0.1149, 0.0535, 0.9426],
         [0.0796, 0.0028, 0.0053,  ..., 0.0855, 0.0535, 0.0191],
         [0.7590, 0.0028, 0.0053,  ..., 0.7145, 0.8395, 0.0191],
         [0.0800, 0.9915, 0.9841,  ..., 0.0851, 0.0535, 0.0191]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6981, 0.0309, 0.0246,  ..., 0.9251, 0.7870, 0.0524],
         [0.0648, 0.0309, 0.0246,  ..., 0.0250, 0.0523, 0.0524],
         [0.1724, 0.0309, 0.0246,  ..., 0.0250, 0.0523, 0.0524],
         [0.0648, 0.9072, 0.9261,  ..., 0.0250, 0.1084, 0.8428]],
        [[0.3692, 0.0402, 0.0776,  ..., 0.0681, 0.0442, 0.0661],
         [0.1111, 0.0402, 0.0635,  ..., 0.0582, 0.0442, 0.0661],
         [0.4092, 0.8795, 0.0635,  ..., 0.0582, 0.8674, 0.8017],
         [0.1105, 0.0402, 0.7954,  ..., 0.8154, 0.0442, 0.0661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:02,757 [Process: 0] Synchronize training processes
2024-08-18 15:03:02,757 [Process: 0] Evaluating...
2024-08-18 15:03:02,759 [Process: 0] EPOCH 46:
2024-08-18 15:03:02,761 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:03,839 [Process: 0] Synchronize training processes
2024-08-18 15:03:03,840 [Process: 0] Evaluating...
2024-08-18 15:03:03,842 [Process: 0] EPOCH 47:
2024-08-18 15:03:03,843 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0570, 0.8818, 0.8317,  ..., 0.0723, 0.0636, 0.0928],
         [0.0570, 0.0394, 0.0563,  ..., 0.0695, 0.0661, 0.0775],
         [0.8291, 0.0394, 0.0560,  ..., 0.7887, 0.8068, 0.7522],
         [0.0570, 0.0394, 0.0560,  ..., 0.0695, 0.0636, 0.0775]],
        [[0.0703, 0.0227, 0.0104,  ..., 0.0687, 0.0551, 0.9458],
         [0.0703, 0.0227, 0.0104,  ..., 0.0687, 0.0551, 0.0181],
         [0.7661, 0.0227, 0.0104,  ..., 0.7939, 0.8346, 0.0181],
         [0.0933, 0.9319, 0.9689,  ..., 0.0687, 0.0551, 0.0181]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9933, 0.0311, 0.0253,  ..., 0.9635, 0.9525, 0.0306],
         [0.0022, 0.0311, 0.0253,  ..., 0.0122, 0.0132, 0.0306],
         [0.0022, 0.0311, 0.0253,  ..., 0.0122, 0.0132, 0.0306],
         [0.0022, 0.9067, 0.9242,  ..., 0.0122, 0.0211, 0.9081]],
        [[0.0981, 0.0622, 0.0811,  ..., 0.0545, 0.0579, 0.2391],
         [0.0817, 0.0622, 0.0511,  ..., 0.0446, 0.0579, 0.1296],
         [0.7408, 0.8133, 0.0511,  ..., 0.0446, 0.8262, 0.4154],
         [0.0794, 0.0622, 0.8167,  ..., 0.8562, 0.0579, 0.2159]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4774e-02, 9.0775e-01, 9.2583e-01,  ..., 6.9418e-02,
          7.0641e-02, 5.1196e-02],
         [4.4774e-02, 2.9576e-02, 2.4724e-02,  ..., 6.9418e-02,
          7.0641e-02, 5.1196e-02],
         [8.6568e-01, 2.9576e-02, 2.4724e-02,  ..., 7.9175e-01,
          7.8808e-01, 8.4641e-01],
         [4.4774e-02, 3.3099e-02, 2.4724e-02,  ..., 6.9418e-02,
          7.0641e-02, 5.1196e-02]],
        [[1.0152e-01, 5.2525e-04, 2.0535e-03,  ..., 5.2599e-02,
          7.8063e-02, 9.4576e-01],
         [1.0152e-01, 5.2525e-04, 2.0535e-03,  ..., 5.2599e-02,
          7.8063e-02, 1.8080e-02],
         [6.1533e-01, 5.2525e-04, 2.0535e-03,  ..., 8.4220e-01,
          7.3731e-01, 1.8080e-02],
         [1.8162e-01, 9.9842e-01, 9.9384e-01,  ..., 5.2599e-02,
          1.0656e-01, 1.8080e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9849, 0.0404, 0.0109,  ..., 0.8966, 0.8971, 0.0192],
         [0.0050, 0.0400, 0.0109,  ..., 0.0345, 0.0343, 0.0192],
         [0.0050, 0.0400, 0.0109,  ..., 0.0345, 0.0343, 0.0192],
         [0.0050, 0.8797, 0.9673,  ..., 0.0345, 0.0343, 0.9424]],
        [[0.0355, 0.0402, 0.0686,  ..., 0.0134, 0.0821, 0.6962],
         [0.0355, 0.0402, 0.0360,  ..., 0.0134, 0.0663, 0.0912],
         [0.8936, 0.8794, 0.0360,  ..., 0.0134, 0.7853, 0.0814],
         [0.0355, 0.0402, 0.8595,  ..., 0.9599, 0.0663, 0.1312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:04,923 [Process: 0] Synchronize training processes
2024-08-18 15:03:04,923 [Process: 0] Evaluating...
2024-08-18 15:03:04,925 [Process: 0] EPOCH 48:
2024-08-18 15:03:04,927 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:06,007 [Process: 0] Synchronize training processes
2024-08-18 15:03:06,008 [Process: 0] Evaluating...
2024-08-18 15:03:06,010 [Process: 0] EPOCH 49:
2024-08-18 15:03:06,011 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0716, 0.9452, 0.9071,  ..., 0.0646, 0.5671, 0.0734],
         [0.0716, 0.0183, 0.0310,  ..., 0.0646, 0.1046, 0.0734],
         [0.7852, 0.0183, 0.0310,  ..., 0.8042, 0.2212, 0.7799],
         [0.0716, 0.0183, 0.0310,  ..., 0.0666, 0.1071, 0.0734]],
        [[0.0698, 0.0041, 0.0098,  ..., 0.0627, 0.0621, 0.9781],
         [0.0698, 0.0041, 0.0098,  ..., 0.0627, 0.0621, 0.0073],
         [0.7907, 0.0041, 0.0098,  ..., 0.8119, 0.8138, 0.0073],
         [0.0698, 0.9877, 0.9705,  ..., 0.0627, 0.0621, 0.0073]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9860, 0.1119, 0.0552,  ..., 0.9569, 0.9106, 0.0114],
         [0.0047, 0.0630, 0.0447,  ..., 0.0144, 0.0298, 0.0114],
         [0.0047, 0.0630, 0.0447,  ..., 0.0144, 0.0298, 0.0114],
         [0.0047, 0.7620, 0.8553,  ..., 0.0144, 0.0298, 0.9659]],
        [[0.0367, 0.0402, 0.1016,  ..., 0.0165, 0.0393, 0.0424],
         [0.0367, 0.0402, 0.1016,  ..., 0.0165, 0.0393, 0.0424],
         [0.8900, 0.8795, 0.5734,  ..., 0.0165, 0.8822, 0.8727],
         [0.0367, 0.0402, 0.2234,  ..., 0.9506, 0.0393, 0.0424]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0558, 0.9340, 0.8402,  ..., 0.0719, 0.8341, 0.0515],
         [0.0558, 0.0208, 0.0444,  ..., 0.0719, 0.0553, 0.0515],
         [0.8325, 0.0208, 0.0444,  ..., 0.7842, 0.0553, 0.8456],
         [0.0558, 0.0243, 0.0710,  ..., 0.0719, 0.0553, 0.0515]],
        [[0.0839, 0.0027, 0.0023,  ..., 0.0591, 0.0559, 0.9269],
         [0.0839, 0.0027, 0.0023,  ..., 0.0591, 0.0559, 0.0244],
         [0.7278, 0.0027, 0.0023,  ..., 0.8228, 0.8324, 0.0244],
         [0.1045, 0.9919, 0.9931,  ..., 0.0591, 0.0559, 0.0244]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:07,088 [Process: 0] Synchronize training processes
2024-08-18 15:03:07,088 [Process: 0] Evaluating...
2024-08-18 15:03:07,090 [Process: 0] EPOCH 50:
2024-08-18 15:03:07,092 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7588, 0.0396, 0.0382,  ..., 0.9589, 0.4411, 0.0292],
         [0.0434, 0.0396, 0.0365,  ..., 0.0137, 0.0988, 0.0292],
         [0.1544, 0.0396, 0.0365,  ..., 0.0137, 0.1025, 0.0292],
         [0.0434, 0.8811, 0.8889,  ..., 0.0137, 0.3576, 0.9125]],
        [[0.2744, 0.0464, 0.0944,  ..., 0.0314, 0.0306, 0.0249],
         [0.0917, 0.0464, 0.0944,  ..., 0.0314, 0.0306, 0.0249],
         [0.5421, 0.8608, 0.4209,  ..., 0.0314, 0.9082, 0.9252],
         [0.0917, 0.0464, 0.3902,  ..., 0.9057, 0.0306, 0.0249]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0654, 0.9422, 0.9287,  ..., 0.0530, 0.7750, 0.0410],
         [0.0625, 0.0193, 0.0238,  ..., 0.0530, 0.0558, 0.0410],
         [0.8097, 0.0193, 0.0238,  ..., 0.8409, 0.0558, 0.8771],
         [0.0625, 0.0193, 0.0238,  ..., 0.0530, 0.1133, 0.0410]],
        [[0.1579, 0.0056, 0.0036,  ..., 0.0442, 0.0725, 0.9617],
         [0.1176, 0.0056, 0.0037,  ..., 0.0442, 0.0725, 0.0128],
         [0.5453, 0.0056, 0.0036,  ..., 0.8673, 0.7824, 0.0128],
         [0.1792, 0.9831, 0.9892,  ..., 0.0442, 0.0725, 0.0128]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9704e-01, 2.7409e-02, 4.4052e-02,  ..., 9.2045e-01,
          1.9867e-01, 6.7626e-02],
         [9.8624e-04, 2.7409e-02, 3.6140e-02,  ..., 2.8008e-02,
          1.0423e-01, 5.2839e-02],
         [9.8624e-04, 2.7409e-02, 3.6140e-02,  ..., 2.5769e-02,
          1.4543e-01, 5.2839e-02],
         [9.8624e-04, 9.1777e-01, 8.8367e-01,  ..., 2.5769e-02,
          5.5167e-01, 8.2670e-01]],
        [[9.5243e-01, 5.6206e-02, 1.7204e-02,  ..., 4.7826e-02,
          3.7050e-02, 3.6543e-02],
         [1.5857e-02, 5.4702e-02, 1.7204e-02,  ..., 4.5961e-02,
          3.7050e-02, 3.6543e-02],
         [1.5857e-02, 8.3439e-01, 1.7204e-02,  ..., 4.5961e-02,
          8.8885e-01, 8.9037e-01],
         [1.5857e-02, 5.4702e-02, 9.4839e-01,  ..., 8.6025e-01,
          3.7050e-02, 3.6543e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0717, 0.9394, 0.9422,  ..., 0.0551, 0.2384, 0.0495],
         [0.0635, 0.0189, 0.0193,  ..., 0.0551, 0.1256, 0.0495],
         [0.8014, 0.0189, 0.0193,  ..., 0.8347, 0.2983, 0.8514],
         [0.0635, 0.0228, 0.0193,  ..., 0.0551, 0.3377, 0.0495]],
        [[0.1014, 0.0205, 0.0061,  ..., 0.0527, 0.0653, 0.9810],
         [0.0851, 0.0205, 0.0061,  ..., 0.0527, 0.0653, 0.0063],
         [0.7196, 0.0205, 0.0061,  ..., 0.8418, 0.8042, 0.0063],
         [0.0940, 0.9384, 0.9817,  ..., 0.0527, 0.0653, 0.0063]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:08,173 [Process: 0] Synchronize training processes
2024-08-18 15:03:08,173 [Process: 0] Evaluating...
2024-08-18 15:03:08,175 [Process: 0] EPOCH 51:
2024-08-18 15:03:08,176 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:09,263 [Process: 0] Synchronize training processes
2024-08-18 15:03:09,264 [Process: 0] Evaluating...
2024-08-18 15:03:09,268 [Process: 0] EPOCH 52:
2024-08-18 15:03:09,270 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9783, 0.0360, 0.0291,  ..., 0.9500, 0.3057, 0.0225],
         [0.0072, 0.0371, 0.0291,  ..., 0.0167, 0.0942, 0.0225],
         [0.0072, 0.0360, 0.0291,  ..., 0.0167, 0.1030, 0.0225],
         [0.0072, 0.8909, 0.9127,  ..., 0.0167, 0.4971, 0.9324]],
        [[0.9080, 0.0663, 0.0213,  ..., 0.0135, 0.0391, 0.0514],
         [0.0277, 0.0508, 0.0213,  ..., 0.0135, 0.0386, 0.0514],
         [0.0277, 0.8322, 0.0213,  ..., 0.0135, 0.8836, 0.8459],
         [0.0367, 0.0508, 0.9360,  ..., 0.9595, 0.0386, 0.0514]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0348, 0.9102, 0.9565,  ..., 0.0552, 0.0717, 0.0457],
         [0.0348, 0.0283, 0.0143,  ..., 0.0552, 0.0717, 0.0457],
         [0.8955, 0.0283, 0.0143,  ..., 0.8344, 0.7721, 0.8628],
         [0.0348, 0.0332, 0.0150,  ..., 0.0552, 0.0844, 0.0457]],
        [[0.0417, 0.0296, 0.0030,  ..., 0.0608, 0.0736, 0.9603],
         [0.0417, 0.0226, 0.0030,  ..., 0.0608, 0.0704, 0.0132],
         [0.8749, 0.0226, 0.0030,  ..., 0.8177, 0.7805, 0.0132],
         [0.0417, 0.9252, 0.9909,  ..., 0.0608, 0.0755, 0.0132]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9939, 0.1311, 0.0165,  ..., 0.9560, 0.7284, 0.0388],
         [0.0020, 0.0774, 0.0165,  ..., 0.0147, 0.0720, 0.0388],
         [0.0020, 0.0774, 0.0165,  ..., 0.0147, 0.0883, 0.0388],
         [0.0020, 0.7142, 0.9504,  ..., 0.0147, 0.1112, 0.8837]],
        [[0.6991, 0.0408, 0.0068,  ..., 0.0195, 0.0327, 0.0769],
         [0.0934, 0.0391, 0.0068,  ..., 0.0195, 0.0327, 0.0818],
         [0.0762, 0.8811, 0.0068,  ..., 0.0195, 0.9020, 0.7299],
         [0.1313, 0.0391, 0.9795,  ..., 0.9414, 0.0327, 0.1114]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0565, 0.8364, 0.8795,  ..., 0.0445, 0.4089, 0.0386],
         [0.0565, 0.0528, 0.0380,  ..., 0.0445, 0.0497, 0.0386],
         [0.8305, 0.0560, 0.0380,  ..., 0.8666, 0.0497, 0.8843],
         [0.0565, 0.0549, 0.0444,  ..., 0.0445, 0.4918, 0.0386]],
        [[0.0607, 0.0084, 0.0037,  ..., 0.0636, 0.0632, 0.9587],
         [0.0607, 0.0084, 0.0037,  ..., 0.0636, 0.0632, 0.0138],
         [0.8179, 0.0084, 0.0037,  ..., 0.8084, 0.8081, 0.0138],
         [0.0607, 0.9749, 0.9889,  ..., 0.0644, 0.0654, 0.0138]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:10,346 [Process: 0] Synchronize training processes
2024-08-18 15:03:10,347 [Process: 0] Evaluating...
2024-08-18 15:03:10,349 [Process: 0] EPOCH 53:
2024-08-18 15:03:10,350 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:11,429 [Process: 0] Synchronize training processes
2024-08-18 15:03:11,429 [Process: 0] Evaluating...
2024-08-18 15:03:11,432 [Process: 0] EPOCH 54:
2024-08-18 15:03:11,435 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8949, 0.0230, 0.0591,  ..., 0.9482, 0.9294, 0.0132],
         [0.0350, 0.0230, 0.0369,  ..., 0.0173, 0.0232, 0.0132],
         [0.0350, 0.0230, 0.0369,  ..., 0.0173, 0.0232, 0.0132],
         [0.0350, 0.9311, 0.8671,  ..., 0.0173, 0.0243, 0.9604]],
        [[0.8606, 0.0381, 0.0315,  ..., 0.0090, 0.0549, 0.0606],
         [0.0442, 0.0381, 0.0315,  ..., 0.0090, 0.0504, 0.0606],
         [0.0499, 0.8857, 0.0315,  ..., 0.0090, 0.8444, 0.0606],
         [0.0453, 0.0381, 0.9055,  ..., 0.9731, 0.0504, 0.8183]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0447, 0.9344, 0.9218,  ..., 0.0607, 0.3921, 0.0455],
         [0.0447, 0.0219, 0.0249,  ..., 0.0607, 0.0423, 0.0455],
         [0.8658, 0.0219, 0.0249,  ..., 0.8175, 0.0423, 0.8636],
         [0.0447, 0.0219, 0.0283,  ..., 0.0612, 0.5232, 0.0455]],
        [[0.0652, 0.0045, 0.0673,  ..., 0.0516, 0.0590, 0.9539],
         [0.0652, 0.0045, 0.0673,  ..., 0.0516, 0.0590, 0.0154],
         [0.8045, 0.0045, 0.1465,  ..., 0.8452, 0.8190, 0.0154],
         [0.0652, 0.9865, 0.7189,  ..., 0.0516, 0.0631, 0.0154]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9959, 0.0451, 0.0590,  ..., 0.9200, 0.8940, 0.0695],
         [0.0014, 0.0451, 0.0590,  ..., 0.0267, 0.0309, 0.0695],
         [0.0014, 0.0451, 0.0626,  ..., 0.0267, 0.0309, 0.0945],
         [0.0014, 0.8648, 0.8193,  ..., 0.0267, 0.0441, 0.7665]],
        [[0.9777, 0.0203, 0.0361,  ..., 0.0506, 0.0244, 0.1028],
         [0.0074, 0.0203, 0.0361,  ..., 0.0463, 0.0244, 0.1028],
         [0.0074, 0.9392, 0.0361,  ..., 0.0463, 0.9269, 0.4581],
         [0.0074, 0.0203, 0.8916,  ..., 0.8568, 0.0244, 0.3363]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:03:12,510 [Process: 0] Synchronize training processes
2024-08-18 15:03:12,510 [Process: 0] Evaluating...
2024-08-18 15:03:12,512 [Process: 0] EPOCH 55:
2024-08-18 15:03:12,514 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:13,597 [Process: 0] Synchronize training processes
2024-08-18 15:03:13,597 [Process: 0] Evaluating...
2024-08-18 15:03:13,599 [Process: 0] EPOCH 56:
2024-08-18 15:03:13,601 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0483, 0.9010, 0.9397,  ..., 0.0388, 0.0327, 0.0411],
         [0.0483, 0.0266, 0.0197,  ..., 0.0388, 0.0327, 0.0411],
         [0.8550, 0.0266, 0.0197,  ..., 0.8836, 0.9020, 0.8767],
         [0.0483, 0.0458, 0.0208,  ..., 0.0388, 0.0327, 0.0411]],
        [[0.0518, 0.0105, 0.0047,  ..., 0.1008, 0.0642, 0.9592],
         [0.0518, 0.0105, 0.0047,  ..., 0.0954, 0.0642, 0.0136],
         [0.8446, 0.0105, 0.0047,  ..., 0.5980, 0.7933, 0.0136],
         [0.0518, 0.9685, 0.9858,  ..., 0.2058, 0.0784, 0.0136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9766, 0.0402, 0.0280,  ..., 0.5884, 0.5842, 0.1261],
         [0.0078, 0.0402, 0.0280,  ..., 0.0778, 0.0710, 0.0552],
         [0.0078, 0.0402, 0.0280,  ..., 0.0778, 0.0710, 0.0552],
         [0.0078, 0.8795, 0.9160,  ..., 0.2560, 0.2739, 0.7634]],
        [[0.9562, 0.0176, 0.0233,  ..., 0.0487, 0.0217, 0.0192],
         [0.0146, 0.0176, 0.0233,  ..., 0.0487, 0.0217, 0.0192],
         [0.0146, 0.9473, 0.0233,  ..., 0.0487, 0.9349, 0.9423],
         [0.0146, 0.0176, 0.9301,  ..., 0.8538, 0.0217, 0.0192]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0617, 0.8536, 0.9065,  ..., 0.0687, 0.0561, 0.0541],
         [0.0617, 0.0380, 0.0312,  ..., 0.0687, 0.0561, 0.0541],
         [0.8150, 0.0380, 0.0312,  ..., 0.7790, 0.8202, 0.8377],
         [0.0617, 0.0703, 0.0312,  ..., 0.0836, 0.0676, 0.0541]],
        [[0.0471, 0.0081, 0.0016,  ..., 0.0536, 0.0390, 0.9839],
         [0.0471, 0.0078, 0.0016,  ..., 0.0536, 0.0390, 0.0054],
         [0.8588, 0.0078, 0.0016,  ..., 0.8393, 0.8829, 0.0054],
         [0.0471, 0.9763, 0.9953,  ..., 0.0536, 0.0390, 0.0054]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8157, 0.0207, 0.0239,  ..., 0.9842, 0.9567, 0.0340],
         [0.0440, 0.0161, 0.0239,  ..., 0.0053, 0.0144, 0.0340],
         [0.0963, 0.0161, 0.0239,  ..., 0.0053, 0.0144, 0.0340],
         [0.0440, 0.9471, 0.9283,  ..., 0.0053, 0.0144, 0.8981]],
        [[0.9624, 0.0267, 0.0233,  ..., 0.0225, 0.0229, 0.0488],
         [0.0125, 0.0267, 0.0233,  ..., 0.0225, 0.0229, 0.0452],
         [0.0125, 0.9199, 0.0233,  ..., 0.0225, 0.9312, 0.8608],
         [0.0125, 0.0267, 0.9301,  ..., 0.9325, 0.0229, 0.0452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:14,679 [Process: 0] Synchronize training processes
2024-08-18 15:03:14,680 [Process: 0] Evaluating...
2024-08-18 15:03:14,682 [Process: 0] EPOCH 57:
2024-08-18 15:03:14,683 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:15,766 [Process: 0] Synchronize training processes
2024-08-18 15:03:15,767 [Process: 0] Evaluating...
2024-08-18 15:03:15,768 [Process: 0] EPOCH 58:
2024-08-18 15:03:15,770 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0619, 0.9250, 0.8715,  ..., 0.0673, 0.0335, 0.0499],
         [0.0619, 0.0214, 0.0312,  ..., 0.0617, 0.0335, 0.0499],
         [0.7885, 0.0214, 0.0312,  ..., 0.8093, 0.8996, 0.8504],
         [0.0876, 0.0323, 0.0660,  ..., 0.0617, 0.0335, 0.0499]],
        [[0.0446, 0.0028, 0.0333,  ..., 0.0415, 0.0480, 0.9723],
         [0.0446, 0.0028, 0.0141,  ..., 0.0415, 0.0480, 0.0092],
         [0.8661, 0.0028, 0.0141,  ..., 0.8756, 0.8525, 0.0092],
         [0.0446, 0.9917, 0.9385,  ..., 0.0415, 0.0516, 0.0092]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9718, 0.0280, 0.0263,  ..., 0.9472, 0.8263, 0.0424],
         [0.0094, 0.0280, 0.0263,  ..., 0.0176, 0.0425, 0.0424],
         [0.0094, 0.0287, 0.0263,  ..., 0.0176, 0.0425, 0.0459],
         [0.0094, 0.9154, 0.9212,  ..., 0.0176, 0.0887, 0.8693]],
        [[0.9542, 0.0253, 0.0167,  ..., 0.0254, 0.0298, 0.0339],
         [0.0153, 0.0253, 0.0167,  ..., 0.0254, 0.0298, 0.0339],
         [0.0153, 0.9240, 0.0167,  ..., 0.0254, 0.9107, 0.8984],
         [0.0153, 0.0253, 0.9499,  ..., 0.9239, 0.0298, 0.0339]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0339, 0.8993, 0.8560,  ..., 0.0391, 0.0785, 0.0504],
         [0.0339, 0.0258, 0.0383,  ..., 0.0391, 0.0785, 0.0504],
         [0.8984, 0.0258, 0.0383,  ..., 0.8826, 0.4321, 0.8489],
         [0.0339, 0.0491, 0.0674,  ..., 0.0391, 0.4108, 0.0504]],
        [[0.0301, 0.0075, 0.0060,  ..., 0.0518, 0.0323, 0.9754],
         [0.0301, 0.0075, 0.0060,  ..., 0.0518, 0.0323, 0.0082],
         [0.9096, 0.0075, 0.0060,  ..., 0.8445, 0.9031, 0.0082],
         [0.0301, 0.9776, 0.9821,  ..., 0.0518, 0.0323, 0.0082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9814, 0.0501, 0.0339,  ..., 0.9660, 0.6979, 0.0931],
         [0.0062, 0.0344, 0.0339,  ..., 0.0113, 0.0641, 0.0799],
         [0.0062, 0.0344, 0.0358,  ..., 0.0113, 0.0641, 0.1338],
         [0.0062, 0.8811, 0.8964,  ..., 0.0113, 0.1739, 0.6932]],
        [[0.9194, 0.0241, 0.0541,  ..., 0.0182, 0.0225, 0.0127],
         [0.0269, 0.0241, 0.0411,  ..., 0.0182, 0.0225, 0.0127],
         [0.0269, 0.9276, 0.0411,  ..., 0.0182, 0.9325, 0.9618],
         [0.0269, 0.0241, 0.8637,  ..., 0.9453, 0.0225, 0.0127]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:16,847 [Process: 0] Synchronize training processes
2024-08-18 15:03:16,848 [Process: 0] Evaluating...
2024-08-18 15:03:16,850 [Process: 0] EPOCH 59:
2024-08-18 15:03:16,851 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:17,932 [Process: 0] Synchronize training processes
2024-08-18 15:03:17,933 [Process: 0] Evaluating...
2024-08-18 15:03:17,934 [Process: 0] EPOCH 60:
2024-08-18 15:03:17,936 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0983, 0.7991, 0.9751,  ..., 0.0387, 0.3428, 0.0247],
         [0.0726, 0.0328, 0.0083,  ..., 0.0387, 0.0313, 0.0247],
         [0.7566, 0.0328, 0.0083,  ..., 0.8839, 0.0313, 0.9258],
         [0.0726, 0.1354, 0.0083,  ..., 0.0387, 0.5947, 0.0247]],
        [[0.0762, 0.0045, 0.0034,  ..., 0.0316, 0.0552, 0.9712],
         [0.0762, 0.0045, 0.0034,  ..., 0.0316, 0.0552, 0.0096],
         [0.6609, 0.0045, 0.0034,  ..., 0.9053, 0.8343, 0.0096],
         [0.1866, 0.9866, 0.9898,  ..., 0.0316, 0.0552, 0.0096]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9904, 0.0262, 0.0462,  ..., 0.9731, 0.5228, 0.0629],
         [0.0032, 0.0262, 0.0462,  ..., 0.0090, 0.0852, 0.0629],
         [0.0032, 0.0262, 0.0462,  ..., 0.0090, 0.0852, 0.0678],
         [0.0032, 0.9214, 0.8614,  ..., 0.0090, 0.3068, 0.8065]],
        [[0.8656, 0.0563, 0.0122,  ..., 0.0309, 0.0550, 0.0238],
         [0.0408, 0.0404, 0.0122,  ..., 0.0309, 0.0414, 0.0238],
         [0.0514, 0.8629, 0.0122,  ..., 0.0309, 0.8621, 0.9285],
         [0.0423, 0.0404, 0.9635,  ..., 0.9073, 0.0414, 0.0238]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0515, 0.1600, 0.9142,  ..., 0.0567, 0.0036, 0.0323],
         [0.0494, 0.0398, 0.0244,  ..., 0.0567, 0.0036, 0.0323],
         [0.8497, 0.0398, 0.0244,  ..., 0.8297, 0.0036, 0.9031],
         [0.0494, 0.7604, 0.0370,  ..., 0.0569, 0.9891, 0.0323]],
        [[0.0941, 0.0024, 0.0093,  ..., 0.0427, 0.0415, 0.9901],
         [0.0709, 0.0024, 0.0093,  ..., 0.0427, 0.0415, 0.0033],
         [0.7552, 0.0024, 0.0093,  ..., 0.8718, 0.8755, 0.0033],
         [0.0799, 0.9929, 0.9722,  ..., 0.0427, 0.0415, 0.0033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9921, 0.0767, 0.0490,  ..., 0.9811, 0.9799, 0.0494],
         [0.0026, 0.0695, 0.0490,  ..., 0.0063, 0.0067, 0.0489],
         [0.0026, 0.0820, 0.0618,  ..., 0.0063, 0.0067, 0.0489],
         [0.0026, 0.7718, 0.8401,  ..., 0.0063, 0.0067, 0.8527]],
        [[0.9444, 0.0240, 0.0685,  ..., 0.0130, 0.0234, 0.0244],
         [0.0185, 0.0240, 0.0606,  ..., 0.0130, 0.0234, 0.0244],
         [0.0185, 0.9280, 0.0674,  ..., 0.0130, 0.9299, 0.9267],
         [0.0185, 0.0240, 0.8036,  ..., 0.9610, 0.0234, 0.0244]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:19,015 [Process: 0] Synchronize training processes
2024-08-18 15:03:19,015 [Process: 0] Evaluating...
2024-08-18 15:03:19,017 [Process: 0] EPOCH 61:
2024-08-18 15:03:19,019 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:20,096 [Process: 0] Synchronize training processes
2024-08-18 15:03:20,096 [Process: 0] Evaluating...
2024-08-18 15:03:20,101 [Process: 0] EPOCH 62:
2024-08-18 15:03:20,102 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0401, 0.0180, 0.9670,  ..., 0.0449, 0.0051, 0.0367],
         [0.0401, 0.0180, 0.0110,  ..., 0.0449, 0.0051, 0.0367],
         [0.8797, 0.0180, 0.0110,  ..., 0.8652, 0.0051, 0.8898],
         [0.0401, 0.9460, 0.0110,  ..., 0.0449, 0.9848, 0.0367]],
        [[0.0467, 0.0040, 0.0022,  ..., 0.0450, 0.0387, 0.9556],
         [0.0467, 0.0040, 0.0022,  ..., 0.0450, 0.0387, 0.0148],
         [0.8598, 0.0040, 0.0022,  ..., 0.8650, 0.8838, 0.0148],
         [0.0467, 0.9881, 0.9935,  ..., 0.0450, 0.0387, 0.0148]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9878, 0.0161, 0.0286,  ..., 0.9819, 0.9791, 0.0283],
         [0.0041, 0.0161, 0.0286,  ..., 0.0060, 0.0070, 0.0283],
         [0.0041, 0.0161, 0.0307,  ..., 0.0060, 0.0070, 0.0283],
         [0.0041, 0.9518, 0.9122,  ..., 0.0060, 0.0070, 0.9151]],
        [[0.9681, 0.0172, 0.0269,  ..., 0.0695, 0.0215, 0.1070],
         [0.0106, 0.0172, 0.0269,  ..., 0.0579, 0.0215, 0.0536],
         [0.0106, 0.9484, 0.0269,  ..., 0.0579, 0.9354, 0.7859],
         [0.0106, 0.0172, 0.9194,  ..., 0.8147, 0.0215, 0.0536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0369, 0.0041, 0.9672,  ..., 0.0819, 0.0220, 0.0332],
         [0.0369, 0.0041, 0.0109,  ..., 0.0655, 0.0108, 0.0332],
         [0.8894, 0.0041, 0.0109,  ..., 0.7766, 0.0108, 0.9004],
         [0.0369, 0.9877, 0.0109,  ..., 0.0759, 0.9565, 0.0332]],
        [[0.0967, 0.0144, 0.0022,  ..., 0.0423, 0.0297, 0.9677],
         [0.0613, 0.0144, 0.0022,  ..., 0.0423, 0.0297, 0.0108],
         [0.7806, 0.0144, 0.0022,  ..., 0.8732, 0.9110, 0.0108],
         [0.0613, 0.9567, 0.9934,  ..., 0.0423, 0.0297, 0.0108]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:21,183 [Process: 0] Synchronize training processes
2024-08-18 15:03:21,184 [Process: 0] Evaluating...
2024-08-18 15:03:21,185 [Process: 0] EPOCH 63:
2024-08-18 15:03:21,187 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9933, 0.0611, 0.0202,  ..., 0.9673, 0.4756, 0.0154],
         [0.0022, 0.0470, 0.0202,  ..., 0.0130, 0.0606, 0.0154],
         [0.0022, 0.0470, 0.0202,  ..., 0.0099, 0.0606, 0.0154],
         [0.0022, 0.8449, 0.9394,  ..., 0.0099, 0.4032, 0.9538]],
        [[0.9908, 0.0483, 0.0220,  ..., 0.0118, 0.0275, 0.0169],
         [0.0031, 0.0375, 0.0220,  ..., 0.0118, 0.0275, 0.0169],
         [0.0031, 0.8768, 0.0220,  ..., 0.0118, 0.9176, 0.9492],
         [0.0031, 0.0375, 0.9340,  ..., 0.9645, 0.0275, 0.0169]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0476, 0.0337, 0.9613,  ..., 0.0358, 0.0033, 0.0472],
         [0.0476, 0.0206, 0.0113,  ..., 0.0358, 0.0033, 0.0472],
         [0.8562, 0.0206, 0.0113,  ..., 0.8926, 0.0033, 0.8585],
         [0.0485, 0.9250, 0.0161,  ..., 0.0358, 0.9900, 0.0472]],
        [[0.0454, 0.0068, 0.0012,  ..., 0.0441, 0.0477, 0.9676],
         [0.0454, 0.0068, 0.0012,  ..., 0.0441, 0.0477, 0.0108],
         [0.8639, 0.0068, 0.0012,  ..., 0.8674, 0.8542, 0.0108],
         [0.0454, 0.9796, 0.9964,  ..., 0.0445, 0.0504, 0.0109]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9743e-01, 4.7071e-02, 1.4913e-02,  ..., 9.8902e-01,
          8.5891e-01, 2.9264e-02],
         [8.5539e-04, 3.4994e-02, 1.4913e-02,  ..., 3.6595e-03,
          2.4624e-02, 2.7194e-02],
         [8.5539e-04, 3.4994e-02, 1.4913e-02,  ..., 3.6595e-03,
          2.4624e-02, 2.7194e-02],
         [8.5539e-04, 8.8294e-01, 9.5526e-01,  ..., 3.6595e-03,
          9.1839e-02, 9.1635e-01]],
        [[9.1228e-01, 2.2802e-02, 1.5460e-02,  ..., 7.7085e-02,
          3.4829e-02, 1.8403e-02],
         [2.7533e-02, 2.2802e-02, 1.5460e-02,  ..., 4.2255e-02,
          3.3165e-02, 1.8403e-02],
         [3.2651e-02, 9.3159e-01, 1.5460e-02,  ..., 4.2255e-02,
          8.9884e-01, 9.4479e-01],
         [2.7533e-02, 2.2802e-02, 9.5362e-01,  ..., 8.3841e-01,
          3.3165e-02, 1.8403e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0389, 0.0041, 0.9601,  ..., 0.0710, 0.0084, 0.0324],
         [0.0389, 0.0041, 0.0133,  ..., 0.0621, 0.0084, 0.0324],
         [0.8834, 0.0041, 0.0133,  ..., 0.8006, 0.0084, 0.9028],
         [0.0389, 0.9877, 0.0133,  ..., 0.0663, 0.9748, 0.0324]],
        [[0.0394, 0.0032, 0.0031,  ..., 0.0277, 0.0395, 0.9251],
         [0.0394, 0.0032, 0.0031,  ..., 0.0277, 0.0395, 0.0240],
         [0.8817, 0.0032, 0.0031,  ..., 0.9168, 0.8814, 0.0240],
         [0.0394, 0.9903, 0.9908,  ..., 0.0277, 0.0395, 0.0270]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:22,264 [Process: 0] Synchronize training processes
2024-08-18 15:03:22,264 [Process: 0] Evaluating...
2024-08-18 15:03:22,266 [Process: 0] EPOCH 64:
2024-08-18 15:03:22,267 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:23,346 [Process: 0] Synchronize training processes
2024-08-18 15:03:23,346 [Process: 0] Evaluating...
2024-08-18 15:03:23,348 [Process: 0] EPOCH 65:
2024-08-18 15:03:23,350 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9682, 0.0097, 0.0185,  ..., 0.9756, 0.9747, 0.0331],
         [0.0089, 0.0097, 0.0185,  ..., 0.0081, 0.0084, 0.0331],
         [0.0139, 0.0097, 0.0185,  ..., 0.0081, 0.0084, 0.0331],
         [0.0089, 0.9710, 0.9445,  ..., 0.0081, 0.0085, 0.9007]],
        [[0.4170, 0.0172, 0.0384,  ..., 0.0138, 0.0377, 0.0243],
         [0.0636, 0.0172, 0.0384,  ..., 0.0138, 0.0330, 0.0243],
         [0.4558, 0.9485, 0.0384,  ..., 0.0138, 0.8963, 0.9270],
         [0.0636, 0.0172, 0.8848,  ..., 0.9586, 0.0330, 0.0243]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0353, 0.0119, 0.9443,  ..., 0.0279, 0.3243, 0.0339],
         [0.0353, 0.0119, 0.0172,  ..., 0.0279, 0.1070, 0.0339],
         [0.8941, 0.0119, 0.0172,  ..., 0.9164, 0.2023, 0.8984],
         [0.0353, 0.9643, 0.0212,  ..., 0.0279, 0.3664, 0.0339]],
        [[0.0347, 0.0098, 0.0054,  ..., 0.0490, 0.0448, 0.9904],
         [0.0347, 0.0098, 0.0054,  ..., 0.0490, 0.0448, 0.0032],
         [0.8959, 0.0098, 0.0054,  ..., 0.8531, 0.8656, 0.0032],
         [0.0347, 0.9707, 0.9837,  ..., 0.0490, 0.0448, 0.0032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9930, 0.0169, 0.1725,  ..., 0.9788, 0.9492, 0.0441],
         [0.0023, 0.0169, 0.0672,  ..., 0.0071, 0.0169, 0.0402],
         [0.0023, 0.0169, 0.0684,  ..., 0.0071, 0.0169, 0.0402],
         [0.0023, 0.9494, 0.6918,  ..., 0.0071, 0.0169, 0.8754]],
        [[0.9683, 0.0168, 0.0281,  ..., 0.0193, 0.0213, 0.0215],
         [0.0106, 0.0168, 0.0281,  ..., 0.0193, 0.0213, 0.0215],
         [0.0106, 0.9495, 0.0299,  ..., 0.0193, 0.9361, 0.9356],
         [0.0106, 0.0168, 0.9140,  ..., 0.9421, 0.0213, 0.0215]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0529, 0.0035, 0.8884,  ..., 0.0283, 0.0944, 0.0344],
         [0.0529, 0.0035, 0.0318,  ..., 0.0283, 0.0944, 0.0344],
         [0.8392, 0.0035, 0.0318,  ..., 0.9151, 0.4045, 0.8968],
         [0.0551, 0.9895, 0.0481,  ..., 0.0283, 0.4067, 0.0344]],
        [[0.0376, 0.0035, 0.0026,  ..., 0.0278, 0.0413, 0.9390],
         [0.0376, 0.0035, 0.0026,  ..., 0.0278, 0.0413, 0.0203],
         [0.8871, 0.0035, 0.0026,  ..., 0.9166, 0.8762, 0.0203],
         [0.0376, 0.9896, 0.9923,  ..., 0.0278, 0.0413, 0.0203]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:24,430 [Process: 0] Synchronize training processes
2024-08-18 15:03:24,430 [Process: 0] Evaluating...
2024-08-18 15:03:24,432 [Process: 0] EPOCH 66:
2024-08-18 15:03:24,434 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:25,515 [Process: 0] Synchronize training processes
2024-08-18 15:03:25,516 [Process: 0] Evaluating...
2024-08-18 15:03:25,518 [Process: 0] EPOCH 67:
2024-08-18 15:03:25,519 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9764, 0.0127, 0.0168,  ..., 0.9683, 0.9838, 0.0238],
         [0.0079, 0.0127, 0.0168,  ..., 0.0106, 0.0054, 0.0238],
         [0.0079, 0.0127, 0.0168,  ..., 0.0106, 0.0054, 0.0238],
         [0.0079, 0.9619, 0.9495,  ..., 0.0106, 0.0054, 0.9287]],
        [[0.9794, 0.0218, 0.0251,  ..., 0.0082, 0.0217, 0.0220],
         [0.0069, 0.0218, 0.0251,  ..., 0.0082, 0.0217, 0.0220],
         [0.0069, 0.9346, 0.0251,  ..., 0.0082, 0.9348, 0.9341],
         [0.0069, 0.0218, 0.9247,  ..., 0.9755, 0.0217, 0.0220]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0368, 0.0025, 0.9589,  ..., 0.0359, 0.0686, 0.0239],
         [0.0368, 0.0025, 0.0122,  ..., 0.0359, 0.0686, 0.0239],
         [0.8896, 0.0025, 0.0122,  ..., 0.8922, 0.5711, 0.9283],
         [0.0368, 0.9926, 0.0167,  ..., 0.0359, 0.2918, 0.0239]],
        [[0.0509, 0.0020, 0.0071,  ..., 0.0548, 0.0604, 0.9834],
         [0.0448, 0.0020, 0.0071,  ..., 0.0516, 0.0535, 0.0055],
         [0.8594, 0.0020, 0.0071,  ..., 0.8413, 0.0904, 0.0055],
         [0.0448, 0.9941, 0.9786,  ..., 0.0522, 0.7958, 0.0055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9941, 0.0075, 0.0077,  ..., 0.9859, 0.7678, 0.0217],
         [0.0020, 0.0082, 0.0077,  ..., 0.0047, 0.0562, 0.0217],
         [0.0020, 0.0075, 0.0077,  ..., 0.0047, 0.0562, 0.0217],
         [0.0020, 0.9769, 0.9769,  ..., 0.0047, 0.1199, 0.9348]],
        [[0.9668, 0.0186, 0.0242,  ..., 0.0308, 0.0160, 0.0199],
         [0.0111, 0.0186, 0.0256,  ..., 0.0264, 0.0160, 0.0199],
         [0.0111, 0.9442, 0.0242,  ..., 0.0264, 0.9520, 0.9404],
         [0.0111, 0.0186, 0.9261,  ..., 0.9163, 0.0160, 0.0199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-18 15:03:26,598 [Process: 0] Synchronize training processes
2024-08-18 15:03:26,598 [Process: 0] Evaluating...
2024-08-18 15:03:26,600 [Process: 0] EPOCH 68:
2024-08-18 15:03:26,602 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:27,682 [Process: 0] Synchronize training processes
2024-08-18 15:03:27,682 [Process: 0] Evaluating...
2024-08-18 15:03:27,683 [Process: 0] EPOCH 69:
2024-08-18 15:03:27,685 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[4.5043e-02, 4.4757e-03, 9.7457e-01,  ..., 3.8314e-02,
          2.2616e-03, 2.7343e-02],
         [4.5043e-02, 4.4757e-03, 8.4768e-03,  ..., 3.8314e-02,
          2.2616e-03, 2.7343e-02],
         [8.6487e-01, 4.4757e-03, 8.4768e-03,  ..., 8.8506e-01,
          2.2616e-03, 9.1797e-01],
         [4.5043e-02, 9.8657e-01, 8.4768e-03,  ..., 3.8314e-02,
          9.9322e-01, 2.7343e-02]],
        [[3.7893e-02, 2.1995e-03, 9.9549e-04,  ..., 2.2433e-02,
          8.5541e-02, 9.5992e-01],
         [3.7893e-02, 2.1995e-03, 9.9549e-04,  ..., 2.2433e-02,
          8.0430e-02, 1.3177e-02],
         [8.8632e-01, 2.1995e-03, 9.9549e-04,  ..., 9.3270e-01,
          2.7248e-01, 1.3177e-02],
         [3.7893e-02, 9.9340e-01, 9.9701e-01,  ..., 2.2433e-02,
          5.6155e-01, 1.3728e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9400, 0.0821, 0.0324,  ..., 0.9750, 0.9770, 0.0752],
         [0.0161, 0.0472, 0.0324,  ..., 0.0083, 0.0077, 0.0504],
         [0.0277, 0.0472, 0.0324,  ..., 0.0083, 0.0077, 0.0504],
         [0.0161, 0.8236, 0.9029,  ..., 0.0083, 0.0077, 0.8240]],
        [[0.9865, 0.0187, 0.0377,  ..., 0.0254, 0.0225, 0.0214],
         [0.0045, 0.0187, 0.0377,  ..., 0.0254, 0.0225, 0.0214],
         [0.0045, 0.9438, 0.0416,  ..., 0.0254, 0.9324, 0.9357],
         [0.0045, 0.0187, 0.8830,  ..., 0.9239, 0.0225, 0.0214]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.4105e-02, 2.1292e-04, 9.3389e-01,  ..., 3.9353e-02,
          4.5883e-04, 3.1519e-02],
         [5.1188e-02, 2.1292e-04, 2.0018e-02,  ..., 3.9353e-02,
          4.5883e-04, 3.1519e-02],
         [8.2754e-01, 2.1292e-04, 2.0018e-02,  ..., 8.8191e-01,
          4.5883e-04, 9.0544e-01],
         [5.7167e-02, 9.9936e-01, 2.6072e-02,  ..., 3.9384e-02,
          9.9862e-01, 3.1519e-02]],
        [[3.7161e-02, 2.7746e-02, 3.1327e-03,  ..., 4.7757e-02,
          3.4342e-02, 9.5978e-01],
         [3.3169e-02, 1.7079e-02, 3.1327e-03,  ..., 4.2160e-02,
          3.4342e-02, 1.3405e-02],
         [8.9650e-01, 1.7079e-02, 3.1327e-03,  ..., 8.6792e-01,
          8.9698e-01, 1.3405e-02],
         [3.3169e-02, 9.3810e-01, 9.9060e-01,  ..., 4.2160e-02,
          3.4342e-02, 1.3405e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9926, 0.0096, 0.0675,  ..., 0.9577, 0.9701, 0.0222],
         [0.0025, 0.0096, 0.0530,  ..., 0.0135, 0.0100, 0.0222],
         [0.0025, 0.0096, 0.0620,  ..., 0.0153, 0.0100, 0.0222],
         [0.0025, 0.9713, 0.8175,  ..., 0.0135, 0.0100, 0.9333]],
        [[0.9844, 0.0172, 0.0228,  ..., 0.0134, 0.0581, 0.0280],
         [0.0052, 0.0185, 0.0228,  ..., 0.0134, 0.0392, 0.0280],
         [0.0052, 0.9471, 0.0228,  ..., 0.0134, 0.8636, 0.9160],
         [0.0052, 0.0172, 0.9317,  ..., 0.9599, 0.0392, 0.0280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:28,766 [Process: 0] Synchronize training processes
2024-08-18 15:03:28,767 [Process: 0] Evaluating...
2024-08-18 15:03:28,768 [Process: 0] EPOCH 70:
2024-08-18 15:03:28,770 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:29,846 [Process: 0] Synchronize training processes
2024-08-18 15:03:29,846 [Process: 0] Evaluating...
2024-08-18 15:03:29,848 [Process: 0] EPOCH 71:
2024-08-18 15:03:29,850 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0427, 0.0057, 0.9467,  ..., 0.0244, 0.0013, 0.0397],
         [0.0427, 0.0057, 0.0155,  ..., 0.0244, 0.0013, 0.0397],
         [0.8645, 0.0057, 0.0155,  ..., 0.9269, 0.0013, 0.8808],
         [0.0501, 0.9829, 0.0223,  ..., 0.0244, 0.9961, 0.0397]],
        [[0.0352, 0.0043, 0.0024,  ..., 0.0392, 0.0421, 0.9737],
         [0.0352, 0.0043, 0.0024,  ..., 0.0392, 0.0421, 0.0088],
         [0.8943, 0.0043, 0.0024,  ..., 0.8825, 0.8736, 0.0088],
         [0.0352, 0.9872, 0.9927,  ..., 0.0392, 0.0421, 0.0088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7247, 0.0316, 0.0593,  ..., 0.9686, 0.9879, 0.0263],
         [0.0446, 0.0256, 0.0289,  ..., 0.0106, 0.0040, 0.0214],
         [0.1862, 0.0256, 0.0289,  ..., 0.0104, 0.0040, 0.0214],
         [0.0446, 0.9172, 0.8830,  ..., 0.0104, 0.0040, 0.9309]],
        [[0.9474, 0.0160, 0.0291,  ..., 0.0274, 0.0220, 0.0736],
         [0.0175, 0.0160, 0.0254,  ..., 0.0274, 0.0220, 0.0596],
         [0.0175, 0.9521, 0.0254,  ..., 0.0274, 0.9339, 0.0791],
         [0.0175, 0.0160, 0.9201,  ..., 0.9179, 0.0220, 0.7877]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0398, 0.0064, 0.9450,  ..., 0.0395, 0.0010, 0.0450],
         [0.0383, 0.0064, 0.0183,  ..., 0.0395, 0.0010, 0.0450],
         [0.8837, 0.0064, 0.0183,  ..., 0.8803, 0.0010, 0.8651],
         [0.0383, 0.9808, 0.0183,  ..., 0.0406, 0.9970, 0.0450]],
        [[0.0317, 0.0029, 0.0016,  ..., 0.0381, 0.0297, 0.9854],
         [0.0317, 0.0029, 0.0016,  ..., 0.0381, 0.0297, 0.0049],
         [0.9050, 0.0029, 0.0016,  ..., 0.8857, 0.9109, 0.0049],
         [0.0317, 0.9914, 0.9953,  ..., 0.0381, 0.0297, 0.0049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8059, 0.0147, 0.0096,  ..., 0.9703, 0.9601, 0.4319],
         [0.0440, 0.0147, 0.0096,  ..., 0.0109, 0.0133, 0.0786],
         [0.1060, 0.0147, 0.0096,  ..., 0.0094, 0.0133, 0.1476],
         [0.0440, 0.9560, 0.9712,  ..., 0.0094, 0.0133, 0.3419]],
        [[0.9583, 0.0126, 0.0266,  ..., 0.0341, 0.0134, 0.0830],
         [0.0139, 0.0126, 0.0266,  ..., 0.0315, 0.0134, 0.0830],
         [0.0139, 0.9621, 0.0266,  ..., 0.0315, 0.9598, 0.2508],
         [0.0139, 0.0126, 0.9201,  ..., 0.9029, 0.0134, 0.5832]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:30,930 [Process: 0] Synchronize training processes
2024-08-18 15:03:30,930 [Process: 0] Evaluating...
2024-08-18 15:03:30,934 [Process: 0] EPOCH 72:
2024-08-18 15:03:30,936 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:32,014 [Process: 0] Synchronize training processes
2024-08-18 15:03:32,014 [Process: 0] Evaluating...
2024-08-18 15:03:32,016 [Process: 0] EPOCH 73:
2024-08-18 15:03:32,017 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0193, 0.0046, 0.9798,  ..., 0.0260, 0.0073, 0.0665],
         [0.0193, 0.0046, 0.0067,  ..., 0.0260, 0.0073, 0.0485],
         [0.9421, 0.0046, 0.0067,  ..., 0.9220, 0.0073, 0.8365],
         [0.0193, 0.9863, 0.0067,  ..., 0.0260, 0.9781, 0.0485]],
        [[0.0315, 0.0121, 0.0021,  ..., 0.0293, 0.0290, 0.9573],
         [0.0315, 0.0121, 0.0021,  ..., 0.0293, 0.0290, 0.0134],
         [0.9055, 0.0121, 0.0021,  ..., 0.9122, 0.9131, 0.0134],
         [0.0315, 0.9638, 0.9937,  ..., 0.0293, 0.0290, 0.0159]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9769, 0.0286, 0.0176,  ..., 0.9846, 0.9228, 0.0383],
         [0.0077, 0.0286, 0.0176,  ..., 0.0051, 0.0251, 0.0371],
         [0.0077, 0.0419, 0.0176,  ..., 0.0051, 0.0251, 0.0371],
         [0.0077, 0.9010, 0.9473,  ..., 0.0051, 0.0271, 0.8875]],
        [[0.9886, 0.0171, 0.0148,  ..., 0.0262, 0.0169, 0.0538],
         [0.0038, 0.0171, 0.0148,  ..., 0.0262, 0.0169, 0.0452],
         [0.0038, 0.9486, 0.0148,  ..., 0.0262, 0.9493, 0.8558],
         [0.0038, 0.0171, 0.9556,  ..., 0.9214, 0.0169, 0.0452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0297, 0.0036, 0.9829,  ..., 0.0450, 0.0512, 0.0368],
         [0.0297, 0.0036, 0.0057,  ..., 0.0441, 0.0512, 0.0368],
         [0.9110, 0.0036, 0.0057,  ..., 0.8668, 0.8256, 0.8896],
         [0.0297, 0.9891, 0.0057,  ..., 0.0441, 0.0720, 0.0368]],
        [[0.0321, 0.0108, 0.0019,  ..., 0.0299, 0.0324, 0.9844],
         [0.0321, 0.0108, 0.0019,  ..., 0.0299, 0.0324, 0.0052],
         [0.9036, 0.0108, 0.0019,  ..., 0.9104, 0.9027, 0.0052],
         [0.0321, 0.9677, 0.9943,  ..., 0.0299, 0.0324, 0.0052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9665, 0.0197, 0.0667,  ..., 0.9802, 0.8377, 0.0409],
         [0.0111, 0.0197, 0.0535,  ..., 0.0066, 0.0322, 0.0236],
         [0.0113, 0.0197, 0.0739,  ..., 0.0066, 0.0322, 0.0236],
         [0.0111, 0.9409, 0.8058,  ..., 0.0066, 0.0978, 0.9119]],
        [[0.9546, 0.0103, 0.0216,  ..., 0.0162, 0.0073, 0.0298],
         [0.0151, 0.0103, 0.0216,  ..., 0.0162, 0.0073, 0.0254],
         [0.0151, 0.9691, 0.0216,  ..., 0.0162, 0.9780, 0.9193],
         [0.0151, 0.0103, 0.9351,  ..., 0.9513, 0.0073, 0.0254]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:33,096 [Process: 0] Synchronize training processes
2024-08-18 15:03:33,096 [Process: 0] Evaluating...
2024-08-18 15:03:33,098 [Process: 0] EPOCH 74:
2024-08-18 15:03:33,100 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0360, 0.0015, 0.9426,  ..., 0.0482, 0.0832, 0.0351],
         [0.0360, 0.0015, 0.0138,  ..., 0.0459, 0.0381, 0.0351],
         [0.8910, 0.0015, 0.0138,  ..., 0.8599, 0.0381, 0.8946],
         [0.0371, 0.9956, 0.0297,  ..., 0.0459, 0.8406, 0.0351]],
        [[0.0239, 0.0016, 0.0012,  ..., 0.0283, 0.0411, 0.9739],
         [0.0239, 0.0016, 0.0012,  ..., 0.0283, 0.0411, 0.0087],
         [0.9284, 0.0016, 0.0012,  ..., 0.9150, 0.8739, 0.0087],
         [0.0239, 0.9953, 0.9965,  ..., 0.0283, 0.0438, 0.0087]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9966, 0.0056, 0.0162,  ..., 0.9662, 0.9425, 0.0171],
         [0.0011, 0.0056, 0.0162,  ..., 0.0113, 0.0170, 0.0171],
         [0.0011, 0.0056, 0.0162,  ..., 0.0113, 0.0170, 0.0171],
         [0.0011, 0.9831, 0.9514,  ..., 0.0113, 0.0235, 0.9486]],
        [[0.9726, 0.0237, 0.0133,  ..., 0.0193, 0.0118, 0.0253],
         [0.0091, 0.0237, 0.0133,  ..., 0.0193, 0.0118, 0.0253],
         [0.0091, 0.9290, 0.0133,  ..., 0.0193, 0.9647, 0.9240],
         [0.0091, 0.0237, 0.9601,  ..., 0.9421, 0.0118, 0.0253]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0350, 0.0055, 0.9627,  ..., 0.0318, 0.0061, 0.0231],
         [0.0350, 0.0055, 0.0124,  ..., 0.0318, 0.0061, 0.0231],
         [0.8951, 0.0055, 0.0124,  ..., 0.9047, 0.0061, 0.9307],
         [0.0350, 0.9834, 0.0124,  ..., 0.0318, 0.9817, 0.0231]],
        [[0.0380, 0.0032, 0.0012,  ..., 0.0331, 0.0271, 0.9650],
         [0.0380, 0.0029, 0.0012,  ..., 0.0331, 0.0271, 0.0117],
         [0.8860, 0.0029, 0.0012,  ..., 0.9008, 0.9188, 0.0117],
         [0.0380, 0.9910, 0.9963,  ..., 0.0331, 0.0271, 0.0117]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 15:03:34,179 [Process: 0] Synchronize training processes
2024-08-18 15:03:34,179 [Process: 0] Evaluating...
2024-08-18 15:03:34,181 [Process: 0] EPOCH 75:
2024-08-18 15:03:34,183 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:35,259 [Process: 0] Synchronize training processes
2024-08-18 15:03:35,259 [Process: 0] Evaluating...
2024-08-18 15:03:35,261 [Process: 0] EPOCH 76:
2024-08-18 15:03:35,263 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9247, 0.0122, 0.0133,  ..., 0.9685, 0.7133, 0.0230],
         [0.0251, 0.0122, 0.0133,  ..., 0.0105, 0.0530, 0.0230],
         [0.0251, 0.0122, 0.0133,  ..., 0.0105, 0.0651, 0.0230],
         [0.0251, 0.9635, 0.9600,  ..., 0.0105, 0.1686, 0.9311]],
        [[0.9817, 0.0187, 0.0163,  ..., 0.0229, 0.0263, 0.0198],
         [0.0061, 0.0187, 0.0163,  ..., 0.0229, 0.0236, 0.0198],
         [0.0061, 0.9438, 0.0163,  ..., 0.0287, 0.9265, 0.9405],
         [0.0061, 0.0187, 0.9512,  ..., 0.9256, 0.0236, 0.0198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0210, 0.0078, 0.8943,  ..., 0.0386, 0.0037, 0.0182],
         [0.0210, 0.0078, 0.0232,  ..., 0.0386, 0.0035, 0.0182],
         [0.9370, 0.0078, 0.0232,  ..., 0.8791, 0.0035, 0.9455],
         [0.0210, 0.9765, 0.0594,  ..., 0.0437, 0.9894, 0.0182]],
        [[0.0266, 0.0046, 0.0035,  ..., 0.0865, 0.0243, 0.9061],
         [0.0266, 0.0046, 0.0035,  ..., 0.0749, 0.0243, 0.0268],
         [0.9202, 0.0046, 0.0035,  ..., 0.6213, 0.9272, 0.0268],
         [0.0266, 0.9863, 0.9896,  ..., 0.2174, 0.0243, 0.0404]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9341, 0.0126, 0.0073,  ..., 0.9449, 0.9785, 0.0163],
         [0.0154, 0.0126, 0.0073,  ..., 0.0172, 0.0072, 0.0163],
         [0.0351, 0.0126, 0.0073,  ..., 0.0163, 0.0072, 0.0163],
         [0.0154, 0.9621, 0.9781,  ..., 0.0216, 0.0072, 0.9511]],
        [[0.9595, 0.0239, 0.0187,  ..., 0.0138, 0.0211, 0.0433],
         [0.0150, 0.0239, 0.0187,  ..., 0.0138, 0.0211, 0.0319],
         [0.0127, 0.9282, 0.0192,  ..., 0.0138, 0.9368, 0.8936],
         [0.0128, 0.0239, 0.9434,  ..., 0.9587, 0.0211, 0.0312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2998e-02, 7.8737e-04, 9.6489e-01,  ..., 2.2638e-02,
          1.1514e-03, 3.1637e-02],
         [3.2998e-02, 7.8737e-04, 1.1702e-02,  ..., 2.2638e-02,
          1.1514e-03, 3.1637e-02],
         [9.0101e-01, 7.8737e-04, 1.1702e-02,  ..., 9.3209e-01,
          1.1514e-03, 9.0509e-01],
         [3.2998e-02, 9.9764e-01, 1.1702e-02,  ..., 2.2638e-02,
          9.9655e-01, 3.1637e-02]],
        [[2.5843e-02, 6.3019e-03, 2.7118e-03,  ..., 2.5236e-02,
          3.1659e-02, 9.6343e-01],
         [2.5843e-02, 6.3019e-03, 2.7118e-03,  ..., 2.5236e-02,
          3.1659e-02, 1.2190e-02],
         [9.2247e-01, 6.3019e-03, 2.7118e-03,  ..., 9.2429e-01,
          9.0502e-01, 1.2190e-02],
         [2.5843e-02, 9.8109e-01, 9.9186e-01,  ..., 2.5236e-02,
          3.1659e-02, 1.2190e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:36,345 [Process: 0] Synchronize training processes
2024-08-18 15:03:36,345 [Process: 0] Evaluating...
2024-08-18 15:03:36,347 [Process: 0] EPOCH 77:
2024-08-18 15:03:36,348 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:37,427 [Process: 0] Synchronize training processes
2024-08-18 15:03:37,427 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9927, 0.0204, 0.0181,  ..., 0.9733, 0.9224, 0.0220],
         [0.0024, 0.0204, 0.0181,  ..., 0.0089, 0.0204, 0.0220],
         [0.0024, 0.0204, 0.0181,  ..., 0.0089, 0.0204, 0.0232],
         [0.0024, 0.9387, 0.9456,  ..., 0.0089, 0.0368, 0.9329]],
        [[0.9651, 0.0280, 0.0185,  ..., 0.0207, 0.0148, 0.0225],
         [0.0116, 0.0233, 0.0185,  ..., 0.0207, 0.0148, 0.0225],
         [0.0116, 0.9254, 0.0185,  ..., 0.0207, 0.9555, 0.9326],
         [0.0116, 0.0233, 0.9444,  ..., 0.9378, 0.0148, 0.0225]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5608e-02, 3.6488e-04, 9.7566e-01,  ..., 2.4285e-02,
          1.0939e-03, 3.5256e-02],
         [3.5608e-02, 3.6488e-04, 8.1138e-03,  ..., 2.4285e-02,
          1.0939e-03, 3.5256e-02],
         [8.9318e-01, 3.6488e-04, 8.1138e-03,  ..., 9.2715e-01,
          1.0939e-03, 8.9423e-01],
         [3.5608e-02, 9.9891e-01, 8.1138e-03,  ..., 2.4285e-02,
          9.9672e-01, 3.5256e-02]],
        [[5.9833e-02, 3.8367e-03, 1.1591e-03,  ..., 2.7749e-02,
          3.4413e-02, 9.6951e-01],
         [4.5716e-02, 3.8367e-03, 1.1591e-03,  ..., 2.7749e-02,
          3.4413e-02, 1.0164e-02],
         [8.4813e-01, 3.8367e-03, 1.1591e-03,  ..., 9.1675e-01,
          8.8857e-01, 1.0164e-02],
         [4.6320e-02, 9.8849e-01, 9.9652e-01,  ..., 2.7749e-02,
          4.2608e-02, 1.0164e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9768, 0.0124, 0.0084,  ..., 0.9790, 0.7139, 0.0123],
         [0.0077, 0.0124, 0.0084,  ..., 0.0070, 0.0412, 0.0123],
         [0.0077, 0.0124, 0.0084,  ..., 0.0070, 0.0412, 0.0123],
         [0.0077, 0.9628, 0.9749,  ..., 0.0070, 0.2037, 0.9630]],
        [[0.1795, 0.0137, 0.0086,  ..., 0.0110, 0.0151, 0.0210],
         [0.0538, 0.0137, 0.0086,  ..., 0.0110, 0.0151, 0.0210],
         [0.7129, 0.9590, 0.0086,  ..., 0.0110, 0.9548, 0.9371],
         [0.0538, 0.0137, 0.9741,  ..., 0.9669, 0.0151, 0.0210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0288, 0.0140, 0.9655,  ..., 0.0300, 0.0022, 0.0228],
         [0.0288, 0.0081, 0.0107,  ..., 0.0300, 0.0022, 0.0228],
         [0.9135, 0.0081, 0.0107,  ..., 0.9099, 0.0022, 0.9316],
         [0.0288, 0.9699, 0.0132,  ..., 0.0300, 0.9934, 0.0228]],
        [[0.0202, 0.0012, 0.0039,  ..., 0.0298, 0.0332, 0.9805],
         [0.0202, 0.0012, 0.0038,  ..., 0.0298, 0.0332, 0.0065],
         [0.9394, 0.0012, 0.0038,  ..., 0.9106, 0.9005, 0.0065],
         [0.0202, 0.9963, 0.9884,  ..., 0.0298, 0.0332, 0.0065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:37,429 [Process: 0] EPOCH 78:
2024-08-18 15:03:37,430 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:38,510 [Process: 0] Synchronize training processes
2024-08-18 15:03:38,510 [Process: 0] Evaluating...
2024-08-18 15:03:38,512 [Process: 0] EPOCH 79:
2024-08-18 15:03:38,514 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:39,608 [Process: 0] Synchronize training processes
2024-08-18 15:03:39,609 [Process: 0] Evaluating...
2024-08-18 15:03:39,611 [Process: 0] EPOCH 80:
2024-08-18 15:03:39,612 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9550, 0.0293, 0.0080,  ..., 0.9541, 0.9861, 0.0151],
         [0.0150, 0.0262, 0.0080,  ..., 0.0149, 0.0046, 0.0151],
         [0.0150, 0.0262, 0.0080,  ..., 0.0162, 0.0046, 0.0151],
         [0.0150, 0.9183, 0.9759,  ..., 0.0149, 0.0046, 0.9546]],
        [[0.2030, 0.0299, 0.0047,  ..., 0.0116, 0.0097, 0.0208],
         [0.0552, 0.0242, 0.0047,  ..., 0.0116, 0.0097, 0.0208],
         [0.6867, 0.9216, 0.0047,  ..., 0.0116, 0.9708, 0.9377],
         [0.0552, 0.0242, 0.9860,  ..., 0.9651, 0.0097, 0.0208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.5519e-02, 6.3957e-04, 9.7720e-01,  ..., 3.0155e-02,
          7.8988e-04, 9.9291e-02],
         [4.6138e-02, 6.3957e-04, 7.5992e-03,  ..., 3.0155e-02,
          7.8988e-04, 5.5745e-02],
         [8.5118e-01, 6.3957e-04, 7.5992e-03,  ..., 9.0954e-01,
          7.8988e-04, 7.7282e-01],
         [4.7161e-02, 9.9808e-01, 7.5992e-03,  ..., 3.0155e-02,
          9.9763e-01, 7.2147e-02]],
        [[3.2548e-02, 2.8637e-03, 9.0278e-03,  ..., 3.6983e-02,
          2.8160e-02, 9.8248e-01],
         [3.2548e-02, 2.8637e-03, 8.1215e-03,  ..., 3.6983e-02,
          2.8160e-02, 5.8390e-03],
         [9.0236e-01, 2.8637e-03, 8.1215e-03,  ..., 8.8140e-01,
          9.1552e-01, 5.8390e-03],
         [3.2548e-02, 9.9141e-01, 9.7473e-01,  ..., 4.4637e-02,
          2.8160e-02, 5.8390e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9587, 0.0249, 0.0105,  ..., 0.9804, 0.9416, 0.0340],
         [0.0132, 0.0249, 0.0105,  ..., 0.0065, 0.0175, 0.0291],
         [0.0148, 0.0249, 0.0105,  ..., 0.0065, 0.0175, 0.0291],
         [0.0132, 0.9253, 0.9685,  ..., 0.0065, 0.0234, 0.9079]],
        [[0.9555, 0.0093, 0.0190,  ..., 0.0502, 0.0105, 0.0213],
         [0.0139, 0.0093, 0.0179,  ..., 0.0341, 0.0105, 0.0203],
         [0.0167, 0.9722, 0.0179,  ..., 0.0341, 0.9684, 0.9382],
         [0.0139, 0.0093, 0.9453,  ..., 0.8815, 0.0105, 0.0203]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6364e-02, 2.0916e-03, 9.8635e-01,  ..., 2.6992e-02,
          8.1853e-03, 2.9983e-02],
         [3.6364e-02, 2.0916e-03, 4.5510e-03,  ..., 2.6992e-02,
          8.1853e-03, 2.9983e-02],
         [8.9091e-01, 2.0916e-03, 4.5510e-03,  ..., 9.1902e-01,
          8.1853e-03, 9.1005e-01],
         [3.6364e-02, 9.9373e-01, 4.5510e-03,  ..., 2.6992e-02,
          9.7544e-01, 2.9983e-02]],
        [[2.6229e-02, 3.0733e-03, 5.1393e-04,  ..., 2.3196e-02,
          2.5333e-02, 9.6531e-01],
         [2.6229e-02, 3.0733e-03, 5.1393e-04,  ..., 2.3196e-02,
          2.5333e-02, 1.1564e-02],
         [9.2131e-01, 3.0733e-03, 5.1393e-04,  ..., 9.3041e-01,
          9.2400e-01, 1.1564e-02],
         [2.6229e-02, 9.9078e-01, 9.9846e-01,  ..., 2.3196e-02,
          2.5333e-02, 1.1564e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:40,690 [Process: 0] Synchronize training processes
2024-08-18 15:03:40,690 [Process: 0] Evaluating...
2024-08-18 15:03:40,692 [Process: 0] EPOCH 81:
2024-08-18 15:03:40,694 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:41,771 [Process: 0] Synchronize training processes
2024-08-18 15:03:41,771 [Process: 0] Evaluating...
2024-08-18 15:03:41,775 [Process: 0] EPOCH 82:
2024-08-18 15:03:41,777 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9939, 0.0139, 0.0149,  ..., 0.9835, 0.9625, 0.0106],
         [0.0020, 0.0139, 0.0149,  ..., 0.0055, 0.0125, 0.0106],
         [0.0020, 0.0139, 0.0149,  ..., 0.0055, 0.0125, 0.0106],
         [0.0020, 0.9583, 0.9554,  ..., 0.0055, 0.0125, 0.9681]],
        [[0.9602, 0.0073, 0.0124,  ..., 0.0408, 0.0111, 0.0266],
         [0.0133, 0.0073, 0.0124,  ..., 0.0398, 0.0111, 0.0229],
         [0.0133, 0.9780, 0.0124,  ..., 0.0539, 0.9668, 0.9275],
         [0.0133, 0.0073, 0.9628,  ..., 0.8655, 0.0111, 0.0229]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0206, 0.0043, 0.9903,  ..., 0.0408, 0.0012, 0.0326],
         [0.0206, 0.0043, 0.0032,  ..., 0.0408, 0.0012, 0.0326],
         [0.9383, 0.0043, 0.0032,  ..., 0.8669, 0.0012, 0.9022],
         [0.0206, 0.9870, 0.0034,  ..., 0.0515, 0.9965, 0.0326]],
        [[0.0516, 0.0021, 0.0044,  ..., 0.0247, 0.0397, 0.9804],
         [0.0440, 0.0021, 0.0044,  ..., 0.0247, 0.0394, 0.0065],
         [0.8505, 0.0021, 0.0044,  ..., 0.9260, 0.8762, 0.0065],
         [0.0539, 0.9936, 0.9868,  ..., 0.0247, 0.0447, 0.0065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9946, 0.0401, 0.0276,  ..., 0.9768, 0.9702, 0.0193],
         [0.0018, 0.0268, 0.0276,  ..., 0.0077, 0.0099, 0.0193],
         [0.0018, 0.0268, 0.0349,  ..., 0.0077, 0.0099, 0.0193],
         [0.0018, 0.9063, 0.9100,  ..., 0.0077, 0.0099, 0.9420]],
        [[0.8657, 0.0113, 0.0078,  ..., 0.9749, 0.0193, 0.0187],
         [0.0310, 0.0113, 0.0078,  ..., 0.0084, 0.0193, 0.0187],
         [0.0724, 0.9660, 0.0078,  ..., 0.0084, 0.9421, 0.9438],
         [0.0310, 0.0113, 0.9765,  ..., 0.0084, 0.0193, 0.0187]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:42,857 [Process: 0] Synchronize training processes
2024-08-18 15:03:42,857 [Process: 0] Evaluating...
2024-08-18 15:03:42,859 [Process: 0] EPOCH 83:
2024-08-18 15:03:42,861 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:43,939 [Process: 0] Synchronize training processes
2024-08-18 15:03:43,940 [Process: 0] Evaluating...
2024-08-18 15:03:43,941 [Process: 0] EPOCH 84:
2024-08-18 15:03:43,943 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7100e-02, 1.1939e-03, 9.5259e-01,  ..., 2.6311e-02,
          1.3638e-04, 3.7699e-02],
         [3.7100e-02, 1.1939e-03, 1.5612e-02,  ..., 2.6311e-02,
          1.3638e-04, 3.7699e-02],
         [8.8847e-01, 1.1939e-03, 1.5612e-02,  ..., 9.2107e-01,
          1.3638e-04, 8.8681e-01],
         [3.7326e-02, 9.9642e-01, 1.6190e-02,  ..., 2.6311e-02,
          9.9959e-01, 3.7793e-02]],
        [[3.0186e-02, 1.1198e-03, 2.9870e-02,  ..., 2.9627e-02,
          2.4612e-02, 9.8531e-01],
         [3.0186e-02, 1.1198e-03, 2.9645e-02,  ..., 2.9627e-02,
          2.4612e-02, 4.8972e-03],
         [9.0944e-01, 1.1198e-03, 9.1084e-01,  ..., 9.1112e-01,
          9.2616e-01, 4.8972e-03],
         [3.0186e-02, 9.9664e-01, 2.9645e-02,  ..., 2.9627e-02,
          2.4612e-02, 4.8972e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9664, 0.0024, 0.0366,  ..., 0.9669, 0.9484, 0.0394],
         [0.0112, 0.0024, 0.0295,  ..., 0.0110, 0.0171, 0.0304],
         [0.0112, 0.0024, 0.0295,  ..., 0.0110, 0.0174, 0.0304],
         [0.0112, 0.9927, 0.9044,  ..., 0.0110, 0.0171, 0.8999]],
        [[0.9649, 0.0172, 0.0055,  ..., 0.0270, 0.0192, 0.0210],
         [0.0117, 0.0172, 0.0055,  ..., 0.0239, 0.0192, 0.0208],
         [0.0117, 0.9484, 0.0055,  ..., 0.0239, 0.9425, 0.9373],
         [0.0117, 0.0172, 0.9834,  ..., 0.9252, 0.0192, 0.0208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9537e-02, 2.2435e-03, 9.7721e-01,  ..., 3.2561e-02,
          1.0179e-03, 2.7180e-02],
         [3.8691e-02, 2.2435e-03, 6.8635e-03,  ..., 3.2561e-02,
          1.0179e-03, 2.7180e-02],
         [8.8084e-01, 2.2435e-03, 6.8635e-03,  ..., 9.0225e-01,
          1.0179e-03, 9.1846e-01],
         [4.0930e-02, 9.9327e-01, 9.0593e-03,  ..., 3.2627e-02,
          9.9695e-01, 2.7180e-02]],
        [[2.4177e-02, 6.7939e-04, 5.6646e-03,  ..., 5.4859e-02,
          5.0542e-02, 9.4578e-01],
         [2.4177e-02, 6.7939e-04, 5.6646e-03,  ..., 4.6066e-02,
          4.1540e-02, 1.3205e-02],
         [9.2747e-01, 6.7939e-04, 5.6646e-03,  ..., 8.3663e-01,
          8.6260e-01, 1.3205e-02],
         [2.4177e-02, 9.9796e-01, 9.8301e-01,  ..., 6.2442e-02,
          4.5317e-02, 2.7812e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9607, 0.0100, 0.0051,  ..., 0.9743, 0.9830, 0.0467],
         [0.0125, 0.0100, 0.0051,  ..., 0.0086, 0.0057, 0.0290],
         [0.0143, 0.0100, 0.0051,  ..., 0.0086, 0.0057, 0.0290],
         [0.0125, 0.9700, 0.9848,  ..., 0.0086, 0.0057, 0.8954]],
        [[0.9714, 0.0125, 0.0181,  ..., 0.0173, 0.0123, 0.0170],
         [0.0093, 0.0125, 0.0181,  ..., 0.0173, 0.0123, 0.0170],
         [0.0093, 0.9624, 0.0181,  ..., 0.0173, 0.9631, 0.9491],
         [0.0099, 0.0125, 0.9458,  ..., 0.9481, 0.0123, 0.0170]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:45,022 [Process: 0] Synchronize training processes
2024-08-18 15:03:45,022 [Process: 0] Evaluating...
2024-08-18 15:03:45,024 [Process: 0] EPOCH 85:
2024-08-18 15:03:45,025 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:46,099 [Process: 0] Synchronize training processes
2024-08-18 15:03:46,099 [Process: 0] Evaluating...
2024-08-18 15:03:46,101 [Process: 0] EPOCH 86:
2024-08-18 15:03:46,103 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9237e-02, 2.6398e-02, 9.7705e-01,  ..., 3.3927e-02,
          2.7051e-02, 5.8187e-02],
         [2.9237e-02, 1.2201e-02, 6.6866e-03,  ..., 3.3927e-02,
          2.7051e-02, 4.6460e-02],
         [9.1229e-01, 1.1800e-02, 6.6866e-03,  ..., 8.9450e-01,
          4.3721e-02, 8.3745e-01],
         [2.9237e-02, 9.4960e-01, 9.5719e-03,  ..., 3.7645e-02,
          9.0218e-01, 5.7902e-02]],
        [[3.8508e-02, 9.3489e-04, 2.0175e-03,  ..., 3.3970e-02,
          4.1457e-02, 9.8502e-01],
         [3.8508e-02, 9.3489e-04, 2.0175e-03,  ..., 3.3970e-02,
          4.1457e-02, 4.9949e-03],
         [8.7947e-01, 9.3489e-04, 2.0175e-03,  ..., 8.9809e-01,
          8.5577e-01, 4.9949e-03],
         [4.3516e-02, 9.9720e-01, 9.9395e-01,  ..., 3.3970e-02,
          6.1316e-02, 4.9949e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9631, 0.0116, 0.0103,  ..., 0.9938, 0.7218, 0.0093],
         [0.0105, 0.0116, 0.0103,  ..., 0.0021, 0.0446, 0.0093],
         [0.0159, 0.0116, 0.0103,  ..., 0.0021, 0.0478, 0.0093],
         [0.0105, 0.9651, 0.9691,  ..., 0.0021, 0.1858, 0.9720]],
        [[0.0188, 0.0148, 0.0352,  ..., 0.0128, 0.0148, 0.0208],
         [0.0202, 0.0148, 0.0189,  ..., 0.0128, 0.0148, 0.0193],
         [0.9423, 0.9555, 0.0189,  ..., 0.0128, 0.9555, 0.9405],
         [0.0188, 0.0148, 0.9269,  ..., 0.9615, 0.0148, 0.0193]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0190, 0.0040, 0.9760,  ..., 0.0304, 0.0015, 0.0173],
         [0.0190, 0.0040, 0.0080,  ..., 0.0304, 0.0015, 0.0173],
         [0.9429, 0.0040, 0.0080,  ..., 0.9087, 0.0015, 0.9482],
         [0.0190, 0.9879, 0.0080,  ..., 0.0304, 0.9954, 0.0173]],
        [[0.0249, 0.0027, 0.0025,  ..., 0.0213, 0.0306, 0.9576],
         [0.0249, 0.0027, 0.0025,  ..., 0.0213, 0.0306, 0.0132],
         [0.9252, 0.0027, 0.0025,  ..., 0.9361, 0.9082, 0.0132],
         [0.0249, 0.9918, 0.9925,  ..., 0.0213, 0.0306, 0.0161]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9960, 0.0099, 0.0095,  ..., 0.9959, 0.2345, 0.0133],
         [0.0013, 0.0099, 0.0095,  ..., 0.0014, 0.0489, 0.0133],
         [0.0013, 0.0099, 0.0095,  ..., 0.0014, 0.0489, 0.0133],
         [0.0013, 0.9704, 0.9715,  ..., 0.0014, 0.6678, 0.9601]],
        [[0.0170, 0.0152, 0.0079,  ..., 0.0192, 0.0089, 0.0129],
         [0.0170, 0.0152, 0.0079,  ..., 0.0192, 0.0089, 0.0129],
         [0.9489, 0.9543, 0.0079,  ..., 0.0192, 0.9734, 0.9614],
         [0.0170, 0.0152, 0.9763,  ..., 0.9424, 0.0089, 0.0129]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:47,181 [Process: 0] Synchronize training processes
2024-08-18 15:03:47,181 [Process: 0] Evaluating...
2024-08-18 15:03:47,183 [Process: 0] EPOCH 87:
2024-08-18 15:03:47,185 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1868e-02, 5.0614e-04, 9.7146e-01,  ..., 2.7961e-02,
          1.2972e-03, 2.2865e-02],
         [3.1868e-02, 5.0614e-04, 9.1035e-03,  ..., 2.7961e-02,
          1.2972e-03, 2.2865e-02],
         [9.0412e-01, 5.0614e-04, 9.1035e-03,  ..., 9.1612e-01,
          1.2972e-03, 9.3141e-01],
         [3.2146e-02, 9.9848e-01, 1.0330e-02,  ..., 2.7961e-02,
          9.9611e-01, 2.2865e-02]],
        [[2.6654e-02, 9.1066e-04, 3.0500e-03,  ..., 4.4483e-02,
          2.8349e-02, 9.7299e-01],
         [2.6654e-02, 9.1066e-04, 3.0500e-03,  ..., 4.1032e-02,
          2.8349e-02, 8.9753e-03],
         [9.2004e-01, 9.1066e-04, 3.0500e-03,  ..., 8.6541e-01,
          9.1495e-01, 8.9753e-03],
         [2.6654e-02, 9.9727e-01, 9.9085e-01,  ..., 4.9073e-02,
          2.8349e-02, 9.0594e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9855, 0.0099, 0.0144,  ..., 0.9909, 0.0151, 0.0176],
         [0.0047, 0.0099, 0.0139,  ..., 0.0030, 0.0151, 0.0153],
         [0.0052, 0.0099, 0.0139,  ..., 0.0030, 0.0151, 0.0153],
         [0.0047, 0.9702, 0.9579,  ..., 0.0030, 0.9548, 0.9518]],
        [[0.0410, 0.0646, 0.0036,  ..., 0.0635, 0.0135, 0.0154],
         [0.0364, 0.0646, 0.0036,  ..., 0.0371, 0.0135, 0.0154],
         [0.8862, 0.6546, 0.0036,  ..., 0.0408, 0.9595, 0.9539],
         [0.0364, 0.2162, 0.9891,  ..., 0.8586, 0.0135, 0.0154]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2616e-02, 3.7138e-03, 9.2635e-01,  ..., 2.2906e-02,
          1.0002e-03, 3.1258e-02],
         [2.2616e-02, 3.7138e-03, 1.9857e-02,  ..., 2.2906e-02,
          1.0002e-03, 3.1258e-02],
         [9.3215e-01, 3.7138e-03, 1.7430e-02,  ..., 9.3128e-01,
          1.0002e-03, 9.0568e-01],
         [2.2616e-02, 9.8886e-01, 3.6362e-02,  ..., 2.2906e-02,
          9.9700e-01, 3.1809e-02]],
        [[2.5609e-02, 6.8505e-04, 4.5987e-03,  ..., 3.1666e-02,
          3.9167e-02, 9.7883e-01],
         [2.5609e-02, 6.8505e-04, 4.5987e-03,  ..., 3.1666e-02,
          3.9167e-02, 6.6200e-03],
         [9.2233e-01, 6.8505e-04, 4.5987e-03,  ..., 9.0402e-01,
          8.6701e-01, 6.6200e-03],
         [2.6455e-02, 9.9794e-01, 9.8620e-01,  ..., 3.2646e-02,
          5.4659e-02, 7.9348e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 15:03:48,259 [Process: 0] Synchronize training processes
2024-08-18 15:03:48,259 [Process: 0] Evaluating...
2024-08-18 15:03:48,261 [Process: 0] EPOCH 88:
2024-08-18 15:03:48,263 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:49,345 [Process: 0] Synchronize training processes
2024-08-18 15:03:49,346 [Process: 0] Evaluating...
2024-08-18 15:03:49,348 [Process: 0] EPOCH 89:
2024-08-18 15:03:49,349 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7791, 0.0325, 0.0284,  ..., 0.9829, 0.9927, 0.0271],
         [0.0427, 0.0194, 0.0198,  ..., 0.0057, 0.0024, 0.0271],
         [0.1356, 0.0194, 0.0198,  ..., 0.0057, 0.0024, 0.0321],
         [0.0427, 0.9287, 0.9319,  ..., 0.0057, 0.0024, 0.9137]],
        [[0.2326, 0.0116, 0.0065,  ..., 0.0261, 0.0171, 0.0230],
         [0.0928, 0.0104, 0.0065,  ..., 0.0261, 0.0171, 0.0230],
         [0.3926, 0.0104, 0.0065,  ..., 0.0342, 0.9486, 0.9309],
         [0.2821, 0.9675, 0.9805,  ..., 0.9136, 0.0171, 0.0230]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0235, 0.0140, 0.9882,  ..., 0.0335, 0.0012, 0.0146],
         [0.0235, 0.0104, 0.0039,  ..., 0.0335, 0.0012, 0.0146],
         [0.9296, 0.0104, 0.0039,  ..., 0.8959, 0.0012, 0.9563],
         [0.0235, 0.9652, 0.0039,  ..., 0.0371, 0.9964, 0.0146]],
        [[0.0284, 0.0081, 0.0064,  ..., 0.0195, 0.0246, 0.9798],
         [0.0284, 0.0075, 0.0064,  ..., 0.0195, 0.0246, 0.0067],
         [0.9147, 0.0075, 0.0064,  ..., 0.9415, 0.9263, 0.0067],
         [0.0284, 0.9770, 0.9808,  ..., 0.0195, 0.0246, 0.0067]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9693, 0.0057, 0.0078,  ..., 0.9884, 0.0159, 0.0037],
         [0.0102, 0.0057, 0.0078,  ..., 0.0039, 0.0153, 0.0037],
         [0.0102, 0.0057, 0.0078,  ..., 0.0039, 0.0153, 0.0037],
         [0.0102, 0.9828, 0.9767,  ..., 0.0039, 0.9535, 0.9889]],
        [[0.6730, 0.0038, 0.0236,  ..., 0.0066, 0.0130, 0.0065],
         [0.0653, 0.0038, 0.0159,  ..., 0.0066, 0.0130, 0.0065],
         [0.1208, 0.0038, 0.0159,  ..., 0.0066, 0.9609, 0.0065],
         [0.1409, 0.9887, 0.9447,  ..., 0.9802, 0.0130, 0.9804]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0283, 0.0093, 0.9791,  ..., 0.0253, 0.0011, 0.0252],
         [0.0283, 0.0077, 0.0067,  ..., 0.0253, 0.0011, 0.0252],
         [0.9150, 0.0077, 0.0067,  ..., 0.9241, 0.0011, 0.9243],
         [0.0283, 0.9753, 0.0074,  ..., 0.0253, 0.9967, 0.0252]],
        [[0.0261, 0.0069, 0.0112,  ..., 0.0255, 0.0305, 0.9516],
         [0.0261, 0.0069, 0.0112,  ..., 0.0255, 0.0305, 0.0127],
         [0.9218, 0.0069, 0.0112,  ..., 0.9235, 0.9084, 0.0127],
         [0.0261, 0.9792, 0.9663,  ..., 0.0255, 0.0305, 0.0230]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:50,428 [Process: 0] Synchronize training processes
2024-08-18 15:03:50,428 [Process: 0] Evaluating...
2024-08-18 15:03:50,429 [Process: 0] EPOCH 90:
2024-08-18 15:03:50,431 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:51,509 [Process: 0] Synchronize training processes
2024-08-18 15:03:51,509 [Process: 0] Evaluating...
2024-08-18 15:03:51,511 [Process: 0] EPOCH 91:
2024-08-18 15:03:51,513 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9506, 0.0174, 0.0165,  ..., 0.9690, 0.0130, 0.0125],
         [0.0165, 0.0174, 0.0153,  ..., 0.0102, 0.0130, 0.0100],
         [0.0165, 0.0174, 0.0153,  ..., 0.0105, 0.0130, 0.0100],
         [0.0165, 0.9477, 0.9530,  ..., 0.0102, 0.9611, 0.9675]],
        [[0.0703, 0.0239, 0.0305,  ..., 0.0090, 0.0145, 0.0088],
         [0.0365, 0.0224, 0.0305,  ..., 0.0090, 0.0145, 0.0088],
         [0.8567, 0.0224, 0.0439,  ..., 0.0090, 0.9565, 0.0088],
         [0.0365, 0.9312, 0.8950,  ..., 0.9729, 0.0145, 0.9736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0552e-02, 1.5330e-02, 9.6563e-01,  ..., 2.8208e-02,
          2.7247e-04, 3.4470e-02],
         [2.0552e-02, 1.2809e-02, 9.1375e-03,  ..., 2.8208e-02,
          2.7247e-04, 3.0434e-02],
         [9.3834e-01, 1.2809e-02, 9.1375e-03,  ..., 9.1433e-01,
          2.7247e-04, 9.0430e-01],
         [2.0552e-02, 9.5905e-01, 1.6100e-02,  ..., 2.9255e-02,
          9.9918e-01, 3.0795e-02]],
        [[2.6574e-02, 3.3413e-03, 1.1990e-02,  ..., 3.1798e-02,
          2.1387e-02, 9.9489e-01],
         [2.6574e-02, 3.3413e-03, 1.1990e-02,  ..., 2.9652e-02,
          2.1387e-02, 1.7044e-03],
         [9.2028e-01, 3.3413e-03, 1.1990e-02,  ..., 9.0890e-01,
          9.3584e-01, 1.7044e-03],
         [2.6574e-02, 9.8998e-01, 9.6403e-01,  ..., 2.9652e-02,
          2.1387e-02, 1.7044e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9841, 0.0264, 0.0088,  ..., 0.9954, 0.0118, 0.0141],
         [0.0053, 0.0264, 0.0089,  ..., 0.0015, 0.0118, 0.0141],
         [0.0053, 0.0264, 0.0088,  ..., 0.0015, 0.0118, 0.0141],
         [0.0053, 0.9209, 0.9736,  ..., 0.0015, 0.9645, 0.9576]],
        [[0.1098, 0.0212, 0.0965,  ..., 0.0151, 0.0130, 0.0095],
         [0.0345, 0.0212, 0.0485,  ..., 0.0151, 0.0130, 0.0095],
         [0.8212, 0.0294, 0.0678,  ..., 0.0151, 0.9609, 0.0095],
         [0.0345, 0.9283, 0.7873,  ..., 0.9546, 0.0130, 0.9716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0268, 0.9549, 0.9846,  ..., 0.0232, 0.0071, 0.0310],
         [0.0268, 0.0104, 0.0051,  ..., 0.0232, 0.0071, 0.0301],
         [0.9196, 0.0104, 0.0051,  ..., 0.9305, 0.0071, 0.9087],
         [0.0268, 0.0243, 0.0051,  ..., 0.0232, 0.9786, 0.0302]],
        [[0.0234, 0.0039, 0.0019,  ..., 0.0200, 0.0289, 0.9908],
         [0.0234, 0.0039, 0.0019,  ..., 0.0200, 0.0279, 0.0031],
         [0.9297, 0.0039, 0.0019,  ..., 0.9401, 0.9153, 0.0031],
         [0.0234, 0.9883, 0.9943,  ..., 0.0200, 0.0279, 0.0031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:52,590 [Process: 0] Synchronize training processes
2024-08-18 15:03:52,590 [Process: 0] Evaluating...
2024-08-18 15:03:52,595 [Process: 0] EPOCH 92:
2024-08-18 15:03:52,597 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:53,676 [Process: 0] Synchronize training processes
2024-08-18 15:03:53,676 [Process: 0] Evaluating...
2024-08-18 15:03:53,678 [Process: 0] EPOCH 93:
2024-08-18 15:03:53,680 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9953, 0.0107, 0.0262,  ..., 0.9761, 0.0254, 0.0353],
         [0.0016, 0.0109, 0.0262,  ..., 0.0080, 0.0254, 0.0272],
         [0.0016, 0.0107, 0.0305,  ..., 0.0080, 0.0264, 0.0280],
         [0.0016, 0.9677, 0.9172,  ..., 0.0080, 0.9229, 0.9095]],
        [[0.8458, 0.0095, 0.0185,  ..., 0.0181, 0.0114, 0.0518],
         [0.0272, 0.0095, 0.0185,  ..., 0.0181, 0.0114, 0.0423],
         [0.0998, 0.0095, 0.0185,  ..., 0.0181, 0.9659, 0.0912],
         [0.0272, 0.9716, 0.9444,  ..., 0.9457, 0.0114, 0.8148]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4344e-02, 9.7219e-01, 9.7768e-01,  ..., 2.0722e-02,
          2.5520e-03, 3.4108e-02],
         [2.4344e-02, 9.2684e-03, 7.4401e-03,  ..., 2.0722e-02,
          2.4725e-03, 3.4108e-02],
         [9.2697e-01, 9.2684e-03, 7.4401e-03,  ..., 9.3783e-01,
          2.4725e-03, 8.9377e-01],
         [2.4344e-02, 9.2684e-03, 7.4401e-03,  ..., 2.0722e-02,
          9.9250e-01, 3.8014e-02]],
        [[2.5286e-02, 5.9450e-03, 4.9632e-04,  ..., 3.2411e-02,
          2.2549e-02, 9.6263e-01],
         [2.5286e-02, 5.9450e-03, 4.9632e-04,  ..., 3.2178e-02,
          2.2549e-02, 1.1295e-02],
         [9.2414e-01, 5.9450e-03, 4.9632e-04,  ..., 9.0215e-01,
          9.3235e-01, 1.1295e-02],
         [2.5286e-02, 9.8216e-01, 9.9851e-01,  ..., 3.3262e-02,
          2.2549e-02, 1.4778e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9965, 0.0153, 0.0180,  ..., 0.9857, 0.0298, 0.0116],
         [0.0012, 0.0153, 0.0180,  ..., 0.0048, 0.0228, 0.0116],
         [0.0012, 0.0189, 0.0180,  ..., 0.0048, 0.0228, 0.0116],
         [0.0012, 0.9505, 0.9461,  ..., 0.0048, 0.9246, 0.9652]],
        [[0.9799, 0.0210, 0.0138,  ..., 0.0357, 0.0102, 0.0167],
         [0.0067, 0.0210, 0.0138,  ..., 0.0244, 0.0102, 0.0167],
         [0.0067, 0.0216, 0.0138,  ..., 0.0244, 0.9693, 0.0167],
         [0.0067, 0.9365, 0.9586,  ..., 0.9156, 0.0102, 0.9499]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:03:54,823 [Process: 0] Synchronize training processes
2024-08-18 15:03:54,823 [Process: 0] Evaluating...
2024-08-18 15:03:54,825 [Process: 0] EPOCH 94:
2024-08-18 15:03:54,827 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:55,978 [Process: 0] Synchronize training processes
2024-08-18 15:03:55,979 [Process: 0] Evaluating...
2024-08-18 15:03:55,980 [Process: 0] EPOCH 95:
2024-08-18 15:03:55,982 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0260, 0.9868, 0.9343,  ..., 0.0265, 0.0141, 0.0192],
         [0.0260, 0.0047, 0.0190,  ..., 0.0265, 0.0124, 0.0192],
         [0.9221, 0.0043, 0.0190,  ..., 0.9205, 0.0124, 0.9424],
         [0.0260, 0.0043, 0.0276,  ..., 0.0265, 0.9611, 0.0192]],
        [[0.0267, 0.0025, 0.0048,  ..., 0.0252, 0.0286, 0.9627],
         [0.0267, 0.0025, 0.0048,  ..., 0.0252, 0.0286, 0.0118],
         [0.9199, 0.0025, 0.0048,  ..., 0.9244, 0.9117, 0.0118],
         [0.0267, 0.9926, 0.9856,  ..., 0.0252, 0.0311, 0.0137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9833, 0.0048, 0.0107,  ..., 0.9821, 0.0244, 0.0162],
         [0.0056, 0.0048, 0.0107,  ..., 0.0060, 0.0213, 0.0162],
         [0.0056, 0.0048, 0.0107,  ..., 0.0060, 0.0213, 0.0190],
         [0.0056, 0.9857, 0.9678,  ..., 0.0060, 0.9329, 0.9485]],
        [[0.0313, 0.0223, 0.0415,  ..., 0.0575, 0.0101, 0.1238],
         [0.0222, 0.0223, 0.0415,  ..., 0.0448, 0.0101, 0.0355],
         [0.9244, 0.0244, 0.1039,  ..., 0.0844, 0.9697, 0.0355],
         [0.0222, 0.9310, 0.8131,  ..., 0.8132, 0.0101, 0.8051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0215, 0.9894, 0.9885,  ..., 0.0162, 0.0092, 0.0267],
         [0.0215, 0.0035, 0.0036,  ..., 0.0162, 0.0063, 0.0267],
         [0.9356, 0.0035, 0.0036,  ..., 0.9514, 0.0063, 0.9168],
         [0.0215, 0.0035, 0.0042,  ..., 0.0162, 0.9781, 0.0297]],
        [[0.0234, 0.0193, 0.0017,  ..., 0.0255, 0.0312, 0.9948],
         [0.0234, 0.0160, 0.0017,  ..., 0.0255, 0.0312, 0.0017],
         [0.9297, 0.0178, 0.0017,  ..., 0.9236, 0.9064, 0.0017],
         [0.0234, 0.9469, 0.9948,  ..., 0.0255, 0.0312, 0.0017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9219, 0.0188, 0.0198,  ..., 0.9537, 0.0053, 0.0045],
         [0.0163, 0.0137, 0.0198,  ..., 0.0143, 0.0053, 0.0045],
         [0.0455, 0.0137, 0.0257,  ..., 0.0198, 0.0053, 0.0045],
         [0.0163, 0.9538, 0.9347,  ..., 0.0122, 0.9840, 0.9864]],
        [[0.0918, 0.0243, 0.0154,  ..., 0.0225, 0.0115, 0.0103],
         [0.0323, 0.0243, 0.0154,  ..., 0.0225, 0.0115, 0.0103],
         [0.8436, 0.0312, 0.0154,  ..., 0.0262, 0.9655, 0.0103],
         [0.0323, 0.9202, 0.9537,  ..., 0.9288, 0.0115, 0.9692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:03:57,130 [Process: 0] Synchronize training processes
2024-08-18 15:03:57,130 [Process: 0] Evaluating...
2024-08-18 15:03:57,132 [Process: 0] EPOCH 96:
2024-08-18 15:03:57,134 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3989e-02, 9.8468e-01, 9.8628e-01,  ..., 1.8356e-02,
          2.8372e-02, 1.6608e-02],
         [2.3989e-02, 4.8872e-03, 4.5742e-03,  ..., 1.8356e-02,
          9.7527e-03, 1.6608e-02],
         [9.2803e-01, 4.8872e-03, 4.5742e-03,  ..., 9.4493e-01,
          9.7527e-03, 9.5017e-01],
         [2.3989e-02, 5.5469e-03, 4.5742e-03,  ..., 1.8356e-02,
          9.5212e-01, 1.6608e-02]],
        [[3.1241e-02, 5.9367e-04, 2.9515e-03,  ..., 2.2606e-02,
          2.8809e-02, 9.6498e-01],
         [3.1241e-02, 5.9367e-04, 2.9515e-03,  ..., 2.2606e-02,
          2.7047e-02, 1.1438e-02],
         [8.9867e-01, 5.9367e-04, 2.9515e-03,  ..., 9.3218e-01,
          9.1710e-01, 1.1438e-02],
         [3.8852e-02, 9.9822e-01, 9.9115e-01,  ..., 2.2606e-02,
          2.7047e-02, 1.2146e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9913e-01, 9.0573e-03, 1.6488e-02,  ..., 9.8524e-01,
          4.1813e-03, 1.1104e-02],
         [2.8957e-04, 9.0573e-03, 1.2932e-02,  ..., 4.9186e-03,
          4.1813e-03, 1.1104e-02],
         [2.8957e-04, 9.0573e-03, 1.2932e-02,  ..., 4.9186e-03,
          4.1813e-03, 1.1104e-02],
         [2.8957e-04, 9.7283e-01, 9.5765e-01,  ..., 4.9186e-03,
          9.8746e-01, 9.6669e-01]],
        [[9.1736e-01, 2.2242e-02, 6.2658e-03,  ..., 2.2248e-02,
          7.5991e-03, 3.4445e-02],
         [1.8629e-02, 2.2242e-02, 6.2658e-03,  ..., 2.2248e-02,
          7.5991e-03, 3.4445e-02],
         [4.5382e-02, 2.2242e-02, 6.2658e-03,  ..., 2.2248e-02,
          9.7720e-01, 8.3280e-02],
         [1.8629e-02, 9.3327e-01, 9.8120e-01,  ..., 9.3325e-01,
          7.5991e-03, 8.4783e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8611e-02, 9.9004e-01, 9.7735e-01,  ..., 1.8114e-02,
          4.0119e-03, 2.2009e-02],
         [1.8611e-02, 3.3202e-03, 7.5495e-03,  ..., 1.8114e-02,
          4.0119e-03, 2.2009e-02],
         [9.4417e-01, 3.3202e-03, 7.5495e-03,  ..., 9.4566e-01,
          4.0119e-03, 9.3397e-01],
         [1.8611e-02, 3.3202e-03, 7.5495e-03,  ..., 1.8114e-02,
          9.8796e-01, 2.2009e-02]],
        [[2.4499e-02, 2.6530e-02, 3.7017e-04,  ..., 2.1046e-02,
          1.6584e-02, 9.9094e-01],
         [2.4499e-02, 1.4148e-02, 3.7017e-04,  ..., 2.1046e-02,
          1.6584e-02, 3.0185e-03],
         [9.2650e-01, 1.4148e-02, 3.7017e-04,  ..., 9.3686e-01,
          9.5025e-01, 3.0185e-03],
         [2.4499e-02, 9.4517e-01, 9.9889e-01,  ..., 2.1046e-02,
          1.6584e-02, 3.0185e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:03:58,283 [Process: 0] Synchronize training processes
2024-08-18 15:03:58,283 [Process: 0] Evaluating...
2024-08-18 15:03:58,285 [Process: 0] EPOCH 97:
2024-08-18 15:03:58,287 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:03:59,436 [Process: 0] Synchronize training processes
2024-08-18 15:03:59,436 [Process: 0] Evaluating...
2024-08-18 15:03:59,438 [Process: 0] EPOCH 98:
2024-08-18 15:03:59,440 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9813, 0.0159, 0.0159,  ..., 0.9933, 0.0060, 0.0070],
         [0.0062, 0.0159, 0.0159,  ..., 0.0022, 0.0060, 0.0070],
         [0.0062, 0.0159, 0.0159,  ..., 0.0022, 0.0060, 0.0070],
         [0.0062, 0.9522, 0.9522,  ..., 0.0022, 0.9821, 0.9790]],
        [[0.9602, 0.0091, 0.0058,  ..., 0.0125, 0.0068, 0.0107],
         [0.0120, 0.0091, 0.0058,  ..., 0.0125, 0.0068, 0.0107],
         [0.0158, 0.0091, 0.0058,  ..., 0.0125, 0.9797, 0.9679],
         [0.0120, 0.9727, 0.9826,  ..., 0.9624, 0.0068, 0.0107]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0255, 0.9628, 0.8756,  ..., 0.0255, 0.0020, 0.0185],
         [0.0255, 0.0100, 0.0283,  ..., 0.0255, 0.0020, 0.0185],
         [0.9234, 0.0100, 0.0291,  ..., 0.9234, 0.0020, 0.9445],
         [0.0255, 0.0172, 0.0670,  ..., 0.0255, 0.9941, 0.0185]],
        [[0.0209, 0.0141, 0.0020,  ..., 0.0218, 0.0288, 0.9791],
         [0.0209, 0.0100, 0.0020,  ..., 0.0218, 0.0288, 0.0062],
         [0.9372, 0.0100, 0.0020,  ..., 0.9347, 0.9130, 0.0062],
         [0.0209, 0.9660, 0.9939,  ..., 0.0218, 0.0295, 0.0085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9641, 0.0045, 0.0091,  ..., 0.9932, 0.3527, 0.0101],
         [0.0120, 0.0045, 0.0091,  ..., 0.0023, 0.0351, 0.0101],
         [0.0120, 0.0045, 0.0091,  ..., 0.0023, 0.0351, 0.0101],
         [0.0120, 0.9865, 0.9727,  ..., 0.0023, 0.5772, 0.9698]],
        [[0.0699, 0.0075, 0.0060,  ..., 0.0065, 0.0086, 0.0234],
         [0.0336, 0.0075, 0.0060,  ..., 0.0065, 0.0086, 0.0180],
         [0.8629, 0.0075, 0.0060,  ..., 0.0065, 0.9743, 0.9405],
         [0.0336, 0.9776, 0.9821,  ..., 0.9806, 0.0086, 0.0180]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2647e-02, 9.7062e-01, 8.0047e-01,  ..., 1.7036e-02,
          2.8964e-02, 2.3212e-02],
         [2.2647e-02, 9.6321e-03, 3.4233e-02,  ..., 1.7036e-02,
          2.8964e-02, 2.3212e-02],
         [9.3206e-01, 9.6321e-03, 3.7912e-02,  ..., 9.4889e-01,
          8.9364e-01, 9.3036e-01],
         [2.2647e-02, 1.0114e-02, 1.2739e-01,  ..., 1.7036e-02,
          4.8437e-02, 2.3212e-02]],
        [[2.8599e-02, 8.8761e-04, 1.5634e-03,  ..., 2.6391e-02,
          5.8497e-02, 9.9539e-01],
         [2.8599e-02, 8.8761e-04, 1.5634e-03,  ..., 2.6391e-02,
          4.1602e-02, 1.5378e-03],
         [9.1240e-01, 8.8761e-04, 1.5634e-03,  ..., 9.2083e-01,
          8.3952e-01, 1.5378e-03],
         [3.0399e-02, 9.9734e-01, 9.9531e-01,  ..., 2.6391e-02,
          6.0376e-02, 1.5378e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:00,589 [Process: 0] Synchronize training processes
2024-08-18 15:04:00,589 [Process: 0] Evaluating...
2024-08-18 15:04:00,591 [Process: 0] EPOCH 99:
2024-08-18 15:04:00,593 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:01,741 [Process: 0] Synchronize training processes
2024-08-18 15:04:01,741 [Process: 0] Evaluating...
2024-08-18 15:04:01,743 [Process: 0] EPOCH 100:
2024-08-18 15:04:01,745 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9841, 0.0155, 0.0049,  ..., 0.9851, 0.9942, 0.0064],
         [0.0053, 0.0155, 0.0049,  ..., 0.0050, 0.0019, 0.0064],
         [0.0053, 0.0155, 0.0049,  ..., 0.0050, 0.0019, 0.0064],
         [0.0053, 0.9536, 0.9854,  ..., 0.0050, 0.0019, 0.9809]],
        [[0.0484, 0.0112, 0.0185,  ..., 0.0120, 0.0070, 0.0049],
         [0.0262, 0.0112, 0.0185,  ..., 0.0108, 0.0070, 0.0049],
         [0.8993, 0.0112, 0.0185,  ..., 0.0108, 0.9790, 0.9854],
         [0.0262, 0.9664, 0.9445,  ..., 0.9663, 0.0070, 0.0049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8410e-02, 9.3833e-01, 9.6350e-01,  ..., 2.3825e-02,
          2.5968e-02, 4.4541e-02],
         [2.8410e-02, 1.4877e-02, 7.5525e-03,  ..., 2.3825e-02,
          2.5968e-02, 3.4305e-02],
         [9.1126e-01, 1.4877e-02, 7.5525e-03,  ..., 9.2852e-01,
          9.2209e-01, 8.8070e-01],
         [3.1925e-02, 3.1917e-02, 2.1394e-02,  ..., 2.3825e-02,
          2.5968e-02, 4.0453e-02]],
        [[2.9504e-02, 2.7182e-03, 9.9532e-04,  ..., 1.9301e-02,
          1.7397e-02, 9.8596e-01],
         [2.9504e-02, 2.7182e-03, 9.9532e-04,  ..., 1.9301e-02,
          1.7397e-02, 4.6787e-03],
         [9.0619e-01, 2.7182e-03, 9.9532e-04,  ..., 9.4210e-01,
          9.4781e-01, 4.6787e-03],
         [3.4805e-02, 9.9185e-01, 9.9701e-01,  ..., 1.9301e-02,
          1.7397e-02, 4.6787e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9934, 0.0234, 0.0280,  ..., 0.9889, 0.9943, 0.0108],
         [0.0022, 0.0156, 0.0241,  ..., 0.0037, 0.0019, 0.0108],
         [0.0022, 0.0156, 0.0241,  ..., 0.0037, 0.0019, 0.0108],
         [0.0022, 0.9454, 0.9238,  ..., 0.0037, 0.0019, 0.9677]],
        [[0.7782, 0.0225, 0.0106,  ..., 0.0043, 0.0117, 0.0135],
         [0.0397, 0.0225, 0.0102,  ..., 0.0043, 0.0117, 0.0135],
         [0.1425, 0.0348, 0.0102,  ..., 0.0043, 0.9650, 0.9595],
         [0.0397, 0.9203, 0.9691,  ..., 0.9870, 0.0117, 0.0135]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 15:04:02,897 [Process: 0] Synchronize training processes
2024-08-18 15:04:02,897 [Process: 0] Evaluating...
2024-08-18 15:04:02,899 [Process: 0] EPOCH 101:
2024-08-18 15:04:02,901 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:04,042 [Process: 0] Synchronize training processes
2024-08-18 15:04:04,042 [Process: 0] Evaluating...
2024-08-18 15:04:04,046 [Process: 0] EPOCH 102:
2024-08-18 15:04:04,048 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0227, 0.0067, 0.9918,  ..., 0.0238, 0.0167, 0.0151],
         [0.0227, 0.0048, 0.0027,  ..., 0.0238, 0.0167, 0.0151],
         [0.9318, 0.0048, 0.0027,  ..., 0.9286, 0.9498, 0.9546],
         [0.0227, 0.9836, 0.0027,  ..., 0.0238, 0.0167, 0.0151]],
        [[0.0211, 0.0022, 0.0488,  ..., 0.0184, 0.0219, 0.9803],
         [0.0211, 0.0022, 0.0488,  ..., 0.0184, 0.0219, 0.0064],
         [0.9367, 0.0022, 0.3188,  ..., 0.9447, 0.9342, 0.0064],
         [0.0211, 0.9933, 0.5836,  ..., 0.0184, 0.0219, 0.0070]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9928e-01, 3.6162e-03, 1.4438e-02,  ..., 9.8912e-01,
          9.7759e-01, 7.3910e-03],
         [2.3946e-04, 3.6162e-03, 1.4438e-02,  ..., 3.6282e-03,
          7.4717e-03, 7.3910e-03],
         [2.3946e-04, 3.6162e-03, 2.1409e-02,  ..., 3.6282e-03,
          7.4717e-03, 7.3910e-03],
         [2.3946e-04, 9.8915e-01, 9.4971e-01,  ..., 3.6282e-03,
          7.4717e-03, 9.7783e-01]],
        [[1.2502e-01, 2.2719e-02, 7.2133e-03,  ..., 5.7787e-03,
          3.8790e-03, 1.3488e-02],
         [3.4491e-02, 2.2719e-02, 7.2133e-03,  ..., 5.7787e-03,
          3.8790e-03, 1.3843e-02],
         [8.0600e-01, 2.8692e-02, 7.2133e-03,  ..., 5.7787e-03,
          9.8836e-01, 9.5918e-01],
         [3.4491e-02, 9.2587e-01, 9.7836e-01,  ..., 9.8266e-01,
          3.8790e-03, 1.3488e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1932e-02, 2.9699e-03, 9.5701e-01,  ..., 2.7143e-02,
          2.0819e-02, 1.8361e-02],
         [2.1932e-02, 2.9699e-03, 1.3420e-02,  ..., 2.7448e-02,
          2.0819e-02, 1.8361e-02],
         [9.3420e-01, 2.9699e-03, 1.3094e-02,  ..., 9.1627e-01,
          9.3754e-01, 9.4492e-01],
         [2.1932e-02, 9.9109e-01, 1.6475e-02,  ..., 2.9136e-02,
          2.0819e-02, 1.8361e-02]],
        [[2.2838e-02, 4.5658e-04, 8.3339e-04,  ..., 1.7665e-02,
          2.3895e-02, 9.5984e-01],
         [2.2838e-02, 4.5658e-04, 8.3339e-04,  ..., 1.7665e-02,
          2.3895e-02, 1.3038e-02],
         [9.3149e-01, 4.5658e-04, 8.3339e-04,  ..., 9.4700e-01,
          9.2832e-01, 1.3038e-02],
         [2.2838e-02, 9.9863e-01, 9.9750e-01,  ..., 1.7665e-02,
          2.3895e-02, 1.4081e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9888, 0.0209, 0.0097,  ..., 0.9937, 0.9345, 0.0043],
         [0.0037, 0.0209, 0.0097,  ..., 0.0021, 0.0164, 0.0043],
         [0.0037, 0.0256, 0.0097,  ..., 0.0021, 0.0164, 0.0043],
         [0.0037, 0.9326, 0.9710,  ..., 0.0021, 0.0326, 0.9872]],
        [[0.1138, 0.0088, 0.0204,  ..., 0.0454, 0.0122, 0.0072],
         [0.0391, 0.0088, 0.0185,  ..., 0.0320, 0.0122, 0.0072],
         [0.8079, 0.0088, 0.0185,  ..., 0.0563, 0.9635, 0.9784],
         [0.0391, 0.9735, 0.9426,  ..., 0.8663, 0.0122, 0.0072]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:04:05,187 [Process: 0] Synchronize training processes
2024-08-18 15:04:05,188 [Process: 0] Evaluating...
2024-08-18 15:04:05,189 [Process: 0] EPOCH 103:
2024-08-18 15:04:05,191 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4998e-02, 2.7621e-03, 9.8213e-01,  ..., 2.1980e-02,
          2.8598e-02, 3.2501e-02],
         [1.4998e-02, 2.4618e-03, 5.9576e-03,  ..., 2.1980e-02,
          2.8598e-02, 2.9863e-02],
         [9.5501e-01, 2.4618e-03, 5.9576e-03,  ..., 9.3406e-01,
          9.0293e-01, 9.0503e-01],
         [1.4998e-02, 9.9231e-01, 5.9576e-03,  ..., 2.1980e-02,
          3.9871e-02, 3.2608e-02]],
        [[2.6764e-02, 3.6891e-03, 6.0963e-04,  ..., 3.3968e-02,
          1.7905e-02, 9.1269e-01],
         [2.6764e-02, 3.6891e-03, 6.0963e-04,  ..., 3.3946e-02,
          1.7905e-02, 2.1640e-02],
         [9.1256e-01, 3.6891e-03, 6.0963e-04,  ..., 8.8361e-01,
          9.4629e-01, 2.6258e-02],
         [3.3908e-02, 9.8893e-01, 9.9817e-01,  ..., 4.8478e-02,
          1.7905e-02, 3.9413e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9642, 0.0191, 0.0066,  ..., 0.9882, 0.1788, 0.0515],
         [0.0119, 0.0145, 0.0066,  ..., 0.0042, 0.0478, 0.0348],
         [0.0119, 0.0145, 0.0066,  ..., 0.0038, 0.0503, 0.0547],
         [0.0119, 0.9519, 0.9801,  ..., 0.0038, 0.7231, 0.8590]],
        [[0.9264, 0.0137, 0.0129,  ..., 0.0061, 0.0060, 0.0142],
         [0.0197, 0.0137, 0.0126,  ..., 0.0061, 0.0060, 0.0142],
         [0.0266, 0.0137, 0.0126,  ..., 0.0061, 0.9819, 0.9573],
         [0.0272, 0.9590, 0.9618,  ..., 0.9818, 0.0060, 0.0142]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5455e-02, 6.8477e-03, 9.7476e-01,  ..., 2.6845e-02,
          3.5025e-02, 2.3891e-02],
         [1.5455e-02, 4.9957e-03, 6.4409e-03,  ..., 2.6845e-02,
          3.5025e-02, 2.3891e-02],
         [9.5363e-01, 4.9957e-03, 6.4409e-03,  ..., 9.1946e-01,
          8.7373e-01, 9.2632e-01],
         [1.5455e-02, 9.8316e-01, 1.2359e-02,  ..., 2.6845e-02,
          5.6216e-02, 2.5899e-02]],
        [[3.3320e-02, 2.6811e-03, 8.7445e-04,  ..., 1.5776e-02,
          2.6979e-02, 9.7991e-01],
         [3.3320e-02, 2.6811e-03, 8.7445e-04,  ..., 1.5776e-02,
          2.6979e-02, 5.9026e-03],
         [8.8980e-01, 2.6811e-03, 8.7445e-04,  ..., 9.5267e-01,
          9.1188e-01, 5.6982e-03],
         [4.3560e-02, 9.9196e-01, 9.9738e-01,  ..., 1.5776e-02,
          3.4166e-02, 8.4858e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:04:06,339 [Process: 0] Synchronize training processes
2024-08-18 15:04:06,339 [Process: 0] Evaluating...
2024-08-18 15:04:06,341 [Process: 0] EPOCH 104:
2024-08-18 15:04:06,343 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:07,484 [Process: 0] Synchronize training processes
2024-08-18 15:04:07,484 [Process: 0] Evaluating...
2024-08-18 15:04:07,486 [Process: 0] EPOCH 105:
2024-08-18 15:04:07,487 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8194, 0.0362, 0.0085,  ..., 0.9886, 0.9766, 0.0154],
         [0.0282, 0.0179, 0.0085,  ..., 0.0038, 0.0078, 0.0154],
         [0.1243, 0.0179, 0.0085,  ..., 0.0038, 0.0078, 0.0154],
         [0.0282, 0.9281, 0.9744,  ..., 0.0038, 0.0078, 0.9539]],
        [[0.9603, 0.0100, 0.0063,  ..., 0.0040, 0.0143, 0.0104],
         [0.0147, 0.0100, 0.0063,  ..., 0.0040, 0.0143, 0.0104],
         [0.0126, 0.0100, 0.0063,  ..., 0.0040, 0.9572, 0.9689],
         [0.0124, 0.9701, 0.9812,  ..., 0.9879, 0.0143, 0.0104]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1245e-02, 2.4764e-04, 9.6173e-01,  ..., 2.2194e-02,
          5.4854e-02, 2.0977e-02],
         [2.1245e-02, 2.4764e-04, 9.7143e-03,  ..., 2.2194e-02,
          5.1767e-02, 2.0977e-02],
         [9.3626e-01, 2.4764e-04, 9.7143e-03,  ..., 9.3342e-01,
          1.9690e-01, 9.3707e-01],
         [2.1245e-02, 9.9926e-01, 1.8842e-02,  ..., 2.2194e-02,
          6.9648e-01, 2.0977e-02]],
        [[2.4539e-02, 1.8420e-03, 1.4388e-03,  ..., 2.2153e-02,
          2.0971e-02, 9.9086e-01],
         [2.4539e-02, 1.8420e-03, 1.4388e-03,  ..., 2.2153e-02,
          2.0971e-02, 3.0454e-03],
         [9.2461e-01, 1.8420e-03, 1.4388e-03,  ..., 9.3354e-01,
          9.3709e-01, 3.0454e-03],
         [2.6314e-02, 9.9447e-01, 9.9568e-01,  ..., 2.2153e-02,
          2.0971e-02, 3.0454e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9850, 0.0176, 0.0064,  ..., 0.9929, 0.9882, 0.0063],
         [0.0049, 0.0176, 0.0064,  ..., 0.0024, 0.0039, 0.0063],
         [0.0052, 0.0178, 0.0064,  ..., 0.0024, 0.0039, 0.0063],
         [0.0049, 0.9470, 0.9808,  ..., 0.0024, 0.0039, 0.9812]],
        [[0.9815, 0.0080, 0.0084,  ..., 0.0068, 0.0058, 0.0435],
         [0.0062, 0.0080, 0.0084,  ..., 0.0068, 0.0058, 0.0260],
         [0.0062, 0.0080, 0.0084,  ..., 0.0068, 0.9826, 0.9045],
         [0.0062, 0.9761, 0.9747,  ..., 0.9796, 0.0058, 0.0260]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0186e-02, 3.3327e-04, 9.7832e-01,  ..., 2.4623e-02,
          2.4817e-03, 2.5115e-02],
         [2.0186e-02, 3.3327e-04, 7.2251e-03,  ..., 2.4623e-02,
          2.4817e-03, 2.5115e-02],
         [9.3944e-01, 3.3327e-04, 7.2251e-03,  ..., 9.2613e-01,
          2.4817e-03, 9.2302e-01],
         [2.0186e-02, 9.9900e-01, 7.2251e-03,  ..., 2.4623e-02,
          9.9255e-01, 2.6749e-02]],
        [[2.6208e-02, 3.1854e-03, 6.7758e-04,  ..., 2.6278e-02,
          2.5285e-02, 9.7697e-01],
         [2.6208e-02, 2.9262e-03, 6.7758e-04,  ..., 2.6278e-02,
          2.5285e-02, 7.6770e-03],
         [9.2029e-01, 2.9262e-03, 6.7758e-04,  ..., 9.2117e-01,
          9.2415e-01, 7.6770e-03],
         [2.7295e-02, 9.9096e-01, 9.9797e-01,  ..., 2.6278e-02,
          2.5285e-02, 7.6770e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:08,623 [Process: 0] Synchronize training processes
2024-08-18 15:04:08,623 [Process: 0] Evaluating...
2024-08-18 15:04:08,625 [Process: 0] EPOCH 106:
2024-08-18 15:04:08,627 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:09,785 [Process: 0] Synchronize training processes
2024-08-18 15:04:09,785 [Process: 0] Evaluating...
2024-08-18 15:04:09,787 [Process: 0] EPOCH 107:
2024-08-18 15:04:09,789 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9935, 0.0072, 0.0379,  ..., 0.9715, 0.8907, 0.0227],
         [0.0022, 0.0072, 0.0276,  ..., 0.0093, 0.0186, 0.0165],
         [0.0022, 0.0072, 0.0327,  ..., 0.0100, 0.0186, 0.0165],
         [0.0022, 0.9783, 0.9018,  ..., 0.0093, 0.0721, 0.9444]],
        [[0.9918, 0.0232, 0.0101,  ..., 0.0223, 0.0112, 0.0477],
         [0.0027, 0.0232, 0.0101,  ..., 0.0197, 0.0112, 0.0264],
         [0.0027, 0.0333, 0.0101,  ..., 0.0226, 0.9663, 0.8995],
         [0.0027, 0.9203, 0.9696,  ..., 0.9354, 0.0112, 0.0264]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1924e-02, 1.4321e-03, 9.8437e-01,  ..., 2.1146e-02,
          9.2397e-04, 2.1527e-02],
         [2.1924e-02, 1.4321e-03, 4.1073e-03,  ..., 2.1146e-02,
          9.2397e-04, 2.1527e-02],
         [9.3423e-01, 1.4321e-03, 4.1073e-03,  ..., 9.3656e-01,
          9.2397e-04, 9.3542e-01],
         [2.1924e-02, 9.9570e-01, 7.4121e-03,  ..., 2.1146e-02,
          9.9723e-01, 2.1527e-02]],
        [[3.0965e-02, 2.3338e-03, 2.9170e-03,  ..., 2.2888e-02,
          2.7237e-02, 9.8993e-01],
         [3.0965e-02, 2.2193e-03, 2.1260e-03,  ..., 2.2888e-02,
          2.4782e-02, 3.3575e-03],
         [8.8995e-01, 2.2193e-03, 2.1260e-03,  ..., 9.3134e-01,
          9.2320e-01, 3.3575e-03],
         [4.8118e-02, 9.9323e-01, 9.9283e-01,  ..., 2.2888e-02,
          2.4782e-02, 3.3575e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9674, 0.0045, 0.0114,  ..., 0.9798, 0.0529, 0.0114],
         [0.0090, 0.0045, 0.0114,  ..., 0.0067, 0.0234, 0.0114],
         [0.0145, 0.0045, 0.0114,  ..., 0.0067, 0.0234, 0.0114],
         [0.0090, 0.9866, 0.9659,  ..., 0.0067, 0.9003, 0.9658]],
        [[0.9865, 0.0291, 0.0108,  ..., 0.0161, 0.0072, 0.0146],
         [0.0045, 0.0160, 0.0108,  ..., 0.0161, 0.0072, 0.0146],
         [0.0045, 0.0160, 0.0108,  ..., 0.0161, 0.9785, 0.9562],
         [0.0045, 0.9388, 0.9675,  ..., 0.9516, 0.0072, 0.0146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:04:10,938 [Process: 0] Synchronize training processes
2024-08-18 15:04:10,938 [Process: 0] Evaluating...
2024-08-18 15:04:10,940 [Process: 0] EPOCH 108:
2024-08-18 15:04:10,942 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:12,084 [Process: 0] Synchronize training processes
2024-08-18 15:04:12,085 [Process: 0] Evaluating...
2024-08-18 15:04:12,086 [Process: 0] EPOCH 109:
2024-08-18 15:04:12,088 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3040e-02, 9.6667e-04, 9.7117e-01,  ..., 2.3432e-02,
          2.5759e-04, 3.1264e-02],
         [2.3040e-02, 9.6667e-04, 8.4504e-03,  ..., 2.3432e-02,
          2.5759e-04, 2.9560e-02],
         [9.3088e-01, 9.6667e-04, 8.4504e-03,  ..., 9.2970e-01,
          2.5759e-04, 9.0613e-01],
         [2.3040e-02, 9.9710e-01, 1.1927e-02,  ..., 2.3432e-02,
          9.9923e-01, 3.3044e-02]],
        [[2.4641e-02, 3.7031e-04, 2.0508e-03,  ..., 1.7107e-02,
          1.8344e-02, 9.6901e-01],
         [2.4641e-02, 3.7031e-04, 2.1458e-03,  ..., 1.7107e-02,
          1.8344e-02, 1.0331e-02],
         [9.2608e-01, 3.7031e-04, 2.0508e-03,  ..., 9.4868e-01,
          9.4497e-01, 1.0331e-02],
         [2.4641e-02, 9.9889e-01, 9.9375e-01,  ..., 1.7107e-02,
          1.8344e-02, 1.0331e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9953, 0.0098, 0.0086,  ..., 0.9836, 0.9455, 0.0247],
         [0.0016, 0.0098, 0.0086,  ..., 0.0055, 0.0136, 0.0213],
         [0.0016, 0.0102, 0.0086,  ..., 0.0055, 0.0136, 0.0213],
         [0.0016, 0.9701, 0.9742,  ..., 0.0055, 0.0272, 0.9326]],
        [[0.7810, 0.0051, 0.0103,  ..., 0.0103, 0.0082, 0.0071],
         [0.0394, 0.0051, 0.0093,  ..., 0.0103, 0.0082, 0.0071],
         [0.1330, 0.0051, 0.0093,  ..., 0.0103, 0.9754, 0.9788],
         [0.0466, 0.9846, 0.9711,  ..., 0.9690, 0.0082, 0.0071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2855e-02, 5.5943e-04, 9.6919e-01,  ..., 2.1909e-02,
          6.5844e-04, 2.5798e-02],
         [2.2855e-02, 5.5943e-04, 1.0089e-02,  ..., 2.1909e-02,
          6.5844e-04, 2.5798e-02],
         [9.3143e-01, 5.5943e-04, 1.0089e-02,  ..., 9.3427e-01,
          6.5844e-04, 9.2116e-01],
         [2.2855e-02, 9.9832e-01, 1.0628e-02,  ..., 2.1909e-02,
          9.9802e-01, 2.7243e-02]],
        [[3.3970e-02, 8.5544e-04, 6.0130e-03,  ..., 4.0944e-02,
          1.2014e-02, 9.3992e-01],
         [3.3970e-02, 8.5544e-04, 3.9387e-03,  ..., 3.3329e-02,
          1.2014e-02, 1.3405e-02],
         [8.7099e-01, 8.5544e-04, 3.9387e-03,  ..., 8.7461e-01,
          9.6396e-01, 1.3405e-02],
         [6.1067e-02, 9.9743e-01, 9.8611e-01,  ..., 5.1116e-02,
          1.2014e-02, 3.3272e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9548, 0.0123, 0.0144,  ..., 0.9670, 0.8473, 0.0033],
         [0.0122, 0.0123, 0.0144,  ..., 0.0110, 0.0299, 0.0033],
         [0.0208, 0.0123, 0.0144,  ..., 0.0110, 0.0646, 0.0033],
         [0.0122, 0.9632, 0.9569,  ..., 0.0110, 0.0582, 0.9901]],
        [[0.0119, 0.0950, 0.0192,  ..., 0.0509, 0.0062, 0.0086],
         [0.0119, 0.0359, 0.0192,  ..., 0.0446, 0.0062, 0.0086],
         [0.9644, 0.0529, 0.0313,  ..., 0.1304, 0.9813, 0.9742],
         [0.0119, 0.8162, 0.9303,  ..., 0.7742, 0.0062, 0.0086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:04:13,234 [Process: 0] Synchronize training processes
2024-08-18 15:04:13,234 [Process: 0] Evaluating...
2024-08-18 15:04:13,236 [Process: 0] EPOCH 110:
2024-08-18 15:04:13,238 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0287, 0.0035, 0.9846,  ..., 0.0205, 0.0426, 0.0232],
         [0.0277, 0.0027, 0.0047,  ..., 0.0205, 0.0426, 0.0232],
         [0.9106, 0.0027, 0.0047,  ..., 0.9383, 0.1587, 0.9293],
         [0.0330, 0.9912, 0.0059,  ..., 0.0206, 0.7562, 0.0242]],
        [[0.0224, 0.0035, 0.0013,  ..., 0.0131, 0.0295, 0.9862],
         [0.0224, 0.0035, 0.0013,  ..., 0.0131, 0.0295, 0.0040],
         [0.9324, 0.0035, 0.0013,  ..., 0.9606, 0.8982, 0.0040],
         [0.0228, 0.9894, 0.9961,  ..., 0.0131, 0.0428, 0.0059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9966, 0.0132, 0.0120,  ..., 0.9920, 0.9909, 0.0156],
         [0.0011, 0.0132, 0.0120,  ..., 0.0027, 0.0030, 0.0164],
         [0.0011, 0.0132, 0.0120,  ..., 0.0027, 0.0030, 0.0168],
         [0.0011, 0.9605, 0.9641,  ..., 0.0027, 0.0030, 0.9512]],
        [[0.0043, 0.0112, 0.0271,  ..., 0.0108, 0.0192, 0.0056],
         [0.0043, 0.0112, 0.0211,  ..., 0.0108, 0.0154, 0.0056],
         [0.9871, 0.0112, 0.0211,  ..., 0.0108, 0.9500, 0.9831],
         [0.0043, 0.9664, 0.9306,  ..., 0.9677, 0.0154, 0.0056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1306e-02, 2.6686e-03, 9.9138e-01,  ..., 1.5867e-02,
          3.7883e-02, 5.1113e-02],
         [2.1306e-02, 2.6686e-03, 2.8238e-03,  ..., 1.5867e-02,
          3.7883e-02, 3.1378e-02],
         [9.3608e-01, 2.6686e-03, 2.8238e-03,  ..., 9.5240e-01,
          8.4881e-01, 8.7997e-01],
         [2.1306e-02, 9.9199e-01, 2.9682e-03,  ..., 1.5867e-02,
          7.5419e-02, 3.7534e-02]],
        [[2.1116e-02, 6.4953e-04, 1.0636e-03,  ..., 2.6645e-02,
          3.5330e-02, 9.9009e-01],
         [2.1116e-02, 6.4953e-04, 1.0636e-03,  ..., 2.6645e-02,
          3.2350e-02, 3.3025e-03],
         [9.3665e-01, 6.4953e-04, 1.0636e-03,  ..., 9.1586e-01,
          8.8736e-01, 3.3025e-03],
         [2.1116e-02, 9.9805e-01, 9.9681e-01,  ..., 3.0846e-02,
          4.4958e-02, 3.3025e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:04:14,382 [Process: 0] Synchronize training processes
2024-08-18 15:04:14,382 [Process: 0] Evaluating...
2024-08-18 15:04:14,384 [Process: 0] EPOCH 111:
2024-08-18 15:04:14,386 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:15,528 [Process: 0] Synchronize training processes
2024-08-18 15:04:15,529 [Process: 0] Evaluating...
2024-08-18 15:04:15,533 [Process: 0] EPOCH 112:
2024-08-18 15:04:15,535 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9952, 0.0074, 0.0127,  ..., 0.9957, 0.9344, 0.0131],
         [0.0016, 0.0074, 0.0125,  ..., 0.0014, 0.0174, 0.0131],
         [0.0016, 0.0074, 0.0125,  ..., 0.0014, 0.0272, 0.0131],
         [0.0016, 0.9778, 0.9623,  ..., 0.0014, 0.0211, 0.9608]],
        [[0.0281, 0.0221, 0.0089,  ..., 0.0401, 0.0069, 0.0051],
         [0.0170, 0.0131, 0.0089,  ..., 0.0401, 0.0069, 0.0051],
         [0.9380, 0.0131, 0.0089,  ..., 0.0933, 0.9794, 0.9847],
         [0.0170, 0.9517, 0.9732,  ..., 0.8265, 0.0069, 0.0051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6771e-02, 2.0200e-02, 9.6256e-01,  ..., 2.1368e-02,
          5.2611e-02, 2.2731e-02],
         [2.6771e-02, 4.3611e-03, 7.9507e-03,  ..., 2.1368e-02,
          5.2611e-02, 2.2731e-02],
         [9.1416e-01, 4.3611e-03, 7.9507e-03,  ..., 9.3590e-01,
          5.7744e-01, 9.3048e-01],
         [3.2297e-02, 9.7108e-01, 2.1536e-02,  ..., 2.1368e-02,
          3.1734e-01, 2.4059e-02]],
        [[1.7946e-02, 3.0475e-04, 5.7876e-04,  ..., 1.4085e-02,
          2.0567e-02, 9.9282e-01],
         [1.7946e-02, 3.0475e-04, 5.7876e-04,  ..., 1.4085e-02,
          2.0567e-02, 2.3936e-03],
         [9.4616e-01, 3.0475e-04, 5.7876e-04,  ..., 9.5774e-01,
          9.3830e-01, 2.3936e-03],
         [1.7946e-02, 9.9909e-01, 9.9826e-01,  ..., 1.4085e-02,
          2.0567e-02, 2.3936e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9861, 0.0527, 0.0050,  ..., 0.9913, 0.8938, 0.0101],
         [0.0046, 0.0390, 0.0050,  ..., 0.0029, 0.0216, 0.0101],
         [0.0046, 0.0775, 0.0050,  ..., 0.0029, 0.0216, 0.0101],
         [0.0046, 0.8308, 0.9851,  ..., 0.0029, 0.0630, 0.9697]],
        [[0.0230, 0.0137, 0.0078,  ..., 0.0183, 0.0096, 0.0104],
         [0.0144, 0.0137, 0.0078,  ..., 0.0175, 0.0096, 0.0104],
         [0.9483, 0.0150, 0.0078,  ..., 0.0175, 0.9712, 0.9689],
         [0.0144, 0.9575, 0.9766,  ..., 0.9468, 0.0096, 0.0104]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6973e-02, 5.3882e-01, 9.7395e-01,  ..., 4.5946e-02,
          3.7527e-03, 1.7714e-02],
         [1.6973e-02, 3.2929e-02, 8.6833e-03,  ..., 3.6451e-02,
          3.7527e-03, 1.7714e-02],
         [9.4908e-01, 3.2929e-02, 8.6833e-03,  ..., 8.5622e-01,
          3.7527e-03, 9.4686e-01],
         [1.6973e-02, 3.9533e-01, 8.6833e-03,  ..., 6.1380e-02,
          9.8874e-01, 1.7714e-02]],
        [[2.1911e-02, 3.0173e-04, 1.0202e-02,  ..., 2.0390e-02,
          1.7613e-02, 9.7067e-01],
         [2.1911e-02, 3.0173e-04, 5.5168e-03,  ..., 2.0390e-02,
          1.7613e-02, 7.7165e-03],
         [9.3427e-01, 3.0173e-04, 5.5168e-03,  ..., 9.3883e-01,
          9.4716e-01, 7.7165e-03],
         [2.1911e-02, 9.9909e-01, 9.7876e-01,  ..., 2.0390e-02,
          1.7613e-02, 1.3900e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:16,684 [Process: 0] Synchronize training processes
2024-08-18 15:04:16,684 [Process: 0] Evaluating...
2024-08-18 15:04:16,686 [Process: 0] EPOCH 113:
2024-08-18 15:04:16,688 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:17,838 [Process: 0] Synchronize training processes
2024-08-18 15:04:17,839 [Process: 0] Evaluating...
2024-08-18 15:04:17,840 [Process: 0] EPOCH 114:
2024-08-18 15:04:17,842 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9847, 0.0124, 0.0115,  ..., 0.9741, 0.9689, 0.0051],
         [0.0051, 0.0124, 0.0115,  ..., 0.0083, 0.0063, 0.0051],
         [0.0051, 0.0124, 0.0115,  ..., 0.0083, 0.0063, 0.0051],
         [0.0051, 0.9628, 0.9655,  ..., 0.0092, 0.0185, 0.9847]],
        [[0.6507, 0.0142, 0.0077,  ..., 0.0099, 0.0086, 0.0103],
         [0.0388, 0.0119, 0.0077,  ..., 0.0099, 0.0086, 0.0103],
         [0.2717, 0.0119, 0.0077,  ..., 0.0099, 0.9742, 0.9690],
         [0.0388, 0.9620, 0.9769,  ..., 0.9704, 0.0086, 0.0103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9829e-02, 5.0516e-02, 9.9548e-01,  ..., 1.8679e-02,
          2.6150e-04, 2.4905e-02],
         [1.9829e-02, 1.3115e-02, 1.5054e-03,  ..., 1.8679e-02,
          2.6150e-04, 2.4905e-02],
         [9.4051e-01, 1.3115e-02, 1.5054e-03,  ..., 9.4396e-01,
          2.6150e-04, 9.1918e-01],
         [1.9829e-02, 9.2325e-01, 1.5054e-03,  ..., 1.8679e-02,
          9.9922e-01, 3.1008e-02]],
        [[2.3374e-02, 1.2188e-03, 4.7335e-04,  ..., 1.2892e-02,
          2.5334e-02, 9.5088e-01],
         [2.3374e-02, 1.2188e-03, 4.7335e-04,  ..., 1.2892e-02,
          2.5334e-02, 1.1666e-02],
         [9.2988e-01, 1.2188e-03, 4.7335e-04,  ..., 9.6132e-01,
          9.1996e-01, 1.1666e-02],
         [2.3374e-02, 9.9634e-01, 9.9858e-01,  ..., 1.2892e-02,
          2.9375e-02, 2.5786e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9969, 0.0093, 0.0084,  ..., 0.9949, 0.9840, 0.0042],
         [0.0010, 0.0093, 0.0084,  ..., 0.0017, 0.0053, 0.0042],
         [0.0010, 0.0093, 0.0084,  ..., 0.0017, 0.0053, 0.0042],
         [0.0010, 0.9722, 0.9748,  ..., 0.0017, 0.0053, 0.9875]],
        [[0.9743, 0.0142, 0.0135,  ..., 0.0183, 0.0090, 0.0106],
         [0.0077, 0.0142, 0.0136,  ..., 0.0183, 0.0090, 0.0106],
         [0.0104, 0.0142, 0.0135,  ..., 0.0220, 0.9730, 0.9682],
         [0.0077, 0.9575, 0.9593,  ..., 0.9414, 0.0090, 0.0106]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:04:18,976 [Process: 0] Synchronize training processes
2024-08-18 15:04:18,977 [Process: 0] Evaluating...
2024-08-18 15:04:18,979 [Process: 0] EPOCH 115:
2024-08-18 15:04:18,981 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:20,127 [Process: 0] Synchronize training processes
2024-08-18 15:04:20,127 [Process: 0] Evaluating...
2024-08-18 15:04:20,129 [Process: 0] EPOCH 116:
2024-08-18 15:04:20,131 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0124, 0.0010, 0.9901,  ..., 0.0233, 0.0012, 0.0257],
         [0.0124, 0.0010, 0.0029,  ..., 0.0233, 0.0012, 0.0257],
         [0.9628, 0.0010, 0.0029,  ..., 0.9280, 0.0012, 0.9229],
         [0.0124, 0.9969, 0.0041,  ..., 0.0254, 0.9965, 0.0257]],
        [[0.0155, 0.0011, 0.0016,  ..., 0.0145, 0.0225, 0.9925],
         [0.0155, 0.0011, 0.0016,  ..., 0.0145, 0.0225, 0.0025],
         [0.9535, 0.0011, 0.0016,  ..., 0.9566, 0.9325, 0.0025],
         [0.0155, 0.9967, 0.9953,  ..., 0.0145, 0.0225, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9963, 0.0051, 0.0276,  ..., 0.9955, 0.9728, 0.0068],
         [0.0012, 0.0051, 0.0128,  ..., 0.0015, 0.0079, 0.0068],
         [0.0012, 0.0051, 0.0128,  ..., 0.0015, 0.0079, 0.0068],
         [0.0012, 0.9846, 0.9468,  ..., 0.0015, 0.0113, 0.9797]],
        [[0.9953, 0.0030, 0.0050,  ..., 0.0108, 0.0108, 0.0074],
         [0.0016, 0.0030, 0.0050,  ..., 0.0102, 0.0108, 0.0074],
         [0.0016, 0.0030, 0.0050,  ..., 0.0102, 0.9677, 0.9779],
         [0.0016, 0.9910, 0.9849,  ..., 0.9688, 0.0108, 0.0074]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7517e-02, 8.6166e-04, 9.3792e-01,  ..., 1.9689e-02,
          4.9758e-02, 2.8835e-02],
         [1.7517e-02, 8.6166e-04, 1.3874e-02,  ..., 1.9689e-02,
          4.9758e-02, 2.8835e-02],
         [9.4745e-01, 8.6166e-04, 1.3874e-02,  ..., 9.4093e-01,
          5.1683e-01, 9.0900e-01],
         [1.7517e-02, 9.9741e-01, 3.4330e-02,  ..., 1.9689e-02,
          3.8365e-01, 3.3326e-02]],
        [[1.6369e-02, 6.6851e-04, 4.2989e-04,  ..., 2.0934e-02,
          1.5271e-02, 9.8581e-01],
         [1.6369e-02, 6.6851e-04, 4.2989e-04,  ..., 2.0934e-02,
          1.5271e-02, 4.4295e-03],
         [9.5089e-01, 6.6851e-04, 4.2989e-04,  ..., 9.3720e-01,
          9.5419e-01, 4.4295e-03],
         [1.6369e-02, 9.9799e-01, 9.9871e-01,  ..., 2.0934e-02,
          1.5271e-02, 5.3312e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9761e-01, 1.3333e-02, 2.6178e-03,  ..., 9.6800e-01,
          9.3440e-01, 6.4860e-03],
         [7.9799e-04, 1.3333e-02, 2.6178e-03,  ..., 9.4830e-03,
          1.5472e-02, 6.4860e-03],
         [7.9799e-04, 1.3333e-02, 2.6178e-03,  ..., 1.3033e-02,
          1.7101e-02, 6.4860e-03],
         [7.9799e-04, 9.6000e-01, 9.9215e-01,  ..., 9.4830e-03,
          3.3030e-02, 9.8054e-01]],
        [[9.8595e-01, 1.3944e-02, 8.2535e-03,  ..., 1.0670e-02,
          1.1972e-02, 9.7672e-03],
         [4.6819e-03, 1.3944e-02, 8.2535e-03,  ..., 1.0670e-02,
          1.1972e-02, 9.7672e-03],
         [4.6819e-03, 1.3944e-02, 8.2535e-03,  ..., 1.0670e-02,
          9.6408e-01, 9.7070e-01],
         [4.6819e-03, 9.5817e-01, 9.7524e-01,  ..., 9.6799e-01,
          1.1972e-02, 9.7672e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:04:21,283 [Process: 0] Synchronize training processes
2024-08-18 15:04:21,283 [Process: 0] Evaluating...
2024-08-18 15:04:21,285 [Process: 0] EPOCH 117:
2024-08-18 15:04:21,287 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1003e-02, 1.7282e-04, 9.8779e-01,  ..., 2.9510e-02,
          3.5093e-02, 2.0881e-02],
         [2.1003e-02, 1.7282e-04, 2.7449e-03,  ..., 2.9426e-02,
          3.5093e-02, 2.0881e-02],
         [9.3699e-01, 1.7282e-04, 2.7449e-03,  ..., 9.0097e-01,
          1.5635e-01, 9.3736e-01],
         [2.1003e-02, 9.9948e-01, 6.7233e-03,  ..., 4.0092e-02,
          7.7346e-01, 2.0881e-02]],
        [[1.2857e-02, 4.5623e-04, 9.6762e-04,  ..., 1.9552e-02,
          1.9462e-02, 9.9469e-01],
         [1.2857e-02, 4.5623e-04, 9.6762e-04,  ..., 1.9552e-02,
          1.9462e-02, 1.4521e-03],
         [9.6143e-01, 4.5623e-04, 9.6762e-04,  ..., 9.4134e-01,
          9.4161e-01, 1.4521e-03],
         [1.2857e-02, 9.9863e-01, 9.9710e-01,  ..., 1.9552e-02,
          1.9462e-02, 2.4057e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9882, 0.0109, 0.0094,  ..., 0.9931, 0.9806, 0.0176],
         [0.0039, 0.0109, 0.0094,  ..., 0.0023, 0.0059, 0.0176],
         [0.0039, 0.0109, 0.0094,  ..., 0.0023, 0.0059, 0.0176],
         [0.0039, 0.9672, 0.9718,  ..., 0.0023, 0.0075, 0.9472]],
        [[0.9939, 0.0061, 0.0078,  ..., 0.0513, 0.0066, 0.0122],
         [0.0020, 0.0061, 0.0078,  ..., 0.0238, 0.0066, 0.0122],
         [0.0020, 0.0061, 0.0078,  ..., 0.0256, 0.9801, 0.9635],
         [0.0020, 0.9818, 0.9765,  ..., 0.8993, 0.0066, 0.0122]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0069e-02, 3.6788e-04, 9.9672e-01,  ..., 2.2217e-02,
          3.1095e-03, 1.6074e-02],
         [2.0069e-02, 3.6788e-04, 1.0921e-03,  ..., 2.2217e-02,
          3.1095e-03, 1.6074e-02],
         [9.3979e-01, 3.6788e-04, 1.0921e-03,  ..., 9.3084e-01,
          3.1095e-03, 9.5178e-01],
         [2.0069e-02, 9.9890e-01, 1.0921e-03,  ..., 2.4723e-02,
          9.9067e-01, 1.6074e-02]],
        [[1.5115e-02, 7.9631e-04, 3.5935e-04,  ..., 1.9591e-02,
          1.7285e-02, 9.8149e-01],
         [1.5115e-02, 7.9631e-04, 3.5935e-04,  ..., 1.9591e-02,
          1.7285e-02, 4.5918e-03],
         [9.5465e-01, 7.9631e-04, 3.5935e-04,  ..., 9.4123e-01,
          9.4814e-01, 4.5918e-03],
         [1.5115e-02, 9.9761e-01, 9.9892e-01,  ..., 1.9591e-02,
          1.7285e-02, 9.3291e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:04:22,435 [Process: 0] Synchronize training processes
2024-08-18 15:04:22,435 [Process: 0] Evaluating...
2024-08-18 15:04:22,437 [Process: 0] EPOCH 118:
2024-08-18 15:04:22,438 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:23,587 [Process: 0] Synchronize training processes
2024-08-18 15:04:23,587 [Process: 0] Evaluating...
2024-08-18 15:04:23,589 [Process: 0] EPOCH 119:
2024-08-18 15:04:23,591 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9650, 0.0122, 0.0063,  ..., 0.9903, 0.9150, 0.0073],
         [0.0113, 0.0122, 0.0063,  ..., 0.0032, 0.0184, 0.0074],
         [0.0124, 0.0122, 0.0063,  ..., 0.0032, 0.0184, 0.0073],
         [0.0113, 0.9633, 0.9810,  ..., 0.0032, 0.0483, 0.9779]],
        [[0.9944, 0.0130, 0.0165,  ..., 0.0069, 0.0073, 0.0099],
         [0.0019, 0.0130, 0.0165,  ..., 0.0069, 0.0073, 0.0099],
         [0.0019, 0.0151, 0.0202,  ..., 0.0069, 0.9781, 0.9704],
         [0.0019, 0.9588, 0.9467,  ..., 0.9792, 0.0073, 0.0099]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0424e-02, 9.6626e-05, 9.9228e-01,  ..., 2.6663e-02,
          1.5344e-03, 1.5136e-02],
         [2.0424e-02, 1.0346e-04, 2.5739e-03,  ..., 2.3734e-02,
          1.5344e-03, 1.5136e-02],
         [9.3873e-01, 9.6626e-05, 2.5739e-03,  ..., 9.2428e-01,
          1.5344e-03, 9.5459e-01],
         [2.0424e-02, 9.9970e-01, 2.5739e-03,  ..., 2.5325e-02,
          9.9540e-01, 1.5136e-02]],
        [[1.4118e-02, 1.5981e-03, 1.8748e-03,  ..., 1.5476e-02,
          2.9038e-02, 9.9616e-01],
         [1.4118e-02, 1.5981e-03, 1.8748e-03,  ..., 1.5476e-02,
          2.6399e-02, 1.2813e-03],
         [9.5765e-01, 1.5981e-03, 1.8748e-03,  ..., 9.5357e-01,
          9.1287e-01, 1.2813e-03],
         [1.4118e-02, 9.9521e-01, 9.9438e-01,  ..., 1.5476e-02,
          3.1695e-02, 1.2813e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9795, 0.0142, 0.0056,  ..., 0.9837, 0.9744, 0.0189],
         [0.0068, 0.0142, 0.0056,  ..., 0.0053, 0.0078, 0.0189],
         [0.0068, 0.0143, 0.0056,  ..., 0.0057, 0.0078, 0.0295],
         [0.0068, 0.9574, 0.9832,  ..., 0.0053, 0.0101, 0.9328]],
        [[0.9912, 0.0062, 0.0201,  ..., 0.0128, 0.0049, 0.0186],
         [0.0029, 0.0062, 0.0113,  ..., 0.0128, 0.0049, 0.0148],
         [0.0029, 0.0062, 0.0113,  ..., 0.0128, 0.9854, 0.9518],
         [0.0029, 0.9813, 0.9573,  ..., 0.9616, 0.0049, 0.0148]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9935e-02, 1.8656e-03, 9.9120e-01,  ..., 2.4113e-02,
          1.7012e-03, 2.8161e-02],
         [2.8118e-02, 1.8656e-03, 2.9334e-03,  ..., 2.2782e-02,
          1.7012e-03, 2.8161e-02],
         [9.0282e-01, 1.8656e-03, 2.9334e-03,  ..., 9.2912e-01,
          1.7012e-03, 9.0091e-01],
         [3.9127e-02, 9.9440e-01, 2.9334e-03,  ..., 2.3985e-02,
          9.9490e-01, 4.2764e-02]],
        [[2.0281e-02, 2.3319e-04, 3.2479e-03,  ..., 1.4336e-02,
          1.8038e-02, 9.8953e-01],
         [2.0281e-02, 2.3319e-04, 2.3666e-03,  ..., 1.4336e-02,
          1.8038e-02, 3.4884e-03],
         [9.3373e-01, 2.3319e-04, 2.3666e-03,  ..., 9.5699e-01,
          9.4589e-01, 3.4884e-03],
         [2.5709e-02, 9.9930e-01, 9.9202e-01,  ..., 1.4336e-02,
          1.8038e-02, 3.4884e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:24,739 [Process: 0] Synchronize training processes
2024-08-18 15:04:24,739 [Process: 0] Evaluating...
2024-08-18 15:04:24,742 [Process: 0] EPOCH 120:
2024-08-18 15:04:24,745 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:25,888 [Process: 0] Synchronize training processes
2024-08-18 15:04:25,888 [Process: 0] Evaluating...
2024-08-18 15:04:25,891 [Process: 0] EPOCH 121:
2024-08-18 15:04:25,894 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9562, 0.0074, 0.0154,  ..., 0.9910, 0.9676, 0.0139],
         [0.0134, 0.0074, 0.0154,  ..., 0.0030, 0.0099, 0.0139],
         [0.0170, 0.0074, 0.0206,  ..., 0.0030, 0.0125, 0.0164],
         [0.0134, 0.9779, 0.9487,  ..., 0.0030, 0.0099, 0.9558]],
        [[0.9956, 0.0096, 0.0065,  ..., 0.0045, 0.0058, 0.0332],
         [0.0015, 0.0096, 0.0065,  ..., 0.0047, 0.0058, 0.0284],
         [0.0015, 0.0096, 0.0065,  ..., 0.0045, 0.9826, 0.8895],
         [0.0015, 0.9713, 0.9804,  ..., 0.9862, 0.0058, 0.0489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0188, 0.0021, 0.9908,  ..., 0.0294, 0.0140, 0.0188],
         [0.0188, 0.0021, 0.0031,  ..., 0.0281, 0.0073, 0.0188],
         [0.9436, 0.0021, 0.0031,  ..., 0.9006, 0.0073, 0.9435],
         [0.0188, 0.9937, 0.0031,  ..., 0.0420, 0.9713, 0.0188]],
        [[0.0322, 0.0020, 0.0041,  ..., 0.0173, 0.0155, 0.9893],
         [0.0311, 0.0020, 0.0041,  ..., 0.0173, 0.0155, 0.0036],
         [0.8871, 0.0020, 0.0041,  ..., 0.9480, 0.9536, 0.0036],
         [0.0497, 0.9941, 0.9877,  ..., 0.0173, 0.0155, 0.0036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9725e-01, 2.5107e-02, 5.6209e-03,  ..., 9.9416e-01,
          9.7344e-01, 2.2743e-02],
         [9.1565e-04, 1.9613e-02, 5.6209e-03,  ..., 1.9472e-03,
          8.1561e-03, 1.5735e-02],
         [9.1565e-04, 2.0156e-02, 5.6209e-03,  ..., 1.9472e-03,
          8.1561e-03, 1.5730e-02],
         [9.1565e-04, 9.3512e-01, 9.8314e-01,  ..., 1.9472e-03,
          1.0248e-02, 9.4579e-01]],
        [[9.8113e-01, 7.0145e-03, 5.4172e-03,  ..., 4.6108e-03,
          4.3036e-03, 1.3369e-02],
         [6.2884e-03, 7.0145e-03, 5.4172e-03,  ..., 4.6108e-03,
          4.3036e-03, 1.3369e-02],
         [6.2884e-03, 7.0145e-03, 5.4172e-03,  ..., 4.6108e-03,
          9.8709e-01, 9.5989e-01],
         [6.2884e-03, 9.7896e-01, 9.8375e-01,  ..., 9.8617e-01,
          4.3036e-03, 1.3369e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:04:27,040 [Process: 0] Synchronize training processes
2024-08-18 15:04:27,040 [Process: 0] Evaluating...
2024-08-18 15:04:27,044 [Process: 0] EPOCH 122:
2024-08-18 15:04:27,046 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:28,200 [Process: 0] Synchronize training processes
2024-08-18 15:04:28,200 [Process: 0] Evaluating...
2024-08-18 15:04:28,202 [Process: 0] EPOCH 123:
2024-08-18 15:04:28,204 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8412e-02, 6.3805e-04, 9.8127e-01,  ..., 2.6247e-02,
          5.9402e-04, 2.7953e-02],
         [1.8412e-02, 6.3805e-04, 6.2420e-03,  ..., 2.6247e-02,
          5.9402e-04, 2.7953e-02],
         [9.4476e-01, 6.3805e-04, 6.2420e-03,  ..., 9.1521e-01,
          5.9402e-04, 9.0534e-01],
         [1.8412e-02, 9.9809e-01, 6.2420e-03,  ..., 3.2297e-02,
          9.9822e-01, 3.8756e-02]],
        [[3.0324e-02, 2.3492e-04, 4.6109e-04,  ..., 1.3493e-02,
          1.4064e-02, 9.8364e-01],
         [3.0324e-02, 2.3492e-04, 4.6109e-04,  ..., 1.3493e-02,
          1.4064e-02, 4.9516e-03],
         [8.8920e-01, 2.3492e-04, 4.6109e-04,  ..., 9.5952e-01,
          9.5781e-01, 4.9516e-03],
         [5.0153e-02, 9.9930e-01, 9.9862e-01,  ..., 1.3493e-02,
          1.4064e-02, 6.4521e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9312, 0.0121, 0.0095,  ..., 0.9827, 0.9415, 0.0041],
         [0.0133, 0.0121, 0.0095,  ..., 0.0056, 0.0126, 0.0041],
         [0.0422, 0.0121, 0.0095,  ..., 0.0061, 0.0126, 0.0041],
         [0.0133, 0.9637, 0.9715,  ..., 0.0056, 0.0332, 0.9877]],
        [[0.9845, 0.0105, 0.0193,  ..., 0.0109, 0.0046, 0.0064],
         [0.0052, 0.0105, 0.0168,  ..., 0.0109, 0.0046, 0.0064],
         [0.0052, 0.0114, 0.0181,  ..., 0.0109, 0.9863, 0.9808],
         [0.0052, 0.9676, 0.9458,  ..., 0.9674, 0.0046, 0.0064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2629e-02, 4.2618e-03, 8.8495e-01,  ..., 1.3874e-02,
          3.2922e-04, 1.6584e-02],
         [2.2629e-02, 4.2618e-03, 1.6046e-02,  ..., 1.3874e-02,
          3.2922e-04, 1.6584e-02],
         [9.3150e-01, 5.3982e-03, 1.6046e-02,  ..., 9.5838e-01,
          3.2922e-04, 9.5025e-01],
         [2.3246e-02, 9.8608e-01, 8.2960e-02,  ..., 1.3874e-02,
          9.9901e-01, 1.6584e-02]],
        [[1.8214e-02, 2.6688e-03, 1.5433e-03,  ..., 2.4216e-02,
          1.8747e-02, 9.9911e-01],
         [1.8214e-02, 2.6688e-03, 1.5433e-03,  ..., 2.4033e-02,
          1.8747e-02, 2.9560e-04],
         [9.4536e-01, 2.6688e-03, 1.5433e-03,  ..., 9.2634e-01,
          9.4376e-01, 2.9560e-04],
         [1.8214e-02, 9.9199e-01, 9.9537e-01,  ..., 2.5413e-02,
          1.8747e-02, 2.9560e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9836, 0.0142, 0.0046,  ..., 0.9883, 0.9155, 0.0071],
         [0.0055, 0.0111, 0.0046,  ..., 0.0039, 0.0186, 0.0071],
         [0.0055, 0.0111, 0.0046,  ..., 0.0039, 0.0258, 0.0071],
         [0.0055, 0.9635, 0.9863,  ..., 0.0039, 0.0401, 0.9786]],
        [[0.9957, 0.0094, 0.0150,  ..., 0.0034, 0.0056, 0.0155],
         [0.0014, 0.0094, 0.0098,  ..., 0.0034, 0.0056, 0.0132],
         [0.0014, 0.0094, 0.0098,  ..., 0.0034, 0.9833, 0.9580],
         [0.0014, 0.9719, 0.9653,  ..., 0.9897, 0.0056, 0.0132]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:04:29,358 [Process: 0] Synchronize training processes
2024-08-18 15:04:29,358 [Process: 0] Evaluating...
2024-08-18 15:04:29,360 [Process: 0] EPOCH 124:
2024-08-18 15:04:29,362 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5703e-02, 4.2268e-03, 9.5730e-01,  ..., 2.0447e-02,
          8.9906e-04, 1.0175e-02],
         [1.5703e-02, 2.8503e-03, 9.1852e-03,  ..., 2.0447e-02,
          8.9906e-04, 1.0175e-02],
         [9.5289e-01, 2.8503e-03, 9.1852e-03,  ..., 9.3866e-01,
          8.9906e-04, 9.6948e-01],
         [1.5703e-02, 9.9007e-01, 2.4329e-02,  ..., 2.0447e-02,
          9.9730e-01, 1.0175e-02]],
        [[2.1100e-02, 6.3010e-04, 3.5800e-04,  ..., 1.2886e-02,
          1.2624e-02, 9.7509e-01],
         [2.1100e-02, 6.3010e-04, 3.5800e-04,  ..., 1.2886e-02,
          1.2624e-02, 8.3030e-03],
         [9.3670e-01, 6.3010e-04, 3.5800e-04,  ..., 9.6134e-01,
          9.6213e-01, 8.3030e-03],
         [2.1100e-02, 9.9811e-01, 9.9893e-01,  ..., 1.2886e-02,
          1.2624e-02, 8.3030e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9756, 0.0121, 0.0103,  ..., 0.9885, 0.8001, 0.0165],
         [0.0081, 0.0109, 0.0103,  ..., 0.0038, 0.0310, 0.0105],
         [0.0081, 0.0109, 0.0103,  ..., 0.0038, 0.0349, 0.0105],
         [0.0081, 0.9660, 0.9690,  ..., 0.0038, 0.1339, 0.9625]],
        [[0.0116, 0.0112, 0.0059,  ..., 0.0051, 0.0054, 0.0098],
         [0.0116, 0.0112, 0.0059,  ..., 0.0051, 0.0054, 0.0098],
         [0.9652, 0.0112, 0.0059,  ..., 0.0051, 0.9837, 0.9705],
         [0.0116, 0.9665, 0.9822,  ..., 0.9847, 0.0054, 0.0098]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0135e-02, 1.9450e-04, 9.8622e-01,  ..., 1.8966e-02,
          1.3188e-03, 1.7373e-02],
         [1.0135e-02, 1.9450e-04, 4.5946e-03,  ..., 1.8966e-02,
          1.3188e-03, 1.7373e-02],
         [9.6959e-01, 1.9450e-04, 4.5946e-03,  ..., 9.4310e-01,
          1.3188e-03, 9.4788e-01],
         [1.0135e-02, 9.9942e-01, 4.5946e-03,  ..., 1.8966e-02,
          9.9604e-01, 1.7373e-02]],
        [[3.2225e-02, 3.7411e-04, 1.3120e-03,  ..., 1.5608e-02,
          1.6118e-02, 9.4298e-01],
         [3.2225e-02, 3.7411e-04, 1.3120e-03,  ..., 1.5608e-02,
          1.6118e-02, 1.5017e-02],
         [8.7936e-01, 3.7411e-04, 1.3120e-03,  ..., 9.5318e-01,
          9.5165e-01, 1.6189e-02],
         [5.6188e-02, 9.9888e-01, 9.9606e-01,  ..., 1.5608e-02,
          1.6118e-02, 2.5813e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 15:04:30,512 [Process: 0] Synchronize training processes
2024-08-18 15:04:30,513 [Process: 0] Evaluating...
2024-08-18 15:04:30,514 [Process: 0] EPOCH 125:
2024-08-18 15:04:30,516 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:31,671 [Process: 0] Synchronize training processes
2024-08-18 15:04:31,672 [Process: 0] Evaluating...
2024-08-18 15:04:31,673 [Process: 0] EPOCH 126:
2024-08-18 15:04:31,675 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9073, 0.0046, 0.0154,  ..., 0.9949, 0.9724, 0.0066],
         [0.0151, 0.0046, 0.0154,  ..., 0.0017, 0.0085, 0.0066],
         [0.0624, 0.0046, 0.0154,  ..., 0.0017, 0.0102, 0.0066],
         [0.0151, 0.9862, 0.9539,  ..., 0.0017, 0.0089, 0.9802]],
        [[0.0074, 0.0259, 0.0214,  ..., 0.0062, 0.0058, 0.0128],
         [0.0074, 0.0259, 0.0155,  ..., 0.0062, 0.0058, 0.0128],
         [0.9778, 0.0503, 0.0155,  ..., 0.0062, 0.9826, 0.9615],
         [0.0074, 0.8979, 0.9476,  ..., 0.9815, 0.0058, 0.0128]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6493e-02, 4.6004e-04, 9.9684e-01,  ..., 1.6550e-02,
          8.9753e-04, 1.2245e-02],
         [1.6493e-02, 4.6004e-04, 1.0538e-03,  ..., 1.6550e-02,
          8.9753e-04, 1.2245e-02],
         [9.5052e-01, 4.6004e-04, 1.0538e-03,  ..., 9.5035e-01,
          8.9753e-04, 9.6327e-01],
         [1.6493e-02, 9.9862e-01, 1.0538e-03,  ..., 1.6550e-02,
          9.9731e-01, 1.2245e-02]],
        [[2.1021e-02, 3.2098e-04, 2.8483e-04,  ..., 1.4762e-02,
          1.6242e-02, 9.6457e-01],
         [2.1021e-02, 3.2098e-04, 2.8483e-04,  ..., 1.4762e-02,
          1.6242e-02, 9.2568e-03],
         [9.3656e-01, 3.2098e-04, 2.8483e-04,  ..., 9.5571e-01,
          9.5127e-01, 9.0551e-03],
         [2.1394e-02, 9.9904e-01, 9.9915e-01,  ..., 1.4762e-02,
          1.6242e-02, 1.7120e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9920, 0.0080, 0.0047,  ..., 0.9938, 0.9952, 0.0822],
         [0.0027, 0.0080, 0.0047,  ..., 0.0021, 0.0016, 0.0333],
         [0.0027, 0.0080, 0.0047,  ..., 0.0021, 0.0016, 0.0454],
         [0.0027, 0.9761, 0.9859,  ..., 0.0021, 0.0016, 0.8391]],
        [[0.0078, 0.0101, 0.0061,  ..., 0.0068, 0.0073, 0.0138],
         [0.0080, 0.0101, 0.0061,  ..., 0.0068, 0.0073, 0.0138],
         [0.9764, 0.0101, 0.0061,  ..., 0.0068, 0.9781, 0.9587],
         [0.0078, 0.9698, 0.9818,  ..., 0.9797, 0.0073, 0.0138]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6648e-02, 1.4983e-03, 9.9170e-01,  ..., 1.2327e-02,
          4.2517e-04, 1.4181e-02],
         [1.6648e-02, 1.4983e-03, 2.7670e-03,  ..., 1.2327e-02,
          4.2517e-04, 1.4181e-02],
         [9.5006e-01, 1.4983e-03, 2.7670e-03,  ..., 9.6302e-01,
          4.2517e-04, 9.5746e-01],
         [1.6648e-02, 9.9551e-01, 2.7670e-03,  ..., 1.2327e-02,
          9.9872e-01, 1.4181e-02]],
        [[1.6644e-02, 2.1077e-04, 1.2205e-02,  ..., 4.0461e-02,
          2.3163e-02, 9.8702e-01],
         [1.6644e-02, 2.1077e-04, 8.8171e-03,  ..., 2.6600e-02,
          2.3163e-02, 4.1646e-03],
         [9.5007e-01, 2.1077e-04, 8.8171e-03,  ..., 9.0089e-01,
          9.2744e-01, 4.1646e-03],
         [1.6644e-02, 9.9937e-01, 9.7016e-01,  ..., 3.2044e-02,
          2.6233e-02, 4.6536e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:32,823 [Process: 0] Synchronize training processes
2024-08-18 15:04:32,823 [Process: 0] Evaluating...
2024-08-18 15:04:32,825 [Process: 0] EPOCH 127:
2024-08-18 15:04:32,827 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:33,976 [Process: 0] Synchronize training processes
2024-08-18 15:04:33,976 [Process: 0] Evaluating...
2024-08-18 15:04:33,978 [Process: 0] EPOCH 128:
2024-08-18 15:04:33,980 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9949, 0.0051, 0.0091,  ..., 0.9955, 0.9724, 0.0079],
         [0.0017, 0.0051, 0.0091,  ..., 0.0015, 0.0084, 0.0076],
         [0.0017, 0.0051, 0.0091,  ..., 0.0015, 0.0109, 0.0076],
         [0.0017, 0.9848, 0.9726,  ..., 0.0015, 0.0084, 0.9769]],
        [[0.0182, 0.0155, 0.0062,  ..., 0.0030, 0.0085, 0.0081],
         [0.0148, 0.0136, 0.0062,  ..., 0.0030, 0.0085, 0.0081],
         [0.9523, 0.0136, 0.0062,  ..., 0.0030, 0.9745, 0.9758],
         [0.0148, 0.9573, 0.9813,  ..., 0.9911, 0.0085, 0.0081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0194, 0.0040, 0.9864,  ..., 0.0146, 0.0020, 0.0083],
         [0.0194, 0.0040, 0.0032,  ..., 0.0146, 0.0020, 0.0083],
         [0.9418, 0.0040, 0.0032,  ..., 0.9562, 0.0020, 0.9750],
         [0.0194, 0.9881, 0.0072,  ..., 0.0146, 0.9940, 0.0083]],
        [[0.0215, 0.0011, 0.0020,  ..., 0.0205, 0.0168, 0.9888],
         [0.0215, 0.0011, 0.0020,  ..., 0.0205, 0.0168, 0.0028],
         [0.9322, 0.0011, 0.0020,  ..., 0.9379, 0.9497, 0.0028],
         [0.0249, 0.9966, 0.9940,  ..., 0.0212, 0.0168, 0.0057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6663, 0.0134, 0.0043,  ..., 0.8625, 0.9956, 0.0014],
         [0.0335, 0.0134, 0.0043,  ..., 0.0233, 0.0015, 0.0014],
         [0.2667, 0.0162, 0.0043,  ..., 0.0725, 0.0015, 0.0014],
         [0.0335, 0.9570, 0.9872,  ..., 0.0417, 0.0015, 0.9959]],
        [[0.0038, 0.0110, 0.0115,  ..., 0.0042, 0.0052, 0.0064],
         [0.0038, 0.0110, 0.0115,  ..., 0.0042, 0.0052, 0.0064],
         [0.9887, 0.0110, 0.0115,  ..., 0.0042, 0.9845, 0.9808],
         [0.0038, 0.9671, 0.9656,  ..., 0.9875, 0.0052, 0.0064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 15:04:35,131 [Process: 0] Synchronize training processes
2024-08-18 15:04:35,131 [Process: 0] Evaluating...
2024-08-18 15:04:35,133 [Process: 0] EPOCH 129:
2024-08-18 15:04:35,134 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4332e-02, 3.2327e-03, 9.5222e-01,  ..., 1.5330e-02,
          3.2587e-03, 3.0020e-02],
         [2.2947e-02, 3.1802e-03, 1.2557e-02,  ..., 1.5330e-02,
          2.2494e-03, 2.2189e-02],
         [9.2724e-01, 3.1802e-03, 1.2557e-02,  ..., 9.5401e-01,
          2.2494e-03, 9.2560e-01],
         [2.5479e-02, 9.9041e-01, 2.2666e-02,  ..., 1.5330e-02,
          9.9224e-01, 2.2189e-02]],
        [[1.4808e-02, 7.8353e-04, 9.7834e-03,  ..., 2.8142e-02,
          1.1703e-02, 9.9615e-01],
         [1.4808e-02, 7.8353e-04, 4.0232e-03,  ..., 2.5064e-02,
          1.1703e-02, 1.2835e-03],
         [9.5557e-01, 7.8353e-04, 4.0232e-03,  ..., 9.1639e-01,
          9.6489e-01, 1.2835e-03],
         [1.4808e-02, 9.9765e-01, 9.8217e-01,  ..., 3.0407e-02,
          1.1703e-02, 1.2835e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9894e-01, 3.9644e-03, 4.3000e-03,  ..., 9.9764e-01,
          9.7836e-01, 7.2555e-03],
         [3.5362e-04, 3.9644e-03, 4.3000e-03,  ..., 7.8708e-04,
          7.2139e-03, 7.2742e-03],
         [3.5362e-04, 3.9644e-03, 4.3000e-03,  ..., 7.8708e-04,
          7.2139e-03, 7.2555e-03],
         [3.5362e-04, 9.8811e-01, 9.8710e-01,  ..., 7.8708e-04,
          7.2139e-03, 9.7821e-01]],
        [[9.6209e-03, 5.8274e-03, 5.6332e-03,  ..., 4.1534e-03,
          5.7210e-03, 6.2785e-03],
         [9.6052e-03, 5.8274e-03, 5.6332e-03,  ..., 4.1534e-03,
          5.7210e-03, 6.2785e-03],
         [9.7117e-01, 5.8274e-03, 5.6332e-03,  ..., 4.1534e-03,
          9.8284e-01, 9.8116e-01],
         [9.6052e-03, 9.8252e-01, 9.8310e-01,  ..., 9.8754e-01,
          5.7210e-03, 6.2785e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0002e-02, 2.6495e-03, 9.5872e-01,  ..., 1.4845e-02,
          7.8551e-04, 8.2038e-03],
         [2.0002e-02, 2.1923e-03, 8.4970e-03,  ..., 1.4845e-02,
          7.8551e-04, 8.2038e-03],
         [9.3968e-01, 2.1923e-03, 8.4970e-03,  ..., 9.5547e-01,
          7.8551e-04, 9.7539e-01],
         [2.0311e-02, 9.9297e-01, 2.4286e-02,  ..., 1.4845e-02,
          9.9764e-01, 8.2038e-03]],
        [[1.9894e-02, 1.0016e-03, 3.1729e-03,  ..., 2.0445e-02,
          1.4842e-02, 9.8805e-01],
         [2.0876e-02, 1.0016e-03, 3.1729e-03,  ..., 2.0445e-02,
          1.4842e-02, 3.9838e-03],
         [9.3923e-01, 1.0016e-03, 3.1729e-03,  ..., 9.3866e-01,
          9.5547e-01, 3.9838e-03],
         [1.9997e-02, 9.9700e-01, 9.9048e-01,  ..., 2.0445e-02,
          1.4842e-02, 3.9838e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9860, 0.0054, 0.0125,  ..., 0.9844, 0.9581, 0.0101],
         [0.0047, 0.0054, 0.0100,  ..., 0.0048, 0.0087, 0.0101],
         [0.0047, 0.0054, 0.0100,  ..., 0.0059, 0.0087, 0.0101],
         [0.0047, 0.9839, 0.9675,  ..., 0.0048, 0.0245, 0.9696]],
        [[0.0058, 0.0049, 0.0056,  ..., 0.0275, 0.0047, 0.0068],
         [0.0061, 0.0049, 0.0056,  ..., 0.0141, 0.0047, 0.0068],
         [0.9823, 0.0049, 0.0056,  ..., 0.0141, 0.9859, 0.9797],
         [0.0058, 0.9853, 0.9833,  ..., 0.9444, 0.0047, 0.0068]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:04:36,287 [Process: 0] Synchronize training processes
2024-08-18 15:04:36,287 [Process: 0] Evaluating...
2024-08-18 15:04:36,289 [Process: 0] EPOCH 130:
2024-08-18 15:04:36,291 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:37,445 [Process: 0] Synchronize training processes
2024-08-18 15:04:37,445 [Process: 0] Evaluating...
2024-08-18 15:04:37,447 [Process: 0] EPOCH 131:
2024-08-18 15:04:37,449 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1859e-02, 1.0114e-03, 9.9760e-01,  ..., 1.0901e-02,
          1.3244e-03, 1.5534e-02],
         [1.1859e-02, 1.0114e-03, 8.0153e-04,  ..., 1.0901e-02,
          6.6155e-04, 1.5439e-02],
         [9.6442e-01, 1.0114e-03, 8.0153e-04,  ..., 9.6730e-01,
          6.6155e-04, 9.5359e-01],
         [1.1859e-02, 9.9697e-01, 8.0153e-04,  ..., 1.0901e-02,
          9.9735e-01, 1.5439e-02]],
        [[1.2649e-02, 8.9594e-04, 3.6659e-03,  ..., 1.8157e-02,
          1.8117e-02, 9.9560e-01],
         [1.2649e-02, 8.9594e-04, 3.6659e-03,  ..., 1.8157e-02,
          1.8117e-02, 1.3236e-03],
         [9.6205e-01, 8.9594e-04, 3.6659e-03,  ..., 9.4553e-01,
          9.4565e-01, 1.3236e-03],
         [1.2649e-02, 9.9731e-01, 9.8900e-01,  ..., 1.8157e-02,
          1.8117e-02, 1.7523e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9896e-01, 1.5591e-02, 2.8004e-02,  ..., 9.9501e-01,
          9.6673e-01, 1.0431e-02],
         [3.4584e-04, 1.5591e-02, 2.8004e-02,  ..., 1.6619e-03,
          9.0379e-03, 1.0431e-02],
         [3.4584e-04, 1.8878e-02, 4.6790e-02,  ..., 1.6619e-03,
          9.3922e-03, 1.0431e-02],
         [3.4584e-04, 9.4994e-01, 8.9720e-01,  ..., 1.6619e-03,
          1.4838e-02, 9.6871e-01]],
        [[4.6354e-03, 9.8964e-03, 6.8828e-03,  ..., 1.8930e-02,
          7.0130e-03, 8.8983e-03],
         [4.6354e-03, 9.8964e-03, 6.8828e-03,  ..., 1.8846e-02,
          7.0130e-03, 8.8983e-03],
         [9.8609e-01, 9.8964e-03, 6.8828e-03,  ..., 3.2451e-02,
          9.7896e-01, 9.7331e-01],
         [4.6354e-03, 9.7031e-01, 9.7935e-01,  ..., 9.2977e-01,
          7.0130e-03, 8.8983e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7008e-02, 1.3651e-03, 9.8706e-01,  ..., 1.1892e-02,
          3.9066e-04, 1.0206e-02],
         [1.7008e-02, 9.1326e-04, 4.3118e-03,  ..., 1.1892e-02,
          3.9066e-04, 1.0206e-02],
         [9.4658e-01, 9.1326e-04, 4.3118e-03,  ..., 9.6432e-01,
          3.9066e-04, 9.6938e-01],
         [1.9400e-02, 9.9681e-01, 4.3118e-03,  ..., 1.1892e-02,
          9.9883e-01, 1.0206e-02]],
        [[1.3076e-02, 1.9291e-02, 6.5875e-03,  ..., 7.9971e-03,
          2.1231e-02, 9.9248e-01],
         [1.3076e-02, 1.1974e-02, 3.4562e-03,  ..., 7.9971e-03,
          2.1073e-02, 2.3074e-03],
         [9.6077e-01, 1.1974e-02, 3.4562e-03,  ..., 9.7601e-01,
          9.3593e-01, 2.3074e-03],
         [1.3076e-02, 9.5676e-01, 9.8650e-01,  ..., 7.9971e-03,
          2.1765e-02, 2.9021e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:38,598 [Process: 0] Synchronize training processes
2024-08-18 15:04:38,598 [Process: 0] Evaluating...
2024-08-18 15:04:38,605 [Process: 0] EPOCH 132:
2024-08-18 15:04:38,608 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:39,765 [Process: 0] Synchronize training processes
2024-08-18 15:04:39,766 [Process: 0] Evaluating...
2024-08-18 15:04:39,767 [Process: 0] EPOCH 133:
2024-08-18 15:04:39,769 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9913, 0.0025, 0.0080,  ..., 0.9919, 0.9539, 0.0061],
         [0.0029, 0.0025, 0.0080,  ..., 0.0027, 0.0114, 0.0061],
         [0.0029, 0.0025, 0.0080,  ..., 0.0027, 0.0230, 0.0061],
         [0.0029, 0.9926, 0.9761,  ..., 0.0027, 0.0117, 0.9817]],
        [[0.0030, 0.0040, 0.0064,  ..., 0.0097, 0.0044, 0.0086],
         [0.0030, 0.0040, 0.0064,  ..., 0.0097, 0.0044, 0.0088],
         [0.9910, 0.0040, 0.0064,  ..., 0.0097, 0.9868, 0.9740],
         [0.0030, 0.9881, 0.9808,  ..., 0.9708, 0.0044, 0.0086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3400e-02, 2.4145e-04, 9.9645e-01,  ..., 1.9732e-02,
          9.7255e-04, 1.0904e-02],
         [1.3400e-02, 2.4145e-04, 1.0440e-03,  ..., 1.9732e-02,
          9.7255e-04, 1.0904e-02],
         [9.5980e-01, 2.4145e-04, 1.0440e-03,  ..., 9.4048e-01,
          9.7255e-04, 9.6729e-01],
         [1.3400e-02, 9.9928e-01, 1.4668e-03,  ..., 2.0058e-02,
          9.9708e-01, 1.0904e-02]],
        [[1.6727e-02, 2.2611e-03, 7.3550e-04,  ..., 9.8899e-03,
          1.3289e-02, 9.7551e-01],
         [1.6727e-02, 2.2611e-03, 7.3550e-04,  ..., 9.8899e-03,
          1.3289e-02, 6.3423e-03],
         [9.4982e-01, 2.2611e-03, 7.3550e-04,  ..., 9.7033e-01,
          9.6013e-01, 6.3423e-03],
         [1.6727e-02, 9.9322e-01, 9.9779e-01,  ..., 9.8899e-03,
          1.3289e-02, 1.1805e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9764e-01, 1.9270e-02, 2.6805e-02,  ..., 9.9685e-01,
          9.8627e-01, 1.2701e-02],
         [7.8740e-04, 1.5259e-02, 1.8793e-02,  ..., 1.0504e-03,
          4.3698e-03, 1.0499e-02],
         [7.8740e-04, 1.5259e-02, 1.8917e-02,  ..., 1.0504e-03,
          4.3698e-03, 1.0499e-02],
         [7.8740e-04, 9.5021e-01, 9.3549e-01,  ..., 1.0504e-03,
          4.9899e-03, 9.6630e-01]],
        [[4.3929e-03, 8.6822e-03, 1.6368e-02,  ..., 6.9037e-03,
          2.7189e-03, 3.8109e-03],
         [4.3929e-03, 8.6822e-03, 1.6368e-02,  ..., 6.9037e-03,
          2.7189e-03, 3.8109e-03],
         [9.8682e-01, 8.6822e-03, 1.9048e-02,  ..., 6.9037e-03,
          9.9184e-01, 9.8857e-01],
         [4.3929e-03, 9.7395e-01, 9.4822e-01,  ..., 9.7929e-01,
          2.7189e-03, 3.8109e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6578e-02, 4.9725e-03, 9.9363e-01,  ..., 9.3135e-03,
          2.9594e-03, 1.7319e-02],
         [1.6578e-02, 3.5210e-03, 2.1241e-03,  ..., 9.3135e-03,
          2.9594e-03, 1.7319e-02],
         [9.5027e-01, 3.5210e-03, 2.1241e-03,  ..., 9.7206e-01,
          2.9594e-03, 9.4804e-01],
         [1.6578e-02, 9.8799e-01, 2.1241e-03,  ..., 9.3135e-03,
          9.9112e-01, 1.7319e-02]],
        [[7.6594e-03, 5.1432e-03, 6.2032e-04,  ..., 1.2178e-02,
          1.5518e-02, 9.9319e-01],
         [7.6594e-03, 2.5035e-03, 6.2032e-04,  ..., 1.2178e-02,
          1.5518e-02, 2.2700e-03],
         [9.7702e-01, 2.5035e-03, 6.2032e-04,  ..., 9.6347e-01,
          9.5345e-01, 2.2700e-03],
         [7.6594e-03, 9.8985e-01, 9.9814e-01,  ..., 1.2178e-02,
          1.5518e-02, 2.2700e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:40,929 [Process: 0] Synchronize training processes
2024-08-18 15:04:40,929 [Process: 0] Evaluating...
2024-08-18 15:04:40,931 [Process: 0] EPOCH 134:
2024-08-18 15:04:40,933 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:42,103 [Process: 0] Synchronize training processes
2024-08-18 15:04:42,103 [Process: 0] Evaluating...
2024-08-18 15:04:42,105 [Process: 0] EPOCH 135:
2024-08-18 15:04:42,107 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9834e-01, 1.1741e-02, 2.3752e-02,  ..., 9.9259e-01,
          9.5730e-01, 4.3425e-03],
         [5.5383e-04, 1.1741e-02, 1.7244e-02,  ..., 2.4712e-03,
          1.0119e-02, 4.3425e-03],
         [5.5383e-04, 1.1741e-02, 2.0398e-02,  ..., 2.4712e-03,
          1.0119e-02, 4.3425e-03],
         [5.5383e-04, 9.6478e-01, 9.3861e-01,  ..., 2.4712e-03,
          2.2463e-02, 9.8697e-01]],
        [[6.0119e-03, 8.5140e-03, 5.6553e-03,  ..., 8.1483e-03,
          5.2771e-03, 1.0814e-02],
         [6.0119e-03, 8.5140e-03, 5.6553e-03,  ..., 8.1483e-03,
          5.2771e-03, 8.9487e-03],
         [9.8196e-01, 8.5140e-03, 5.6553e-03,  ..., 8.1483e-03,
          9.8417e-01, 9.7129e-01],
         [6.0119e-03, 9.7446e-01, 9.8303e-01,  ..., 9.7556e-01,
          5.2771e-03, 8.9487e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3571e-02, 2.4854e-04, 9.9100e-01,  ..., 1.1038e-02,
          4.5393e-03, 1.4949e-02],
         [1.3571e-02, 2.4854e-04, 2.9991e-03,  ..., 1.1038e-02,
          4.3390e-03, 1.4949e-02],
         [9.5929e-01, 2.4854e-04, 2.9991e-03,  ..., 9.6689e-01,
          4.3390e-03, 9.5515e-01],
         [1.3571e-02, 9.9925e-01, 2.9991e-03,  ..., 1.1038e-02,
          9.8678e-01, 1.4949e-02]],
        [[1.3815e-02, 2.2259e-03, 8.4870e-04,  ..., 2.2533e-02,
          1.3692e-02, 9.9315e-01],
         [1.3815e-02, 2.2259e-03, 7.7653e-04,  ..., 1.9961e-02,
          1.3692e-02, 2.0094e-03],
         [9.5856e-01, 2.2259e-03, 7.7653e-04,  ..., 9.3755e-01,
          9.5892e-01, 2.0094e-03],
         [1.3815e-02, 9.9332e-01, 9.9760e-01,  ..., 1.9961e-02,
          1.3692e-02, 2.8331e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9944, 0.0207, 0.0095,  ..., 0.9899, 0.9498, 0.0165],
         [0.0019, 0.0180, 0.0095,  ..., 0.0034, 0.0132, 0.0165],
         [0.0019, 0.0230, 0.0095,  ..., 0.0034, 0.0156, 0.0165],
         [0.0019, 0.9383, 0.9714,  ..., 0.0034, 0.0215, 0.9504]],
        [[0.0036, 0.0048, 0.0044,  ..., 0.0178, 0.0034, 0.0100],
         [0.0036, 0.0048, 0.0044,  ..., 0.0179, 0.0034, 0.0100],
         [0.9891, 0.0048, 0.0044,  ..., 0.0259, 0.9897, 0.9700],
         [0.0036, 0.9855, 0.9868,  ..., 0.9384, 0.0034, 0.0100]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:04:43,284 [Process: 0] Synchronize training processes
2024-08-18 15:04:43,284 [Process: 0] Evaluating...
2024-08-18 15:04:43,286 [Process: 0] EPOCH 136:
2024-08-18 15:04:43,288 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3245e-02, 1.4315e-03, 9.6294e-01,  ..., 1.4256e-02,
          3.8602e-02, 1.5879e-02],
         [1.3245e-02, 1.4315e-03, 9.6464e-03,  ..., 1.4256e-02,
          1.3281e-02, 1.5879e-02],
         [9.6026e-01, 1.4315e-03, 9.6464e-03,  ..., 9.5723e-01,
          1.3281e-02, 9.5236e-01],
         [1.3245e-02, 9.9571e-01, 1.7769e-02,  ..., 1.4256e-02,
          9.3484e-01, 1.5879e-02]],
        [[1.0176e-02, 5.9005e-04, 1.6186e-03,  ..., 1.2161e-02,
          2.8633e-02, 9.8705e-01],
         [1.0176e-02, 5.9005e-04, 1.5892e-03,  ..., 1.2161e-02,
          2.1962e-02, 4.2230e-03],
         [9.6947e-01, 5.9005e-04, 1.5892e-03,  ..., 9.6352e-01,
          9.2744e-01, 4.2230e-03],
         [1.0176e-02, 9.9823e-01, 9.9520e-01,  ..., 1.2161e-02,
          2.1962e-02, 4.5079e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9890, 0.0103, 0.0079,  ..., 0.9562, 0.9811, 0.0080],
         [0.0037, 0.0104, 0.0079,  ..., 0.0107, 0.0059, 0.0080],
         [0.0037, 0.0103, 0.0079,  ..., 0.0188, 0.0059, 0.0080],
         [0.0037, 0.9691, 0.9764,  ..., 0.0143, 0.0071, 0.9760]],
        [[0.0053, 0.0063, 0.0139,  ..., 0.0060, 0.0081, 0.0103],
         [0.0053, 0.0063, 0.0106,  ..., 0.0060, 0.0081, 0.0103],
         [0.9840, 0.0063, 0.0102,  ..., 0.0060, 0.9757, 0.9691],
         [0.0053, 0.9811, 0.9653,  ..., 0.9821, 0.0081, 0.0103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2030e-02, 6.6382e-04, 9.9753e-01,  ..., 1.1912e-02,
          6.7035e-04, 2.0927e-02],
         [2.2848e-02, 6.6382e-04, 8.2357e-04,  ..., 1.1912e-02,
          6.7035e-04, 2.0150e-02],
         [9.2172e-01, 6.6382e-04, 8.2357e-04,  ..., 9.6426e-01,
          6.7035e-04, 9.3745e-01],
         [2.3404e-02, 9.9801e-01, 8.2357e-04,  ..., 1.1912e-02,
          9.9799e-01, 2.1472e-02]],
        [[1.4099e-02, 5.5390e-04, 3.0244e-02,  ..., 1.5788e-02,
          1.8204e-02, 9.9185e-01],
         [1.4099e-02, 5.5390e-04, 1.9313e-02,  ..., 1.5788e-02,
          1.8204e-02, 2.5592e-03],
         [9.5770e-01, 5.5390e-04, 3.4551e-02,  ..., 9.5264e-01,
          9.4539e-01, 2.5592e-03],
         [1.4099e-02, 9.9834e-01, 9.1589e-01,  ..., 1.5788e-02,
          1.8204e-02, 3.0344e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9500, 0.0021, 0.0071,  ..., 0.9966, 0.9944, 0.0032],
         [0.0146, 0.0021, 0.0071,  ..., 0.0011, 0.0019, 0.0032],
         [0.0207, 0.0021, 0.0071,  ..., 0.0011, 0.0019, 0.0032],
         [0.0146, 0.9937, 0.9787,  ..., 0.0011, 0.0019, 0.9905]],
        [[0.0060, 0.0080, 0.0085,  ..., 0.0071, 0.0033, 0.0182],
         [0.0061, 0.0074, 0.0085,  ..., 0.0071, 0.0033, 0.0182],
         [0.9819, 0.0074, 0.0114,  ..., 0.0071, 0.9901, 0.9336],
         [0.0060, 0.9772, 0.9717,  ..., 0.9787, 0.0033, 0.0299]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:04:44,470 [Process: 0] Synchronize training processes
2024-08-18 15:04:44,471 [Process: 0] Evaluating...
2024-08-18 15:04:44,473 [Process: 0] EPOCH 137:
2024-08-18 15:04:44,475 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:45,632 [Process: 0] Synchronize training processes
2024-08-18 15:04:45,632 [Process: 0] Evaluating...
2024-08-18 15:04:45,634 [Process: 0] EPOCH 138:
2024-08-18 15:04:45,636 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2323e-02, 1.1903e-03, 9.9116e-01,  ..., 1.0337e-02,
          1.5251e-03, 8.8544e-03],
         [1.2323e-02, 1.1903e-03, 2.7551e-03,  ..., 1.0337e-02,
          1.4609e-03, 8.8544e-03],
         [9.6303e-01, 1.1903e-03, 2.7551e-03,  ..., 9.6899e-01,
          1.4609e-03, 9.7344e-01],
         [1.2323e-02, 9.9643e-01, 3.3296e-03,  ..., 1.0337e-02,
          9.9555e-01, 8.8544e-03]],
        [[1.5802e-02, 4.4713e-04, 9.8538e-04,  ..., 1.5037e-02,
          3.2000e-02, 9.9412e-01],
         [1.5802e-02, 4.4713e-04, 9.8538e-04,  ..., 1.5037e-02,
          1.1780e-02, 1.9601e-03],
         [9.5260e-01, 4.4713e-04, 9.8538e-04,  ..., 9.5489e-01,
          1.1780e-02, 1.9601e-03],
         [1.5802e-02, 9.9866e-01, 9.9704e-01,  ..., 1.5037e-02,
          9.4444e-01, 1.9601e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9822, 0.0023, 0.0040,  ..., 0.9917, 0.9872, 0.0331],
         [0.0055, 0.0023, 0.0040,  ..., 0.0028, 0.0043, 0.0145],
         [0.0068, 0.0023, 0.0040,  ..., 0.0028, 0.0043, 0.0145],
         [0.0055, 0.9931, 0.9880,  ..., 0.0028, 0.0043, 0.9379]],
        [[0.0053, 0.0334, 0.0093,  ..., 0.0034, 0.0045, 0.0061],
         [0.0053, 0.0224, 0.0092,  ..., 0.0034, 0.0045, 0.0061],
         [0.9840, 0.0418, 0.0095,  ..., 0.0034, 0.9865, 0.9817],
         [0.0053, 0.9024, 0.9719,  ..., 0.9898, 0.0045, 0.0061]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1786e-02, 4.6315e-04, 9.9356e-01,  ..., 1.1871e-02,
          6.4450e-04, 1.4507e-02],
         [1.1786e-02, 4.6315e-04, 2.1464e-03,  ..., 1.1871e-02,
          6.4450e-04, 1.4507e-02],
         [9.6464e-01, 4.6315e-04, 2.1464e-03,  ..., 9.6439e-01,
          6.4450e-04, 9.5563e-01],
         [1.1786e-02, 9.9861e-01, 2.1464e-03,  ..., 1.1871e-02,
          9.9807e-01, 1.5357e-02]],
        [[1.0911e-02, 2.2216e-04, 9.3570e-03,  ..., 4.3631e-02,
          2.2394e-02, 9.9874e-01],
         [1.0911e-02, 2.2216e-04, 3.7002e-03,  ..., 2.8073e-02,
          6.2745e-03, 4.1997e-04],
         [9.6727e-01, 2.2216e-04, 3.7002e-03,  ..., 8.9052e-01,
          6.2745e-03, 4.1997e-04],
         [1.0911e-02, 9.9933e-01, 9.8324e-01,  ..., 3.7776e-02,
          9.6506e-01, 4.1997e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:46,791 [Process: 0] Synchronize training processes
2024-08-18 15:04:46,791 [Process: 0] Evaluating...
2024-08-18 15:04:46,793 [Process: 0] EPOCH 139:
2024-08-18 15:04:46,795 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:47,949 [Process: 0] Synchronize training processes
2024-08-18 15:04:47,950 [Process: 0] Evaluating...
2024-08-18 15:04:47,952 [Process: 0] EPOCH 140:
2024-08-18 15:04:47,953 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9777e-01, 2.7067e-03, 1.0983e-03,  ..., 9.9524e-01,
          9.9063e-01, 3.1175e-02],
         [7.4331e-04, 2.7067e-03, 1.0983e-03,  ..., 1.5880e-03,
          3.1242e-03, 1.5427e-02],
         [7.4331e-04, 2.7067e-03, 1.0983e-03,  ..., 1.5880e-03,
          3.1242e-03, 1.5427e-02],
         [7.4331e-04, 9.9188e-01, 9.9671e-01,  ..., 1.5880e-03,
          3.1242e-03, 9.3797e-01]],
        [[5.6773e-03, 1.3303e-02, 4.1458e-03,  ..., 1.1961e-02,
          3.7492e-03, 1.1674e-02],
         [5.6773e-03, 1.3303e-02, 4.1458e-03,  ..., 1.0116e-02,
          3.7492e-03, 1.1669e-02],
         [9.8297e-01, 2.2399e-02, 4.1458e-03,  ..., 1.0116e-02,
          9.8875e-01, 9.6499e-01],
         [5.6773e-03, 9.5100e-01, 9.8756e-01,  ..., 9.6781e-01,
          3.7492e-03, 1.1669e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7193e-02, 7.4917e-04, 9.9037e-01,  ..., 1.0806e-02,
          1.2039e-02, 9.3590e-03],
         [2.7643e-02, 7.4917e-04, 2.7234e-03,  ..., 1.0806e-02,
          8.0565e-03, 9.3590e-03],
         [8.9419e-01, 7.4917e-04, 2.7234e-03,  ..., 9.6758e-01,
          1.2578e-02, 9.7192e-01],
         [4.0978e-02, 9.9775e-01, 4.1835e-03,  ..., 1.0806e-02,
          9.6733e-01, 9.3590e-03]],
        [[1.1443e-02, 1.2543e-02, 5.0778e-03,  ..., 1.3564e-02,
          9.9294e-03, 9.7830e-01],
         [1.1443e-02, 5.6525e-03, 3.3334e-03,  ..., 1.3564e-02,
          9.9294e-03, 5.3283e-03],
         [9.6567e-01, 5.6525e-03, 3.3334e-03,  ..., 9.5931e-01,
          9.7021e-01, 5.3283e-03],
         [1.1443e-02, 9.7615e-01, 9.8826e-01,  ..., 1.3564e-02,
          9.9294e-03, 1.1046e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9353, 0.0020, 0.0033,  ..., 0.9945, 0.9949, 0.0400],
         [0.0160, 0.0020, 0.0033,  ..., 0.0018, 0.0017, 0.0129],
         [0.0327, 0.0020, 0.0033,  ..., 0.0018, 0.0017, 0.0129],
         [0.0160, 0.9939, 0.9902,  ..., 0.0018, 0.0017, 0.9342]],
        [[0.0252, 0.0028, 0.0076,  ..., 0.0286, 0.0068, 0.0082],
         [0.0129, 0.0028, 0.0076,  ..., 0.0211, 0.0068, 0.0082],
         [0.9491, 0.0028, 0.0076,  ..., 0.0509, 0.9796, 0.9754],
         [0.0129, 0.9915, 0.9772,  ..., 0.8995, 0.0068, 0.0082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0179, 0.0038, 0.9877,  ..., 0.0230, 0.0014, 0.0081],
         [0.0179, 0.0034, 0.0041,  ..., 0.0219, 0.0014, 0.0081],
         [0.9454, 0.0034, 0.0041,  ..., 0.9289, 0.0014, 0.9758],
         [0.0188, 0.9894, 0.0041,  ..., 0.0261, 0.9959, 0.0081]],
        [[0.0118, 0.0015, 0.0085,  ..., 0.0157, 0.0158, 0.9948],
         [0.0118, 0.0015, 0.0074,  ..., 0.0157, 0.0158, 0.0017],
         [0.9646, 0.0015, 0.0089,  ..., 0.9528, 0.9525, 0.0017],
         [0.0118, 0.9955, 0.9752,  ..., 0.0157, 0.0158, 0.0017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:04:49,105 [Process: 0] Synchronize training processes
2024-08-18 15:04:49,106 [Process: 0] Evaluating...
2024-08-18 15:04:49,107 [Process: 0] EPOCH 141:
2024-08-18 15:04:49,109 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:50,261 [Process: 0] Synchronize training processes
2024-08-18 15:04:50,261 [Process: 0] Evaluating...
2024-08-18 15:04:50,266 [Process: 0] EPOCH 142:
2024-08-18 15:04:50,268 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9656, 0.0050, 0.0067,  ..., 0.9943, 0.9868, 0.1571],
         [0.0093, 0.0050, 0.0050,  ..., 0.0019, 0.0044, 0.0303],
         [0.0159, 0.0050, 0.0050,  ..., 0.0019, 0.0044, 0.0303],
         [0.0093, 0.9851, 0.9834,  ..., 0.0019, 0.0044, 0.7824]],
        [[0.0528, 0.0021, 0.0033,  ..., 0.0034, 0.0029, 0.0148],
         [0.0182, 0.0021, 0.0033,  ..., 0.0034, 0.0029, 0.0114],
         [0.9109, 0.0021, 0.0033,  ..., 0.0034, 0.9913, 0.9624],
         [0.0182, 0.9937, 0.9900,  ..., 0.9897, 0.0029, 0.0114]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3099e-03, 4.3010e-04, 9.9705e-01,  ..., 1.2980e-02,
          1.6915e-03, 1.0912e-02],
         [7.3099e-03, 4.3010e-04, 9.8298e-04,  ..., 1.2980e-02,
          1.2736e-03, 1.0912e-02],
         [9.7807e-01, 4.3010e-04, 9.8298e-04,  ..., 9.6106e-01,
          1.2736e-03, 9.6726e-01],
         [7.3099e-03, 9.9871e-01, 9.8298e-04,  ..., 1.2980e-02,
          9.9576e-01, 1.0912e-02]],
        [[3.1630e-02, 1.5885e-03, 2.3165e-03,  ..., 1.4731e-02,
          1.6147e-02, 9.8818e-01],
         [2.4254e-02, 1.5885e-03, 1.8419e-03,  ..., 1.4731e-02,
          1.6147e-02, 3.5382e-03],
         [9.1426e-01, 1.5885e-03, 1.8419e-03,  ..., 9.5581e-01,
          9.5156e-01, 3.5382e-03],
         [2.9852e-02, 9.9523e-01, 9.9400e-01,  ..., 1.4731e-02,
          1.6147e-02, 4.7414e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9217, 0.0028, 0.0060,  ..., 0.9927, 0.9824, 0.0075],
         [0.0174, 0.0028, 0.0060,  ..., 0.0024, 0.0056, 0.0075],
         [0.0435, 0.0028, 0.0060,  ..., 0.0024, 0.0056, 0.0075],
         [0.0174, 0.9916, 0.9821,  ..., 0.0024, 0.0063, 0.9774]],
        [[0.0425, 0.0053, 0.0131,  ..., 0.0072, 0.0060, 0.0174],
         [0.0173, 0.0053, 0.0106,  ..., 0.0072, 0.0060, 0.0121],
         [0.9228, 0.0053, 0.0106,  ..., 0.0072, 0.9821, 0.9584],
         [0.0173, 0.9842, 0.9657,  ..., 0.9784, 0.0060, 0.0121]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:04:51,418 [Process: 0] Synchronize training processes
2024-08-18 15:04:51,419 [Process: 0] Evaluating...
2024-08-18 15:04:51,420 [Process: 0] EPOCH 143:
2024-08-18 15:04:51,422 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2658e-02, 8.1855e-04, 9.9445e-01,  ..., 1.0836e-02,
          1.0362e-02, 6.9292e-03],
         [1.2658e-02, 8.1855e-04, 1.8494e-03,  ..., 1.0836e-02,
          6.5626e-03, 6.9292e-03],
         [9.6203e-01, 8.1855e-04, 1.8494e-03,  ..., 9.6749e-01,
          6.5626e-03, 9.7921e-01],
         [1.2658e-02, 9.9754e-01, 1.8494e-03,  ..., 1.0836e-02,
          9.7651e-01, 6.9292e-03]],
        [[3.3310e-02, 7.4408e-03, 1.8892e-04,  ..., 1.5823e-02,
          2.0337e-02, 9.8634e-01],
         [2.2715e-02, 7.4408e-03, 1.8892e-04,  ..., 1.5823e-02,
          2.0337e-02, 3.9858e-03],
         [9.1727e-01, 1.4258e-02, 1.8892e-04,  ..., 9.5253e-01,
          9.3521e-01, 3.9858e-03],
         [2.6709e-02, 9.7086e-01, 9.9943e-01,  ..., 1.5823e-02,
          2.4116e-02, 5.6850e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9866, 0.0032, 0.0053,  ..., 0.9942, 0.9693, 0.0173],
         [0.0045, 0.0032, 0.0053,  ..., 0.0019, 0.0086, 0.0108],
         [0.0045, 0.0032, 0.0053,  ..., 0.0019, 0.0131, 0.0108],
         [0.0045, 0.9905, 0.9841,  ..., 0.0019, 0.0091, 0.9612]],
        [[0.0061, 0.0084, 0.0039,  ..., 0.0147, 0.0048, 0.0085],
         [0.0061, 0.0084, 0.0039,  ..., 0.0147, 0.0048, 0.0085],
         [0.9818, 0.0118, 0.0039,  ..., 0.0188, 0.9856, 0.9746],
         [0.0061, 0.9715, 0.9882,  ..., 0.9517, 0.0048, 0.0085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.4027e-03, 3.8238e-04, 9.8602e-01,  ..., 1.3771e-02,
          2.7932e-03, 1.3017e-02],
         [8.4027e-03, 3.8238e-04, 3.2950e-03,  ..., 1.3771e-02,
          2.0061e-03, 1.3017e-02],
         [9.7479e-01, 3.8238e-04, 3.2950e-03,  ..., 9.5869e-01,
          2.0061e-03, 9.6095e-01],
         [8.4027e-03, 9.9885e-01, 7.3852e-03,  ..., 1.3771e-02,
          9.9319e-01, 1.3017e-02]],
        [[1.2241e-02, 1.3366e-02, 2.1978e-04,  ..., 9.0365e-03,
          7.1297e-03, 9.9502e-01],
         [1.2241e-02, 8.2450e-03, 2.1978e-04,  ..., 9.0365e-03,
          7.1297e-03, 1.6615e-03],
         [9.6328e-01, 8.5484e-03, 2.1978e-04,  ..., 9.7289e-01,
          9.7861e-01, 1.6615e-03],
         [1.2241e-02, 9.6984e-01, 9.9934e-01,  ..., 9.0365e-03,
          7.1297e-03, 1.6615e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9935, 0.0345, 0.0053,  ..., 0.9942, 0.9918, 0.0070],
         [0.0022, 0.0233, 0.0052,  ..., 0.0019, 0.0027, 0.0070],
         [0.0022, 0.0440, 0.0052,  ..., 0.0019, 0.0027, 0.0070],
         [0.0022, 0.8981, 0.9842,  ..., 0.0019, 0.0027, 0.9789]],
        [[0.0052, 0.0047, 0.0214,  ..., 0.0073, 0.0040, 0.0082],
         [0.0052, 0.0047, 0.0180,  ..., 0.0073, 0.0040, 0.0082],
         [0.9845, 0.0047, 0.0233,  ..., 0.0073, 0.9880, 0.9754],
         [0.0052, 0.9859, 0.9372,  ..., 0.9781, 0.0040, 0.0082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:04:52,576 [Process: 0] Synchronize training processes
2024-08-18 15:04:52,576 [Process: 0] Evaluating...
2024-08-18 15:04:52,578 [Process: 0] EPOCH 144:
2024-08-18 15:04:52,580 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:53,735 [Process: 0] Synchronize training processes
2024-08-18 15:04:53,735 [Process: 0] Evaluating...
2024-08-18 15:04:53,737 [Process: 0] EPOCH 145:
2024-08-18 15:04:53,739 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4436e-02, 1.8307e-03, 9.9136e-01,  ..., 8.3353e-03,
          3.3358e-03, 1.2800e-02],
         [1.4436e-02, 1.6622e-03, 2.7639e-03,  ..., 8.3353e-03,
          2.5744e-03, 1.2800e-02],
         [9.5669e-01, 1.6622e-03, 2.7639e-03,  ..., 9.7499e-01,
          2.5744e-03, 9.6160e-01],
         [1.4436e-02, 9.9484e-01, 3.1120e-03,  ..., 8.3353e-03,
          9.9152e-01, 1.2800e-02]],
        [[8.1007e-03, 7.5775e-04, 2.3067e-03,  ..., 2.3384e-02,
          1.3966e-02, 9.9625e-01],
         [8.1007e-03, 7.5775e-04, 2.3067e-03,  ..., 2.0741e-02,
          1.3966e-02, 1.2506e-03],
         [9.7570e-01, 7.5775e-04, 2.3067e-03,  ..., 9.3416e-01,
          9.5810e-01, 1.2506e-03],
         [8.1007e-03, 9.9773e-01, 9.9308e-01,  ..., 2.1719e-02,
          1.3966e-02, 1.2506e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9843, 0.0103, 0.0072,  ..., 0.9934, 0.9910, 0.0041],
         [0.0052, 0.0095, 0.0072,  ..., 0.0022, 0.0030, 0.0043],
         [0.0052, 0.0095, 0.0072,  ..., 0.0022, 0.0030, 0.0041],
         [0.0052, 0.9708, 0.9784,  ..., 0.0022, 0.0030, 0.9875]],
        [[0.0089, 0.0081, 0.0135,  ..., 0.0145, 0.0041, 0.0025],
         [0.0074, 0.0076, 0.0135,  ..., 0.0115, 0.0041, 0.0025],
         [0.9763, 0.0076, 0.0221,  ..., 0.0115, 0.9878, 0.9926],
         [0.0074, 0.9768, 0.9509,  ..., 0.9624, 0.0041, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6424e-02, 9.9048e-03, 9.7635e-01,  ..., 1.2220e-02,
          4.8642e-04, 1.0899e-02],
         [1.6424e-02, 5.8038e-03, 7.3987e-03,  ..., 1.2220e-02,
          4.8642e-04, 1.0899e-02],
         [9.5047e-01, 5.8038e-03, 8.8507e-03,  ..., 9.6334e-01,
          4.8642e-04, 9.6730e-01],
         [1.6678e-02, 9.7849e-01, 7.3987e-03,  ..., 1.2220e-02,
          9.9854e-01, 1.0899e-02]],
        [[9.9461e-03, 3.6275e-04, 3.7844e-04,  ..., 1.0832e-02,
          1.7715e-02, 9.9389e-01],
         [9.9461e-03, 3.6275e-04, 3.7844e-04,  ..., 1.0832e-02,
          1.7715e-02, 1.7827e-03],
         [9.7016e-01, 3.6275e-04, 3.7844e-04,  ..., 9.6750e-01,
          9.4478e-01, 1.7827e-03],
         [9.9461e-03, 9.9891e-01, 9.9886e-01,  ..., 1.0832e-02,
          1.9796e-02, 2.5398e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:54,891 [Process: 0] Synchronize training processes
2024-08-18 15:04:54,891 [Process: 0] Evaluating...
2024-08-18 15:04:54,893 [Process: 0] EPOCH 146:
2024-08-18 15:04:54,895 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:56,049 [Process: 0] Synchronize training processes
2024-08-18 15:04:56,049 [Process: 0] Evaluating...
2024-08-18 15:04:56,051 [Process: 0] EPOCH 147:
2024-08-18 15:04:56,053 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9842e-01, 2.4986e-02, 6.8163e-03,  ..., 9.8203e-01,
          9.8788e-01, 6.7236e-03],
         [5.2825e-04, 1.3649e-02, 6.8163e-03,  ..., 5.0586e-03,
          3.8160e-03, 6.7236e-03],
         [5.2825e-04, 1.3649e-02, 6.8163e-03,  ..., 7.8490e-03,
          3.8160e-03, 6.7236e-03],
         [5.2825e-04, 9.4772e-01, 9.7955e-01,  ..., 5.0586e-03,
          4.4838e-03, 9.7983e-01]],
        [[1.0425e-01, 8.4452e-03, 6.7649e-03,  ..., 7.8077e-03,
          3.8450e-03, 3.2350e-03],
         [2.1958e-02, 7.6829e-03, 6.7649e-03,  ..., 7.8077e-03,
          3.8450e-03, 3.2350e-03],
         [8.5183e-01, 7.6829e-03, 6.7649e-03,  ..., 7.8077e-03,
          9.8847e-01, 9.9030e-01],
         [2.1958e-02, 9.7619e-01, 9.7971e-01,  ..., 9.7658e-01,
          3.8450e-03, 3.2350e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6168e-02, 5.6964e-02, 9.9699e-01,  ..., 1.3143e-02,
          2.1472e-04, 1.2883e-02],
         [1.6168e-02, 4.7311e-02, 1.0023e-03,  ..., 1.3143e-02,
          2.1472e-04, 1.2883e-02],
         [9.5150e-01, 2.7645e-01, 1.0023e-03,  ..., 9.6057e-01,
          2.1472e-04, 9.6135e-01],
         [1.6168e-02, 6.1927e-01, 1.0023e-03,  ..., 1.3143e-02,
          9.9936e-01, 1.2883e-02]],
        [[1.8921e-02, 2.2793e-03, 8.3319e-04,  ..., 1.7917e-02,
          1.6946e-02, 9.9210e-01],
         [1.8097e-02, 2.2793e-03, 8.3319e-04,  ..., 1.7917e-02,
          1.5386e-02, 2.6324e-03],
         [9.4476e-01, 2.2793e-03, 8.3319e-04,  ..., 9.4505e-01,
          9.5228e-01, 2.6324e-03],
         [1.8224e-02, 9.9316e-01, 9.9750e-01,  ..., 1.9112e-02,
          1.5386e-02, 2.6324e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9867, 0.0090, 0.0020,  ..., 0.9712, 0.9033, 0.0107],
         [0.0044, 0.0090, 0.0020,  ..., 0.0078, 0.0201, 0.0107],
         [0.0044, 0.0090, 0.0020,  ..., 0.0133, 0.0237, 0.0111],
         [0.0044, 0.9731, 0.9939,  ..., 0.0078, 0.0529, 0.9675]],
        [[0.9943, 0.0063, 0.0060,  ..., 0.0050, 0.0041, 0.0063],
         [0.0019, 0.0063, 0.0060,  ..., 0.0050, 0.0041, 0.0063],
         [0.0019, 0.0063, 0.0063,  ..., 0.0050, 0.9877, 0.9810],
         [0.0019, 0.9810, 0.9817,  ..., 0.9849, 0.0041, 0.0063]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8881e-02, 1.8194e-02, 9.7496e-01,  ..., 1.2673e-02,
          2.5890e-04, 1.1146e-02],
         [1.8881e-02, 6.2861e-03, 6.8284e-03,  ..., 1.2673e-02,
          2.5890e-04, 1.1146e-02],
         [9.4220e-01, 6.2861e-03, 6.8284e-03,  ..., 9.6198e-01,
          2.5890e-04, 9.6656e-01],
         [2.0040e-02, 9.6923e-01, 1.1385e-02,  ..., 1.2673e-02,
          9.9922e-01, 1.1146e-02]],
        [[9.8085e-03, 3.5047e-03, 1.4032e-03,  ..., 9.2569e-03,
          1.3531e-02, 9.9365e-01],
         [9.8085e-03, 2.7574e-03, 1.4032e-03,  ..., 9.2569e-03,
          1.3531e-02, 1.7640e-03],
         [9.7057e-01, 2.7574e-03, 1.4032e-03,  ..., 9.7223e-01,
          9.5941e-01, 1.7640e-03],
         [9.8085e-03, 9.9098e-01, 9.9579e-01,  ..., 9.2569e-03,
          1.3531e-02, 2.8260e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:04:57,207 [Process: 0] Synchronize training processes
2024-08-18 15:04:57,208 [Process: 0] Evaluating...
2024-08-18 15:04:57,209 [Process: 0] EPOCH 148:
2024-08-18 15:04:57,211 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9876, 0.0032, 0.0067,  ..., 0.9905, 0.9448, 0.0058],
         [0.0037, 0.0032, 0.0067,  ..., 0.0032, 0.0114, 0.0058],
         [0.0049, 0.0032, 0.0067,  ..., 0.0032, 0.0195, 0.0058],
         [0.0037, 0.9904, 0.9800,  ..., 0.0032, 0.0243, 0.9825]],
        [[0.9855, 0.0036, 0.0031,  ..., 0.0037, 0.0038, 0.0097],
         [0.0047, 0.0036, 0.0031,  ..., 0.0037, 0.0038, 0.0096],
         [0.0047, 0.0036, 0.0031,  ..., 0.0037, 0.9885, 0.9710],
         [0.0051, 0.9891, 0.9908,  ..., 0.9889, 0.0038, 0.0096]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7337e-03, 2.2549e-04, 9.2824e-01,  ..., 1.4165e-02,
          9.2940e-05, 1.4258e-02],
         [8.7337e-03, 2.2549e-04, 9.4240e-03,  ..., 1.4165e-02,
          9.2940e-05, 1.4258e-02],
         [9.7380e-01, 2.2549e-04, 9.4240e-03,  ..., 9.5750e-01,
          9.2940e-05, 9.5723e-01],
         [8.7337e-03, 9.9932e-01, 5.2915e-02,  ..., 1.4165e-02,
          9.9972e-01, 1.4258e-02]],
        [[9.9687e-03, 1.2365e-04, 2.6282e-03,  ..., 1.3320e-02,
          1.1645e-02, 9.9721e-01],
         [9.9687e-03, 1.2365e-04, 1.6440e-03,  ..., 1.3320e-02,
          1.1645e-02, 8.4089e-04],
         [9.7009e-01, 1.2365e-04, 1.6440e-03,  ..., 9.6004e-01,
          9.6506e-01, 8.4089e-04],
         [9.9687e-03, 9.9963e-01, 9.9408e-01,  ..., 1.3320e-02,
          1.1645e-02, 1.1112e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9117, 0.0018, 0.0022,  ..., 0.9925, 0.9896, 0.0223],
         [0.0175, 0.0018, 0.0022,  ..., 0.0025, 0.0032, 0.0162],
         [0.0533, 0.0018, 0.0022,  ..., 0.0025, 0.0032, 0.0242],
         [0.0175, 0.9947, 0.9933,  ..., 0.0025, 0.0041, 0.9373]],
        [[0.9934, 0.0551, 0.0035,  ..., 0.0071, 0.0036, 0.0061],
         [0.0022, 0.0166, 0.0035,  ..., 0.0071, 0.0036, 0.0061],
         [0.0022, 0.0166, 0.0035,  ..., 0.0071, 0.9891, 0.9817],
         [0.0022, 0.9117, 0.9894,  ..., 0.9787, 0.0036, 0.0061]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:04:58,364 [Process: 0] Synchronize training processes
2024-08-18 15:04:58,365 [Process: 0] Evaluating...
2024-08-18 15:04:58,366 [Process: 0] EPOCH 149:
2024-08-18 15:04:58,368 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:04:59,515 [Process: 0] Synchronize training processes
2024-08-18 15:04:59,516 [Process: 0] Evaluating...
2024-08-18 15:04:59,517 [Process: 0] EPOCH 150:
2024-08-18 15:04:59,519 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0066e-02, 1.3953e-04, 9.8337e-01,  ..., 8.0194e-03,
          2.3562e-03, 1.4968e-02],
         [1.0066e-02, 1.4198e-04, 5.2610e-03,  ..., 8.0194e-03,
          2.3562e-03, 1.4968e-02],
         [9.6980e-01, 1.3953e-04, 5.2610e-03,  ..., 9.7594e-01,
          2.3562e-03, 9.5510e-01],
         [1.0066e-02, 9.9958e-01, 6.1032e-03,  ..., 8.0194e-03,
          9.9293e-01, 1.4968e-02]],
        [[1.0984e-02, 1.1770e-03, 3.1459e-03,  ..., 1.1476e-02,
          1.6840e-02, 9.7111e-01],
         [1.0984e-02, 1.1770e-03, 3.1459e-03,  ..., 1.1476e-02,
          1.6840e-02, 7.2684e-03],
         [9.6705e-01, 1.1770e-03, 3.1459e-03,  ..., 9.6557e-01,
          9.4896e-01, 7.2684e-03],
         [1.0984e-02, 9.9647e-01, 9.9056e-01,  ..., 1.1476e-02,
          1.7363e-02, 1.4358e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9884, 0.0035, 0.0028,  ..., 0.9916, 0.1035, 0.0055],
         [0.0039, 0.0035, 0.0028,  ..., 0.0028, 0.0346, 0.0055],
         [0.0039, 0.0035, 0.0028,  ..., 0.0028, 0.0394, 0.0063],
         [0.0039, 0.9896, 0.9915,  ..., 0.0028, 0.8224, 0.9827]],
        [[0.9768, 0.0041, 0.0055,  ..., 0.0042, 0.0045, 0.0052],
         [0.0059, 0.0041, 0.0055,  ..., 0.0041, 0.0045, 0.0052],
         [0.0059, 0.0041, 0.0055,  ..., 0.0041, 0.9866, 0.9844],
         [0.0115, 0.9878, 0.9834,  ..., 0.9875, 0.0045, 0.0052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.6958e-03, 1.1407e-04, 9.9204e-01,  ..., 9.9960e-03,
          1.8624e-04, 1.1004e-02],
         [6.6958e-03, 1.1407e-04, 2.5536e-03,  ..., 9.9960e-03,
          1.8624e-04, 1.1004e-02],
         [9.7991e-01, 1.1407e-04, 2.5536e-03,  ..., 9.7001e-01,
          1.8624e-04, 9.6699e-01],
         [6.6958e-03, 9.9966e-01, 2.8564e-03,  ..., 9.9960e-03,
          9.9944e-01, 1.1004e-02]],
        [[1.3919e-02, 4.0018e-01, 3.2217e-01,  ..., 1.0573e-02,
          1.4083e-02, 9.9174e-01],
         [1.3919e-02, 2.4222e-02, 1.5643e-02,  ..., 1.0573e-02,
          1.4083e-02, 2.2263e-03],
         [9.5824e-01, 2.4222e-02, 1.5643e-02,  ..., 9.6828e-01,
          9.5775e-01, 2.2263e-03],
         [1.3919e-02, 5.5138e-01, 6.4655e-01,  ..., 1.0573e-02,
          1.4083e-02, 3.8092e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9925, 0.0160, 0.0131,  ..., 0.9903, 0.0113, 0.0053],
         [0.0025, 0.0160, 0.0131,  ..., 0.0032, 0.0059, 0.0053],
         [0.0025, 0.0227, 0.0204,  ..., 0.0032, 0.0059, 0.0053],
         [0.0025, 0.9454, 0.9535,  ..., 0.0032, 0.9770, 0.9840]],
        [[0.9928, 0.0066, 0.0044,  ..., 0.0065, 0.0033, 0.0182],
         [0.0022, 0.0066, 0.0044,  ..., 0.0065, 0.0033, 0.0112],
         [0.0022, 0.0066, 0.0044,  ..., 0.0065, 0.9900, 0.9594],
         [0.0027, 0.9803, 0.9868,  ..., 0.9805, 0.0033, 0.0112]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:00,673 [Process: 0] Synchronize training processes
2024-08-18 15:05:00,673 [Process: 0] Evaluating...
2024-08-18 15:05:00,675 [Process: 0] EPOCH 151:
2024-08-18 15:05:00,676 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:01,826 [Process: 0] Synchronize training processes
2024-08-18 15:05:01,826 [Process: 0] Evaluating...
2024-08-18 15:05:01,830 [Process: 0] EPOCH 152:
2024-08-18 15:05:01,832 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0292e-03, 3.3305e-04, 9.7543e-01,  ..., 1.3329e-02,
          3.1411e-03, 2.5428e-02],
         [9.1290e-03, 3.5950e-04, 5.7954e-03,  ..., 1.3329e-02,
          1.5135e-03, 1.8033e-02],
         [9.7281e-01, 3.3305e-04, 5.7954e-03,  ..., 9.6001e-01,
          1.5135e-03, 9.3653e-01],
         [9.0292e-03, 9.9897e-01, 1.2983e-02,  ..., 1.3329e-02,
          9.9383e-01, 2.0005e-02]],
        [[1.8247e-02, 1.8030e-03, 5.7272e-04,  ..., 7.2314e-03,
          2.1493e-02, 9.9376e-01],
         [1.6718e-02, 1.8030e-03, 5.7272e-04,  ..., 7.2314e-03,
          1.7591e-02, 2.0808e-03],
         [9.4606e-01, 1.8030e-03, 5.7272e-04,  ..., 9.7831e-01,
          9.4195e-01, 2.0808e-03],
         [1.8973e-02, 9.9459e-01, 9.9828e-01,  ..., 7.2314e-03,
          1.8967e-02, 2.0808e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9949, 0.0064, 0.0030,  ..., 0.9899, 0.0050, 0.0069],
         [0.0017, 0.0064, 0.0030,  ..., 0.0034, 0.0050, 0.0069],
         [0.0017, 0.0064, 0.0030,  ..., 0.0034, 0.0050, 0.0069],
         [0.0017, 0.9808, 0.9909,  ..., 0.0034, 0.9851, 0.9792]],
        [[0.9756, 0.0036, 0.0040,  ..., 0.0644, 0.0029, 0.0059],
         [0.0072, 0.0036, 0.0040,  ..., 0.0260, 0.0029, 0.0059],
         [0.0084, 0.0036, 0.0040,  ..., 0.0417, 0.9913, 0.9823],
         [0.0088, 0.9893, 0.9881,  ..., 0.8679, 0.0029, 0.0059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.5560e-03, 2.2894e-04, 9.8793e-01,  ..., 1.1131e-02,
          8.6989e-04, 1.2694e-02],
         [6.5560e-03, 2.2894e-04, 3.9699e-03,  ..., 1.1131e-02,
          8.6989e-04, 1.2302e-02],
         [9.8033e-01, 2.2894e-04, 3.9699e-03,  ..., 9.6661e-01,
          8.6989e-04, 9.6270e-01],
         [6.5560e-03, 9.9931e-01, 4.1314e-03,  ..., 1.1131e-02,
          9.9739e-01, 1.2302e-02]],
        [[8.8912e-03, 3.8277e-04, 4.9722e-04,  ..., 7.5765e-03,
          1.5837e-02, 9.9615e-01],
         [8.8912e-03, 3.8277e-04, 5.0697e-04,  ..., 7.5765e-03,
          1.4195e-02, 1.2846e-03],
         [9.7333e-01, 3.8277e-04, 4.9722e-04,  ..., 9.7727e-01,
          9.5577e-01, 1.2846e-03],
         [8.8912e-03, 9.9885e-01, 9.9850e-01,  ..., 7.5765e-03,
          1.4195e-02, 1.2846e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:02,987 [Process: 0] Synchronize training processes
2024-08-18 15:05:02,987 [Process: 0] Evaluating...
2024-08-18 15:05:02,989 [Process: 0] EPOCH 153:
2024-08-18 15:05:02,991 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:04,153 [Process: 0] Synchronize training processes
2024-08-18 15:05:04,153 [Process: 0] Evaluating...
2024-08-18 15:05:04,155 [Process: 0] EPOCH 154:
2024-08-18 15:05:04,157 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9484e-01, 3.7732e-03, 1.8723e-03,  ..., 9.9654e-01,
          9.8184e-01, 9.8021e-03],
         [1.7193e-03, 3.7732e-03, 1.8723e-03,  ..., 1.1519e-03,
          4.8685e-03, 6.7810e-03],
         [1.7193e-03, 3.7732e-03, 1.8723e-03,  ..., 1.1519e-03,
          4.8685e-03, 6.7810e-03],
         [1.7193e-03, 9.8868e-01, 9.9438e-01,  ..., 1.1519e-03,
          8.4224e-03, 9.7664e-01]],
        [[9.8479e-01, 9.5275e-04, 2.6765e-03,  ..., 2.0262e-02,
          4.2256e-03, 5.9483e-03],
         [5.0707e-03, 9.5275e-04, 2.6765e-03,  ..., 2.0262e-02,
          4.2256e-03, 5.9483e-03],
         [5.0707e-03, 9.5275e-04, 2.6765e-03,  ..., 3.4836e-02,
          9.8732e-01, 9.8216e-01],
         [5.0707e-03, 9.9714e-01, 9.9197e-01,  ..., 9.2464e-01,
          4.2256e-03, 5.9483e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3910e-02, 5.0668e-04, 9.8632e-01,  ..., 9.6107e-03,
          5.9268e-03, 1.7799e-02],
         [1.3910e-02, 5.0668e-04, 4.1500e-03,  ..., 9.6107e-03,
          3.2775e-03, 1.7799e-02],
         [9.5659e-01, 5.0668e-04, 4.1500e-03,  ..., 9.7117e-01,
          3.2775e-03, 9.4012e-01],
         [1.5585e-02, 9.9848e-01, 5.3836e-03,  ..., 9.6107e-03,
          9.8752e-01, 2.4285e-02]],
        [[1.0026e-02, 3.7203e-04, 8.8598e-04,  ..., 7.0839e-03,
          8.7519e-03, 9.9926e-01],
         [1.0026e-02, 3.7203e-04, 8.8598e-04,  ..., 7.0839e-03,
          8.7519e-03, 2.4728e-04],
         [9.6992e-01, 3.7203e-04, 8.8598e-04,  ..., 9.7875e-01,
          9.7374e-01, 2.4728e-04],
         [1.0026e-02, 9.9888e-01, 9.9734e-01,  ..., 7.0839e-03,
          8.7519e-03, 2.4728e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9905e-01, 4.3543e-03, 6.5710e-03,  ..., 9.9699e-01,
          9.8855e-01, 1.8677e-02],
         [3.1539e-04, 4.3543e-03, 6.5710e-03,  ..., 1.0032e-03,
          3.8163e-03, 1.2140e-02],
         [3.1539e-04, 4.3543e-03, 6.5710e-03,  ..., 1.0032e-03,
          3.8163e-03, 1.4065e-02],
         [3.1539e-04, 9.8694e-01, 9.8029e-01,  ..., 1.0032e-03,
          3.8163e-03, 9.5512e-01]],
        [[4.8612e-01, 1.2494e-03, 5.7279e-03,  ..., 6.0477e-03,
          2.6486e-03, 3.0157e-03],
         [6.7348e-02, 1.2494e-03, 5.7279e-03,  ..., 6.0477e-03,
          2.6486e-03, 3.0157e-03],
         [3.7594e-01, 1.2494e-03, 6.5855e-03,  ..., 6.0477e-03,
          9.9205e-01, 9.9095e-01],
         [7.0590e-02, 9.9625e-01, 9.8196e-01,  ..., 9.8186e-01,
          2.6486e-03, 3.0157e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:05:05,305 [Process: 0] Synchronize training processes
2024-08-18 15:05:05,306 [Process: 0] Evaluating...
2024-08-18 15:05:05,307 [Process: 0] EPOCH 155:
2024-08-18 15:05:05,309 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6827e-02, 1.7432e-03, 9.9354e-01,  ..., 2.1589e-02,
          2.7023e-03, 1.1108e-02],
         [1.6827e-02, 1.7432e-03, 1.9590e-03,  ..., 2.1589e-02,
          2.1422e-03, 1.1108e-02],
         [9.4399e-01, 1.7432e-03, 1.9590e-03,  ..., 9.1316e-01,
          2.1422e-03, 9.6668e-01],
         [2.2360e-02, 9.9477e-01, 2.5421e-03,  ..., 4.3662e-02,
          9.9301e-01, 1.1108e-02]],
        [[1.8561e-02, 5.5976e-05, 3.9580e-04,  ..., 1.1330e-02,
          1.7596e-02, 9.9759e-01],
         [1.8561e-02, 5.5976e-05, 3.3885e-04,  ..., 1.1330e-02,
          1.7397e-02, 8.0212e-04],
         [9.3627e-01, 5.5976e-05, 3.3885e-04,  ..., 9.6601e-01,
          9.4099e-01, 8.0212e-04],
         [2.6605e-02, 9.9983e-01, 9.9893e-01,  ..., 1.1330e-02,
          2.4014e-02, 8.0212e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9809, 0.0019, 0.0024,  ..., 0.9934, 0.9860, 0.0047],
         [0.0053, 0.0019, 0.0024,  ..., 0.0022, 0.0045, 0.0031],
         [0.0084, 0.0019, 0.0024,  ..., 0.0022, 0.0050, 0.0031],
         [0.0053, 0.9943, 0.9927,  ..., 0.0022, 0.0045, 0.9892]],
        [[0.9098, 0.0058, 0.0035,  ..., 0.0040, 0.0072, 0.0049],
         [0.0159, 0.0058, 0.0035,  ..., 0.0040, 0.0072, 0.0049],
         [0.0159, 0.0060, 0.0035,  ..., 0.0040, 0.9784, 0.9853],
         [0.0583, 0.9824, 0.9896,  ..., 0.9879, 0.0072, 0.0049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0879e-02, 9.4661e-04, 9.7042e-01,  ..., 1.5503e-02,
          8.2183e-03, 1.6249e-02],
         [2.3643e-02, 8.5219e-04, 8.1228e-03,  ..., 1.5503e-02,
          3.8475e-03, 1.6249e-02],
         [9.0197e-01, 8.5219e-04, 8.1228e-03,  ..., 9.4787e-01,
          3.8475e-03, 9.4470e-01],
         [4.3511e-02, 9.9735e-01, 1.3338e-02,  ..., 2.1120e-02,
          9.8409e-01, 2.2805e-02]],
        [[1.5259e-02, 6.9674e-05, 1.6505e-03,  ..., 1.5467e-02,
          9.4473e-03, 9.9551e-01],
         [1.5259e-02, 6.9674e-05, 1.6505e-03,  ..., 1.5467e-02,
          9.4473e-03, 1.4952e-03],
         [9.4890e-01, 6.9674e-05, 1.6505e-03,  ..., 9.4955e-01,
          9.7166e-01, 1.4952e-03],
         [2.0579e-02, 9.9979e-01, 9.9505e-01,  ..., 1.9513e-02,
          9.4473e-03, 1.4952e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9319, 0.0018, 0.0071,  ..., 0.9893, 0.9840, 0.0179],
         [0.0133, 0.0018, 0.0071,  ..., 0.0036, 0.0047, 0.0130],
         [0.0415, 0.0018, 0.0071,  ..., 0.0036, 0.0066, 0.0222],
         [0.0133, 0.9947, 0.9787,  ..., 0.0036, 0.0047, 0.9469]],
        [[0.9910, 0.0024, 0.0057,  ..., 0.0083, 0.0027, 0.0028],
         [0.0030, 0.0024, 0.0057,  ..., 0.0083, 0.0027, 0.0028],
         [0.0030, 0.0024, 0.0076,  ..., 0.0148, 0.9919, 0.9917],
         [0.0031, 0.9929, 0.9811,  ..., 0.9686, 0.0027, 0.0028]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:06,462 [Process: 0] Synchronize training processes
2024-08-18 15:05:06,462 [Process: 0] Evaluating...
2024-08-18 15:05:06,464 [Process: 0] EPOCH 156:
2024-08-18 15:05:06,466 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:07,616 [Process: 0] Synchronize training processes
2024-08-18 15:05:07,616 [Process: 0] Evaluating...
2024-08-18 15:05:07,618 [Process: 0] EPOCH 157:
2024-08-18 15:05:07,619 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8496e-02, 3.2852e-03, 9.8835e-01,  ..., 1.6408e-02,
          7.2899e-04, 2.1870e-02],
         [1.8496e-02, 2.8716e-03, 3.8273e-03,  ..., 1.6408e-02,
          7.2899e-04, 1.7982e-02],
         [9.3675e-01, 2.8716e-03, 3.8273e-03,  ..., 9.4615e-01,
          7.2899e-04, 9.3881e-01],
         [2.6255e-02, 9.9097e-01, 3.9950e-03,  ..., 2.1032e-02,
          9.9781e-01, 2.1342e-02]],
        [[9.3765e-01, 2.4555e-04, 1.9174e-04,  ..., 1.2338e-02,
          1.5511e-02, 9.8870e-01],
         [1.5506e-02, 2.4555e-04, 1.9174e-04,  ..., 1.2338e-02,
          1.5511e-02, 3.2504e-03],
         [1.5533e-02, 2.4555e-04, 1.9174e-04,  ..., 9.6299e-01,
          9.5057e-01, 3.2504e-03],
         [3.1310e-02, 9.9926e-01, 9.9942e-01,  ..., 1.2338e-02,
          1.8409e-02, 4.7976e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2672, 0.0068, 0.0043,  ..., 0.9879, 0.9892, 0.0037],
         [0.0314, 0.0068, 0.0043,  ..., 0.0038, 0.0036, 0.0037],
         [0.6701, 0.0081, 0.0044,  ..., 0.0038, 0.0036, 0.0037],
         [0.0314, 0.9783, 0.9871,  ..., 0.0045, 0.0036, 0.9888]],
        [[0.9863, 0.0086, 0.0028,  ..., 0.0067, 0.0018, 0.0011],
         [0.0046, 0.0086, 0.0028,  ..., 0.0067, 0.0018, 0.0011],
         [0.0046, 0.0149, 0.0028,  ..., 0.0090, 0.9945, 0.9966],
         [0.0046, 0.9678, 0.9915,  ..., 0.9776, 0.0018, 0.0011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4310e-02, 3.5569e-04, 9.8194e-01,  ..., 1.3807e-02,
          2.0488e-03, 1.3069e-02],
         [1.4310e-02, 3.5569e-04, 4.0444e-03,  ..., 1.3807e-02,
          2.0488e-03, 1.3069e-02],
         [9.5707e-01, 3.5569e-04, 4.0444e-03,  ..., 9.5772e-01,
          2.0488e-03, 9.6079e-01],
         [1.4310e-02, 9.9893e-01, 9.9706e-03,  ..., 1.4671e-02,
          9.9385e-01, 1.3069e-02]],
        [[1.6315e-02, 1.7850e-04, 1.3429e-04,  ..., 8.8158e-03,
          1.8104e-02, 9.8703e-01],
         [1.6315e-02, 1.7850e-04, 1.3429e-04,  ..., 8.8158e-03,
          1.8104e-02, 4.3240e-03],
         [9.4906e-01, 1.7850e-04, 1.3429e-04,  ..., 9.7355e-01,
          9.4128e-01, 4.3240e-03],
         [1.8306e-02, 9.9946e-01, 9.9960e-01,  ..., 8.8158e-03,
          2.2512e-02, 4.3240e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:05:08,772 [Process: 0] Synchronize training processes
2024-08-18 15:05:08,772 [Process: 0] Evaluating...
2024-08-18 15:05:08,774 [Process: 0] EPOCH 158:
2024-08-18 15:05:08,776 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:09,930 [Process: 0] Synchronize training processes
2024-08-18 15:05:09,930 [Process: 0] Evaluating...
2024-08-18 15:05:09,932 [Process: 0] EPOCH 159:
2024-08-18 15:05:09,934 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8097e-01, 4.0998e-02, 5.7065e-03,  ..., 9.9687e-01,
          9.2093e-01, 4.4605e-03],
         [1.7505e-02, 1.7957e-02, 5.7065e-03,  ..., 1.0440e-03,
          1.5158e-02, 4.4605e-03],
         [8.4018e-02, 2.5581e-02, 5.7065e-03,  ..., 1.0440e-03,
          3.7084e-02, 4.4605e-03],
         [1.7505e-02, 9.1546e-01, 9.8288e-01,  ..., 1.0440e-03,
          2.6828e-02, 9.8662e-01]],
        [[9.3411e-01, 8.9820e-03, 8.9627e-04,  ..., 2.8008e-02,
          4.0529e-03, 4.6864e-03],
         [1.2888e-02, 8.9820e-03, 9.1325e-04,  ..., 1.7169e-02,
          4.0529e-03, 4.6864e-03],
         [3.4609e-02, 1.5090e-02, 8.9627e-04,  ..., 3.2314e-02,
          9.8784e-01, 9.8594e-01],
         [1.8393e-02, 9.6695e-01, 9.9729e-01,  ..., 9.2251e-01,
          4.0529e-03, 4.6864e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6792e-02, 1.2252e-03, 9.9299e-01,  ..., 9.0520e-03,
          1.5875e-03, 1.4779e-02],
         [2.1196e-02, 1.2252e-03, 2.2050e-03,  ..., 9.0520e-03,
          1.5875e-03, 1.4779e-02],
         [9.2434e-01, 1.2252e-03, 2.2050e-03,  ..., 9.7284e-01,
          1.5875e-03, 9.5538e-01],
         [2.7674e-02, 9.9632e-01, 2.5966e-03,  ..., 9.0520e-03,
          9.9524e-01, 1.5066e-02]],
        [[9.4515e-03, 8.7880e-04, 5.2131e-03,  ..., 1.2962e-02,
          1.1207e-02, 9.8894e-01],
         [9.4515e-03, 7.6385e-04, 2.2563e-03,  ..., 1.2962e-02,
          1.1207e-02, 2.9787e-03],
         [9.7165e-01, 7.6385e-04, 2.2563e-03,  ..., 9.6111e-01,
          9.6638e-01, 2.9670e-03],
         [9.4515e-03, 9.9759e-01, 9.9027e-01,  ..., 1.2962e-02,
          1.1207e-02, 5.1174e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9844, 0.0038, 0.0057,  ..., 0.9860, 0.9716, 0.0059],
         [0.0047, 0.0038, 0.0057,  ..., 0.0047, 0.0073, 0.0059],
         [0.0061, 0.0038, 0.0057,  ..., 0.0047, 0.0087, 0.0059],
         [0.0047, 0.9885, 0.9830,  ..., 0.0047, 0.0124, 0.9824]],
        [[0.9701, 0.0345, 0.0029,  ..., 0.0012, 0.0044, 0.0018],
         [0.0077, 0.0190, 0.0029,  ..., 0.0012, 0.0044, 0.0018],
         [0.0121, 0.0358, 0.0029,  ..., 0.0012, 0.9869, 0.9946],
         [0.0101, 0.9108, 0.9912,  ..., 0.9964, 0.0044, 0.0018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:11,084 [Process: 0] Synchronize training processes
2024-08-18 15:05:11,084 [Process: 0] Evaluating...
2024-08-18 15:05:11,086 [Process: 0] EPOCH 160:
2024-08-18 15:05:11,087 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:12,239 [Process: 0] Synchronize training processes
2024-08-18 15:05:12,239 [Process: 0] Evaluating...
2024-08-18 15:05:12,241 [Process: 0] EPOCH 161:
2024-08-18 15:05:12,243 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0010e-02, 9.6604e-04, 9.9431e-01,  ..., 2.1048e-02,
          7.6199e-04, 1.7270e-02],
         [1.0010e-02, 9.8131e-04, 1.8955e-03,  ..., 2.1048e-02,
          7.9185e-04, 1.5834e-02],
         [9.6997e-01, 9.6604e-04, 1.8955e-03,  ..., 9.2094e-01,
          7.6199e-04, 9.5106e-01],
         [1.0010e-02, 9.9709e-01, 1.8955e-03,  ..., 3.6960e-02,
          9.9768e-01, 1.5834e-02]],
        [[1.1483e-02, 8.0228e-04, 5.5242e-04,  ..., 1.2863e-02,
          1.0322e-02, 9.9512e-01],
         [1.1483e-02, 8.0228e-04, 5.5242e-04,  ..., 1.2863e-02,
          1.0322e-02, 1.2882e-03],
         [9.6555e-01, 8.0228e-04, 5.5242e-04,  ..., 9.6141e-01,
          9.6903e-01, 1.2882e-03],
         [1.1483e-02, 9.9759e-01, 9.9834e-01,  ..., 1.2863e-02,
          1.0322e-02, 2.3061e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9791, 0.0069, 0.0352,  ..., 0.9945, 0.6011, 0.0030],
         [0.0061, 0.0069, 0.0153,  ..., 0.0018, 0.0380, 0.0030],
         [0.0086, 0.0083, 0.0186,  ..., 0.0018, 0.0401, 0.0030],
         [0.0061, 0.9779, 0.9309,  ..., 0.0018, 0.3207, 0.9910]],
        [[0.9943, 0.0041, 0.0460,  ..., 0.0038, 0.0033, 0.0039],
         [0.0019, 0.0041, 0.0173,  ..., 0.0038, 0.0033, 0.0039],
         [0.0019, 0.0041, 0.0202,  ..., 0.0038, 0.9901, 0.9882],
         [0.0019, 0.9876, 0.9164,  ..., 0.9886, 0.0033, 0.0039]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4634e-02, 1.2069e-03, 9.9457e-01,  ..., 8.6783e-03,
          1.1731e-03, 8.3576e-03],
         [1.4634e-02, 1.1570e-03, 1.8027e-03,  ..., 8.6783e-03,
          1.1731e-03, 8.3576e-03],
         [9.5610e-01, 1.1570e-03, 1.8027e-03,  ..., 9.7397e-01,
          1.1731e-03, 9.7493e-01],
         [1.4634e-02, 9.9648e-01, 1.8232e-03,  ..., 8.6783e-03,
          9.9648e-01, 8.3576e-03]],
        [[8.7826e-03, 2.5710e-04, 1.3796e-03,  ..., 1.2290e-02,
          1.5256e-02, 9.5321e-01],
         [8.7826e-03, 2.5710e-04, 1.3901e-03,  ..., 1.2290e-02,
          1.4769e-02, 1.0077e-02],
         [9.7365e-01, 2.5710e-04, 1.3796e-03,  ..., 9.6313e-01,
          9.5521e-01, 1.2628e-02],
         [8.7826e-03, 9.9923e-01, 9.9585e-01,  ..., 1.2290e-02,
          1.4769e-02, 2.4089e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9556, 0.0063, 0.0034,  ..., 0.9895, 0.9796, 0.0043],
         [0.0111, 0.0063, 0.0034,  ..., 0.0035, 0.0062, 0.0043],
         [0.0222, 0.0063, 0.0034,  ..., 0.0035, 0.0062, 0.0043],
         [0.0111, 0.9812, 0.9898,  ..., 0.0035, 0.0079, 0.9870]],
        [[0.9857, 0.0034, 0.0218,  ..., 0.0088, 0.0025, 0.0034],
         [0.0044, 0.0034, 0.0154,  ..., 0.0088, 0.0025, 0.0034],
         [0.0055, 0.0034, 0.0197,  ..., 0.0138, 0.9925, 0.9898],
         [0.0044, 0.9899, 0.9431,  ..., 0.9687, 0.0025, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:13,395 [Process: 0] Synchronize training processes
2024-08-18 15:05:13,395 [Process: 0] Evaluating...
2024-08-18 15:05:13,399 [Process: 0] EPOCH 162:
2024-08-18 15:05:13,401 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1264e-02, 3.5418e-04, 9.9570e-01,  ..., 1.5206e-02,
          2.7436e-04, 8.0553e-03],
         [1.1264e-02, 3.7754e-04, 1.4323e-03,  ..., 1.5206e-02,
          3.0753e-04, 8.0553e-03],
         [9.6621e-01, 3.5418e-04, 1.4323e-03,  ..., 9.5283e-01,
          2.7436e-04, 9.7583e-01],
         [1.1264e-02, 9.9891e-01, 1.4323e-03,  ..., 1.6761e-02,
          9.9914e-01, 8.0553e-03]],
        [[1.5910e-02, 3.3673e-04, 4.1898e-04,  ..., 3.1618e-02,
          1.3208e-02, 9.8155e-01],
         [1.5644e-02, 3.4926e-04, 4.3746e-04,  ..., 2.0608e-02,
          1.3719e-02, 6.1488e-03],
         [9.5123e-01, 3.3673e-04, 4.1898e-04,  ..., 9.1784e-01,
          9.5932e-01, 6.1488e-03],
         [1.7214e-02, 9.9898e-01, 9.9872e-01,  ..., 2.9932e-02,
          1.3755e-02, 6.1488e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9757e-01, 4.0592e-03, 8.3850e-03,  ..., 9.9281e-01,
          9.9404e-01, 2.4669e-03],
         [8.1151e-04, 4.0592e-03, 6.2679e-03,  ..., 2.3983e-03,
          1.9854e-03, 2.4669e-03],
         [8.1151e-04, 4.0592e-03, 6.2679e-03,  ..., 2.3983e-03,
          1.9854e-03, 2.4669e-03],
         [8.1151e-04, 9.8782e-01, 9.7908e-01,  ..., 2.3983e-03,
          1.9854e-03, 9.9260e-01]],
        [[9.9736e-01, 1.6050e-02, 3.5608e-03,  ..., 3.6972e-03,
          3.4775e-03, 6.5321e-03],
         [8.7837e-04, 1.6050e-02, 3.5608e-03,  ..., 3.6972e-03,
          3.4775e-03, 5.8781e-03],
         [8.7837e-04, 2.6469e-02, 3.5608e-03,  ..., 3.6972e-03,
          9.8957e-01, 9.8171e-01],
         [8.7837e-04, 9.4143e-01, 9.8932e-01,  ..., 9.8891e-01,
          3.4775e-03, 5.8781e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1333e-02, 2.6920e-03, 9.9287e-01,  ..., 1.4977e-02,
          1.2504e-04, 1.6044e-02],
         [1.1333e-02, 2.6920e-03, 2.3771e-03,  ..., 1.4977e-02,
          1.2504e-04, 1.6044e-02],
         [9.6600e-01, 2.6920e-03, 2.3771e-03,  ..., 9.5172e-01,
          1.2504e-04, 9.4626e-01],
         [1.1333e-02, 9.9192e-01, 2.3771e-03,  ..., 1.8325e-02,
          9.9962e-01, 2.1653e-02]],
        [[1.1360e-02, 3.7447e-04, 2.6804e-04,  ..., 9.5563e-03,
          1.1491e-02, 9.4639e-01],
         [1.1360e-02, 3.7447e-04, 2.6804e-04,  ..., 9.5563e-03,
          1.1491e-02, 1.0869e-02],
         [9.6592e-01, 3.7447e-04, 2.6804e-04,  ..., 9.7133e-01,
          9.6553e-01, 1.4123e-02],
         [1.1360e-02, 9.9888e-01, 9.9920e-01,  ..., 9.5563e-03,
          1.1491e-02, 2.8616e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:14,547 [Process: 0] Synchronize training processes
2024-08-18 15:05:14,547 [Process: 0] Evaluating...
2024-08-18 15:05:14,549 [Process: 0] EPOCH 163:
2024-08-18 15:05:14,550 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:15,708 [Process: 0] Synchronize training processes
2024-08-18 15:05:15,708 [Process: 0] Evaluating...
2024-08-18 15:05:15,710 [Process: 0] EPOCH 164:
2024-08-18 15:05:15,712 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9948, 0.0016, 0.0096,  ..., 0.9958, 0.9870, 0.0091],
         [0.0017, 0.0016, 0.0096,  ..., 0.0014, 0.0043, 0.0091],
         [0.0017, 0.0016, 0.0122,  ..., 0.0014, 0.0043, 0.0091],
         [0.0017, 0.9953, 0.9686,  ..., 0.0014, 0.0044, 0.9728]],
        [[0.9956, 0.0040, 0.0071,  ..., 0.0065, 0.0047, 0.0048],
         [0.0015, 0.0040, 0.0071,  ..., 0.0065, 0.0047, 0.0048],
         [0.0015, 0.0040, 0.0089,  ..., 0.0089, 0.9859, 0.9856],
         [0.0015, 0.9881, 0.9770,  ..., 0.9781, 0.0047, 0.0048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4085e-02, 5.2231e-04, 9.9116e-01,  ..., 1.5566e-02,
          4.0262e-04, 1.3623e-02],
         [1.4173e-02, 5.2231e-04, 1.8650e-03,  ..., 1.5566e-02,
          4.0262e-04, 1.3623e-02],
         [9.5541e-01, 5.2231e-04, 1.8650e-03,  ..., 9.4462e-01,
          4.0262e-04, 9.5571e-01],
         [1.6331e-02, 9.9843e-01, 5.1139e-03,  ..., 2.4244e-02,
          9.9879e-01, 1.7045e-02]],
        [[1.3844e-02, 2.2208e-04, 1.3929e-04,  ..., 6.4677e-03,
          1.5656e-02, 9.9652e-01],
         [1.3844e-02, 2.2928e-04, 1.3929e-04,  ..., 6.4677e-03,
          1.5656e-02, 1.1592e-03],
         [9.5800e-01, 2.2208e-04, 1.3929e-04,  ..., 9.8060e-01,
          9.4964e-01, 1.1592e-03],
         [1.4317e-02, 9.9933e-01, 9.9958e-01,  ..., 6.4677e-03,
          1.9048e-02, 1.1592e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9962, 0.0051, 0.0065,  ..., 0.9832, 0.9793, 0.0038],
         [0.0013, 0.0051, 0.0069,  ..., 0.0051, 0.0052, 0.0038],
         [0.0013, 0.0051, 0.0065,  ..., 0.0066, 0.0052, 0.0038],
         [0.0013, 0.9846, 0.9801,  ..., 0.0051, 0.0103, 0.9886]],
        [[0.9957, 0.0053, 0.0070,  ..., 0.0027, 0.0033, 0.0030],
         [0.0014, 0.0053, 0.0070,  ..., 0.0027, 0.0033, 0.0030],
         [0.0014, 0.0053, 0.0105,  ..., 0.0027, 0.9901, 0.9910],
         [0.0014, 0.9840, 0.9754,  ..., 0.9918, 0.0033, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-18 15:05:16,871 [Process: 0] Synchronize training processes
2024-08-18 15:05:16,871 [Process: 0] Evaluating...
2024-08-18 15:05:16,873 [Process: 0] EPOCH 165:
2024-08-18 15:05:16,875 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:18,027 [Process: 0] Synchronize training processes
2024-08-18 15:05:18,027 [Process: 0] Evaluating...
2024-08-18 15:05:18,029 [Process: 0] EPOCH 166:
2024-08-18 15:05:18,030 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[1.1805e-02, 6.7308e-04, 9.8343e-01,  ..., 1.6363e-02,
          3.7715e-05, 1.5135e-02],
         [1.1805e-02, 6.7308e-04, 5.3755e-03,  ..., 1.6363e-02,
          3.7715e-05, 1.5135e-02],
         [9.6459e-01, 6.7308e-04, 5.3755e-03,  ..., 9.4358e-01,
          3.7715e-05, 9.5044e-01],
         [1.1805e-02, 9.9798e-01, 5.8174e-03,  ..., 2.3692e-02,
          9.9989e-01, 1.9292e-02]],
        [[2.8163e-02, 5.3281e-04, 1.0438e-04,  ..., 1.2220e-02,
          1.4236e-02, 9.9539e-01],
         [1.7926e-02, 5.3281e-04, 1.0438e-04,  ..., 1.2220e-02,
          1.4236e-02, 1.5379e-03],
         [9.3131e-01, 5.3281e-04, 1.0438e-04,  ..., 9.6233e-01,
          9.5471e-01, 1.5379e-03],
         [2.2602e-02, 9.9840e-01, 9.9969e-01,  ..., 1.3228e-02,
          1.6819e-02, 1.5379e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9836e-01, 4.3704e-03, 1.2716e-02,  ..., 9.8178e-01,
          7.1755e-02, 3.3033e-03],
         [5.4706e-04, 4.3704e-03, 9.4231e-03,  ..., 5.5025e-03,
          3.2453e-02, 3.3033e-03],
         [5.4706e-04, 4.6798e-03, 1.1047e-02,  ..., 7.2195e-03,
          5.3788e-02, 3.3033e-03],
         [5.4706e-04, 9.8658e-01, 9.6681e-01,  ..., 5.5025e-03,
          8.4200e-01, 9.9009e-01]],
        [[9.8557e-01, 5.6475e-03, 9.7012e-03,  ..., 1.1607e-02,
          4.4780e-03, 4.0351e-03],
         [4.6791e-03, 5.6475e-03, 9.7012e-03,  ..., 1.0603e-02,
          4.4780e-03, 4.0351e-03],
         [5.0736e-03, 5.6475e-03, 1.7232e-02,  ..., 1.0603e-02,
          9.8657e-01, 9.8789e-01],
         [4.6791e-03, 9.8306e-01, 9.6337e-01,  ..., 9.6719e-01,
          4.4780e-03, 4.0351e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5953e-02, 4.3828e-04, 9.8518e-01,  ..., 1.3867e-02,
          2.7818e-05, 1.5596e-02],
         [1.5953e-02, 4.3828e-04, 4.4410e-03,  ..., 1.3867e-02,
          2.7818e-05, 1.5596e-02],
         [9.5045e-01, 4.3828e-04, 4.4410e-03,  ..., 9.5840e-01,
          2.7818e-05, 9.5218e-01],
         [1.7643e-02, 9.9869e-01, 5.9411e-03,  ..., 1.3867e-02,
          9.9992e-01, 1.6627e-02]],
        [[1.1955e-02, 2.2291e-03, 2.1080e-05,  ..., 1.3564e-02,
          1.9157e-02, 9.9271e-01],
         [1.1955e-02, 2.2291e-03, 2.1080e-05,  ..., 1.3564e-02,
          1.7994e-02, 2.4304e-03],
         [9.6414e-01, 2.2291e-03, 2.1080e-05,  ..., 9.5931e-01,
          9.3954e-01, 2.4304e-03],
         [1.1955e-02, 9.9331e-01, 9.9994e-01,  ..., 1.3564e-02,
          2.3308e-02, 2.4304e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9921, 0.0034, 0.0058,  ..., 0.9893, 0.9793, 0.0068],
         [0.0025, 0.0034, 0.0058,  ..., 0.0036, 0.0062, 0.0068],
         [0.0030, 0.0034, 0.0081,  ..., 0.0036, 0.0062, 0.0068],
         [0.0025, 0.9898, 0.9803,  ..., 0.0036, 0.0082, 0.9796]],
        [[0.9958, 0.0119, 0.0084,  ..., 0.0056, 0.0013, 0.0029],
         [0.0014, 0.0086, 0.0084,  ..., 0.0056, 0.0013, 0.0029],
         [0.0014, 0.0086, 0.0118,  ..., 0.0069, 0.9962, 0.9913],
         [0.0014, 0.9709, 0.9714,  ..., 0.9818, 0.0013, 0.0029]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:19,187 [Process: 0] Synchronize training processes
2024-08-18 15:05:19,187 [Process: 0] Evaluating...
2024-08-18 15:05:19,189 [Process: 0] EPOCH 167:
2024-08-18 15:05:19,190 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:20,341 [Process: 0] Synchronize training processes
2024-08-18 15:05:20,341 [Process: 0] Evaluating...
2024-08-18 15:05:20,343 [Process: 0] EPOCH 168:
2024-08-18 15:05:20,344 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2631e-03, 5.2053e-04, 9.9571e-01,  ..., 9.3337e-03,
          2.2864e-04, 8.4208e-03],
         [7.2631e-03, 5.2053e-04, 1.4288e-03,  ..., 9.3337e-03,
          2.2864e-04, 8.4208e-03],
         [9.7821e-01, 5.2053e-04, 1.4288e-03,  ..., 9.7200e-01,
          2.2864e-04, 9.7474e-01],
         [7.2631e-03, 9.9844e-01, 1.4288e-03,  ..., 9.3337e-03,
          9.9931e-01, 8.4208e-03]],
        [[9.7496e-03, 2.1670e-03, 2.9769e-03,  ..., 5.6065e-03,
          8.4333e-03, 9.9261e-01],
         [9.7496e-03, 1.9798e-03, 1.6214e-03,  ..., 5.6065e-03,
          8.4333e-03, 2.0481e-03],
         [9.7075e-01, 1.9798e-03, 1.6214e-03,  ..., 9.8318e-01,
          9.7470e-01, 2.0481e-03],
         [9.7496e-03, 9.9387e-01, 9.9378e-01,  ..., 5.6065e-03,
          8.4333e-03, 3.2986e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9968, 0.0048, 0.0115,  ..., 0.9791, 0.9619, 0.0064],
         [0.0011, 0.0048, 0.0115,  ..., 0.0056, 0.0107, 0.0064],
         [0.0011, 0.0048, 0.0202,  ..., 0.0097, 0.0120, 0.0064],
         [0.0011, 0.9855, 0.9567,  ..., 0.0056, 0.0154, 0.9808]],
        [[0.9955, 0.0155, 0.0174,  ..., 0.0076, 0.0021, 0.0059],
         [0.0015, 0.0155, 0.0174,  ..., 0.0076, 0.0021, 0.0059],
         [0.0015, 0.0252, 0.0207,  ..., 0.0076, 0.9938, 0.9824],
         [0.0015, 0.9437, 0.9445,  ..., 0.9772, 0.0021, 0.0059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7546e-03, 3.2903e-03, 9.9402e-01,  ..., 1.0072e-02,
          5.3540e-04, 8.0777e-03],
         [3.7546e-03, 3.2903e-03, 1.9940e-03,  ..., 9.9576e-03,
          5.3540e-04, 8.0777e-03],
         [9.8874e-01, 3.2903e-03, 1.9940e-03,  ..., 9.7001e-01,
          5.3540e-04, 9.7577e-01],
         [3.7546e-03, 9.9013e-01, 1.9940e-03,  ..., 9.9576e-03,
          9.9839e-01, 8.0777e-03]],
        [[9.1899e-03, 1.6276e-03, 3.6303e-03,  ..., 6.7186e-03,
          5.9310e-03, 9.8914e-01],
         [9.1899e-03, 1.6276e-03, 2.7627e-03,  ..., 6.7186e-03,
          5.8479e-03, 3.6203e-03],
         [9.7243e-01, 1.6276e-03, 2.7627e-03,  ..., 9.7984e-01,
          6.8211e-03, 3.6203e-03],
         [9.1899e-03, 9.9512e-01, 9.9084e-01,  ..., 6.7186e-03,
          9.8140e-01, 3.6203e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:05:21,495 [Process: 0] Synchronize training processes
2024-08-18 15:05:21,495 [Process: 0] Evaluating...
2024-08-18 15:05:21,497 [Process: 0] EPOCH 169:
2024-08-18 15:05:21,499 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9719, 0.0018, 0.0059,  ..., 0.9914, 0.1982, 0.0067],
         [0.0056, 0.0018, 0.0059,  ..., 0.0029, 0.0186, 0.0067],
         [0.0169, 0.0018, 0.0066,  ..., 0.0029, 0.0186, 0.0067],
         [0.0056, 0.9945, 0.9817,  ..., 0.0029, 0.7645, 0.9800]],
        [[0.0051, 0.0045, 0.0048,  ..., 0.0192, 0.0020, 0.0053],
         [0.0051, 0.0045, 0.0048,  ..., 0.0117, 0.0020, 0.0053],
         [0.9848, 0.0057, 0.0058,  ..., 0.0117, 0.9941, 0.9841],
         [0.0051, 0.9853, 0.9845,  ..., 0.9575, 0.0020, 0.0053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2228e-03, 1.8147e-04, 9.9410e-01,  ..., 9.7981e-03,
          1.1909e-03, 8.5242e-03],
         [5.2228e-03, 1.8147e-04, 1.9682e-03,  ..., 9.7981e-03,
          1.1985e-03, 8.5242e-03],
         [9.8433e-01, 1.8147e-04, 1.9682e-03,  ..., 9.7061e-01,
          1.1909e-03, 9.7443e-01],
         [5.2228e-03, 9.9946e-01, 1.9682e-03,  ..., 9.7981e-03,
          9.9642e-01, 8.5242e-03]],
        [[5.2950e-03, 1.3857e-04, 7.0180e-05,  ..., 1.1321e-02,
          1.8775e-02, 9.9315e-01],
         [5.2950e-03, 1.3857e-04, 7.0180e-05,  ..., 1.1321e-02,
          1.8775e-02, 2.2833e-03],
         [9.8412e-01, 1.3857e-04, 7.0180e-05,  ..., 9.6604e-01,
          9.2564e-01, 2.2833e-03],
         [5.2950e-03, 9.9958e-01, 9.9979e-01,  ..., 1.1321e-02,
          3.6815e-02, 2.2833e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9690, 0.0018, 0.0522,  ..., 0.9968, 0.9928, 0.0028],
         [0.0074, 0.0018, 0.0155,  ..., 0.0011, 0.0022, 0.0028],
         [0.0162, 0.0018, 0.0184,  ..., 0.0011, 0.0022, 0.0028],
         [0.0074, 0.9946, 0.9139,  ..., 0.0011, 0.0028, 0.9915]],
        [[0.0068, 0.0024, 0.0149,  ..., 0.0093, 0.0015, 0.0028],
         [0.0068, 0.0025, 0.0094,  ..., 0.0086, 0.0015, 0.0028],
         [0.9795, 0.0024, 0.0094,  ..., 0.0086, 0.9954, 0.9915],
         [0.0068, 0.9926, 0.9662,  ..., 0.9735, 0.0015, 0.0028]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1173e-02, 9.5211e-04, 9.8146e-01,  ..., 9.2218e-03,
          7.6361e-03, 6.2709e-03],
         [1.1173e-02, 9.5211e-04, 5.1120e-03,  ..., 9.2218e-03,
          7.6361e-03, 6.2709e-03],
         [9.6536e-01, 9.5211e-04, 5.1120e-03,  ..., 9.7233e-01,
          7.6361e-03, 9.8119e-01],
         [1.2298e-02, 9.9714e-01, 8.3149e-03,  ..., 9.2218e-03,
          9.7709e-01, 6.2709e-03]],
        [[1.1415e-02, 1.1106e-04, 6.2991e-03,  ..., 1.0492e-02,
          1.9149e-02, 9.9408e-01],
         [1.1415e-02, 1.1106e-04, 5.3828e-03,  ..., 1.0492e-02,
          1.9149e-02, 1.7072e-03],
         [9.6576e-01, 1.1106e-04, 6.1394e-03,  ..., 9.6852e-01,
          9.2097e-01, 1.7072e-03],
         [1.1415e-02, 9.9967e-01, 9.8218e-01,  ..., 1.0492e-02,
          4.0733e-02, 2.5051e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:22,650 [Process: 0] Synchronize training processes
2024-08-18 15:05:22,650 [Process: 0] Evaluating...
2024-08-18 15:05:22,652 [Process: 0] EPOCH 170:
2024-08-18 15:05:22,654 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:23,802 [Process: 0] Synchronize training processes
2024-08-18 15:05:23,802 [Process: 0] Evaluating...
2024-08-18 15:05:23,804 [Process: 0] EPOCH 171:
2024-08-18 15:05:23,805 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9618, 0.0069, 0.0079,  ..., 0.9928, 0.0165, 0.0061],
         [0.0107, 0.0069, 0.0066,  ..., 0.0024, 0.0064, 0.0061],
         [0.0169, 0.0069, 0.0066,  ..., 0.0024, 0.0064, 0.0062],
         [0.0107, 0.9792, 0.9788,  ..., 0.0024, 0.9708, 0.9817]],
        [[0.0034, 0.0028, 0.0029,  ..., 0.0033, 0.0031, 0.0049],
         [0.0034, 0.0028, 0.0030,  ..., 0.0033, 0.0031, 0.0049],
         [0.9899, 0.0028, 0.0029,  ..., 0.0033, 0.9908, 0.9852],
         [0.0034, 0.9917, 0.9911,  ..., 0.9900, 0.0031, 0.0049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.4749e-03, 1.9595e-03, 9.8947e-01,  ..., 1.5535e-02,
          4.7577e-04, 1.2699e-02],
         [8.4749e-03, 1.9595e-03, 3.4747e-03,  ..., 1.5535e-02,
          4.7577e-04, 1.2699e-02],
         [9.7458e-01, 1.9595e-03, 3.4747e-03,  ..., 9.4594e-01,
          4.7577e-04, 9.6115e-01],
         [8.4749e-03, 9.9412e-01, 3.5764e-03,  ..., 2.2986e-02,
          9.9857e-01, 1.3452e-02]],
        [[1.0624e-02, 9.4103e-03, 9.8408e-05,  ..., 1.0285e-02,
          8.5556e-03, 9.9025e-01],
         [1.0624e-02, 3.7354e-03, 9.8408e-05,  ..., 1.0285e-02,
          8.5556e-03, 2.9776e-03],
         [9.6813e-01, 3.7354e-03, 9.8408e-05,  ..., 9.6856e-01,
          9.7433e-01, 2.9776e-03],
         [1.0624e-02, 9.8312e-01, 9.9970e-01,  ..., 1.0866e-02,
          8.5556e-03, 3.7927e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9908, 0.0014, 0.0048,  ..., 0.9891, 0.9848, 0.0032],
         [0.0031, 0.0014, 0.0048,  ..., 0.0036, 0.0028, 0.0032],
         [0.0031, 0.0014, 0.0048,  ..., 0.0036, 0.0028, 0.0032],
         [0.0031, 0.9959, 0.9857,  ..., 0.0036, 0.0097, 0.9904]],
        [[0.0067, 0.0105, 0.0026,  ..., 0.0180, 0.0033, 0.0052],
         [0.0056, 0.0071, 0.0026,  ..., 0.0084, 0.0033, 0.0046],
         [0.9822, 0.0071, 0.0026,  ..., 0.0084, 0.9902, 0.9856],
         [0.0056, 0.9753, 0.9923,  ..., 0.9652, 0.0033, 0.0046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:05:24,958 [Process: 0] Synchronize training processes
2024-08-18 15:05:24,958 [Process: 0] Evaluating...
2024-08-18 15:05:24,963 [Process: 0] EPOCH 172:
2024-08-18 15:05:24,964 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:26,111 [Process: 0] Synchronize training processes
2024-08-18 15:05:26,112 [Process: 0] Evaluating...
2024-08-18 15:05:26,113 [Process: 0] EPOCH 173:
2024-08-18 15:05:26,115 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2166e-02, 1.0581e-04, 9.5552e-01,  ..., 1.1745e-02,
          8.9445e-03, 9.5829e-03],
         [1.2166e-02, 1.0581e-04, 7.8654e-03,  ..., 1.1745e-02,
          8.9445e-03, 9.5829e-03],
         [9.6350e-01, 1.0581e-04, 7.8654e-03,  ..., 9.6476e-01,
          9.7317e-01, 9.7125e-01],
         [1.2166e-02, 9.9968e-01, 2.8751e-02,  ..., 1.1745e-02,
          8.9445e-03, 9.5829e-03]],
        [[1.1499e-02, 5.5841e-04, 1.9553e-05,  ..., 1.2910e-02,
          1.2198e-02, 9.9493e-01],
         [1.1499e-02, 5.9218e-04, 1.9553e-05,  ..., 1.2910e-02,
          1.2198e-02, 1.3729e-03],
         [9.6550e-01, 5.5841e-04, 1.9553e-05,  ..., 9.5782e-01,
          9.6292e-01, 1.3729e-03],
         [1.1499e-02, 9.9829e-01, 9.9994e-01,  ..., 1.6358e-02,
          1.2684e-02, 2.3208e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9947, 0.0019, 0.0016,  ..., 0.9955, 0.9878, 0.0058],
         [0.0018, 0.0019, 0.0016,  ..., 0.0015, 0.0030, 0.0058],
         [0.0018, 0.0019, 0.0016,  ..., 0.0015, 0.0030, 0.0058],
         [0.0018, 0.9942, 0.9953,  ..., 0.0015, 0.0063, 0.9826]],
        [[0.0031, 0.0102, 0.0049,  ..., 0.0160, 0.0033, 0.0101],
         [0.0031, 0.0085, 0.0049,  ..., 0.0137, 0.0033, 0.0072],
         [0.9907, 0.0094, 0.0049,  ..., 0.0276, 0.9902, 0.9754],
         [0.0031, 0.9719, 0.9853,  ..., 0.9427, 0.0033, 0.0072]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0590e-02, 1.3423e-04, 9.6568e-01,  ..., 1.3493e-02,
          1.4365e-02, 8.0818e-03],
         [1.0590e-02, 1.3423e-04, 4.9509e-03,  ..., 1.3493e-02,
          1.4365e-02, 8.0818e-03],
         [9.6823e-01, 1.3423e-04, 4.9509e-03,  ..., 9.5879e-01,
          9.5474e-01, 9.7575e-01],
         [1.0590e-02, 9.9960e-01, 2.4418e-02,  ..., 1.4221e-02,
          1.6535e-02, 8.0818e-03]],
        [[8.9477e-03, 2.2733e-04, 1.4256e-03,  ..., 1.9604e-02,
          1.2171e-02, 9.7836e-01],
         [8.9477e-03, 2.0531e-04, 1.4256e-03,  ..., 1.9604e-02,
          1.2171e-02, 5.7202e-03],
         [9.7316e-01, 2.0531e-04, 1.4256e-03,  ..., 9.3041e-01,
          9.6349e-01, 5.7202e-03],
         [8.9477e-03, 9.9936e-01, 9.9572e-01,  ..., 3.0386e-02,
          1.2171e-02, 1.0198e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9784e-01, 3.2369e-03, 4.3422e-03,  ..., 9.9062e-01,
          9.8348e-01, 2.5661e-03],
         [7.1986e-04, 3.2369e-03, 4.3422e-03,  ..., 3.1279e-03,
          4.7007e-03, 2.5661e-03],
         [7.1986e-04, 3.2369e-03, 4.3422e-03,  ..., 3.1279e-03,
          4.7007e-03, 2.5661e-03],
         [7.1986e-04, 9.9029e-01, 9.8697e-01,  ..., 3.1279e-03,
          7.1196e-03, 9.9230e-01]],
        [[3.1364e-03, 8.2743e-03, 2.6494e-02,  ..., 1.7515e-02,
          4.1308e-03, 1.0260e-02],
         [3.1364e-03, 8.2743e-03, 1.0043e-02,  ..., 1.0836e-02,
          4.1308e-03, 7.3027e-03],
         [9.9059e-01, 1.2259e-02, 1.0197e-02,  ..., 1.2690e-02,
          9.8761e-01, 9.7513e-01],
         [3.1364e-03, 9.7119e-01, 9.5327e-01,  ..., 9.5896e-01,
          4.1308e-03, 7.3027e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:27,264 [Process: 0] Synchronize training processes
2024-08-18 15:05:27,264 [Process: 0] Evaluating...
2024-08-18 15:05:27,266 [Process: 0] EPOCH 174:
2024-08-18 15:05:27,268 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5294e-02, 7.8593e-05, 9.8599e-01,  ..., 1.2732e-02,
          2.0976e-04, 9.6857e-03],
         [1.9092e-02, 7.8593e-05, 2.5601e-03,  ..., 1.2732e-02,
          2.0976e-04, 9.6857e-03],
         [9.2871e-01, 7.8593e-05, 2.5601e-03,  ..., 9.6090e-01,
          2.0976e-04, 9.7094e-01],
         [2.6904e-02, 9.9976e-01, 8.8879e-03,  ..., 1.3640e-02,
          9.9937e-01, 9.6857e-03]],
        [[1.9657e-02, 4.6515e-04, 3.9802e-04,  ..., 1.0091e-02,
          1.8725e-02, 9.9211e-01],
         [1.5957e-02, 4.6515e-04, 3.9802e-04,  ..., 1.0091e-02,
          1.8725e-02, 1.8712e-03],
         [9.4683e-01, 4.6515e-04, 3.9802e-04,  ..., 9.6973e-01,
          9.3113e-01, 1.8712e-03],
         [1.7558e-02, 9.9860e-01, 9.9881e-01,  ..., 1.0091e-02,
          3.1425e-02, 4.1520e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9749e-01, 3.7195e-03, 8.2652e-03,  ..., 9.9485e-01,
          9.2376e-01, 5.0381e-03],
         [8.3737e-04, 3.7195e-03, 8.2652e-03,  ..., 1.7157e-03,
          1.1999e-02, 5.0381e-03],
         [8.3737e-04, 3.7195e-03, 1.0580e-02,  ..., 1.7157e-03,
          1.1999e-02, 5.0381e-03],
         [8.3737e-04, 9.8884e-01, 9.7289e-01,  ..., 1.7157e-03,
          5.2238e-02, 9.8489e-01]],
        [[2.4484e-03, 3.7192e-03, 6.4333e-03,  ..., 1.2558e-02,
          4.5639e-03, 1.0921e-02],
         [2.4484e-03, 3.7192e-03, 6.1587e-03,  ..., 8.3801e-03,
          4.5639e-03, 8.0996e-03],
         [9.9265e-01, 3.7192e-03, 7.0417e-03,  ..., 8.7089e-03,
          9.8631e-01, 9.7288e-01],
         [2.4484e-03, 9.8884e-01, 9.8037e-01,  ..., 9.7035e-01,
          4.5639e-03, 8.0996e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0879e-02, 7.2762e-05, 9.3787e-01,  ..., 1.3689e-02,
          6.8043e-04, 5.2206e-03],
         [1.0879e-02, 7.2762e-05, 1.2525e-02,  ..., 1.3689e-02,
          6.0242e-04, 5.2206e-03],
         [9.6736e-01, 7.2762e-05, 1.6669e-02,  ..., 9.5893e-01,
          6.0242e-04, 9.8434e-01],
         [1.0879e-02, 9.9978e-01, 3.2936e-02,  ..., 1.3689e-02,
          9.9811e-01, 5.2206e-03]],
        [[9.2209e-03, 1.6290e-04, 2.1050e-04,  ..., 1.1079e-02,
          2.7503e-04, 9.9423e-01],
         [9.2209e-03, 1.6290e-04, 2.1050e-04,  ..., 1.1079e-02,
          2.7503e-04, 1.9249e-03],
         [9.7234e-01, 1.6290e-04, 2.1050e-04,  ..., 9.6676e-01,
          2.7503e-04, 1.9249e-03],
         [9.2209e-03, 9.9951e-01, 9.9937e-01,  ..., 1.1079e-02,
          9.9917e-01, 1.9249e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:05:28,424 [Process: 0] Synchronize training processes
2024-08-18 15:05:28,425 [Process: 0] Evaluating...
2024-08-18 15:05:28,426 [Process: 0] EPOCH 175:
2024-08-18 15:05:28,428 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:29,572 [Process: 0] Synchronize training processes
2024-08-18 15:05:29,572 [Process: 0] Evaluating...
2024-08-18 15:05:29,574 [Process: 0] EPOCH 176:
2024-08-18 15:05:29,576 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9688, 0.0101, 0.0029,  ..., 0.9871, 0.9770, 0.0268],
         [0.0061, 0.0101, 0.0029,  ..., 0.0040, 0.0057, 0.0091],
         [0.0190, 0.0143, 0.0029,  ..., 0.0050, 0.0057, 0.0091],
         [0.0061, 0.9656, 0.9912,  ..., 0.0040, 0.0115, 0.9550]],
        [[0.0029, 0.0029, 0.0020,  ..., 0.0020, 0.0021, 0.0070],
         [0.0029, 0.0029, 0.0020,  ..., 0.0020, 0.0021, 0.0063],
         [0.9914, 0.0029, 0.0020,  ..., 0.0020, 0.9936, 0.9804],
         [0.0029, 0.9914, 0.9940,  ..., 0.9939, 0.0021, 0.0063]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4968e-02, 4.3427e-04, 9.6899e-01,  ..., 1.3232e-02,
          9.7323e-04, 9.2603e-03],
         [1.4968e-02, 4.3427e-04, 7.4807e-03,  ..., 1.3232e-02,
          9.7323e-04, 9.2603e-03],
         [9.4984e-01, 4.3427e-04, 7.4807e-03,  ..., 9.5832e-01,
          9.7323e-04, 9.7222e-01],
         [2.0221e-02, 9.9870e-01, 1.6050e-02,  ..., 1.5221e-02,
          9.9708e-01, 9.2603e-03]],
        [[1.4157e-02, 2.4086e-03, 2.4967e-04,  ..., 7.8320e-03,
          2.0299e-04, 9.9046e-01],
         [1.4157e-02, 2.2227e-03, 2.4967e-04,  ..., 7.8320e-03,
          2.0299e-04, 2.9197e-03],
         [9.5558e-01, 2.2227e-03, 2.4967e-04,  ..., 9.7650e-01,
          2.0299e-04, 2.9197e-03],
         [1.6103e-02, 9.9315e-01, 9.9925e-01,  ..., 7.8320e-03,
          9.9939e-01, 3.6986e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9933, 0.0029, 0.0087,  ..., 0.9892, 0.9951, 0.0023],
         [0.0021, 0.0029, 0.0087,  ..., 0.0034, 0.0016, 0.0023],
         [0.0026, 0.0029, 0.0110,  ..., 0.0039, 0.0016, 0.0023],
         [0.0021, 0.9914, 0.9715,  ..., 0.0034, 0.0016, 0.9930]],
        [[0.0016, 0.0019, 0.0070,  ..., 0.0146, 0.0032, 0.0064],
         [0.0016, 0.0019, 0.0070,  ..., 0.0113, 0.0032, 0.0058],
         [0.9951, 0.0019, 0.0076,  ..., 0.0152, 0.9903, 0.9821],
         [0.0016, 0.9942, 0.9784,  ..., 0.9588, 0.0032, 0.0058]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1617e-02, 1.3081e-04, 9.9653e-01,  ..., 9.2722e-03,
          3.6117e-05, 1.6758e-02],
         [1.1617e-02, 1.3081e-04, 1.1572e-03,  ..., 9.2722e-03,
          3.6117e-05, 1.2398e-02],
         [9.6515e-01, 1.3081e-04, 1.1572e-03,  ..., 9.7218e-01,
          3.6117e-05, 9.5845e-01],
         [1.1617e-02, 9.9961e-01, 1.1572e-03,  ..., 9.2722e-03,
          9.9989e-01, 1.2398e-02]],
        [[6.9360e-03, 4.0164e-04, 9.5233e-04,  ..., 9.1781e-03,
          2.0007e-03, 9.8581e-01],
         [6.9360e-03, 4.0164e-04, 9.5233e-04,  ..., 9.1781e-03,
          2.0007e-03, 4.6128e-03],
         [9.7919e-01, 4.0164e-04, 9.5233e-04,  ..., 9.7247e-01,
          2.0007e-03, 4.9689e-03],
         [6.9360e-03, 9.9880e-01, 9.9714e-01,  ..., 9.1781e-03,
          9.9400e-01, 4.6128e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:30,749 [Process: 0] Synchronize training processes
2024-08-18 15:05:30,749 [Process: 0] Evaluating...
2024-08-18 15:05:30,751 [Process: 0] EPOCH 177:
2024-08-18 15:05:30,753 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:31,906 [Process: 0] Synchronize training processes
2024-08-18 15:05:31,907 [Process: 0] Evaluating...
2024-08-18 15:05:31,909 [Process: 0] EPOCH 178:
2024-08-18 15:05:31,911 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9968, 0.0050, 0.0011,  ..., 0.9965, 0.9845, 0.0063],
         [0.0011, 0.0050, 0.0011,  ..., 0.0012, 0.0034, 0.0056],
         [0.0011, 0.0050, 0.0011,  ..., 0.0012, 0.0034, 0.0056],
         [0.0011, 0.9851, 0.9967,  ..., 0.0012, 0.0086, 0.9825]],
        [[0.0024, 0.0101, 0.0062,  ..., 0.0018, 0.0050, 0.0076],
         [0.0024, 0.0101, 0.0062,  ..., 0.0018, 0.0048, 0.0060],
         [0.9929, 0.0146, 0.0062,  ..., 0.0018, 0.9854, 0.9805],
         [0.0024, 0.9652, 0.9815,  ..., 0.9946, 0.0048, 0.0060]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2134e-02, 2.4932e-04, 9.9524e-01,  ..., 9.9689e-03,
          1.1395e-03, 2.2104e-02],
         [1.1424e-02, 2.5444e-04, 1.4372e-03,  ..., 9.9689e-03,
          1.1395e-03, 1.4272e-02],
         [9.6502e-01, 2.4932e-04, 1.4372e-03,  ..., 9.7009e-01,
          1.1395e-03, 9.4850e-01],
         [1.1424e-02, 9.9925e-01, 1.8827e-03,  ..., 9.9689e-03,
          9.9658e-01, 1.5123e-02]],
        [[1.8886e-02, 1.4158e-04, 7.0944e-05,  ..., 1.1632e-02,
          1.2339e-02, 9.9655e-01],
         [1.5407e-02, 1.4366e-04, 7.0944e-05,  ..., 1.1632e-02,
          1.2339e-02, 1.1502e-03],
         [9.4669e-01, 1.4158e-04, 7.0944e-05,  ..., 9.6510e-01,
          9.6033e-01, 1.1502e-03],
         [1.9016e-02, 9.9957e-01, 9.9979e-01,  ..., 1.1632e-02,
          1.4996e-02, 1.1502e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9310, 0.0040, 0.0043,  ..., 0.9907, 0.9439, 0.0107],
         [0.0104, 0.0041, 0.0043,  ..., 0.0030, 0.0107, 0.0063],
         [0.0482, 0.0040, 0.0043,  ..., 0.0034, 0.0216, 0.0063],
         [0.0104, 0.9879, 0.9871,  ..., 0.0030, 0.0239, 0.9767]],
        [[0.0047, 0.0038, 0.0094,  ..., 0.0024, 0.0044, 0.0050],
         [0.0047, 0.0038, 0.0094,  ..., 0.0024, 0.0044, 0.0047],
         [0.9859, 0.0038, 0.0094,  ..., 0.0024, 0.9868, 0.9856],
         [0.0047, 0.9887, 0.9718,  ..., 0.9928, 0.0044, 0.0047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:33,061 [Process: 0] Synchronize training processes
2024-08-18 15:05:33,061 [Process: 0] Evaluating...
2024-08-18 15:05:33,063 [Process: 0] EPOCH 179:
2024-08-18 15:05:33,065 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:34,214 [Process: 0] Synchronize training processes
2024-08-18 15:05:34,215 [Process: 0] Evaluating...
2024-08-18 15:05:34,216 [Process: 0] EPOCH 180:
2024-08-18 15:05:34,218 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2109e-02, 5.3609e-05, 9.6914e-01,  ..., 1.5186e-02,
          7.8680e-05, 2.8662e-02],
         [1.2109e-02, 5.3609e-05, 7.4030e-03,  ..., 1.2844e-02,
          7.8680e-05, 1.7333e-02],
         [9.6367e-01, 5.3609e-05, 8.4552e-03,  ..., 9.5904e-01,
          7.8680e-05, 9.3079e-01],
         [1.2109e-02, 9.9984e-01, 1.5000e-02,  ..., 1.2931e-02,
          9.9976e-01, 2.3212e-02]],
        [[2.4841e-02, 1.3699e-05, 1.7501e-04,  ..., 9.0339e-03,
          9.3273e-03, 9.9598e-01],
         [1.6603e-02, 1.3699e-05, 1.7501e-04,  ..., 9.0339e-03,
          9.3273e-03, 1.3399e-03],
         [9.3557e-01, 1.3699e-05, 1.7501e-04,  ..., 9.7290e-01,
          9.7202e-01, 1.3399e-03],
         [2.2986e-02, 9.9996e-01, 9.9947e-01,  ..., 9.0339e-03,
          9.3273e-03, 1.3399e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9300, 0.0012, 0.0018,  ..., 0.9891, 0.9832, 0.0070],
         [0.0097, 0.0012, 0.0018,  ..., 0.0033, 0.0050, 0.0056],
         [0.0505, 0.0012, 0.0018,  ..., 0.0043, 0.0069, 0.0056],
         [0.0097, 0.9963, 0.9945,  ..., 0.0033, 0.0050, 0.9818]],
        [[0.0557, 0.0039, 0.0107,  ..., 0.0131, 0.0016, 0.0036],
         [0.0198, 0.0039, 0.0107,  ..., 0.0113, 0.0016, 0.0036],
         [0.9041, 0.0039, 0.0200,  ..., 0.0163, 0.9951, 0.9892],
         [0.0204, 0.9882, 0.9586,  ..., 0.9594, 0.0016, 0.0036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1983e-02, 6.9705e-05, 9.4740e-01,  ..., 8.2681e-03,
          4.8782e-05, 6.6486e-03],
         [1.1047e-02, 6.9705e-05, 9.1689e-03,  ..., 8.2681e-03,
          4.8782e-05, 6.6486e-03],
         [9.6592e-01, 6.9705e-05, 9.1689e-03,  ..., 9.7520e-01,
          4.8782e-05, 9.8005e-01],
         [1.1047e-02, 9.9979e-01, 3.4260e-02,  ..., 8.2681e-03,
          9.9985e-01, 6.6486e-03]],
        [[7.9868e-03, 7.4017e-05, 4.3755e-04,  ..., 9.9504e-03,
          1.0815e-02, 9.3414e-01],
         [7.9868e-03, 7.4017e-05, 4.0405e-04,  ..., 9.9504e-03,
          1.0815e-02, 1.2708e-02],
         [9.7604e-01, 7.4017e-05, 4.0405e-04,  ..., 9.7015e-01,
          9.6742e-01, 2.9185e-02],
         [7.9868e-03, 9.9978e-01, 9.9875e-01,  ..., 9.9504e-03,
          1.0948e-02, 2.3963e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9873, 0.0030, 0.0057,  ..., 0.9796, 0.1770, 0.0044],
         [0.0035, 0.0030, 0.0060,  ..., 0.0055, 0.0163, 0.0044],
         [0.0057, 0.0030, 0.0057,  ..., 0.0095, 0.0163, 0.0044],
         [0.0035, 0.9909, 0.9827,  ..., 0.0055, 0.7903, 0.9869]],
        [[0.9939, 0.0035, 0.0076,  ..., 0.0022, 0.0141, 0.0038],
         [0.0020, 0.0035, 0.0076,  ..., 0.0024, 0.0077, 0.0038],
         [0.0020, 0.0035, 0.0076,  ..., 0.0022, 0.9706, 0.9886],
         [0.0020, 0.9896, 0.9772,  ..., 0.9931, 0.0077, 0.0038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:35,373 [Process: 0] Synchronize training processes
2024-08-18 15:05:35,374 [Process: 0] Evaluating...
2024-08-18 15:05:35,375 [Process: 0] EPOCH 181:
2024-08-18 15:05:35,377 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.9278e-03, 2.0889e-03, 9.9750e-01,  ..., 5.9554e-03,
          3.5283e-04, 8.8332e-03],
         [7.9278e-03, 1.0567e-03, 8.3191e-04,  ..., 5.9554e-03,
          3.5283e-04, 8.8332e-03],
         [9.7622e-01, 1.0567e-03, 8.3191e-04,  ..., 9.8213e-01,
          3.5283e-04, 9.7350e-01],
         [7.9278e-03, 9.9580e-01, 8.3191e-04,  ..., 5.9554e-03,
          9.9894e-01, 8.8332e-03]],
        [[6.4761e-03, 3.4481e-04, 1.0174e-03,  ..., 8.5749e-03,
          9.7096e-03, 9.9036e-01],
         [6.4761e-03, 3.4481e-04, 1.0174e-03,  ..., 8.5749e-03,
          9.7096e-03, 2.1523e-03],
         [9.8057e-01, 3.4481e-04, 1.0174e-03,  ..., 9.7428e-01,
          9.7087e-01, 2.1523e-03],
         [6.4761e-03, 9.9897e-01, 9.9695e-01,  ..., 8.5749e-03,
          9.7096e-03, 5.3374e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8871, 0.0036, 0.0109,  ..., 0.9773, 0.0050, 0.0081],
         [0.0149, 0.0036, 0.0051,  ..., 0.0059, 0.0050, 0.0080],
         [0.0831, 0.0036, 0.0051,  ..., 0.0109, 0.0050, 0.0080],
         [0.0149, 0.9891, 0.9790,  ..., 0.0059, 0.9849, 0.9758]],
        [[0.0030, 0.0173, 0.0080,  ..., 0.0251, 0.0016, 0.0012],
         [0.0030, 0.0092, 0.0069,  ..., 0.0113, 0.0016, 0.0012],
         [0.9911, 0.0095, 0.0085,  ..., 0.0168, 0.9952, 0.9965],
         [0.0030, 0.9640, 0.9766,  ..., 0.9468, 0.0016, 0.0012]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0294e-02, 1.0011e-03, 9.9036e-01,  ..., 5.6920e-03,
          1.8967e-03, 3.8387e-03],
         [1.0294e-02, 9.8863e-04, 2.0885e-03,  ..., 5.6920e-03,
          1.8967e-03, 3.8387e-03],
         [9.6912e-01, 9.8863e-04, 2.0885e-03,  ..., 9.8292e-01,
          1.8967e-03, 9.8848e-01],
         [1.0294e-02, 9.9702e-01, 5.4620e-03,  ..., 5.6920e-03,
          9.9431e-01, 3.8387e-03]],
        [[8.0446e-03, 1.0511e-03, 9.0310e-05,  ..., 1.0551e-02,
          1.3038e-02, 9.9817e-01],
         [8.0446e-03, 1.0511e-03, 9.0310e-05,  ..., 1.0551e-02,
          1.3038e-02, 6.1167e-04],
         [9.7587e-01, 1.0511e-03, 9.0310e-05,  ..., 9.6835e-01,
          4.3171e-02, 6.1167e-04],
         [8.0446e-03, 9.9685e-01, 9.9973e-01,  ..., 1.0551e-02,
          9.3075e-01, 6.1167e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:36,522 [Process: 0] Synchronize training processes
2024-08-18 15:05:36,522 [Process: 0] Evaluating...
2024-08-18 15:05:36,526 [Process: 0] EPOCH 182:
2024-08-18 15:05:36,527 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:37,674 [Process: 0] Synchronize training processes
2024-08-18 15:05:37,674 [Process: 0] Evaluating...
2024-08-18 15:05:37,676 [Process: 0] EPOCH 183:
2024-08-18 15:05:37,678 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9968, 0.0061, 0.0444,  ..., 0.9941, 0.0031, 0.0178],
         [0.0011, 0.0061, 0.0142,  ..., 0.0020, 0.0031, 0.0082],
         [0.0011, 0.0082, 0.0199,  ..., 0.0020, 0.0031, 0.0106],
         [0.0011, 0.9797, 0.9216,  ..., 0.0020, 0.9906, 0.9634]],
        [[0.0016, 0.0054, 0.0089,  ..., 0.0083, 0.0020, 0.0031],
         [0.0016, 0.0054, 0.0089,  ..., 0.0083, 0.0020, 0.0031],
         [0.9953, 0.0054, 0.0174,  ..., 0.0173, 0.9940, 0.9907],
         [0.0016, 0.9837, 0.9648,  ..., 0.9661, 0.0020, 0.0031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8193e-03, 2.0814e-03, 9.9226e-01,  ..., 5.9946e-03,
          1.4550e-02, 1.2109e-02],
         [3.8193e-03, 5.7109e-04, 2.5814e-03,  ..., 5.9946e-03,
          8.2559e-03, 1.2109e-02],
         [9.8854e-01, 5.7109e-04, 2.5814e-03,  ..., 9.8202e-01,
          1.6310e-02, 9.6348e-01],
         [3.8193e-03, 9.9678e-01, 2.5814e-03,  ..., 5.9946e-03,
          9.6088e-01, 1.2303e-02]],
        [[9.5299e-03, 4.5916e-03, 4.1294e-04,  ..., 1.2946e-02,
          1.5161e-04, 9.9353e-01],
         [9.5299e-03, 1.6278e-03, 4.1294e-04,  ..., 1.2946e-02,
          1.5161e-04, 1.9375e-03],
         [9.6957e-01, 1.6278e-03, 4.1294e-04,  ..., 9.5763e-01,
          1.5161e-04, 1.9375e-03],
         [1.1375e-02, 9.9215e-01, 9.9876e-01,  ..., 1.6484e-02,
          9.9955e-01, 2.5973e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9931, 0.0065, 0.0062,  ..., 0.9888, 0.0420, 0.0046],
         [0.0022, 0.0065, 0.0062,  ..., 0.0034, 0.0092, 0.0046],
         [0.0026, 0.0077, 0.0065,  ..., 0.0043, 0.0092, 0.0051],
         [0.0022, 0.9794, 0.9812,  ..., 0.0034, 0.9397, 0.9856]],
        [[0.0020, 0.0037, 0.0081,  ..., 0.0086, 0.0024, 0.0022],
         [0.0020, 0.0037, 0.0081,  ..., 0.0085, 0.0024, 0.0022],
         [0.9941, 0.0037, 0.0104,  ..., 0.0151, 0.9927, 0.9935],
         [0.0020, 0.9889, 0.9734,  ..., 0.9678, 0.0024, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9898e-03, 8.0401e-04, 9.9193e-01,  ..., 5.1536e-03,
          4.3325e-04, 3.8753e-03],
         [6.9898e-03, 3.2650e-04, 1.9670e-03,  ..., 5.1536e-03,
          4.3325e-04, 3.8753e-03],
         [9.7903e-01, 3.2650e-04, 1.9670e-03,  ..., 9.8454e-01,
          4.3325e-04, 9.8837e-01],
         [6.9898e-03, 9.9854e-01, 4.1382e-03,  ..., 5.1536e-03,
          9.9870e-01, 3.8753e-03]],
        [[8.9732e-03, 1.7573e-04, 6.5864e-04,  ..., 1.0933e-02,
          2.5169e-04, 9.9820e-01],
         [8.9732e-03, 1.7573e-04, 4.5269e-04,  ..., 1.0933e-02,
          2.5169e-04, 6.0045e-04],
         [9.7308e-01, 1.7573e-04, 4.5269e-04,  ..., 9.6199e-01,
          2.5169e-04, 6.0045e-04],
         [8.9732e-03, 9.9947e-01, 9.9844e-01,  ..., 1.6140e-02,
          9.9924e-01, 6.0045e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:38,834 [Process: 0] Synchronize training processes
2024-08-18 15:05:38,834 [Process: 0] Evaluating...
2024-08-18 15:05:38,836 [Process: 0] EPOCH 184:
2024-08-18 15:05:38,837 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:39,998 [Process: 0] Synchronize training processes
2024-08-18 15:05:39,998 [Process: 0] Evaluating...
2024-08-18 15:05:39,999 [Process: 0] EPOCH 185:
2024-08-18 15:05:40,001 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9845, 0.0051, 0.0062,  ..., 0.9825, 0.9902, 0.0164],
         [0.0043, 0.0051, 0.0062,  ..., 0.0047, 0.0032, 0.0066],
         [0.0069, 0.0051, 0.0062,  ..., 0.0081, 0.0035, 0.0066],
         [0.0043, 0.9847, 0.9814,  ..., 0.0047, 0.0032, 0.9704]],
        [[0.0027, 0.0082, 0.0472,  ..., 0.0119, 0.0013, 0.0015],
         [0.0027, 0.0082, 0.0326,  ..., 0.0092, 0.0013, 0.0015],
         [0.9920, 0.0133, 0.1576,  ..., 0.0093, 0.9961, 0.9956],
         [0.0027, 0.9703, 0.7627,  ..., 0.9696, 0.0013, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0500e-02, 3.2384e-04, 9.9021e-01,  ..., 1.8067e-02,
          2.7187e-03, 1.2769e-02],
         [1.0500e-02, 3.0961e-04, 2.5451e-03,  ..., 1.8067e-02,
          7.4471e-04, 1.2769e-02],
         [9.6850e-01, 3.0774e-04, 2.5451e-03,  ..., 9.2678e-01,
          7.4471e-04, 9.5880e-01],
         [1.0500e-02, 9.9906e-01, 4.7004e-03,  ..., 3.7085e-02,
          9.9579e-01, 1.5664e-02]],
        [[7.4373e-03, 1.0175e-03, 4.9098e-04,  ..., 7.9610e-03,
          2.8017e-02, 9.9734e-01],
         [7.4373e-03, 8.3816e-04, 4.9098e-04,  ..., 7.9610e-03,
          2.8017e-02, 8.8544e-04],
         [9.7769e-01, 8.3816e-04, 4.9098e-04,  ..., 9.7612e-01,
          3.0807e-01, 8.8544e-04],
         [7.4373e-03, 9.9731e-01, 9.9853e-01,  ..., 7.9610e-03,
          6.3590e-01, 8.8544e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8607e-01, 4.4239e-03, 6.5381e-03,  ..., 9.9149e-01,
          9.9796e-01, 3.5344e-03],
         [3.3501e-03, 4.4239e-03, 6.5381e-03,  ..., 2.6279e-03,
          6.7989e-04, 3.4860e-03],
         [7.2318e-03, 4.4272e-03, 6.5381e-03,  ..., 3.2587e-03,
          6.7989e-04, 3.4860e-03],
         [3.3501e-03, 9.8672e-01, 9.8039e-01,  ..., 2.6279e-03,
          6.7989e-04, 9.8949e-01]],
        [[1.6956e-01, 2.5576e-03, 3.7972e-03,  ..., 9.0648e-03,
          5.2951e-03, 3.2516e-03],
         [2.1876e-02, 2.5576e-03, 3.7972e-03,  ..., 9.0648e-03,
          4.7666e-03, 3.2516e-03],
         [7.8668e-01, 2.5576e-03, 3.7972e-03,  ..., 1.0605e-02,
          9.8517e-01, 9.9025e-01],
         [2.1876e-02, 9.9233e-01, 9.8861e-01,  ..., 9.7127e-01,
          4.7666e-03, 3.2516e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:41,148 [Process: 0] Synchronize training processes
2024-08-18 15:05:41,149 [Process: 0] Evaluating...
2024-08-18 15:05:41,150 [Process: 0] EPOCH 186:
2024-08-18 15:05:41,152 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:42,303 [Process: 0] Synchronize training processes
2024-08-18 15:05:42,303 [Process: 0] Evaluating...
2024-08-18 15:05:42,305 [Process: 0] EPOCH 187:
2024-08-18 15:05:42,307 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6818e-01, 5.2223e-04, 9.8416e-01,  ..., 1.0251e-02,
          1.9883e-01, 8.4460e-03],
         [4.7931e-03, 5.2223e-04, 4.1540e-03,  ..., 1.0251e-02,
          3.6794e-02, 8.4460e-03],
         [4.7931e-03, 5.2223e-04, 4.1540e-03,  ..., 9.6294e-01,
          7.1984e-01, 9.7466e-01],
         [2.2237e-02, 9.9843e-01, 7.5277e-03,  ..., 1.6554e-02,
          4.4530e-02, 8.4460e-03]],
        [[4.2074e-02, 6.8465e-05, 4.1031e-05,  ..., 8.8336e-03,
          1.3673e-02, 9.7564e-01],
         [1.6256e-02, 6.8465e-05, 4.1031e-05,  ..., 8.8336e-03,
          1.3673e-02, 6.3401e-03],
         [9.2541e-01, 6.8465e-05, 4.1031e-05,  ..., 9.7350e-01,
          9.4205e-01, 6.3401e-03],
         [1.6256e-02, 9.9979e-01, 9.9988e-01,  ..., 8.8336e-03,
          3.0604e-02, 1.1680e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9642e-01, 5.9913e-03, 3.7674e-03,  ..., 9.9858e-01,
          9.4836e-01, 2.7326e-03],
         [1.1933e-03, 4.6794e-03, 3.7674e-03,  ..., 4.7461e-04,
          9.1017e-03, 2.7326e-03],
         [1.1933e-03, 4.6794e-03, 3.7674e-03,  ..., 4.7461e-04,
          1.3319e-02, 2.7326e-03],
         [1.1933e-03, 9.8465e-01, 9.8870e-01,  ..., 4.7461e-04,
          2.9219e-02, 9.9180e-01]],
        [[1.3918e-02, 4.4155e-03, 2.1189e-03,  ..., 3.3278e-03,
          4.8931e-03, 1.8047e-03],
         [7.4202e-03, 4.4155e-03, 2.1189e-03,  ..., 3.3886e-03,
          3.8571e-03, 1.8047e-03],
         [9.7124e-01, 4.4155e-03, 2.1189e-03,  ..., 3.3278e-03,
          9.8739e-01, 9.9459e-01],
         [7.4202e-03, 9.8675e-01, 9.9364e-01,  ..., 9.8996e-01,
          3.8571e-03, 1.8047e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9255e-01, 2.1037e-04, 9.9604e-01,  ..., 1.0148e-02,
          1.0023e-01, 8.0295e-03],
         [2.4325e-03, 2.1037e-04, 1.3185e-03,  ..., 1.0148e-02,
          5.1030e-02, 8.0295e-03],
         [2.4325e-03, 2.1037e-04, 1.3185e-03,  ..., 9.6956e-01,
          5.8606e-01, 9.7591e-01],
         [2.5878e-03, 9.9937e-01, 1.3185e-03,  ..., 1.0148e-02,
          2.6268e-01, 8.0295e-03]],
        [[8.0254e-02, 3.1594e-04, 1.5427e-03,  ..., 8.1950e-03,
          1.1698e-02, 9.9401e-01],
         [2.3467e-02, 3.1594e-04, 1.5427e-03,  ..., 8.1950e-03,
          1.1698e-02, 1.8183e-03],
         [8.7125e-01, 3.1594e-04, 1.5427e-03,  ..., 9.7541e-01,
          9.6021e-01, 1.8183e-03],
         [2.5025e-02, 9.9905e-01, 9.9537e-01,  ..., 8.1950e-03,
          1.6397e-02, 2.3576e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9603e-01, 4.4211e-03, 5.0634e-03,  ..., 9.9126e-01,
          9.9802e-01, 3.4445e-03],
         [1.3240e-03, 4.4211e-03, 4.7964e-03,  ..., 2.9142e-03,
          6.6092e-04, 3.5825e-03],
         [1.3240e-03, 4.4211e-03, 4.7964e-03,  ..., 2.9142e-03,
          6.6092e-04, 3.4445e-03],
         [1.3240e-03, 9.8674e-01, 9.8534e-01,  ..., 2.9142e-03,
          6.6092e-04, 9.8953e-01]],
        [[6.9179e-03, 3.8046e-03, 1.4386e-02,  ..., 3.7166e-03,
          1.9884e-03, 3.4287e-03],
         [4.7578e-03, 3.8046e-03, 1.4386e-02,  ..., 3.7166e-03,
          1.9884e-03, 2.9943e-03],
         [9.8357e-01, 3.8046e-03, 2.1210e-02,  ..., 3.7166e-03,
          9.9403e-01, 9.9058e-01],
         [4.7578e-03, 9.8859e-01, 9.5002e-01,  ..., 9.8885e-01,
          1.9884e-03, 2.9943e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:43,455 [Process: 0] Synchronize training processes
2024-08-18 15:05:43,455 [Process: 0] Evaluating...
2024-08-18 15:05:43,457 [Process: 0] EPOCH 188:
2024-08-18 15:05:43,459 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.9894e-03, 1.4002e-03, 9.8604e-01,  ..., 1.4091e-02,
          1.3463e-03, 1.6672e-02],
         [5.9894e-03, 1.4002e-03, 3.2198e-03,  ..., 1.3227e-02,
          1.3463e-03, 1.3306e-02],
         [9.8203e-01, 1.4002e-03, 3.2198e-03,  ..., 9.5926e-01,
          1.3463e-03, 9.5672e-01],
         [5.9894e-03, 9.9580e-01, 7.5223e-03,  ..., 1.3418e-02,
          9.9596e-01, 1.3306e-02]],
        [[1.2426e-02, 2.3848e-04, 1.3038e-05,  ..., 9.3603e-03,
          1.2012e-02, 9.8495e-01],
         [1.0566e-02, 2.3848e-04, 1.3038e-05,  ..., 9.3603e-03,
          1.2012e-02, 4.0447e-03],
         [9.6644e-01, 2.3848e-04, 1.3038e-05,  ..., 9.7192e-01,
          9.6311e-01, 4.0447e-03],
         [1.0566e-02, 9.9928e-01, 9.9996e-01,  ..., 9.3603e-03,
          1.2872e-02, 6.9625e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9714e-01, 4.6915e-03, 4.9447e-02,  ..., 9.8418e-01,
          3.5548e-01, 1.1473e-02],
         [9.5279e-04, 4.6915e-03, 2.6251e-02,  ..., 4.2628e-03,
          1.9692e-02, 1.1473e-02],
         [9.5279e-04, 4.6915e-03, 7.1058e-02,  ..., 6.5531e-03,
          1.9692e-02, 1.2825e-02],
         [9.5279e-04, 9.8593e-01, 8.5324e-01,  ..., 5.0062e-03,
          6.0514e-01, 9.6423e-01]],
        [[6.7776e-03, 2.4427e-03, 1.1877e-03,  ..., 9.7290e-03,
          2.0257e-03, 3.3641e-03],
         [4.2678e-03, 2.4427e-03, 1.1877e-03,  ..., 9.7290e-03,
          2.0257e-03, 3.3641e-03],
         [9.8469e-01, 2.4427e-03, 1.1877e-03,  ..., 1.7131e-02,
          9.9392e-01, 9.8991e-01],
         [4.2678e-03, 9.9267e-01, 9.9644e-01,  ..., 9.6341e-01,
          2.0257e-03, 3.3641e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3345e-03, 5.9874e-05, 9.1654e-01,  ..., 8.8099e-03,
          1.5712e-03, 7.5216e-03],
         [7.3345e-03, 5.9874e-05, 9.0886e-03,  ..., 8.8099e-03,
          1.5712e-03, 7.5216e-03],
         [9.7800e-01, 5.9874e-05, 9.0886e-03,  ..., 9.7357e-01,
          1.5712e-03, 9.7744e-01],
         [7.3345e-03, 9.9982e-01, 6.5285e-02,  ..., 8.8099e-03,
          9.9529e-01, 7.5216e-03]],
        [[1.2911e-02, 5.9169e-04, 1.1737e-04,  ..., 1.1831e-02,
          1.4013e-02, 9.9608e-01],
         [1.2911e-02, 5.9169e-04, 1.1737e-04,  ..., 1.1831e-02,
          1.4013e-02, 1.1723e-03],
         [9.6127e-01, 5.9169e-04, 1.1737e-04,  ..., 9.6451e-01,
          9.5498e-01, 1.1723e-03],
         [1.2911e-02, 9.9822e-01, 9.9965e-01,  ..., 1.1831e-02,
          1.6993e-02, 1.5782e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:44,612 [Process: 0] Synchronize training processes
2024-08-18 15:05:44,612 [Process: 0] Evaluating...
2024-08-18 15:05:44,614 [Process: 0] EPOCH 189:
2024-08-18 15:05:44,616 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:45,765 [Process: 0] Synchronize training processes
2024-08-18 15:05:45,765 [Process: 0] Evaluating...
2024-08-18 15:05:45,766 [Process: 0] EPOCH 190:
2024-08-18 15:05:45,768 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9907, 0.0047, 0.0041,  ..., 0.9939, 0.9845, 0.0023],
         [0.0029, 0.0047, 0.0041,  ..., 0.0020, 0.0039, 0.0023],
         [0.0036, 0.0069, 0.0042,  ..., 0.0020, 0.0039, 0.0023],
         [0.0029, 0.9838, 0.9876,  ..., 0.0020, 0.0078, 0.9931]],
        [[0.0095, 0.0035, 0.0052,  ..., 0.0021, 0.0012, 0.0037],
         [0.0061, 0.0035, 0.0052,  ..., 0.0021, 0.0012, 0.0037],
         [0.9783, 0.0035, 0.0062,  ..., 0.0021, 0.9965, 0.9888],
         [0.0061, 0.9895, 0.9834,  ..., 0.9937, 0.0012, 0.0037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1372e-03, 1.0049e-03, 9.5593e-01,  ..., 1.4333e-02,
          2.1342e-04, 1.7787e-02],
         [7.1372e-03, 1.0049e-03, 8.3981e-03,  ..., 1.3111e-02,
          2.1342e-04, 1.5636e-02],
         [9.7859e-01, 1.2504e-03, 8.3981e-03,  ..., 9.5944e-01,
          2.1342e-04, 9.5073e-01],
         [7.1372e-03, 9.9674e-01, 2.7271e-02,  ..., 1.3111e-02,
          9.9936e-01, 1.5849e-02]],
        [[8.4307e-03, 1.3884e-04, 2.0558e-04,  ..., 1.0723e-02,
          3.1907e-04, 9.7183e-01],
         [8.4307e-03, 1.3884e-04, 2.0558e-04,  ..., 1.0723e-02,
          3.1907e-04, 7.0856e-03],
         [9.7471e-01, 1.3884e-04, 2.0558e-04,  ..., 9.6783e-01,
          3.1907e-04, 7.3748e-03],
         [8.4307e-03, 9.9958e-01, 9.9938e-01,  ..., 1.0723e-02,
          9.9904e-01, 1.3710e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9851, 0.0021, 0.0024,  ..., 0.9970, 0.9901, 0.0031],
         [0.0042, 0.0021, 0.0024,  ..., 0.0010, 0.0020, 0.0031],
         [0.0065, 0.0021, 0.0024,  ..., 0.0010, 0.0020, 0.0033],
         [0.0042, 0.9936, 0.9927,  ..., 0.0010, 0.0059, 0.9905]],
        [[0.0952, 0.0034, 0.0136,  ..., 0.0037, 0.0020, 0.0073],
         [0.0187, 0.0034, 0.0136,  ..., 0.0037, 0.0020, 0.0067],
         [0.8673, 0.0034, 0.0349,  ..., 0.0037, 0.9941, 0.9793],
         [0.0187, 0.9899, 0.9378,  ..., 0.9890, 0.0020, 0.0067]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.2775e-03, 1.6857e-05, 9.7976e-01,  ..., 8.1712e-03,
          2.1571e-02, 7.5976e-03],
         [8.2775e-03, 1.6857e-05, 3.0862e-03,  ..., 8.1712e-03,
          2.1571e-02, 7.5976e-03],
         [9.7517e-01, 1.6857e-05, 3.0862e-03,  ..., 9.7549e-01,
          8.8430e-01, 9.7721e-01],
         [8.2775e-03, 9.9995e-01, 1.4072e-02,  ..., 8.1712e-03,
          7.2557e-02, 7.5976e-03]],
        [[1.0025e-02, 3.3345e-04, 1.2720e-04,  ..., 6.8177e-03,
          2.6155e-03, 9.6662e-01],
         [1.0025e-02, 3.3345e-04, 1.2720e-04,  ..., 6.9154e-03,
          2.6155e-03, 8.5511e-03],
         [9.6992e-01, 3.3345e-04, 1.2720e-04,  ..., 9.7945e-01,
          3.2142e-03, 1.3087e-02],
         [1.0025e-02, 9.9900e-01, 9.9962e-01,  ..., 6.8177e-03,
          9.9155e-01, 1.1743e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:46,914 [Process: 0] Synchronize training processes
2024-08-18 15:05:46,914 [Process: 0] Evaluating...
2024-08-18 15:05:46,916 [Process: 0] EPOCH 191:
2024-08-18 15:05:46,918 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:48,054 [Process: 0] Synchronize training processes
2024-08-18 15:05:48,055 [Process: 0] Evaluating...
2024-08-18 15:05:48,060 [Process: 0] EPOCH 192:
2024-08-18 15:05:48,061 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9278e-01, 3.3715e-03, 1.1281e-03,  ..., 9.9678e-01,
          1.8052e-02, 5.1462e-03],
         [2.4076e-03, 3.3715e-03, 1.1281e-03,  ..., 1.0743e-03,
          6.4058e-03, 5.1462e-03],
         [2.4076e-03, 3.3715e-03, 1.1281e-03,  ..., 1.0743e-03,
          6.4058e-03, 5.1462e-03],
         [2.4076e-03, 9.8989e-01, 9.9662e-01,  ..., 1.0743e-03,
          9.6914e-01, 9.8456e-01]],
        [[7.7619e-01, 2.6775e-03, 5.9562e-03,  ..., 5.2270e-03,
          8.0459e-04, 4.3701e-03],
         [2.0158e-02, 2.6775e-03, 5.9562e-03,  ..., 5.2270e-03,
          8.0459e-04, 4.3701e-03],
         [1.8350e-01, 2.6775e-03, 5.9562e-03,  ..., 6.2872e-03,
          9.9759e-01, 9.8689e-01],
         [2.0158e-02, 9.9197e-01, 9.8213e-01,  ..., 9.8326e-01,
          8.0459e-04, 4.3701e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6580e-03, 8.1522e-05, 9.7469e-01,  ..., 7.0063e-03,
          1.8354e-02, 1.1033e-02],
         [8.6580e-03, 8.1522e-05, 4.5096e-03,  ..., 7.0063e-03,
          1.8354e-02, 1.1033e-02],
         [9.7403e-01, 8.1522e-05, 4.5096e-03,  ..., 9.7898e-01,
          9.0445e-01, 9.6589e-01],
         [8.6580e-03, 9.9976e-01, 1.6288e-02,  ..., 7.0063e-03,
          5.8847e-02, 1.2047e-02]],
        [[9.1786e-03, 5.2867e-04, 1.5277e-04,  ..., 4.7960e-03,
          3.8552e-04, 9.9182e-01],
         [9.1786e-03, 5.2867e-04, 1.5277e-04,  ..., 4.7960e-03,
          3.8552e-04, 2.7271e-03],
         [9.7246e-01, 5.2867e-04, 1.5277e-04,  ..., 9.8561e-01,
          3.8552e-04, 2.7271e-03],
         [9.1786e-03, 9.9841e-01, 9.9954e-01,  ..., 4.7960e-03,
          9.9884e-01, 2.7271e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9785e-01, 7.9333e-03, 2.7064e-03,  ..., 9.9299e-01,
          1.6871e-03, 3.0555e-02],
         [7.1808e-04, 7.9333e-03, 2.7064e-03,  ..., 2.3364e-03,
          1.6871e-03, 9.6274e-03],
         [7.1808e-04, 7.9333e-03, 2.7064e-03,  ..., 2.3364e-03,
          1.6871e-03, 1.1799e-02],
         [7.1808e-04, 9.7620e-01, 9.9188e-01,  ..., 2.3364e-03,
          9.9494e-01, 9.4802e-01]],
        [[9.9258e-01, 1.3602e-02, 6.5770e-03,  ..., 4.5269e-03,
          3.5083e-03, 3.8054e-03],
         [2.4443e-03, 7.7397e-03, 6.5770e-03,  ..., 3.8687e-03,
          3.5083e-03, 3.8054e-03],
         [2.5267e-03, 7.7397e-03, 7.0738e-03,  ..., 3.8687e-03,
          9.8948e-01, 9.8858e-01],
         [2.4443e-03, 9.7092e-01, 9.7977e-01,  ..., 9.8774e-01,
          3.5083e-03, 3.8054e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:49,212 [Process: 0] Synchronize training processes
2024-08-18 15:05:49,212 [Process: 0] Evaluating...
2024-08-18 15:05:49,214 [Process: 0] EPOCH 193:
2024-08-18 15:05:49,216 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:50,359 [Process: 0] Synchronize training processes
2024-08-18 15:05:50,359 [Process: 0] Evaluating...
2024-08-18 15:05:50,361 [Process: 0] EPOCH 194:
2024-08-18 15:05:50,363 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5345e-03, 7.1843e-04, 9.9247e-01,  ..., 6.2823e-03,
          2.7224e-02, 1.4709e-02],
         [9.5345e-03, 7.1843e-04, 2.2369e-03,  ..., 6.2823e-03,
          2.7224e-02, 1.4709e-02],
         [9.7003e-01, 7.1843e-04, 2.2369e-03,  ..., 9.8115e-01,
          6.8689e-01, 9.4651e-01],
         [1.0904e-02, 9.9784e-01, 3.0531e-03,  ..., 6.2823e-03,
          2.5866e-01, 2.4067e-02]],
        [[6.1429e-03, 9.6065e-05, 5.3788e-05,  ..., 8.6363e-03,
          1.3769e-04, 9.8472e-01],
         [6.1429e-03, 9.6065e-05, 5.5840e-05,  ..., 8.6363e-03,
          1.3769e-04, 5.0936e-03],
         [9.8157e-01, 9.6065e-05, 5.3788e-05,  ..., 9.7381e-01,
          1.3769e-04, 5.0936e-03],
         [6.1429e-03, 9.9971e-01, 9.9984e-01,  ..., 8.9210e-03,
          9.9959e-01, 5.0936e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9919, 0.0025, 0.0249,  ..., 0.9697, 0.2552, 0.0039],
         [0.0022, 0.0025, 0.0100,  ..., 0.0066, 0.0213, 0.0039],
         [0.0037, 0.0025, 0.0109,  ..., 0.0170, 0.0213, 0.0045],
         [0.0022, 0.9925, 0.9542,  ..., 0.0066, 0.7022, 0.9877]],
        [[0.4021, 0.0035, 0.0015,  ..., 0.0088, 0.0038, 0.0048],
         [0.0263, 0.0035, 0.0015,  ..., 0.0049, 0.0037, 0.0048],
         [0.5453, 0.0035, 0.0015,  ..., 0.0049, 0.9887, 0.9856],
         [0.0263, 0.9894, 0.9955,  ..., 0.9815, 0.0037, 0.0048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9695e-03, 1.3694e-04, 9.8948e-01,  ..., 5.3748e-03,
          1.8210e-02, 1.0898e-02],
         [8.9695e-03, 1.3694e-04, 3.4725e-03,  ..., 5.3748e-03,
          1.5151e-02, 1.0898e-02],
         [9.7189e-01, 1.3694e-04, 3.4725e-03,  ..., 9.8388e-01,
          9.4035e-01, 9.6503e-01],
         [1.0168e-02, 9.9959e-01, 3.5752e-03,  ..., 5.3748e-03,
          2.6285e-02, 1.3170e-02]],
        [[1.0470e-02, 9.8922e-04, 9.9306e-04,  ..., 1.2163e-02,
          8.9148e-04, 9.2774e-01],
         [1.0470e-02, 9.8922e-04, 9.9306e-04,  ..., 1.2163e-02,
          8.9148e-04, 1.4341e-02],
         [9.6673e-01, 9.8922e-04, 9.9306e-04,  ..., 9.5599e-01,
          8.9148e-04, 4.1589e-02],
         [1.2327e-02, 9.9703e-01, 9.9702e-01,  ..., 1.9686e-02,
          9.9733e-01, 1.6326e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9382, 0.0049, 0.0071,  ..., 0.9908, 0.9792, 0.0412],
         [0.0100, 0.0049, 0.0071,  ..., 0.0026, 0.0035, 0.0096],
         [0.0417, 0.0049, 0.0071,  ..., 0.0040, 0.0035, 0.0096],
         [0.0100, 0.9853, 0.9787,  ..., 0.0026, 0.0138, 0.9396]],
        [[0.9909, 0.0018, 0.0069,  ..., 0.0075, 0.0016, 0.0047],
         [0.0030, 0.0018, 0.0040,  ..., 0.0048, 0.0016, 0.0044],
         [0.0030, 0.0018, 0.0040,  ..., 0.0048, 0.9952, 0.9866],
         [0.0030, 0.9946, 0.9850,  ..., 0.9830, 0.0016, 0.0044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:51,508 [Process: 0] Synchronize training processes
2024-08-18 15:05:51,508 [Process: 0] Evaluating...
2024-08-18 15:05:51,510 [Process: 0] EPOCH 195:
2024-08-18 15:05:51,512 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1990e-02, 3.8190e-05, 9.9719e-01,  ..., 1.1236e-02,
          1.3502e-02, 1.9049e-02],
         [1.1990e-02, 3.8190e-05, 9.1744e-04,  ..., 9.9902e-03,
          1.3502e-02, 1.5680e-02],
         [9.6192e-01, 3.8190e-05, 9.1744e-04,  ..., 9.6878e-01,
          9.5294e-01, 9.4216e-01],
         [1.4095e-02, 9.9989e-01, 9.7198e-04,  ..., 9.9902e-03,
          2.0054e-02, 2.3112e-02]],
        [[9.3700e-03, 1.3359e-04, 8.8315e-04,  ..., 1.0441e-02,
          4.0369e-03, 9.8038e-01],
         [9.3700e-03, 1.3359e-04, 8.8315e-04,  ..., 1.0441e-02,
          4.0369e-03, 6.0436e-03],
         [9.7019e-01, 1.3359e-04, 8.8315e-04,  ..., 9.6817e-01,
          5.0270e-03, 6.0436e-03],
         [1.1075e-02, 9.9960e-01, 9.9735e-01,  ..., 1.0952e-02,
          9.8690e-01, 7.5357e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9153, 0.0020, 0.0051,  ..., 0.9969, 0.9252, 0.0018],
         [0.0112, 0.0020, 0.0051,  ..., 0.0010, 0.0127, 0.0018],
         [0.0623, 0.0020, 0.0065,  ..., 0.0010, 0.0127, 0.0018],
         [0.0112, 0.9940, 0.9834,  ..., 0.0010, 0.0493, 0.9946]],
        [[0.9901, 0.0025, 0.0057,  ..., 0.0082, 0.0072, 0.0022],
         [0.0030, 0.0025, 0.0057,  ..., 0.0042, 0.0056, 0.0022],
         [0.0039, 0.0025, 0.0057,  ..., 0.0042, 0.9816, 0.9933],
         [0.0030, 0.9926, 0.9830,  ..., 0.9834, 0.0056, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3774e-02, 3.2313e-04, 9.7576e-01,  ..., 9.6960e-03,
          1.3397e-02, 7.3355e-03],
         [1.2639e-02, 3.2313e-04, 6.7868e-03,  ..., 9.6960e-03,
          1.3397e-02, 7.3355e-03],
         [9.5939e-01, 3.2313e-04, 1.0662e-02,  ..., 9.7091e-01,
          9.5288e-01, 9.7799e-01],
         [1.4201e-02, 9.9903e-01, 6.7868e-03,  ..., 9.6960e-03,
          2.0321e-02, 7.3355e-03]],
        [[7.9381e-03, 4.5061e-04, 1.1846e-04,  ..., 1.0270e-02,
          3.7520e-04, 9.8924e-01],
         [7.9381e-03, 4.5061e-04, 1.1846e-04,  ..., 1.0270e-02,
          3.7520e-04, 2.7323e-03],
         [9.7619e-01, 4.5061e-04, 1.1846e-04,  ..., 9.6875e-01,
          3.7520e-04, 2.7323e-03],
         [7.9381e-03, 9.9865e-01, 9.9964e-01,  ..., 1.0712e-02,
          9.9887e-01, 5.2978e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:52,655 [Process: 0] Synchronize training processes
2024-08-18 15:05:52,655 [Process: 0] Evaluating...
2024-08-18 15:05:52,657 [Process: 0] EPOCH 196:
2024-08-18 15:05:52,659 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:53,805 [Process: 0] Synchronize training processes
2024-08-18 15:05:53,805 [Process: 0] Evaluating...
2024-08-18 15:05:53,807 [Process: 0] EPOCH 197:
2024-08-18 15:05:53,809 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9964, 0.0074, 0.0021,  ..., 0.9658, 0.9331, 0.0029],
         [0.0012, 0.0064, 0.0021,  ..., 0.0068, 0.0121, 0.0029],
         [0.0012, 0.0064, 0.0021,  ..., 0.0164, 0.0366, 0.0029],
         [0.0012, 0.9799, 0.9936,  ..., 0.0110, 0.0181, 0.9914]],
        [[0.9948, 0.0030, 0.0030,  ..., 0.0021, 0.0019, 0.0025],
         [0.0017, 0.0030, 0.0030,  ..., 0.0021, 0.0019, 0.0025],
         [0.0017, 0.0030, 0.0030,  ..., 0.0021, 0.9944, 0.9926],
         [0.0017, 0.9910, 0.9909,  ..., 0.9938, 0.0019, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1354e-03, 1.9634e-04, 9.9670e-01,  ..., 7.1698e-03,
          1.5975e-02, 1.1654e-02],
         [8.1354e-03, 1.9634e-04, 1.1009e-03,  ..., 7.1698e-03,
          1.5975e-02, 1.1654e-02],
         [9.7559e-01, 1.9634e-04, 1.1009e-03,  ..., 9.7849e-01,
          9.3407e-01, 9.6408e-01],
         [8.1354e-03, 9.9941e-01, 1.1009e-03,  ..., 7.1698e-03,
          3.3976e-02, 1.2608e-02]],
        [[1.2222e-02, 5.5568e-03, 5.7214e-04,  ..., 5.8769e-03,
          2.9685e-04, 9.9637e-01],
         [1.2222e-02, 2.1080e-03, 5.7214e-04,  ..., 5.8769e-03,
          2.9685e-04, 1.1469e-03],
         [9.6297e-01, 2.1080e-03, 5.7214e-04,  ..., 9.8237e-01,
          2.9685e-04, 1.1469e-03],
         [1.2581e-02, 9.9023e-01, 9.9828e-01,  ..., 5.8769e-03,
          9.9911e-01, 1.3353e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9860e-01, 1.1521e-02, 3.3777e-03,  ..., 9.9745e-01,
          8.8141e-01, 1.4480e-03],
         [4.6532e-04, 9.4176e-03, 3.3777e-03,  ..., 8.4995e-04,
          1.6019e-02, 1.4480e-03],
         [4.6532e-04, 9.4176e-03, 3.3777e-03,  ..., 8.4995e-04,
          8.1878e-02, 1.4480e-03],
         [4.6532e-04, 9.6964e-01, 9.8987e-01,  ..., 8.4995e-04,
          2.0697e-02, 9.9566e-01]],
        [[9.8805e-01, 1.1513e-03, 3.1964e-03,  ..., 2.7593e-03,
          1.7824e-03, 4.4607e-03],
         [3.7402e-03, 1.1513e-03, 3.1964e-03,  ..., 2.7593e-03,
          1.7824e-03, 4.4607e-03],
         [4.4712e-03, 1.1513e-03, 3.1964e-03,  ..., 2.7593e-03,
          9.9465e-01, 9.8662e-01],
         [3.7402e-03, 9.9655e-01, 9.9041e-01,  ..., 9.9172e-01,
          1.7824e-03, 4.4607e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0128e-03, 3.2037e-04, 9.9953e-01,  ..., 1.3303e-02,
          1.1612e-02, 1.0397e-02],
         [1.0128e-03, 3.2037e-04, 1.5506e-04,  ..., 1.1980e-02,
          1.1612e-02, 1.0397e-02],
         [1.0128e-03, 3.2037e-04, 1.5506e-04,  ..., 9.6251e-01,
          9.6290e-01, 9.6862e-01],
         [9.9696e-01, 9.9904e-01, 1.5506e-04,  ..., 1.2212e-02,
          1.3873e-02, 1.0582e-02]],
        [[8.8429e-03, 7.8478e-04, 3.6626e-04,  ..., 7.3501e-03,
          1.2356e-02, 9.9844e-01],
         [8.8429e-03, 7.8478e-04, 3.9179e-04,  ..., 7.3501e-03,
          1.2356e-02, 5.2050e-04],
         [9.7347e-01, 7.8478e-04, 3.6626e-04,  ..., 9.7795e-01,
          9.6014e-01, 5.2050e-04],
         [8.8429e-03, 9.9765e-01, 9.9888e-01,  ..., 7.3501e-03,
          1.5147e-02, 5.2050e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:54,956 [Process: 0] Synchronize training processes
2024-08-18 15:05:54,956 [Process: 0] Evaluating...
2024-08-18 15:05:54,958 [Process: 0] EPOCH 198:
2024-08-18 15:05:54,960 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:56,107 [Process: 0] Synchronize training processes
2024-08-18 15:05:56,107 [Process: 0] Evaluating...
2024-08-18 15:05:56,109 [Process: 0] EPOCH 199:
2024-08-18 15:05:56,111 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9996e-01, 8.2929e-03, 2.6180e-03,  ..., 9.9757e-01,
          9.6169e-01, 9.6053e-03],
         [1.4000e-05, 8.2929e-03, 2.6180e-03,  ..., 8.1057e-04,
          8.6796e-03, 8.6327e-03],
         [1.4000e-05, 1.1524e-02, 2.6180e-03,  ..., 8.1057e-04,
          2.0948e-02, 1.1598e-02],
         [1.4000e-05, 9.7189e-01, 9.9215e-01,  ..., 8.1057e-04,
          8.6796e-03, 9.7016e-01]],
        [[9.9431e-01, 1.7197e-03, 3.4247e-03,  ..., 3.0788e-03,
          6.7124e-03, 6.5844e-03],
         [1.8817e-03, 1.7197e-03, 3.4247e-03,  ..., 3.0788e-03,
          5.1820e-03, 6.5844e-03],
         [1.9299e-03, 1.7197e-03, 3.4402e-03,  ..., 3.0788e-03,
          9.8292e-01, 9.8025e-01],
         [1.8817e-03, 9.9484e-01, 9.8971e-01,  ..., 9.9076e-01,
          5.1820e-03, 6.5844e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1729e-03, 5.4666e-04, 9.8420e-01,  ..., 6.4323e-03,
          2.1234e-02, 1.3359e-02],
         [7.1729e-03, 5.4666e-04, 3.1216e-03,  ..., 6.4323e-03,
          2.1234e-02, 1.3359e-02],
         [9.7848e-01, 5.4666e-04, 3.1216e-03,  ..., 9.8070e-01,
          8.7416e-01, 9.5709e-01],
         [7.1729e-03, 9.9836e-01, 9.5531e-03,  ..., 6.4323e-03,
          8.3373e-02, 1.6188e-02]],
        [[7.7537e-03, 4.6572e-05, 3.5961e-05,  ..., 9.3338e-03,
          9.7101e-03, 9.8941e-01],
         [7.7537e-03, 4.6572e-05, 3.5961e-05,  ..., 9.3338e-03,
          9.7101e-03, 2.5923e-03],
         [9.7674e-01, 4.6572e-05, 3.5961e-05,  ..., 9.7200e-01,
          9.7087e-01, 2.5923e-03],
         [7.7537e-03, 9.9986e-01, 9.9989e-01,  ..., 9.3338e-03,
          9.7101e-03, 5.4087e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9981e-01, 4.6639e-03, 1.3249e-02,  ..., 9.9643e-01,
          5.7446e-01, 2.2525e-03],
         [6.3983e-05, 4.8534e-03, 5.2762e-03,  ..., 1.1890e-03,
          4.3050e-02, 2.2525e-03],
         [6.3983e-05, 4.6639e-03, 4.9078e-03,  ..., 1.1890e-03,
          6.8061e-02, 2.2525e-03],
         [6.3983e-05, 9.8582e-01, 9.7657e-01,  ..., 1.1890e-03,
          3.1443e-01, 9.9324e-01]],
        [[9.8482e-01, 2.9474e-03, 5.1771e-03,  ..., 9.9927e-03,
          4.1499e-03, 6.2709e-03],
         [4.0534e-03, 2.9474e-03, 5.1771e-03,  ..., 6.9735e-03,
          3.9079e-03, 6.2709e-03],
         [7.0727e-03, 2.9474e-03, 5.4471e-03,  ..., 6.9735e-03,
          9.8803e-01, 9.8119e-01],
         [4.0534e-03, 9.9116e-01, 9.8420e-01,  ..., 9.7606e-01,
          3.9079e-03, 6.2709e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:57,260 [Process: 0] Synchronize training processes
2024-08-18 15:05:57,261 [Process: 0] Evaluating...
2024-08-18 15:05:57,262 [Process: 0] EPOCH 200:
2024-08-18 15:05:57,264 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:05:58,416 [Process: 0] Synchronize training processes
2024-08-18 15:05:58,416 [Process: 0] Evaluating...
2024-08-18 15:05:58,418 [Process: 0] EPOCH 201:
2024-08-18 15:05:58,420 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0731e-02, 2.1998e-05, 9.4216e-01,  ..., 9.4443e-03,
          1.4174e-02, 6.6748e-03],
         [1.0731e-02, 2.1998e-05, 6.4919e-03,  ..., 9.4443e-03,
          1.4174e-02, 6.6748e-03],
         [9.6781e-01, 2.1998e-05, 6.4919e-03,  ..., 9.7167e-01,
          1.1999e-01, 9.7998e-01],
         [1.0731e-02, 9.9993e-01, 4.4856e-02,  ..., 9.4443e-03,
          8.5166e-01, 6.6748e-03]],
        [[1.0571e-02, 3.3724e-05, 4.5488e-04,  ..., 1.4183e-02,
          1.0116e-02, 9.2098e-01],
         [1.0571e-02, 3.3724e-05, 4.5488e-04,  ..., 1.4183e-02,
          1.0116e-02, 7.2100e-03],
         [9.6770e-01, 3.3724e-05, 4.5488e-04,  ..., 9.5148e-01,
          9.6965e-01, 7.2100e-03],
         [1.1155e-02, 9.9990e-01, 9.9864e-01,  ..., 2.0149e-02,
          1.0116e-02, 6.4598e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9900e-01, 5.6580e-03, 4.0029e-03,  ..., 9.8967e-01,
          9.9450e-01, 2.3112e-03],
         [3.3440e-04, 5.6580e-03, 4.0029e-03,  ..., 3.0417e-03,
          1.8345e-03, 2.1390e-03],
         [3.3440e-04, 8.9085e-03, 4.0029e-03,  ..., 4.2505e-03,
          1.8345e-03, 2.1390e-03],
         [3.3440e-04, 9.7978e-01, 9.8799e-01,  ..., 3.0417e-03,
          1.8345e-03, 9.9341e-01]],
        [[9.9635e-01, 3.8808e-03, 8.6906e-03,  ..., 1.5897e-03,
          3.9149e-03, 5.5390e-03],
         [1.2170e-03, 3.8808e-03, 8.6906e-03,  ..., 1.5897e-03,
          3.9149e-03, 5.5390e-03],
         [1.2170e-03, 4.4579e-03, 1.5290e-02,  ..., 1.5897e-03,
          9.8826e-01, 9.8327e-01],
         [1.2170e-03, 9.8778e-01, 9.6733e-01,  ..., 9.9523e-01,
          3.9149e-03, 5.6506e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0035e-02, 2.3382e-04, 9.8965e-01,  ..., 6.4028e-03,
          1.5291e-03, 9.8965e-03],
         [1.0035e-02, 2.3382e-04, 3.4508e-03,  ..., 6.4028e-03,
          1.5291e-03, 9.8965e-03],
         [9.6957e-01, 2.3382e-04, 3.4508e-03,  ..., 9.8079e-01,
          3.0805e-03, 9.6988e-01],
         [1.0356e-02, 9.9930e-01, 3.4508e-03,  ..., 6.4028e-03,
          9.9386e-01, 1.0328e-02]],
        [[8.2963e-03, 2.5304e-04, 5.6258e-04,  ..., 6.7761e-03,
          9.6325e-03, 9.1794e-01],
         [8.2963e-03, 2.7182e-04, 5.6258e-04,  ..., 6.7761e-03,
          9.6325e-03, 1.4012e-02],
         [9.7511e-01, 2.5304e-04, 5.6258e-04,  ..., 9.7967e-01,
          9.7110e-01, 2.8417e-02],
         [8.2963e-03, 9.9922e-01, 9.9831e-01,  ..., 6.7761e-03,
          9.6325e-03, 3.9627e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 201:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9842e-01, 3.6578e-03, 2.9360e-03,  ..., 9.9164e-01,
          9.9335e-01, 1.2729e-02],
         [5.2755e-04, 3.6578e-03, 2.9360e-03,  ..., 2.7572e-03,
          2.2182e-03, 1.2729e-02],
         [5.2755e-04, 4.1974e-03, 2.9360e-03,  ..., 2.7572e-03,
          2.2182e-03, 2.9265e-02],
         [5.2755e-04, 9.8849e-01, 9.9119e-01,  ..., 2.8481e-03,
          2.2182e-03, 9.4528e-01]],
        [[9.9046e-01, 3.7378e-03, 7.4952e-03,  ..., 7.2507e-03,
          3.5840e-03, 2.7193e-03],
         [3.0193e-03, 3.7378e-03, 7.0939e-03,  ..., 7.2507e-03,
          3.3451e-03, 2.7193e-03],
         [3.5026e-03, 3.7378e-03, 7.0939e-03,  ..., 7.6333e-03,
          9.8973e-01, 9.9184e-01],
         [3.0193e-03, 9.8879e-01, 9.7832e-01,  ..., 9.7787e-01,
          3.3451e-03, 2.7193e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:05:59,571 [Process: 0] Synchronize training processes
2024-08-18 15:05:59,571 [Process: 0] Evaluating...
2024-08-18 15:05:59,575 [Process: 0] EPOCH 202:
2024-08-18 15:05:59,577 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.0923e-03, 1.1451e-03, 9.8782e-01,  ..., 7.1229e-03,
          6.8263e-03, 6.8856e-03],
         [8.0923e-03, 5.6365e-04, 2.9712e-03,  ..., 7.1229e-03,
          6.8263e-03, 6.8856e-03],
         [9.7572e-01, 5.6365e-04, 2.9712e-03,  ..., 9.7863e-01,
          3.1978e-02, 9.7934e-01],
         [8.0923e-03, 9.9773e-01, 6.2367e-03,  ..., 7.1229e-03,
          9.5437e-01, 6.8856e-03]],
        [[7.5130e-03, 5.3765e-04, 3.6122e-05,  ..., 9.3451e-03,
          5.5552e-03, 9.8191e-01],
         [8.2813e-03, 5.3765e-04, 4.0148e-05,  ..., 9.3451e-03,
          5.5552e-03, 4.6679e-03],
         [9.7669e-01, 5.3765e-04, 3.6122e-05,  ..., 9.7196e-01,
          9.8333e-01, 4.6679e-03],
         [7.5130e-03, 9.9839e-01, 9.9989e-01,  ..., 9.3451e-03,
          5.5552e-03, 8.7509e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 202:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9955e-01, 4.1266e-03, 1.7848e-03,  ..., 9.7783e-01,
          9.9674e-01, 3.7892e-03],
         [1.4830e-04, 4.1266e-03, 1.7848e-03,  ..., 5.0968e-03,
          1.0863e-03, 3.7892e-03],
         [1.4830e-04, 4.1266e-03, 1.7848e-03,  ..., 1.1977e-02,
          1.0863e-03, 3.7892e-03],
         [1.4830e-04, 9.8762e-01, 9.9465e-01,  ..., 5.0968e-03,
          1.0863e-03, 9.8863e-01]],
        [[9.9419e-01, 9.5506e-03, 2.0914e-02,  ..., 2.7026e-02,
          1.4905e-03, 1.0632e-02],
         [1.8970e-03, 7.4786e-03, 1.2090e-02,  ..., 1.1312e-02,
          1.4905e-03, 1.0632e-02],
         [2.0209e-03, 7.4786e-03, 1.6341e-02,  ..., 1.1312e-02,
          9.9553e-01, 9.5138e-01],
         [1.8970e-03, 9.7549e-01, 9.5065e-01,  ..., 9.5035e-01,
          1.4905e-03, 2.7355e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2984e-03, 1.8489e-04, 9.9173e-01,  ..., 4.1676e-03,
          1.3411e-02, 6.6515e-03],
         [5.2984e-03, 1.8489e-04, 2.7570e-03,  ..., 4.1676e-03,
          1.3411e-02, 6.6515e-03],
         [9.8410e-01, 1.8489e-04, 2.7570e-03,  ..., 9.8750e-01,
          7.9147e-02, 9.8005e-01],
         [5.2984e-03, 9.9945e-01, 2.7570e-03,  ..., 4.1676e-03,
          8.9403e-01, 6.6515e-03]],
        [[1.0645e-02, 1.6621e-04, 5.5174e-04,  ..., 8.2442e-03,
          5.8907e-03, 9.9354e-01],
         [1.0645e-02, 1.6621e-04, 5.5174e-04,  ..., 8.2442e-03,
          5.8907e-03, 2.1530e-03],
         [9.6602e-01, 1.6621e-04, 5.5174e-04,  ..., 9.7490e-01,
          9.8233e-01, 2.1530e-03],
         [1.2694e-02, 9.9950e-01, 9.9834e-01,  ..., 8.6105e-03,
          5.8907e-03, 2.1530e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 203:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:00,725 [Process: 0] Synchronize training processes
2024-08-18 15:06:00,725 [Process: 0] Evaluating...
2024-08-18 15:06:00,727 [Process: 0] EPOCH 203:
2024-08-18 15:06:00,729 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:01,878 [Process: 0] Synchronize training processes
2024-08-18 15:06:01,878 [Process: 0] Evaluating...
2024-08-18 15:06:01,880 [Process: 0] EPOCH 204:
2024-08-18 15:06:01,882 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9996e-01, 1.3856e-03, 1.6528e-03,  ..., 9.8468e-01,
          9.9326e-01, 2.8347e-03],
         [1.1779e-05, 1.3856e-03, 1.6528e-03,  ..., 3.9171e-03,
          2.0792e-03, 2.8347e-03],
         [1.1779e-05, 1.3856e-03, 1.6528e-03,  ..., 7.4837e-03,
          2.0792e-03, 2.8347e-03],
         [1.1779e-05, 9.9584e-01, 9.9504e-01,  ..., 3.9171e-03,
          2.5805e-03, 9.9150e-01]],
        [[1.3484e-02, 6.9798e-03, 3.6717e-03,  ..., 1.1144e-02,
          2.4161e-03, 1.9615e-03],
         [6.1283e-03, 6.6880e-03, 3.6717e-03,  ..., 8.2602e-03,
          2.4161e-03, 1.9615e-03],
         [9.7426e-01, 6.6880e-03, 3.6717e-03,  ..., 9.6882e-03,
          9.9275e-01, 9.9412e-01],
         [6.1283e-03, 9.7964e-01, 9.8898e-01,  ..., 9.7091e-01,
          2.4161e-03, 1.9615e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2235e-03, 2.0734e-05, 9.8505e-01,  ..., 7.0292e-03,
          3.8296e-03, 6.6366e-03],
         [7.2235e-03, 2.0734e-05, 4.9822e-03,  ..., 7.0292e-03,
          3.8296e-03, 6.6366e-03],
         [9.7833e-01, 2.0734e-05, 4.9822e-03,  ..., 9.7891e-01,
          9.8851e-01, 9.8009e-01],
         [7.2235e-03, 9.9994e-01, 4.9822e-03,  ..., 7.0292e-03,
          3.8296e-03, 6.6366e-03]],
        [[1.3023e-02, 3.0461e-04, 8.9258e-05,  ..., 1.5716e-02,
          6.9722e-03, 9.9632e-01],
         [1.3023e-02, 3.0461e-04, 8.9258e-05,  ..., 1.3192e-02,
          6.0001e-03, 1.2269e-03],
         [9.5503e-01, 3.0461e-04, 8.9258e-05,  ..., 9.5182e-01,
          9.7538e-03, 1.2269e-03],
         [1.8926e-02, 9.9909e-01, 9.9973e-01,  ..., 1.9268e-02,
          9.7727e-01, 1.2269e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 204:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9992e-01, 5.7307e-03, 8.2191e-03,  ..., 9.9133e-01,
          9.7747e-01, 3.5311e-03],
         [2.7430e-05, 5.4952e-03, 7.2164e-03,  ..., 2.5335e-03,
          5.2144e-03, 3.5311e-03],
         [2.7430e-05, 5.4952e-03, 7.2164e-03,  ..., 3.5997e-03,
          9.7949e-03, 3.5311e-03],
         [2.7430e-05, 9.8328e-01, 9.7735e-01,  ..., 2.5335e-03,
          7.5181e-03, 9.8941e-01]],
        [[1.9925e-02, 5.0285e-03, 1.1876e-03,  ..., 1.3787e-03,
          3.3482e-03, 2.8865e-03],
         [6.9519e-03, 5.0285e-03, 1.1876e-03,  ..., 1.3787e-03,
          3.3255e-03, 2.8865e-03],
         [9.6617e-01, 5.0285e-03, 1.1876e-03,  ..., 1.3787e-03,
          9.9000e-01, 9.9134e-01],
         [6.9519e-03, 9.8491e-01, 9.9644e-01,  ..., 9.9586e-01,
          3.3255e-03, 2.8865e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.1088e-03, 1.1934e-04, 9.9423e-01,  ..., 1.1688e-02,
          5.9514e-03, 5.3352e-03],
         [6.1088e-03, 1.1934e-04, 1.9230e-03,  ..., 1.1688e-02,
          5.9514e-03, 5.3352e-03],
         [9.8167e-01, 1.1934e-04, 1.9230e-03,  ..., 9.6184e-01,
          9.8215e-01, 9.8399e-01],
         [6.1088e-03, 9.9964e-01, 1.9230e-03,  ..., 1.4782e-02,
          5.9514e-03, 5.3352e-03]],
        [[6.9195e-03, 4.9907e-04, 9.0951e-04,  ..., 1.3650e-02,
          2.1337e-02, 9.9499e-01],
         [6.9195e-03, 4.9907e-04, 9.0951e-04,  ..., 1.3650e-02,
          1.9223e-02, 1.6694e-03],
         [9.7924e-01, 4.9907e-04, 9.0951e-04,  ..., 9.4926e-01,
          9.1941e-01, 1.6694e-03],
         [6.9195e-03, 9.9850e-01, 9.9727e-01,  ..., 2.3440e-02,
          4.0030e-02, 1.6694e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 205:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:03,030 [Process: 0] Synchronize training processes
2024-08-18 15:06:03,030 [Process: 0] Evaluating...
2024-08-18 15:06:03,032 [Process: 0] EPOCH 205:
2024-08-18 15:06:03,034 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:04,179 [Process: 0] Synchronize training processes
2024-08-18 15:06:04,180 [Process: 0] Evaluating...
2024-08-18 15:06:04,181 [Process: 0] EPOCH 206:
2024-08-18 15:06:04,183 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9990e-01, 4.9535e-03, 1.7051e-02,  ..., 9.9261e-01,
          9.9046e-01, 4.9334e-03],
         [3.2368e-05, 4.9535e-03, 1.0430e-02,  ..., 2.1328e-03,
          2.9828e-03, 4.9334e-03],
         [3.2368e-05, 4.9535e-03, 1.2655e-02,  ..., 3.1283e-03,
          3.5525e-03, 4.9334e-03],
         [3.2368e-05, 9.8514e-01, 9.5986e-01,  ..., 2.1328e-03,
          3.0056e-03, 9.8520e-01]],
        [[2.0922e-03, 1.7396e-02, 2.6241e-03,  ..., 1.1911e-03,
          3.1743e-03, 3.2985e-03],
         [2.0922e-03, 1.0167e-02, 2.6241e-03,  ..., 1.1911e-03,
          3.1743e-03, 3.2985e-03],
         [9.9372e-01, 1.0167e-02, 2.6241e-03,  ..., 1.1911e-03,
          9.9048e-01, 9.9010e-01],
         [2.0922e-03, 9.6227e-01, 9.9213e-01,  ..., 9.9643e-01,
          3.1743e-03, 3.2985e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.6257e-03, 1.0551e-05, 9.8978e-01,  ..., 7.9229e-03,
          1.1969e-02, 1.0729e-02],
         [6.6257e-03, 1.0551e-05, 2.5700e-03,  ..., 7.9229e-03,
          1.1969e-02, 1.0729e-02],
         [9.8012e-01, 1.0551e-05, 2.5700e-03,  ..., 9.7591e-01,
          9.6035e-01, 9.6622e-01],
         [6.6257e-03, 9.9997e-01, 5.0825e-03,  ..., 8.2485e-03,
          1.5712e-02, 1.2322e-02]],
        [[1.1263e-02, 2.6959e-05, 3.2286e-04,  ..., 6.3686e-03,
          4.5909e-03, 9.9819e-01],
         [1.1263e-02, 2.6959e-05, 3.2375e-04,  ..., 6.3686e-03,
          4.5909e-03, 6.0186e-04],
         [9.6533e-01, 2.6959e-05, 3.2286e-04,  ..., 9.8089e-01,
          9.8623e-01, 6.0186e-04],
         [1.2142e-02, 9.9992e-01, 9.9903e-01,  ..., 6.3686e-03,
          4.5909e-03, 6.0186e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 206:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9995e-01, 2.6797e-03, 2.4592e-03,  ..., 9.8951e-01,
          9.0376e-01, 6.1751e-03],
         [1.5375e-05, 2.6797e-03, 2.4592e-03,  ..., 3.2623e-03,
          1.1916e-02, 6.1751e-03],
         [1.5375e-05, 2.6797e-03, 2.4592e-03,  ..., 3.9703e-03,
          7.2404e-02, 7.3715e-03],
         [1.5375e-05, 9.9196e-01, 9.9262e-01,  ..., 3.2623e-03,
          1.1916e-02, 9.8028e-01]],
        [[1.0908e-02, 1.7547e-03, 7.5855e-03,  ..., 6.0248e-04,
          1.7011e-03, 3.6920e-03],
         [6.1505e-03, 1.7547e-03, 7.5855e-03,  ..., 6.0248e-04,
          1.7011e-03, 3.6920e-03],
         [9.7679e-01, 1.7547e-03, 7.5855e-03,  ..., 6.0248e-04,
          9.9490e-01, 9.8892e-01],
         [6.1505e-03, 9.9474e-01, 9.7724e-01,  ..., 9.9819e-01,
          1.7011e-03, 3.6920e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:05,324 [Process: 0] Synchronize training processes
2024-08-18 15:06:05,325 [Process: 0] Evaluating...
2024-08-18 15:06:05,327 [Process: 0] EPOCH 207:
2024-08-18 15:06:05,328 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.3216e-03, 3.4145e-06, 9.8308e-01,  ..., 1.3963e-02,
          9.0807e-03, 8.7418e-03],
         [8.3216e-03, 3.4145e-06, 4.5999e-03,  ..., 1.3963e-02,
          9.0807e-03, 8.7418e-03],
         [9.7504e-01, 3.4145e-06, 4.5999e-03,  ..., 9.4305e-01,
          9.7276e-01, 9.7377e-01],
         [8.3216e-03, 9.9999e-01, 7.7197e-03,  ..., 2.9020e-02,
          9.0807e-03, 8.7418e-03]],
        [[1.4520e-02, 7.8250e-05, 7.2216e-05,  ..., 1.9690e-02,
          4.2435e-03, 9.9799e-01],
         [1.0780e-02, 7.8250e-05, 7.5261e-05,  ..., 1.6905e-02,
          4.2435e-03, 6.5372e-04],
         [9.6392e-01, 7.8250e-05, 7.2216e-05,  ..., 9.3900e-01,
          9.8727e-01, 6.5372e-04],
         [1.0780e-02, 9.9977e-01, 9.9978e-01,  ..., 2.4408e-02,
          4.2435e-03, 6.9918e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 207:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9893e-01, 4.8661e-03, 9.1893e-03,  ..., 9.9527e-01,
          9.8115e-01, 1.3503e-03],
         [3.5786e-04, 4.8661e-03, 6.6483e-03,  ..., 1.5757e-03,
          4.6479e-03, 1.3654e-03],
         [3.5786e-04, 5.7885e-03, 7.6488e-03,  ..., 1.5757e-03,
          9.5506e-03, 1.3503e-03],
         [3.5786e-04, 9.8448e-01, 9.7651e-01,  ..., 1.5757e-03,
          4.6479e-03, 9.9593e-01]],
        [[2.8655e-03, 6.5072e-04, 2.1274e-02,  ..., 1.9802e-03,
          7.0291e-03, 3.4032e-03],
         [2.8655e-03, 6.5072e-04, 7.6333e-03,  ..., 1.9802e-03,
          4.9120e-03, 3.4032e-03],
         [9.9140e-01, 6.5072e-04, 7.6333e-03,  ..., 1.9802e-03,
          9.8315e-01, 9.8979e-01],
         [2.8655e-03, 9.9805e-01, 9.6346e-01,  ..., 9.9406e-01,
          4.9120e-03, 3.4032e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0511e-02, 6.0742e-05, 9.8231e-01,  ..., 7.3879e-03,
          3.7033e-02, 9.1307e-03],
         [1.0511e-02, 6.0742e-05, 2.1477e-03,  ..., 7.3879e-03,
          3.7033e-02, 9.1307e-03],
         [9.6847e-01, 6.0742e-05, 2.1477e-03,  ..., 9.7784e-01,
          5.0597e-01, 9.7261e-01],
         [1.0511e-02, 9.9982e-01, 1.3393e-02,  ..., 7.3879e-03,
          4.1997e-01, 9.1307e-03]],
        [[1.6274e-02, 2.4876e-05, 6.3842e-04,  ..., 1.1587e-02,
          1.3559e-03, 9.9882e-01],
         [1.5081e-02, 2.5443e-05, 6.3842e-04,  ..., 1.1587e-02,
          1.3559e-03, 3.3212e-04],
         [9.4955e-01, 2.4876e-05, 6.3842e-04,  ..., 9.6524e-01,
          9.9593e-01, 3.3212e-04],
         [1.9090e-02, 9.9992e-01, 9.9808e-01,  ..., 1.1587e-02,
          1.3559e-03, 5.1936e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 208:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9993e-01, 2.6686e-03, 3.0436e-03,  ..., 9.9534e-01,
          9.8238e-01, 2.7216e-03],
         [2.2819e-05, 2.6686e-03, 3.0436e-03,  ..., 1.5313e-03,
          4.4628e-03, 2.7216e-03],
         [2.2819e-05, 2.6686e-03, 3.0436e-03,  ..., 1.5313e-03,
          6.5111e-03, 2.7216e-03],
         [2.2819e-05, 9.9199e-01, 9.9087e-01,  ..., 1.5936e-03,
          6.6496e-03, 9.9184e-01]],
        [[2.9427e-03, 9.6945e-04, 4.9002e-03,  ..., 1.0931e-03,
          2.7602e-03, 2.7483e-03],
         [2.9427e-03, 9.6945e-04, 4.9002e-03,  ..., 1.0931e-03,
          2.7602e-03, 2.7483e-03],
         [9.9117e-01, 9.6945e-04, 7.6708e-03,  ..., 1.0931e-03,
          9.9172e-01, 9.9176e-01],
         [2.9427e-03, 9.9709e-01, 9.8253e-01,  ..., 9.9672e-01,
          2.7602e-03, 2.7483e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:06,482 [Process: 0] Synchronize training processes
2024-08-18 15:06:06,482 [Process: 0] Evaluating...
2024-08-18 15:06:06,484 [Process: 0] EPOCH 208:
2024-08-18 15:06:06,486 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:07,641 [Process: 0] Synchronize training processes
2024-08-18 15:06:07,641 [Process: 0] Evaluating...
2024-08-18 15:06:07,643 [Process: 0] EPOCH 209:
2024-08-18 15:06:07,645 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6839e-03, 4.7198e-05, 9.9705e-01,  ..., 1.7534e-02,
          2.1587e-03, 1.6622e-02],
         [9.6839e-03, 4.7198e-05, 9.1473e-04,  ..., 1.7534e-02,
          7.2634e-04, 1.4851e-02],
         [9.7095e-01, 4.7198e-05, 9.1473e-04,  ..., 9.4227e-01,
          7.2634e-04, 9.5368e-01],
         [9.6839e-03, 9.9986e-01, 1.1247e-03,  ..., 2.2663e-02,
          9.9639e-01, 1.4851e-02]],
        [[9.5460e-03, 1.4547e-04, 3.4835e-05,  ..., 9.7678e-03,
          1.2259e-03, 9.3303e-01],
         [9.5460e-03, 1.5743e-04, 3.7344e-05,  ..., 9.7678e-03,
          1.2259e-03, 9.0918e-03],
         [9.7136e-01, 1.4547e-04, 3.4835e-05,  ..., 9.7070e-01,
          9.9632e-01, 1.1796e-02],
         [9.5460e-03, 9.9955e-01, 9.9989e-01,  ..., 9.7678e-03,
          1.2259e-03, 4.6083e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 209:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9967, 0.0070, 0.0079,  ..., 0.9936, 0.9363, 0.0014],
         [0.0011, 0.0070, 0.0079,  ..., 0.0021, 0.0104, 0.0015],
         [0.0011, 0.0116, 0.0212,  ..., 0.0021, 0.0364, 0.0014],
         [0.0011, 0.9744, 0.9631,  ..., 0.0021, 0.0169, 0.9956]],
        [[0.0033, 0.0107, 0.0034,  ..., 0.0083, 0.0026, 0.0049],
         [0.0033, 0.0063, 0.0035,  ..., 0.0083, 0.0026, 0.0049],
         [0.9900, 0.0063, 0.0036,  ..., 0.0115, 0.9922, 0.9852],
         [0.0033, 0.9766, 0.9895,  ..., 0.9719, 0.0026, 0.0049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3088e-02, 4.9781e-05, 9.9756e-01,  ..., 1.6742e-02,
          5.4051e-05, 1.5076e-02],
         [1.3088e-02, 4.9909e-05, 5.5949e-04,  ..., 1.3042e-02,
          5.4051e-05, 1.1786e-02],
         [9.6074e-01, 4.9781e-05, 5.5949e-04,  ..., 9.5717e-01,
          5.4051e-05, 9.6135e-01],
         [1.3088e-02, 9.9985e-01, 1.3226e-03,  ..., 1.3042e-02,
          9.9984e-01, 1.1786e-02]],
        [[7.7917e-03, 1.4296e-04, 2.7630e-04,  ..., 1.1722e-02,
          5.8559e-03, 9.8924e-01],
         [7.7917e-03, 1.4296e-04, 2.7630e-04,  ..., 1.1722e-02,
          5.8559e-03, 2.0951e-03],
         [9.7662e-01, 1.4296e-04, 2.7630e-04,  ..., 9.6483e-01,
          9.8243e-01, 2.0951e-03],
         [7.7917e-03, 9.9957e-01, 9.9917e-01,  ..., 1.1722e-02,
          5.8559e-03, 6.5691e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 210:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:08,796 [Process: 0] Synchronize training processes
2024-08-18 15:06:08,796 [Process: 0] Evaluating...
2024-08-18 15:06:08,798 [Process: 0] EPOCH 210:
2024-08-18 15:06:08,800 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:09,952 [Process: 0] Synchronize training processes
2024-08-18 15:06:09,953 [Process: 0] Evaluating...
2024-08-18 15:06:09,954 [Process: 0] EPOCH 211:
2024-08-18 15:06:09,956 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9520e-01, 6.4652e-03, 7.0517e-04,  ..., 9.8657e-01,
          9.8512e-01, 1.7120e-03],
         [1.5995e-03, 6.4847e-03, 7.0517e-04,  ..., 3.6818e-03,
          4.1492e-03, 1.7120e-03],
         [1.5995e-03, 7.6781e-03, 7.0517e-04,  ..., 4.1918e-03,
          6.3151e-03, 1.7120e-03],
         [1.5995e-03, 9.7937e-01, 9.9788e-01,  ..., 5.5585e-03,
          4.4112e-03, 9.9486e-01]],
        [[1.4369e-02, 4.3473e-03, 4.9939e-03,  ..., 5.2259e-04,
          6.1803e-04, 2.6110e-03],
         [5.9607e-03, 4.3473e-03, 4.2343e-03,  ..., 5.2259e-04,
          6.1803e-04, 2.6110e-03],
         [9.7371e-01, 4.7017e-03, 4.2343e-03,  ..., 5.2259e-04,
          9.9815e-01, 9.9217e-01],
         [5.9607e-03, 9.8660e-01, 9.8654e-01,  ..., 9.9843e-01,
          6.1803e-04, 2.6110e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9033e-03, 2.1222e-04, 9.6662e-01,  ..., 7.1669e-03,
          9.6350e-05, 7.9711e-03],
         [6.9033e-03, 2.1222e-04, 3.0442e-03,  ..., 7.1669e-03,
          9.6350e-05, 7.9711e-03],
         [9.7929e-01, 2.1222e-04, 3.0442e-03,  ..., 9.7850e-01,
          9.6350e-05, 9.7609e-01],
         [6.9033e-03, 9.9936e-01, 2.7294e-02,  ..., 7.1669e-03,
          9.9971e-01, 7.9711e-03]],
        [[8.7237e-03, 1.5925e-03, 3.0873e-05,  ..., 7.7877e-03,
          5.2033e-03, 9.9727e-01],
         [8.7237e-03, 6.5786e-04, 3.0873e-05,  ..., 7.7877e-03,
          5.2033e-03, 6.9670e-04],
         [9.7383e-01, 6.5786e-04, 3.0873e-05,  ..., 9.7664e-01,
          9.8439e-01, 6.9670e-04],
         [8.7237e-03, 9.9709e-01, 9.9991e-01,  ..., 7.7877e-03,
          5.2033e-03, 1.3384e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 211:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9783, 0.0042, 0.0019,  ..., 0.9954, 0.9303, 0.0072],
         [0.0042, 0.0042, 0.0019,  ..., 0.0015, 0.0102, 0.0074],
         [0.0133, 0.0062, 0.0019,  ..., 0.0015, 0.0364, 0.0091],
         [0.0042, 0.9854, 0.9943,  ..., 0.0015, 0.0231, 0.9763]],
        [[0.0056, 0.0024, 0.0125,  ..., 0.0306, 0.0011, 0.0014],
         [0.0045, 0.0024, 0.0125,  ..., 0.0123, 0.0011, 0.0015],
         [0.9855, 0.0024, 0.0328,  ..., 0.0183, 0.9968, 0.9957],
         [0.0045, 0.9928, 0.9422,  ..., 0.9389, 0.0011, 0.0014]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8811e-03, 1.2071e-04, 9.8655e-01,  ..., 7.5244e-03,
          1.7664e-04, 8.3388e-03],
         [7.8811e-03, 1.2071e-04, 3.4581e-03,  ..., 7.5244e-03,
          1.7664e-04, 8.3388e-03],
         [9.7636e-01, 1.2071e-04, 3.4581e-03,  ..., 9.7743e-01,
          1.7664e-04, 9.7498e-01],
         [7.8811e-03, 9.9964e-01, 6.5325e-03,  ..., 7.5244e-03,
          9.9947e-01, 8.3388e-03]],
        [[1.0849e-02, 2.4273e-04, 1.3424e-04,  ..., 6.0990e-03,
          1.3995e-02, 9.9749e-01],
         [1.0849e-02, 2.4273e-04, 1.2928e-04,  ..., 6.0990e-03,
          1.3995e-02, 7.7786e-04],
         [9.6234e-01, 2.4273e-04, 1.2928e-04,  ..., 9.8170e-01,
          9.5551e-01, 7.7786e-04],
         [1.5957e-02, 9.9927e-01, 9.9961e-01,  ..., 6.0990e-03,
          1.6499e-02, 9.5116e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 212:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:11,107 [Process: 0] Synchronize training processes
2024-08-18 15:06:11,107 [Process: 0] Evaluating...
2024-08-18 15:06:11,111 [Process: 0] EPOCH 212:
2024-08-18 15:06:11,113 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:12,254 [Process: 0] Synchronize training processes
2024-08-18 15:06:12,255 [Process: 0] Evaluating...
2024-08-18 15:06:12,256 [Process: 0] EPOCH 213:
2024-08-18 15:06:12,258 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8224e-01, 1.7242e-03, 1.9610e-02,  ..., 9.9897e-01,
          9.9109e-01, 2.8160e-03],
         [4.7072e-03, 1.7242e-03, 1.7107e-02,  ..., 3.4473e-04,
          2.6561e-03, 2.8160e-03],
         [8.3420e-03, 1.7242e-03, 3.0863e-02,  ..., 3.4473e-04,
          3.6024e-03, 2.8160e-03],
         [4.7072e-03, 9.9483e-01, 9.3242e-01,  ..., 3.4473e-04,
          2.6561e-03, 9.9155e-01]],
        [[3.7115e-03, 4.9710e-03, 2.9826e-03,  ..., 3.7477e-03,
          2.5257e-03, 2.9899e-03],
         [3.7115e-03, 4.9710e-03, 2.9826e-03,  ..., 3.7810e-03,
          2.5257e-03, 2.9899e-03],
         [9.8887e-01, 6.7732e-03, 2.9826e-03,  ..., 3.7477e-03,
          9.9242e-01, 9.9103e-01],
         [3.7115e-03, 9.8328e-01, 9.9105e-01,  ..., 9.8872e-01,
          2.5257e-03, 2.9899e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3676e-02, 1.1715e-04, 9.8757e-01,  ..., 5.7668e-03,
          5.8475e-05, 2.6209e-02],
         [1.3676e-02, 1.1715e-04, 2.9958e-03,  ..., 5.7668e-03,
          5.8475e-05, 1.5199e-02],
         [9.4073e-01, 1.1715e-04, 2.9958e-03,  ..., 9.8270e-01,
          5.8475e-05, 9.2778e-01],
         [3.1916e-02, 9.9965e-01, 6.4375e-03,  ..., 5.7668e-03,
          9.9982e-01, 3.0808e-02]],
        [[9.0169e-03, 2.4118e-04, 1.3060e-04,  ..., 3.5068e-03,
          8.7803e-03, 9.7106e-01],
         [9.0169e-03, 2.4934e-04, 1.3060e-04,  ..., 3.5068e-03,
          8.7803e-03, 5.0330e-03],
         [9.6744e-01, 2.4118e-04, 1.3060e-04,  ..., 9.8948e-01,
          9.7366e-01, 5.0330e-03],
         [1.4522e-02, 9.9927e-01, 9.9961e-01,  ..., 3.5068e-03,
          8.7803e-03, 1.8874e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 213:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0176e-01, 1.3093e-03, 7.7569e-03,  ..., 9.9643e-01,
          9.7321e-01, 3.6460e-03],
         [8.6281e-03, 1.3093e-03, 7.7569e-03,  ..., 1.1902e-03,
          4.6229e-03, 3.6460e-03],
         [8.0985e-02, 1.3093e-03, 7.7569e-03,  ..., 1.1902e-03,
          1.7543e-02, 3.6460e-03],
         [8.6281e-03, 9.9607e-01, 9.7673e-01,  ..., 1.1902e-03,
          4.6229e-03, 9.8906e-01]],
        [[3.4904e-03, 4.5373e-03, 3.8302e-03,  ..., 9.3959e-04,
          1.4730e-02, 4.2653e-03],
         [3.4904e-03, 4.5373e-03, 3.8302e-03,  ..., 9.3959e-04,
          5.6974e-03, 4.2653e-03],
         [9.8953e-01, 5.6312e-03, 3.8302e-03,  ..., 9.3959e-04,
          9.7388e-01, 9.8720e-01],
         [3.4904e-03, 9.8529e-01, 9.8851e-01,  ..., 9.9718e-01,
          5.6974e-03, 4.2653e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:13,406 [Process: 0] Synchronize training processes
2024-08-18 15:06:13,406 [Process: 0] Evaluating...
2024-08-18 15:06:13,408 [Process: 0] EPOCH 214:
2024-08-18 15:06:13,410 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.5015e-03, 2.2350e-05, 9.8834e-01,  ..., 8.6095e-03,
          9.9524e-01, 7.7896e-03],
         [8.5015e-03, 2.2350e-05, 3.8882e-03,  ..., 8.6095e-03,
          1.5858e-03, 7.7896e-03],
         [9.6899e-01, 2.2350e-05, 3.8882e-03,  ..., 9.7161e-01,
          1.5858e-03, 9.7418e-01],
         [1.4012e-02, 9.9993e-01, 3.8882e-03,  ..., 1.1171e-02,
          1.5858e-03, 1.0239e-02]],
        [[8.2852e-03, 1.3796e-03, 1.5618e-04,  ..., 4.9667e-03,
          2.1483e-02, 9.9117e-01],
         [8.2852e-03, 8.2174e-04, 1.5618e-04,  ..., 4.9667e-03,
          1.3641e-02, 2.9424e-03],
         [9.7189e-01, 8.2174e-04, 1.5618e-04,  ..., 9.8510e-01,
          9.5016e-01, 2.9424e-03],
         [1.1540e-02, 9.9698e-01, 9.9953e-01,  ..., 4.9667e-03,
          1.4721e-02, 2.9424e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 214:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7729e-01, 2.1770e-03, 2.9001e-03,  ..., 9.9891e-01,
          9.7382e-01, 2.7012e-03],
         [5.1430e-03, 2.1770e-03, 2.9001e-03,  ..., 3.6305e-04,
          5.5959e-03, 2.7457e-03],
         [1.2423e-02, 2.1770e-03, 2.9001e-03,  ..., 3.6305e-04,
          1.2368e-02, 2.7012e-03],
         [5.1430e-03, 9.9347e-01, 9.9130e-01,  ..., 3.6305e-04,
          8.2187e-03, 9.9185e-01]],
        [[2.0854e-03, 9.7420e-04, 1.2040e-02,  ..., 1.5675e-03,
          1.8273e-03, 3.2272e-03],
         [2.0854e-03, 9.7420e-04, 9.5552e-03,  ..., 1.5675e-03,
          1.8273e-03, 3.2272e-03],
         [9.9374e-01, 9.7420e-04, 9.5552e-03,  ..., 1.5675e-03,
          9.9452e-01, 9.9032e-01],
         [2.0854e-03, 9.9708e-01, 9.6885e-01,  ..., 9.9530e-01,
          1.8273e-03, 3.2272e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.5048e-03, 7.9019e-05, 9.8895e-01,  ..., 7.3171e-03,
          9.8553e-01, 7.6039e-03],
         [8.5048e-03, 7.9019e-05, 3.6545e-03,  ..., 7.3171e-03,
          4.8835e-03, 7.6039e-03],
         [9.6969e-01, 7.9019e-05, 3.6545e-03,  ..., 9.7687e-01,
          4.1480e-03, 9.7581e-01],
         [1.3298e-02, 9.9976e-01, 3.7452e-03,  ..., 8.5008e-03,
          5.4410e-03, 8.9816e-03]],
        [[6.6755e-03, 2.9687e-04, 4.3847e-04,  ..., 9.5042e-03,
          7.2090e-03, 9.9827e-01],
         [6.6755e-03, 2.9687e-04, 4.3847e-04,  ..., 9.5042e-03,
          7.2090e-03, 5.7586e-04],
         [9.7862e-01, 2.9687e-04, 4.3847e-04,  ..., 9.6704e-01,
          9.7837e-01, 5.7586e-04],
         [8.0323e-03, 9.9911e-01, 9.9868e-01,  ..., 1.3948e-02,
          7.2090e-03, 5.7586e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 215:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9810e-01, 6.1606e-03, 5.9811e-03,  ..., 9.9775e-01,
          3.3078e-01, 4.4404e-03],
         [6.1712e-04, 5.1400e-03, 5.9811e-03,  ..., 7.4867e-04,
          2.2188e-02, 4.5070e-03],
         [6.6534e-04, 5.1400e-03, 5.9811e-03,  ..., 7.4867e-04,
          2.2188e-02, 4.4404e-03],
         [6.1712e-04, 9.8356e-01, 9.8206e-01,  ..., 7.4867e-04,
          6.2484e-01, 9.8661e-01]],
        [[2.2317e-03, 5.4998e-03, 1.8297e-03,  ..., 2.3670e-03,
          1.5339e-03, 3.0957e-02],
         [2.2317e-03, 5.4998e-03, 1.8297e-03,  ..., 2.3670e-03,
          1.5339e-03, 3.0957e-02],
         [9.9330e-01, 6.3961e-03, 1.8297e-03,  ..., 2.3670e-03,
          9.9540e-01, 1.9459e-01],
         [2.2317e-03, 9.8260e-01, 9.9451e-01,  ..., 9.9290e-01,
          1.5339e-03, 7.4350e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:14,564 [Process: 0] Synchronize training processes
2024-08-18 15:06:14,564 [Process: 0] Evaluating...
2024-08-18 15:06:14,566 [Process: 0] EPOCH 215:
2024-08-18 15:06:14,567 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:15,722 [Process: 0] Synchronize training processes
2024-08-18 15:06:15,723 [Process: 0] Evaluating...
2024-08-18 15:06:15,725 [Process: 0] EPOCH 216:
2024-08-18 15:06:15,727 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7141e-03, 1.2749e-04, 9.9609e-01,  ..., 1.6256e-02,
          3.1990e-01, 6.9793e-03],
         [8.7141e-03, 1.2749e-04, 1.3021e-03,  ..., 1.3358e-02,
          1.7065e-02, 6.9793e-03],
         [9.7183e-01, 1.2749e-04, 1.3021e-03,  ..., 9.4520e-01,
          1.7065e-02, 9.7906e-01],
         [1.0741e-02, 9.9962e-01, 1.3021e-03,  ..., 2.5185e-02,
          6.4597e-01, 6.9793e-03]],
        [[6.6599e-03, 3.4309e-05, 9.3046e-05,  ..., 6.5581e-03,
          7.1396e-03, 9.9532e-01],
         [6.7240e-03, 3.4309e-05, 9.3046e-05,  ..., 6.5581e-03,
          7.1396e-03, 1.5170e-03],
         [9.7949e-01, 3.4309e-05, 9.3046e-05,  ..., 9.8033e-01,
          9.7858e-01, 1.5170e-03],
         [7.1275e-03, 9.9990e-01, 9.9972e-01,  ..., 6.5581e-03,
          7.1396e-03, 1.6478e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 216:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9743, 0.0024, 0.0040,  ..., 0.9961, 0.0173, 0.0249],
         [0.0045, 0.0024, 0.0040,  ..., 0.0013, 0.0048, 0.0138],
         [0.0166, 0.0024, 0.0040,  ..., 0.0013, 0.0048, 0.0247],
         [0.0045, 0.9928, 0.9879,  ..., 0.0013, 0.9731, 0.9366]],
        [[0.0019, 0.0063, 0.0182,  ..., 0.0026, 0.0045, 0.0030],
         [0.0020, 0.0063, 0.0069,  ..., 0.0026, 0.0029, 0.0030],
         [0.9942, 0.0126, 0.0067,  ..., 0.0026, 0.9896, 0.9911],
         [0.0019, 0.9748, 0.9683,  ..., 0.9922, 0.0029, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.0589e-03, 1.1401e-04, 9.9758e-01,  ..., 1.1469e-02,
          1.9104e-04, 4.7062e-03],
         [7.0589e-03, 1.1401e-04, 8.0724e-04,  ..., 1.0765e-02,
          1.9104e-04, 4.7062e-03],
         [9.7882e-01, 1.1401e-04, 8.0724e-04,  ..., 9.6550e-01,
          1.9104e-04, 9.8588e-01],
         [7.0589e-03, 9.9966e-01, 8.0724e-04,  ..., 1.2268e-02,
          9.9943e-01, 4.7062e-03]],
        [[1.7737e-02, 3.5866e-05, 6.8808e-04,  ..., 7.5210e-03,
          6.9668e-03, 9.9661e-01],
         [1.4237e-02, 3.5866e-05, 6.8808e-04,  ..., 7.5210e-03,
          6.9668e-03, 1.1109e-03],
         [9.4215e-01, 3.5866e-05, 6.8808e-04,  ..., 9.7744e-01,
          9.7910e-01, 1.1109e-03],
         [2.5879e-02, 9.9989e-01, 9.9794e-01,  ..., 7.5210e-03,
          6.9668e-03, 1.1676e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 217:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:16,883 [Process: 0] Synchronize training processes
2024-08-18 15:06:16,883 [Process: 0] Evaluating...
2024-08-18 15:06:16,885 [Process: 0] EPOCH 217:
2024-08-18 15:06:16,887 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:18,044 [Process: 0] Synchronize training processes
2024-08-18 15:06:18,045 [Process: 0] Evaluating...
2024-08-18 15:06:18,046 [Process: 0] EPOCH 218:
2024-08-18 15:06:18,048 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9974e-01, 1.2518e-03, 3.4516e-03,  ..., 9.9462e-01,
          9.1642e-01, 2.2027e-03],
         [8.5782e-05, 1.2518e-03, 3.4516e-03,  ..., 1.4767e-03,
          1.4274e-02, 2.2027e-03],
         [8.5782e-05, 1.2518e-03, 3.4516e-03,  ..., 2.4282e-03,
          1.4274e-02, 2.2027e-03],
         [8.5782e-05, 9.9624e-01, 9.8965e-01,  ..., 1.4767e-03,
          5.5029e-02, 9.9339e-01]],
        [[1.2281e-03, 1.8411e-02, 1.4146e-03,  ..., 6.2002e-03,
          5.7302e-03, 2.1151e-03],
         [1.2281e-03, 1.3266e-02, 1.4146e-03,  ..., 6.2002e-03,
          3.4119e-03, 2.1151e-03],
         [9.9632e-01, 1.4166e-02, 1.4146e-03,  ..., 6.2002e-03,
          9.8745e-01, 9.9365e-01],
         [1.2281e-03, 9.5416e-01, 9.9576e-01,  ..., 9.8140e-01,
          3.4119e-03, 2.1151e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3429e-02, 1.4216e-02, 9.9786e-01,  ..., 7.6517e-03,
          7.7243e-05, 8.3935e-03],
         [1.3725e-02, 1.4216e-02, 7.1355e-04,  ..., 7.6517e-03,
          7.7243e-05, 8.3935e-03],
         [9.4581e-01, 1.3175e-01, 7.1355e-04,  ..., 9.7704e-01,
          7.7243e-05, 9.7482e-01],
         [1.7039e-02, 8.3982e-01, 7.1355e-04,  ..., 7.6517e-03,
          9.9977e-01, 8.3935e-03]],
        [[1.1924e-02, 1.9869e-05, 2.6983e-05,  ..., 9.4428e-03,
          2.2459e-02, 9.9159e-01],
         [1.1924e-02, 1.9869e-05, 2.6983e-05,  ..., 9.4428e-03,
          1.4731e-02, 1.9268e-03],
         [9.5586e-01, 1.9869e-05, 2.6983e-05,  ..., 9.7167e-01,
          9.4808e-01, 1.9268e-03],
         [2.0296e-02, 9.9994e-01, 9.9992e-01,  ..., 9.4428e-03,
          1.4731e-02, 4.5519e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 218:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9946e-01, 3.8171e-03, 5.9098e-03,  ..., 9.6576e-01,
          9.9700e-01, 3.3314e-03],
         [1.8014e-04, 3.8171e-03, 5.9098e-03,  ..., 6.2746e-03,
          9.9997e-04, 3.3314e-03],
         [1.8014e-04, 3.8171e-03, 7.6202e-03,  ..., 1.8175e-02,
          9.9997e-04, 3.3314e-03],
         [1.8014e-04, 9.8855e-01, 9.8056e-01,  ..., 9.7865e-03,
          9.9997e-04, 9.9001e-01]],
        [[1.9827e-03, 1.6210e-03, 8.1561e-04,  ..., 2.8208e-03,
          2.7740e-03, 2.7101e-03],
         [1.9827e-03, 1.6210e-03, 8.1561e-04,  ..., 2.8208e-03,
          2.7740e-03, 2.7101e-03],
         [9.9405e-01, 1.6210e-03, 8.1561e-04,  ..., 2.8208e-03,
          9.9168e-01, 9.9187e-01],
         [1.9827e-03, 9.9514e-01, 9.9755e-01,  ..., 9.9154e-01,
          2.7740e-03, 2.7101e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.1608e-03, 2.5895e-02, 9.9205e-01,  ..., 7.9682e-03,
          2.9636e-03, 7.6880e-03],
         [5.1608e-03, 2.5895e-02, 1.7875e-03,  ..., 7.9682e-03,
          2.9636e-03, 7.6880e-03],
         [9.8452e-01, 3.8861e-01, 1.7875e-03,  ..., 9.7610e-01,
          2.9636e-03, 9.7694e-01],
         [5.1608e-03, 5.5960e-01, 4.3742e-03,  ..., 7.9682e-03,
          9.9111e-01, 7.6880e-03]],
        [[1.9885e-02, 4.6991e-04, 8.0877e-05,  ..., 7.5598e-03,
          8.6830e-03, 9.9120e-01],
         [1.5222e-02, 4.6991e-04, 8.0877e-05,  ..., 7.5598e-03,
          8.6830e-03, 1.7613e-03],
         [9.4250e-01, 4.6991e-04, 8.0877e-05,  ..., 9.7732e-01,
          9.7395e-01, 1.7613e-03],
         [2.2396e-02, 9.9859e-01, 9.9976e-01,  ..., 7.5598e-03,
          8.6830e-03, 5.2790e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:19,221 [Process: 0] Synchronize training processes
2024-08-18 15:06:19,221 [Process: 0] Evaluating...
2024-08-18 15:06:19,223 [Process: 0] EPOCH 219:
2024-08-18 15:06:19,224 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:20,367 [Process: 0] Synchronize training processes
2024-08-18 15:06:20,368 [Process: 0] Evaluating...
2024-08-18 15:06:20,369 [Process: 0] EPOCH 220:
2024-08-18 15:06:20,371 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 219:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9927e-01, 1.2625e-02, 3.5479e-03,  ..., 9.9870e-01,
          9.9538e-01, 8.9591e-03],
         [2.4193e-04, 1.1487e-02, 3.5479e-03,  ..., 4.3388e-04,
          1.5396e-03, 4.5047e-03],
         [2.4193e-04, 2.2566e-02, 3.5479e-03,  ..., 4.3388e-04,
          1.5396e-03, 4.5047e-03],
         [2.4193e-04, 9.5332e-01, 9.8936e-01,  ..., 4.3388e-04,
          1.5396e-03, 9.8203e-01]],
        [[1.7563e-03, 4.6390e-03, 2.7819e-03,  ..., 1.4501e-03,
          1.7652e-03, 7.0075e-03],
         [1.7563e-03, 4.6390e-03, 2.7819e-03,  ..., 1.4501e-03,
          1.7652e-03, 5.1307e-03],
         [9.9473e-01, 4.6390e-03, 2.7819e-03,  ..., 1.4501e-03,
          9.9470e-01, 9.8273e-01],
         [1.7563e-03, 9.8608e-01, 9.9165e-01,  ..., 9.9565e-01,
          1.7652e-03, 5.1307e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2323e-02, 1.2415e-03, 9.9588e-01,  ..., 9.8920e-03,
          9.9980e-04, 6.2730e-03],
         [1.2323e-02, 1.2415e-03, 1.1394e-03,  ..., 9.8920e-03,
          9.9980e-04, 6.2730e-03],
         [9.6034e-01, 2.0503e-03, 1.1394e-03,  ..., 9.7032e-01,
          9.9980e-04, 9.8118e-01],
         [1.5010e-02, 9.9547e-01, 1.8449e-03,  ..., 9.8920e-03,
          9.9700e-01, 6.2730e-03]],
        [[1.3848e-02, 4.0925e-05, 3.6273e-03,  ..., 8.1384e-03,
          1.0236e-02, 9.9869e-01],
         [1.3848e-02, 4.1505e-05, 2.2258e-03,  ..., 8.1384e-03,
          1.0236e-02, 4.3572e-04],
         [9.4802e-01, 4.0925e-05, 2.2258e-03,  ..., 9.7558e-01,
          9.6929e-01, 4.3572e-04],
         [2.4287e-02, 9.9988e-01, 9.9192e-01,  ..., 8.1384e-03,
          1.0236e-02, 4.3572e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 220:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9540e-01, 5.6195e-03, 4.8651e-03,  ..., 9.9737e-01,
          9.9773e-01, 9.5747e-03],
         [1.5318e-03, 5.3441e-03, 4.8651e-03,  ..., 8.7808e-04,
          7.5498e-04, 7.0161e-03],
         [1.5318e-03, 6.8733e-03, 6.7910e-03,  ..., 8.7808e-04,
          7.5498e-04, 8.7241e-03],
         [1.5318e-03, 9.8216e-01, 9.8348e-01,  ..., 8.7808e-04,
          7.5498e-04, 9.7469e-01]],
        [[5.0079e-03, 6.6853e-03, 1.3110e-03,  ..., 2.7049e-02,
          1.8355e-03, 1.6312e-02],
         [4.4961e-03, 6.6853e-03, 1.3110e-03,  ..., 1.1118e-02,
          1.8355e-03, 1.6312e-02],
         [9.8600e-01, 6.6853e-03, 1.3110e-03,  ..., 1.9856e-02,
          9.9449e-01, 9.2062e-01],
         [4.4961e-03, 9.7994e-01, 9.9607e-01,  ..., 9.4198e-01,
          1.8355e-03, 4.6756e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:21,526 [Process: 0] Synchronize training processes
2024-08-18 15:06:21,526 [Process: 0] Evaluating...
2024-08-18 15:06:21,528 [Process: 0] EPOCH 221:
2024-08-18 15:06:21,530 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0973e-02, 1.2560e-04, 9.9700e-01,  ..., 1.0584e-02,
          1.1796e-02, 5.5339e-03],
         [1.0973e-02, 1.2560e-04, 1.0006e-03,  ..., 1.0584e-02,
          5.5062e-03, 5.5339e-03],
         [9.6643e-01, 1.2560e-04, 1.0006e-03,  ..., 9.6786e-01,
          8.3551e-03, 9.8340e-01],
         [1.1621e-02, 9.9962e-01, 1.0006e-03,  ..., 1.0976e-02,
          9.7434e-01, 5.5339e-03]],
        [[1.2788e-02, 1.0928e-04, 6.4292e-04,  ..., 6.5876e-03,
          5.7240e-03, 9.9311e-01],
         [1.2788e-02, 1.0928e-04, 6.4292e-04,  ..., 6.5876e-03,
          5.7240e-03, 1.4323e-03],
         [9.5307e-01, 1.0928e-04, 6.4292e-04,  ..., 9.8024e-01,
          9.8283e-01, 1.4323e-03],
         [2.1349e-02, 9.9967e-01, 9.9807e-01,  ..., 6.5876e-03,
          5.7240e-03, 4.0246e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 221:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9970, 0.0046, 0.0069,  ..., 0.9921, 0.9954, 0.0018],
         [0.0010, 0.0038, 0.0069,  ..., 0.0020, 0.0014, 0.0018],
         [0.0010, 0.0038, 0.0100,  ..., 0.0038, 0.0019, 0.0018],
         [0.0010, 0.9877, 0.9762,  ..., 0.0020, 0.0014, 0.9946]],
        [[0.0020, 0.0353, 0.0128,  ..., 0.0033, 0.0016, 0.0019],
         [0.0020, 0.0145, 0.0128,  ..., 0.0033, 0.0016, 0.0019],
         [0.9941, 0.0275, 0.0406,  ..., 0.0033, 0.9951, 0.9943],
         [0.0020, 0.9227, 0.9337,  ..., 0.9902, 0.0016, 0.0019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9213e-03, 4.4273e-05, 9.9148e-01,  ..., 7.7470e-03,
          4.6270e-04, 1.0313e-02],
         [8.9213e-03, 4.4273e-05, 1.6560e-03,  ..., 7.7470e-03,
          4.6270e-04, 1.0313e-02],
         [9.7324e-01, 4.4273e-05, 1.6560e-03,  ..., 9.7676e-01,
          4.6270e-04, 9.6906e-01],
         [8.9213e-03, 9.9987e-01, 5.2119e-03,  ..., 7.7470e-03,
          9.9861e-01, 1.0313e-02]],
        [[3.0733e-02, 7.1274e-04, 1.6396e-04,  ..., 8.6014e-03,
          6.1437e-03, 9.9904e-01],
         [3.0733e-02, 4.3733e-04, 1.6396e-04,  ..., 8.6014e-03,
          6.1437e-03, 3.1998e-04],
         [2.8886e-01, 4.3733e-04, 1.6396e-04,  ..., 9.7420e-01,
          9.8157e-01, 3.1998e-04],
         [6.4968e-01, 9.9841e-01, 9.9951e-01,  ..., 8.6014e-03,
          6.1437e-03, 3.1998e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 222:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9993e-01, 2.8637e-03, 3.0061e-03,  ..., 9.9656e-01,
          9.9839e-01, 4.3781e-03],
         [2.2968e-05, 2.8637e-03, 3.0061e-03,  ..., 1.1480e-03,
          5.3517e-04, 4.3781e-03],
         [2.2968e-05, 2.8637e-03, 3.0061e-03,  ..., 1.1480e-03,
          5.3517e-04, 4.6810e-03],
         [2.2968e-05, 9.9141e-01, 9.9098e-01,  ..., 1.1480e-03,
          5.3517e-04, 9.8656e-01]],
        [[2.1176e-03, 5.7876e-03, 2.7526e-03,  ..., 6.0846e-03,
          1.6371e-03, 2.1631e-03],
         [2.1176e-03, 5.7876e-03, 2.7526e-03,  ..., 4.2660e-03,
          1.6371e-03, 2.1631e-03],
         [9.9365e-01, 1.0062e-02, 2.7526e-03,  ..., 4.2660e-03,
          9.9509e-01, 9.9351e-01],
         [2.1176e-03, 9.7836e-01, 9.9174e-01,  ..., 9.8538e-01,
          1.6371e-03, 2.1631e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:22,684 [Process: 0] Synchronize training processes
2024-08-18 15:06:22,684 [Process: 0] Evaluating...
2024-08-18 15:06:22,688 [Process: 0] EPOCH 222:
2024-08-18 15:06:22,690 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:23,838 [Process: 0] Synchronize training processes
2024-08-18 15:06:23,839 [Process: 0] Evaluating...
2024-08-18 15:06:23,840 [Process: 0] EPOCH 223:
2024-08-18 15:06:23,842 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1714e-02, 3.5834e-05, 9.7046e-01,  ..., 5.0255e-03,
          1.1424e-03, 7.6048e-03],
         [1.1714e-02, 3.5834e-05, 3.4654e-03,  ..., 5.0255e-03,
          1.1424e-03, 7.6048e-03],
         [9.5887e-01, 3.5834e-05, 3.4654e-03,  ..., 9.8492e-01,
          1.2578e-03, 9.7719e-01],
         [1.7699e-02, 9.9989e-01, 2.2612e-02,  ..., 5.0255e-03,
          9.9646e-01, 7.6048e-03]],
        [[4.4832e-03, 1.2631e-02, 7.4245e-05,  ..., 1.0704e-02,
          7.8480e-03, 9.9002e-01],
         [1.2906e-03, 3.3743e-03, 7.4245e-05,  ..., 1.0704e-02,
          7.8480e-03, 3.3267e-03],
         [1.2906e-03, 3.3743e-03, 7.4245e-05,  ..., 9.6668e-01,
          9.7646e-01, 3.3267e-03],
         [9.9294e-01, 9.8062e-01, 9.9978e-01,  ..., 1.1912e-02,
          7.8480e-03, 3.3267e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 223:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9655e-01, 1.8506e-02, 9.4251e-03,  ..., 9.9000e-01,
          2.8587e-01, 3.5360e-03],
         [1.1486e-03, 8.1209e-03, 6.8415e-03,  ..., 2.3794e-03,
          1.5210e-02, 3.5360e-03],
         [1.1486e-03, 9.8314e-03, 6.8415e-03,  ..., 5.2434e-03,
          1.5210e-02, 3.5360e-03],
         [1.1486e-03, 9.6354e-01, 9.7689e-01,  ..., 2.3794e-03,
          6.8371e-01, 9.8939e-01]],
        [[7.0847e-03, 1.9005e-03, 9.3276e-04,  ..., 9.1610e-02,
          2.7266e-03, 1.4914e-03],
         [4.5610e-03, 1.9005e-03, 9.3276e-04,  ..., 1.3407e-02,
          2.6823e-03, 1.4914e-03],
         [9.8379e-01, 1.9005e-03, 9.3276e-04,  ..., 2.1885e-02,
          9.9191e-01, 9.9553e-01],
         [4.5610e-03, 9.9430e-01, 9.9720e-01,  ..., 8.7310e-01,
          2.6823e-03, 1.4914e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3898e-03, 1.1052e-04, 9.8166e-01,  ..., 6.1874e-03,
          5.7061e-03, 1.1788e-02],
         [7.3898e-03, 1.1052e-04, 5.1519e-03,  ..., 6.1874e-03,
          3.6273e-03, 9.8099e-03],
         [9.7783e-01, 1.1052e-04, 7.3020e-03,  ..., 9.8144e-01,
          3.6273e-03, 9.6859e-01],
         [7.3898e-03, 9.9967e-01, 5.8883e-03,  ..., 6.1874e-03,
          9.8704e-01, 9.8099e-03]],
        [[1.4824e-02, 5.7136e-05, 9.3150e-05,  ..., 7.3932e-03,
          2.0277e-02, 9.9169e-01],
         [4.4624e-03, 5.7136e-05, 9.3150e-05,  ..., 7.3932e-03,
          1.2274e-02, 2.2346e-03],
         [5.1600e-03, 5.7136e-05, 9.3150e-05,  ..., 9.7782e-01,
          9.5518e-01, 2.2346e-03],
         [9.7555e-01, 9.9983e-01, 9.9972e-01,  ..., 7.3932e-03,
          1.2274e-02, 3.8368e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 224:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:24,993 [Process: 0] Synchronize training processes
2024-08-18 15:06:24,993 [Process: 0] Evaluating...
2024-08-18 15:06:24,995 [Process: 0] EPOCH 224:
2024-08-18 15:06:24,996 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:26,140 [Process: 0] Synchronize training processes
2024-08-18 15:06:26,140 [Process: 0] Evaluating...
2024-08-18 15:06:26,142 [Process: 0] EPOCH 225:
2024-08-18 15:06:26,143 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9754e-01, 1.3411e-02, 3.3151e-03,  ..., 9.9452e-01,
          9.6737e-01, 3.8623e-03],
         [8.1933e-04, 1.0584e-02, 3.3151e-03,  ..., 1.5010e-03,
          6.7181e-03, 3.8623e-03],
         [8.1933e-04, 1.8602e-02, 3.3151e-03,  ..., 2.4800e-03,
          8.3488e-03, 3.8623e-03],
         [8.1933e-04, 9.5740e-01, 9.9005e-01,  ..., 1.5010e-03,
          1.7563e-02, 9.8841e-01]],
        [[1.4508e-02, 1.1128e-02, 8.1105e-04,  ..., 2.9735e-03,
          1.2053e-03, 3.0648e-03],
         [5.6227e-03, 7.8990e-03, 8.2873e-04,  ..., 2.9735e-03,
          1.2053e-03, 3.0648e-03],
         [9.7425e-01, 7.8990e-03, 8.1105e-04,  ..., 2.9735e-03,
          9.9638e-01, 9.9081e-01],
         [5.6227e-03, 9.7307e-01, 9.9755e-01,  ..., 9.9108e-01,
          1.2053e-03, 3.0648e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.3369e-03, 2.4587e-05, 9.8887e-01,  ..., 6.9742e-03,
          6.9915e-03, 5.7342e-03],
         [6.3369e-03, 2.5014e-05, 3.9004e-03,  ..., 6.9742e-03,
          4.2855e-03, 5.7342e-03],
         [9.8099e-01, 2.4587e-05, 3.5961e-03,  ..., 9.7908e-01,
          4.2855e-03, 9.8280e-01],
         [6.3369e-03, 9.9993e-01, 3.6343e-03,  ..., 6.9742e-03,
          9.8444e-01, 5.7342e-03]],
        [[3.9526e-04, 1.8224e-04, 1.3098e-03,  ..., 5.0602e-03,
          9.3726e-03, 9.9408e-01],
         [4.0917e-04, 1.9146e-04, 1.3098e-03,  ..., 5.0602e-03,
          9.3726e-03, 1.9396e-03],
         [3.9526e-04, 1.8224e-04, 1.3098e-03,  ..., 9.8482e-01,
          9.7188e-01, 2.0433e-03],
         [9.9880e-01, 9.9944e-01, 9.9607e-01,  ..., 5.0602e-03,
          9.3726e-03, 1.9396e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 225:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9982e-01, 3.2698e-03, 3.6692e-03,  ..., 9.8683e-01,
          9.9671e-01, 4.5674e-03],
         [5.9283e-05, 3.3331e-03, 3.6692e-03,  ..., 3.0772e-03,
          1.0953e-03, 4.5674e-03],
         [5.9283e-05, 3.2698e-03, 3.6692e-03,  ..., 7.0186e-03,
          1.0953e-03, 4.5674e-03],
         [5.9283e-05, 9.9013e-01, 9.8899e-01,  ..., 3.0772e-03,
          1.0953e-03, 9.8630e-01]],
        [[9.9733e-01, 5.7984e-03, 2.0103e-02,  ..., 1.1833e-01,
          3.8841e-03, 7.1802e-03],
         [8.8963e-04, 4.4534e-03, 1.1674e-02,  ..., 2.4525e-02,
          3.0363e-03, 4.5022e-03],
         [8.8963e-04, 4.4534e-03, 1.1674e-02,  ..., 6.3278e-02,
          9.9004e-01, 9.8382e-01],
         [8.8963e-04, 9.8529e-01, 9.5655e-01,  ..., 7.9386e-01,
          3.0363e-03, 4.5022e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1856e-02, 8.3541e-06, 9.9813e-01,  ..., 1.5652e-02,
          3.2187e-02, 1.0304e-02],
         [1.1856e-02, 9.0208e-06, 6.2402e-04,  ..., 1.0924e-02,
          1.3392e-02, 1.0304e-02],
         [9.6039e-01, 8.3541e-06, 6.2402e-04,  ..., 9.6206e-01,
          1.3392e-02, 9.6685e-01],
         [1.5895e-02, 9.9997e-01, 6.2402e-04,  ..., 1.1361e-02,
          9.4103e-01, 1.2542e-02]],
        [[3.8590e-04, 1.6460e-04, 3.2752e-04,  ..., 8.8234e-03,
          9.9006e-03, 9.9275e-01],
         [3.8590e-04, 1.6460e-04, 3.2681e-04,  ..., 8.8234e-03,
          9.9006e-03, 1.5668e-03],
         [3.8590e-04, 1.6460e-04, 3.2681e-04,  ..., 9.7353e-01,
          9.7030e-01, 1.5668e-03],
         [9.9884e-01, 9.9951e-01, 9.9902e-01,  ..., 8.8234e-03,
          9.9006e-03, 4.1119e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:27,288 [Process: 0] Synchronize training processes
2024-08-18 15:06:27,289 [Process: 0] Evaluating...
2024-08-18 15:06:27,291 [Process: 0] EPOCH 226:
2024-08-18 15:06:27,292 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:28,444 [Process: 0] Synchronize training processes
2024-08-18 15:06:28,444 [Process: 0] Evaluating...
2024-08-18 15:06:28,446 [Process: 0] EPOCH 227:
2024-08-18 15:06:28,447 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 226:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9560e-01, 3.0419e-03, 5.8497e-03,  ..., 9.9665e-01,
          9.9788e-01, 2.3651e-03],
         [1.3782e-03, 3.0419e-03, 4.3005e-03,  ..., 1.1165e-03,
          7.0673e-04, 2.3651e-03],
         [1.6464e-03, 3.0419e-03, 4.3005e-03,  ..., 1.1165e-03,
          7.0673e-04, 2.3651e-03],
         [1.3782e-03, 9.9087e-01, 9.8555e-01,  ..., 1.1165e-03,
          7.0673e-04, 9.9290e-01]],
        [[9.9944e-01, 3.6422e-03, 3.9790e-03,  ..., 2.3463e-03,
          1.9733e-03, 2.8648e-03],
         [1.8615e-04, 3.6422e-03, 3.9790e-03,  ..., 2.3463e-03,
          1.9733e-03, 2.8648e-03],
         [1.8615e-04, 3.6422e-03, 3.9790e-03,  ..., 2.3463e-03,
          9.9408e-01, 9.9141e-01],
         [1.8615e-04, 9.8907e-01, 9.8806e-01,  ..., 9.9296e-01,
          1.9733e-03, 2.8648e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0890e-03, 7.8956e-06, 9.9047e-01,  ..., 6.6865e-03,
          1.4621e-02, 9.1176e-03],
         [9.0890e-03, 7.8956e-06, 1.7213e-03,  ..., 6.6865e-03,
          1.1920e-02, 9.1176e-03],
         [9.7273e-01, 7.8956e-06, 1.7213e-03,  ..., 9.7994e-01,
          1.9349e-02, 9.7265e-01],
         [9.0890e-03, 9.9998e-01, 6.0868e-03,  ..., 6.6865e-03,
          9.5411e-01, 9.1176e-03]],
        [[1.1622e-02, 2.8510e-05, 1.2485e-04,  ..., 7.4141e-03,
          1.3283e-02, 9.8775e-01],
         [1.1622e-02, 2.9011e-05, 1.2485e-04,  ..., 7.4141e-03,
          1.3283e-02, 3.0509e-03],
         [5.6494e-02, 2.8510e-05, 1.2485e-04,  ..., 9.7776e-01,
          9.6015e-01, 3.0509e-03],
         [9.2026e-01, 9.9991e-01, 9.9963e-01,  ..., 7.4141e-03,
          1.3283e-02, 6.1436e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 227:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9910e-01, 3.8893e-02, 3.7057e-03,  ..., 9.7638e-01,
          9.9119e-01, 7.5686e-03],
         [2.9870e-04, 2.6425e-02, 3.7057e-03,  ..., 4.4833e-03,
          2.5796e-03, 7.5686e-03],
         [2.9870e-04, 1.2944e-01, 3.7057e-03,  ..., 1.4658e-02,
          3.6465e-03, 1.3670e-02],
         [2.9870e-04, 8.0524e-01, 9.8888e-01,  ..., 4.4833e-03,
          2.5796e-03, 9.7119e-01]],
        [[9.9564e-01, 4.2951e-03, 2.1782e-03,  ..., 7.3606e-04,
          3.2583e-03, 3.4124e-03],
         [1.4522e-03, 4.2951e-03, 2.1782e-03,  ..., 7.3606e-04,
          2.7019e-03, 3.4124e-03],
         [1.4522e-03, 4.2951e-03, 2.1782e-03,  ..., 7.3606e-04,
          9.9134e-01, 9.8976e-01],
         [1.4522e-03, 9.8711e-01, 9.9347e-01,  ..., 9.9779e-01,
          2.7019e-03, 3.4124e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:29,598 [Process: 0] Synchronize training processes
2024-08-18 15:06:29,598 [Process: 0] Evaluating...
2024-08-18 15:06:29,600 [Process: 0] EPOCH 228:
2024-08-18 15:06:29,602 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9878e-02, 1.5061e-05, 9.7705e-01,  ..., 9.5562e-03,
          1.0060e-03, 8.1244e-03],
         [1.5876e-02, 1.5781e-05, 2.2533e-03,  ..., 9.5562e-03,
          1.0060e-03, 8.1244e-03],
         [9.3136e-01, 1.5061e-05, 2.2533e-03,  ..., 9.7057e-01,
          1.0060e-03, 9.7563e-01],
         [2.2883e-02, 9.9995e-01, 1.8442e-02,  ..., 1.0317e-02,
          9.9698e-01, 8.1244e-03]],
        [[1.7126e-02, 1.1141e-05, 8.7929e-04,  ..., 8.4789e-03,
          8.0594e-03, 9.9615e-01],
         [1.7126e-02, 1.1141e-05, 8.7929e-04,  ..., 8.4789e-03,
          8.0594e-03, 1.2838e-03],
         [9.2877e-01, 1.1141e-05, 8.7929e-04,  ..., 9.7456e-01,
          9.7582e-01, 1.2838e-03],
         [3.6975e-02, 9.9997e-01, 9.9736e-01,  ..., 8.4789e-03,
          8.0594e-03, 1.2838e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 228:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8213e-01, 2.0639e-03, 2.6523e-02,  ..., 9.9816e-01,
          9.9559e-01, 4.0489e-03],
         [4.4947e-03, 2.0639e-03, 1.3431e-02,  ..., 6.1302e-04,
          1.4695e-03, 4.0489e-03],
         [8.8769e-03, 2.0639e-03, 3.4851e-02,  ..., 6.1302e-04,
          1.4695e-03, 4.0489e-03],
         [4.4947e-03, 9.9381e-01, 9.2520e-01,  ..., 6.1302e-04,
          1.4695e-03, 9.8785e-01]],
        [[9.9364e-01, 1.6548e-02, 2.3314e-02,  ..., 3.2704e-03,
          2.0040e-03, 2.4329e-03],
         [1.8827e-03, 7.4138e-03, 7.5211e-03,  ..., 3.2704e-03,
          2.0040e-03, 2.4329e-03],
         [2.5923e-03, 7.5213e-03, 7.5211e-03,  ..., 3.2704e-03,
          9.9399e-01, 9.9270e-01],
         [1.8827e-03, 9.6852e-01, 9.6164e-01,  ..., 9.9019e-01,
          2.0040e-03, 2.4329e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1068e-02, 3.2144e-05, 9.9826e-01,  ..., 1.1492e-02,
          1.1603e-02, 1.0789e-02],
         [1.1068e-02, 3.2198e-05, 5.7834e-04,  ..., 1.1492e-02,
          1.0054e-02, 1.0789e-02],
         [9.6477e-01, 3.2144e-05, 5.7834e-04,  ..., 9.6213e-01,
          1.5934e-02, 9.6763e-01],
         [1.3097e-02, 9.9990e-01, 5.7834e-04,  ..., 1.4887e-02,
          9.6241e-01, 1.0789e-02]],
        [[1.2908e-02, 7.0196e-05, 6.1077e-04,  ..., 1.0479e-02,
          1.1448e-02, 9.9803e-01],
         [1.1415e-02, 8.0141e-05, 3.6430e-04,  ..., 9.6892e-03,
          1.1448e-02, 6.5755e-04],
         [9.6426e-01, 7.0196e-05, 3.2970e-04,  ..., 9.7014e-01,
          9.6436e-01, 6.5755e-04],
         [1.1415e-02, 9.9978e-01, 9.9870e-01,  ..., 9.6892e-03,
          1.2744e-02, 6.5755e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 229:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9586e-01, 1.6146e-03, 3.5301e-03,  ..., 9.9659e-01,
          9.9527e-01, 1.6959e-03],
         [1.3815e-03, 1.6146e-03, 3.5301e-03,  ..., 1.1248e-03,
          1.5704e-03, 1.6959e-03],
         [1.3815e-03, 1.6146e-03, 4.2012e-03,  ..., 1.1585e-03,
          1.5704e-03, 1.6959e-03],
         [1.3815e-03, 9.9516e-01, 9.8874e-01,  ..., 1.1248e-03,
          1.5888e-03, 9.9491e-01]],
        [[9.9235e-01, 5.1078e-03, 9.0136e-04,  ..., 1.0403e-03,
          1.5912e-03, 7.1028e-03],
         [2.3221e-03, 5.1078e-03, 9.0136e-04,  ..., 1.0403e-03,
          1.5912e-03, 4.3840e-03],
         [3.0040e-03, 5.1078e-03, 9.0136e-04,  ..., 1.0403e-03,
          9.9523e-01, 9.8413e-01],
         [2.3221e-03, 9.8468e-01, 9.9730e-01,  ..., 9.9688e-01,
          1.5912e-03, 4.3840e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:30,749 [Process: 0] Synchronize training processes
2024-08-18 15:06:30,750 [Process: 0] Evaluating...
2024-08-18 15:06:30,751 [Process: 0] EPOCH 229:
2024-08-18 15:06:30,753 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:31,900 [Process: 0] Synchronize training processes
2024-08-18 15:06:31,900 [Process: 0] Evaluating...
2024-08-18 15:06:31,902 [Process: 0] EPOCH 230:
2024-08-18 15:06:31,904 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.4008e-03, 2.9708e-06, 9.2693e-01,  ..., 8.1211e-03,
          2.4994e-04, 1.7402e-02],
         [8.4008e-03, 2.9708e-06, 6.2894e-03,  ..., 8.1211e-03,
          2.4994e-04, 1.6958e-02],
         [9.7411e-01, 2.9708e-06, 6.2894e-03,  ..., 9.7512e-01,
          2.4994e-04, 9.3112e-01],
         [9.0911e-03, 9.9999e-01, 6.0488e-02,  ..., 8.6345e-03,
          9.9925e-01, 3.4523e-02]],
        [[7.8654e-03, 5.3913e-05, 7.2082e-05,  ..., 6.0723e-03,
          4.4998e-03, 9.9971e-01],
         [7.8654e-03, 5.3913e-05, 7.2082e-05,  ..., 6.0723e-03,
          4.4998e-03, 9.8372e-05],
         [9.7640e-01, 5.3913e-05, 7.2082e-05,  ..., 9.8178e-01,
          9.8650e-01, 9.8372e-05],
         [7.8654e-03, 9.9984e-01, 9.9978e-01,  ..., 6.0723e-03,
          4.4998e-03, 9.8372e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 230:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9091e-01, 2.6568e-03, 1.6696e-03,  ..., 9.9614e-01,
          9.8542e-01, 6.2849e-03],
         [2.5657e-03, 2.6568e-03, 1.6696e-03,  ..., 1.2811e-03,
          3.9878e-03, 6.2136e-03],
         [3.9591e-03, 2.6568e-03, 1.6696e-03,  ..., 1.2946e-03,
          3.9878e-03, 6.2136e-03],
         [2.5657e-03, 9.9203e-01, 9.9499e-01,  ..., 1.2811e-03,
          6.6003e-03, 9.8129e-01]],
        [[9.9724e-01, 3.5430e-03, 3.6113e-03,  ..., 9.2893e-04,
          1.2943e-03, 1.2017e-03],
         [9.1949e-04, 3.5430e-03, 3.5151e-03,  ..., 9.3313e-04,
          1.2943e-03, 1.2017e-03],
         [9.1949e-04, 3.5430e-03, 3.5151e-03,  ..., 9.2893e-04,
          9.9612e-01, 9.9639e-01],
         [9.1949e-04, 9.8937e-01, 9.8936e-01,  ..., 9.9721e-01,
          1.2943e-03, 1.2017e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4302e-02, 1.4727e-05, 9.8625e-01,  ..., 1.5363e-02,
          1.7971e-04, 1.0742e-02],
         [1.4302e-02, 1.4727e-05, 4.0193e-03,  ..., 1.5363e-02,
          1.8487e-04, 1.0603e-02],
         [9.4693e-01, 1.4727e-05, 5.7130e-03,  ..., 9.3717e-01,
          1.7971e-04, 9.6805e-01],
         [2.4467e-02, 9.9996e-01, 4.0193e-03,  ..., 3.2102e-02,
          9.9946e-01, 1.0603e-02]],
        [[1.0027e-02, 9.6763e-05, 1.3734e-04,  ..., 5.6926e-03,
          9.1250e-03, 9.9787e-01],
         [1.0027e-02, 9.6763e-05, 8.4003e-05,  ..., 5.6926e-03,
          9.1250e-03, 6.1182e-04],
         [9.6990e-01, 9.6763e-05, 8.4003e-05,  ..., 9.8292e-01,
          9.7263e-01, 6.1182e-04],
         [1.0050e-02, 9.9971e-01, 9.9969e-01,  ..., 5.6926e-03,
          9.1250e-03, 9.0697e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 231:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:33,052 [Process: 0] Synchronize training processes
2024-08-18 15:06:33,052 [Process: 0] Evaluating...
2024-08-18 15:06:33,054 [Process: 0] EPOCH 231:
2024-08-18 15:06:33,056 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:34,203 [Process: 0] Synchronize training processes
2024-08-18 15:06:34,203 [Process: 0] Evaluating...
2024-08-18 15:06:34,207 [Process: 0] EPOCH 232:
2024-08-18 15:06:34,209 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7816e-01, 4.1856e-03, 3.3312e-03,  ..., 9.9628e-01,
          7.9401e-01, 4.1795e-03],
         [4.6107e-03, 4.1856e-03, 3.3312e-03,  ..., 1.2395e-03,
          1.7772e-02, 4.1795e-03],
         [1.2618e-02, 4.1856e-03, 3.3312e-03,  ..., 1.2395e-03,
          1.7772e-02, 4.1795e-03],
         [4.6107e-03, 9.8744e-01, 9.9001e-01,  ..., 1.2395e-03,
          1.7045e-01, 9.8746e-01]],
        [[9.9729e-01, 1.0781e-02, 2.4706e-03,  ..., 2.2065e-03,
          1.0115e-03, 2.3862e-03],
         [9.0363e-04, 8.1934e-03, 1.9978e-03,  ..., 2.2065e-03,
          1.0115e-03, 2.3862e-03],
         [9.0363e-04, 1.4133e-02, 1.9978e-03,  ..., 2.2065e-03,
          9.9697e-01, 9.9284e-01],
         [9.0363e-04, 9.6689e-01, 9.9353e-01,  ..., 9.9338e-01,
          1.0115e-03, 2.3862e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.9307e-03, 4.6751e-06, 9.9158e-01,  ..., 6.6641e-03,
          1.1454e-04, 7.9489e-03],
         [7.9307e-03, 4.9361e-06, 2.4125e-03,  ..., 6.6641e-03,
          1.1454e-04, 7.9489e-03],
         [9.7621e-01, 4.6751e-06, 2.4125e-03,  ..., 9.8001e-01,
          1.1454e-04, 9.7615e-01],
         [7.9307e-03, 9.9999e-01, 3.5936e-03,  ..., 6.6641e-03,
          9.9966e-01, 7.9489e-03]],
        [[8.9439e-03, 6.1146e-04, 1.2161e-03,  ..., 7.0052e-03,
          9.0088e-03, 9.9681e-01],
         [8.9439e-03, 6.1146e-04, 2.7827e-04,  ..., 7.0052e-03,
          9.0088e-03, 8.7112e-04],
         [9.7317e-01, 6.1146e-04, 2.7827e-04,  ..., 9.7898e-01,
          9.7297e-01, 8.7112e-04],
         [8.9439e-03, 9.9817e-01, 9.9823e-01,  ..., 7.0052e-03,
          9.0088e-03, 1.4457e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 232:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9985e-01, 3.8492e-03, 8.5335e-04,  ..., 9.9091e-01,
          9.3571e-01, 2.2873e-03],
         [1.2553e-02, 3.8492e-03, 8.5335e-04,  ..., 2.2421e-03,
          9.7610e-03, 2.2873e-03],
         [7.5048e-02, 3.8492e-03, 8.5335e-04,  ..., 4.6011e-03,
          2.7537e-02, 2.2873e-03],
         [1.2553e-02, 9.8845e-01, 9.9744e-01,  ..., 2.2421e-03,
          2.6989e-02, 9.9314e-01]],
        [[9.9722e-01, 4.9514e-03, 7.6852e-03,  ..., 5.2604e-03,
          1.2260e-03, 1.5789e-03],
         [9.2754e-04, 4.9514e-03, 2.9712e-03,  ..., 5.2604e-03,
          1.2260e-03, 1.5789e-03],
         [9.2754e-04, 8.1294e-03, 2.8776e-03,  ..., 8.1188e-03,
          9.9632e-01, 9.9526e-01],
         [9.2754e-04, 9.8197e-01, 9.8647e-01,  ..., 9.8136e-01,
          1.2260e-03, 1.5789e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8893e-03, 1.7002e-05, 9.9168e-01,  ..., 9.6753e-03,
          4.7402e-05, 9.5261e-03],
         [9.8893e-03, 1.7002e-05, 9.6616e-04,  ..., 9.6753e-03,
          4.7402e-05, 9.5261e-03],
         [9.6962e-01, 1.7002e-05, 9.6616e-04,  ..., 9.7094e-01,
          4.7402e-05, 9.7142e-01],
         [1.0599e-02, 9.9995e-01, 6.3861e-03,  ..., 9.7089e-03,
          9.9986e-01, 9.5261e-03]],
        [[2.4688e-02, 1.6327e-04, 1.6551e-04,  ..., 1.1200e-02,
          8.7995e-03, 9.9803e-01],
         [1.9223e-02, 1.6327e-04, 1.1314e-04,  ..., 1.1200e-02,
          8.7995e-03, 3.9992e-04],
         [9.2856e-01, 1.6327e-04, 1.1314e-04,  ..., 9.6623e-01,
          9.7360e-01, 3.9992e-04],
         [2.7529e-02, 9.9951e-01, 9.9961e-01,  ..., 1.1373e-02,
          8.7995e-03, 1.1685e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:35,358 [Process: 0] Synchronize training processes
2024-08-18 15:06:35,358 [Process: 0] Evaluating...
2024-08-18 15:06:35,360 [Process: 0] EPOCH 233:
2024-08-18 15:06:35,361 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:36,511 [Process: 0] Synchronize training processes
2024-08-18 15:06:36,511 [Process: 0] Evaluating...
2024-08-18 15:06:36,513 [Process: 0] EPOCH 234:
2024-08-18 15:06:36,515 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 233:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8158, 0.0028, 0.0012,  ..., 0.9952, 0.9935, 0.0341],
         [0.0182, 0.0028, 0.0012,  ..., 0.0016, 0.0020, 0.0065],
         [0.1477, 0.0028, 0.0012,  ..., 0.0016, 0.0020, 0.0065],
         [0.0182, 0.9917, 0.9963,  ..., 0.0016, 0.0025, 0.9528]],
        [[0.9925, 0.0183, 0.0034,  ..., 0.0027, 0.0028, 0.0025],
         [0.0020, 0.0074, 0.0034,  ..., 0.0027, 0.0028, 0.0025],
         [0.0034, 0.0128, 0.0034,  ..., 0.0027, 0.9917, 0.9926],
         [0.0020, 0.9615, 0.9897,  ..., 0.9918, 0.0028, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.4192e-03, 1.3249e-06, 9.9680e-01,  ..., 9.6427e-03,
          1.0325e-04, 8.3895e-03],
         [8.4192e-03, 1.3878e-06, 8.2687e-04,  ..., 9.6427e-03,
          6.4086e-05, 8.3895e-03],
         [9.7474e-01, 1.3249e-06, 8.2687e-04,  ..., 9.7107e-01,
          6.4086e-05, 9.7483e-01],
         [8.4192e-03, 1.0000e+00, 1.5499e-03,  ..., 9.6427e-03,
          9.9977e-01, 8.3895e-03]],
        [[1.5651e-02, 1.2129e-04, 2.3639e-05,  ..., 6.6312e-03,
          6.1631e-03, 9.9684e-01],
         [1.2864e-02, 1.2129e-04, 2.3639e-05,  ..., 6.6312e-03,
          6.1631e-03, 1.0541e-03],
         [9.5834e-01, 1.2129e-04, 2.3639e-05,  ..., 9.8011e-01,
          9.8151e-01, 1.0541e-03],
         [1.3141e-02, 9.9964e-01, 9.9993e-01,  ..., 6.6312e-03,
          6.1631e-03, 1.0541e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 234:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9761, 0.0021, 0.0019,  ..., 0.9931, 0.9949, 0.0013],
         [0.0052, 0.0021, 0.0019,  ..., 0.0018, 0.0016, 0.0013],
         [0.0135, 0.0021, 0.0019,  ..., 0.0034, 0.0016, 0.0013],
         [0.0052, 0.9938, 0.9943,  ..., 0.0018, 0.0018, 0.9960]],
        [[0.9930, 0.0352, 0.0019,  ..., 0.0023, 0.0020, 0.0018],
         [0.0022, 0.0104, 0.0019,  ..., 0.0023, 0.0020, 0.0018],
         [0.0026, 0.0108, 0.0019,  ..., 0.0023, 0.9940, 0.9946],
         [0.0022, 0.9436, 0.9942,  ..., 0.9930, 0.0020, 0.0018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:37,663 [Process: 0] Synchronize training processes
2024-08-18 15:06:37,663 [Process: 0] Evaluating...
2024-08-18 15:06:37,665 [Process: 0] EPOCH 235:
2024-08-18 15:06:37,667 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5862e-03, 6.1812e-06, 9.9414e-01,  ..., 8.2934e-03,
          3.4861e-05, 1.3796e-02],
         [9.5862e-03, 6.1812e-06, 1.9172e-03,  ..., 8.2934e-03,
          3.6015e-05, 1.3796e-02],
         [9.7124e-01, 6.1812e-06, 1.9172e-03,  ..., 9.7512e-01,
          3.4861e-05, 9.5074e-01],
         [9.5862e-03, 9.9998e-01, 2.0219e-03,  ..., 8.2934e-03,
          9.9989e-01, 2.1667e-02]],
        [[9.9044e-01, 9.9944e-05, 2.5712e-04,  ..., 8.4557e-03,
          1.0042e-02, 9.9680e-01],
         [2.8763e-03, 9.9944e-05, 2.5712e-04,  ..., 8.4557e-03,
          1.0042e-02, 1.0677e-03],
         [3.1842e-03, 9.9944e-05, 2.5712e-04,  ..., 9.7463e-01,
          9.6987e-01, 1.0677e-03],
         [3.5022e-03, 9.9970e-01, 9.9923e-01,  ..., 8.4557e-03,
          1.0042e-02, 1.0677e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 235:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7602e-01, 5.5535e-04, 8.5280e-04,  ..., 9.9583e-01,
          9.8978e-01, 9.5377e-03],
         [5.6328e-03, 5.5535e-04, 8.5280e-04,  ..., 1.3914e-03,
          2.7485e-03, 5.2095e-03],
         [1.2716e-02, 5.5535e-04, 8.5280e-04,  ..., 1.3914e-03,
          3.7480e-03, 5.4210e-03],
         [5.6328e-03, 9.9833e-01, 9.9744e-01,  ..., 1.3914e-03,
          3.7273e-03, 9.7983e-01]],
        [[9.9821e-01, 1.7738e-02, 3.6950e-03,  ..., 3.4516e-02,
          2.1482e-03, 1.2814e-03],
         [5.9811e-04, 9.1990e-03, 2.5559e-03,  ..., 1.1418e-02,
          2.1482e-03, 1.2814e-03],
         [5.9811e-04, 1.4943e-02, 2.5559e-03,  ..., 2.1699e-02,
          9.9356e-01, 9.9616e-01],
         [5.9811e-04, 9.5812e-01, 9.9119e-01,  ..., 9.3237e-01,
          2.1482e-03, 1.2814e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.0372e-03, 7.9294e-06, 9.8155e-01,  ..., 5.4680e-03,
          6.2912e-04, 1.0565e-02],
         [6.0372e-03, 7.9862e-06, 2.8069e-03,  ..., 5.4680e-03,
          6.1831e-04, 1.0565e-02],
         [9.8189e-01, 7.9294e-06, 2.8069e-03,  ..., 9.8360e-01,
          6.1831e-04, 9.6830e-01],
         [6.0372e-03, 9.9998e-01, 1.2833e-02,  ..., 5.4680e-03,
          9.9813e-01, 1.0565e-02]],
        [[1.8365e-02, 3.7429e-04, 1.2235e-02,  ..., 1.0679e-02,
          8.7171e-03, 9.9889e-01],
         [1.4566e-02, 3.7429e-04, 5.7245e-03,  ..., 1.0679e-02,
          8.7171e-03, 3.6983e-04],
         [9.4813e-01, 3.7429e-04, 5.7245e-03,  ..., 9.6796e-01,
          9.7385e-01, 3.6983e-04],
         [1.8935e-02, 9.9888e-01, 9.7632e-01,  ..., 1.0679e-02,
          8.7171e-03, 3.6983e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 236:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7746e-01, 1.6941e-03, 2.9733e-03,  ..., 9.9463e-01,
          9.8309e-01, 2.4650e-03],
         [4.1775e-03, 1.6941e-03, 2.9733e-03,  ..., 1.7010e-03,
          4.1481e-03, 2.4650e-03],
         [1.4188e-02, 1.6941e-03, 2.9733e-03,  ..., 1.9729e-03,
          8.6115e-03, 2.4650e-03],
         [4.1775e-03, 9.9492e-01, 9.9108e-01,  ..., 1.7010e-03,
          4.1481e-03, 9.9260e-01]],
        [[9.9755e-01, 4.5058e-02, 2.0168e-03,  ..., 2.2537e-03,
          1.1416e-03, 1.9105e-03],
         [8.1608e-04, 1.3871e-02, 2.0168e-03,  ..., 2.2537e-03,
          1.1416e-03, 1.9105e-03],
         [8.1608e-04, 2.3939e-02, 2.0168e-03,  ..., 2.2537e-03,
          9.9658e-01, 9.9427e-01],
         [8.1608e-04, 9.1713e-01, 9.9395e-01,  ..., 9.9324e-01,
          1.1416e-03, 1.9105e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:38,820 [Process: 0] Synchronize training processes
2024-08-18 15:06:38,820 [Process: 0] Evaluating...
2024-08-18 15:06:38,822 [Process: 0] EPOCH 236:
2024-08-18 15:06:38,824 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:39,976 [Process: 0] Synchronize training processes
2024-08-18 15:06:39,976 [Process: 0] Evaluating...
2024-08-18 15:06:39,978 [Process: 0] EPOCH 237:
2024-08-18 15:06:39,980 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0334e-03, 1.4233e-06, 9.8161e-01,  ..., 9.5786e-03,
          2.2082e-04, 1.0480e-02],
         [9.0334e-03, 1.5286e-06, 3.8590e-03,  ..., 9.5786e-03,
          2.2082e-04, 1.0480e-02],
         [9.7290e-01, 1.4233e-06, 3.8590e-03,  ..., 9.7126e-01,
          2.2082e-04, 9.6856e-01],
         [9.0334e-03, 1.0000e+00, 1.0668e-02,  ..., 9.5786e-03,
          9.9934e-01, 1.0480e-02]],
        [[6.8506e-03, 3.2176e-02, 7.1802e-04,  ..., 7.6356e-03,
          7.4630e-03, 9.9705e-01],
         [6.8506e-03, 6.0823e-03, 2.7719e-04,  ..., 7.6356e-03,
          7.4630e-03, 9.8347e-04],
         [9.7945e-01, 6.7366e-03, 2.7719e-04,  ..., 9.7709e-01,
          9.7761e-01, 9.8347e-04],
         [6.8506e-03, 9.5500e-01, 9.9873e-01,  ..., 7.6356e-03,
          7.4630e-03, 9.8347e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 237:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9432e-01, 5.8076e-03, 3.2349e-03,  ..., 9.9856e-01,
          9.9446e-01, 1.2917e-03],
         [1.7452e-03, 5.8076e-03, 3.2349e-03,  ..., 4.8147e-04,
          1.8474e-03, 1.2917e-03],
         [2.1899e-03, 7.9954e-03, 3.2349e-03,  ..., 4.8147e-04,
          1.8474e-03, 1.2917e-03],
         [1.7452e-03, 9.8039e-01, 9.9030e-01,  ..., 4.8147e-04,
          1.8474e-03, 9.9612e-01]],
        [[9.9885e-01, 1.9786e-03, 5.7548e-03,  ..., 3.9075e-03,
          1.4077e-03, 4.6583e-03],
         [3.8239e-04, 1.9886e-03, 5.7548e-03,  ..., 3.5267e-03,
          1.4077e-03, 4.6583e-03],
         [3.8239e-04, 1.9786e-03, 1.1410e-02,  ..., 3.4919e-03,
          9.9578e-01, 9.8603e-01],
         [3.8239e-04, 9.9405e-01, 9.7708e-01,  ..., 9.8907e-01,
          1.4077e-03, 4.6583e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3901e-03, 3.8863e-06, 9.9916e-01,  ..., 6.4774e-03,
          8.5849e-06, 1.1550e-02],
         [7.3901e-03, 3.9208e-06, 2.3978e-04,  ..., 6.4774e-03,
          8.5849e-06, 1.1550e-02],
         [9.7783e-01, 3.8863e-06, 2.3978e-04,  ..., 9.8057e-01,
          8.5849e-06, 9.6103e-01],
         [7.3901e-03, 9.9999e-01, 3.5936e-04,  ..., 6.4774e-03,
          9.9997e-01, 1.5871e-02]],
        [[3.7825e-03, 5.9088e-03, 2.6166e-03,  ..., 1.1745e-02,
          3.3204e-03, 9.9288e-01],
         [3.7825e-03, 6.5408e-04, 1.7393e-03,  ..., 1.0586e-02,
          3.3204e-03, 2.3737e-03],
         [9.8865e-01, 6.5408e-04, 1.7393e-03,  ..., 9.6681e-01,
          9.9004e-01, 2.3737e-03],
         [3.7825e-03, 9.9278e-01, 9.9390e-01,  ..., 1.0856e-02,
          3.3204e-03, 2.3737e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 238:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:41,128 [Process: 0] Synchronize training processes
2024-08-18 15:06:41,129 [Process: 0] Evaluating...
2024-08-18 15:06:41,131 [Process: 0] EPOCH 238:
2024-08-18 15:06:41,132 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:42,279 [Process: 0] Synchronize training processes
2024-08-18 15:06:42,280 [Process: 0] Evaluating...
2024-08-18 15:06:42,281 [Process: 0] EPOCH 239:
2024-08-18 15:06:42,283 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6808e-01, 1.6235e-02, 4.1135e-03,  ..., 9.9880e-01,
          9.9061e-01, 4.0042e-03],
         [5.3861e-03, 1.0583e-02, 4.1135e-03,  ..., 3.9999e-04,
          2.6157e-03, 3.2923e-03],
         [2.1146e-02, 1.5841e-02, 4.1135e-03,  ..., 3.9999e-04,
          2.6157e-03, 3.2923e-03],
         [5.3861e-03, 9.5734e-01, 9.8766e-01,  ..., 3.9999e-04,
          4.1597e-03, 9.8941e-01]],
        [[9.9665e-01, 3.3894e-03, 4.8715e-03,  ..., 1.9192e-03,
          1.6070e-03, 7.0378e-03],
         [1.1176e-03, 3.3894e-03, 4.8715e-03,  ..., 1.9192e-03,
          1.6070e-03, 4.7770e-03],
         [1.1176e-03, 3.7008e-03, 5.5671e-03,  ..., 1.9192e-03,
          9.9518e-01, 9.8341e-01],
         [1.1176e-03, 9.8952e-01, 9.8469e-01,  ..., 9.9424e-01,
          1.6070e-03, 4.7770e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1041e-02, 4.3070e-06, 9.7204e-01,  ..., 5.9251e-03,
          9.9734e-03, 9.1764e-03],
         [1.1041e-02, 5.0293e-06, 4.9137e-03,  ..., 5.9251e-03,
          9.9734e-03, 9.1764e-03],
         [9.6564e-01, 4.3070e-06, 4.9137e-03,  ..., 9.8222e-01,
          5.8567e-02, 9.7247e-01],
         [1.2279e-02, 9.9999e-01, 1.8130e-02,  ..., 5.9251e-03,
          9.2149e-01, 9.1764e-03]],
        [[7.4513e-03, 2.1112e-04, 4.7115e-03,  ..., 1.0759e-02,
          3.6490e-03, 9.6847e-01],
         [7.4513e-03, 1.1570e-04, 1.2799e-03,  ..., 1.0759e-02,
          3.6490e-03, 4.7426e-03],
         [9.7765e-01, 1.1508e-04, 1.2799e-03,  ..., 9.6772e-01,
          9.8905e-01, 4.7426e-03],
         [7.4513e-03, 9.9956e-01, 9.9273e-01,  ..., 1.0759e-02,
          3.6490e-03, 2.2046e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 239:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6824e-01, 8.7106e-04, 8.7832e-03,  ..., 9.9568e-01,
          9.7844e-01, 2.6416e-03],
         [5.1977e-03, 8.7106e-04, 8.7832e-03,  ..., 1.3772e-03,
          4.5655e-03, 2.6416e-03],
         [2.1365e-02, 8.7106e-04, 1.2126e-02,  ..., 1.5628e-03,
          4.5655e-03, 2.6416e-03],
         [5.1977e-03, 9.9739e-01, 9.7031e-01,  ..., 1.3772e-03,
          1.2427e-02, 9.9208e-01]],
        [[9.9976e-01, 2.3161e-03, 1.4090e-03,  ..., 5.4798e-03,
          2.1911e-03, 2.4381e-03],
         [7.9195e-05, 2.3403e-03, 1.4090e-03,  ..., 5.4798e-03,
          2.1911e-03, 2.4381e-03],
         [7.9195e-05, 2.3161e-03, 1.4090e-03,  ..., 1.0576e-02,
          9.9343e-01, 9.9269e-01],
         [7.9195e-05, 9.9303e-01, 9.9577e-01,  ..., 9.7846e-01,
          2.1911e-03, 2.4381e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6982e-03, 1.6219e-06, 9.8385e-01,  ..., 8.4161e-03,
          3.4703e-03, 2.0413e-02],
         [8.6982e-03, 1.6497e-06, 3.7050e-03,  ..., 8.4161e-03,
          3.4703e-03, 1.3783e-02],
         [9.7391e-01, 1.6219e-06, 3.7050e-03,  ..., 9.7475e-01,
          8.3310e-03, 9.4815e-01],
         [8.6982e-03, 1.0000e+00, 8.7352e-03,  ..., 8.4161e-03,
          9.8473e-01, 1.7657e-02]],
        [[1.8999e-02, 1.5541e-05, 1.0705e-04,  ..., 9.2449e-03,
          6.8123e-03, 9.9047e-01],
         [1.2476e-02, 1.5541e-05, 1.0705e-04,  ..., 9.2449e-03,
          6.8123e-03, 1.9772e-03],
         [9.5349e-01, 1.5541e-05, 1.0705e-04,  ..., 9.7227e-01,
          9.7956e-01, 1.9772e-03],
         [1.5035e-02, 9.9995e-01, 9.9968e-01,  ..., 9.2449e-03,
          6.8123e-03, 5.5729e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:43,434 [Process: 0] Synchronize training processes
2024-08-18 15:06:43,434 [Process: 0] Evaluating...
2024-08-18 15:06:43,436 [Process: 0] EPOCH 240:
2024-08-18 15:06:43,438 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 240:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2931e-01, 1.5002e-03, 2.3920e-03,  ..., 9.9571e-01,
          9.7768e-01, 4.0521e-03],
         [8.6609e-03, 1.5002e-03, 2.3920e-03,  ..., 1.4300e-03,
          5.0035e-03, 4.0521e-03],
         [5.3364e-02, 1.5002e-03, 2.3920e-03,  ..., 1.4300e-03,
          5.0035e-03, 4.0521e-03],
         [8.6609e-03, 9.9550e-01, 9.9282e-01,  ..., 1.4300e-03,
          1.2310e-02, 9.8784e-01]],
        [[9.9776e-01, 5.8835e-03, 1.5385e-03,  ..., 1.6110e-03,
          1.4978e-03, 2.2381e-03],
         [7.4635e-04, 5.8835e-03, 1.5385e-03,  ..., 1.6412e-03,
          1.4978e-03, 2.2381e-03],
         [7.4635e-04, 1.2699e-02, 1.5385e-03,  ..., 1.6110e-03,
          9.9551e-01, 9.9329e-01],
         [7.4635e-04, 9.7553e-01, 9.9538e-01,  ..., 9.9514e-01,
          1.4978e-03, 2.2381e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1928e-02, 9.2606e-06, 9.6970e-01,  ..., 6.4300e-03,
          2.3588e-03, 4.9597e-03],
         [1.4290e-02, 9.2606e-06, 3.7040e-03,  ..., 6.4300e-03,
          2.3588e-03, 4.9597e-03],
         [9.4139e-01, 9.2606e-06, 3.7040e-03,  ..., 9.8071e-01,
          5.4742e-03, 9.8512e-01],
         [2.2391e-02, 9.9997e-01, 2.2892e-02,  ..., 6.4300e-03,
          9.8981e-01, 4.9597e-03]],
        [[5.2644e-03, 1.1293e-03, 8.2899e-06,  ..., 5.7881e-03,
          1.0953e-02, 9.9536e-01],
         [5.2644e-03, 7.4031e-04, 8.2899e-06,  ..., 5.7881e-03,
          1.0953e-02, 1.5468e-03],
         [9.8421e-01, 7.4031e-04, 8.2899e-06,  ..., 9.8264e-01,
          9.6306e-01, 1.5468e-03],
         [5.2644e-03, 9.9739e-01, 9.9998e-01,  ..., 5.7881e-03,
          1.5032e-02, 1.5468e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 241:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9857e-01, 1.5172e-03, 1.4868e-02,  ..., 9.9811e-01,
          9.4423e-01, 1.0101e-03],
         [4.7565e-04, 1.5172e-03, 6.4400e-03,  ..., 6.2910e-04,
          9.7150e-03, 1.0101e-03],
         [4.7565e-04, 1.5172e-03, 6.4400e-03,  ..., 6.2910e-04,
          2.3844e-02, 1.0101e-03],
         [4.7565e-04, 9.9545e-01, 9.7225e-01,  ..., 6.2910e-04,
          2.2207e-02, 9.9697e-01]],
        [[9.9678e-01, 6.4102e-03, 4.7281e-03,  ..., 2.5810e-03,
          2.5118e-03, 2.2866e-03],
         [1.0718e-03, 6.4102e-03, 4.7281e-03,  ..., 2.5810e-03,
          1.9569e-03, 2.2866e-03],
         [1.0718e-03, 9.0751e-03, 5.4962e-03,  ..., 2.5810e-03,
          9.9357e-01, 9.9314e-01],
         [1.0718e-03, 9.7810e-01, 9.8505e-01,  ..., 9.9226e-01,
          1.9569e-03, 2.2866e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:44,587 [Process: 0] Synchronize training processes
2024-08-18 15:06:44,587 [Process: 0] Evaluating...
2024-08-18 15:06:44,589 [Process: 0] EPOCH 241:
2024-08-18 15:06:44,591 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:45,739 [Process: 0] Synchronize training processes
2024-08-18 15:06:45,739 [Process: 0] Evaluating...
2024-08-18 15:06:45,744 [Process: 0] EPOCH 242:
2024-08-18 15:06:45,746 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.6958e-03, 1.1513e-05, 9.9224e-01,  ..., 6.3025e-03,
          5.0525e-03, 7.0503e-03],
         [5.6958e-03, 1.2708e-05, 1.7995e-03,  ..., 6.3025e-03,
          5.0525e-03, 7.0503e-03],
         [9.8291e-01, 1.1513e-05, 1.7995e-03,  ..., 9.8109e-01,
          1.0861e-02, 9.7885e-01],
         [5.6958e-03, 9.9996e-01, 4.1647e-03,  ..., 6.3025e-03,
          9.7903e-01, 7.0503e-03]],
        [[6.3191e-03, 6.6529e-05, 2.5452e-05,  ..., 5.4694e-03,
          4.9481e-03, 9.9109e-01],
         [6.3191e-03, 7.1209e-05, 2.8143e-05,  ..., 5.4694e-03,
          4.9481e-03, 2.2978e-03],
         [9.8104e-01, 6.6529e-05, 2.5452e-05,  ..., 9.8359e-01,
          9.8516e-01, 2.2978e-03],
         [6.3191e-03, 9.9980e-01, 9.9992e-01,  ..., 5.4694e-03,
          4.9481e-03, 4.3152e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 242:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9625e-01, 3.1742e-03, 1.3815e-02,  ..., 9.9920e-01,
          9.8821e-01, 1.0832e-03],
         [1.2492e-03, 3.1742e-03, 6.7999e-03,  ..., 2.6541e-04,
          3.4141e-03, 1.0832e-03],
         [1.2492e-03, 3.1742e-03, 9.8759e-03,  ..., 2.6541e-04,
          3.4141e-03, 1.0832e-03],
         [1.2492e-03, 9.9048e-01, 9.6951e-01,  ..., 2.6541e-04,
          4.9614e-03, 9.9675e-01]],
        [[9.9874e-01, 1.1771e-03, 3.8619e-03,  ..., 1.7108e-03,
          1.1073e-03, 2.2046e-03],
         [4.2134e-04, 1.1771e-03, 3.8619e-03,  ..., 1.7108e-03,
          1.1073e-03, 2.2046e-03],
         [4.2134e-04, 1.1771e-03, 4.5017e-03,  ..., 1.7108e-03,
          9.9668e-01, 9.9339e-01],
         [4.2134e-04, 9.9647e-01, 9.8777e-01,  ..., 9.9487e-01,
          1.1073e-03, 2.2046e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.4557e-03, 2.0026e-05, 9.9757e-01,  ..., 7.6388e-03,
          3.1602e-04, 9.1490e-03],
         [7.4557e-03, 2.0828e-05, 6.8532e-04,  ..., 7.6388e-03,
          3.2767e-04, 9.1490e-03],
         [9.7763e-01, 2.0026e-05, 6.8532e-04,  ..., 9.7708e-01,
          3.1602e-04, 9.7198e-01],
         [7.4557e-03, 9.9994e-01, 1.0584e-03,  ..., 7.6388e-03,
          9.9904e-01, 9.7188e-03]],
        [[7.3482e-03, 1.2437e-04, 3.0114e-04,  ..., 6.6707e-03,
          7.5936e-03, 9.9670e-01],
         [7.3482e-03, 1.2472e-04, 2.9085e-04,  ..., 6.6707e-03,
          7.7307e-03, 7.1775e-04],
         [9.7796e-01, 1.2437e-04, 2.9085e-04,  ..., 9.7999e-01,
          9.7708e-01, 7.1775e-04],
         [7.3482e-03, 9.9963e-01, 9.9912e-01,  ..., 6.6707e-03,
          7.5936e-03, 1.8685e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 243:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7789e-01, 1.6254e-03, 2.3056e-03,  ..., 9.9897e-01,
          9.8416e-01, 8.0125e-03],
         [4.9790e-03, 1.6254e-03, 2.3056e-03,  ..., 3.4227e-04,
          3.4942e-03, 8.0125e-03],
         [1.2150e-02, 1.6254e-03, 2.3056e-03,  ..., 3.4227e-04,
          3.4942e-03, 1.0220e-02],
         [4.9790e-03, 9.9512e-01, 9.9308e-01,  ..., 3.4227e-04,
          8.8553e-03, 9.7376e-01]],
        [[9.9514e-01, 3.5821e-03, 6.3301e-04,  ..., 4.1921e-03,
          1.3955e-03, 3.1720e-03],
         [1.6215e-03, 3.5821e-03, 6.3301e-04,  ..., 3.3729e-03,
          1.3955e-03, 3.1720e-03],
         [1.6215e-03, 4.0214e-03, 6.3301e-04,  ..., 3.3729e-03,
          9.9581e-01, 9.9048e-01],
         [1.6215e-03, 9.8881e-01, 9.9810e-01,  ..., 9.8906e-01,
          1.3955e-03, 3.1720e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:46,890 [Process: 0] Synchronize training processes
2024-08-18 15:06:46,891 [Process: 0] Evaluating...
2024-08-18 15:06:46,893 [Process: 0] EPOCH 243:
2024-08-18 15:06:46,894 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:48,052 [Process: 0] Synchronize training processes
2024-08-18 15:06:48,052 [Process: 0] Evaluating...
2024-08-18 15:06:48,054 [Process: 0] EPOCH 244:
2024-08-18 15:06:48,056 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0276e-03, 1.6879e-04, 9.9734e-01,  ..., 8.1098e-03,
          2.5210e-04, 7.4077e-03],
         [9.0276e-03, 1.8999e-04, 7.6432e-04,  ..., 8.1098e-03,
          2.7234e-04, 7.4077e-03],
         [9.7292e-01, 1.6879e-04, 7.6432e-04,  ..., 9.7567e-01,
          2.5210e-04, 9.7778e-01],
         [9.0276e-03, 9.9947e-01, 1.1325e-03,  ..., 8.1098e-03,
          9.9922e-01, 7.4077e-03]],
        [[3.7507e-03, 3.8954e-04, 1.7930e-04,  ..., 5.4963e-03,
          7.1952e-03, 9.8117e-01],
         [3.7507e-03, 1.7223e-04, 7.7799e-05,  ..., 5.4963e-03,
          7.1952e-03, 3.8408e-03],
         [9.8875e-01, 1.7223e-04, 7.7799e-05,  ..., 9.8351e-01,
          9.7841e-01, 3.8408e-03],
         [3.7507e-03, 9.9927e-01, 9.9967e-01,  ..., 5.4963e-03,
          7.1952e-03, 1.1153e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 244:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9499e-01, 2.3069e-02, 2.3996e-03,  ..., 9.9939e-01,
          9.9799e-01, 1.0135e-03],
         [1.6700e-03, 4.9074e-03, 2.3996e-03,  ..., 2.0340e-04,
          6.7022e-04, 1.0135e-03],
         [1.6700e-03, 4.9074e-03, 2.3996e-03,  ..., 2.0340e-04,
          6.7022e-04, 1.0135e-03],
         [1.6700e-03, 9.6712e-01, 9.9280e-01,  ..., 2.0340e-04,
          6.7022e-04, 9.9696e-01]],
        [[9.9468e-01, 4.5421e-03, 9.0293e-04,  ..., 3.6028e-03,
          2.5072e-03, 6.9870e-03],
         [1.7231e-03, 4.5421e-03, 9.2538e-04,  ..., 3.6028e-03,
          2.5072e-03, 6.9870e-03],
         [1.8756e-03, 6.0767e-03, 9.0293e-04,  ..., 4.8550e-03,
          9.9248e-01, 9.7386e-01],
         [1.7231e-03, 9.8484e-01, 9.9727e-01,  ..., 9.8794e-01,
          2.5072e-03, 1.2163e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9962e-03, 4.3250e-05, 9.9771e-01,  ..., 8.4216e-03,
          1.0966e-03, 1.4406e-02],
         [9.9962e-03, 4.6559e-05, 7.2220e-04,  ..., 8.4216e-03,
          1.0966e-03, 1.4406e-02],
         [9.7001e-01, 4.3250e-05, 7.2220e-04,  ..., 9.7474e-01,
          1.0966e-03, 9.4647e-01],
         [9.9962e-03, 9.9987e-01, 8.4084e-04,  ..., 8.4216e-03,
          9.9671e-01, 2.4722e-02]],
        [[1.0050e-02, 1.0775e-04, 2.7312e-05,  ..., 8.0272e-03,
          5.7722e-03, 9.7548e-01],
         [1.0050e-02, 7.9142e-05, 2.7312e-05,  ..., 8.0272e-03,
          5.7722e-03, 4.3347e-03],
         [9.6985e-01, 7.9142e-05, 2.7312e-05,  ..., 9.7592e-01,
          9.8268e-01, 4.3347e-03],
         [1.0050e-02, 9.9973e-01, 9.9992e-01,  ..., 8.0272e-03,
          5.7722e-03, 1.5851e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 245:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:49,208 [Process: 0] Synchronize training processes
2024-08-18 15:06:49,208 [Process: 0] Evaluating...
2024-08-18 15:06:49,210 [Process: 0] EPOCH 245:
2024-08-18 15:06:49,212 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:50,359 [Process: 0] Synchronize training processes
2024-08-18 15:06:50,359 [Process: 0] Evaluating...
2024-08-18 15:06:50,361 [Process: 0] EPOCH 246:
2024-08-18 15:06:50,362 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9915e-01, 5.4406e-03, 3.6620e-03,  ..., 9.8876e-01,
          9.9597e-01, 3.1948e-03],
         [2.8231e-04, 5.4406e-03, 3.6620e-03,  ..., 2.6520e-03,
          1.3417e-03, 3.1948e-03],
         [2.8231e-04, 5.4406e-03, 4.8012e-03,  ..., 5.9401e-03,
          1.3417e-03, 3.1948e-03],
         [2.8231e-04, 9.8368e-01, 9.8787e-01,  ..., 2.6520e-03,
          1.3417e-03, 9.9042e-01]],
        [[9.9670e-01, 1.1561e-03, 1.7382e-03,  ..., 1.7905e-02,
          2.1325e-03, 2.4452e-03],
         [1.0998e-03, 1.1561e-03, 1.7382e-03,  ..., 1.1033e-02,
          2.1325e-03, 2.4627e-03],
         [1.0998e-03, 1.1561e-03, 1.7382e-03,  ..., 1.5804e-02,
          9.9360e-01, 9.9265e-01],
         [1.0998e-03, 9.9653e-01, 9.9479e-01,  ..., 9.5526e-01,
          2.1325e-03, 2.4452e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1154e-03, 1.6308e-05, 9.9069e-01,  ..., 7.0985e-03,
          3.3282e-03, 1.0160e-02],
         [8.1154e-03, 1.6308e-05, 2.4094e-03,  ..., 7.0985e-03,
          3.3282e-03, 9.6033e-03],
         [9.7565e-01, 1.6308e-05, 2.4094e-03,  ..., 9.7870e-01,
          3.3282e-03, 9.7063e-01],
         [8.1154e-03, 9.9995e-01, 4.4913e-03,  ..., 7.0985e-03,
          9.9002e-01, 9.6033e-03]],
        [[5.6812e-03, 8.6553e-05, 1.3492e-03,  ..., 7.1494e-03,
          6.6398e-03, 9.9664e-01],
         [5.6812e-03, 8.8038e-05, 1.2231e-03,  ..., 7.1494e-03,
          6.6398e-03, 1.1205e-03],
         [9.8296e-01, 8.6553e-05, 1.2231e-03,  ..., 9.7855e-01,
          9.8008e-01, 1.1205e-03],
         [5.6812e-03, 9.9974e-01, 9.9620e-01,  ..., 7.1494e-03,
          6.6398e-03, 1.1205e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 246:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9793e-01, 2.4325e-03, 1.4823e-03,  ..., 9.9889e-01,
          9.9478e-01, 2.7651e-03],
         [6.9135e-04, 2.4325e-03, 1.4823e-03,  ..., 3.6894e-04,
          1.7151e-03, 2.7651e-03],
         [6.9135e-04, 2.4325e-03, 1.4823e-03,  ..., 3.6894e-04,
          1.7151e-03, 2.9281e-03],
         [6.9135e-04, 9.9270e-01, 9.9555e-01,  ..., 3.6894e-04,
          1.7910e-03, 9.9154e-01]],
        [[9.9823e-01, 1.3760e-02, 4.4381e-03,  ..., 4.4147e-03,
          1.7400e-03, 6.5617e-03],
         [5.8894e-04, 9.7101e-03, 4.4381e-03,  ..., 4.4147e-03,
          1.7400e-03, 4.7162e-03],
         [5.8894e-04, 2.0220e-02, 5.5925e-03,  ..., 4.4147e-03,
          9.9478e-01, 9.8401e-01],
         [5.8894e-04, 9.5631e-01, 9.8553e-01,  ..., 9.8676e-01,
          1.7400e-03, 4.7162e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4823e-03, 3.1197e-04, 9.5747e-01,  ..., 9.3306e-03,
          1.8090e-02, 9.4245e-03],
         [4.4823e-03, 3.1197e-04, 5.7332e-03,  ..., 9.3306e-03,
          1.7838e-02, 9.4245e-03],
         [9.8655e-01, 3.1197e-04, 5.7332e-03,  ..., 9.7186e-01,
          9.2082e-01, 9.7057e-01],
         [4.4823e-03, 9.9906e-01, 3.1067e-02,  ..., 9.4752e-03,
          4.3256e-02, 1.0579e-02]],
        [[8.6586e-03, 4.0170e-05, 5.3300e-05,  ..., 1.1227e-02,
          1.1766e-02, 9.7837e-01],
         [8.6586e-03, 4.1474e-05, 5.5161e-05,  ..., 1.0880e-02,
          1.0878e-02, 4.2183e-03],
         [9.7402e-01, 4.0170e-05, 5.3300e-05,  ..., 9.6513e-01,
          9.6558e-01, 4.2183e-03],
         [8.6586e-03, 9.9988e-01, 9.9984e-01,  ..., 1.2765e-02,
          1.1777e-02, 1.3193e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:51,504 [Process: 0] Synchronize training processes
2024-08-18 15:06:51,504 [Process: 0] Evaluating...
2024-08-18 15:06:51,506 [Process: 0] EPOCH 247:
2024-08-18 15:06:51,507 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 247:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9885e-01, 2.1376e-03, 7.5218e-04,  ..., 9.8126e-01,
          9.9570e-01, 2.4988e-03],
         [3.8496e-04, 2.1376e-03, 7.5218e-04,  ..., 4.4224e-03,
          1.4340e-03, 2.4988e-03],
         [3.8496e-04, 2.1376e-03, 7.5218e-04,  ..., 8.4471e-03,
          1.4340e-03, 2.4988e-03],
         [3.8496e-04, 9.9359e-01, 9.9774e-01,  ..., 5.8709e-03,
          1.4340e-03, 9.9250e-01]],
        [[9.9836e-01, 4.5764e-03, 4.2759e-03,  ..., 4.4974e-03,
          1.6934e-03, 6.3905e-04],
         [5.4544e-04, 3.1963e-03, 4.2759e-03,  ..., 4.4974e-03,
          1.6934e-03, 6.3905e-04],
         [5.4544e-04, 3.1963e-03, 6.8335e-03,  ..., 5.5911e-03,
          9.9492e-01, 9.9808e-01],
         [5.4544e-04, 9.8903e-01, 9.8461e-01,  ..., 9.8541e-01,
          1.6934e-03, 6.3905e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4607e-03, 7.7742e-03, 9.9792e-01,  ..., 1.0349e-02,
          6.3007e-03, 1.1380e-02],
         [5.4607e-03, 7.7742e-03, 5.5374e-04,  ..., 1.0349e-02,
          6.3007e-03, 9.7076e-03],
         [9.8362e-01, 9.7668e-01, 5.5374e-04,  ..., 9.6819e-01,
          9.8110e-01, 9.6920e-01],
         [5.4607e-03, 7.7742e-03, 9.7185e-04,  ..., 1.1113e-02,
          6.3007e-03, 9.7076e-03]],
        [[7.6418e-03, 2.0802e-05, 8.5870e-06,  ..., 6.2151e-03,
          4.3471e-03, 9.9671e-01],
         [7.6418e-03, 2.0802e-05, 8.6045e-06,  ..., 6.2151e-03,
          4.3471e-03, 1.0437e-03],
         [9.7707e-01, 2.0802e-05, 8.5870e-06,  ..., 9.8135e-01,
          9.8696e-01, 1.0437e-03],
         [7.6418e-03, 9.9994e-01, 9.9997e-01,  ..., 6.2151e-03,
          4.3471e-03, 1.2009e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 248:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9932e-01, 8.5189e-04, 2.7184e-03,  ..., 9.9873e-01,
          9.9411e-01, 1.7911e-03],
         [2.2609e-04, 8.5189e-04, 1.8674e-03,  ..., 4.2321e-04,
          1.5914e-03, 1.7911e-03],
         [2.2609e-04, 8.5189e-04, 1.8674e-03,  ..., 4.2321e-04,
          1.5914e-03, 1.7911e-03],
         [2.2609e-04, 9.9744e-01, 9.9355e-01,  ..., 4.2321e-04,
          2.7032e-03, 9.9463e-01]],
        [[9.9777e-01, 2.2804e-03, 1.5928e-02,  ..., 3.4911e-03,
          1.2010e-03, 2.8424e-03],
         [7.4355e-04, 2.0486e-03, 1.5928e-02,  ..., 3.4911e-03,
          1.2010e-03, 2.8424e-03],
         [7.4355e-04, 2.0486e-03, 1.3605e-01,  ..., 3.9559e-03,
          9.9640e-01, 9.9147e-01],
         [7.4355e-04, 9.9362e-01, 8.3209e-01,  ..., 9.8906e-01,
          1.2010e-03, 2.8424e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:52,656 [Process: 0] Synchronize training processes
2024-08-18 15:06:52,656 [Process: 0] Evaluating...
2024-08-18 15:06:52,658 [Process: 0] EPOCH 248:
2024-08-18 15:06:52,660 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:53,808 [Process: 0] Synchronize training processes
2024-08-18 15:06:53,808 [Process: 0] Evaluating...
2024-08-18 15:06:53,810 [Process: 0] EPOCH 249:
2024-08-18 15:06:53,812 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1815e-03, 3.4532e-04, 9.9959e-01,  ..., 1.1501e-02,
          8.2951e-03, 1.3666e-02],
         [7.1815e-03, 3.7334e-04, 1.3749e-04,  ..., 1.0235e-02,
          8.2951e-03, 1.1701e-02],
         [9.7846e-01, 3.4532e-04, 1.3749e-04,  ..., 9.6828e-01,
          9.7511e-01, 9.6149e-01],
         [7.1815e-03, 9.9894e-01, 1.3749e-04,  ..., 9.9871e-03,
          8.2951e-03, 1.3139e-02]],
        [[1.1104e-02, 3.5359e-04, 4.6085e-05,  ..., 1.4093e-02,
          3.5573e-03, 9.8953e-01],
         [1.1104e-02, 3.5359e-04, 4.6085e-05,  ..., 1.3492e-02,
          3.5573e-03, 1.6908e-03],
         [9.6465e-01, 3.5359e-04, 4.6085e-05,  ..., 9.5299e-01,
          9.8933e-01, 1.6908e-03],
         [1.3138e-02, 9.9894e-01, 9.9986e-01,  ..., 1.9425e-02,
          3.5573e-03, 7.0926e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 249:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9756e-01, 4.6600e-03, 7.8286e-03,  ..., 9.9789e-01,
          9.5382e-01, 3.9365e-03],
         [8.1359e-04, 4.5926e-03, 5.3837e-03,  ..., 7.0308e-04,
          7.6534e-03, 3.9365e-03],
         [8.1359e-04, 4.5926e-03, 5.3837e-03,  ..., 7.0308e-04,
          2.2301e-02, 5.8192e-03],
         [8.1359e-04, 9.8615e-01, 9.8140e-01,  ..., 7.0308e-04,
          1.6228e-02, 9.8631e-01]],
        [[9.9718e-01, 3.1731e-03, 1.0339e-03,  ..., 5.0080e-02,
          1.9168e-03, 3.4718e-03],
         [9.3881e-04, 3.1731e-03, 1.0339e-03,  ..., 1.4711e-02,
          1.9168e-03, 3.4718e-03],
         [9.3881e-04, 3.1731e-03, 1.0339e-03,  ..., 2.9973e-02,
          9.9425e-01, 9.8958e-01],
         [9.3881e-04, 9.9048e-01, 9.9690e-01,  ..., 9.0524e-01,
          1.9168e-03, 3.4718e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0000e-03, 1.8422e-02, 9.9867e-01,  ..., 6.9513e-03,
          9.0183e-03, 1.1697e-02],
         [9.0000e-03, 1.8422e-02, 4.4368e-04,  ..., 6.9513e-03,
          9.0183e-03, 1.1697e-02],
         [9.7014e-01, 7.7517e-01, 4.4368e-04,  ..., 9.7915e-01,
          9.7249e-01, 9.6048e-01],
         [1.1862e-02, 1.8799e-01, 4.4368e-04,  ..., 6.9513e-03,
          9.4692e-03, 1.6123e-02]],
        [[3.8592e-03, 3.0733e-05, 1.7415e-05,  ..., 8.5809e-03,
          5.2863e-03, 9.9674e-01],
         [3.8592e-03, 3.0733e-05, 1.1908e-05,  ..., 8.5809e-03,
          5.2863e-03, 1.0870e-03],
         [9.8842e-01, 3.0733e-05, 1.1908e-05,  ..., 9.7426e-01,
          9.8414e-01, 1.0870e-03],
         [3.8592e-03, 9.9991e-01, 9.9996e-01,  ..., 8.5809e-03,
          5.2863e-03, 1.0870e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 250:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2722e-01, 1.1280e-03, 1.2675e-02,  ..., 9.9687e-01,
          1.1657e-03, 2.7098e-03],
         [2.5816e-02, 1.1280e-03, 9.8627e-03,  ..., 1.0444e-03,
          1.1657e-03, 2.3758e-03],
         [3.8923e-01, 1.1280e-03, 2.8113e-02,  ..., 1.0444e-03,
          9.9650e-01, 2.3758e-03],
         [5.7727e-02, 9.9662e-01, 9.4935e-01,  ..., 1.0444e-03,
          1.1657e-03, 9.9254e-01]],
        [[3.4588e-03, 6.1298e-04, 1.0803e-03,  ..., 1.0449e-03,
          2.6562e-03, 1.6085e-03],
         [3.4588e-03, 6.2523e-04, 1.0803e-03,  ..., 1.0449e-03,
          2.6562e-03, 1.6085e-03],
         [9.8962e-01, 6.1298e-04, 1.0803e-03,  ..., 1.0449e-03,
          9.9203e-01, 9.9517e-01],
         [3.4588e-03, 9.9815e-01, 9.9676e-01,  ..., 9.9687e-01,
          2.6562e-03, 1.6085e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:54,962 [Process: 0] Synchronize training processes
2024-08-18 15:06:54,963 [Process: 0] Evaluating...
2024-08-18 15:06:54,965 [Process: 0] EPOCH 250:
2024-08-18 15:06:54,966 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:56,113 [Process: 0] Synchronize training processes
2024-08-18 15:06:56,113 [Process: 0] Evaluating...
2024-08-18 15:06:56,115 [Process: 0] EPOCH 251:
2024-08-18 15:06:56,117 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.6682e-03, 1.5287e-02, 9.9595e-01,  ..., 6.2037e-03,
          1.3771e-02, 7.2342e-03],
         [5.6682e-03, 1.5287e-02, 1.2351e-03,  ..., 6.2037e-03,
          1.3771e-02, 7.2342e-03],
         [9.8300e-01, 8.8897e-01, 1.2351e-03,  ..., 9.8139e-01,
          9.2955e-01, 9.7830e-01],
         [5.6682e-03, 8.0457e-02, 1.5782e-03,  ..., 6.2037e-03,
          4.2906e-02, 7.2342e-03]],
        [[8.1126e-03, 7.2673e-06, 5.9361e-06,  ..., 1.1933e-02,
          4.8126e-03, 9.9559e-01],
         [8.1126e-03, 7.4936e-06, 6.3103e-06,  ..., 1.1933e-02,
          4.8126e-03, 1.4700e-03],
         [9.7566e-01, 7.2673e-06, 5.9361e-06,  ..., 9.5640e-01,
          9.8556e-01, 1.4700e-03],
         [8.1126e-03, 9.9998e-01, 9.9998e-01,  ..., 1.9739e-02,
          4.8126e-03, 1.4700e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 251:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0415e-03, 4.2501e-04, 2.2721e-05,  ..., 9.9866e-01,
          7.1054e-03, 3.1310e-04],
         [2.0415e-03, 4.3246e-04, 2.3997e-05,  ..., 4.4557e-04,
          7.1054e-03, 3.1310e-04],
         [9.9388e-01, 4.2501e-04, 2.2721e-05,  ..., 4.4557e-04,
          9.7868e-01, 3.1310e-04],
         [2.0415e-03, 9.9872e-01, 9.9993e-01,  ..., 4.4557e-04,
          7.1054e-03, 9.9906e-01]],
        [[4.6096e-03, 8.6967e-03, 4.8934e-03,  ..., 1.1732e-03,
          6.2633e-03, 5.8571e-03],
         [4.6096e-03, 8.6967e-03, 4.8934e-03,  ..., 1.1732e-03,
          6.2633e-03, 5.8571e-03],
         [9.8617e-01, 9.7093e-01, 9.8532e-01,  ..., 1.1732e-03,
          9.8121e-01, 9.8243e-01],
         [4.6096e-03, 1.1677e-02, 4.8934e-03,  ..., 9.9648e-01,
          6.2633e-03, 5.8571e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.9625e-03, 1.6537e-02, 9.7900e-01,  ..., 5.5256e-03,
          2.6024e-02, 9.2238e-03],
         [5.9625e-03, 1.6537e-02, 4.0881e-03,  ..., 5.5256e-03,
          2.6024e-02, 9.2238e-03],
         [9.8211e-01, 1.0675e-01, 4.0881e-03,  ..., 9.8342e-01,
          3.2965e-01, 9.7080e-01],
         [5.9625e-03, 8.6017e-01, 1.2821e-02,  ..., 5.5256e-03,
          6.1830e-01, 1.0757e-02]],
        [[7.0801e-03, 4.0700e-05, 2.4626e-05,  ..., 1.0803e-02,
          2.4329e-03, 9.9941e-01],
         [7.0801e-03, 4.0700e-05, 2.4626e-05,  ..., 8.8570e-03,
          2.4329e-03, 1.9735e-04],
         [9.7876e-01, 4.0700e-05, 2.4626e-05,  ..., 9.7124e-01,
          9.9270e-01, 1.9735e-04],
         [7.0801e-03, 9.9988e-01, 9.9993e-01,  ..., 9.0994e-03,
          2.4329e-03, 1.9735e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 252:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:57,261 [Process: 0] Synchronize training processes
2024-08-18 15:06:57,261 [Process: 0] Evaluating...
2024-08-18 15:06:57,266 [Process: 0] EPOCH 252:
2024-08-18 15:06:57,267 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:06:58,418 [Process: 0] Synchronize training processes
2024-08-18 15:06:58,418 [Process: 0] Evaluating...
2024-08-18 15:06:58,420 [Process: 0] EPOCH 253:
2024-08-18 15:06:58,421 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9326e-03, 6.2021e-04, 1.1479e-03,  ..., 9.9742e-01,
          1.4136e-02, 2.7166e-04],
         [2.9326e-03, 6.2021e-04, 1.1479e-03,  ..., 8.3135e-04,
          9.3727e-03, 2.8043e-04],
         [9.9120e-01, 6.2021e-04, 1.1479e-03,  ..., 8.3135e-04,
          9.6712e-01, 2.7166e-04],
         [2.9326e-03, 9.9814e-01, 9.9656e-01,  ..., 9.1904e-04,
          9.3727e-03, 9.9918e-01]],
        [[3.3901e-03, 1.3404e-02, 1.5505e-02,  ..., 2.6399e-03,
          4.1731e-03, 4.2384e-03],
         [3.3901e-03, 1.3404e-02, 1.5505e-02,  ..., 2.0496e-03,
          3.9316e-03, 4.0201e-03],
         [9.8983e-01, 8.6071e-02, 9.2303e-01,  ..., 2.0496e-03,
          9.8796e-01, 9.8772e-01],
         [3.3901e-03, 8.8712e-01, 4.5957e-02,  ..., 9.9326e-01,
          3.9316e-03, 4.0201e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7553e-02, 1.6108e-04, 9.8231e-01,  ..., 2.7852e-03,
          5.9790e-04, 7.3335e-03],
         [2.7553e-02, 1.7328e-04, 3.0412e-03,  ..., 2.7852e-03,
          5.9790e-04, 7.3335e-03],
         [4.0865e-01, 1.6108e-04, 3.0412e-03,  ..., 9.9164e-01,
          5.9790e-04, 9.7779e-01],
         [5.3625e-01, 9.9950e-01, 1.1606e-02,  ..., 2.7852e-03,
          9.9821e-01, 7.5404e-03]],
        [[4.0163e-03, 1.6473e-04, 4.0539e-04,  ..., 4.9536e-03,
          8.2419e-03, 9.9546e-01],
         [4.0163e-03, 1.6473e-04, 4.0539e-04,  ..., 4.9536e-03,
          7.2531e-03, 1.3836e-03],
         [9.8795e-01, 1.6473e-04, 4.0539e-04,  ..., 9.8514e-01,
          9.7725e-01, 1.3836e-03],
         [4.0163e-03, 9.9951e-01, 9.9878e-01,  ..., 4.9536e-03,
          7.2531e-03, 1.7772e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 253:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4039e-03, 3.7129e-04, 2.9174e-03,  ..., 9.9824e-01,
          1.2806e-02, 4.4068e-03],
         [1.4039e-03, 3.7129e-04, 2.9174e-03,  ..., 5.8693e-04,
          6.3529e-03, 4.4068e-03],
         [9.9579e-01, 3.7129e-04, 2.9174e-03,  ..., 5.8693e-04,
          9.7449e-01, 4.4068e-03],
         [1.4039e-03, 9.9889e-01, 9.9125e-01,  ..., 5.8693e-04,
          6.3529e-03, 9.8678e-01]],
        [[1.3919e-01, 2.3937e-03, 3.7450e-03,  ..., 3.6017e-02,
          1.9933e-02, 8.4174e-03],
         [2.6307e-02, 2.3937e-03, 3.7450e-03,  ..., 8.8673e-03,
          9.2012e-03, 6.1695e-03],
         [7.8208e-01, 2.3937e-03, 3.7450e-03,  ..., 9.6604e-03,
          9.6019e-01, 9.7924e-01],
         [5.2423e-02, 9.9282e-01, 9.8877e-01,  ..., 9.4546e-01,
          1.0681e-02, 6.1695e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7722e-02, 9.0676e-04, 9.8742e-01,  ..., 8.5578e-03,
          4.1160e-04, 7.1126e-03],
         [1.7722e-02, 9.0676e-04, 3.4780e-03,  ..., 5.8989e-03,
          4.1160e-04, 7.1126e-03],
         [6.9690e-02, 9.0676e-04, 3.9413e-03,  ..., 9.7964e-01,
          4.1160e-04, 9.7626e-01],
         [8.9487e-01, 9.9728e-01, 5.1562e-03,  ..., 5.8989e-03,
          9.9877e-01, 9.5144e-03]],
        [[2.3872e-03, 2.7109e-04, 3.7104e-04,  ..., 4.9342e-03,
          2.0957e-03, 9.9816e-01],
         [2.3872e-03, 2.7109e-04, 3.7109e-04,  ..., 4.9342e-03,
          2.0957e-03, 6.1488e-04],
         [9.9284e-01, 2.7109e-04, 3.7104e-04,  ..., 9.8520e-01,
          9.9371e-01, 6.1488e-04],
         [2.3872e-03, 9.9919e-01, 9.9889e-01,  ..., 4.9342e-03,
          2.0957e-03, 6.1488e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:06:59,568 [Process: 0] Synchronize training processes
2024-08-18 15:06:59,569 [Process: 0] Evaluating...
2024-08-18 15:06:59,571 [Process: 0] EPOCH 254:
2024-08-18 15:06:59,572 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 254:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4168e-03, 7.0738e-04, 3.8599e-03,  ..., 9.9594e-01,
          5.0994e-03, 4.0779e-03],
         [1.4168e-03, 7.0738e-04, 3.8599e-03,  ..., 1.3529e-03,
          4.6313e-03, 4.0779e-03],
         [9.9575e-01, 7.0738e-04, 3.8599e-03,  ..., 1.3529e-03,
          9.8564e-01, 5.0652e-03],
         [1.4168e-03, 9.9788e-01, 9.8842e-01,  ..., 1.3529e-03,
          4.6313e-03, 9.8678e-01]],
        [[1.3883e-01, 1.3250e-03, 4.1282e-03,  ..., 1.5955e-02,
          5.3533e-03, 4.0649e-03],
         [3.5280e-02, 1.3250e-03, 4.1282e-03,  ..., 1.2743e-02,
          3.9793e-03, 4.0315e-03],
         [6.7256e-01, 1.3250e-03, 4.6383e-03,  ..., 3.3133e-02,
          9.8669e-01, 9.8787e-01],
         [1.5333e-01, 9.9602e-01, 9.8711e-01,  ..., 9.3817e-01,
          3.9793e-03, 4.0315e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1134e-02, 1.0765e-03, 9.8571e-01,  ..., 4.3397e-03,
          8.9415e-04, 6.2379e-03],
         [2.1134e-02, 1.0765e-03, 3.8421e-03,  ..., 4.3397e-03,
          8.9415e-04, 6.2379e-03],
         [8.3073e-01, 1.0765e-03, 4.0578e-03,  ..., 9.8698e-01,
          8.9415e-04, 9.8129e-01],
         [1.2700e-01, 9.9677e-01, 6.3894e-03,  ..., 4.3397e-03,
          9.9732e-01, 6.2379e-03]],
        [[2.8079e-03, 1.2603e-04, 1.8013e-04,  ..., 7.3880e-03,
          4.0611e-03, 9.9614e-01],
         [2.8079e-03, 1.3043e-04, 1.8707e-04,  ..., 7.3880e-03,
          4.0611e-03, 1.2859e-03],
         [9.9158e-01, 1.2603e-04, 1.8013e-04,  ..., 9.7584e-01,
          9.8782e-01, 1.2859e-03],
         [2.8079e-03, 9.9962e-01, 9.9945e-01,  ..., 9.3817e-03,
          4.0611e-03, 1.2859e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 255:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3311e-03, 1.7292e-03, 2.7066e-03,  ..., 9.9792e-01,
          6.2044e-03, 6.5731e-03],
         [1.3311e-03, 1.7292e-03, 2.7066e-03,  ..., 6.9443e-04,
          6.2044e-03, 6.2686e-03],
         [9.9601e-01, 1.7292e-03, 2.7066e-03,  ..., 6.9443e-04,
          9.8137e-01, 9.9377e-03],
         [1.3311e-03, 9.9481e-01, 9.9188e-01,  ..., 6.9443e-04,
          6.2235e-03, 9.7722e-01]],
        [[7.5465e-02, 1.0130e-03, 3.1570e-03,  ..., 5.5532e-02,
          7.0063e-03, 2.9460e-03],
         [3.0588e-02, 1.0130e-03, 3.1570e-03,  ..., 3.6795e-02,
          5.1275e-03, 2.9460e-03],
         [7.6522e-01, 1.0130e-03, 3.1570e-03,  ..., 4.7325e-01,
          9.8274e-01, 9.9116e-01],
         [1.2873e-01, 9.9696e-01, 9.9053e-01,  ..., 4.3443e-01,
          5.1275e-03, 2.9460e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:00,727 [Process: 0] Synchronize training processes
2024-08-18 15:07:00,727 [Process: 0] Evaluating...
2024-08-18 15:07:00,729 [Process: 0] EPOCH 255:
2024-08-18 15:07:00,731 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:01,881 [Process: 0] Synchronize training processes
2024-08-18 15:07:01,881 [Process: 0] Evaluating...
2024-08-18 15:07:01,883 [Process: 0] EPOCH 256:
2024-08-18 15:07:01,885 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3379e-02, 8.8547e-04, 9.9825e-01,  ..., 6.5339e-03,
          4.6941e-04, 3.7014e-03],
         [2.3379e-02, 8.8547e-04, 5.8171e-04,  ..., 5.1675e-03,
          4.6941e-04, 3.7014e-03],
         [8.2440e-01, 8.8547e-04, 5.8171e-04,  ..., 9.8313e-01,
          4.6941e-04, 9.8890e-01],
         [1.2885e-01, 9.9734e-01, 5.8171e-04,  ..., 5.1675e-03,
          9.9859e-01, 3.7014e-03]],
        [[4.6947e-03, 2.9280e-05, 4.2386e-05,  ..., 6.6057e-03,
          1.4018e-02, 9.9839e-01],
         [4.6947e-03, 2.9280e-05, 4.5073e-05,  ..., 6.6057e-03,
          7.6889e-03, 5.3666e-04],
         [9.8592e-01, 2.9280e-05, 4.2386e-05,  ..., 9.7968e-01,
          9.7054e-01, 5.3666e-04],
         [4.6947e-03, 9.9991e-01, 9.9987e-01,  ..., 7.1107e-03,
          7.7550e-03, 5.3666e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 256:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8856e-03, 1.0520e-03, 8.6179e-04,  ..., 9.9689e-01,
          2.4245e-03, 2.0418e-03],
         [1.8856e-03, 1.0520e-03, 8.6179e-04,  ..., 1.0379e-03,
          2.4245e-03, 2.0418e-03],
         [9.9434e-01, 1.0520e-03, 8.6179e-04,  ..., 1.0379e-03,
          9.9273e-01, 2.0418e-03],
         [1.8856e-03, 9.9684e-01, 9.9741e-01,  ..., 1.0379e-03,
          2.4245e-03, 9.9387e-01]],
        [[2.4268e-02, 4.2406e-04, 2.7672e-03,  ..., 2.4725e-02,
          3.2294e-03, 2.6442e-03],
         [2.2104e-02, 4.2406e-04, 2.3730e-03,  ..., 2.0571e-02,
          3.2294e-03, 2.6442e-03],
         [8.6019e-01, 4.2406e-04, 2.3730e-03,  ..., 7.3734e-02,
          9.9031e-01, 9.9207e-01],
         [9.3439e-02, 9.9873e-01, 9.9249e-01,  ..., 8.8097e-01,
          3.2294e-03, 2.6442e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3153e-02, 9.0242e-04, 9.9686e-01,  ..., 2.1796e-03,
          1.5572e-04, 1.3071e-02],
         [1.3153e-02, 7.0753e-04, 1.0461e-03,  ..., 2.1796e-03,
          1.5774e-04, 1.0018e-02],
         [9.2000e-01, 7.0753e-04, 1.0461e-03,  ..., 9.9346e-01,
          1.5572e-04, 9.6107e-01],
         [5.3693e-02, 9.9768e-01, 1.0461e-03,  ..., 2.1796e-03,
          9.9953e-01, 1.5837e-02]],
        [[1.1645e-02, 2.1794e-04, 5.0893e-05,  ..., 3.0161e-03,
          3.4746e-03, 9.9551e-01],
         [8.0574e-03, 2.2601e-04, 5.0893e-05,  ..., 3.0161e-03,
          3.4746e-03, 1.4960e-03],
         [9.7107e-01, 2.1794e-04, 5.0893e-05,  ..., 9.9095e-01,
          9.8958e-01, 1.4960e-03],
         [9.2265e-03, 9.9934e-01, 9.9985e-01,  ..., 3.0161e-03,
          3.4746e-03, 1.4960e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 257:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0030, 0.0028, 0.0013,  ..., 0.9969, 0.0012, 0.0079],
         [0.0030, 0.0028, 0.0013,  ..., 0.0010, 0.0012, 0.0045],
         [0.9910, 0.0038, 0.0013,  ..., 0.0010, 0.9964, 0.0054],
         [0.0030, 0.9906, 0.9961,  ..., 0.0010, 0.0012, 0.9823]],
        [[0.0272, 0.0011, 0.0026,  ..., 0.0067, 0.0017, 0.0023],
         [0.0272, 0.0011, 0.0021,  ..., 0.0067, 0.0017, 0.0023],
         [0.7732, 0.0011, 0.0021,  ..., 0.0112, 0.9949, 0.9932],
         [0.1724, 0.9968, 0.9932,  ..., 0.9754, 0.0017, 0.0023]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:03,029 [Process: 0] Synchronize training processes
2024-08-18 15:07:03,030 [Process: 0] Evaluating...
2024-08-18 15:07:03,031 [Process: 0] EPOCH 257:
2024-08-18 15:07:03,033 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:04,166 [Process: 0] Synchronize training processes
2024-08-18 15:07:04,167 [Process: 0] Evaluating...
2024-08-18 15:07:04,169 [Process: 0] EPOCH 258:
2024-08-18 15:07:04,170 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.8550e-03, 2.2109e-04, 9.9356e-01,  ..., 3.4792e-03,
          1.0006e-04, 3.5357e-03],
         [6.8550e-03, 2.2109e-04, 2.0511e-03,  ..., 3.4792e-03,
          1.0006e-04, 3.5357e-03],
         [9.7386e-01, 2.2109e-04, 2.3339e-03,  ..., 9.8956e-01,
          1.0006e-04, 9.8939e-01],
         [1.2431e-02, 9.9934e-01, 2.0511e-03,  ..., 3.4792e-03,
          9.9970e-01, 3.5357e-03]],
        [[5.4078e-03, 5.6741e-04, 1.8475e-04,  ..., 4.2338e-03,
          3.6742e-03, 9.9850e-01],
         [5.4078e-03, 5.6741e-04, 1.8744e-04,  ..., 4.2338e-03,
          3.6742e-03, 5.0073e-04],
         [9.8378e-01, 5.6741e-04, 1.8475e-04,  ..., 9.8730e-01,
          9.8898e-01, 5.0073e-04],
         [5.4078e-03, 9.9830e-01, 9.9944e-01,  ..., 4.2338e-03,
          3.6742e-03, 5.0073e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 258:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8766e-03, 3.4325e-02, 9.6734e-04,  ..., 9.9501e-01,
          1.9380e-03, 5.9371e-03],
         [1.8766e-03, 1.3063e-02, 9.6734e-04,  ..., 1.6634e-03,
          1.9380e-03, 5.9371e-03],
         [9.9437e-01, 2.5378e-02, 9.6734e-04,  ..., 1.6634e-03,
          9.9419e-01, 1.2130e-02],
         [1.8766e-03, 9.2723e-01, 9.9710e-01,  ..., 1.6634e-03,
          1.9380e-03, 9.7600e-01]],
        [[3.3742e-03, 3.0796e-03, 1.2083e-03,  ..., 4.1096e-03,
          2.4564e-03, 2.2054e-03],
         [3.3742e-03, 3.0796e-03, 1.2083e-03,  ..., 4.1096e-03,
          2.4564e-03, 2.2054e-03],
         [9.8988e-01, 4.0316e-03, 1.2083e-03,  ..., 7.0749e-03,
          9.9263e-01, 9.9338e-01],
         [3.3742e-03, 9.8981e-01, 9.9638e-01,  ..., 9.8471e-01,
          2.4564e-03, 2.2054e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0933e-02, 4.2615e-04, 9.9834e-01,  ..., 7.0982e-03,
          1.3783e-04, 5.2529e-03],
         [1.0493e-02, 4.2703e-04, 5.5421e-04,  ..., 7.0982e-03,
          1.3783e-04, 5.2529e-03],
         [9.6151e-01, 4.2615e-04, 5.5421e-04,  ..., 9.7752e-01,
          1.3783e-04, 9.8424e-01],
         [1.7065e-02, 9.9872e-01, 5.5421e-04,  ..., 8.2832e-03,
          9.9959e-01, 5.2529e-03]],
        [[5.1567e-03, 6.0549e-05, 7.4110e-04,  ..., 5.4001e-03,
          7.7623e-03, 9.8907e-01],
         [5.1567e-03, 6.1906e-05, 7.4110e-04,  ..., 5.4001e-03,
          7.7623e-03, 3.4618e-03],
         [9.8453e-01, 6.0549e-05, 7.4110e-04,  ..., 9.8380e-01,
          9.7423e-01, 3.4618e-03],
         [5.1567e-03, 9.9982e-01, 9.9778e-01,  ..., 5.4001e-03,
          1.0249e-02, 4.0039e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 259:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:05,315 [Process: 0] Synchronize training processes
2024-08-18 15:07:05,315 [Process: 0] Evaluating...
2024-08-18 15:07:05,317 [Process: 0] EPOCH 259:
2024-08-18 15:07:05,319 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:06,462 [Process: 0] Synchronize training processes
2024-08-18 15:07:06,462 [Process: 0] Evaluating...
2024-08-18 15:07:06,464 [Process: 0] EPOCH 260:
2024-08-18 15:07:06,466 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1447e-03, 8.6248e-04, 1.5659e-02,  ..., 9.9910e-01,
          3.1506e-03, 4.3013e-03],
         [2.1447e-03, 8.6248e-04, 3.1277e-03,  ..., 3.0091e-04,
          3.1506e-03, 2.1362e-03],
         [9.9357e-01, 8.6248e-04, 3.1277e-03,  ..., 3.0091e-04,
          9.9055e-01, 2.1362e-03],
         [2.1447e-03, 9.9741e-01, 9.7809e-01,  ..., 3.0091e-04,
          3.1506e-03, 9.9143e-01]],
        [[3.9826e-03, 3.6804e-03, 1.0714e-02,  ..., 1.1702e-03,
          1.6951e-03, 2.1341e-03],
         [3.9826e-03, 3.6804e-03, 6.4541e-03,  ..., 1.1702e-03,
          1.6951e-03, 2.1341e-03],
         [9.8805e-01, 5.1090e-03, 1.1573e-02,  ..., 1.1702e-03,
          9.9491e-01, 9.9360e-01],
         [3.9826e-03, 9.8753e-01, 9.7126e-01,  ..., 9.9649e-01,
          1.6951e-03, 2.1341e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.8511e-03, 6.0955e-03, 9.9802e-01,  ..., 2.7004e-03,
          3.8982e-04, 4.9875e-03],
         [5.8511e-03, 2.1475e-03, 6.6059e-04,  ..., 2.7004e-03,
          3.3638e-04, 4.9875e-03],
         [9.8205e-01, 2.1475e-03, 6.6059e-04,  ..., 9.9190e-01,
          3.3638e-04, 9.8504e-01],
         [6.2462e-03, 9.8961e-01, 6.6059e-04,  ..., 2.7004e-03,
          9.9894e-01, 4.9875e-03]],
        [[8.0497e-03, 1.1517e-03, 3.4081e-04,  ..., 5.9674e-03,
          4.3837e-03, 9.9668e-01],
         [8.0497e-03, 7.6583e-04, 3.4906e-04,  ..., 5.9674e-03,
          4.3837e-03, 7.9517e-04],
         [9.7497e-01, 7.6583e-04, 3.4081e-04,  ..., 9.8210e-01,
          9.8685e-01, 7.9517e-04],
         [8.9323e-03, 9.9732e-01, 9.9897e-01,  ..., 5.9674e-03,
          4.3837e-03, 1.7286e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 260:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0020, 0.0022, 0.0022,  ..., 0.9872, 0.0032, 0.0036],
         [0.0020, 0.0016, 0.0020,  ..., 0.0035, 0.0032, 0.0036],
         [0.9939, 0.0016, 0.0020,  ..., 0.0039, 0.9903, 0.0054],
         [0.0020, 0.9945, 0.9938,  ..., 0.0054, 0.0032, 0.9873]],
        [[0.0014, 0.0016, 0.0113,  ..., 0.0090, 0.0016, 0.0056],
         [0.0014, 0.0016, 0.0062,  ..., 0.0042, 0.0016, 0.0056],
         [0.9959, 0.0016, 0.0088,  ..., 0.0068, 0.9952, 0.9833],
         [0.0014, 0.9953, 0.9737,  ..., 0.9799, 0.0016, 0.0056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0281e-02, 2.7251e-04, 9.9615e-01,  ..., 5.6600e-03,
          2.3183e-04, 9.2815e-03],
         [1.0281e-02, 2.2368e-04, 1.2107e-03,  ..., 5.6600e-03,
          2.3286e-04, 8.1333e-03],
         [9.6176e-01, 2.0643e-04, 1.2107e-03,  ..., 9.8302e-01,
          2.3183e-04, 9.7433e-01],
         [1.7679e-02, 9.9930e-01, 1.4313e-03,  ..., 5.6600e-03,
          9.9930e-01, 8.2592e-03]],
        [[4.2471e-03, 1.4474e-04, 1.9388e-04,  ..., 3.5740e-03,
          8.5800e-03, 9.9809e-01],
         [4.2471e-03, 1.4474e-04, 1.9388e-04,  ..., 3.5740e-03,
          8.0467e-03, 6.1941e-04],
         [9.8726e-01, 1.4474e-04, 1.9388e-04,  ..., 9.8928e-01,
          9.7533e-01, 6.1941e-04],
         [4.2471e-03, 9.9957e-01, 9.9942e-01,  ..., 3.5740e-03,
          8.0467e-03, 6.7131e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:07,608 [Process: 0] Synchronize training processes
2024-08-18 15:07:07,608 [Process: 0] Evaluating...
2024-08-18 15:07:07,610 [Process: 0] EPOCH 261:
2024-08-18 15:07:07,612 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 261:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.6640e-03, 3.9735e-03, 3.9209e-03,  ..., 9.9767e-01,
          2.4847e-03, 3.1952e-03],
         [5.9454e-03, 3.9735e-03, 3.9209e-03,  ..., 7.7812e-04,
          2.4847e-03, 1.9548e-03],
         [9.8145e-01, 7.9394e-03, 7.6123e-03,  ..., 7.7812e-04,
          9.9255e-01, 1.9415e-03],
         [5.9454e-03, 9.8411e-01, 9.8455e-01,  ..., 7.7812e-04,
          2.4847e-03, 9.9291e-01]],
        [[3.6107e-03, 8.9007e-04, 2.4292e-03,  ..., 2.3406e-02,
          2.1922e-03, 4.3855e-03],
         [3.3923e-03, 8.9007e-04, 2.4292e-03,  ..., 4.8817e-03,
          2.1922e-03, 4.3855e-03],
         [9.8960e-01, 8.9007e-04, 3.6179e-03,  ..., 4.8817e-03,
          9.9342e-01, 9.8665e-01],
         [3.3923e-03, 9.9733e-01, 9.9152e-01,  ..., 9.6683e-01,
          2.1922e-03, 4.5825e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0881e-02, 2.5316e-04, 9.9053e-01,  ..., 3.9189e-03,
          1.1082e-04, 5.1357e-03],
         [9.0004e-03, 2.5666e-04, 1.7940e-03,  ..., 3.9189e-03,
          1.1082e-04, 5.1357e-03],
         [9.7065e-01, 2.5316e-04, 1.7940e-03,  ..., 9.8824e-01,
          1.1082e-04, 9.8459e-01],
         [9.4680e-03, 9.9924e-01, 5.8845e-03,  ..., 3.9189e-03,
          9.9967e-01, 5.1357e-03]],
        [[6.5100e-03, 2.6652e-05, 4.0309e-04,  ..., 6.8793e-03,
          6.6316e-03, 9.9631e-01],
         [6.5100e-03, 2.7762e-05, 4.0309e-04,  ..., 6.8793e-03,
          6.6316e-03, 8.2253e-04],
         [9.8047e-01, 2.6652e-05, 4.0309e-04,  ..., 9.7936e-01,
          9.8011e-01, 8.2253e-04],
         [6.5100e-03, 9.9992e-01, 9.9879e-01,  ..., 6.8793e-03,
          6.6316e-03, 2.0459e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 262:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0188e-02, 2.3760e-03, 5.2936e-03,  ..., 9.9844e-01,
          1.6359e-03, 4.1651e-03],
         [5.6218e-03, 2.3760e-03, 3.9801e-03,  ..., 5.1955e-04,
          1.6359e-03, 4.1651e-03],
         [9.7857e-01, 2.5323e-03, 4.3375e-03,  ..., 5.1955e-04,
          9.9509e-01, 7.1594e-03],
         [5.6218e-03, 9.9272e-01, 9.8639e-01,  ..., 5.1955e-04,
          1.6359e-03, 9.8451e-01]],
        [[2.8248e-03, 1.5538e-03, 5.7421e-04,  ..., 1.2078e-03,
          9.9806e-04, 5.4351e-03],
         [2.8248e-03, 1.3286e-03, 5.3306e-04,  ..., 1.2078e-03,
          9.9806e-04, 5.4351e-03],
         [9.9153e-01, 1.3286e-03, 5.3306e-04,  ..., 1.2078e-03,
          9.9701e-01, 9.8312e-01],
         [2.8248e-03, 9.9579e-01, 9.9836e-01,  ..., 9.9638e-01,
          9.9806e-04, 6.0088e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:08,743 [Process: 0] Synchronize training processes
2024-08-18 15:07:08,743 [Process: 0] Evaluating...
2024-08-18 15:07:08,747 [Process: 0] EPOCH 262:
2024-08-18 15:07:08,749 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:09,909 [Process: 0] Synchronize training processes
2024-08-18 15:07:09,909 [Process: 0] Evaluating...
2024-08-18 15:07:09,911 [Process: 0] EPOCH 263:
2024-08-18 15:07:09,913 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6304e-02, 1.5087e-03, 9.8549e-01,  ..., 5.6039e-03,
          2.0991e-04, 5.3236e-03],
         [1.6304e-02, 1.3120e-03, 1.8519e-03,  ..., 5.6039e-03,
          2.1795e-04, 5.3236e-03],
         [9.1819e-01, 1.3120e-03, 1.8519e-03,  ..., 9.8319e-01,
          2.0991e-04, 9.8403e-01],
         [4.9200e-02, 9.9587e-01, 1.0804e-02,  ..., 5.6039e-03,
          9.9936e-01, 5.3236e-03]],
        [[7.6437e-03, 5.3158e-05, 8.6266e-04,  ..., 7.9575e-03,
          3.9423e-03, 9.9882e-01],
         [7.6437e-03, 5.9946e-05, 8.6266e-04,  ..., 7.9575e-03,
          3.9423e-03, 3.9201e-04],
         [9.7707e-01, 5.3158e-05, 8.6266e-04,  ..., 9.7613e-01,
          9.8817e-01, 3.9201e-04],
         [7.6437e-03, 9.9983e-01, 9.9741e-01,  ..., 7.9575e-03,
          3.9423e-03, 3.9201e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 263:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3456e-03, 5.8658e-03, 4.3473e-03,  ..., 9.9854e-01,
          4.2978e-03, 2.4975e-03],
         [4.3456e-03, 5.8658e-03, 4.3473e-03,  ..., 4.8645e-04,
          3.2621e-03, 2.5123e-03],
         [9.8696e-01, 8.0918e-03, 6.3983e-03,  ..., 4.8645e-04,
          9.8918e-01, 3.3436e-03],
         [4.3456e-03, 9.8018e-01, 9.8491e-01,  ..., 4.8645e-04,
          3.2621e-03, 9.9165e-01]],
        [[1.2126e-03, 4.6244e-03, 6.0099e-04,  ..., 5.2292e-03,
          5.4185e-04, 1.4686e-02],
         [1.2126e-03, 2.8383e-03, 6.0099e-04,  ..., 5.2292e-03,
          5.4185e-04, 1.4686e-02],
         [9.9636e-01, 3.0737e-03, 6.0099e-04,  ..., 1.2402e-02,
          9.9837e-01, 6.7845e-02],
         [1.2126e-03, 9.8946e-01, 9.9820e-01,  ..., 9.7714e-01,
          5.4185e-04, 9.0278e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.6739e-03, 2.1437e-04, 9.9670e-01,  ..., 8.3599e-03,
          2.3753e-04, 5.3404e-03],
         [6.6739e-03, 2.1437e-04, 8.4301e-04,  ..., 6.8543e-03,
          2.5283e-04, 5.3404e-03],
         [9.7791e-01, 2.1437e-04, 8.4301e-04,  ..., 9.7793e-01,
          2.3753e-04, 9.8398e-01],
         [8.7445e-03, 9.9936e-01, 1.6103e-03,  ..., 6.8543e-03,
          9.9927e-01, 5.3404e-03]],
        [[8.7468e-03, 1.0965e-04, 7.9725e-05,  ..., 9.0565e-03,
          7.4638e-03, 9.9765e-01],
         [7.0306e-03, 1.0965e-04, 7.9725e-05,  ..., 7.3900e-03,
          7.0621e-03, 7.8288e-04],
         [9.7719e-01, 1.0965e-04, 7.9725e-05,  ..., 9.7616e-01,
          9.7841e-01, 7.8288e-04],
         [7.0306e-03, 9.9967e-01, 9.9976e-01,  ..., 7.3900e-03,
          7.0621e-03, 7.8288e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 264:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4407e-02, 8.5605e-04, 1.8284e-03,  ..., 9.9506e-01,
          4.7098e-03, 1.4782e-03],
         [7.1080e-03, 8.5605e-04, 1.8155e-03,  ..., 1.6480e-03,
          3.6582e-03, 1.4782e-03],
         [9.7138e-01, 8.5605e-04, 1.8155e-03,  ..., 1.6480e-03,
          9.8797e-01, 1.4782e-03],
         [7.1080e-03, 9.9743e-01, 9.9454e-01,  ..., 1.6480e-03,
          3.6582e-03, 9.9557e-01]],
        [[2.8081e-03, 1.5937e-03, 2.7702e-03,  ..., 1.0595e-02,
          1.2081e-03, 2.2953e-02],
         [2.8081e-03, 1.5937e-03, 2.8368e-03,  ..., 6.5629e-03,
          1.2081e-03, 2.2953e-02],
         [9.9158e-01, 1.5937e-03, 2.7702e-03,  ..., 8.5854e-03,
          9.9638e-01, 7.7002e-01],
         [2.8081e-03, 9.9522e-01, 9.9162e-01,  ..., 9.7426e-01,
          1.2081e-03, 1.8407e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:11,056 [Process: 0] Synchronize training processes
2024-08-18 15:07:11,057 [Process: 0] Evaluating...
2024-08-18 15:07:11,058 [Process: 0] EPOCH 264:
2024-08-18 15:07:11,060 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:12,203 [Process: 0] Synchronize training processes
2024-08-18 15:07:12,204 [Process: 0] Evaluating...
2024-08-18 15:07:12,205 [Process: 0] EPOCH 265:
2024-08-18 15:07:12,207 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9145e-03, 2.5730e-04, 9.8122e-01,  ..., 1.4600e-02,
          1.4669e-04, 6.2942e-03],
         [6.9145e-03, 2.5905e-04, 2.7762e-03,  ..., 1.0083e-02,
          1.4669e-04, 6.2942e-03],
         [9.7926e-01, 2.5730e-04, 2.7762e-03,  ..., 9.6186e-01,
          1.4669e-04, 9.8112e-01],
         [6.9145e-03, 9.9923e-01, 1.3227e-02,  ..., 1.3460e-02,
          9.9956e-01, 6.2942e-03]],
        [[4.8901e-03, 1.1029e-04, 7.6285e-04,  ..., 6.9074e-03,
          6.3472e-03, 9.9780e-01],
         [4.8901e-03, 1.1852e-04, 4.7956e-04,  ..., 6.9074e-03,
          6.3472e-03, 7.3484e-04],
         [9.8533e-01, 1.1029e-04, 4.7956e-04,  ..., 9.7928e-01,
          9.8096e-01, 7.3484e-04],
         [4.8901e-03, 9.9966e-01, 9.9828e-01,  ..., 6.9074e-03,
          6.3472e-03, 7.3484e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 265:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.1350e-03, 1.6210e-03, 3.8423e-03,  ..., 9.9854e-01,
          9.2496e-04, 3.0964e-04],
         [3.6924e-03, 1.6210e-03, 3.8423e-03,  ..., 4.8571e-04,
          9.2496e-04, 3.0964e-04],
         [9.8748e-01, 1.6210e-03, 4.2089e-03,  ..., 4.8571e-04,
          9.9723e-01, 3.0964e-04],
         [3.6924e-03, 9.9514e-01, 9.8811e-01,  ..., 4.8571e-04,
          9.2496e-04, 9.9907e-01]],
        [[3.8009e-03, 1.2511e-02, 3.0144e-03,  ..., 1.1302e-03,
          1.6558e-03, 1.0837e-02],
         [3.8009e-03, 7.9391e-03, 3.0144e-03,  ..., 1.1302e-03,
          1.6558e-03, 1.0837e-02],
         [9.8860e-01, 9.3581e-03, 3.0144e-03,  ..., 1.1302e-03,
          9.9503e-01, 9.5474e-01],
         [3.8009e-03, 9.7019e-01, 9.9096e-01,  ..., 9.9661e-01,
          1.6558e-03, 2.3588e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.2425e-03, 1.6136e-04, 9.9536e-01,  ..., 4.2436e-03,
          2.2926e-04, 6.6801e-03],
         [4.2425e-03, 1.6136e-04, 1.3957e-03,  ..., 4.2436e-03,
          2.2927e-04, 6.6801e-03],
         [9.8727e-01, 1.6136e-04, 1.3957e-03,  ..., 9.8727e-01,
          2.2926e-04, 9.7962e-01],
         [4.2425e-03, 9.9952e-01, 1.8443e-03,  ..., 4.2436e-03,
          9.9931e-01, 7.0215e-03]],
        [[5.7135e-03, 3.1183e-05, 2.6838e-04,  ..., 4.7158e-03,
          3.5614e-03, 9.9906e-01],
         [5.7135e-03, 3.1493e-05, 2.7082e-04,  ..., 4.7158e-03,
          3.5614e-03, 3.1305e-04],
         [9.8286e-01, 3.1183e-05, 2.6838e-04,  ..., 9.8585e-01,
          9.8932e-01, 3.1305e-04],
         [5.7135e-03, 9.9991e-01, 9.9919e-01,  ..., 4.7158e-03,
          3.5614e-03, 3.1305e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 266:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:13,358 [Process: 0] Synchronize training processes
2024-08-18 15:07:13,358 [Process: 0] Evaluating...
2024-08-18 15:07:13,360 [Process: 0] EPOCH 266:
2024-08-18 15:07:13,362 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:14,508 [Process: 0] Synchronize training processes
2024-08-18 15:07:14,509 [Process: 0] Evaluating...
2024-08-18 15:07:14,511 [Process: 0] EPOCH 267:
2024-08-18 15:07:14,512 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1996e-03, 9.7982e-04, 2.6406e-03,  ..., 9.9707e-01,
          3.6249e-03, 5.3320e-03],
         [2.1996e-03, 9.7982e-04, 2.6406e-03,  ..., 9.0273e-04,
          3.1851e-03, 4.8358e-03],
         [9.9340e-01, 9.7982e-04, 2.8122e-03,  ..., 1.1199e-03,
          9.9000e-01, 6.8059e-03],
         [2.1996e-03, 9.9706e-01, 9.9191e-01,  ..., 9.0273e-04,
          3.1851e-03, 9.8303e-01]],
        [[2.8356e-03, 2.1130e-02, 2.4528e-03,  ..., 2.1210e-03,
          2.5728e-03, 1.7350e-02],
         [2.8356e-03, 1.2397e-02, 2.4528e-03,  ..., 2.1210e-03,
          2.5728e-03, 1.7350e-02],
         [9.9149e-01, 2.6368e-02, 2.4528e-03,  ..., 2.1210e-03,
          9.9228e-01, 8.9813e-01],
         [2.8356e-03, 9.4010e-01, 9.9264e-01,  ..., 9.9364e-01,
          2.5728e-03, 6.7170e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7482e-03, 1.1014e-03, 9.9913e-01,  ..., 6.1666e-03,
          1.6289e-04, 4.7104e-03],
         [9.7482e-03, 1.1015e-03, 2.8620e-04,  ..., 6.1666e-03,
          1.6289e-04, 4.7104e-03],
         [9.6497e-01, 1.1014e-03, 2.8620e-04,  ..., 9.8150e-01,
          1.6289e-04, 9.8587e-01],
         [1.5535e-02, 9.9670e-01, 2.9682e-04,  ..., 6.1666e-03,
          9.9951e-01, 4.7104e-03]],
        [[7.2134e-03, 1.5752e-04, 3.2757e-04,  ..., 6.2973e-03,
          5.4450e-03, 9.9112e-01],
         [6.5718e-03, 1.5752e-04, 3.4121e-04,  ..., 6.2973e-03,
          5.4450e-03, 2.5839e-03],
         [9.7964e-01, 1.5752e-04, 3.2757e-04,  ..., 9.8111e-01,
          9.8366e-01, 3.7115e-03],
         [6.5718e-03, 9.9953e-01, 9.9900e-01,  ..., 6.2973e-03,
          5.4450e-03, 2.5839e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 267:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3263e-03, 5.4140e-03, 1.3837e-03,  ..., 9.9910e-01,
          4.2801e-02, 3.2532e-03],
         [2.3263e-03, 4.0347e-03, 1.4270e-03,  ..., 3.0027e-04,
          1.0425e-02, 1.9399e-03],
         [9.9302e-01, 4.9488e-03, 1.3837e-03,  ..., 3.0027e-04,
          9.3635e-01, 1.9399e-03],
         [2.3263e-03, 9.8560e-01, 9.9581e-01,  ..., 3.0027e-04,
          1.0425e-02, 9.9287e-01]],
        [[2.7691e-03, 3.0689e-03, 2.0387e-03,  ..., 6.0778e-04,
          1.9871e-03, 4.2065e-03],
         [2.7691e-03, 3.0689e-03, 2.0387e-03,  ..., 6.0778e-04,
          1.9951e-03, 4.2065e-03],
         [9.9169e-01, 3.3094e-03, 2.0387e-03,  ..., 6.0778e-04,
          9.9403e-01, 9.8738e-01],
         [2.7691e-03, 9.9055e-01, 9.9388e-01,  ..., 9.9818e-01,
          1.9871e-03, 4.2065e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0909e-03, 3.7604e-03, 9.9366e-01,  ..., 6.2705e-03,
          7.5080e-04, 7.6262e-03],
         [5.0909e-03, 3.7604e-03, 2.1128e-03,  ..., 6.2705e-03,
          7.5080e-04, 7.4166e-03],
         [9.8473e-01, 6.2330e-03, 2.1128e-03,  ..., 9.8058e-01,
          7.5080e-04, 9.7625e-01],
         [5.0909e-03, 9.8625e-01, 2.1128e-03,  ..., 6.8795e-03,
          9.9775e-01, 8.7044e-03]],
        [[4.3348e-03, 1.0131e-03, 3.8689e-04,  ..., 4.8123e-03,
          5.5637e-03, 9.9497e-01],
         [4.3348e-03, 1.0131e-03, 3.8948e-04,  ..., 4.8123e-03,
          5.3886e-03, 1.4581e-03],
         [9.8700e-01, 1.0131e-03, 3.8689e-04,  ..., 9.8556e-01,
          9.8366e-01, 2.1121e-03],
         [4.3348e-03, 9.9696e-01, 9.9884e-01,  ..., 4.8123e-03,
          5.3886e-03, 1.4581e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:15,661 [Process: 0] Synchronize training processes
2024-08-18 15:07:15,662 [Process: 0] Evaluating...
2024-08-18 15:07:15,663 [Process: 0] EPOCH 268:
2024-08-18 15:07:15,665 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 268:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0024, 0.0023, 0.0011,  ..., 0.9965, 0.6049, 0.0029],
         [0.0024, 0.0020, 0.0011,  ..., 0.0011, 0.0161, 0.0029],
         [0.9927, 0.0020, 0.0011,  ..., 0.0013, 0.3629, 0.0029],
         [0.0024, 0.9936, 0.9968,  ..., 0.0011, 0.0161, 0.9914]],
        [[0.0017, 0.0131, 0.0088,  ..., 0.0028, 0.0025, 0.0058],
         [0.0017, 0.0073, 0.0051,  ..., 0.0028, 0.0025, 0.0058],
         [0.9949, 0.0136, 0.0051,  ..., 0.0028, 0.9926, 0.9809],
         [0.0017, 0.9660, 0.9810,  ..., 0.9915, 0.0025, 0.0074]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9363e-03, 2.4760e-04, 9.9747e-01,  ..., 5.8115e-03,
          8.3146e-05, 5.1058e-03],
         [4.9363e-03, 2.4760e-04, 8.4460e-04,  ..., 5.8115e-03,
          8.3146e-05, 5.1058e-03],
         [9.8519e-01, 2.4760e-04, 8.4460e-04,  ..., 9.8257e-01,
          8.3146e-05, 9.8468e-01],
         [4.9363e-03, 9.9926e-01, 8.4460e-04,  ..., 5.8115e-03,
          9.9975e-01, 5.1058e-03]],
        [[8.2822e-03, 7.0159e-05, 1.4557e-04,  ..., 6.5341e-03,
          5.2240e-03, 9.9787e-01],
         [6.8282e-03, 7.0159e-05, 1.4557e-04,  ..., 6.5341e-03,
          5.2240e-03, 7.0908e-04],
         [9.7806e-01, 7.0159e-05, 1.4557e-04,  ..., 9.8031e-01,
          9.8433e-01, 7.0908e-04],
         [6.8282e-03, 9.9979e-01, 9.9956e-01,  ..., 6.6263e-03,
          5.2240e-03, 7.0908e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 269:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8216e-03, 2.1748e-03, 5.6632e-03,  ..., 9.9929e-01,
          9.9932e-01, 5.2989e-04],
         [1.8601e-03, 2.1748e-03, 4.4780e-03,  ..., 2.3711e-04,
          2.2524e-04, 5.3665e-04],
         [9.9450e-01, 2.4497e-03, 4.6616e-03,  ..., 2.3711e-04,
          2.2524e-04, 5.2989e-04],
         [1.8216e-03, 9.9320e-01, 9.8520e-01,  ..., 2.3711e-04,
          2.2524e-04, 9.9840e-01]],
        [[1.7890e-03, 2.3322e-03, 1.1675e-03,  ..., 2.3662e-04,
          2.1067e-03, 1.4690e-02],
         [1.7890e-03, 2.3322e-03, 1.1675e-03,  ..., 2.3662e-04,
          2.1067e-03, 1.4690e-02],
         [9.9463e-01, 2.3322e-03, 1.1675e-03,  ..., 2.3662e-04,
          9.9368e-01, 8.9195e-01],
         [1.7890e-03, 9.9300e-01, 9.9650e-01,  ..., 9.9929e-01,
          2.1067e-03, 7.8671e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:16,813 [Process: 0] Synchronize training processes
2024-08-18 15:07:16,813 [Process: 0] Evaluating...
2024-08-18 15:07:16,815 [Process: 0] EPOCH 269:
2024-08-18 15:07:16,817 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:17,961 [Process: 0] Synchronize training processes
2024-08-18 15:07:17,961 [Process: 0] Evaluating...
2024-08-18 15:07:17,963 [Process: 0] EPOCH 270:
2024-08-18 15:07:17,965 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2665e-03, 2.2100e-04, 9.9306e-01,  ..., 6.8825e-03,
          2.0527e-04, 6.8143e-03],
         [5.2665e-03, 2.2100e-04, 1.3539e-03,  ..., 6.7786e-03,
          2.1110e-04, 6.3719e-03],
         [9.8420e-01, 2.2100e-04, 1.3539e-03,  ..., 9.7952e-01,
          2.0527e-04, 9.8044e-01],
         [5.2665e-03, 9.9934e-01, 4.2335e-03,  ..., 6.8224e-03,
          9.9938e-01, 6.3719e-03]],
        [[8.5990e-03, 4.0909e-04, 5.3981e-04,  ..., 5.5376e-03,
          1.3170e-02, 9.9927e-01],
         [8.5990e-03, 4.0909e-04, 5.3981e-04,  ..., 5.5376e-03,
          8.9437e-03, 2.4336e-04],
         [9.7045e-01, 4.0909e-04, 5.3981e-04,  ..., 9.8339e-01,
          9.6766e-01, 2.4336e-04],
         [1.2353e-02, 9.9877e-01, 9.9838e-01,  ..., 5.5376e-03,
          1.0222e-02, 2.4336e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 270:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8672e-03, 5.5701e-03, 6.5218e-03,  ..., 9.9933e-01,
          9.9180e-01, 8.7213e-03],
         [1.8672e-03, 3.6346e-03, 4.2293e-03,  ..., 2.2328e-04,
          2.3369e-03, 3.0436e-03],
         [9.9440e-01, 3.6346e-03, 4.7407e-03,  ..., 2.2328e-04,
          3.5256e-03, 3.0436e-03],
         [1.8672e-03, 9.8716e-01, 9.8451e-01,  ..., 2.2328e-04,
          2.3369e-03, 9.8519e-01]],
        [[2.2292e-03, 1.4092e-02, 3.3418e-03,  ..., 7.0841e-04,
          2.1668e-03, 8.3068e-03],
         [2.2292e-03, 7.1269e-03, 3.3418e-03,  ..., 7.0841e-04,
          2.1668e-03, 8.3068e-03],
         [9.9331e-01, 1.0715e-02, 3.3418e-03,  ..., 7.0841e-04,
          9.9350e-01, 9.6712e-01],
         [2.2292e-03, 9.6807e-01, 9.8997e-01,  ..., 9.9787e-01,
          2.1668e-03, 1.6265e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.8901e-03, 1.2099e-04, 9.9459e-01,  ..., 4.7882e-03,
          6.8964e-04, 9.3651e-03],
         [6.8901e-03, 1.2449e-04, 1.8036e-03,  ..., 4.7882e-03,
          6.8964e-04, 7.9775e-03],
         [9.7812e-01, 1.2099e-04, 1.8036e-03,  ..., 9.8564e-01,
          6.8964e-04, 9.7385e-01],
         [8.1041e-03, 9.9963e-01, 1.8036e-03,  ..., 4.7882e-03,
          9.9793e-01, 8.8089e-03]],
        [[1.0789e-02, 5.9673e-04, 1.9546e-04,  ..., 9.4721e-03,
          4.9460e-03, 9.9912e-01],
         [1.0425e-02, 6.1779e-04, 1.9738e-04,  ..., 7.1085e-03,
          4.9460e-03, 2.7091e-04],
         [9.6236e-01, 5.9673e-04, 1.9546e-04,  ..., 9.7631e-01,
          9.8516e-01, 2.7091e-04],
         [1.6424e-02, 9.9819e-01, 9.9941e-01,  ..., 7.1085e-03,
          4.9460e-03, 3.3475e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 271:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4391e-03, 3.6753e-03, 1.0673e-03,  ..., 9.9796e-01,
          9.9277e-01, 3.4902e-03],
         [3.7710e-03, 2.7700e-03, 1.0673e-03,  ..., 6.7891e-04,
          2.2574e-03, 1.8221e-03],
         [9.8802e-01, 2.7700e-03, 1.0673e-03,  ..., 6.7891e-04,
          2.2574e-03, 1.8221e-03],
         [3.7710e-03, 9.9078e-01, 9.9680e-01,  ..., 6.7891e-04,
          2.7154e-03, 9.9287e-01]],
        [[2.4723e-03, 1.7923e-03, 3.0430e-03,  ..., 1.6341e-03,
          7.0856e-03, 9.5266e-03],
         [2.4723e-03, 1.7730e-03, 3.0430e-03,  ..., 1.6341e-03,
          6.5233e-03, 9.5266e-03],
         [9.9258e-01, 1.7730e-03, 4.3541e-03,  ..., 1.6757e-03,
          9.7935e-01, 9.5809e-01],
         [2.4723e-03, 9.9466e-01, 9.8956e-01,  ..., 9.9506e-01,
          7.0385e-03, 2.2862e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:19,102 [Process: 0] Synchronize training processes
2024-08-18 15:07:19,102 [Process: 0] Evaluating...
2024-08-18 15:07:19,104 [Process: 0] EPOCH 271:
2024-08-18 15:07:19,106 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:20,246 [Process: 0] Synchronize training processes
2024-08-18 15:07:20,246 [Process: 0] Evaluating...
2024-08-18 15:07:20,250 [Process: 0] EPOCH 272:
2024-08-18 15:07:20,252 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2682e-03, 4.4336e-04, 9.9829e-01,  ..., 7.4888e-03,
          3.2036e-04, 9.3301e-03],
         [8.3580e-03, 4.4336e-04, 4.6616e-04,  ..., 7.4888e-03,
          3.2036e-04, 7.6423e-03],
         [9.7326e-01, 4.4336e-04, 4.6616e-04,  ..., 9.7723e-01,
          3.2036e-04, 9.7522e-01],
         [9.1130e-03, 9.9867e-01, 7.8143e-04,  ..., 7.7952e-03,
          9.9904e-01, 7.8100e-03]],
        [[9.9904e-03, 2.0192e-04, 2.1470e-04,  ..., 3.5777e-03,
          1.2985e-02, 9.8690e-01],
         [8.4170e-03, 2.0192e-04, 2.1470e-04,  ..., 3.5777e-03,
          8.8451e-03, 2.1103e-03],
         [9.7143e-01, 2.0192e-04, 2.1470e-04,  ..., 9.8927e-01,
          9.6815e-01, 2.1103e-03],
         [1.0167e-02, 9.9939e-01, 9.9936e-01,  ..., 3.5777e-03,
          1.0017e-02, 8.8777e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 272:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.0115e-04, 2.5683e-03, 1.9384e-03,  ..., 9.8113e-01,
          9.9576e-01, 4.8162e-03],
         [6.0115e-04, 2.5683e-03, 1.9384e-03,  ..., 4.4059e-03,
          1.4142e-03, 3.3507e-03],
         [9.9820e-01, 2.7704e-03, 1.9384e-03,  ..., 7.2851e-03,
          1.4142e-03, 4.5153e-03],
         [6.0115e-04, 9.9209e-01, 9.9418e-01,  ..., 7.1788e-03,
          1.4142e-03, 9.8732e-01]],
        [[2.8313e-03, 8.1671e-04, 1.1276e-03,  ..., 2.3154e-03,
          1.8823e-03, 3.9600e-03],
         [2.8313e-03, 8.1671e-04, 1.1276e-03,  ..., 2.3154e-03,
          1.8823e-03, 3.9600e-03],
         [9.9151e-01, 8.1671e-04, 1.1276e-03,  ..., 2.5523e-03,
          9.9435e-01, 9.8812e-01],
         [2.8313e-03, 9.9755e-01, 9.9662e-01,  ..., 9.9282e-01,
          1.8823e-03, 3.9600e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.4889e-03, 2.3413e-03, 9.9151e-01,  ..., 3.7618e-03,
          1.5859e-04, 5.5623e-03],
         [6.4889e-03, 9.1884e-04, 1.4647e-03,  ..., 3.7618e-03,
          1.6063e-04, 5.5153e-03],
         [9.8053e-01, 9.0142e-04, 1.4647e-03,  ..., 9.8871e-01,
          1.5859e-04, 9.8341e-01],
         [6.4889e-03, 9.9584e-01, 5.5644e-03,  ..., 3.7618e-03,
          9.9952e-01, 5.5153e-03]],
        [[5.9225e-03, 1.2556e-04, 3.6197e-04,  ..., 4.4860e-03,
          6.1417e-03, 9.4408e-01],
         [5.9225e-03, 1.2556e-04, 3.6197e-04,  ..., 4.4860e-03,
          6.1417e-03, 8.4553e-03],
         [9.8223e-01, 1.2556e-04, 3.6197e-04,  ..., 9.8654e-01,
          9.8158e-01, 1.2242e-02],
         [5.9225e-03, 9.9962e-01, 9.9891e-01,  ..., 4.4860e-03,
          6.1417e-03, 3.5218e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 273:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:21,390 [Process: 0] Synchronize training processes
2024-08-18 15:07:21,391 [Process: 0] Evaluating...
2024-08-18 15:07:21,393 [Process: 0] EPOCH 273:
2024-08-18 15:07:21,394 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:22,539 [Process: 0] Synchronize training processes
2024-08-18 15:07:22,540 [Process: 0] Evaluating...
2024-08-18 15:07:22,541 [Process: 0] EPOCH 274:
2024-08-18 15:07:22,543 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4680e-03, 2.1019e-03, 3.8704e-03,  ..., 9.9260e-01,
          9.9526e-01, 3.2252e-03],
         [2.4680e-03, 2.1019e-03, 3.8704e-03,  ..., 2.3809e-03,
          1.5805e-03, 3.2252e-03],
         [9.9260e-01, 2.1019e-03, 9.9557e-03,  ..., 2.6340e-03,
          1.5805e-03, 4.9694e-03],
         [2.4680e-03, 9.9369e-01, 9.8230e-01,  ..., 2.3809e-03,
          1.5805e-03, 9.8858e-01]],
        [[3.4887e-03, 1.0586e-03, 1.0520e-02,  ..., 8.4638e-04,
          6.1766e-04, 3.1726e-03],
         [3.4887e-03, 1.0586e-03, 4.6527e-03,  ..., 8.4638e-04,
          6.1766e-04, 3.1726e-03],
         [9.8953e-01, 1.0586e-03, 5.0816e-03,  ..., 8.4638e-04,
          9.9815e-01, 9.9048e-01],
         [3.4887e-03, 9.9682e-01, 9.7975e-01,  ..., 9.9746e-01,
          6.1766e-04, 3.1726e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3038e-03, 1.4790e-04, 9.9441e-01,  ..., 5.8020e-03,
          2.4628e-04, 4.1162e-03],
         [7.3038e-03, 1.5120e-04, 1.2606e-03,  ..., 5.8020e-03,
          2.4628e-04, 4.1162e-03],
         [9.7809e-01, 1.4790e-04, 1.2606e-03,  ..., 9.8259e-01,
          2.4628e-04, 9.8765e-01],
         [7.3038e-03, 9.9955e-01, 3.0701e-03,  ..., 5.8020e-03,
          9.9926e-01, 4.1162e-03]],
        [[7.1971e-03, 9.8817e-05, 9.0806e-05,  ..., 6.8766e-03,
          5.7328e-03, 9.9957e-01],
         [7.1971e-03, 9.8817e-05, 9.5825e-05,  ..., 6.8076e-03,
          5.7328e-03, 1.4218e-04],
         [9.7841e-01, 9.8817e-05, 9.0806e-05,  ..., 9.7951e-01,
          9.8280e-01, 1.4218e-04],
         [7.1971e-03, 9.9970e-01, 9.9972e-01,  ..., 6.8076e-03,
          5.7328e-03, 1.4218e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 274:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9151e-03, 4.8937e-03, 4.4871e-03,  ..., 9.9811e-01,
          9.9760e-01, 2.0875e-03],
         [1.9151e-03, 4.8937e-03, 3.6144e-03,  ..., 6.2878e-04,
          7.9933e-04, 2.0875e-03],
         [9.9425e-01, 9.3626e-03, 4.0396e-03,  ..., 6.2878e-04,
          7.9933e-04, 2.2443e-03],
         [1.9151e-03, 9.8085e-01, 9.8786e-01,  ..., 6.2878e-04,
          7.9933e-04, 9.9358e-01]],
        [[1.0864e-03, 3.6338e-03, 1.0012e-03,  ..., 2.8960e-03,
          1.8703e-03, 1.5162e-02],
         [1.0864e-03, 3.2743e-03, 1.0012e-03,  ..., 2.8960e-03,
          1.8703e-03, 1.5162e-02],
         [9.9674e-01, 4.1811e-03, 1.0012e-03,  ..., 4.7785e-03,
          9.9439e-01, 9.1755e-01],
         [1.0864e-03, 9.8891e-01, 9.9700e-01,  ..., 9.8943e-01,
          1.8703e-03, 5.2128e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3200e-02, 6.8067e-05, 9.8851e-01,  ..., 4.4064e-03,
          9.4180e-05, 4.2563e-03],
         [1.0675e-02, 6.8067e-05, 2.6620e-03,  ..., 4.4064e-03,
          9.4864e-05, 4.2563e-03],
         [9.6207e-01, 6.8067e-05, 2.6620e-03,  ..., 9.8678e-01,
          9.4180e-05, 9.8723e-01],
         [1.4052e-02, 9.9980e-01, 6.1709e-03,  ..., 4.4064e-03,
          9.9972e-01, 4.2563e-03]],
        [[4.1727e-03, 6.8898e-05, 1.3734e-04,  ..., 5.6260e-03,
          8.2463e-03, 9.9694e-01],
         [4.1727e-03, 6.8898e-05, 1.2487e-04,  ..., 5.6260e-03,
          7.5303e-03, 1.0204e-03],
         [9.8748e-01, 6.8898e-05, 1.2487e-04,  ..., 9.8312e-01,
          9.7669e-01, 1.0204e-03],
         [4.1727e-03, 9.9979e-01, 9.9961e-01,  ..., 5.6260e-03,
          7.5303e-03, 1.0204e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:23,687 [Process: 0] Synchronize training processes
2024-08-18 15:07:23,688 [Process: 0] Evaluating...
2024-08-18 15:07:23,689 [Process: 0] EPOCH 275:
2024-08-18 15:07:23,691 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 275:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3158e-03, 4.3128e-03, 1.3557e-02,  ..., 9.9590e-01,
          9.9937e-01, 5.5598e-03],
         [1.3158e-03, 4.3128e-03, 5.7210e-03,  ..., 1.3656e-03,
          2.0941e-04, 4.7083e-03],
         [9.9605e-01, 1.0288e-02, 7.4710e-03,  ..., 1.3656e-03,
          2.0941e-04, 9.5603e-03],
         [1.3158e-03, 9.8109e-01, 9.7325e-01,  ..., 1.3656e-03,
          2.0941e-04, 9.8017e-01]],
        [[2.4230e-03, 1.2718e-03, 1.8983e-03,  ..., 8.5759e-04,
          1.7022e-03, 3.6060e-03],
         [2.4230e-03, 1.2718e-03, 1.8983e-03,  ..., 8.5759e-04,
          1.7022e-03, 3.6060e-03],
         [9.9273e-01, 1.2718e-03, 2.2851e-03,  ..., 8.5759e-04,
          9.9489e-01, 9.8918e-01],
         [2.4230e-03, 9.9618e-01, 9.9392e-01,  ..., 9.9743e-01,
          1.7022e-03, 3.6060e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.9153e-03, 6.4167e-04, 9.9636e-01,  ..., 7.4819e-03,
          1.2455e-03, 8.6464e-03],
         [5.9153e-03, 6.4167e-04, 1.2141e-03,  ..., 7.4819e-03,
          1.2845e-03, 8.6464e-03],
         [9.8225e-01, 6.4167e-04, 1.2141e-03,  ..., 9.7755e-01,
          1.8327e-03, 9.7295e-01],
         [5.9153e-03, 9.9808e-01, 1.2141e-03,  ..., 7.4819e-03,
          9.9564e-01, 9.7592e-03]],
        [[4.2939e-03, 9.7105e-05, 2.0500e-05,  ..., 5.6323e-03,
          7.2257e-03, 9.9191e-01],
         [4.2939e-03, 1.0359e-04, 2.0500e-05,  ..., 5.6323e-03,
          7.2257e-03, 1.2615e-03],
         [9.8712e-01, 9.7105e-05, 2.0500e-05,  ..., 9.8310e-01,
          9.7832e-01, 1.2615e-03],
         [4.2939e-03, 9.9970e-01, 9.9994e-01,  ..., 5.6323e-03,
          7.2257e-03, 5.5703e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 276:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4641e-03, 1.7059e-03, 5.9731e-04,  ..., 9.9898e-01,
          9.9298e-01, 3.9877e-03],
         [2.4641e-03, 1.7059e-03, 5.9731e-04,  ..., 3.3969e-04,
          2.1208e-03, 1.1749e-03],
         [9.9261e-01, 1.7059e-03, 5.9731e-04,  ..., 3.3969e-04,
          2.7815e-03, 1.1749e-03],
         [2.4641e-03, 9.9488e-01, 9.9821e-01,  ..., 3.3969e-04,
          2.1208e-03, 9.9366e-01]],
        [[2.7296e-03, 8.0578e-04, 2.3104e-03,  ..., 3.6962e-03,
          8.1218e-04, 3.1497e-03],
         [2.7296e-03, 8.0578e-04, 2.3104e-03,  ..., 3.6962e-03,
          8.1218e-04, 3.1497e-03],
         [9.9181e-01, 8.0578e-04, 2.3104e-03,  ..., 4.4868e-03,
          9.9756e-01, 9.9055e-01],
         [2.7296e-03, 9.9758e-01, 9.9307e-01,  ..., 9.8812e-01,
          8.1218e-04, 3.1497e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:24,838 [Process: 0] Synchronize training processes
2024-08-18 15:07:24,838 [Process: 0] Evaluating...
2024-08-18 15:07:24,840 [Process: 0] EPOCH 276:
2024-08-18 15:07:24,842 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:25,989 [Process: 0] Synchronize training processes
2024-08-18 15:07:25,989 [Process: 0] Evaluating...
2024-08-18 15:07:25,991 [Process: 0] EPOCH 277:
2024-08-18 15:07:25,993 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7250e-03, 1.2075e-04, 9.9818e-01,  ..., 6.4482e-03,
          6.8734e-05, 7.5896e-03],
         [8.4482e-03, 1.2226e-04, 4.0152e-04,  ..., 6.4482e-03,
          6.9540e-05, 7.5896e-03],
         [9.7274e-01, 1.2075e-04, 4.0152e-04,  ..., 9.8066e-01,
          6.8734e-05, 9.7598e-01],
         [1.0088e-02, 9.9964e-01, 1.0216e-03,  ..., 6.4482e-03,
          9.9979e-01, 8.8452e-03]],
        [[7.0380e-03, 1.7496e-04, 1.5911e-04,  ..., 4.1696e-03,
          4.3251e-03, 9.9789e-01],
         [7.0380e-03, 1.7496e-04, 1.5911e-04,  ..., 4.1696e-03,
          4.3251e-03, 7.0351e-04],
         [9.7889e-01, 1.7496e-04, 1.5911e-04,  ..., 9.8749e-01,
          9.8702e-01, 7.0351e-04],
         [7.0380e-03, 9.9948e-01, 9.9952e-01,  ..., 4.1696e-03,
          4.3251e-03, 7.0351e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 277:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8139e-03, 6.2946e-04, 2.2762e-03,  ..., 9.9396e-01,
          9.9779e-01, 6.0583e-04],
         [1.8139e-03, 6.2946e-04, 2.2762e-03,  ..., 1.9007e-03,
          7.3568e-04, 6.0583e-04],
         [9.9456e-01, 6.2946e-04, 2.2762e-03,  ..., 1.9007e-03,
          7.3568e-04, 6.0583e-04],
         [1.8139e-03, 9.9811e-01, 9.9317e-01,  ..., 2.2398e-03,
          7.3568e-04, 9.9818e-01]],
        [[1.3216e-03, 5.5826e-04, 1.8991e-03,  ..., 3.8388e-03,
          2.1368e-03, 2.2036e-03],
         [1.3216e-03, 5.5826e-04, 1.8991e-03,  ..., 3.8388e-03,
          2.1368e-03, 2.2036e-03],
         [9.9604e-01, 5.5826e-04, 1.8991e-03,  ..., 5.2862e-03,
          9.9359e-01, 9.9339e-01],
         [1.3216e-03, 9.9833e-01, 9.9430e-01,  ..., 9.8704e-01,
          2.1368e-03, 2.2036e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2148e-03, 3.5379e-04, 9.9958e-01,  ..., 6.2009e-03,
          1.0443e-04, 6.8317e-03],
         [7.2148e-03, 3.5379e-04, 1.3913e-04,  ..., 6.2009e-03,
          1.0443e-04, 6.8317e-03],
         [9.7658e-01, 3.5379e-04, 1.3913e-04,  ..., 9.8132e-01,
          1.0443e-04, 9.7869e-01],
         [8.9861e-03, 9.9894e-01, 1.3913e-04,  ..., 6.2828e-03,
          9.9969e-01, 7.6425e-03]],
        [[5.4149e-03, 1.1838e-04, 1.1315e-05,  ..., 1.8761e-02,
          7.3314e-03, 9.9964e-01],
         [5.4149e-03, 1.2036e-04, 1.2021e-05,  ..., 1.1183e-02,
          7.3314e-03, 1.1856e-04],
         [9.8376e-01, 1.1838e-04, 1.1315e-05,  ..., 9.5268e-01,
          9.7603e-01, 1.1856e-04],
         [5.4149e-03, 9.9964e-01, 9.9997e-01,  ..., 1.7379e-02,
          9.3120e-03, 1.1856e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 278:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3849e-03, 3.5066e-03, 5.1129e-03,  ..., 9.9886e-01,
          9.9475e-01, 2.6275e-02],
         [1.3849e-03, 3.5066e-03, 3.2148e-03,  ..., 3.7849e-04,
          1.5888e-03, 8.8012e-03],
         [9.9585e-01, 4.7756e-03, 3.2148e-03,  ..., 3.7849e-04,
          2.0698e-03, 1.3637e-02],
         [1.3849e-03, 9.8821e-01, 9.8846e-01,  ..., 3.7849e-04,
          1.5888e-03, 9.5129e-01]],
        [[2.8694e-03, 3.8739e-03, 1.8354e-03,  ..., 2.3364e-03,
          3.1048e-03, 2.9854e-03],
         [2.8694e-03, 3.8739e-03, 1.8354e-03,  ..., 2.3364e-03,
          3.1048e-03, 2.9854e-03],
         [9.9139e-01, 4.1113e-03, 1.8354e-03,  ..., 2.6085e-03,
          9.9069e-01, 9.9104e-01],
         [2.8694e-03, 9.8814e-01, 9.9449e-01,  ..., 9.9272e-01,
          3.1048e-03, 2.9854e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:27,133 [Process: 0] Synchronize training processes
2024-08-18 15:07:27,133 [Process: 0] Evaluating...
2024-08-18 15:07:27,135 [Process: 0] EPOCH 278:
2024-08-18 15:07:27,137 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:28,295 [Process: 0] Synchronize training processes
2024-08-18 15:07:28,296 [Process: 0] Evaluating...
2024-08-18 15:07:28,298 [Process: 0] EPOCH 279:
2024-08-18 15:07:28,300 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.9580e-03, 5.7041e-04, 9.9884e-01,  ..., 3.6804e-03,
          2.1669e-03, 7.0518e-03],
         [5.9580e-03, 5.7041e-04, 3.8765e-04,  ..., 3.6804e-03,
          5.5157e-04, 7.0518e-03],
         [9.8166e-01, 5.7041e-04, 3.8765e-04,  ..., 9.8896e-01,
          5.5157e-04, 9.7682e-01],
         [6.4230e-03, 9.9829e-01, 3.8765e-04,  ..., 3.6804e-03,
          9.9673e-01, 9.0766e-03]],
        [[4.3647e-03, 2.4628e-03, 7.1225e-06,  ..., 5.6881e-03,
          9.3602e-03, 9.9213e-01],
         [4.3647e-03, 2.4628e-03, 7.5152e-06,  ..., 5.6881e-03,
          8.9284e-03, 2.3746e-03],
         [9.8691e-01, 2.6920e-03, 7.1225e-06,  ..., 9.8294e-01,
          9.6842e-01, 3.1161e-03],
         [4.3647e-03, 9.9238e-01, 9.9998e-01,  ..., 5.6881e-03,
          1.3291e-02, 2.3746e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 279:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9650e-04, 1.0935e-02, 4.8116e-03,  ..., 9.9652e-01,
          9.9324e-01, 1.3419e-03],
         [9.9650e-04, 3.8049e-03, 3.4041e-03,  ..., 1.1587e-03,
          1.8005e-03, 1.3419e-03],
         [9.9701e-01, 3.8049e-03, 3.4041e-03,  ..., 1.1587e-03,
          3.1641e-03, 1.3419e-03],
         [9.9650e-04, 9.8146e-01, 9.8838e-01,  ..., 1.1587e-03,
          1.8005e-03, 9.9597e-01]],
        [[1.3880e-03, 1.5889e-03, 3.4973e-04,  ..., 1.7307e-03,
          2.4828e-03, 1.1649e-03],
         [1.3880e-03, 1.5889e-03, 3.4973e-04,  ..., 1.7307e-03,
          2.4828e-03, 1.1649e-03],
         [9.9584e-01, 1.7330e-03, 3.4973e-04,  ..., 1.7769e-03,
          9.9255e-01, 9.9651e-01],
         [1.3880e-03, 9.9509e-01, 9.9895e-01,  ..., 9.9476e-01,
          2.4828e-03, 1.1649e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.0790e-03, 8.1450e-04, 9.9579e-01,  ..., 7.3283e-03,
          3.1415e-03, 4.6447e-03],
         [7.0790e-03, 5.5689e-04, 1.4035e-03,  ..., 7.1592e-03,
          1.7238e-03, 4.6447e-03],
         [9.7671e-01, 5.4561e-04, 1.4035e-03,  ..., 9.7697e-01,
          1.7111e-03, 9.8607e-01],
         [9.1294e-03, 9.9808e-01, 1.4035e-03,  ..., 8.5412e-03,
          9.9342e-01, 4.6447e-03]],
        [[6.5371e-03, 1.6444e-04, 6.6732e-04,  ..., 4.7370e-03,
          5.7224e-03, 9.9497e-01],
         [6.5371e-03, 1.6482e-04, 6.6732e-04,  ..., 4.7370e-03,
          5.7224e-03, 1.6763e-03],
         [9.7875e-01, 1.6444e-04, 6.6732e-04,  ..., 9.8579e-01,
          9.8271e-01, 1.6763e-03],
         [8.1790e-03, 9.9951e-01, 9.9800e-01,  ..., 4.7370e-03,
          5.8443e-03, 1.6763e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 280:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:29,471 [Process: 0] Synchronize training processes
2024-08-18 15:07:29,471 [Process: 0] Evaluating...
2024-08-18 15:07:29,473 [Process: 0] EPOCH 280:
2024-08-18 15:07:29,475 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:30,612 [Process: 0] Synchronize training processes
2024-08-18 15:07:30,612 [Process: 0] Evaluating...
2024-08-18 15:07:30,614 [Process: 0] EPOCH 281:
2024-08-18 15:07:30,616 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9259e-03, 9.9017e-03, 8.4146e-03,  ..., 9.9981e-01,
          9.9944e-01, 9.0137e-03],
         [1.9259e-03, 6.7318e-03, 8.4146e-03,  ..., 6.4298e-05,
          1.8690e-04, 4.9112e-03],
         [9.9422e-01, 9.6655e-03, 2.6230e-02,  ..., 6.4298e-05,
          1.8690e-04, 4.9112e-03],
         [1.9259e-03, 9.7370e-01, 9.5694e-01,  ..., 6.4298e-05,
          1.8690e-04, 9.8116e-01]],
        [[7.3718e-04, 1.4330e-03, 1.9316e-03,  ..., 2.4816e-04,
          1.1507e-03, 1.6561e-03],
         [7.3718e-04, 1.4330e-03, 1.9316e-03,  ..., 2.4816e-04,
          1.1507e-03, 1.6561e-03],
         [9.9779e-01, 1.4330e-03, 1.9316e-03,  ..., 2.4816e-04,
          9.9655e-01, 9.9503e-01],
         [7.3718e-04, 9.9570e-01, 9.9421e-01,  ..., 9.9926e-01,
          1.1507e-03, 1.6561e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3727e-03, 6.3894e-04, 9.9901e-01,  ..., 3.6409e-03,
          6.2410e-05, 3.9507e-03],
         [4.3727e-03, 6.3894e-04, 3.2866e-04,  ..., 3.8415e-03,
          6.2410e-05, 3.9507e-03],
         [9.8688e-01, 6.3894e-04, 3.2866e-04,  ..., 9.8888e-01,
          6.2410e-05, 9.8815e-01],
         [4.3727e-03, 9.9808e-01, 3.2866e-04,  ..., 3.6409e-03,
          9.9981e-01, 3.9507e-03]],
        [[7.0182e-03, 1.0097e-04, 6.6690e-04,  ..., 7.2370e-03,
          1.0170e-02, 9.9109e-01],
         [7.0182e-03, 1.0305e-04, 6.6690e-04,  ..., 5.7376e-03,
          1.0170e-02, 2.5295e-03],
         [9.7739e-01, 1.0097e-04, 6.6690e-04,  ..., 9.8129e-01,
          9.6037e-01, 2.5295e-03],
         [8.5756e-03, 9.9970e-01, 9.9800e-01,  ..., 5.7376e-03,
          1.9286e-02, 3.8469e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 281:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1736e-03, 1.0134e-02, 2.5959e-03,  ..., 9.9847e-01,
          9.9686e-01, 6.2191e-03],
         [1.1736e-03, 5.0800e-03, 1.8002e-03,  ..., 5.0913e-04,
          1.0457e-03, 6.2191e-03],
         [9.9648e-01, 5.0800e-03, 1.8002e-03,  ..., 5.0913e-04,
          1.0457e-03, 2.1627e-02],
         [1.1736e-03, 9.7971e-01, 9.9380e-01,  ..., 5.0913e-04,
          1.0457e-03, 9.6593e-01]],
        [[1.0257e-03, 2.0973e-03, 2.9557e-03,  ..., 3.8526e-04,
          1.3058e-03, 1.0041e-03],
         [1.0257e-03, 2.0973e-03, 2.9557e-03,  ..., 3.8526e-04,
          1.3058e-03, 1.0041e-03],
         [9.9692e-01, 2.6336e-03, 2.9557e-03,  ..., 3.8526e-04,
          9.9608e-01, 9.9699e-01],
         [1.0257e-03, 9.9317e-01, 9.9113e-01,  ..., 9.9884e-01,
          1.3058e-03, 1.0041e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:31,753 [Process: 0] Synchronize training processes
2024-08-18 15:07:31,754 [Process: 0] Evaluating...
2024-08-18 15:07:31,757 [Process: 0] EPOCH 282:
2024-08-18 15:07:31,759 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4219e-03, 1.0147e-03, 9.9693e-01,  ..., 5.0474e-03,
          2.4040e-04, 9.5623e-03],
         [5.4219e-03, 1.0147e-03, 1.0228e-03,  ..., 5.0461e-03,
          2.4494e-04, 7.2039e-03],
         [9.8373e-01, 1.0147e-03, 1.0228e-03,  ..., 9.8486e-01,
          2.4040e-04, 9.7603e-01],
         [5.4219e-03, 9.9696e-01, 1.0228e-03,  ..., 5.0461e-03,
          9.9927e-01, 7.2039e-03]],
        [[3.3124e-03, 2.1593e-05, 3.3544e-04,  ..., 3.7601e-03,
          5.9542e-03, 9.9628e-01],
         [3.3124e-03, 2.3374e-05, 3.3544e-04,  ..., 3.7601e-03,
          5.9542e-03, 1.2189e-03],
         [9.9006e-01, 2.1593e-05, 3.3544e-04,  ..., 9.8872e-01,
          9.8214e-01, 1.2189e-03],
         [3.3124e-03, 9.9993e-01, 9.9899e-01,  ..., 3.7601e-03,
          5.9542e-03, 1.2805e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 282:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3170e-03, 5.8413e-03, 2.9277e-03,  ..., 9.9967e-01,
          9.9825e-01, 5.1507e-03],
         [1.3170e-03, 5.8413e-03, 2.9277e-03,  ..., 1.1027e-04,
          5.8273e-04, 5.1507e-03],
         [9.9605e-01, 7.1366e-03, 4.3106e-03,  ..., 1.1027e-04,
          5.8273e-04, 8.2262e-03],
         [1.3170e-03, 9.8118e-01, 9.8983e-01,  ..., 1.1027e-04,
          5.8273e-04, 9.8147e-01]],
        [[1.8415e-03, 2.1192e-03, 1.8046e-03,  ..., 6.4839e-04,
          4.9670e-04, 1.0383e-03],
         [1.8415e-03, 2.1192e-03, 1.8046e-03,  ..., 6.4839e-04,
          4.9670e-04, 1.0383e-03],
         [9.9448e-01, 2.1192e-03, 1.8046e-03,  ..., 6.4839e-04,
          9.9851e-01, 9.9689e-01],
         [1.8415e-03, 9.9364e-01, 9.9459e-01,  ..., 9.9805e-01,
          4.9670e-04, 1.0383e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2543e-03, 9.8215e-04, 9.7763e-01,  ..., 4.0726e-03,
          1.8710e-04, 4.5667e-03],
         [7.2543e-03, 5.4021e-04, 4.1572e-03,  ..., 4.0726e-03,
          1.8710e-04, 4.5667e-03],
         [9.7715e-01, 5.4021e-04, 4.1572e-03,  ..., 9.8778e-01,
          1.8710e-04, 9.8630e-01],
         [8.3399e-03, 9.9794e-01, 1.4059e-02,  ..., 4.0726e-03,
          9.9944e-01, 4.5667e-03]],
        [[4.2280e-03, 1.1558e-04, 6.7241e-05,  ..., 5.7268e-03,
          3.6755e-03, 9.9611e-01],
         [4.2280e-03, 1.1558e-04, 7.2631e-05,  ..., 5.7268e-03,
          3.6755e-03, 9.7134e-04],
         [9.8732e-01, 1.1558e-04, 6.7241e-05,  ..., 9.8282e-01,
          9.8897e-01, 9.7134e-04],
         [4.2280e-03, 9.9965e-01, 9.9979e-01,  ..., 5.7268e-03,
          3.6755e-03, 1.9451e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 283:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:32,922 [Process: 0] Synchronize training processes
2024-08-18 15:07:32,923 [Process: 0] Evaluating...
2024-08-18 15:07:32,924 [Process: 0] EPOCH 283:
2024-08-18 15:07:32,926 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:34,095 [Process: 0] Synchronize training processes
2024-08-18 15:07:34,095 [Process: 0] Evaluating...
2024-08-18 15:07:34,097 [Process: 0] EPOCH 284:
2024-08-18 15:07:34,099 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4792e-03, 2.3942e-03, 3.0354e-03,  ..., 9.9535e-01,
          9.9413e-01, 2.2184e-03],
         [1.4792e-03, 2.3942e-03, 3.0354e-03,  ..., 1.5505e-03,
          1.7919e-03, 2.2184e-03],
         [9.9556e-01, 2.3942e-03, 3.2648e-03,  ..., 1.5505e-03,
          1.7919e-03, 2.8890e-03],
         [1.4792e-03, 9.9282e-01, 9.9066e-01,  ..., 1.5505e-03,
          2.2908e-03, 9.9267e-01]],
        [[2.5664e-03, 8.3045e-04, 1.0171e-03,  ..., 6.2661e-04,
          1.3919e-03, 2.1691e-03],
         [2.5664e-03, 8.3045e-04, 1.0171e-03,  ..., 6.2661e-04,
          1.3919e-03, 2.1691e-03],
         [9.9230e-01, 8.3045e-04, 1.0171e-03,  ..., 6.2661e-04,
          9.9582e-01, 9.9349e-01],
         [2.5664e-03, 9.9751e-01, 9.9695e-01,  ..., 9.9812e-01,
          1.3919e-03, 2.1691e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.4336e-03, 3.0949e-04, 9.9697e-01,  ..., 4.8594e-03,
          2.3435e-04, 4.5356e-03],
         [6.4336e-03, 3.1835e-04, 8.4687e-04,  ..., 4.8594e-03,
          2.3435e-04, 4.5356e-03],
         [9.8070e-01, 3.0949e-04, 8.4687e-04,  ..., 9.8542e-01,
          2.3435e-04, 9.8639e-01],
         [6.4336e-03, 9.9906e-01, 1.3394e-03,  ..., 4.8594e-03,
          9.9930e-01, 4.5356e-03]],
        [[5.7397e-03, 2.4564e-05, 3.6124e-04,  ..., 3.2098e-03,
          4.2941e-03, 9.5161e-01],
         [5.7397e-03, 2.4564e-05, 3.6124e-04,  ..., 3.2098e-03,
          4.2941e-03, 8.9559e-03],
         [9.8278e-01, 2.4564e-05, 3.6124e-04,  ..., 9.9037e-01,
          9.8712e-01, 2.3589e-02],
         [5.7397e-03, 9.9993e-01, 9.9892e-01,  ..., 3.2098e-03,
          4.2941e-03, 1.5845e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 284:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4418e-03, 2.0546e-02, 1.4067e-03,  ..., 9.9580e-01,
          9.9864e-01, 1.7078e-02],
         [1.4418e-03, 1.2868e-02, 1.4067e-03,  ..., 1.3989e-03,
          4.5441e-04, 1.3268e-02],
         [9.9567e-01, 4.9964e-02, 1.4067e-03,  ..., 1.3989e-03,
          4.5441e-04, 5.8624e-02],
         [1.4418e-03, 9.1662e-01, 9.9578e-01,  ..., 1.3989e-03,
          4.5441e-04, 9.1103e-01]],
        [[1.6546e-03, 1.2302e-03, 1.4639e-03,  ..., 1.3856e-03,
          1.9596e-03, 1.8634e-03],
         [1.6546e-03, 1.2302e-03, 1.4639e-03,  ..., 1.3856e-03,
          1.9596e-03, 1.8634e-03],
         [9.9504e-01, 1.2302e-03, 1.4639e-03,  ..., 1.3856e-03,
          9.9412e-01, 9.9441e-01],
         [1.6546e-03, 9.9631e-01, 9.9561e-01,  ..., 9.9584e-01,
          1.9596e-03, 1.8634e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4202e-03, 9.3851e-05, 9.9784e-01,  ..., 1.1630e-02,
          8.7776e-05, 4.3819e-03],
         [3.4202e-03, 9.3851e-05, 7.1022e-04,  ..., 7.8436e-03,
          9.2779e-05, 4.3819e-03],
         [9.8974e-01, 9.3851e-05, 7.1022e-04,  ..., 9.7197e-01,
          8.7776e-05, 9.8685e-01],
         [3.4202e-03, 9.9972e-01, 7.3833e-04,  ..., 8.5587e-03,
          9.9973e-01, 4.3819e-03]],
        [[6.4762e-03, 8.3283e-05, 1.0467e-04,  ..., 4.0592e-03,
          2.4073e-02, 9.9490e-01],
         [5.7913e-03, 8.3283e-05, 1.0467e-04,  ..., 4.0592e-03,
          2.4073e-02, 1.3850e-03],
         [9.8194e-01, 8.3283e-05, 1.0467e-04,  ..., 9.8782e-01,
          7.3743e-01, 1.3850e-03],
         [5.7913e-03, 9.9975e-01, 9.9969e-01,  ..., 4.0592e-03,
          2.1443e-01, 2.3321e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 285:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:35,239 [Process: 0] Synchronize training processes
2024-08-18 15:07:35,240 [Process: 0] Evaluating...
2024-08-18 15:07:35,241 [Process: 0] EPOCH 285:
2024-08-18 15:07:35,243 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:36,392 [Process: 0] Synchronize training processes
2024-08-18 15:07:36,393 [Process: 0] Evaluating...
2024-08-18 15:07:36,395 [Process: 0] EPOCH 286:
2024-08-18 15:07:36,396 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3625e-03, 5.5939e-03, 6.9915e-03,  ..., 9.9641e-01,
          9.9713e-01, 1.8932e-03],
         [1.3625e-03, 5.3037e-03, 6.9915e-03,  ..., 1.1972e-03,
          9.5689e-04, 1.8932e-03],
         [9.9591e-01, 1.1345e-02, 1.3973e-02,  ..., 1.1972e-03,
          9.5689e-04, 1.8932e-03],
         [1.3625e-03, 9.7776e-01, 9.7204e-01,  ..., 1.1972e-03,
          9.5689e-04, 9.9432e-01]],
        [[2.5021e-03, 9.0033e-04, 9.0859e-04,  ..., 1.4536e-03,
          1.5490e-03, 3.1373e-03],
         [2.5021e-03, 9.0033e-04, 9.0859e-04,  ..., 1.3181e-03,
          1.5490e-03, 3.1373e-03],
         [9.9249e-01, 9.0033e-04, 9.0859e-04,  ..., 1.3181e-03,
          9.9535e-01, 9.9059e-01],
         [2.5021e-03, 9.9730e-01, 9.9727e-01,  ..., 9.9591e-01,
          1.5490e-03, 3.1373e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2132e-03, 1.5481e-04, 9.9773e-01,  ..., 3.7448e-03,
          9.6592e-05, 9.1429e-03],
         [7.2132e-03, 1.5481e-04, 7.2248e-04,  ..., 3.7448e-03,
          9.6592e-05, 8.8573e-03],
         [9.7322e-01, 1.5481e-04, 7.2248e-04,  ..., 9.8877e-01,
          9.6592e-05, 9.6930e-01],
         [1.2349e-02, 9.9954e-01, 8.2536e-04,  ..., 3.7448e-03,
          9.9971e-01, 1.2696e-02]],
        [[5.5609e-03, 3.0533e-05, 9.3088e-05,  ..., 5.5202e-03,
          4.8179e-03, 9.9946e-01],
         [5.5609e-03, 3.0944e-05, 9.3088e-05,  ..., 5.3658e-03,
          4.8179e-03, 1.7999e-04],
         [9.8332e-01, 3.0533e-05, 9.3088e-05,  ..., 9.8375e-01,
          9.8555e-01, 1.7999e-04],
         [5.5609e-03, 9.9991e-01, 9.9972e-01,  ..., 5.3658e-03,
          4.8179e-03, 1.7999e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 286:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0026, 0.0017, 0.0017,  ..., 0.9877, 0.9954, 0.0024],
         [0.0026, 0.0017, 0.0017,  ..., 0.0033, 0.0015, 0.0024],
         [0.9923, 0.0017, 0.0020,  ..., 0.0036, 0.0015, 0.0024],
         [0.0026, 0.9948, 0.9946,  ..., 0.0053, 0.0015, 0.9927]],
        [[0.0024, 0.0032, 0.0011,  ..., 0.0016, 0.0026, 0.0043],
         [0.0024, 0.0019, 0.0011,  ..., 0.0016, 0.0026, 0.0043],
         [0.9928, 0.0019, 0.0011,  ..., 0.0016, 0.9923, 0.9862],
         [0.0024, 0.9931, 0.9968,  ..., 0.9951, 0.0026, 0.0052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:37,540 [Process: 0] Synchronize training processes
2024-08-18 15:07:37,540 [Process: 0] Evaluating...
2024-08-18 15:07:37,542 [Process: 0] EPOCH 287:
2024-08-18 15:07:37,544 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:38,687 [Process: 0] Synchronize training processes
2024-08-18 15:07:38,688 [Process: 0] Evaluating...
2024-08-18 15:07:38,689 [Process: 0] EPOCH 288:
2024-08-18 15:07:38,691 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2425e-02, 8.3619e-04, 9.8706e-01,  ..., 7.6000e-03,
          9.2100e-04, 7.0614e-03],
         [1.2425e-02, 8.3619e-04, 1.8729e-03,  ..., 7.6000e-03,
          9.2100e-04, 7.0614e-03],
         [9.3642e-01, 8.3619e-04, 1.8729e-03,  ..., 9.7435e-01,
          9.2100e-04, 9.7882e-01],
         [3.8730e-02, 9.9749e-01, 9.1919e-03,  ..., 1.0448e-02,
          9.9724e-01, 7.0614e-03]],
        [[4.6374e-03, 4.0797e-05, 7.2546e-05,  ..., 4.7647e-03,
          5.7870e-03, 9.9925e-01],
         [4.6374e-03, 4.1780e-05, 7.2546e-05,  ..., 4.7647e-03,
          5.7870e-03, 2.4977e-04],
         [9.8609e-01, 4.0797e-05, 7.2546e-05,  ..., 9.8571e-01,
          9.8264e-01, 2.4977e-04],
         [4.6374e-03, 9.9988e-01, 9.9978e-01,  ..., 4.7647e-03,
          5.7870e-03, 2.4977e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 287:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9812e-01, 1.3968e-03, 2.6965e-03,  ..., 9.9604e-01,
          9.9825e-01, 9.5056e-04],
         [6.2725e-04, 1.3968e-03, 2.6193e-03,  ..., 1.3201e-03,
          5.8345e-04, 9.5056e-04],
         [6.2725e-04, 1.3968e-03, 2.6193e-03,  ..., 1.3201e-03,
          5.8345e-04, 9.5056e-04],
         [6.2725e-04, 9.9581e-01, 9.9206e-01,  ..., 1.3201e-03,
          5.8345e-04, 9.9715e-01]],
        [[2.8318e-03, 2.6183e-03, 2.0604e-03,  ..., 2.6297e-03,
          2.2949e-03, 1.3063e-03],
         [2.8318e-03, 2.6183e-03, 2.0604e-03,  ..., 1.6559e-03,
          2.2949e-03, 1.3063e-03],
         [9.9150e-01, 3.6500e-03, 2.0604e-03,  ..., 1.6559e-03,
          9.9312e-01, 9.9608e-01],
         [2.8318e-03, 9.9111e-01, 9.9382e-01,  ..., 9.9406e-01,
          2.2949e-03, 1.3063e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6384e-03, 6.2593e-04, 9.9847e-01,  ..., 1.0243e-02,
          9.0496e-04, 8.8140e-03],
         [8.6384e-03, 6.2593e-04, 5.0871e-04,  ..., 9.0493e-03,
          3.7089e-04, 8.8140e-03],
         [9.6603e-01, 6.2593e-04, 5.0871e-04,  ..., 9.6848e-01,
          3.7089e-04, 9.6777e-01],
         [1.6693e-02, 9.9812e-01, 5.0871e-04,  ..., 1.2228e-02,
          9.9835e-01, 1.4605e-02]],
        [[8.2110e-03, 3.7783e-05, 3.7525e-03,  ..., 3.4893e-03,
          6.6062e-03, 9.9584e-01],
         [8.2110e-03, 3.7783e-05, 3.5799e-03,  ..., 3.4893e-03,
          6.6062e-03, 1.3300e-03],
         [9.7115e-01, 3.7783e-05, 4.6618e-03,  ..., 9.8953e-01,
          9.8018e-01, 1.3300e-03],
         [1.2431e-02, 9.9989e-01, 9.8801e-01,  ..., 3.4893e-03,
          6.6062e-03, 1.4952e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 288:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9595e-01, 3.0976e-03, 2.6648e-03,  ..., 9.9913e-01,
          9.9720e-01, 4.5145e-03],
         [1.3484e-03, 2.8131e-03, 2.6648e-03,  ..., 2.8963e-04,
          9.3286e-04, 4.5145e-03],
         [1.3484e-03, 2.8131e-03, 2.6648e-03,  ..., 2.8963e-04,
          9.3286e-04, 6.7094e-03],
         [1.3484e-03, 9.9128e-01, 9.9201e-01,  ..., 2.8963e-04,
          9.3286e-04, 9.8426e-01]],
        [[4.0803e-03, 5.8925e-03, 1.2510e-03,  ..., 2.9596e-03,
          1.8698e-03, 1.4855e-02],
         [4.0803e-03, 5.8925e-03, 1.2510e-03,  ..., 2.5505e-03,
          1.8698e-03, 1.4855e-02],
         [9.8776e-01, 1.2291e-02, 1.2510e-03,  ..., 2.5505e-03,
          9.9439e-01, 9.0900e-01],
         [4.0803e-03, 9.7592e-01, 9.9625e-01,  ..., 9.9194e-01,
          1.8698e-03, 6.1293e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:39,836 [Process: 0] Synchronize training processes
2024-08-18 15:07:39,836 [Process: 0] Evaluating...
2024-08-18 15:07:39,838 [Process: 0] EPOCH 289:
2024-08-18 15:07:39,840 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0947e-02, 8.1992e-04, 9.9956e-01,  ..., 4.9323e-03,
          4.3741e-02, 5.6088e-03],
         [1.0947e-02, 4.4552e-04, 1.3670e-04,  ..., 4.9323e-03,
          4.5199e-03, 5.6088e-03],
         [9.6019e-01, 4.4552e-04, 1.3670e-04,  ..., 9.8520e-01,
          4.5199e-03, 9.8317e-01],
         [1.7919e-02, 9.9829e-01, 1.6215e-04,  ..., 4.9323e-03,
          9.4722e-01, 5.6088e-03]],
        [[7.3783e-03, 3.8680e-05, 1.6635e-04,  ..., 6.0552e-03,
          7.1089e-03, 9.9291e-01],
         [7.3783e-03, 3.8680e-05, 8.9384e-05,  ..., 6.0552e-03,
          7.1089e-03, 2.0964e-03],
         [9.7771e-01, 3.8680e-05, 8.9384e-05,  ..., 9.8183e-01,
          9.7853e-01, 2.0964e-03],
         [7.5368e-03, 9.9988e-01, 9.9965e-01,  ..., 6.0552e-03,
          7.2521e-03, 2.9010e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 289:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9772e-01, 1.2042e-03, 1.6227e-03,  ..., 9.9730e-01,
          9.9525e-01, 3.0533e-03],
         [7.5952e-04, 1.2042e-03, 1.6227e-03,  ..., 9.0156e-04,
          1.4384e-03, 3.0533e-03],
         [7.5952e-04, 1.2042e-03, 1.6227e-03,  ..., 9.0156e-04,
          1.8685e-03, 3.0771e-03],
         [7.5952e-04, 9.9639e-01, 9.9513e-01,  ..., 9.0156e-04,
          1.4384e-03, 9.9082e-01]],
        [[2.2164e-03, 4.8595e-03, 3.3125e-03,  ..., 4.9855e-03,
          1.6760e-03, 6.8092e-03],
         [2.2164e-03, 4.0219e-03, 3.3125e-03,  ..., 4.9855e-03,
          1.6760e-03, 6.8092e-03],
         [9.9335e-01, 4.6077e-03, 3.4297e-03,  ..., 6.4611e-03,
          9.9497e-01, 9.7676e-01],
         [2.2164e-03, 9.8651e-01, 9.8995e-01,  ..., 9.8357e-01,
          1.6760e-03, 9.6196e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.3520e-03, 5.3661e-04, 9.9954e-01,  ..., 3.5427e-03,
          4.6313e-01, 5.4951e-03],
         [6.3520e-03, 5.3661e-04, 1.5252e-04,  ..., 3.5427e-03,
          2.9866e-02, 5.4951e-03],
         [9.8094e-01, 5.3661e-04, 1.5252e-04,  ..., 9.8937e-01,
          4.3892e-02, 9.8351e-01],
         [6.3520e-03, 9.9839e-01, 1.5252e-04,  ..., 3.5427e-03,
          4.6311e-01, 5.4951e-03]],
        [[5.8211e-03, 5.7684e-04, 8.1434e-06,  ..., 4.2397e-03,
          5.4873e-03, 9.9743e-01],
         [5.8211e-03, 5.7684e-04, 8.1434e-06,  ..., 4.2397e-03,
          5.4873e-03, 8.3152e-04],
         [9.8254e-01, 5.7684e-04, 8.1434e-06,  ..., 9.8728e-01,
          9.8354e-01, 8.3152e-04],
         [5.8211e-03, 9.9827e-01, 9.9998e-01,  ..., 4.2397e-03,
          5.4873e-03, 9.1018e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 290:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:40,991 [Process: 0] Synchronize training processes
2024-08-18 15:07:40,991 [Process: 0] Evaluating...
2024-08-18 15:07:40,993 [Process: 0] EPOCH 290:
2024-08-18 15:07:40,994 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:42,139 [Process: 0] Synchronize training processes
2024-08-18 15:07:42,139 [Process: 0] Evaluating...
2024-08-18 15:07:42,141 [Process: 0] EPOCH 291:
2024-08-18 15:07:42,143 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7807e-01, 3.8305e-03, 4.6741e-03,  ..., 9.9788e-01,
          9.9342e-01, 7.9748e-04],
         [4.7700e-03, 3.8305e-03, 2.0227e-03,  ..., 7.0738e-04,
          2.0314e-03, 7.9748e-04],
         [1.0228e-02, 7.9262e-03, 2.0227e-03,  ..., 7.0738e-04,
          2.0314e-03, 7.9748e-04],
         [6.9320e-03, 9.8441e-01, 9.9128e-01,  ..., 7.0738e-04,
          2.5124e-03, 9.9761e-01]],
        [[3.3852e-03, 3.4859e-03, 3.4490e-03,  ..., 2.3920e-03,
          1.4761e-03, 3.5846e-03],
         [3.3852e-03, 3.4859e-03, 3.4490e-03,  ..., 2.3920e-03,
          1.4761e-03, 3.5846e-03],
         [9.8984e-01, 5.6786e-03, 5.6893e-03,  ..., 3.6444e-03,
          9.9557e-01, 9.8925e-01],
         [3.3852e-03, 9.8735e-01, 9.8741e-01,  ..., 9.9157e-01,
          1.4761e-03, 3.5846e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.5809e-03, 2.1897e-03, 9.9872e-01,  ..., 3.0867e-03,
          2.7805e-01, 4.9553e-03],
         [5.5809e-03, 1.8953e-03, 4.2675e-04,  ..., 3.0867e-03,
          4.9611e-02, 4.9553e-03],
         [9.8326e-01, 1.8953e-03, 4.2675e-04,  ..., 9.9074e-01,
          1.4564e-01, 9.8513e-01],
         [5.5809e-03, 9.9402e-01, 4.2675e-04,  ..., 3.0867e-03,
          5.2671e-01, 4.9553e-03]],
        [[3.1893e-03, 5.8864e-04, 9.8716e-04,  ..., 4.7193e-03,
          5.8819e-03, 9.8516e-01],
         [3.1893e-03, 5.9133e-04, 8.2080e-04,  ..., 4.7193e-03,
          5.8819e-03, 3.3268e-03],
         [9.9043e-01, 5.8864e-04, 8.2080e-04,  ..., 9.8584e-01,
          9.8235e-01, 3.3268e-03],
         [3.1893e-03, 9.9823e-01, 9.9737e-01,  ..., 4.7193e-03,
          5.8819e-03, 8.1853e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 291:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9594e-01, 5.9376e-04, 3.9729e-03,  ..., 9.9524e-01,
          9.9691e-01, 2.3808e-03],
         [1.3521e-03, 5.9376e-04, 3.9729e-03,  ..., 1.4233e-03,
          1.0289e-03, 2.3808e-03],
         [1.3521e-03, 5.9376e-04, 5.2190e-03,  ..., 1.9156e-03,
          1.0289e-03, 2.3808e-03],
         [1.3521e-03, 9.9822e-01, 9.8684e-01,  ..., 1.4233e-03,
          1.0289e-03, 9.9286e-01]],
        [[4.1424e-02, 7.5294e-03, 2.4184e-03,  ..., 3.3789e-03,
          4.4060e-04, 3.4273e-03],
         [9.7779e-03, 7.5294e-03, 2.2008e-03,  ..., 3.3789e-03,
          4.4060e-04, 3.4273e-03],
         [9.3902e-01, 1.9954e-02, 2.2008e-03,  ..., 4.8341e-03,
          9.9868e-01, 9.8972e-01],
         [9.7779e-03, 9.6499e-01, 9.9318e-01,  ..., 9.8841e-01,
          4.4060e-04, 3.4273e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.3449e-03, 1.7368e-05, 9.9719e-01,  ..., 5.3982e-03,
          3.7504e-01, 3.2870e-03],
         [6.3449e-03, 1.7368e-05, 7.4756e-04,  ..., 5.3982e-03,
          1.4899e-02, 3.2870e-03],
         [9.8037e-01, 1.7368e-05, 7.4756e-04,  ..., 9.8381e-01,
          1.4899e-02, 9.9014e-01],
         [6.9403e-03, 9.9995e-01, 1.3143e-03,  ..., 5.3982e-03,
          5.9516e-01, 3.2870e-03]],
        [[4.8965e-03, 4.8646e-05, 1.6586e-04,  ..., 6.4940e-03,
          6.9531e-03, 9.9769e-01],
         [4.8965e-03, 4.8671e-05, 1.6586e-04,  ..., 6.4940e-03,
          6.9531e-03, 7.7140e-04],
         [9.8531e-01, 4.8646e-05, 1.6586e-04,  ..., 9.8052e-01,
          9.7888e-01, 7.7140e-04],
         [4.8965e-03, 9.9985e-01, 9.9950e-01,  ..., 6.4940e-03,
          7.2093e-03, 7.7140e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 292:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:43,288 [Process: 0] Synchronize training processes
2024-08-18 15:07:43,288 [Process: 0] Evaluating...
2024-08-18 15:07:43,293 [Process: 0] EPOCH 292:
2024-08-18 15:07:43,295 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:44,435 [Process: 0] Synchronize training processes
2024-08-18 15:07:44,436 [Process: 0] Evaluating...
2024-08-18 15:07:44,437 [Process: 0] EPOCH 293:
2024-08-18 15:07:44,439 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9253e-01, 8.8376e-04, 2.4214e-03,  ..., 9.9780e-01,
          9.9786e-01, 5.9359e-04],
         [2.1100e-03, 8.8376e-04, 2.4214e-03,  ..., 7.3397e-04,
          7.1235e-04, 5.9359e-04],
         [3.2513e-03, 8.8376e-04, 3.0522e-03,  ..., 7.3397e-04,
          7.1235e-04, 5.9359e-04],
         [2.1100e-03, 9.9735e-01, 9.9211e-01,  ..., 7.3397e-04,
          7.1235e-04, 9.9822e-01]],
        [[2.1355e-02, 1.3168e-03, 2.8759e-03,  ..., 2.9367e-03,
          2.6619e-04, 3.1121e-03],
         [7.0516e-03, 1.3168e-03, 2.8759e-03,  ..., 2.9367e-03,
          2.6619e-04, 3.1121e-03],
         [9.6454e-01, 1.3168e-03, 3.2645e-03,  ..., 3.5506e-03,
          9.9920e-01, 9.9066e-01],
         [7.0516e-03, 9.9605e-01, 9.9098e-01,  ..., 9.9058e-01,
          2.6619e-04, 3.1121e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1818e-03, 3.4811e-04, 9.9470e-01,  ..., 5.6353e-03,
          2.9939e-01, 4.1176e-03],
         [6.4528e-03, 3.4811e-04, 1.2004e-03,  ..., 5.6353e-03,
          1.3170e-02, 4.1176e-03],
         [9.7891e-01, 3.4811e-04, 1.2004e-03,  ..., 9.8309e-01,
          1.3170e-02, 9.8765e-01],
         [6.4528e-03, 9.9896e-01, 2.8999e-03,  ..., 5.6353e-03,
          6.7427e-01, 4.1176e-03]],
        [[3.6426e-03, 7.8852e-05, 3.1745e-04,  ..., 4.8933e-03,
          1.3083e-02, 9.9832e-01],
         [3.6426e-03, 7.8852e-05, 3.1745e-04,  ..., 4.8933e-03,
          7.8293e-03, 5.6029e-04],
         [9.8907e-01, 7.8852e-05, 3.1745e-04,  ..., 9.8532e-01,
          9.7126e-01, 5.6029e-04],
         [3.6426e-03, 9.9976e-01, 9.9905e-01,  ..., 4.8933e-03,
          7.8293e-03, 5.6029e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 293:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9612e-01, 1.2986e-03, 1.2718e-03,  ..., 9.9746e-01,
          9.8861e-01, 9.8794e-03],
         [1.2919e-03, 1.2986e-03, 1.2850e-03,  ..., 8.4814e-04,
          3.0702e-03, 7.7739e-03],
         [1.2919e-03, 1.2986e-03, 1.2718e-03,  ..., 8.4814e-04,
          3.8374e-03, 1.3452e-02],
         [1.2919e-03, 9.9610e-01, 9.9617e-01,  ..., 8.4814e-04,
          4.4833e-03, 9.6889e-01]],
        [[6.2087e-03, 6.2928e-03, 4.2665e-03,  ..., 1.2336e-02,
          7.3772e-04, 1.8366e-03],
         [3.5948e-03, 6.2928e-03, 4.2665e-03,  ..., 8.1136e-03,
          7.3772e-04, 1.8366e-03],
         [9.8660e-01, 1.5257e-02, 8.0941e-03,  ..., 1.7830e-02,
          9.9779e-01, 9.9449e-01],
         [3.5948e-03, 9.7216e-01, 9.8337e-01,  ..., 9.6172e-01,
          7.3772e-04, 1.8366e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:45,584 [Process: 0] Synchronize training processes
2024-08-18 15:07:45,584 [Process: 0] Evaluating...
2024-08-18 15:07:45,586 [Process: 0] EPOCH 294:
2024-08-18 15:07:45,588 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:46,737 [Process: 0] Synchronize training processes
2024-08-18 15:07:46,737 [Process: 0] Evaluating...
2024-08-18 15:07:46,739 [Process: 0] EPOCH 295:
2024-08-18 15:07:46,741 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1928e-02, 1.3207e-03, 9.9677e-01,  ..., 6.4429e-03,
          1.0199e-01, 5.8568e-03],
         [1.1928e-02, 1.3207e-03, 5.9146e-04,  ..., 5.7747e-03,
          1.0222e-02, 5.8568e-03],
         [9.5063e-01, 1.3802e-03, 5.9146e-04,  ..., 9.8201e-01,
          1.0222e-02, 9.8242e-01],
         [2.5515e-02, 9.9598e-01, 2.0463e-03,  ..., 5.7747e-03,
          8.7757e-01, 5.8662e-03]],
        [[5.0338e-03, 2.1462e-03, 9.0038e-05,  ..., 6.9816e-03,
          8.2679e-03, 9.9432e-01],
         [5.0338e-03, 2.1462e-03, 9.0038e-05,  ..., 6.7409e-03,
          5.9981e-03, 1.3387e-03],
         [9.8490e-01, 2.1462e-03, 9.0038e-05,  ..., 9.7954e-01,
          9.7974e-01, 1.3387e-03],
         [5.0338e-03, 9.9356e-01, 9.9973e-01,  ..., 6.7409e-03,
          5.9981e-03, 3.0046e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 294:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9736e-01, 1.8520e-03, 1.8862e-03,  ..., 9.9881e-01,
          9.9855e-01, 1.6849e-03],
         [8.7935e-04, 1.8520e-03, 1.8862e-03,  ..., 3.9785e-04,
          4.8379e-04, 1.6849e-03],
         [8.7935e-04, 1.8520e-03, 3.1106e-03,  ..., 3.9785e-04,
          4.8379e-04, 2.4304e-03],
         [8.7935e-04, 9.9444e-01, 9.9312e-01,  ..., 3.9785e-04,
          4.8379e-04, 9.9420e-01]],
        [[1.2261e-02, 5.4490e-03, 3.6744e-03,  ..., 2.1695e-03,
          8.8251e-04, 1.6414e-03],
         [6.2840e-03, 5.4490e-03, 3.6877e-03,  ..., 2.1695e-03,
          8.8251e-04, 1.6414e-03],
         [9.7517e-01, 1.2350e-02, 9.1565e-03,  ..., 2.1695e-03,
          9.9735e-01, 9.9508e-01],
         [6.2840e-03, 9.7675e-01, 9.8348e-01,  ..., 9.9349e-01,
          8.8251e-04, 1.6414e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3387e-03, 4.5565e-05, 9.9522e-01,  ..., 1.4770e-02,
          4.3829e-03, 1.4984e-02],
         [9.3387e-03, 4.5565e-05, 9.8153e-04,  ..., 8.4663e-03,
          2.2703e-03, 9.7497e-03],
         [9.6688e-01, 4.5565e-05, 9.8153e-04,  ..., 9.6830e-01,
          2.2703e-03, 9.6167e-01],
         [1.4441e-02, 9.9986e-01, 2.8215e-03,  ..., 8.4663e-03,
          9.9108e-01, 1.3600e-02]],
        [[5.1571e-03, 3.8344e-05, 2.3448e-02,  ..., 7.9045e-03,
          1.0492e-02, 9.9967e-01],
         [5.1571e-03, 3.8344e-05, 2.3448e-02,  ..., 7.9045e-03,
          7.7192e-03, 1.1147e-04],
         [9.8453e-01, 3.8344e-05, 6.9550e-01,  ..., 9.7308e-01,
          9.7402e-01, 1.1147e-04],
         [5.1571e-03, 9.9988e-01, 2.5760e-01,  ..., 1.1109e-02,
          7.7704e-03, 1.1147e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 295:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9396e-01, 7.2620e-03, 1.0979e-03,  ..., 9.9862e-01,
          9.9591e-01, 4.6389e-03],
         [1.8674e-03, 4.7057e-03, 1.0979e-03,  ..., 4.6099e-04,
          1.3058e-03, 3.8392e-03],
         [2.3016e-03, 5.5100e-03, 1.1346e-03,  ..., 4.6099e-04,
          1.4747e-03, 4.5408e-03],
         [1.8674e-03, 9.8252e-01, 9.9667e-01,  ..., 4.6099e-04,
          1.3058e-03, 9.8698e-01]],
        [[1.4659e-02, 1.1962e-03, 2.5804e-03,  ..., 3.4490e-03,
          6.6540e-04, 2.7198e-03],
         [5.9098e-03, 1.1962e-03, 2.5804e-03,  ..., 3.4490e-03,
          6.6540e-04, 2.7198e-03],
         [9.7352e-01, 1.1962e-03, 2.8218e-03,  ..., 6.1052e-03,
          9.9800e-01, 9.9184e-01],
         [5.9098e-03, 9.9641e-01, 9.9202e-01,  ..., 9.8700e-01,
          6.6540e-04, 2.7198e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:47,881 [Process: 0] Synchronize training processes
2024-08-18 15:07:47,882 [Process: 0] Evaluating...
2024-08-18 15:07:47,883 [Process: 0] EPOCH 296:
2024-08-18 15:07:47,885 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7996e-03, 5.2651e-04, 9.8510e-01,  ..., 4.0129e-03,
          4.7178e-03, 9.0901e-03],
         [8.7996e-03, 5.2651e-04, 1.8945e-03,  ..., 4.0129e-03,
          4.7178e-03, 7.6902e-03],
         [9.6878e-01, 5.2651e-04, 1.8945e-03,  ..., 9.8796e-01,
          9.5246e-03, 9.7498e-01],
         [1.3623e-02, 9.9842e-01, 1.1107e-02,  ..., 4.0129e-03,
          9.8104e-01, 8.2349e-03]],
        [[4.0066e-03, 9.3970e-05, 2.7395e-04,  ..., 1.2527e-02,
          4.5091e-03, 9.9762e-01],
         [4.0066e-03, 9.4488e-05, 2.7395e-04,  ..., 6.8467e-03,
          4.5091e-03, 7.9371e-04],
         [9.8798e-01, 9.3970e-05, 2.7395e-04,  ..., 9.7378e-01,
          9.8647e-01, 7.9371e-04],
         [4.0066e-03, 9.9972e-01, 9.9918e-01,  ..., 6.8467e-03,
          4.5091e-03, 7.9371e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 296:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9412e-01, 1.0894e-02, 9.8028e-04,  ..., 9.8534e-01,
          9.9085e-01, 2.9812e-03],
         [1.8219e-03, 6.2669e-03, 9.8028e-04,  ..., 3.8118e-03,
          2.7332e-03, 2.9812e-03],
         [2.2369e-03, 8.2111e-03, 9.8028e-04,  ..., 6.1362e-03,
          2.7332e-03, 3.4842e-03],
         [1.8219e-03, 9.7463e-01, 9.9706e-01,  ..., 4.7130e-03,
          3.6847e-03, 9.9055e-01]],
        [[1.1415e-02, 3.2826e-03, 2.5747e-03,  ..., 1.2650e-03,
          3.5819e-04, 3.7287e-03],
         [5.0821e-03, 2.8537e-03, 1.8328e-03,  ..., 1.2650e-03,
          3.5819e-04, 3.7287e-03],
         [9.7842e-01, 2.8590e-03, 1.8328e-03,  ..., 1.2650e-03,
          9.9893e-01, 9.8881e-01],
         [5.0821e-03, 9.9100e-01, 9.9376e-01,  ..., 9.9621e-01,
          3.5819e-04, 3.7287e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9989e-03, 3.2366e-04, 9.9285e-01,  ..., 4.8092e-03,
          1.2038e-02, 3.8497e-03],
         [6.9989e-03, 3.2366e-04, 1.5636e-03,  ..., 4.8092e-03,
          1.2038e-02, 3.8497e-03],
         [9.7807e-01, 3.2366e-04, 1.5636e-03,  ..., 9.8557e-01,
          9.4513e-01, 9.8845e-01],
         [7.9320e-03, 9.9903e-01, 4.0253e-03,  ..., 4.8092e-03,
          3.0792e-02, 3.8497e-03]],
        [[5.1284e-03, 5.8920e-05, 2.0690e-04,  ..., 3.8898e-03,
          5.9213e-03, 9.9742e-01],
         [4.7082e-03, 6.0131e-05, 2.0690e-04,  ..., 3.8898e-03,
          5.0120e-03, 8.5910e-04],
         [9.8546e-01, 5.8920e-05, 2.0690e-04,  ..., 9.8833e-01,
          9.8405e-01, 8.5910e-04],
         [4.7082e-03, 9.9982e-01, 9.9938e-01,  ..., 3.8898e-03,
          5.0120e-03, 8.5910e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 297:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:49,023 [Process: 0] Synchronize training processes
2024-08-18 15:07:49,024 [Process: 0] Evaluating...
2024-08-18 15:07:49,025 [Process: 0] EPOCH 297:
2024-08-18 15:07:49,027 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:50,174 [Process: 0] Synchronize training processes
2024-08-18 15:07:50,175 [Process: 0] Evaluating...
2024-08-18 15:07:50,176 [Process: 0] EPOCH 298:
2024-08-18 15:07:50,178 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9522e-01, 3.1600e-03, 2.2935e-03,  ..., 9.9758e-01,
          9.9887e-01, 3.7520e-03],
         [1.5441e-03, 3.1600e-03, 2.2935e-03,  ..., 7.9301e-04,
          3.7604e-04, 2.3986e-03],
         [1.5441e-03, 4.1854e-03, 2.2935e-03,  ..., 8.3018e-04,
          3.7604e-04, 2.3986e-03],
         [1.6918e-03, 9.8949e-01, 9.9312e-01,  ..., 7.9301e-04,
          3.7604e-04, 9.9145e-01]],
        [[9.9470e-03, 1.0625e-03, 5.5386e-04,  ..., 1.8352e-03,
          1.6623e-03, 1.3267e-03],
         [4.6408e-03, 1.0625e-03, 5.5386e-04,  ..., 1.8352e-03,
          1.6623e-03, 1.3267e-03],
         [9.8077e-01, 1.0625e-03, 5.5386e-04,  ..., 1.8352e-03,
          9.9501e-01, 9.9602e-01],
         [4.6408e-03, 9.9681e-01, 9.9834e-01,  ..., 9.9449e-01,
          1.6623e-03, 1.3267e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2051e-03, 3.1808e-03, 9.8631e-01,  ..., 5.5349e-03,
          2.1125e-02, 2.5348e-03],
         [3.2051e-03, 3.1808e-03, 3.2773e-03,  ..., 5.2564e-03,
          2.1125e-02, 2.5348e-03],
         [9.9038e-01, 8.4223e-03, 3.6896e-03,  ..., 9.8395e-01,
          7.6739e-01, 9.9240e-01],
         [3.2051e-03, 9.8522e-01, 6.7200e-03,  ..., 5.2564e-03,
          1.9036e-01, 2.5348e-03]],
        [[5.1203e-03, 7.6914e-05, 1.1487e-04,  ..., 3.3772e-03,
          6.0487e-03, 9.9679e-01],
         [5.1203e-03, 7.6914e-05, 1.1487e-04,  ..., 3.3772e-03,
          5.3600e-03, 1.0707e-03],
         [9.8464e-01, 7.6914e-05, 1.1487e-04,  ..., 9.8987e-01,
          9.8323e-01, 1.0707e-03],
         [5.1203e-03, 9.9977e-01, 9.9966e-01,  ..., 3.3772e-03,
          5.3600e-03, 1.0707e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 298:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9904e-01, 1.4310e-03, 3.5038e-04,  ..., 9.9809e-01,
          9.9607e-01, 4.0169e-02],
         [3.1995e-04, 1.4310e-03, 3.5964e-04,  ..., 6.3603e-04,
          1.1338e-03, 1.3556e-02],
         [3.1995e-04, 1.4310e-03, 3.5038e-04,  ..., 6.3603e-04,
          1.6662e-03, 3.3459e-02],
         [3.1995e-04, 9.9571e-01, 9.9894e-01,  ..., 6.3603e-04,
          1.1338e-03, 9.1282e-01]],
        [[6.1038e-03, 6.1297e-03, 7.3031e-04,  ..., 1.8126e-03,
          1.6737e-03, 1.0053e-03],
         [4.2577e-03, 3.9209e-03, 7.3031e-04,  ..., 1.8126e-03,
          1.6737e-03, 1.0053e-03],
         [9.8538e-01, 3.9209e-03, 7.3031e-04,  ..., 1.8126e-03,
          9.9498e-01, 9.9698e-01],
         [4.2577e-03, 9.8603e-01, 9.9781e-01,  ..., 9.9456e-01,
          1.6737e-03, 1.0053e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.1887e-03, 3.2446e-04, 9.9905e-01,  ..., 3.3358e-03,
          2.2538e-04, 4.7406e-03],
         [6.1887e-03, 3.2446e-04, 3.1826e-04,  ..., 3.3358e-03,
          2.2805e-04, 4.7406e-03],
         [9.8130e-01, 3.2446e-04, 3.1826e-04,  ..., 9.8999e-01,
          2.2538e-04, 9.8578e-01],
         [6.3218e-03, 9.9903e-01, 3.1826e-04,  ..., 3.3358e-03,
          9.9932e-01, 4.7406e-03]],
        [[4.6434e-03, 3.5557e-04, 9.9667e-05,  ..., 4.8131e-03,
          4.4293e-03, 9.9349e-01],
         [4.6434e-03, 3.5557e-04, 9.9667e-05,  ..., 4.8131e-03,
          4.4275e-03, 1.8664e-03],
         [9.8607e-01, 3.5557e-04, 9.9667e-05,  ..., 9.8556e-01,
          9.8672e-01, 1.8664e-03],
         [4.6434e-03, 9.9893e-01, 9.9970e-01,  ..., 4.8131e-03,
          4.4275e-03, 2.7776e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 299:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:51,318 [Process: 0] Synchronize training processes
2024-08-18 15:07:51,318 [Process: 0] Evaluating...
2024-08-18 15:07:51,319 [Process: 0] EPOCH 299:
2024-08-18 15:07:51,321 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:52,470 [Process: 0] Synchronize training processes
2024-08-18 15:07:52,470 [Process: 0] Evaluating...
2024-08-18 15:07:52,472 [Process: 0] EPOCH 300:
2024-08-18 15:07:52,473 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9460e-01, 3.4573e-03, 4.8661e-03,  ..., 9.9513e-01,
          9.9796e-01, 4.3831e-03],
         [1.4681e-03, 3.4573e-03, 4.8661e-03,  ..., 1.4115e-03,
          6.7995e-04, 4.3831e-03],
         [2.4592e-03, 4.6745e-03, 5.8585e-03,  ..., 2.0468e-03,
          6.7995e-04, 5.8607e-03],
         [1.4681e-03, 9.8841e-01, 9.8441e-01,  ..., 1.4115e-03,
          6.7995e-04, 9.8537e-01]],
        [[1.7723e-02, 1.1462e-03, 1.4768e-03,  ..., 7.7665e-04,
          1.9695e-03, 1.6093e-03],
         [4.8879e-03, 1.1462e-03, 1.4768e-03,  ..., 7.7665e-04,
          1.9695e-03, 1.6093e-03],
         [9.7250e-01, 1.1462e-03, 1.4768e-03,  ..., 7.7665e-04,
          9.9409e-01, 9.9517e-01],
         [4.8879e-03, 9.9656e-01, 9.9557e-01,  ..., 9.9767e-01,
          1.9695e-03, 1.6093e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4370e-03, 1.6219e-04, 9.9556e-01,  ..., 3.9156e-03,
          8.8148e-04, 4.2606e-03],
         [4.4370e-03, 1.6219e-04, 1.4646e-03,  ..., 3.9156e-03,
          8.8148e-04, 4.2606e-03],
         [9.8669e-01, 1.6219e-04, 1.5155e-03,  ..., 9.8825e-01,
          8.8148e-04, 9.8722e-01],
         [4.4370e-03, 9.9951e-01, 1.4646e-03,  ..., 3.9156e-03,
          9.9736e-01, 4.2606e-03]],
        [[2.1912e-03, 2.4416e-04, 4.2799e-04,  ..., 1.0061e-02,
          8.9301e-03, 9.9175e-01],
         [2.1912e-03, 2.4416e-04, 4.2799e-04,  ..., 7.7147e-03,
          7.6316e-03, 1.5539e-03],
         [9.9343e-01, 2.4416e-04, 4.2799e-04,  ..., 9.7281e-01,
          9.7467e-01, 1.5539e-03],
         [2.1912e-03, 9.9927e-01, 9.9872e-01,  ..., 9.4117e-03,
          8.7648e-03, 5.1376e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 300:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9168e-01, 1.7020e-03, 1.4645e-03,  ..., 9.9815e-01,
          9.9061e-01, 1.4349e-03],
         [2.5099e-03, 1.7020e-03, 1.4645e-03,  ..., 6.1602e-04,
          2.8593e-03, 1.4349e-03],
         [3.3032e-03, 1.7020e-03, 1.4645e-03,  ..., 6.1602e-04,
          3.6671e-03, 1.5728e-03],
         [2.5099e-03, 9.9489e-01, 9.9561e-01,  ..., 6.1602e-04,
          2.8593e-03, 9.9556e-01]],
        [[5.0349e-02, 1.0631e-03, 1.9951e-03,  ..., 1.1551e-03,
          3.8653e-04, 1.8616e-03],
         [8.6031e-03, 1.0631e-03, 1.9951e-03,  ..., 1.1831e-03,
          3.8653e-04, 1.8616e-03],
         [9.3244e-01, 1.0631e-03, 1.9951e-03,  ..., 1.1551e-03,
          9.9884e-01, 9.9442e-01],
         [8.6031e-03, 9.9681e-01, 9.9401e-01,  ..., 9.9651e-01,
          3.8653e-04, 1.8616e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:53,611 [Process: 0] Synchronize training processes
2024-08-18 15:07:53,611 [Process: 0] Evaluating...
2024-08-18 15:07:53,613 [Process: 0] EPOCH 301:
2024-08-18 15:07:53,615 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:54,760 [Process: 0] Synchronize training processes
2024-08-18 15:07:54,760 [Process: 0] Evaluating...
2024-08-18 15:07:54,765 [Process: 0] EPOCH 302:
2024-08-18 15:07:54,767 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7288e-03, 9.5558e-05, 9.9633e-01,  ..., 2.8628e-03,
          9.3964e-04, 3.7118e-03],
         [4.7288e-03, 9.5558e-05, 1.2227e-03,  ..., 2.8628e-03,
          9.3964e-04, 3.7118e-03],
         [9.8581e-01, 9.5558e-05, 1.2227e-03,  ..., 9.9141e-01,
          9.3964e-04, 9.8886e-01],
         [4.7288e-03, 9.9971e-01, 1.2227e-03,  ..., 2.8628e-03,
          9.9718e-01, 3.7118e-03]],
        [[3.1846e-03, 3.9998e-04, 4.2348e-05,  ..., 3.9272e-03,
          3.6991e-03, 9.9666e-01],
         [3.1846e-03, 3.6603e-04, 4.2348e-05,  ..., 3.9272e-03,
          3.6991e-03, 1.0359e-03],
         [9.9045e-01, 3.6603e-04, 4.2348e-05,  ..., 9.8822e-01,
          9.8890e-01, 1.2726e-03],
         [3.1846e-03, 9.9887e-01, 9.9987e-01,  ..., 3.9272e-03,
          3.6991e-03, 1.0359e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 301:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8992e-01, 2.8887e-03, 5.9684e-04,  ..., 9.9638e-01,
          9.9883e-01, 7.5671e-04],
         [2.5539e-03, 2.8887e-03, 6.0446e-04,  ..., 1.2080e-03,
          3.9117e-04, 7.5671e-04],
         [4.9696e-03, 2.8887e-03, 5.9684e-04,  ..., 1.2080e-03,
          3.9117e-04, 7.5671e-04],
         [2.5539e-03, 9.9133e-01, 9.9820e-01,  ..., 1.2080e-03,
          3.9117e-04, 9.9773e-01]],
        [[4.5061e-03, 5.6597e-04, 1.6588e-03,  ..., 1.7937e-03,
          1.4164e-03, 9.7940e-04],
         [2.5260e-03, 5.6597e-04, 1.6588e-03,  ..., 1.7937e-03,
          1.4164e-03, 1.0679e-03],
         [9.9044e-01, 5.6597e-04, 1.6588e-03,  ..., 3.1392e-03,
          9.9575e-01, 9.9697e-01],
         [2.5260e-03, 9.9830e-01, 9.9502e-01,  ..., 9.9327e-01,
          1.4164e-03, 9.7940e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.5282e-03, 5.5333e-04, 9.9443e-01,  ..., 4.4569e-03,
          1.4950e-03, 2.7179e-03],
         [4.5282e-03, 5.5333e-04, 1.6556e-03,  ..., 4.4569e-03,
          1.4950e-03, 2.7179e-03],
         [9.8642e-01, 5.5333e-04, 1.6556e-03,  ..., 9.8663e-01,
          1.4950e-03, 9.9185e-01],
         [4.5282e-03, 9.9834e-01, 2.2622e-03,  ..., 4.4569e-03,
          9.9552e-01, 2.7179e-03]],
        [[9.2092e-03, 8.2067e-04, 1.0700e-03,  ..., 6.0445e-03,
          4.9244e-03, 9.9874e-01],
         [8.7780e-03, 8.2067e-04, 1.0501e-03,  ..., 5.1357e-03,
          4.9244e-03, 4.2070e-04],
         [9.6840e-01, 8.2067e-04, 1.0501e-03,  ..., 9.8368e-01,
          9.8426e-01, 4.2070e-04],
         [1.3612e-02, 9.9754e-01, 9.9683e-01,  ..., 5.1357e-03,
          5.8953e-03, 4.2070e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 302:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9577e-01, 8.2123e-04, 1.6736e-03,  ..., 9.9361e-01,
          9.9915e-01, 7.3701e-03],
         [1.4110e-03, 8.2123e-04, 1.6736e-03,  ..., 1.8549e-03,
          2.8237e-04, 7.3701e-03],
         [1.4110e-03, 8.2123e-04, 1.6736e-03,  ..., 2.6769e-03,
          2.8237e-04, 2.0460e-02],
         [1.4110e-03, 9.9754e-01, 9.9498e-01,  ..., 1.8549e-03,
          2.8237e-04, 9.6480e-01]],
        [[1.8526e-02, 9.9671e-04, 4.8777e-03,  ..., 2.2298e-03,
          1.6781e-03, 6.4402e-04],
         [5.1262e-03, 9.9671e-04, 4.8777e-03,  ..., 2.2298e-03,
          1.6781e-03, 6.4402e-04],
         [9.7122e-01, 9.9671e-04, 9.3283e-03,  ..., 3.3250e-03,
          9.9497e-01, 9.9807e-01],
         [5.1262e-03, 9.9701e-01, 9.8092e-01,  ..., 9.9222e-01,
          1.6781e-03, 6.4402e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:07:55,911 [Process: 0] Synchronize training processes
2024-08-18 15:07:55,911 [Process: 0] Evaluating...
2024-08-18 15:07:55,913 [Process: 0] EPOCH 303:
2024-08-18 15:07:55,915 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.2584e-03, 4.5401e-04, 9.9871e-01,  ..., 3.7711e-03,
          1.7399e-04, 2.6568e-03],
         [4.2584e-03, 4.5401e-04, 4.2907e-04,  ..., 3.7711e-03,
          1.7399e-04, 2.6568e-03],
         [9.8722e-01, 4.5401e-04, 4.2907e-04,  ..., 9.8869e-01,
          1.7399e-04, 9.9203e-01],
         [4.2584e-03, 9.9864e-01, 4.2907e-04,  ..., 3.7711e-03,
          9.9948e-01, 2.6568e-03]],
        [[5.6790e-03, 7.1717e-04, 1.5830e-05,  ..., 3.9639e-03,
          8.4918e-03, 9.9947e-01],
         [5.3001e-03, 7.1717e-04, 1.5830e-05,  ..., 3.9639e-03,
          6.6270e-03, 1.7645e-04],
         [9.8372e-01, 7.1717e-04, 1.5830e-05,  ..., 9.8811e-01,
          9.7722e-01, 1.7645e-04],
         [5.3001e-03, 9.9785e-01, 9.9995e-01,  ..., 3.9639e-03,
          7.6655e-03, 1.7645e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 303:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8975e-01, 6.7867e-03, 3.0885e-03,  ..., 9.9637e-01,
          9.9966e-01, 1.0913e-02],
         [2.7140e-03, 4.4936e-03, 3.0381e-03,  ..., 1.2097e-03,
          1.1465e-04, 4.6302e-03],
         [4.8210e-03, 6.5514e-03, 3.0381e-03,  ..., 1.2097e-03,
          1.1465e-04, 4.6302e-03],
         [2.7140e-03, 9.8217e-01, 9.9084e-01,  ..., 1.2097e-03,
          1.1465e-04, 9.7983e-01]],
        [[3.2317e-02, 1.3112e-03, 2.8309e-03,  ..., 2.3400e-03,
          8.3092e-04, 1.1166e-03],
         [6.5130e-03, 1.3112e-03, 1.5959e-03,  ..., 2.3400e-03,
          8.3092e-04, 1.1166e-03],
         [9.5466e-01, 1.3112e-03, 1.5959e-03,  ..., 3.1918e-03,
          9.9751e-01, 9.9665e-01],
         [6.5130e-03, 9.9607e-01, 9.9398e-01,  ..., 9.9213e-01,
          8.3092e-04, 1.1166e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8644e-03, 1.3390e-03, 9.9543e-01,  ..., 6.1204e-03,
          3.0461e-04, 4.0852e-03],
         [7.9666e-03, 1.3390e-03, 1.5219e-03,  ..., 5.5796e-03,
          3.0461e-04, 4.0852e-03],
         [9.7286e-01, 1.6776e-03, 1.5219e-03,  ..., 9.8272e-01,
          3.0461e-04, 9.8774e-01],
         [9.3070e-03, 9.9564e-01, 1.5219e-03,  ..., 5.5796e-03,
          9.9909e-01, 4.0852e-03]],
        [[5.4324e-03, 2.0517e-04, 4.6595e-05,  ..., 4.5220e-03,
          6.6769e-03, 9.9589e-01],
         [5.4324e-03, 2.0517e-04, 4.6595e-05,  ..., 4.5220e-03,
          6.6769e-03, 1.3703e-03],
         [9.8300e-01, 2.0517e-04, 4.6595e-05,  ..., 9.8643e-01,
          9.7795e-01, 1.3703e-03],
         [6.1389e-03, 9.9938e-01, 9.9986e-01,  ..., 4.5220e-03,
          8.6945e-03, 1.3703e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 304:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-18 15:07:57,051 [Process: 0] Synchronize training processes
2024-08-18 15:07:57,051 [Process: 0] Evaluating...
2024-08-18 15:07:57,053 [Process: 0] EPOCH 304:
2024-08-18 15:07:57,055 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:58,192 [Process: 0] Synchronize training processes
2024-08-18 15:07:58,192 [Process: 0] Evaluating...
2024-08-18 15:07:58,194 [Process: 0] EPOCH 305:
2024-08-18 15:07:58,196 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9498e-01, 6.9543e-03, 2.1698e-03,  ..., 9.9811e-01,
          9.9950e-01, 1.7639e-03],
         [1.5946e-03, 2.6681e-03, 2.1698e-03,  ..., 6.3051e-04,
          1.6701e-04, 1.7639e-03],
         [1.8319e-03, 2.6681e-03, 2.7093e-03,  ..., 6.3051e-04,
          1.6701e-04, 3.1880e-03],
         [1.5946e-03, 9.8771e-01, 9.9295e-01,  ..., 6.3051e-04,
          1.6701e-04, 9.9328e-01]],
        [[3.7399e-03, 2.5419e-02, 1.0626e-03,  ..., 1.7496e-03,
          1.6837e-03, 5.7153e-03],
         [2.4914e-03, 2.5419e-02, 1.0626e-03,  ..., 1.7496e-03,
          1.6837e-03, 5.7153e-03],
         [9.9128e-01, 3.2946e-01, 9.9681e-01,  ..., 1.8922e-03,
          9.9495e-01, 9.8116e-01],
         [2.4914e-03, 6.1971e-01, 1.0626e-03,  ..., 9.9461e-01,
          1.6837e-03, 7.4059e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.4085e-03, 1.2486e-03, 9.9663e-01,  ..., 4.7891e-03,
          1.4630e-02, 6.0757e-03],
         [6.4085e-03, 1.2486e-03, 9.1481e-04,  ..., 4.7891e-03,
          1.4630e-02, 6.0757e-03],
         [9.8052e-01, 1.2486e-03, 9.1481e-04,  ..., 9.8563e-01,
          9.2422e-01, 9.8177e-01],
         [6.6657e-03, 9.9625e-01, 1.5366e-03,  ..., 4.7891e-03,
          4.6524e-02, 6.0757e-03]],
        [[7.2107e-03, 6.8128e-05, 7.2079e-05,  ..., 5.0903e-03,
          6.7461e-03, 9.9349e-01],
         [7.2107e-03, 6.8128e-05, 7.2079e-05,  ..., 5.0903e-03,
          6.3421e-03, 1.6130e-03],
         [9.7823e-01, 6.8128e-05, 7.2079e-05,  ..., 9.8473e-01,
          9.8057e-01, 1.6130e-03],
         [7.3483e-03, 9.9980e-01, 9.9978e-01,  ..., 5.0903e-03,
          6.3421e-03, 3.2829e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 305:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9956e-01, 2.0321e-03, 1.5503e-03,  ..., 9.9209e-01,
          9.9466e-01, 4.7414e-04],
         [1.4730e-04, 2.0321e-03, 1.5503e-03,  ..., 2.4230e-03,
          1.5806e-03, 4.7414e-04],
         [1.4730e-04, 2.0321e-03, 1.5503e-03,  ..., 3.0594e-03,
          2.1827e-03, 4.7414e-04],
         [1.4730e-04, 9.9390e-01, 9.9535e-01,  ..., 2.4230e-03,
          1.5806e-03, 9.9858e-01]],
        [[2.4699e-03, 7.0657e-04, 2.6878e-03,  ..., 1.3472e-03,
          1.3615e-03, 3.8734e-03],
         [2.3725e-03, 6.8647e-04, 2.6878e-03,  ..., 1.3472e-03,
          1.3615e-03, 3.8734e-03],
         [9.9279e-01, 6.8647e-04, 5.4458e-03,  ..., 1.3472e-03,
          9.9592e-01, 9.8838e-01],
         [2.3725e-03, 9.9792e-01, 9.8918e-01,  ..., 9.9596e-01,
          1.3615e-03, 3.8734e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2601e-03, 5.4834e-04, 9.9592e-01,  ..., 5.5874e-03,
          1.6746e-02, 5.3354e-03],
         [5.2601e-03, 5.4834e-04, 1.3584e-03,  ..., 5.5874e-03,
          1.6746e-02, 5.3354e-03],
         [9.8422e-01, 5.4834e-04, 1.3584e-03,  ..., 9.8324e-01,
          9.1703e-01, 9.8399e-01],
         [5.2601e-03, 9.9835e-01, 1.3584e-03,  ..., 5.5874e-03,
          4.9476e-02, 5.3354e-03]],
        [[8.7544e-03, 8.6070e-05, 1.1484e-05,  ..., 4.1288e-03,
          7.3241e-03, 9.9965e-01],
         [8.7544e-03, 8.6070e-05, 1.1484e-05,  ..., 4.1288e-03,
          7.1912e-03, 1.1627e-04],
         [9.7015e-01, 8.6070e-05, 1.1484e-05,  ..., 9.8761e-01,
          9.7798e-01, 1.1627e-04],
         [1.2341e-02, 9.9974e-01, 9.9997e-01,  ..., 4.1288e-03,
          7.5069e-03, 1.1627e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 306:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:07:59,345 [Process: 0] Synchronize training processes
2024-08-18 15:07:59,345 [Process: 0] Evaluating...
2024-08-18 15:07:59,346 [Process: 0] EPOCH 306:
2024-08-18 15:07:59,348 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:00,490 [Process: 0] Synchronize training processes
2024-08-18 15:08:00,490 [Process: 0] Evaluating...
2024-08-18 15:08:00,492 [Process: 0] EPOCH 307:
2024-08-18 15:08:00,494 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1168e-01, 4.0481e-04, 5.4852e-04,  ..., 9.9417e-01,
          9.9830e-01, 8.9306e-04],
         [1.7977e-02, 4.0481e-04, 5.4852e-04,  ..., 1.9425e-03,
          5.6629e-04, 8.9306e-04],
         [1.3413e-01, 4.0481e-04, 5.4852e-04,  ..., 1.9425e-03,
          5.6629e-04, 8.9306e-04],
         [3.6219e-02, 9.9879e-01, 9.9835e-01,  ..., 1.9425e-03,
          5.6629e-04, 9.9732e-01]],
        [[1.3785e-03, 1.1292e-03, 9.3214e-04,  ..., 1.6137e-03,
          1.1419e-03, 2.7355e-03],
         [1.3785e-03, 1.1292e-03, 9.3214e-04,  ..., 1.6137e-03,
          1.1419e-03, 2.7355e-03],
         [9.9586e-01, 1.1292e-03, 9.3214e-04,  ..., 1.6137e-03,
          9.9657e-01, 4.5447e-03],
         [1.3785e-03, 9.9661e-01, 9.9720e-01,  ..., 9.9516e-01,
          1.1419e-03, 9.8998e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1558e-03, 8.0512e-06, 9.9295e-01,  ..., 7.3262e-03,
          2.4754e-03, 7.1197e-03],
         [7.1558e-03, 8.0512e-06, 1.5036e-03,  ..., 6.4192e-03,
          2.4754e-03, 7.1107e-03],
         [9.7611e-01, 8.0512e-06, 1.5036e-03,  ..., 9.7984e-01,
          2.8687e-03, 9.7852e-01],
         [9.5827e-03, 9.9998e-01, 4.0386e-03,  ..., 6.4192e-03,
          9.9218e-01, 7.2545e-03]],
        [[7.7954e-03, 3.7522e-05, 2.9265e-05,  ..., 7.3775e-03,
          5.3915e-03, 9.9800e-01],
         [7.7954e-03, 3.7522e-05, 2.9265e-05,  ..., 7.3775e-03,
          5.3915e-03, 5.3261e-04],
         [9.7505e-01, 3.7522e-05, 2.9265e-05,  ..., 9.7615e-01,
          9.8383e-01, 5.3261e-04],
         [9.3560e-03, 9.9989e-01, 9.9991e-01,  ..., 9.0907e-03,
          5.3915e-03, 9.3415e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 307:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9947e-01, 4.0797e-04, 4.9328e-03,  ..., 9.7465e-01,
          9.9517e-01, 1.3864e-03],
         [1.7654e-04, 4.0797e-04, 4.9328e-03,  ..., 5.6879e-03,
          1.5490e-03, 1.3864e-03],
         [1.7654e-04, 4.0797e-04, 1.0148e-02,  ..., 1.1744e-02,
          1.5490e-03, 1.4212e-03],
         [1.7654e-04, 9.9878e-01, 9.7999e-01,  ..., 7.9212e-03,
          1.7335e-03, 9.9581e-01]],
        [[7.9485e-02, 1.2972e-03, 1.5492e-03,  ..., 2.0934e-03,
          2.1370e-03, 1.2788e-03],
         [1.2238e-02, 1.2972e-03, 1.5492e-03,  ..., 2.0934e-03,
          2.1370e-03, 1.2788e-03],
         [8.9604e-01, 1.3193e-03, 1.5492e-03,  ..., 2.5195e-03,
          9.9359e-01, 1.2788e-03],
         [1.2238e-02, 9.9609e-01, 9.9535e-01,  ..., 9.9329e-01,
          2.1370e-03, 9.9616e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:08:01,627 [Process: 0] Synchronize training processes
2024-08-18 15:08:01,628 [Process: 0] Evaluating...
2024-08-18 15:08:01,629 [Process: 0] EPOCH 308:
2024-08-18 15:08:01,631 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:02,780 [Process: 0] Synchronize training processes
2024-08-18 15:08:02,780 [Process: 0] Evaluating...
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.7443e-03, 5.5516e-05, 9.8911e-01,  ..., 4.3383e-03,
          4.9371e-02, 5.9001e-03],
         [7.7443e-03, 5.5516e-05, 3.1184e-03,  ..., 4.3383e-03,
          1.9451e-02, 5.9001e-03],
         [9.7668e-01, 5.5516e-05, 4.6539e-03,  ..., 9.8699e-01,
          5.6009e-02, 9.8230e-01],
         [7.8294e-03, 9.9983e-01, 3.1184e-03,  ..., 4.3383e-03,
          8.7517e-01, 5.9001e-03]],
        [[6.0232e-03, 1.7815e-04, 8.4035e-05,  ..., 4.7914e-03,
          2.6491e-03, 9.9814e-01],
         [6.0232e-03, 1.7815e-04, 8.4035e-05,  ..., 4.7914e-03,
          2.6491e-03, 6.0130e-04],
         [9.8193e-01, 1.7815e-04, 8.4035e-05,  ..., 9.8563e-01,
          9.9205e-01, 6.0130e-04],
         [6.0232e-03, 9.9947e-01, 9.9975e-01,  ..., 4.7914e-03,
          2.6491e-03, 6.5547e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 308:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9320e-01, 6.6731e-04, 1.3821e-04,  ..., 9.8825e-01,
          9.9843e-01, 1.1640e-03],
         [1.9662e-03, 6.3953e-04, 1.3821e-04,  ..., 3.3907e-03,
          5.2287e-04, 1.1640e-03],
         [1.9662e-03, 6.3953e-04, 1.3821e-04,  ..., 4.9660e-03,
          5.2287e-04, 1.1640e-03],
         [2.8642e-03, 9.9805e-01, 9.9959e-01,  ..., 3.3907e-03,
          5.2287e-04, 9.9651e-01]],
        [[6.9863e-01, 2.6519e-03, 1.2027e-03,  ..., 1.5563e-03,
          1.0557e-03, 2.9638e-03],
         [2.1385e-02, 1.7535e-03, 1.2027e-03,  ..., 1.5563e-03,
          1.0557e-03, 2.9638e-03],
         [2.5860e-01, 1.7535e-03, 1.2027e-03,  ..., 1.5563e-03,
          9.9683e-01, 9.9111e-01],
         [2.1385e-02, 9.9384e-01, 9.9639e-01,  ..., 9.9533e-01,
          1.0557e-03, 2.9638e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0353e-03, 1.2034e-02, 9.9562e-01,  ..., 6.6368e-03,
          6.0137e-01, 8.3419e-03],
         [5.0353e-03, 1.2034e-02, 1.4600e-03,  ..., 6.6368e-03,
          2.7381e-02, 6.9955e-03],
         [9.8489e-01, 9.3548e-01, 1.4646e-03,  ..., 9.7977e-01,
          6.1236e-02, 9.7767e-01],
         [5.0353e-03, 4.0454e-02, 1.4600e-03,  ..., 6.9565e-03,
          3.1002e-01, 6.9955e-03]],
        [[7.0407e-03, 1.2308e-03, 1.1012e-04,  ..., 5.2022e-03,
          4.8816e-03, 9.9971e-01],
         [7.0407e-03, 3.4355e-04, 1.1012e-04,  ..., 5.2022e-03,
          4.8816e-03, 9.7128e-05],
         [9.7801e-01, 3.4355e-04, 1.1012e-04,  ..., 9.8439e-01,
          9.8536e-01, 9.7128e-05],
         [7.9086e-03, 9.9808e-01, 9.9967e-01,  ..., 5.2022e-03,
          4.8816e-03, 9.7128e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 309:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9688e-01, 2.2840e-03, 1.6602e-03,  ..., 9.9812e-01,
          9.9950e-01, 5.1973e-04],
         [9.9173e-04, 2.2840e-03, 1.6602e-03,  ..., 6.2795e-04,
          1.6587e-04, 5.1973e-04],
         [9.9173e-04, 2.6022e-03, 1.6602e-03,  ..., 6.2795e-04,
          1.6587e-04, 5.1973e-04],
         [1.1385e-03, 9.9283e-01, 9.9502e-01,  ..., 6.2795e-04,
          1.6587e-04, 9.9844e-01]],
        [[9.9344e-01, 3.0435e-03, 2.2471e-04,  ..., 1.0164e-03,
          2.4428e-03, 1.7660e-03],
         [1.7584e-03, 1.1502e-03, 2.2644e-04,  ..., 8.6528e-04,
          2.4428e-03, 1.7660e-03],
         [3.0414e-03, 1.1502e-03, 2.2471e-04,  ..., 8.6528e-04,
          9.9267e-01, 9.9470e-01],
         [1.7584e-03, 9.9466e-01, 9.9932e-01,  ..., 9.9725e-01,
          2.4428e-03, 1.7660e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:02,782 [Process: 0] EPOCH 309:
2024-08-18 15:08:02,783 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:03,927 [Process: 0] Synchronize training processes
2024-08-18 15:08:03,928 [Process: 0] Evaluating...
2024-08-18 15:08:03,929 [Process: 0] EPOCH 310:
2024-08-18 15:08:03,931 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4384e-03, 1.9956e-02, 9.9700e-01,  ..., 8.4040e-03,
          1.2842e-02, 8.0401e-03],
         [7.9348e-03, 1.9956e-02, 9.9913e-04,  ..., 8.4040e-03,
          1.2842e-02, 7.8053e-03],
         [9.7386e-01, 2.2586e-01, 9.9913e-04,  ..., 9.7149e-01,
          9.4090e-01, 9.7423e-01],
         [8.7628e-03, 7.3423e-01, 9.9913e-04,  ..., 1.1703e-02,
          3.3414e-02, 9.9249e-03]],
        [[5.0497e-03, 1.8988e-05, 8.5610e-04,  ..., 6.9928e-03,
          6.2062e-03, 9.9706e-01],
         [5.0497e-03, 1.8988e-05, 6.0750e-04,  ..., 6.9928e-03,
          6.2062e-03, 9.8025e-04],
         [9.8485e-01, 1.8988e-05, 6.0750e-04,  ..., 9.7555e-01,
          9.8138e-01, 9.8025e-04],
         [5.0497e-03, 9.9994e-01, 9.9793e-01,  ..., 1.0465e-02,
          6.2062e-03, 9.8025e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 310:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9522e-01, 1.0086e-03, 1.0483e-03,  ..., 9.1157e-01,
          9.9786e-01, 1.6386e-03],
         [1.5916e-03, 1.0086e-03, 1.0483e-03,  ..., 8.6243e-03,
          7.1395e-04, 1.6386e-03],
         [1.5916e-03, 1.0086e-03, 1.0483e-03,  ..., 7.1183e-02,
          7.1395e-04, 1.6386e-03],
         [1.5916e-03, 9.9697e-01, 9.9685e-01,  ..., 8.6243e-03,
          7.1395e-04, 9.9508e-01]],
        [[1.8996e-03, 6.9534e-04, 9.9894e-03,  ..., 4.2289e-04,
          9.7299e-04, 1.3151e-03],
         [1.8996e-03, 6.9534e-04, 9.9894e-03,  ..., 4.2289e-04,
          9.7299e-04, 1.3151e-03],
         [9.9430e-01, 6.9534e-04, 9.2289e-01,  ..., 4.2289e-04,
          9.9708e-01, 9.9605e-01],
         [1.8996e-03, 9.9791e-01, 5.7135e-02,  ..., 9.9873e-01,
          9.7299e-04, 1.3151e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3566e-03, 7.7035e-04, 9.8863e-01,  ..., 5.6913e-03,
          7.3894e-03, 5.6730e-03],
         [4.3566e-03, 7.7035e-04, 1.4628e-03,  ..., 5.6913e-03,
          7.3894e-03, 5.6730e-03],
         [9.8693e-01, 7.7035e-04, 1.4628e-03,  ..., 9.8275e-01,
          9.7348e-01, 9.8296e-01],
         [4.3566e-03, 9.9769e-01, 8.4410e-03,  ..., 5.8644e-03,
          1.1744e-02, 5.6983e-03]],
        [[5.9326e-03, 8.4028e-05, 1.8153e-03,  ..., 8.2814e-03,
          1.1369e-02, 9.9801e-01],
         [5.9326e-03, 8.4028e-05, 5.8198e-04,  ..., 7.7923e-03,
          7.1097e-03, 5.8021e-04],
         [9.8220e-01, 8.4028e-05, 5.8198e-04,  ..., 9.7374e-01,
          9.7441e-01, 5.8021e-04],
         [5.9326e-03, 9.9975e-01, 9.9702e-01,  ..., 1.0186e-02,
          7.1097e-03, 8.2594e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 311:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 15:08:05,076 [Process: 0] Synchronize training processes
2024-08-18 15:08:05,076 [Process: 0] Evaluating...
2024-08-18 15:08:05,077 [Process: 0] EPOCH 311:
2024-08-18 15:08:05,079 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:06,220 [Process: 0] Synchronize training processes
2024-08-18 15:08:06,220 [Process: 0] Evaluating...
2024-08-18 15:08:06,224 [Process: 0] EPOCH 312:
2024-08-18 15:08:06,226 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9614e-01, 1.3026e-03, 1.5106e-03,  ..., 9.9581e-01,
          9.9554e-01, 6.0967e-04],
         [1.2883e-03, 1.0889e-03, 1.5106e-03,  ..., 1.1839e-03,
          1.3727e-03, 6.0967e-04],
         [1.2883e-03, 1.0889e-03, 1.5106e-03,  ..., 1.8221e-03,
          1.7118e-03, 6.0967e-04],
         [1.2883e-03, 9.9652e-01, 9.9547e-01,  ..., 1.1839e-03,
          1.3727e-03, 9.9817e-01]],
        [[1.0406e-03, 1.7373e-02, 5.4226e-04,  ..., 2.2642e-03,
          1.5200e-03, 2.0621e-03],
         [1.0406e-03, 8.0261e-03, 5.4226e-04,  ..., 2.2642e-03,
          1.5200e-03, 2.0621e-03],
         [9.9688e-01, 1.5122e-02, 5.4226e-04,  ..., 2.2642e-03,
          9.9544e-01, 9.9381e-01],
         [1.0406e-03, 9.5948e-01, 9.9837e-01,  ..., 9.9321e-01,
          1.5200e-03, 2.0621e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8950e-03, 7.2588e-04, 9.9595e-01,  ..., 5.3537e-03,
          7.1327e-03, 4.3999e-03],
         [3.8950e-03, 3.3382e-04, 1.2189e-03,  ..., 5.3537e-03,
          7.1327e-03, 4.3999e-03],
         [9.8831e-01, 3.3382e-04, 1.2189e-03,  ..., 9.8333e-01,
          2.9896e-02, 9.8680e-01],
         [3.8950e-03, 9.9861e-01, 1.6142e-03,  ..., 5.9627e-03,
          9.5584e-01, 4.3999e-03]],
        [[3.2019e-03, 3.0661e-04, 1.4117e-03,  ..., 6.8047e-03,
          3.5772e-03, 9.9879e-01],
         [3.2019e-03, 3.0661e-04, 6.3801e-04,  ..., 6.8047e-03,
          3.5772e-03, 4.0486e-04],
         [9.9039e-01, 3.0661e-04, 6.3801e-04,  ..., 9.7682e-01,
          9.8927e-01, 4.0486e-04],
         [3.2019e-03, 9.9908e-01, 9.9731e-01,  ..., 9.5708e-03,
          3.5772e-03, 4.0486e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 312:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9570e-01, 1.2520e-03, 1.1993e-02,  ..., 9.8346e-01,
          9.9723e-01, 8.2796e-03],
         [1.3311e-03, 1.2520e-03, 6.5808e-03,  ..., 3.7670e-03,
          9.2408e-04, 3.8228e-03],
         [1.6392e-03, 1.2520e-03, 1.3969e-02,  ..., 9.0020e-03,
          9.2408e-04, 4.6024e-03],
         [1.3311e-03, 9.9624e-01, 9.6746e-01,  ..., 3.7670e-03,
          9.2408e-04, 9.8330e-01]],
        [[1.5880e-03, 1.5352e-03, 3.3134e-03,  ..., 1.3745e-03,
          9.8323e-04, 1.2912e-03],
         [1.5880e-03, 1.1995e-03, 1.6076e-03,  ..., 1.3745e-03,
          9.8323e-04, 1.2912e-03],
         [9.9524e-01, 1.1995e-03, 1.6076e-03,  ..., 1.3745e-03,
          9.9705e-01, 1.2912e-03],
         [1.5880e-03, 9.9607e-01, 9.9347e-01,  ..., 9.9588e-01,
          9.8323e-04, 9.9613e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9720e-03, 4.1333e-04, 9.9519e-01,  ..., 5.9681e-03,
          7.9050e-04, 6.8793e-03],
         [3.9720e-03, 4.1333e-04, 1.6024e-03,  ..., 5.9200e-03,
          7.9050e-04, 6.7639e-03],
         [9.8808e-01, 4.1333e-04, 1.6024e-03,  ..., 9.8214e-01,
          7.9050e-04, 9.7872e-01],
         [3.9720e-03, 9.9876e-01, 1.6024e-03,  ..., 5.9704e-03,
          9.9763e-01, 7.6341e-03]],
        [[4.1627e-03, 9.2609e-04, 1.0697e-03,  ..., 4.3096e-03,
          5.4311e-03, 9.9930e-01],
         [4.1627e-03, 3.6163e-04, 1.0697e-03,  ..., 4.3096e-03,
          5.0500e-03, 2.3376e-04],
         [9.8751e-01, 3.6163e-04, 1.0697e-03,  ..., 9.8707e-01,
          9.8447e-01, 2.3376e-04],
         [4.1627e-03, 9.9835e-01, 9.9679e-01,  ..., 4.3096e-03,
          5.0500e-03, 2.3376e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 313:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:07,372 [Process: 0] Synchronize training processes
2024-08-18 15:08:07,372 [Process: 0] Evaluating...
2024-08-18 15:08:07,374 [Process: 0] EPOCH 313:
2024-08-18 15:08:07,376 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:08,517 [Process: 0] Synchronize training processes
2024-08-18 15:08:08,517 [Process: 0] Evaluating...
2024-08-18 15:08:08,519 [Process: 0] EPOCH 314:
2024-08-18 15:08:08,521 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9880e-01, 2.6714e-03, 1.4362e-03,  ..., 9.9882e-01,
          9.9821e-01, 1.9899e-03],
         [4.0019e-04, 2.5486e-03, 1.4362e-03,  ..., 3.9178e-04,
          5.9505e-04, 1.9899e-03],
         [4.0019e-04, 2.5486e-03, 1.4362e-03,  ..., 3.9178e-04,
          5.9505e-04, 2.1061e-03],
         [4.0019e-04, 9.9223e-01, 9.9569e-01,  ..., 3.9178e-04,
          5.9505e-04, 9.9391e-01]],
        [[6.9452e-04, 9.6407e-03, 1.2414e-02,  ..., 8.1069e-04,
          1.8165e-03, 1.0439e-02],
         [6.9452e-04, 3.9322e-03, 3.0393e-03,  ..., 8.1069e-04,
          1.8165e-03, 2.3732e-03],
         [9.9792e-01, 4.0796e-03, 3.0393e-03,  ..., 8.1069e-04,
          9.9455e-01, 2.3732e-03],
         [6.9452e-04, 9.8235e-01, 9.8151e-01,  ..., 9.9757e-01,
          1.8165e-03, 9.8481e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0047e-03, 9.9574e-01, 9.7601e-01,  ..., 4.4487e-03,
          1.7555e-04, 3.4775e-03],
         [4.0047e-03, 1.2766e-03, 2.8664e-03,  ..., 4.4487e-03,
          1.7555e-04, 3.4775e-03],
         [9.8799e-01, 1.2766e-03, 2.8664e-03,  ..., 9.8665e-01,
          1.7555e-04, 9.8957e-01],
         [4.0047e-03, 1.7108e-03, 1.8262e-02,  ..., 4.4487e-03,
          9.9947e-01, 3.4775e-03]],
        [[4.7327e-03, 9.8280e-04, 6.0450e-04,  ..., 3.3459e-03,
          1.5978e-03, 9.9979e-01],
         [4.7327e-03, 4.3844e-04, 2.3999e-04,  ..., 3.3459e-03,
          1.5978e-03, 7.0208e-05],
         [9.8580e-01, 4.3844e-04, 2.3999e-04,  ..., 9.8996e-01,
          9.9521e-01, 7.0208e-05],
         [4.7327e-03, 9.9814e-01, 9.9892e-01,  ..., 3.3459e-03,
          1.5978e-03, 7.0208e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 314:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9814e-01, 4.2248e-02, 1.7720e-02,  ..., 9.9489e-01,
          9.8438e-01, 1.2175e-03],
         [6.2076e-04, 8.7522e-03, 7.1692e-03,  ..., 1.6641e-03,
          3.4163e-03, 1.2175e-03],
         [6.2076e-04, 2.1886e-02, 2.1666e-02,  ..., 1.7834e-03,
          3.4163e-03, 1.2567e-03],
         [6.2076e-04, 9.2711e-01, 9.5344e-01,  ..., 1.6641e-03,
          8.7900e-03, 9.9631e-01]],
        [[9.7459e-04, 2.5240e-03, 2.7718e-03,  ..., 1.1762e-02,
          4.6628e-03, 9.4167e-03],
         [9.7459e-04, 2.3996e-03, 2.7718e-03,  ..., 4.4570e-03,
          3.9374e-03, 6.6449e-03],
         [9.9708e-01, 2.3996e-03, 5.3855e-03,  ..., 6.1271e-03,
          9.8746e-01, 1.8093e-02],
         [9.7459e-04, 9.9268e-01, 9.8907e-01,  ..., 9.7765e-01,
          3.9374e-03, 9.6585e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-18 15:08:09,653 [Process: 0] Synchronize training processes
2024-08-18 15:08:09,654 [Process: 0] Evaluating...
2024-08-18 15:08:09,655 [Process: 0] EPOCH 315:
2024-08-18 15:08:09,657 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[7.3487e-03, 9.8553e-01, 9.5000e-01,  ..., 2.9098e-03,
          1.5062e-03, 3.4888e-03],
         [6.8458e-03, 1.9232e-03, 4.1445e-03,  ..., 2.9098e-03,
          8.8010e-04, 3.4888e-03],
         [9.7894e-01, 1.9232e-03, 4.1445e-03,  ..., 9.9127e-01,
          8.8010e-04, 9.8953e-01],
         [6.8650e-03, 1.0625e-02, 4.1715e-02,  ..., 2.9098e-03,
          9.9673e-01, 3.4888e-03]],
        [[4.8989e-03, 1.6287e-04, 1.0983e-04,  ..., 4.1423e-03,
          2.0713e-03, 9.9715e-01],
         [4.8989e-03, 1.6287e-04, 1.0983e-04,  ..., 4.1423e-03,
          2.0713e-03, 9.4899e-04],
         [9.8530e-01, 1.6287e-04, 1.0983e-04,  ..., 9.8757e-01,
          9.9379e-01, 9.4899e-04],
         [4.8989e-03, 9.9951e-01, 9.9967e-01,  ..., 4.1423e-03,
          2.0713e-03, 9.4899e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 315:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7422e-01, 2.6171e-03, 2.3034e-03,  ..., 9.9770e-01,
          2.5261e-02, 2.7771e-03],
         [5.7128e-03, 2.2467e-03, 2.3034e-03,  ..., 7.6815e-04,
          2.5261e-02, 2.7771e-03],
         [1.0359e-02, 2.2467e-03, 4.3314e-03,  ..., 7.6815e-04,
          7.2798e-01, 4.6534e-03],
         [9.7105e-03, 9.9289e-01, 9.9106e-01,  ..., 7.6815e-04,
          2.2150e-01, 9.8979e-01]],
        [[2.3660e-03, 6.5906e-03, 2.7334e-03,  ..., 5.7898e-03,
          1.3862e-03, 2.8321e-03],
         [2.3660e-03, 2.5814e-03, 2.7334e-03,  ..., 1.9944e-03,
          1.3862e-03, 2.8321e-03],
         [9.9290e-01, 2.5814e-03, 3.8892e-03,  ..., 1.9944e-03,
          9.9584e-01, 9.9150e-01],
         [2.3660e-03, 9.8825e-01, 9.9064e-01,  ..., 9.9022e-01,
          1.3862e-03, 2.8321e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2611e-03, 5.7268e-01, 9.3686e-01,  ..., 2.5152e-03,
          1.6118e-03, 4.6568e-03],
         [5.2611e-03, 1.8761e-02, 5.8441e-03,  ..., 2.5152e-03,
          9.0483e-04, 4.6568e-03],
         [9.8422e-01, 1.8761e-02, 5.8441e-03,  ..., 9.9245e-01,
          9.0483e-04, 9.8603e-01],
         [5.2611e-03, 3.8980e-01, 5.1450e-02,  ..., 2.5152e-03,
          9.9658e-01, 4.6568e-03]],
        [[4.0677e-03, 4.0865e-03, 2.4733e-03,  ..., 3.5537e-03,
          4.1398e-03, 9.9954e-01],
         [4.0677e-03, 4.0865e-03, 2.4733e-03,  ..., 3.5537e-03,
          4.1398e-03, 1.4625e-04],
         [9.8780e-01, 1.6673e-02, 3.5430e-03,  ..., 9.8934e-01,
          9.8758e-01, 1.4625e-04],
         [4.0677e-03, 9.7515e-01, 9.9151e-01,  ..., 3.5537e-03,
          4.1398e-03, 1.6401e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 316:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6486e-03, 1.3633e-03, 1.5405e-03,  ..., 9.9931e-01,
          1.7454e-03, 1.6427e-03],
         [1.6486e-03, 1.3633e-03, 1.5405e-03,  ..., 2.2854e-04,
          1.7454e-03, 1.6427e-03],
         [9.9505e-01, 1.6637e-03, 2.9628e-03,  ..., 2.2854e-04,
          9.9476e-01, 1.6791e-03],
         [1.6486e-03, 9.9561e-01, 9.9396e-01,  ..., 2.2854e-04,
          1.7454e-03, 9.9504e-01]],
        [[1.0015e-03, 1.4178e-02, 3.7355e-03,  ..., 7.7771e-02,
          1.4422e-03, 2.4003e-03],
         [1.0015e-03, 5.3268e-03, 3.7355e-03,  ..., 9.5791e-03,
          1.4422e-03, 2.4003e-03],
         [9.9700e-01, 7.2647e-03, 8.2952e-03,  ..., 1.7534e-02,
          9.9567e-01, 9.9280e-01],
         [1.0015e-03, 9.7323e-01, 9.8423e-01,  ..., 8.9512e-01,
          1.4422e-03, 2.4003e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:10,806 [Process: 0] Synchronize training processes
2024-08-18 15:08:10,806 [Process: 0] Evaluating...
2024-08-18 15:08:10,808 [Process: 0] EPOCH 316:
2024-08-18 15:08:10,810 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:11,942 [Process: 0] Synchronize training processes
2024-08-18 15:08:11,942 [Process: 0] Evaluating...
2024-08-18 15:08:11,944 [Process: 0] EPOCH 317:
2024-08-18 15:08:11,946 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.6894e-03, 3.3828e-02, 9.6763e-01,  ..., 4.6952e-03,
          1.1872e-02, 3.3421e-03],
         [6.6894e-03, 4.3289e-03, 4.2575e-03,  ..., 4.6952e-03,
          1.1872e-02, 3.3421e-03],
         [9.7993e-01, 4.3289e-03, 4.2575e-03,  ..., 9.8591e-01,
          5.3415e-02, 9.8997e-01],
         [6.6894e-03, 9.5751e-01, 2.3855e-02,  ..., 4.6952e-03,
          9.2284e-01, 3.3421e-03]],
        [[6.1184e-03, 6.5241e-05, 5.9029e-05,  ..., 3.9589e-03,
          3.7199e-03, 9.8766e-01],
         [5.5713e-03, 6.5241e-05, 5.9029e-05,  ..., 3.9589e-03,
          3.7199e-03, 2.2692e-03],
         [9.8274e-01, 6.5241e-05, 5.9029e-05,  ..., 9.8812e-01,
          9.8884e-01, 2.2692e-03],
         [5.5713e-03, 9.9980e-01, 9.9982e-01,  ..., 3.9589e-03,
          3.7199e-03, 7.7984e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 317:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3953e-03, 1.6439e-03, 1.4807e-03,  ..., 9.9786e-01,
          2.5553e-03, 1.7957e-03],
         [3.3456e-03, 1.4910e-03, 1.4807e-03,  ..., 7.1438e-04,
          2.2886e-03, 1.7957e-03],
         [9.8891e-01, 1.4910e-03, 1.4807e-03,  ..., 7.1438e-04,
          9.9287e-01, 2.3914e-03],
         [3.3456e-03, 9.9537e-01, 9.9556e-01,  ..., 7.1438e-04,
          2.2886e-03, 9.9402e-01]],
        [[7.3580e-04, 8.9757e-04, 2.1363e-03,  ..., 2.2448e-02,
          6.7961e-04, 1.2290e-03],
         [7.3580e-04, 8.9757e-04, 2.1363e-03,  ..., 2.2448e-02,
          6.7961e-04, 1.2290e-03],
         [9.9779e-01, 8.9757e-04, 3.8933e-03,  ..., 5.2902e-01,
          9.9796e-01, 9.9631e-01],
         [7.3580e-04, 9.9731e-01, 9.9183e-01,  ..., 4.2608e-01,
          6.7961e-04, 1.2290e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7537e-03, 1.9066e-04, 9.9618e-01,  ..., 5.8427e-03,
          1.4194e-03, 4.9769e-03],
         [6.5095e-03, 1.9066e-04, 7.0793e-04,  ..., 5.4006e-03,
          1.4194e-03, 4.9769e-03],
         [9.7823e-01, 1.9066e-04, 7.0793e-04,  ..., 9.8336e-01,
          1.4194e-03, 9.8507e-01],
         [6.5095e-03, 9.9943e-01, 2.4013e-03,  ..., 5.4006e-03,
          9.9574e-01, 4.9769e-03]],
        [[4.9026e-03, 3.7288e-04, 1.0004e-04,  ..., 4.2614e-03,
          6.3260e-03, 9.9756e-01],
         [4.9026e-03, 3.7313e-04, 1.0004e-04,  ..., 3.8850e-03,
          6.0804e-03, 5.7161e-04],
         [9.8529e-01, 3.7288e-04, 1.0004e-04,  ..., 9.8797e-01,
          9.8151e-01, 5.7161e-04],
         [4.9026e-03, 9.9888e-01, 9.9970e-01,  ..., 3.8850e-03,
          6.0804e-03, 1.2980e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 318:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.3956e-04, 3.4305e-03, 2.1292e-03,  ..., 9.9941e-01,
          7.0173e-04, 4.9662e-03],
         [5.3956e-04, 2.1423e-03, 2.1292e-03,  ..., 1.9820e-04,
          7.0173e-04, 2.0223e-03],
         [9.9838e-01, 2.1423e-03, 2.1317e-03,  ..., 1.9820e-04,
          9.9789e-01, 2.0223e-03],
         [5.3956e-04, 9.9228e-01, 9.9361e-01,  ..., 1.9820e-04,
          7.0173e-04, 9.9099e-01]],
        [[2.0612e-03, 6.3490e-03, 2.8513e-03,  ..., 1.1791e-02,
          5.8257e-04, 1.0725e-03],
         [2.0612e-03, 5.3140e-03, 2.3051e-03,  ..., 1.1791e-02,
          5.8257e-04, 1.0725e-03],
         [9.9382e-01, 8.6578e-03, 2.3051e-03,  ..., 9.2426e-01,
          9.9825e-01, 9.9678e-01],
         [2.0612e-03, 9.7968e-01, 9.9254e-01,  ..., 5.2161e-02,
          5.8257e-04, 1.0725e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:13,080 [Process: 0] Synchronize training processes
2024-08-18 15:08:13,080 [Process: 0] Evaluating...
2024-08-18 15:08:13,082 [Process: 0] EPOCH 318:
2024-08-18 15:08:13,084 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:14,235 [Process: 0] Synchronize training processes
2024-08-18 15:08:14,236 [Process: 0] Evaluating...
2024-08-18 15:08:14,237 [Process: 0] EPOCH 319:
2024-08-18 15:08:14,239 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5021e-03, 1.0352e-03, 9.8806e-01,  ..., 4.2260e-03,
          4.5865e-02, 1.0348e-02],
         [3.5021e-03, 1.0352e-03, 2.6708e-03,  ..., 4.2260e-03,
          2.2493e-02, 8.1598e-03],
         [9.8949e-01, 1.0352e-03, 2.6708e-03,  ..., 9.8732e-01,
          1.5624e-01, 9.7170e-01],
         [3.5021e-03, 9.9689e-01, 6.5997e-03,  ..., 4.2260e-03,
          7.7541e-01, 9.7933e-03]],
        [[7.0514e-03, 2.1769e-03, 1.4872e-04,  ..., 8.2758e-03,
          1.1957e-02, 9.9149e-01],
         [6.3449e-03, 4.5625e-04, 1.4872e-04,  ..., 5.8691e-03,
          7.9550e-03, 2.5450e-03],
         [9.8026e-01, 4.5625e-04, 1.4872e-04,  ..., 9.7999e-01,
          9.7091e-01, 2.6343e-03],
         [6.3449e-03, 9.9691e-01, 9.9955e-01,  ..., 5.8691e-03,
          9.1811e-03, 3.3336e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 319:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9655e-01, 1.1437e-03, 2.9372e-03,  ..., 9.9786e-01,
          7.5188e-03, 1.2010e-03],
         [1.1392e-03, 1.1437e-03, 2.9372e-03,  ..., 7.1488e-04,
          4.7591e-03, 1.2010e-03],
         [1.1392e-03, 1.1437e-03, 5.7207e-03,  ..., 7.1488e-04,
          9.8296e-01, 1.2010e-03],
         [1.1757e-03, 9.9657e-01, 9.8840e-01,  ..., 7.1488e-04,
          4.7591e-03, 9.9640e-01]],
        [[8.8477e-04, 2.6019e-03, 1.8698e-03,  ..., 2.1756e-03,
          1.0608e-03, 8.6295e-04],
         [8.8477e-04, 1.7637e-03, 1.8698e-03,  ..., 2.1756e-03,
          1.0608e-03, 8.6295e-04],
         [9.9735e-01, 1.7637e-03, 1.8698e-03,  ..., 9.9347e-01,
          9.9682e-01, 9.9741e-01],
         [8.8477e-04, 9.9387e-01, 9.9439e-01,  ..., 2.1756e-03,
          1.0608e-03, 8.6295e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.5505e-03, 1.4729e-03, 9.9705e-01,  ..., 4.6831e-03,
          1.7175e-04, 4.7893e-03],
         [5.5505e-03, 6.1583e-04, 8.4207e-04,  ..., 4.6831e-03,
          1.7175e-04, 4.7893e-03],
         [9.8335e-01, 6.1583e-04, 8.4207e-04,  ..., 9.8595e-01,
          1.7175e-04, 9.8563e-01],
         [5.5505e-03, 9.9730e-01, 1.2667e-03,  ..., 4.6831e-03,
          9.9948e-01, 4.7893e-03]],
        [[9.6145e-03, 2.4336e-04, 4.8982e-04,  ..., 6.8583e-03,
          6.2827e-03, 9.9863e-01],
         [9.6145e-03, 2.4336e-04, 4.8982e-04,  ..., 6.8583e-03,
          5.5268e-03, 4.5725e-04],
         [9.6196e-01, 2.4336e-04, 4.8982e-04,  ..., 9.7859e-01,
          9.8266e-01, 4.5725e-04],
         [1.8813e-02, 9.9927e-01, 9.9853e-01,  ..., 7.6905e-03,
          5.5268e-03, 4.5725e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 320:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:15,382 [Process: 0] Synchronize training processes
2024-08-18 15:08:15,383 [Process: 0] Evaluating...
2024-08-18 15:08:15,384 [Process: 0] EPOCH 320:
2024-08-18 15:08:15,386 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:16,530 [Process: 0] Synchronize training processes
2024-08-18 15:08:16,530 [Process: 0] Evaluating...
2024-08-18 15:08:16,532 [Process: 0] EPOCH 321:
2024-08-18 15:08:16,534 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7857e-01, 2.8968e-03, 8.9575e-04,  ..., 9.9802e-01,
          9.9953e-04, 6.7026e-04],
         [4.1284e-03, 2.8968e-03, 8.9575e-04,  ..., 6.2539e-04,
          9.9953e-04, 6.7026e-04],
         [1.1335e-02, 2.8968e-03, 8.9575e-04,  ..., 7.2502e-04,
          9.9700e-01, 6.7026e-04],
         [5.9672e-03, 9.9131e-01, 9.9731e-01,  ..., 6.2539e-04,
          9.9953e-04, 9.9799e-01]],
        [[8.6167e-04, 1.4617e-03, 1.0752e-03,  ..., 9.4933e-04,
          4.6441e-04, 1.0109e-03],
         [8.6167e-04, 1.4617e-03, 1.0752e-03,  ..., 9.4933e-04,
          4.6441e-04, 1.0109e-03],
         [9.9741e-01, 1.4617e-03, 1.0752e-03,  ..., 9.4933e-04,
          9.9861e-01, 9.9697e-01],
         [8.6167e-04, 9.9561e-01, 9.9677e-01,  ..., 9.9715e-01,
          4.6441e-04, 1.0109e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.9257e-03, 5.2297e-05, 9.9459e-01,  ..., 2.6112e-03,
          1.7357e-03, 4.6061e-03],
         [7.4251e-03, 5.2297e-05, 8.3148e-04,  ..., 2.6112e-03,
          5.1902e-04, 4.6061e-03],
         [9.7510e-01, 5.2297e-05, 8.3148e-04,  ..., 9.9217e-01,
          5.1902e-04, 9.8618e-01],
         [9.5491e-03, 9.9984e-01, 3.7450e-03,  ..., 2.6112e-03,
          9.9723e-01, 4.6061e-03]],
        [[3.9609e-03, 3.9331e-05, 8.6365e-05,  ..., 3.9773e-03,
          3.1373e-03, 9.9970e-01],
         [3.9609e-03, 3.9331e-05, 8.6365e-05,  ..., 3.9773e-03,
          3.1373e-03, 9.9457e-05],
         [9.8812e-01, 3.9331e-05, 8.6365e-05,  ..., 9.8807e-01,
          9.9059e-01, 9.9457e-05],
         [3.9609e-03, 9.9988e-01, 9.9974e-01,  ..., 3.9773e-03,
          3.1373e-03, 9.9457e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 321:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9938e-01, 1.3770e-03, 1.4840e-03,  ..., 9.9597e-01,
          1.6520e-03, 1.6826e-03],
         [2.0612e-04, 1.3770e-03, 1.4840e-03,  ..., 1.1544e-03,
          1.6520e-03, 1.6826e-03],
         [2.0612e-04, 1.3770e-03, 1.4840e-03,  ..., 1.7233e-03,
          9.9504e-01, 1.6826e-03],
         [2.0612e-04, 9.9587e-01, 9.9555e-01,  ..., 1.1544e-03,
          1.6520e-03, 9.9495e-01]],
        [[5.3497e-04, 5.2974e-04, 7.2107e-04,  ..., 7.6034e-03,
          8.9779e-04, 1.7981e-03],
         [5.3497e-04, 5.2974e-04, 5.0970e-04,  ..., 3.2107e-03,
          8.9779e-04, 1.7981e-03],
         [9.9840e-01, 5.2974e-04, 5.0970e-04,  ..., 3.2107e-03,
          9.9731e-01, 9.9461e-01],
         [5.3497e-04, 9.9841e-01, 9.9826e-01,  ..., 9.8598e-01,
          8.9779e-04, 1.7981e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.0558e-03, 5.4544e-05, 9.9602e-01,  ..., 2.1649e-03,
          2.7882e-04, 6.6721e-03],
         [6.0558e-03, 5.4544e-05, 1.3004e-03,  ..., 2.1649e-03,
          2.7882e-04, 6.6721e-03],
         [9.8032e-01, 5.4544e-05, 1.3782e-03,  ..., 9.9351e-01,
          2.7882e-04, 9.7751e-01],
         [7.5677e-03, 9.9984e-01, 1.3004e-03,  ..., 2.1649e-03,
          9.9916e-01, 9.1447e-03]],
        [[6.7987e-03, 6.4620e-05, 6.6502e-05,  ..., 2.3711e-03,
          4.2884e-03, 9.9871e-01],
         [6.7987e-03, 6.4620e-05, 6.6502e-05,  ..., 2.3711e-03,
          4.2884e-03, 4.3041e-04],
         [9.7664e-01, 6.4620e-05, 6.6502e-05,  ..., 9.9289e-01,
          9.8713e-01, 4.3041e-04],
         [9.7666e-03, 9.9981e-01, 9.9980e-01,  ..., 2.3711e-03,
          4.2884e-03, 4.3041e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:17,681 [Process: 0] Synchronize training processes
2024-08-18 15:08:17,682 [Process: 0] Evaluating...
2024-08-18 15:08:17,686 [Process: 0] EPOCH 322:
2024-08-18 15:08:17,687 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 322:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9807e-01, 1.8658e-03, 8.3750e-04,  ..., 9.8209e-01,
          1.7757e-03, 1.6492e-03],
         [6.4174e-04, 1.8658e-03, 8.3750e-04,  ..., 3.3779e-03,
          1.7757e-03, 1.6492e-03],
         [6.4174e-04, 1.8658e-03, 8.3750e-04,  ..., 1.1151e-02,
          9.9467e-01, 1.6492e-03],
         [6.4174e-04, 9.9440e-01, 9.9749e-01,  ..., 3.3779e-03,
          1.7757e-03, 9.9505e-01]],
        [[7.3460e-04, 1.3048e-03, 6.0028e-03,  ..., 1.4831e-03,
          1.4639e-03, 4.0867e-03],
         [7.3460e-04, 1.3048e-03, 4.9200e-03,  ..., 1.4831e-03,
          1.4639e-03, 4.0867e-03],
         [9.9780e-01, 1.3048e-03, 4.9200e-03,  ..., 1.4831e-03,
          9.9561e-01, 9.8774e-01],
         [7.3460e-04, 9.9609e-01, 9.8416e-01,  ..., 9.9555e-01,
          1.4639e-03, 4.0867e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7646e-03, 4.8237e-04, 9.9960e-01,  ..., 2.2423e-03,
          3.4825e-05, 4.8426e-03],
         [2.7646e-03, 4.8237e-04, 1.3332e-04,  ..., 2.2423e-03,
          3.4825e-05, 4.8426e-03],
         [9.9171e-01, 4.8237e-04, 1.3332e-04,  ..., 9.9327e-01,
          3.4825e-05, 9.8505e-01],
         [2.7646e-03, 9.9855e-01, 1.3332e-04,  ..., 2.2423e-03,
          9.9990e-01, 5.2657e-03]],
        [[7.1065e-03, 2.7307e-04, 1.9310e-04,  ..., 5.1364e-03,
          3.5061e-03, 9.9653e-01],
         [7.1065e-03, 2.7307e-04, 1.9310e-04,  ..., 5.1364e-03,
          3.5061e-03, 1.1215e-03],
         [9.7524e-01, 2.7307e-04, 1.9310e-04,  ..., 9.8409e-01,
          9.8948e-01, 1.2268e-03],
         [1.0552e-02, 9.9918e-01, 9.9942e-01,  ..., 5.6332e-03,
          3.5061e-03, 1.1215e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 323:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9879e-01, 1.0944e-03, 3.6835e-03,  ..., 9.9981e-01,
          1.3212e-03, 2.1366e-03],
         [4.0498e-04, 1.0944e-03, 3.6835e-03,  ..., 6.2386e-05,
          1.3212e-03, 2.1366e-03],
         [4.0498e-04, 1.0944e-03, 3.6835e-03,  ..., 6.2386e-05,
          9.9604e-01, 2.6378e-03],
         [4.0498e-04, 9.9672e-01, 9.8895e-01,  ..., 6.2386e-05,
          1.3212e-03, 9.9309e-01]],
        [[1.3839e-03, 3.4245e-03, 7.8263e-04,  ..., 1.7459e-03,
          1.5768e-03, 2.3002e-03],
         [1.3839e-03, 3.4245e-03, 7.8263e-04,  ..., 1.7459e-03,
          1.5768e-03, 2.3002e-03],
         [9.9585e-01, 4.3031e-03, 7.8263e-04,  ..., 1.7459e-03,
          9.9527e-01, 9.9310e-01],
         [1.3839e-03, 9.8885e-01, 9.9765e-01,  ..., 9.9476e-01,
          1.5768e-03, 2.3002e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:18,832 [Process: 0] Synchronize training processes
2024-08-18 15:08:18,832 [Process: 0] Evaluating...
2024-08-18 15:08:18,834 [Process: 0] EPOCH 323:
2024-08-18 15:08:18,835 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:19,983 [Process: 0] Synchronize training processes
2024-08-18 15:08:19,983 [Process: 0] Evaluating...
2024-08-18 15:08:19,985 [Process: 0] EPOCH 324:
2024-08-18 15:08:19,987 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5667e-03, 5.2011e-04, 9.9593e-01,  ..., 2.0752e-03,
          1.2704e-04, 6.0479e-03],
         [2.5667e-03, 5.2011e-04, 1.2807e-03,  ..., 2.0752e-03,
          1.2704e-04, 6.0479e-03],
         [9.9230e-01, 5.2011e-04, 1.2807e-03,  ..., 9.9377e-01,
          1.2704e-04, 9.8083e-01],
         [2.5667e-03, 9.9844e-01, 1.5057e-03,  ..., 2.0752e-03,
          9.9962e-01, 7.0695e-03]],
        [[6.0662e-03, 2.7450e-04, 1.8770e-04,  ..., 6.0617e-03,
          2.6749e-03, 9.9902e-01],
         [5.8523e-03, 2.7450e-04, 1.8770e-04,  ..., 6.0617e-03,
          2.6749e-03, 3.2756e-04],
         [9.8223e-01, 2.7450e-04, 1.8770e-04,  ..., 9.8071e-01,
          9.9198e-01, 3.2756e-04],
         [5.8523e-03, 9.9918e-01, 9.9944e-01,  ..., 7.1692e-03,
          2.6749e-03, 3.2756e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 324:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9885e-01, 1.1913e-03, 3.6901e-03,  ..., 9.6929e-01,
          1.2897e-03, 3.1518e-03],
         [3.8373e-04, 1.1913e-03, 3.6901e-03,  ..., 5.1699e-03,
          1.2897e-03, 3.1518e-03],
         [3.8373e-04, 1.1913e-03, 3.7914e-03,  ..., 2.0054e-02,
          9.9613e-01, 3.4433e-03],
         [3.8373e-04, 9.9643e-01, 9.8883e-01,  ..., 5.4897e-03,
          1.2897e-03, 9.9025e-01]],
        [[9.3915e-04, 3.2933e-03, 6.7414e-04,  ..., 7.4051e-03,
          8.9455e-04, 1.3370e-03],
         [9.3915e-04, 3.2933e-03, 6.7414e-04,  ..., 4.4109e-03,
          8.9455e-04, 1.3370e-03],
         [9.9718e-01, 3.3226e-03, 6.7414e-04,  ..., 4.4109e-03,
          9.9732e-01, 9.9599e-01],
         [9.3915e-04, 9.9009e-01, 9.9798e-01,  ..., 9.8377e-01,
          8.9455e-04, 1.3370e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0231e-03, 3.5921e-04, 9.9503e-01,  ..., 3.2140e-03,
          4.1636e-04, 4.2762e-03],
         [3.9245e-03, 3.5921e-04, 1.0580e-03,  ..., 3.1536e-03,
          4.1636e-04, 4.2762e-03],
         [9.8713e-01, 3.5921e-04, 1.0580e-03,  ..., 9.9048e-01,
          4.1636e-04, 9.8717e-01],
         [3.9245e-03, 9.9892e-01, 2.8576e-03,  ..., 3.1536e-03,
          9.9875e-01, 4.2762e-03]],
        [[7.5139e-03, 8.4191e-05, 1.5505e-04,  ..., 8.5775e-03,
          3.4122e-03, 9.9455e-01],
         [7.5139e-03, 8.4191e-05, 1.5505e-04,  ..., 7.6319e-03,
          3.4122e-03, 1.5038e-03],
         [9.7582e-01, 8.4191e-05, 1.5505e-04,  ..., 9.7371e-01,
          9.8976e-01, 1.5038e-03],
         [9.1502e-03, 9.9975e-01, 9.9953e-01,  ..., 1.0078e-02,
          3.4122e-03, 2.4453e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 325:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9810e-01, 1.4687e-03, 4.4729e-03,  ..., 9.9988e-01,
          2.7526e-04, 1.5022e-03],
         [6.3180e-04, 1.4687e-03, 4.4729e-03,  ..., 3.9478e-05,
          2.7526e-04, 1.5022e-03],
         [6.3180e-04, 1.4687e-03, 9.8197e-03,  ..., 3.9478e-05,
          9.9917e-01, 1.5022e-03],
         [6.3180e-04, 9.9559e-01, 9.8123e-01,  ..., 3.9478e-05,
          2.7526e-04, 9.9549e-01]],
        [[8.0344e-04, 1.4230e-03, 9.5931e-03,  ..., 1.4639e-03,
          4.9551e-04, 3.4453e-03],
         [8.0344e-04, 1.4230e-03, 7.1701e-03,  ..., 1.4639e-03,
          4.9551e-04, 1.9141e-03],
         [9.9759e-01, 1.4230e-03, 9.3468e-03,  ..., 1.4639e-03,
          9.9851e-01, 9.9273e-01],
         [8.0344e-04, 9.9573e-01, 9.7389e-01,  ..., 9.9561e-01,
          4.9551e-04, 1.9141e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:21,130 [Process: 0] Synchronize training processes
2024-08-18 15:08:21,130 [Process: 0] Evaluating...
2024-08-18 15:08:21,132 [Process: 0] EPOCH 325:
2024-08-18 15:08:21,134 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:22,273 [Process: 0] Synchronize training processes
2024-08-18 15:08:22,274 [Process: 0] Evaluating...
2024-08-18 15:08:22,276 [Process: 0] EPOCH 326:
2024-08-18 15:08:22,278 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7718e-03, 6.2828e-05, 9.9731e-01,  ..., 3.1255e-03,
          9.9064e-01, 2.9094e-03],
         [1.7718e-03, 6.2828e-05, 8.6907e-04,  ..., 3.1255e-03,
          1.2861e-03, 2.9094e-03],
         [9.9468e-01, 6.2828e-05, 8.6907e-04,  ..., 9.9062e-01,
          1.2861e-03, 9.9127e-01],
         [1.7718e-03, 9.9981e-01, 9.4963e-04,  ..., 3.1255e-03,
          6.7886e-03, 2.9094e-03]],
        [[6.1882e-03, 1.4717e-04, 3.2895e-04,  ..., 3.5819e-03,
          3.1986e-03, 9.9910e-01],
         [6.1755e-03, 1.4717e-04, 3.2895e-04,  ..., 3.5819e-03,
          3.1986e-03, 3.0106e-04],
         [9.8146e-01, 1.4717e-04, 3.2895e-04,  ..., 9.8925e-01,
          9.9040e-01, 3.0106e-04],
         [6.1755e-03, 9.9956e-01, 9.9901e-01,  ..., 3.5819e-03,
          3.1986e-03, 3.0106e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 326:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9915e-01, 8.3861e-03, 9.3849e-04,  ..., 9.9849e-01,
          2.2302e-03, 6.7853e-03],
         [2.8252e-04, 7.3103e-03, 9.3849e-04,  ..., 5.0298e-04,
          2.0884e-03, 6.7853e-03],
         [2.8252e-04, 1.3382e-02, 9.3849e-04,  ..., 5.0298e-04,
          9.9359e-01, 1.2680e-02],
         [2.8252e-04, 9.7092e-01, 9.9718e-01,  ..., 5.0298e-04,
          2.0884e-03, 9.7375e-01]],
        [[1.3910e-03, 5.3091e-04, 1.4109e-03,  ..., 1.9336e-03,
          6.0543e-04, 1.8570e-03],
         [1.1688e-03, 5.3091e-04, 1.4109e-03,  ..., 1.9336e-03,
          6.0543e-04, 1.7190e-03],
         [9.9627e-01, 5.3091e-04, 1.4109e-03,  ..., 1.9336e-03,
          9.9818e-01, 9.9471e-01],
         [1.1688e-03, 9.9841e-01, 9.9577e-01,  ..., 9.9420e-01,
          6.0543e-04, 1.7190e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3816e-03, 1.6332e-04, 9.8842e-01,  ..., 2.9003e-03,
          1.6268e-03, 4.6008e-03],
         [2.3816e-03, 1.6332e-04, 3.2755e-03,  ..., 2.9003e-03,
          1.1254e-03, 4.6008e-03],
         [9.9286e-01, 1.6332e-04, 5.0274e-03,  ..., 9.9130e-01,
          1.1254e-03, 9.8620e-01],
         [2.3816e-03, 9.9951e-01, 3.2755e-03,  ..., 2.9003e-03,
          9.9612e-01, 4.6008e-03]],
        [[6.6016e-03, 1.4225e-04, 1.9274e-04,  ..., 3.4090e-03,
          6.2738e-03, 9.9775e-01],
         [6.6016e-03, 1.4225e-04, 1.9274e-04,  ..., 3.4090e-03,
          5.5875e-03, 7.5037e-04],
         [9.7745e-01, 1.4225e-04, 1.9274e-04,  ..., 9.8977e-01,
          9.8252e-01, 7.5037e-04],
         [9.3463e-03, 9.9957e-01, 9.9942e-01,  ..., 3.4090e-03,
          5.6144e-03, 7.5037e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 327:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:23,423 [Process: 0] Synchronize training processes
2024-08-18 15:08:23,424 [Process: 0] Evaluating...
2024-08-18 15:08:23,425 [Process: 0] EPOCH 327:
2024-08-18 15:08:23,427 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:24,571 [Process: 0] Synchronize training processes
2024-08-18 15:08:24,571 [Process: 0] Evaluating...
2024-08-18 15:08:24,573 [Process: 0] EPOCH 328:
2024-08-18 15:08:24,574 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9965e-01, 6.3452e-03, 1.9292e-03,  ..., 9.9975e-01,
          1.9246e-03, 4.9819e-03],
         [1.1690e-04, 5.1390e-03, 1.8052e-03,  ..., 8.2980e-05,
          1.9246e-03, 4.9819e-03],
         [1.1690e-04, 8.6193e-03, 1.8052e-03,  ..., 8.2980e-05,
          9.9423e-01, 1.0256e-02],
         [1.1690e-04, 9.7990e-01, 9.9446e-01,  ..., 8.2980e-05,
          1.9246e-03, 9.7978e-01]],
        [[1.6004e-03, 1.8452e-03, 7.1157e-04,  ..., 8.3102e-04,
          5.6884e-04, 1.4802e-03],
         [1.6004e-03, 1.8452e-03, 7.1157e-04,  ..., 8.3102e-04,
          5.6884e-04, 1.4802e-03],
         [9.9520e-01, 1.8452e-03, 7.1157e-04,  ..., 8.3102e-04,
          9.9829e-01, 9.9556e-01],
         [1.6004e-03, 9.9446e-01, 9.9787e-01,  ..., 9.9751e-01,
          5.6884e-04, 1.4802e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6912e-03, 5.6784e-05, 9.9630e-01,  ..., 4.5479e-03,
          1.4927e-04, 2.6676e-03],
         [7.2856e-03, 5.6784e-05, 9.5745e-04,  ..., 4.5479e-03,
          1.4927e-04, 2.6676e-03],
         [9.7425e-01, 5.6784e-05, 9.5745e-04,  ..., 9.8636e-01,
          1.4927e-04, 9.9200e-01],
         [9.7735e-03, 9.9983e-01, 1.7838e-03,  ..., 4.5479e-03,
          9.9955e-01, 2.6676e-03]],
        [[1.1850e-02, 1.5400e-04, 3.3513e-05,  ..., 4.3800e-03,
          3.7688e-03, 9.9874e-01],
         [1.1850e-02, 1.5400e-04, 3.3513e-05,  ..., 4.3800e-03,
          3.7688e-03, 4.2091e-04],
         [9.3994e-01, 1.5400e-04, 3.3513e-05,  ..., 9.8686e-01,
          9.8869e-01, 4.2091e-04],
         [3.6364e-02, 9.9954e-01, 9.9990e-01,  ..., 4.3800e-03,
          3.7688e-03, 4.2091e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 328:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9939e-01, 2.0529e-03, 1.1694e-03,  ..., 9.9737e-01,
          3.4720e-03, 2.5942e-03],
         [2.0318e-04, 1.3701e-03, 1.1694e-03,  ..., 8.7574e-04,
          3.4720e-03, 2.5942e-03],
         [2.0318e-04, 1.3701e-03, 1.1694e-03,  ..., 8.7574e-04,
          9.8958e-01, 3.4023e-03],
         [2.0318e-04, 9.9521e-01, 9.9649e-01,  ..., 8.7574e-04,
          3.4720e-03, 9.9141e-01]],
        [[1.3178e-03, 2.7353e-03, 4.0125e-03,  ..., 5.1002e-03,
          1.3183e-03, 1.4858e-03],
         [1.3178e-03, 2.7353e-03, 4.0125e-03,  ..., 4.4177e-03,
          1.3183e-03, 1.4858e-03],
         [9.9605e-01, 2.8726e-03, 5.9975e-03,  ..., 4.4177e-03,
          9.9604e-01, 9.9554e-01],
         [1.3178e-03, 9.9166e-01, 9.8598e-01,  ..., 9.8606e-01,
          1.3183e-03, 1.4858e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.7081e-03, 1.1470e-03, 9.9893e-01,  ..., 2.2772e-03,
          4.2475e-04, 4.1979e-03],
         [7.7081e-03, 1.0932e-03, 3.5558e-04,  ..., 2.2772e-03,
          4.2475e-04, 4.1979e-03],
         [9.7377e-01, 1.0932e-03, 3.5558e-04,  ..., 9.9317e-01,
          4.2475e-04, 9.8741e-01],
         [1.0809e-02, 9.9667e-01, 3.5558e-04,  ..., 2.2772e-03,
          9.9873e-01, 4.1979e-03]],
        [[1.2362e-02, 1.5324e-04, 3.5364e-04,  ..., 6.2316e-03,
          3.1781e-03, 9.9962e-01],
         [1.1260e-02, 1.5324e-04, 3.5364e-04,  ..., 6.2316e-03,
          3.1781e-03, 1.2656e-04],
         [9.5097e-01, 1.5324e-04, 3.5364e-04,  ..., 9.7988e-01,
          9.9047e-01, 1.2656e-04],
         [2.5411e-02, 9.9954e-01, 9.9894e-01,  ..., 7.6571e-03,
          3.1781e-03, 1.2656e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:25,720 [Process: 0] Synchronize training processes
2024-08-18 15:08:25,720 [Process: 0] Evaluating...
2024-08-18 15:08:25,722 [Process: 0] EPOCH 329:
2024-08-18 15:08:25,724 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 329:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9805e-01, 3.5836e-03, 7.1822e-03,  ..., 9.9879e-01,
          4.3103e-04, 9.7803e-03],
         [6.5076e-04, 3.3059e-03, 3.7599e-03,  ..., 4.0432e-04,
          4.3103e-04, 5.6914e-03],
         [6.5076e-04, 4.3312e-03, 3.7599e-03,  ..., 4.0432e-04,
          9.9871e-01, 9.7703e-03],
         [6.5076e-04, 9.8878e-01, 9.8530e-01,  ..., 4.0432e-04,
          4.3103e-04, 9.7476e-01]],
        [[9.7616e-04, 1.6038e-03, 3.9238e-03,  ..., 1.4718e-03,
          1.6549e-03, 8.9614e-04],
         [9.7616e-04, 1.6038e-03, 2.9723e-03,  ..., 1.4062e-03,
          1.6549e-03, 8.9614e-04],
         [9.9707e-01, 1.6038e-03, 2.9723e-03,  ..., 1.4062e-03,
          9.9504e-01, 9.9731e-01],
         [9.7616e-04, 9.9519e-01, 9.9013e-01,  ..., 9.9572e-01,
          1.6549e-03, 8.9614e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.1794e-03, 5.1137e-04, 9.9912e-01,  ..., 2.0092e-03,
          1.2429e-04, 3.9275e-03],
         [6.1794e-03, 5.1137e-04, 2.9225e-04,  ..., 2.0092e-03,
          1.2429e-04, 3.9275e-03],
         [9.8032e-01, 5.1137e-04, 2.9225e-04,  ..., 9.9397e-01,
          1.2429e-04, 9.8822e-01],
         [7.3241e-03, 9.9847e-01, 2.9225e-04,  ..., 2.0092e-03,
          9.9963e-01, 3.9275e-03]],
        [[1.0595e-02, 6.5037e-04, 1.9775e-05,  ..., 3.2597e-03,
          6.8795e-03, 9.8314e-01],
         [1.0424e-02, 6.5037e-04, 1.9775e-05,  ..., 3.2597e-03,
          5.8991e-03, 4.3798e-03],
         [9.5786e-01, 6.5037e-04, 1.9775e-05,  ..., 9.9022e-01,
          9.8103e-01, 5.0572e-03],
         [2.1122e-02, 9.9805e-01, 9.9994e-01,  ..., 3.2597e-03,
          6.1893e-03, 7.4193e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 330:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9950e-01, 7.1418e-03, 1.0796e-03,  ..., 9.8476e-01,
          9.7003e-04, 1.3948e-03],
         [1.6711e-04, 5.0291e-03, 1.0796e-03,  ..., 3.4426e-03,
          9.7003e-04, 1.3948e-03],
         [1.6711e-04, 7.4283e-03, 1.0796e-03,  ..., 4.2966e-03,
          9.9709e-01, 1.3948e-03],
         [1.6711e-04, 9.8040e-01, 9.9676e-01,  ..., 7.5007e-03,
          9.7003e-04, 9.9582e-01]],
        [[1.8625e-03, 2.3938e-03, 1.4366e-03,  ..., 5.5981e-04,
          5.2848e-04, 1.8048e-03],
         [1.8625e-03, 2.3938e-03, 1.4366e-03,  ..., 5.5981e-04,
          5.2848e-04, 1.8048e-03],
         [9.9441e-01, 2.3938e-03, 1.4366e-03,  ..., 5.5981e-04,
          9.9841e-01, 9.9459e-01],
         [1.8625e-03, 9.9282e-01, 9.9569e-01,  ..., 9.9832e-01,
          5.2848e-04, 1.8048e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:26,867 [Process: 0] Synchronize training processes
2024-08-18 15:08:26,868 [Process: 0] Evaluating...
2024-08-18 15:08:26,869 [Process: 0] EPOCH 330:
2024-08-18 15:08:26,871 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:28,015 [Process: 0] Synchronize training processes
2024-08-18 15:08:28,016 [Process: 0] Evaluating...
2024-08-18 15:08:28,017 [Process: 0] EPOCH 331:
2024-08-18 15:08:28,019 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1673e-03, 1.3754e-03, 9.9084e-01,  ..., 4.4127e-03,
          9.6086e-01, 5.0145e-03],
         [4.1673e-03, 1.3754e-03, 1.7086e-03,  ..., 4.4127e-03,
          3.3286e-03, 5.0145e-03],
         [9.8750e-01, 1.9387e-03, 1.7086e-03,  ..., 9.8676e-01,
          3.3286e-03, 9.8453e-01],
         [4.1673e-03, 9.9531e-01, 5.7475e-03,  ..., 4.4127e-03,
          3.2481e-02, 5.4402e-03]],
        [[8.7235e-03, 2.0968e-05, 6.9510e-05,  ..., 8.0154e-03,
          3.7083e-03, 9.9414e-01],
         [8.3714e-03, 2.0968e-05, 6.9510e-05,  ..., 7.5582e-03,
          3.7083e-03, 1.9535e-03],
         [9.7453e-01, 2.0968e-05, 6.9510e-05,  ..., 9.7365e-01,
          9.8888e-01, 1.9535e-03],
         [8.3714e-03, 9.9994e-01, 9.9979e-01,  ..., 1.0780e-02,
          3.7083e-03, 1.9535e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 331:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9829e-01, 5.5810e-03, 8.5542e-04,  ..., 9.6663e-01,
          6.0934e-04, 3.7694e-03],
         [5.6849e-04, 3.3806e-03, 8.5542e-04,  ..., 6.4134e-03,
          6.0934e-04, 1.8832e-03],
         [5.6849e-04, 3.7109e-03, 8.5542e-04,  ..., 1.7275e-02,
          9.9817e-01, 1.8832e-03],
         [5.6849e-04, 9.8733e-01, 9.9743e-01,  ..., 9.6863e-03,
          6.0934e-04, 9.9246e-01]],
        [[5.7693e-03, 5.9080e-04, 2.0869e-03,  ..., 8.3091e-04,
          6.5385e-04, 3.3423e-03],
         [3.8533e-03, 5.9080e-04, 2.0358e-03,  ..., 8.3091e-04,
          6.5385e-04, 2.4809e-03],
         [9.8652e-01, 5.9080e-04, 2.2093e-03,  ..., 8.3091e-04,
          9.9804e-01, 9.9170e-01],
         [3.8533e-03, 9.9823e-01, 9.9367e-01,  ..., 9.9751e-01,
          6.5385e-04, 2.4809e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6627e-03, 1.9947e-03, 9.9827e-01,  ..., 5.0788e-03,
          9.9800e-01, 4.4789e-03],
         [7.9808e-03, 7.6258e-04, 5.7800e-04,  ..., 5.0788e-03,
          6.6736e-04, 4.4789e-03],
         [9.7309e-01, 7.6258e-04, 5.7800e-04,  ..., 9.8476e-01,
          6.6736e-04, 9.8656e-01],
         [1.0267e-02, 9.9648e-01, 5.7800e-04,  ..., 5.0788e-03,
          6.6736e-04, 4.4789e-03]],
        [[1.3738e-02, 1.1830e-04, 1.9503e-05,  ..., 4.9150e-03,
          2.9183e-03, 9.9880e-01],
         [1.0801e-02, 1.1830e-04, 1.9503e-05,  ..., 4.9150e-03,
          2.9183e-03, 3.8578e-04],
         [9.6466e-01, 1.1830e-04, 1.9503e-05,  ..., 9.8410e-01,
          9.9124e-01, 3.8578e-04],
         [1.0801e-02, 9.9965e-01, 9.9994e-01,  ..., 6.0700e-03,
          2.9183e-03, 4.3111e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 332:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9716e-01, 2.5123e-03, 7.0247e-03,  ..., 9.9748e-01,
          6.7186e-04, 3.9059e-04],
         [8.6968e-04, 2.3220e-03, 7.0247e-03,  ..., 8.3894e-04,
          6.7186e-04, 3.9059e-04],
         [8.6968e-04, 2.3220e-03, 2.6530e-02,  ..., 8.3894e-04,
          9.9798e-01, 3.9059e-04],
         [1.1010e-03, 9.9284e-01, 9.5942e-01,  ..., 8.3894e-04,
          6.7186e-04, 9.9883e-01]],
        [[3.8597e-02, 6.2716e-04, 1.8645e-03,  ..., 2.5246e-03,
          2.2947e-03, 8.4778e-03],
         [6.9603e-03, 6.2716e-04, 1.7240e-03,  ..., 2.5246e-03,
          2.2947e-03, 4.1785e-03],
         [9.4748e-01, 6.2716e-04, 1.7240e-03,  ..., 2.7496e-03,
          9.9312e-01, 9.8317e-01],
         [6.9603e-03, 9.9812e-01, 9.9469e-01,  ..., 9.9220e-01,
          2.2947e-03, 4.1785e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:29,160 [Process: 0] Synchronize training processes
2024-08-18 15:08:29,160 [Process: 0] Evaluating...
2024-08-18 15:08:29,165 [Process: 0] EPOCH 332:
2024-08-18 15:08:29,167 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:30,308 [Process: 0] Synchronize training processes
2024-08-18 15:08:30,308 [Process: 0] Evaluating...
2024-08-18 15:08:30,310 [Process: 0] EPOCH 333:
2024-08-18 15:08:30,312 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9215e-03, 7.1113e-04, 9.5764e-01,  ..., 4.6621e-03,
          9.9599e-01, 1.0674e-02],
         [4.9215e-03, 3.1612e-04, 4.9689e-03,  ..., 4.6621e-03,
          1.2232e-03, 1.0674e-02],
         [9.8524e-01, 3.1612e-04, 4.9689e-03,  ..., 9.8601e-01,
          1.2232e-03, 9.5757e-01],
         [4.9215e-03, 9.9866e-01, 3.2420e-02,  ..., 4.6621e-03,
          1.5678e-03, 2.1078e-02]],
        [[4.4199e-02, 1.9385e-05, 1.3489e-04,  ..., 4.4408e-03,
          4.0164e-03, 9.9540e-01],
         [1.4209e-02, 1.9385e-05, 1.3489e-04,  ..., 4.4408e-03,
          4.0164e-03, 1.5350e-03],
         [9.2738e-01, 1.9385e-05, 1.3489e-04,  ..., 9.8668e-01,
          9.8795e-01, 1.5350e-03],
         [1.4209e-02, 9.9994e-01, 9.9960e-01,  ..., 4.4408e-03,
          4.0164e-03, 1.5350e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 333:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9659e-01, 7.5437e-03, 2.4982e-03,  ..., 9.9695e-01,
          6.9771e-04, 2.4745e-03],
         [9.3914e-04, 3.8807e-03, 2.4982e-03,  ..., 1.0156e-03,
          6.9771e-04, 2.4745e-03],
         [9.3914e-04, 4.5742e-03, 3.9543e-03,  ..., 1.0156e-03,
          9.9791e-01, 4.8795e-03],
         [1.5357e-03, 9.8400e-01, 9.9105e-01,  ..., 1.0156e-03,
          6.9771e-04, 9.9017e-01]],
        [[1.9112e-03, 1.5238e-03, 1.3316e-03,  ..., 4.1849e-03,
          2.8939e-03, 7.1591e-03],
         [1.9112e-03, 1.5238e-03, 1.3316e-03,  ..., 3.2240e-03,
          2.8939e-03, 5.6732e-03],
         [9.9427e-01, 1.5238e-03, 1.3316e-03,  ..., 4.0606e-03,
          9.9132e-01, 9.8149e-01],
         [1.9112e-03, 9.9543e-01, 9.9601e-01,  ..., 9.8853e-01,
          2.8939e-03, 5.6732e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7314e-03, 4.1931e-04, 9.9349e-01,  ..., 3.5234e-03,
          9.9535e-01, 7.1934e-03],
         [4.7314e-03, 1.8017e-04, 5.6752e-04,  ..., 3.5234e-03,
          1.5054e-03, 7.1934e-03],
         [9.8581e-01, 1.8017e-04, 5.6752e-04,  ..., 9.8943e-01,
          1.5054e-03, 9.7600e-01],
         [4.7314e-03, 9.9922e-01, 5.3724e-03,  ..., 3.5234e-03,
          1.6416e-03, 9.6151e-03]],
        [[6.3610e-02, 1.1111e-04, 2.3074e-05,  ..., 7.5285e-03,
          4.2133e-03, 9.9967e-01],
         [1.6396e-02, 8.4710e-05, 2.3074e-05,  ..., 7.5285e-03,
          4.2133e-03, 1.0999e-04],
         [9.0360e-01, 8.4710e-05, 2.3074e-05,  ..., 9.7346e-01,
          9.8736e-01, 1.0999e-04],
         [1.6396e-02, 9.9972e-01, 9.9993e-01,  ..., 1.1479e-02,
          4.2133e-03, 1.0999e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 334:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:31,452 [Process: 0] Synchronize training processes
2024-08-18 15:08:31,453 [Process: 0] Evaluating...
2024-08-18 15:08:31,454 [Process: 0] EPOCH 334:
2024-08-18 15:08:31,456 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:32,597 [Process: 0] Synchronize training processes
2024-08-18 15:08:32,597 [Process: 0] Evaluating...
2024-08-18 15:08:32,599 [Process: 0] EPOCH 335:
2024-08-18 15:08:32,601 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9470e-01, 9.1707e-04, 1.3062e-03,  ..., 9.9934e-01,
          5.1972e-03, 1.6140e-03],
         [1.5810e-03, 9.1707e-04, 1.3062e-03,  ..., 2.1914e-04,
          5.1972e-03, 1.6140e-03],
         [1.5810e-03, 9.1707e-04, 1.3062e-03,  ..., 2.1914e-04,
          9.8441e-01, 1.9778e-03],
         [2.1362e-03, 9.9725e-01, 9.9608e-01,  ..., 2.1914e-04,
          5.1972e-03, 9.9479e-01]],
        [[1.8668e-03, 1.2401e-03, 7.3642e-03,  ..., 1.0813e-03,
          1.0582e-03, 5.6513e-03],
         [1.8668e-03, 1.2401e-03, 2.6606e-03,  ..., 1.0813e-03,
          1.0582e-03, 5.6513e-03],
         [9.9440e-01, 1.2401e-03, 2.6606e-03,  ..., 1.0813e-03,
          9.9683e-01, 9.8305e-01],
         [1.8668e-03, 9.9628e-01, 9.8731e-01,  ..., 9.9676e-01,
          1.0582e-03, 5.6513e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1377e-03, 1.8247e-04, 9.9039e-01,  ..., 6.4904e-03,
          8.7890e-01, 6.6323e-03],
         [4.1377e-03, 1.8247e-04, 2.0469e-03,  ..., 6.4904e-03,
          6.4681e-03, 6.6323e-03],
         [9.8759e-01, 1.8247e-04, 2.0469e-03,  ..., 9.7923e-01,
          6.4681e-03, 9.7705e-01],
         [4.1377e-03, 9.9945e-01, 5.5127e-03,  ..., 7.7881e-03,
          1.0816e-01, 9.6873e-03]],
        [[2.0378e-02, 1.7923e-05, 1.8607e-05,  ..., 3.2190e-03,
          3.3381e-03, 9.9976e-01],
         [1.0574e-02, 1.7923e-05, 1.8607e-05,  ..., 3.2190e-03,
          3.3381e-03, 7.8554e-05],
         [9.5847e-01, 1.7923e-05, 1.8607e-05,  ..., 9.9034e-01,
          9.8999e-01, 7.8554e-05],
         [1.0574e-02, 9.9995e-01, 9.9994e-01,  ..., 3.2190e-03,
          3.3381e-03, 7.8554e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 335:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9914e-01, 2.5432e-03, 1.0627e-03,  ..., 9.9947e-01,
          1.4154e-02, 4.3696e-03],
         [2.8601e-04, 2.5432e-03, 8.5218e-04,  ..., 1.7597e-04,
          6.3133e-03, 4.3696e-03],
         [2.8601e-04, 2.7218e-03, 8.5218e-04,  ..., 1.7597e-04,
          1.0260e-02, 7.4103e-03],
         [2.8601e-04, 9.9219e-01, 9.9723e-01,  ..., 1.7597e-04,
          9.6927e-01, 9.8385e-01]],
        [[2.0903e-03, 1.3419e-03, 2.8147e-02,  ..., 7.4020e-04,
          1.5487e-03, 2.4453e-03],
         [2.0903e-03, 1.3419e-03, 1.0695e-02,  ..., 7.4020e-04,
          1.5487e-03, 2.4453e-03],
         [9.9373e-01, 1.3419e-03, 3.2789e-02,  ..., 7.4020e-04,
          9.9535e-01, 9.9266e-01],
         [2.0903e-03, 9.9597e-01, 9.2837e-01,  ..., 9.9778e-01,
          1.5487e-03, 2.4453e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5465e-03, 1.0918e-03, 9.9989e-01,  ..., 4.0442e-03,
          4.3729e-01, 7.7123e-03],
         [3.5465e-03, 1.0918e-03, 3.6967e-05,  ..., 4.0442e-03,
          6.5451e-03, 7.0539e-03],
         [9.8936e-01, 1.4274e-03, 3.6967e-05,  ..., 9.8787e-01,
          6.5451e-03, 9.7726e-01],
         [3.5465e-03, 9.9639e-01, 3.6967e-05,  ..., 4.0442e-03,
          5.4962e-01, 7.9782e-03]],
        [[1.5263e-02, 1.0222e-05, 1.0506e-04,  ..., 5.6913e-03,
          4.2642e-03, 9.9978e-01],
         [1.1793e-02, 1.0222e-05, 1.0506e-04,  ..., 5.5352e-03,
          4.2642e-03, 7.4567e-05],
         [9.5830e-01, 1.0222e-05, 1.0506e-04,  ..., 9.8324e-01,
          9.8721e-01, 7.4567e-05],
         [1.4649e-02, 9.9997e-01, 9.9968e-01,  ..., 5.5352e-03,
          4.2642e-03, 7.4567e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:33,738 [Process: 0] Synchronize training processes
2024-08-18 15:08:33,738 [Process: 0] Evaluating...
2024-08-18 15:08:33,740 [Process: 0] EPOCH 336:
2024-08-18 15:08:33,741 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 336:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9896e-01, 3.1217e-03, 3.3077e-03,  ..., 9.9947e-01,
          4.5873e-03, 5.9745e-03],
         [3.4656e-04, 3.1217e-03, 3.3077e-03,  ..., 1.7744e-04,
          4.5873e-03, 5.9745e-03],
         [3.4656e-04, 3.7772e-03, 4.0448e-03,  ..., 1.7744e-04,
          9.8471e-03, 1.3345e-02],
         [3.4656e-04, 9.8998e-01, 9.8934e-01,  ..., 1.7744e-04,
          9.8098e-01, 9.7471e-01]],
        [[2.8256e-03, 1.5405e-03, 5.6859e-04,  ..., 9.1269e-04,
          6.4834e-04, 2.8859e-03],
         [2.8256e-03, 1.5405e-03, 5.6859e-04,  ..., 9.1269e-04,
          6.4834e-04, 2.8859e-03],
         [9.9152e-01, 1.5405e-03, 5.6859e-04,  ..., 9.1269e-04,
          9.9805e-01, 9.9134e-01],
         [2.8256e-03, 9.9538e-01, 9.9829e-01,  ..., 9.9726e-01,
          6.4834e-04, 2.8859e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9149e-03, 9.9713e-04, 9.9153e-01,  ..., 3.4685e-03,
          1.4138e-02, 4.9921e-03],
         [2.9149e-03, 9.9713e-04, 1.2480e-03,  ..., 3.4685e-03,
          3.5868e-03, 4.9921e-03],
         [9.9126e-01, 9.9713e-04, 1.2480e-03,  ..., 9.8959e-01,
          3.5868e-03, 9.8455e-01],
         [2.9149e-03, 9.9701e-01, 5.9749e-03,  ..., 3.4685e-03,
          9.7869e-01, 5.4635e-03]],
        [[1.3507e-02, 2.6443e-04, 2.0178e-04,  ..., 2.0924e-03,
          4.0611e-03, 9.9827e-01],
         [1.0726e-02, 2.6443e-04, 2.0178e-04,  ..., 2.0924e-03,
          4.0611e-03, 5.7800e-04],
         [9.6504e-01, 2.6443e-04, 2.0178e-04,  ..., 9.9372e-01,
          9.8782e-01, 5.7800e-04],
         [1.0726e-02, 9.9921e-01, 9.9939e-01,  ..., 2.0924e-03,
          4.0611e-03, 5.7800e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 337:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9776e-01, 2.5579e-03, 1.4192e-03,  ..., 9.9660e-01,
          3.2455e-03, 1.6095e-03],
         [7.4723e-04, 2.5579e-03, 1.4192e-03,  ..., 1.1324e-03,
          2.3313e-03, 1.6095e-03],
         [7.4723e-04, 2.7865e-03, 1.4192e-03,  ..., 1.1324e-03,
          2.3313e-03, 1.6095e-03],
         [7.4723e-04, 9.9210e-01, 9.9574e-01,  ..., 1.1324e-03,
          9.9209e-01, 9.9517e-01]],
        [[8.6004e-04, 7.8470e-04, 1.4491e-02,  ..., 1.7040e-03,
          7.2738e-04, 2.1778e-03],
         [8.6004e-04, 7.8470e-04, 7.4259e-03,  ..., 1.7040e-03,
          7.2738e-04, 2.1778e-03],
         [9.9742e-01, 7.8470e-04, 1.0847e-02,  ..., 1.8284e-03,
          9.9782e-01, 9.9347e-01],
         [8.6004e-04, 9.9765e-01, 9.6724e-01,  ..., 9.9476e-01,
          7.2738e-04, 2.1778e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:34,886 [Process: 0] Synchronize training processes
2024-08-18 15:08:34,886 [Process: 0] Evaluating...
2024-08-18 15:08:34,888 [Process: 0] EPOCH 337:
2024-08-18 15:08:34,890 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:36,035 [Process: 0] Synchronize training processes
2024-08-18 15:08:36,035 [Process: 0] Evaluating...
2024-08-18 15:08:36,037 [Process: 0] EPOCH 338:
2024-08-18 15:08:36,039 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7245e-03, 7.3197e-05, 9.9577e-01,  ..., 3.7790e-03,
          1.8524e-03, 3.3650e-03],
         [4.7245e-03, 7.3197e-05, 1.4102e-03,  ..., 3.7790e-03,
          1.3954e-03, 3.3650e-03],
         [9.8583e-01, 7.3197e-05, 1.4102e-03,  ..., 9.8866e-01,
          1.3954e-03, 9.8991e-01],
         [4.7245e-03, 9.9978e-01, 1.4102e-03,  ..., 3.7790e-03,
          9.9536e-01, 3.3650e-03]],
        [[5.0500e-02, 1.4932e-04, 4.0843e-05,  ..., 4.7330e-03,
          3.2397e-03, 9.9813e-01],
         [2.0139e-02, 1.4932e-04, 4.0843e-05,  ..., 4.2446e-03,
          3.2397e-03, 6.2281e-04],
         [9.0023e-01, 1.4932e-04, 4.0843e-05,  ..., 9.8678e-01,
          9.9028e-01, 6.2281e-04],
         [2.9132e-02, 9.9955e-01, 9.9988e-01,  ..., 4.2446e-03,
          3.2397e-03, 6.2281e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 338:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9865e-01, 3.8338e-03, 1.1196e-03,  ..., 9.9771e-01,
          8.6161e-03, 1.8007e-03],
         [4.4956e-04, 2.5716e-03, 1.1196e-03,  ..., 7.3353e-04,
          4.9958e-03, 1.4670e-03],
         [4.4956e-04, 2.5716e-03, 1.1196e-03,  ..., 8.2739e-04,
          6.6182e-03, 1.4670e-03],
         [4.4956e-04, 9.9102e-01, 9.9664e-01,  ..., 7.3353e-04,
          9.7977e-01, 9.9527e-01]],
        [[1.1249e-03, 2.0622e-03, 2.4662e-03,  ..., 1.1474e-03,
          1.1673e-03, 8.1457e-04],
         [1.1249e-03, 2.0622e-03, 1.5043e-03,  ..., 1.1474e-03,
          1.1673e-03, 8.1457e-04],
         [9.9663e-01, 2.0622e-03, 1.5043e-03,  ..., 1.1474e-03,
          9.9650e-01, 9.9756e-01],
         [1.1249e-03, 9.9381e-01, 9.9453e-01,  ..., 9.9656e-01,
          1.1673e-03, 8.1457e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9236e-03, 6.9009e-05, 9.9839e-01,  ..., 5.0972e-03,
          2.1212e-03, 4.1015e-03],
         [3.9236e-03, 6.9009e-05, 5.3507e-04,  ..., 5.0972e-03,
          2.1212e-03, 4.1015e-03],
         [9.8823e-01, 6.9009e-05, 5.3507e-04,  ..., 9.8422e-01,
          2.4215e-03, 9.8770e-01],
         [3.9236e-03, 9.9979e-01, 5.3507e-04,  ..., 5.5894e-03,
          9.9334e-01, 4.1015e-03]],
        [[5.7470e-02, 1.3609e-05, 7.2543e-05,  ..., 9.8878e-03,
          6.7043e-03, 9.9816e-01],
         [1.7933e-02, 1.3609e-05, 7.2543e-05,  ..., 5.9998e-03,
          6.7043e-03, 6.1435e-04],
         [9.0379e-01, 1.3609e-05, 7.2543e-05,  ..., 9.7811e-01,
          9.7657e-01, 6.1435e-04],
         [2.0805e-02, 9.9996e-01, 9.9978e-01,  ..., 5.9998e-03,
          1.0024e-02, 6.1435e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 339:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9834e-01, 2.9772e-03, 3.1268e-03,  ..., 9.9333e-01,
          7.4443e-01, 2.7373e-03],
         [5.5496e-04, 2.9772e-03, 3.1268e-03,  ..., 1.6995e-03,
          1.0978e-02, 1.8354e-03],
         [5.5496e-04, 3.4242e-03, 3.1268e-03,  ..., 1.6995e-03,
          1.0978e-02, 1.8354e-03],
         [5.5496e-04, 9.9062e-01, 9.9062e-01,  ..., 3.2708e-03,
          2.3361e-01, 9.9359e-01]],
        [[3.0671e-04, 2.3571e-03, 9.9599e-04,  ..., 1.6369e-03,
          4.8610e-04, 2.0571e-03],
         [3.0671e-04, 2.3571e-03, 9.9599e-04,  ..., 1.6369e-03,
          4.8610e-04, 2.0571e-03],
         [9.9908e-01, 2.3571e-03, 9.9599e-04,  ..., 1.6369e-03,
          9.9854e-01, 9.9383e-01],
         [3.0671e-04, 9.9293e-01, 9.9701e-01,  ..., 9.9509e-01,
          4.8610e-04, 2.0571e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:37,190 [Process: 0] Synchronize training processes
2024-08-18 15:08:37,191 [Process: 0] Evaluating...
2024-08-18 15:08:37,192 [Process: 0] EPOCH 339:
2024-08-18 15:08:37,194 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:38,341 [Process: 0] Synchronize training processes
2024-08-18 15:08:38,341 [Process: 0] Evaluating...
2024-08-18 15:08:38,343 [Process: 0] EPOCH 340:
2024-08-18 15:08:38,345 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.6937e-03, 2.5723e-04, 9.9534e-01,  ..., 5.1955e-03,
          2.9266e-03, 3.6452e-03],
         [5.6937e-03, 2.5723e-04, 1.3746e-03,  ..., 5.1955e-03,
          2.9266e-03, 3.6452e-03],
         [9.8233e-01, 2.5723e-04, 1.3746e-03,  ..., 9.8418e-01,
          4.5821e-03, 9.8906e-01],
         [6.2794e-03, 9.9923e-01, 1.9111e-03,  ..., 5.4328e-03,
          9.8956e-01, 3.6452e-03]],
        [[1.3060e-02, 1.6923e-04, 1.3115e-03,  ..., 4.1135e-03,
          5.6356e-03, 9.9979e-01],
         [1.1840e-02, 1.6923e-04, 1.3115e-03,  ..., 4.1135e-03,
          5.6356e-03, 6.5638e-05],
         [9.5529e-01, 1.6923e-04, 1.4703e-03,  ..., 9.8766e-01,
          9.8278e-01, 6.5638e-05],
         [1.9812e-02, 9.9949e-01, 9.9591e-01,  ..., 4.1135e-03,
          5.9469e-03, 7.7214e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 340:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9928e-01, 1.3636e-03, 3.9303e-03,  ..., 9.9686e-01,
          9.9774e-01, 2.5380e-03],
         [2.3860e-04, 1.3636e-03, 3.9303e-03,  ..., 9.2982e-04,
          7.0534e-04, 2.5380e-03],
         [2.3860e-04, 1.3636e-03, 5.1714e-03,  ..., 1.2803e-03,
          8.5163e-04, 2.9694e-03],
         [2.3860e-04, 9.9591e-01, 9.8697e-01,  ..., 9.2982e-04,
          7.0534e-04, 9.9195e-01]],
        [[3.2682e-04, 8.8345e-04, 1.8351e-03,  ..., 1.1489e-03,
          7.3864e-04, 2.9838e-03],
         [3.2682e-04, 8.8345e-04, 1.8351e-03,  ..., 1.1489e-03,
          7.3864e-04, 2.9838e-03],
         [9.9902e-01, 8.8345e-04, 1.8609e-03,  ..., 1.1489e-03,
          9.9778e-01, 9.9105e-01],
         [3.2682e-04, 9.9735e-01, 9.9447e-01,  ..., 9.9655e-01,
          7.3864e-04, 2.9838e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.0615e-03, 1.6398e-04, 9.9952e-01,  ..., 3.5705e-03,
          3.6684e-03, 5.1586e-03],
         [7.0615e-03, 1.6398e-04, 1.5863e-04,  ..., 3.5705e-03,
          2.4108e-03, 5.1586e-03],
         [9.7404e-01, 1.6398e-04, 1.5863e-04,  ..., 9.8929e-01,
          2.4108e-03, 9.8452e-01],
         [1.1835e-02, 9.9951e-01, 1.5863e-04,  ..., 3.5705e-03,
          9.9151e-01, 5.1586e-03]],
        [[1.6887e-02, 3.2805e-04, 4.5918e-05,  ..., 2.8780e-03,
          2.7049e-03, 9.9714e-01],
         [1.0663e-02, 3.2805e-04, 4.5918e-05,  ..., 2.8780e-03,
          2.7049e-03, 4.5945e-04],
         [9.5972e-01, 3.2805e-04, 4.5918e-05,  ..., 9.9137e-01,
          9.9189e-01, 4.5945e-04],
         [1.2728e-02, 9.9902e-01, 9.9986e-01,  ..., 2.8780e-03,
          2.7049e-03, 1.9375e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 341:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:39,480 [Process: 0] Synchronize training processes
2024-08-18 15:08:39,480 [Process: 0] Evaluating...
2024-08-18 15:08:39,482 [Process: 0] EPOCH 341:
2024-08-18 15:08:39,484 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:40,620 [Process: 0] Synchronize training processes
2024-08-18 15:08:40,620 [Process: 0] Evaluating...
2024-08-18 15:08:40,625 [Process: 0] EPOCH 342:
2024-08-18 15:08:40,627 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9740e-01, 5.1979e-03, 1.9070e-03,  ..., 9.9751e-01,
          9.9724e-01, 8.1046e-03],
         [7.0368e-04, 5.1979e-03, 1.9070e-03,  ..., 8.2889e-04,
          9.1444e-04, 3.7205e-03],
         [1.1954e-03, 8.0076e-03, 2.3132e-03,  ..., 8.2889e-04,
          9.2939e-04, 3.8728e-03],
         [7.0368e-04, 9.8160e-01, 9.9387e-01,  ..., 8.2889e-04,
          9.1444e-04, 9.8430e-01]],
        [[4.7711e-04, 1.0290e-03, 3.3981e-03,  ..., 1.2556e-03,
          1.2072e-03, 8.5784e-04],
         [4.7711e-04, 1.0290e-03, 3.3981e-03,  ..., 1.2556e-03,
          1.2072e-03, 8.5784e-04],
         [9.9857e-01, 1.0290e-03, 3.6764e-03,  ..., 1.2556e-03,
          9.9638e-01, 9.9743e-01],
         [4.7711e-04, 9.9691e-01, 9.8953e-01,  ..., 9.9623e-01,
          1.2072e-03, 8.5784e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6691e-03, 1.4036e-04, 9.9911e-01,  ..., 1.7958e-03,
          6.9415e-04, 4.8354e-03],
         [2.6691e-03, 1.4036e-04, 2.1400e-04,  ..., 1.7958e-03,
          6.9415e-04, 4.8354e-03],
         [9.9199e-01, 1.4036e-04, 2.1400e-04,  ..., 9.9461e-01,
          6.9415e-04, 9.8538e-01],
         [2.6691e-03, 9.9958e-01, 4.5968e-04,  ..., 1.7958e-03,
          9.9792e-01, 4.9488e-03]],
        [[1.1522e-02, 9.2366e-05, 2.5088e-04,  ..., 3.6361e-03,
          5.3799e-03, 9.9827e-01],
         [9.2781e-03, 9.2366e-05, 2.5088e-04,  ..., 3.6361e-03,
          5.2758e-03, 5.7638e-04],
         [9.6694e-01, 9.2366e-05, 2.5088e-04,  ..., 9.8909e-01,
          9.8359e-01, 5.7638e-04],
         [1.2256e-02, 9.9972e-01, 9.9925e-01,  ..., 3.6361e-03,
          5.7495e-03, 5.7638e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 342:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9981e-01, 1.3739e-03, 6.7578e-03,  ..., 9.9963e-01,
          9.9857e-01, 9.3489e-03],
         [6.2846e-05, 1.3364e-03, 5.9549e-03,  ..., 1.2193e-04,
          4.7563e-04, 9.3489e-03],
         [6.2846e-05, 1.3364e-03, 1.1262e-02,  ..., 1.2193e-04,
          4.7563e-04, 3.1876e-02],
         [6.2846e-05, 9.9595e-01, 9.7602e-01,  ..., 1.2193e-04,
          4.7563e-04, 9.4943e-01]],
        [[2.5335e-03, 4.1492e-04, 1.4149e-03,  ..., 1.4768e-03,
          4.8593e-04, 9.4033e-04],
         [2.5335e-03, 4.1492e-04, 1.4149e-03,  ..., 1.4768e-03,
          4.8593e-04, 9.4033e-04],
         [9.9240e-01, 4.1492e-04, 1.4149e-03,  ..., 1.4768e-03,
          9.9854e-01, 9.9718e-01],
         [2.5335e-03, 9.9876e-01, 9.9576e-01,  ..., 9.9557e-01,
          4.8593e-04, 9.4033e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9359e-03, 8.6676e-05, 9.8070e-01,  ..., 4.2874e-03,
          2.9791e-04, 5.3386e-03],
         [4.9359e-03, 8.6676e-05, 3.0329e-03,  ..., 4.2874e-03,
          2.9791e-04, 5.3386e-03],
         [9.8519e-01, 8.6676e-05, 3.0329e-03,  ..., 9.8714e-01,
          2.9791e-04, 9.8354e-01],
         [4.9359e-03, 9.9974e-01, 1.3229e-02,  ..., 4.2874e-03,
          9.9911e-01, 5.7857e-03]],
        [[4.4616e-03, 2.2203e-05, 2.2936e-05,  ..., 5.2460e-03,
          1.2709e-02, 9.9785e-01],
         [4.4616e-03, 2.2319e-05, 2.3577e-05,  ..., 5.2460e-03,
          8.6275e-03, 6.5746e-04],
         [9.8662e-01, 2.2203e-05, 2.2936e-05,  ..., 9.8415e-01,
          9.6621e-01, 6.5746e-04],
         [4.4616e-03, 9.9993e-01, 9.9993e-01,  ..., 5.3572e-03,
          1.2452e-02, 8.3542e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 343:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:41,772 [Process: 0] Synchronize training processes
2024-08-18 15:08:41,772 [Process: 0] Evaluating...
2024-08-18 15:08:41,774 [Process: 0] EPOCH 343:
2024-08-18 15:08:41,776 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9930e-01, 2.4975e-03, 1.5517e-03,  ..., 9.9752e-01,
          9.9340e-01, 3.1494e-03],
         [2.3178e-04, 2.4975e-03, 1.5517e-03,  ..., 8.2745e-04,
          1.8658e-03, 3.1494e-03],
         [2.3178e-04, 2.5492e-03, 1.5517e-03,  ..., 8.2745e-04,
          2.8733e-03, 3.3565e-03],
         [2.3178e-04, 9.9246e-01, 9.9534e-01,  ..., 8.2745e-04,
          1.8658e-03, 9.9034e-01]],
        [[5.0461e-04, 3.5162e-03, 2.3936e-03,  ..., 2.4110e-03,
          1.0517e-03, 2.4145e-03],
         [5.0461e-04, 3.5162e-03, 2.3936e-03,  ..., 2.4110e-03,
          1.0517e-03, 2.4145e-03],
         [9.9849e-01, 5.4944e-03, 3.3209e-03,  ..., 2.4110e-03,
          9.9685e-01, 9.9276e-01],
         [5.0461e-04, 9.8747e-01, 9.9189e-01,  ..., 9.9277e-01,
          1.0517e-03, 2.4145e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2241e-03, 5.7646e-05, 9.9632e-01,  ..., 5.9914e-03,
          5.8468e-04, 4.2708e-03],
         [3.2241e-03, 5.7646e-05, 1.2256e-03,  ..., 5.2537e-03,
          5.8468e-04, 4.2708e-03],
         [9.9033e-01, 5.7646e-05, 1.2256e-03,  ..., 9.8350e-01,
          5.8468e-04, 9.8719e-01],
         [3.2241e-03, 9.9983e-01, 1.2256e-03,  ..., 5.2537e-03,
          9.9825e-01, 4.2708e-03]],
        [[8.1438e-03, 6.3999e-05, 2.4390e-05,  ..., 3.9617e-03,
          8.1948e-03, 9.9961e-01],
         [8.1438e-03, 6.5795e-05, 2.4390e-05,  ..., 3.9617e-03,
          7.4390e-03, 1.0577e-04],
         [9.7264e-01, 6.3999e-05, 2.4390e-05,  ..., 9.8811e-01,
          9.7324e-01, 1.0577e-04],
         [1.1075e-02, 9.9981e-01, 9.9993e-01,  ..., 3.9617e-03,
          1.1129e-02, 1.7377e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 344:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9936e-01, 3.1811e-03, 3.4162e-03,  ..., 9.9926e-01,
          9.9773e-01, 4.5965e-03],
         [2.1166e-04, 3.1167e-03, 3.4162e-03,  ..., 2.4796e-04,
          6.8698e-04, 4.5965e-03],
         [2.1166e-04, 3.7824e-03, 4.2906e-03,  ..., 2.4796e-04,
          8.9199e-04, 8.4509e-03],
         [2.1166e-04, 9.8992e-01, 9.8888e-01,  ..., 2.4796e-04,
          6.8698e-04, 9.8236e-01]],
        [[9.0900e-04, 1.0573e-03, 1.9535e-03,  ..., 1.6495e-03,
          3.3064e-04, 9.7772e-04],
         [9.0900e-04, 1.0573e-03, 1.9535e-03,  ..., 1.6495e-03,
          3.3064e-04, 9.7772e-04],
         [9.9727e-01, 1.0573e-03, 1.9535e-03,  ..., 1.6495e-03,
          9.9901e-01, 9.9707e-01],
         [9.0900e-04, 9.9683e-01, 9.9414e-01,  ..., 9.9505e-01,
          3.3064e-04, 9.7772e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:42,920 [Process: 0] Synchronize training processes
2024-08-18 15:08:42,920 [Process: 0] Evaluating...
2024-08-18 15:08:42,922 [Process: 0] EPOCH 344:
2024-08-18 15:08:42,924 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:44,068 [Process: 0] Synchronize training processes
2024-08-18 15:08:44,068 [Process: 0] Evaluating...
2024-08-18 15:08:44,070 [Process: 0] EPOCH 345:
2024-08-18 15:08:44,071 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1711e-03, 3.8934e-05, 9.9898e-01,  ..., 4.7422e-03,
          2.4131e-03, 1.2472e-02],
         [4.1711e-03, 3.8934e-05, 2.8185e-04,  ..., 4.7422e-03,
          1.6652e-03, 9.2094e-03],
         [9.8749e-01, 3.8934e-05, 2.8185e-04,  ..., 9.8577e-01,
          1.6652e-03, 9.6311e-01],
         [4.1711e-03, 9.9988e-01, 4.5803e-04,  ..., 4.7422e-03,
          9.9426e-01, 1.5207e-02]],
        [[4.1336e-03, 6.6560e-05, 1.1376e-05,  ..., 1.0839e-02,
          5.2541e-03, 9.9795e-01],
         [4.1336e-03, 6.6560e-05, 1.1376e-05,  ..., 7.9098e-03,
          5.2541e-03, 5.5521e-04],
         [9.8760e-01, 6.6560e-05, 1.1376e-05,  ..., 9.7007e-01,
          9.8424e-01, 5.5521e-04],
         [4.1336e-03, 9.9980e-01, 9.9997e-01,  ..., 1.1186e-02,
          5.2541e-03, 9.3778e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 345:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9854e-01, 1.7976e-03, 4.1190e-03,  ..., 9.9733e-01,
          9.9564e-01, 2.6752e-03],
         [4.8786e-04, 1.7976e-03, 4.1190e-03,  ..., 8.9122e-04,
          1.3831e-03, 2.2375e-03],
         [4.8786e-04, 1.7976e-03, 6.9603e-03,  ..., 8.9122e-04,
          1.5974e-03, 2.2375e-03],
         [4.8786e-04, 9.9461e-01, 9.8480e-01,  ..., 8.9122e-04,
          1.3831e-03, 9.9285e-01]],
        [[9.3620e-04, 9.9379e-04, 1.5935e-03,  ..., 4.2061e-03,
          6.1971e-04, 7.8366e-04],
         [9.3620e-04, 9.9379e-04, 1.5935e-03,  ..., 2.2431e-03,
          6.1971e-04, 7.8366e-04],
         [9.9719e-01, 9.9379e-04, 1.5935e-03,  ..., 2.2431e-03,
          9.9814e-01, 9.9765e-01],
         [9.3620e-04, 9.9702e-01, 9.9522e-01,  ..., 9.9131e-01,
          6.1971e-04, 7.8366e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0473e-03, 1.8021e-04, 9.9911e-01,  ..., 6.0436e-03,
          1.0067e-04, 5.0615e-03],
         [4.0473e-03, 1.8021e-04, 2.5926e-04,  ..., 5.4845e-03,
          1.0067e-04, 5.0615e-03],
         [9.8786e-01, 1.8021e-04, 2.5926e-04,  ..., 9.8299e-01,
          1.0067e-04, 9.8411e-01],
         [4.0473e-03, 9.9946e-01, 3.7088e-04,  ..., 5.4845e-03,
          9.9970e-01, 5.7710e-03]],
        [[5.1016e-03, 6.5430e-06, 2.0737e-05,  ..., 5.1086e-03,
          3.5602e-03, 9.9956e-01],
         [5.1016e-03, 6.6825e-06, 2.0737e-05,  ..., 5.1086e-03,
          3.5602e-03, 1.4415e-04],
         [9.8405e-01, 6.5430e-06, 2.0737e-05,  ..., 9.8467e-01,
          9.8932e-01, 1.4415e-04],
         [5.7465e-03, 9.9998e-01, 9.9994e-01,  ..., 5.1086e-03,
          3.5602e-03, 1.4714e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 346:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9815e-01, 2.2846e-03, 2.6500e-03,  ..., 9.9727e-01,
          9.9244e-01, 3.0983e-03],
         [6.1764e-04, 2.2846e-03, 2.6500e-03,  ..., 8.6211e-04,
          2.2443e-03, 2.5269e-03],
         [6.1764e-04, 2.8258e-03, 3.8820e-03,  ..., 1.0062e-03,
          2.9852e-03, 2.8995e-03],
         [6.1764e-04, 9.9260e-01, 9.9082e-01,  ..., 8.6211e-04,
          2.3317e-03, 9.9148e-01]],
        [[4.8962e-04, 7.4809e-04, 4.0417e-03,  ..., 1.2611e-03,
          1.4640e-03, 1.8229e-03],
         [4.8962e-04, 7.4809e-04, 4.0417e-03,  ..., 1.2611e-03,
          1.4640e-03, 1.8229e-03],
         [9.9853e-01, 7.4809e-04, 8.5282e-03,  ..., 1.2611e-03,
          9.9561e-01, 9.9453e-01],
         [4.8962e-04, 9.9776e-01, 9.8339e-01,  ..., 9.9622e-01,
          1.4640e-03, 1.8229e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:45,216 [Process: 0] Synchronize training processes
2024-08-18 15:08:45,217 [Process: 0] Evaluating...
2024-08-18 15:08:45,218 [Process: 0] EPOCH 346:
2024-08-18 15:08:45,220 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:46,360 [Process: 0] Synchronize training processes
2024-08-18 15:08:46,360 [Process: 0] Evaluating...
2024-08-18 15:08:46,362 [Process: 0] EPOCH 347:
2024-08-18 15:08:46,364 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1619e-02, 1.1514e-04, 9.9595e-01,  ..., 5.0891e-03,
          1.0582e-04, 5.1289e-03],
         [1.0435e-02, 1.1514e-04, 5.5087e-04,  ..., 5.0891e-03,
          1.0582e-04, 5.1289e-03],
         [9.5657e-01, 1.1514e-04, 5.5087e-04,  ..., 9.8391e-01,
          1.0582e-04, 9.8461e-01],
         [2.1377e-02, 9.9965e-01, 2.9528e-03,  ..., 5.9118e-03,
          9.9968e-01, 5.1289e-03]],
        [[7.6697e-03, 1.4836e-05, 4.9644e-05,  ..., 3.0674e-03,
          2.9035e-03, 9.9514e-01],
         [7.6697e-03, 1.5154e-05, 4.9644e-05,  ..., 3.0674e-03,
          2.9035e-03, 1.2325e-03],
         [9.7272e-01, 1.4836e-05, 4.9644e-05,  ..., 9.9080e-01,
          9.9129e-01, 1.2325e-03],
         [1.1945e-02, 9.9996e-01, 9.9985e-01,  ..., 3.0674e-03,
          2.9035e-03, 2.3982e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 347:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9679e-01, 2.7272e-03, 5.8439e-04,  ..., 9.9835e-01,
          9.9751e-01, 4.9698e-04],
         [9.4431e-04, 2.7272e-03, 5.8439e-04,  ..., 5.5075e-04,
          8.2970e-04, 4.9698e-04],
         [9.4431e-04, 4.4372e-03, 5.8439e-04,  ..., 5.5075e-04,
          8.2970e-04, 4.9698e-04],
         [1.3202e-03, 9.9011e-01, 9.9825e-01,  ..., 5.5075e-04,
          8.2970e-04, 9.9851e-01]],
        [[3.9193e-04, 1.0340e-03, 2.1471e-03,  ..., 2.6771e-03,
          8.2885e-04, 7.9880e-04],
         [3.9193e-04, 1.0340e-03, 2.1471e-03,  ..., 2.4518e-03,
          8.2885e-04, 7.9880e-04],
         [9.9882e-01, 1.0340e-03, 2.1471e-03,  ..., 2.6969e-03,
          9.9751e-01, 9.9760e-01],
         [3.9193e-04, 9.9690e-01, 9.9356e-01,  ..., 9.9217e-01,
          8.2885e-04, 7.9880e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5930e-03, 3.0920e-04, 9.9956e-01,  ..., 5.2249e-03,
          2.4654e-03, 9.9516e-03],
         [2.5930e-03, 3.0920e-04, 1.3075e-04,  ..., 5.2249e-03,
          2.4654e-03, 9.9516e-03],
         [9.9222e-01, 3.0920e-04, 1.3075e-04,  ..., 9.8430e-01,
          4.4277e-03, 9.6138e-01],
         [2.5930e-03, 9.9907e-01, 1.8124e-04,  ..., 5.2520e-03,
          9.9064e-01, 1.8717e-02]],
        [[8.2668e-03, 6.6486e-05, 1.9128e-05,  ..., 5.5822e-03,
          4.7500e-03, 9.9986e-01],
         [7.6955e-03, 5.8400e-05, 1.9128e-05,  ..., 5.5688e-03,
          4.7500e-03, 4.5356e-05],
         [9.7465e-01, 5.8400e-05, 1.9128e-05,  ..., 9.8328e-01,
          9.8575e-01, 4.5356e-05],
         [9.3914e-03, 9.9982e-01, 9.9994e-01,  ..., 5.5688e-03,
          4.7500e-03, 4.5356e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 348:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:47,505 [Process: 0] Synchronize training processes
2024-08-18 15:08:47,506 [Process: 0] Evaluating...
2024-08-18 15:08:47,507 [Process: 0] EPOCH 348:
2024-08-18 15:08:47,509 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:48,656 [Process: 0] Synchronize training processes
2024-08-18 15:08:48,656 [Process: 0] Evaluating...
2024-08-18 15:08:48,658 [Process: 0] EPOCH 349:
2024-08-18 15:08:48,660 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9704e-01, 9.8356e-04, 3.5750e-03,  ..., 9.9673e-01,
          9.9952e-01, 1.0187e-02],
         [9.6278e-04, 9.8356e-04, 3.5750e-03,  ..., 1.0916e-03,
          1.6157e-04, 1.0187e-02],
         [9.6278e-04, 9.8356e-04, 8.2388e-03,  ..., 1.0916e-03,
          1.6157e-04, 3.1633e-02],
         [1.0394e-03, 9.9705e-01, 9.8461e-01,  ..., 1.0916e-03,
          1.6157e-04, 9.4799e-01]],
        [[1.1703e-03, 2.8728e-03, 5.8561e-04,  ..., 1.3383e-03,
          1.1196e-03, 5.1885e-04],
         [1.1703e-03, 2.8728e-03, 5.8561e-04,  ..., 1.3383e-03,
          1.1196e-03, 5.1885e-04],
         [9.9649e-01, 3.3655e-03, 5.8561e-04,  ..., 1.3383e-03,
          9.9664e-01, 9.9844e-01],
         [1.1703e-03, 9.9089e-01, 9.9824e-01,  ..., 9.9599e-01,
          1.1196e-03, 5.1885e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4878e-03, 4.7412e-05, 9.9821e-01,  ..., 5.1992e-03,
          8.4383e-03, 6.4222e-03],
         [4.4878e-03, 4.7412e-05, 3.7818e-04,  ..., 5.1992e-03,
          8.0244e-03, 6.0582e-03],
         [9.8654e-01, 4.7412e-05, 3.7818e-04,  ..., 9.8440e-01,
          2.9434e-02, 9.8146e-01],
         [4.4878e-03, 9.9986e-01, 1.0370e-03,  ..., 5.1992e-03,
          9.5410e-01, 6.0582e-03]],
        [[5.6230e-03, 8.8100e-06, 6.5081e-05,  ..., 1.1099e-02,
          4.2072e-03, 9.9969e-01],
         [5.6230e-03, 8.8100e-06, 6.5081e-05,  ..., 8.4683e-03,
          4.2072e-03, 1.0452e-04],
         [9.8313e-01, 8.8100e-06, 6.5081e-05,  ..., 9.6922e-01,
          9.8738e-01, 1.0452e-04],
         [5.6230e-03, 9.9997e-01, 9.9980e-01,  ..., 1.1213e-02,
          4.2072e-03, 1.0452e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 349:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9797e-01, 4.4468e-03, 2.7556e-02,  ..., 9.9892e-01,
          9.9884e-01, 4.9756e-03],
         [6.7680e-04, 4.4468e-03, 1.1772e-02,  ..., 3.5970e-04,
          3.8748e-04, 4.9756e-03],
         [6.7680e-04, 1.0908e-02, 3.9352e-02,  ..., 3.5970e-04,
          3.8748e-04, 1.1604e-02],
         [6.7680e-04, 9.8020e-01, 9.2132e-01,  ..., 3.5970e-04,
          3.8748e-04, 9.7845e-01]],
        [[7.0962e-04, 2.5605e-04, 1.4973e-03,  ..., 6.1592e-03,
          6.2575e-04, 1.5469e-03],
         [7.0962e-04, 2.5605e-04, 1.4973e-03,  ..., 4.2948e-03,
          6.2575e-04, 1.5469e-03],
         [9.9787e-01, 2.5605e-04, 1.4973e-03,  ..., 7.1688e-03,
          9.9812e-01, 9.9536e-01],
         [7.0962e-04, 9.9923e-01, 9.9551e-01,  ..., 9.8238e-01,
          6.2575e-04, 1.5469e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.6585e-03, 4.1829e-04, 9.9937e-01,  ..., 5.7608e-03,
          5.0416e-03, 7.0919e-03],
         [5.6585e-03, 4.2969e-04, 1.5731e-04,  ..., 5.6822e-03,
          5.0416e-03, 7.0919e-03],
         [9.8302e-01, 4.1829e-04, 1.5731e-04,  ..., 9.8287e-01,
          1.4113e-02, 9.7777e-01],
         [5.6585e-03, 9.9873e-01, 3.1931e-04,  ..., 5.6822e-03,
          9.7580e-01, 8.0467e-03]],
        [[5.1699e-03, 1.2430e-05, 6.4081e-05,  ..., 4.7202e-03,
          5.3535e-03, 9.9822e-01],
         [5.1699e-03, 1.2741e-05, 6.4683e-05,  ..., 4.7202e-03,
          5.3535e-03, 5.9208e-04],
         [9.8372e-01, 1.2430e-05, 6.4081e-05,  ..., 9.8584e-01,
          9.8394e-01, 5.9208e-04],
         [5.9367e-03, 9.9996e-01, 9.9981e-01,  ..., 4.7202e-03,
          5.3535e-03, 5.9208e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 350:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:49,794 [Process: 0] Synchronize training processes
2024-08-18 15:08:49,794 [Process: 0] Evaluating...
2024-08-18 15:08:49,796 [Process: 0] EPOCH 350:
2024-08-18 15:08:49,798 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9797e-01, 1.0779e-03, 1.0855e-03,  ..., 9.9929e-01,
          9.8836e-01, 7.8683e-03],
         [6.7589e-04, 1.0779e-03, 1.0855e-03,  ..., 2.3743e-04,
          3.1019e-03, 7.8683e-03],
         [6.7589e-04, 1.0989e-03, 1.1729e-03,  ..., 2.3743e-04,
          5.4338e-03, 3.2948e-02],
         [6.7589e-04, 9.9675e-01, 9.9666e-01,  ..., 2.3743e-04,
          3.1019e-03, 9.5132e-01]],
        [[4.4282e-04, 1.3932e-03, 3.7784e-03,  ..., 4.7877e-04,
          3.3478e-04, 9.0982e-04],
         [4.4282e-04, 1.3932e-03, 3.7784e-03,  ..., 4.7877e-04,
          3.3478e-04, 9.0982e-04],
         [9.9867e-01, 1.3932e-03, 7.3463e-03,  ..., 4.7877e-04,
          9.9900e-01, 9.9727e-01],
         [4.4282e-04, 9.9582e-01, 9.8510e-01,  ..., 9.9856e-01,
          3.3478e-04, 9.0982e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.2445e-03, 2.9556e-05, 9.9940e-01,  ..., 5.8367e-03,
          1.1797e-03, 4.3118e-03],
         [6.2445e-03, 2.9556e-05, 2.0131e-04,  ..., 5.8367e-03,
          1.1797e-03, 4.3118e-03],
         [9.7997e-01, 2.9556e-05, 2.0131e-04,  ..., 9.8249e-01,
          1.4591e-03, 9.8706e-01],
         [7.5396e-03, 9.9991e-01, 2.0131e-04,  ..., 5.8367e-03,
          9.9618e-01, 4.3118e-03]],
        [[6.0914e-03, 1.3496e-05, 3.8772e-04,  ..., 3.3091e-03,
          3.9335e-03, 9.9704e-01],
         [6.0914e-03, 1.3496e-05, 3.8961e-04,  ..., 3.3091e-03,
          3.9335e-03, 9.8683e-04],
         [9.8173e-01, 1.3496e-05, 3.8772e-04,  ..., 9.9007e-01,
          9.8820e-01, 9.8683e-04],
         [6.0914e-03, 9.9996e-01, 9.9884e-01,  ..., 3.3091e-03,
          3.9335e-03, 9.8683e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 351:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9870e-01, 1.5271e-03, 1.9423e-03,  ..., 9.9727e-01,
          9.6312e-01, 7.3483e-04],
         [4.3216e-04, 1.5271e-03, 1.9423e-03,  ..., 8.3924e-04,
          6.6080e-03, 7.3483e-04],
         [4.3216e-04, 2.0526e-03, 1.9982e-03,  ..., 1.0535e-03,
          1.8733e-02, 7.3483e-04],
         [4.3216e-04, 9.9489e-01, 9.9412e-01,  ..., 8.3924e-04,
          1.1539e-02, 9.9780e-01]],
        [[1.9528e-03, 4.2087e-03, 1.3506e-03,  ..., 2.6235e-03,
          4.2711e-04, 5.2556e-04],
         [1.9528e-03, 3.9380e-03, 1.3506e-03,  ..., 2.6235e-03,
          4.2711e-04, 5.2556e-04],
         [9.9414e-01, 7.0470e-03, 1.8666e-03,  ..., 3.4944e-03,
          9.9872e-01, 9.9842e-01],
         [1.9528e-03, 9.8481e-01, 9.9543e-01,  ..., 9.9126e-01,
          4.2711e-04, 5.2556e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:50,937 [Process: 0] Synchronize training processes
2024-08-18 15:08:50,937 [Process: 0] Evaluating...
2024-08-18 15:08:50,939 [Process: 0] EPOCH 351:
2024-08-18 15:08:50,941 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:52,084 [Process: 0] Synchronize training processes
2024-08-18 15:08:52,084 [Process: 0] Evaluating...
2024-08-18 15:08:52,088 [Process: 0] EPOCH 352:
2024-08-18 15:08:52,090 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6630e-03, 1.0019e-04, 9.9977e-01,  ..., 5.2470e-03,
          3.4778e-03, 3.2527e-03],
         [4.6630e-03, 1.0019e-04, 7.6534e-05,  ..., 5.2470e-03,
          3.4778e-03, 3.2527e-03],
         [9.8601e-01, 1.0019e-04, 7.6534e-05,  ..., 9.8426e-01,
          8.3087e-03, 9.9024e-01],
         [4.6630e-03, 9.9970e-01, 7.6534e-05,  ..., 5.2470e-03,
          9.8474e-01, 3.2527e-03]],
        [[7.4098e-03, 1.1712e-04, 3.2450e-04,  ..., 9.9433e-03,
          5.5165e-03, 9.9632e-01],
         [6.7366e-03, 1.2379e-04, 3.2450e-04,  ..., 7.7001e-03,
          5.5165e-03, 1.2268e-03],
         [9.7844e-01, 1.1712e-04, 3.2450e-04,  ..., 9.7247e-01,
          9.8345e-01, 1.2268e-03],
         [7.4097e-03, 9.9964e-01, 9.9903e-01,  ..., 9.8850e-03,
          5.5165e-03, 1.2268e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 352:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9866e-01, 5.7611e-04, 3.4832e-03,  ..., 9.9840e-01,
          9.9858e-01, 1.3494e-03],
         [4.4567e-04, 5.7611e-04, 2.9213e-03,  ..., 5.3308e-04,
          4.7208e-04, 1.3494e-03],
         [4.4567e-04, 6.3879e-04, 3.6827e-03,  ..., 5.3308e-04,
          4.7208e-04, 1.3494e-03],
         [4.4567e-04, 9.9821e-01, 9.8991e-01,  ..., 5.3308e-04,
          4.7208e-04, 9.9595e-01]],
        [[7.7397e-04, 2.4470e-04, 5.4363e-03,  ..., 3.3261e-03,
          1.0323e-03, 4.4734e-04],
         [7.7397e-04, 2.4470e-04, 5.4363e-03,  ..., 2.9383e-03,
          1.0323e-03, 4.4734e-04],
         [9.9768e-01, 2.4470e-04, 1.2131e-02,  ..., 3.5909e-03,
          9.9690e-01, 9.9866e-01],
         [7.7397e-04, 9.9927e-01, 9.7700e-01,  ..., 9.9014e-01,
          1.0323e-03, 4.4734e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.1075e-03, 4.5211e-05, 9.9760e-01,  ..., 5.1570e-03,
          7.2103e-04, 4.8729e-03],
         [6.1075e-03, 4.5624e-05, 4.3920e-04,  ..., 5.1570e-03,
          3.4105e-04, 4.8729e-03],
         [9.8028e-01, 4.5211e-05, 4.3920e-04,  ..., 9.8453e-01,
          3.4105e-04, 9.8538e-01],
         [7.5023e-03, 9.9986e-01, 1.5172e-03,  ..., 5.1570e-03,
          9.9860e-01, 4.8729e-03]],
        [[3.1038e-03, 2.2671e-04, 2.0200e-05,  ..., 3.1602e-03,
          4.8957e-03, 9.8815e-01],
         [3.1038e-03, 2.2671e-04, 2.0767e-05,  ..., 3.1602e-03,
          4.8957e-03, 2.0607e-03],
         [9.9069e-01, 2.2671e-04, 2.0200e-05,  ..., 9.9052e-01,
          9.8469e-01, 2.0607e-03],
         [3.1038e-03, 9.9932e-01, 9.9994e-01,  ..., 3.1602e-03,
          5.5235e-03, 7.7266e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 353:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9929e-01, 2.7667e-03, 3.8414e-03,  ..., 9.9898e-01,
          9.9849e-01, 1.3916e-03],
         [2.3743e-04, 2.0368e-03, 3.8414e-03,  ..., 3.4141e-04,
          4.8552e-04, 1.3916e-03],
         [2.3743e-04, 2.0368e-03, 6.6760e-03,  ..., 3.4141e-04,
          4.8552e-04, 1.3916e-03],
         [2.3743e-04, 9.9316e-01, 9.8564e-01,  ..., 3.4141e-04,
          5.3997e-04, 9.9583e-01]],
        [[7.1505e-04, 9.4112e-04, 6.4987e-04,  ..., 5.3139e-04,
          5.2860e-04, 1.3759e-03],
         [7.1505e-04, 9.4112e-04, 6.4987e-04,  ..., 5.3139e-04,
          5.2860e-04, 1.3759e-03],
         [9.9785e-01, 9.4112e-04, 6.4987e-04,  ..., 5.3139e-04,
          9.9841e-01, 9.9587e-01],
         [7.1505e-04, 9.9718e-01, 9.9805e-01,  ..., 9.9841e-01,
          5.2860e-04, 1.3759e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:53,233 [Process: 0] Synchronize training processes
2024-08-18 15:08:53,234 [Process: 0] Evaluating...
2024-08-18 15:08:53,235 [Process: 0] EPOCH 353:
2024-08-18 15:08:53,237 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:54,381 [Process: 0] Synchronize training processes
2024-08-18 15:08:54,382 [Process: 0] Evaluating...
2024-08-18 15:08:54,383 [Process: 0] EPOCH 354:
2024-08-18 15:08:54,385 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.5619e-03, 8.7467e-05, 9.9919e-01,  ..., 3.6298e-03,
          1.1599e-03, 6.9068e-03],
         [6.5619e-03, 8.7467e-05, 2.5254e-04,  ..., 3.6298e-03,
          1.1599e-03, 6.7069e-03],
         [9.7834e-01, 8.7467e-05, 2.5254e-04,  ..., 9.8911e-01,
          1.1599e-03, 9.7833e-01],
         [8.5344e-03, 9.9974e-01, 3.0953e-04,  ..., 3.6298e-03,
          9.9652e-01, 8.0596e-03]],
        [[3.8272e-03, 1.1629e-04, 7.8463e-05,  ..., 2.6110e-03,
          5.9417e-03, 9.9792e-01],
         [3.8272e-03, 1.2015e-04, 7.8463e-05,  ..., 2.6110e-03,
          5.5357e-03, 6.9181e-04],
         [9.8852e-01, 1.1629e-04, 7.8463e-05,  ..., 9.9217e-01,
          9.8299e-01, 6.9181e-04],
         [3.8272e-03, 9.9965e-01, 9.9976e-01,  ..., 2.6110e-03,
          5.5357e-03, 6.9181e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 354:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9978e-01, 2.9956e-03, 2.4151e-03,  ..., 9.9653e-01,
          9.9682e-01, 2.0729e-03],
         [7.2426e-05, 2.9956e-03, 2.4151e-03,  ..., 9.9683e-04,
          9.6986e-04, 2.0729e-03],
         [7.2426e-05, 6.1505e-03, 3.9182e-03,  ..., 1.4780e-03,
          1.2354e-03, 2.8120e-03],
         [7.2426e-05, 9.8786e-01, 9.9125e-01,  ..., 9.9683e-04,
          9.6986e-04, 9.9304e-01]],
        [[1.8290e-03, 3.2248e-03, 2.5082e-03,  ..., 1.5908e-03,
          1.2177e-03, 1.2277e-03],
         [1.8290e-03, 3.2248e-03, 2.5082e-03,  ..., 1.5908e-03,
          1.2177e-03, 1.2277e-03],
         [9.9451e-01, 4.3142e-03, 2.7948e-03,  ..., 2.1079e-03,
          9.9635e-01, 9.9632e-01],
         [1.8290e-03, 9.8924e-01, 9.9219e-01,  ..., 9.9471e-01,
          1.2177e-03, 1.2277e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.8861e-03, 6.0964e-04, 9.9136e-01,  ..., 2.7066e-03,
          5.6529e-04, 4.3837e-03],
         [5.8861e-03, 6.0964e-04, 2.5746e-03,  ..., 2.7066e-03,
          2.1913e-04, 4.3837e-03],
         [9.8173e-01, 6.0964e-04, 2.9223e-03,  ..., 9.9188e-01,
          2.1913e-04, 9.8685e-01],
         [6.5015e-03, 9.9817e-01, 3.1391e-03,  ..., 2.7066e-03,
          9.9900e-01, 4.3837e-03]],
        [[4.6947e-03, 4.1038e-05, 2.0508e-05,  ..., 4.5576e-03,
          4.8281e-03, 9.9873e-01],
         [4.6947e-03, 4.1038e-05, 2.0508e-05,  ..., 4.5321e-03,
          4.8281e-03, 2.5129e-04],
         [9.8592e-01, 4.1038e-05, 2.0508e-05,  ..., 9.8638e-01,
          9.8552e-01, 2.5129e-04],
         [4.6947e-03, 9.9988e-01, 9.9994e-01,  ..., 4.5321e-03,
          4.8281e-03, 7.6998e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 355:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:55,531 [Process: 0] Synchronize training processes
2024-08-18 15:08:55,531 [Process: 0] Evaluating...
2024-08-18 15:08:55,533 [Process: 0] EPOCH 355:
2024-08-18 15:08:55,535 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:56,679 [Process: 0] Synchronize training processes
2024-08-18 15:08:56,680 [Process: 0] Evaluating...
2024-08-18 15:08:56,682 [Process: 0] EPOCH 356:
2024-08-18 15:08:56,683 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9897e-01, 4.8095e-03, 2.1763e-03,  ..., 9.9424e-01,
          9.9396e-01, 1.6998e-03],
         [3.4446e-04, 3.6508e-03, 2.1763e-03,  ..., 1.5478e-03,
          1.6715e-03, 1.6998e-03],
         [3.4446e-04, 5.0762e-03, 2.1763e-03,  ..., 2.6611e-03,
          2.7013e-03, 1.6998e-03],
         [3.4446e-04, 9.8646e-01, 9.9347e-01,  ..., 1.5478e-03,
          1.6715e-03, 9.9490e-01]],
        [[9.0813e-04, 7.3247e-04, 3.1669e-03,  ..., 2.3154e-03,
          2.9866e-04, 9.0827e-04],
         [9.0813e-04, 7.3247e-04, 3.1669e-03,  ..., 2.3154e-03,
          2.9866e-04, 9.0827e-04],
         [9.9728e-01, 7.3247e-04, 3.8147e-03,  ..., 3.6840e-03,
          9.9910e-01, 9.9728e-01],
         [9.0813e-04, 9.9780e-01, 9.8985e-01,  ..., 9.9169e-01,
          2.9866e-04, 9.0827e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.1599e-03, 8.4435e-05, 9.9861e-01,  ..., 5.7460e-03,
          3.9087e-04, 6.0196e-03],
         [6.1599e-03, 8.4435e-05, 3.2847e-04,  ..., 5.7460e-03,
          1.1469e-04, 6.0196e-03],
         [9.7835e-01, 8.4435e-05, 3.2847e-04,  ..., 9.8276e-01,
          1.1469e-04, 9.8113e-01],
         [9.3320e-03, 9.9975e-01, 7.3564e-04,  ..., 5.7460e-03,
          9.9938e-01, 6.8339e-03]],
        [[4.2847e-03, 2.1610e-04, 4.6505e-05,  ..., 2.6892e-03,
          7.0176e-03, 9.9727e-01],
         [4.2847e-03, 2.1610e-04, 4.6505e-05,  ..., 2.6892e-03,
          7.0176e-03, 9.0926e-04],
         [9.8697e-01, 2.1610e-04, 4.6505e-05,  ..., 9.9193e-01,
          9.7603e-01, 9.0926e-04],
         [4.4574e-03, 9.9935e-01, 9.9986e-01,  ..., 2.6892e-03,
          9.9397e-03, 9.0926e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 356:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9883e-01, 1.3511e-03, 2.4202e-03,  ..., 8.8405e-01,
          9.9691e-01, 2.2784e-03],
         [3.8933e-04, 1.3511e-03, 2.4202e-03,  ..., 1.2268e-02,
          9.3604e-04, 2.2784e-03],
         [3.9247e-04, 1.3511e-03, 2.4668e-03,  ..., 8.1450e-02,
          1.2207e-03, 2.5380e-03],
         [3.8933e-04, 9.9595e-01, 9.9269e-01,  ..., 2.2232e-02,
          9.3604e-04, 9.9291e-01]],
        [[1.2702e-03, 1.1282e-02, 4.7341e-02,  ..., 5.8565e-03,
          9.5618e-04, 1.3018e-03],
         [1.2702e-03, 3.1621e-03, 6.3397e-03,  ..., 3.7645e-03,
          9.5618e-04, 1.3018e-03],
         [9.9619e-01, 3.1621e-03, 6.3397e-03,  ..., 4.7459e-03,
          9.9713e-01, 9.9609e-01],
         [1.2702e-03, 9.8239e-01, 9.3998e-01,  ..., 9.8563e-01,
          9.5618e-04, 1.3018e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1302e-03, 2.8832e-04, 9.9568e-01,  ..., 3.6803e-03,
          1.9727e-03, 6.9064e-03],
         [8.2869e-03, 2.8832e-04, 1.3866e-03,  ..., 3.6803e-03,
          1.1122e-03, 6.7685e-03],
         [9.7078e-01, 2.8832e-04, 1.5452e-03,  ..., 9.8896e-01,
          1.1122e-03, 9.7863e-01],
         [1.1802e-02, 9.9914e-01, 1.3866e-03,  ..., 3.6803e-03,
          9.9580e-01, 7.6947e-03]],
        [[5.3352e-03, 1.3502e-05, 8.4039e-05,  ..., 4.3620e-03,
          4.3422e-03, 9.9618e-01],
         [5.3352e-03, 1.3502e-05, 8.7389e-05,  ..., 4.3620e-03,
          4.3422e-03, 1.0192e-03],
         [9.8295e-01, 1.3502e-05, 8.4039e-05,  ..., 9.8691e-01,
          9.8697e-01, 1.0192e-03],
         [6.3832e-03, 9.9996e-01, 9.9974e-01,  ..., 4.3620e-03,
          4.3422e-03, 1.7842e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 357:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:08:57,825 [Process: 0] Synchronize training processes
2024-08-18 15:08:57,825 [Process: 0] Evaluating...
2024-08-18 15:08:57,827 [Process: 0] EPOCH 357:
2024-08-18 15:08:57,829 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9408e-01, 2.3334e-03, 7.8373e-04,  ..., 9.9923e-01,
          9.6075e-01, 1.3002e-03],
         [1.5040e-03, 2.3334e-03, 7.8373e-04,  ..., 2.5781e-04,
          5.5848e-03, 1.3002e-03],
         [2.9094e-03, 2.3334e-03, 7.8373e-04,  ..., 2.5781e-04,
          2.8082e-02, 1.3002e-03],
         [1.5040e-03, 9.9300e-01, 9.9765e-01,  ..., 2.5781e-04,
          5.5848e-03, 9.9610e-01]],
        [[1.4003e-03, 3.4708e-03, 1.8333e-04,  ..., 4.3328e-04,
          5.5270e-04, 6.7525e-04],
         [1.4003e-03, 2.6607e-03, 1.8333e-04,  ..., 4.3328e-04,
          5.5270e-04, 6.7525e-04],
         [9.9580e-01, 2.6607e-03, 1.8333e-04,  ..., 4.3328e-04,
          9.9834e-01, 9.9797e-01],
         [1.4003e-03, 9.9121e-01, 9.9945e-01,  ..., 9.9870e-01,
          5.5270e-04, 6.7525e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1637e-03, 2.0677e-04, 9.9960e-01,  ..., 6.2580e-03,
          2.5342e-04, 6.5819e-03],
         [3.1637e-03, 2.0677e-04, 1.3250e-04,  ..., 6.2580e-03,
          2.5342e-04, 6.2295e-03],
         [9.9051e-01, 2.0677e-04, 1.3250e-04,  ..., 9.8012e-01,
          2.5342e-04, 9.8077e-01],
         [3.1637e-03, 9.9938e-01, 1.3250e-04,  ..., 7.3600e-03,
          9.9924e-01, 6.4203e-03]],
        [[4.8274e-03, 2.8338e-04, 9.5877e-05,  ..., 4.5447e-03,
          6.8435e-03, 9.9005e-01],
         [4.8274e-03, 2.8338e-04, 9.5877e-05,  ..., 4.5447e-03,
          6.8435e-03, 1.7084e-03],
         [9.8552e-01, 2.8338e-04, 9.5877e-05,  ..., 9.8637e-01,
          9.7735e-01, 1.7084e-03],
         [4.8274e-03, 9.9915e-01, 9.9971e-01,  ..., 4.5447e-03,
          8.9651e-03, 6.5324e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 358:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9675e-01, 4.9014e-03, 1.4398e-03,  ..., 9.9498e-01,
          9.9499e-01, 1.6432e-03],
         [1.0355e-03, 4.8025e-03, 1.4398e-03,  ..., 1.2094e-03,
          1.5658e-03, 1.6432e-03],
         [1.1814e-03, 7.9466e-03, 1.4398e-03,  ..., 2.6035e-03,
          1.6504e-03, 1.6432e-03],
         [1.0355e-03, 9.8235e-01, 9.9568e-01,  ..., 1.2094e-03,
          1.7906e-03, 9.9507e-01]],
        [[1.8061e-04, 3.4717e-04, 1.0020e-03,  ..., 5.7030e-04,
          1.1089e-03, 2.1781e-03],
         [1.8061e-04, 3.4717e-04, 1.0020e-03,  ..., 5.7030e-04,
          1.1089e-03, 2.1781e-03],
         [9.9946e-01, 3.4717e-04, 1.0020e-03,  ..., 5.7030e-04,
          9.9667e-01, 9.9347e-01],
         [1.8061e-04, 9.9896e-01, 9.9699e-01,  ..., 9.9829e-01,
          1.1089e-03, 2.1781e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:08:59,003 [Process: 0] Synchronize training processes
2024-08-18 15:08:59,004 [Process: 0] Evaluating...
2024-08-18 15:08:59,005 [Process: 0] EPOCH 358:
2024-08-18 15:08:59,007 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:00,152 [Process: 0] Synchronize training processes
2024-08-18 15:09:00,152 [Process: 0] Evaluating...
2024-08-18 15:09:00,154 [Process: 0] EPOCH 359:
2024-08-18 15:09:00,155 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7519e-03, 3.9438e-04, 9.8626e-01,  ..., 3.7965e-03,
          1.0096e-03, 4.6911e-03],
         [4.7519e-03, 1.4697e-04, 2.8746e-03,  ..., 3.7965e-03,
          9.6047e-04, 4.6911e-03],
         [9.8574e-01, 1.4697e-04, 2.8746e-03,  ..., 9.8861e-01,
          9.6047e-04, 9.8593e-01],
         [4.7519e-03, 9.9931e-01, 7.9900e-03,  ..., 3.7965e-03,
          9.9707e-01, 4.6911e-03]],
        [[7.3872e-03, 3.2182e-04, 1.4001e-04,  ..., 6.3626e-03,
          6.0602e-03, 9.9848e-01],
         [6.4101e-03, 3.2182e-04, 1.4001e-04,  ..., 6.3626e-03,
          6.0602e-03, 3.7509e-04],
         [9.7895e-01, 3.2182e-04, 1.4001e-04,  ..., 9.8046e-01,
          9.8084e-01, 3.7509e-04],
         [7.2536e-03, 9.9903e-01, 9.9958e-01,  ..., 6.8158e-03,
          7.0395e-03, 7.7403e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 359:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9916e-01, 1.4128e-02, 2.5741e-03,  ..., 9.9833e-01,
          9.9676e-01, 8.7126e-04],
         [2.8074e-04, 9.0815e-03, 1.6382e-03,  ..., 5.1434e-04,
          9.4869e-04, 8.7126e-04],
         [2.8074e-04, 3.0492e-02, 1.6382e-03,  ..., 6.3862e-04,
          1.3471e-03, 8.7126e-04],
         [2.8074e-04, 9.4630e-01, 9.9415e-01,  ..., 5.1434e-04,
          9.4869e-04, 9.9739e-01]],
        [[1.0478e-03, 2.8251e-03, 1.3312e-03,  ..., 1.3828e-03,
          8.2576e-04, 1.0710e-03],
         [1.0478e-03, 2.8251e-03, 1.1578e-03,  ..., 1.3828e-03,
          8.2576e-04, 1.0710e-03],
         [9.9686e-01, 3.9813e-03, 1.1578e-03,  ..., 1.5355e-03,
          9.9752e-01, 9.9679e-01],
         [1.0478e-03, 9.9037e-01, 9.9635e-01,  ..., 9.9570e-01,
          8.2576e-04, 1.0710e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.3367e-03, 3.4931e-05, 9.9968e-01,  ..., 6.9099e-03,
          1.1349e-03, 2.3811e-03],
         [5.3367e-03, 3.4931e-05, 9.4813e-05,  ..., 6.9099e-03,
          1.1349e-03, 2.3811e-03],
         [9.8399e-01, 3.4931e-05, 9.4813e-05,  ..., 9.7746e-01,
          1.1349e-03, 9.9286e-01],
         [5.3367e-03, 9.9990e-01, 1.2594e-04,  ..., 8.7202e-03,
          9.9660e-01, 2.3811e-03]],
        [[4.1399e-03, 4.7050e-05, 2.5699e-05,  ..., 4.8170e-03,
          6.9774e-03, 9.9582e-01],
         [4.1399e-03, 4.8465e-05, 2.5699e-05,  ..., 4.8170e-03,
          6.9774e-03, 1.2940e-03],
         [9.8758e-01, 4.7050e-05, 2.5699e-05,  ..., 9.8555e-01,
          9.7653e-01, 1.2940e-03],
         [4.1399e-03, 9.9986e-01, 9.9992e-01,  ..., 4.8170e-03,
          9.5132e-03, 1.5914e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 360:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9962e-01, 6.8418e-03, 9.1079e-04,  ..., 9.9119e-01,
          9.9904e-01, 2.1328e-03],
         [1.2651e-04, 3.7813e-03, 9.1079e-04,  ..., 1.8941e-03,
          3.2012e-04, 2.1328e-03],
         [1.2651e-04, 3.7813e-03, 9.1079e-04,  ..., 5.0201e-03,
          3.2012e-04, 3.9910e-03],
         [1.2651e-04, 9.8560e-01, 9.9727e-01,  ..., 1.8941e-03,
          3.2012e-04, 9.9174e-01]],
        [[3.7273e-04, 1.9391e-03, 1.0850e-03,  ..., 3.3254e-03,
          2.5128e-03, 6.5188e-04],
         [3.7273e-04, 1.9391e-03, 1.0850e-03,  ..., 1.2381e-03,
          2.5128e-03, 6.5188e-04],
         [9.9888e-01, 1.9391e-03, 1.0850e-03,  ..., 1.2381e-03,
          9.9246e-01, 9.9804e-01],
         [3.7273e-04, 9.9418e-01, 9.9675e-01,  ..., 9.9420e-01,
          2.5128e-03, 6.5188e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:09:01,302 [Process: 0] Synchronize training processes
2024-08-18 15:09:01,302 [Process: 0] Evaluating...
2024-08-18 15:09:01,304 [Process: 0] EPOCH 360:
2024-08-18 15:09:01,306 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:02,455 [Process: 0] Synchronize training processes
2024-08-18 15:09:02,455 [Process: 0] Evaluating...
2024-08-18 15:09:02,457 [Process: 0] EPOCH 361:
2024-08-18 15:09:02,459 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9087e-03, 3.9242e-04, 9.9896e-01,  ..., 4.1438e-03,
          6.9096e-03, 3.9775e-03],
         [3.9087e-03, 3.9242e-04, 3.4602e-04,  ..., 4.1438e-03,
          3.0093e-03, 3.9775e-03],
         [9.8827e-01, 3.9242e-04, 3.4602e-04,  ..., 9.8757e-01,
          3.4880e-03, 9.8807e-01],
         [3.9087e-03, 9.9882e-01, 3.4602e-04,  ..., 4.1438e-03,
          9.8659e-01, 3.9775e-03]],
        [[6.6801e-03, 7.8592e-05, 2.9981e-05,  ..., 4.7013e-03,
          3.7339e-03, 9.9742e-01],
         [6.6801e-03, 7.8592e-05, 3.1478e-05,  ..., 4.7013e-03,
          3.7339e-03, 7.5417e-04],
         [9.7608e-01, 7.8592e-05, 2.9981e-05,  ..., 9.8590e-01,
          9.8880e-01, 7.5417e-04],
         [1.0557e-02, 9.9976e-01, 9.9991e-01,  ..., 4.7013e-03,
          3.7339e-03, 1.0761e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 361:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9449e-01, 1.9518e-03, 1.4687e-03,  ..., 9.9505e-01,
          9.9912e-01, 9.5631e-04],
         [1.6112e-03, 1.9518e-03, 1.4687e-03,  ..., 1.2379e-03,
          2.9475e-04, 9.5631e-04],
         [2.2850e-03, 4.0999e-03, 1.4687e-03,  ..., 2.4766e-03,
          2.9475e-04, 9.5631e-04],
         [1.6112e-03, 9.9200e-01, 9.9559e-01,  ..., 1.2379e-03,
          2.9475e-04, 9.9713e-01]],
        [[1.5207e-03, 4.2194e-03, 1.8985e-03,  ..., 4.7337e-03,
          5.4447e-04, 3.6568e-03],
         [1.5207e-03, 3.6359e-03, 1.8985e-03,  ..., 3.5733e-03,
          5.4447e-04, 3.6568e-03],
         [9.9544e-01, 4.1894e-03, 2.3330e-03,  ..., 4.8579e-03,
          9.9837e-01, 9.8852e-01],
         [1.5207e-03, 9.8796e-01, 9.9387e-01,  ..., 9.8684e-01,
          5.4447e-04, 4.1713e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8815e-03, 4.1741e-04, 9.7382e-01,  ..., 3.1792e-03,
          2.4845e-03, 2.8845e-03],
         [3.8815e-03, 4.1741e-04, 2.3560e-03,  ..., 3.1792e-03,
          2.4845e-03, 2.8845e-03],
         [9.8836e-01, 4.1741e-04, 2.3560e-03,  ..., 9.9046e-01,
          3.7520e-03, 9.9135e-01],
         [3.8815e-03, 9.9875e-01, 2.1463e-02,  ..., 3.1792e-03,
          9.9128e-01, 2.8845e-03]],
        [[4.7694e-03, 1.1194e-05, 9.2585e-05,  ..., 1.6144e-02,
          4.5589e-03, 9.9868e-01],
         [4.7694e-03, 1.1761e-05, 9.2585e-05,  ..., 1.1496e-02,
          4.5589e-03, 4.2168e-04],
         [9.8569e-01, 1.1194e-05, 9.2585e-05,  ..., 9.4963e-01,
          9.8632e-01, 4.2168e-04],
         [4.7694e-03, 9.9997e-01, 9.9972e-01,  ..., 2.2729e-02,
          4.5589e-03, 4.7982e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 362:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:03,605 [Process: 0] Synchronize training processes
2024-08-18 15:09:03,606 [Process: 0] Evaluating...
2024-08-18 15:09:03,610 [Process: 0] EPOCH 362:
2024-08-18 15:09:03,612 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:04,759 [Process: 0] Synchronize training processes
2024-08-18 15:09:04,759 [Process: 0] Evaluating...
2024-08-18 15:09:04,761 [Process: 0] EPOCH 363:
2024-08-18 15:09:04,763 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9678e-01, 5.5379e-03, 3.2463e-04,  ..., 9.9693e-01,
          9.9652e-01, 3.4348e-03],
         [9.7745e-04, 5.5379e-03, 3.2463e-04,  ..., 9.5707e-04,
          1.1118e-03, 2.4373e-03],
         [1.2627e-03, 1.1901e-02, 3.2463e-04,  ..., 1.1513e-03,
          1.2590e-03, 2.7317e-03],
         [9.7745e-04, 9.7702e-01, 9.9903e-01,  ..., 9.5707e-04,
          1.1118e-03, 9.9140e-01]],
        [[1.4227e-03, 7.3077e-04, 1.8367e-04,  ..., 3.2373e-03,
          1.5463e-03, 7.7504e-04],
         [1.4227e-03, 7.3077e-04, 1.8367e-04,  ..., 3.2277e-03,
          1.5463e-03, 7.7504e-04],
         [9.9573e-01, 7.3077e-04, 1.8367e-04,  ..., 3.5057e-03,
          9.9536e-01, 9.9767e-01],
         [1.4227e-03, 9.9781e-01, 9.9945e-01,  ..., 9.9003e-01,
          1.5463e-03, 7.7504e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5421e-03, 3.3190e-04, 9.9572e-01,  ..., 5.4827e-03,
          7.8835e-04, 3.7065e-03],
         [3.5421e-03, 3.3190e-04, 1.4276e-03,  ..., 5.4827e-03,
          7.8835e-04, 3.7065e-03],
         [9.8937e-01, 3.3190e-04, 1.4276e-03,  ..., 9.8327e-01,
          7.8835e-04, 9.8888e-01],
         [3.5421e-03, 9.9900e-01, 1.4276e-03,  ..., 5.7604e-03,
          9.9764e-01, 3.7065e-03]],
        [[2.9839e-03, 1.3399e-04, 1.0456e-04,  ..., 3.9187e-03,
          3.7381e-03, 9.9912e-01],
         [2.9839e-03, 1.3399e-04, 1.0537e-04,  ..., 3.9187e-03,
          3.7381e-03, 2.9168e-04],
         [9.9105e-01, 1.3399e-04, 1.0456e-04,  ..., 9.8824e-01,
          9.8879e-01, 2.9168e-04],
         [2.9839e-03, 9.9960e-01, 9.9969e-01,  ..., 3.9187e-03,
          3.7381e-03, 2.9168e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 363:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9770e-01, 8.0826e-04, 7.6649e-04,  ..., 9.9823e-01,
          9.9603e-01, 1.7325e-03],
         [7.5230e-04, 8.0826e-04, 7.6649e-04,  ..., 5.9155e-04,
          1.3219e-03, 1.7325e-03],
         [7.9415e-04, 8.0826e-04, 7.6649e-04,  ..., 5.9155e-04,
          1.3219e-03, 2.5332e-03],
         [7.5230e-04, 9.9758e-01, 9.9770e-01,  ..., 5.9155e-04,
          1.3219e-03, 9.9400e-01]],
        [[6.3656e-04, 8.2838e-04, 1.3744e-03,  ..., 5.1021e-04,
          7.6555e-04, 1.2086e-03],
         [6.3656e-04, 8.2838e-04, 1.3744e-03,  ..., 5.1021e-04,
          7.6555e-04, 1.2086e-03],
         [9.9809e-01, 8.2838e-04, 1.3744e-03,  ..., 5.1021e-04,
          9.9770e-01, 9.9637e-01],
         [6.3656e-04, 9.9751e-01, 9.9588e-01,  ..., 9.9847e-01,
          7.6555e-04, 1.2086e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.4805e-03, 1.5305e-04, 9.9867e-01,  ..., 4.2636e-03,
          9.3512e-05, 3.2490e-03],
         [6.4805e-03, 1.5305e-04, 2.8387e-04,  ..., 4.2636e-03,
          9.3512e-05, 3.2490e-03],
         [9.8006e-01, 1.5305e-04, 2.8387e-04,  ..., 9.8721e-01,
          9.3512e-05, 9.9025e-01],
         [6.9778e-03, 9.9954e-01, 7.6262e-04,  ..., 4.2636e-03,
          9.9972e-01, 3.2490e-03]],
        [[4.2890e-03, 2.8120e-05, 3.8921e-05,  ..., 5.3571e-03,
          5.7110e-03, 9.9920e-01],
         [4.2890e-03, 2.8120e-05, 3.8921e-05,  ..., 5.3571e-03,
          5.7110e-03, 2.6598e-04],
         [9.8713e-01, 2.8120e-05, 3.8921e-05,  ..., 9.8375e-01,
          9.8204e-01, 2.6598e-04],
         [4.2890e-03, 9.9992e-01, 9.9988e-01,  ..., 5.5348e-03,
          6.5423e-03, 2.6598e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 364:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:05,911 [Process: 0] Synchronize training processes
2024-08-18 15:09:05,912 [Process: 0] Evaluating...
2024-08-18 15:09:05,913 [Process: 0] EPOCH 364:
2024-08-18 15:09:05,915 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9765e-01, 6.4315e-03, 3.1691e-03,  ..., 9.9809e-01,
          9.8180e-01, 7.5857e-04],
         [7.8333e-04, 5.9364e-03, 3.1691e-03,  ..., 6.0960e-04,
          3.2688e-03, 7.5857e-04],
         [7.8333e-04, 1.3113e-02, 4.9502e-03,  ..., 6.8706e-04,
          1.1658e-02, 7.5857e-04],
         [7.8333e-04, 9.7452e-01, 9.8871e-01,  ..., 6.0960e-04,
          3.2688e-03, 9.9772e-01]],
        [[1.8881e-03, 6.6173e-04, 9.0636e-04,  ..., 6.9147e-04,
          1.0757e-03, 1.1799e-03],
         [1.8881e-03, 6.6173e-04, 9.0636e-04,  ..., 6.9147e-04,
          1.0757e-03, 1.1799e-03],
         [9.9434e-01, 6.6173e-04, 9.0636e-04,  ..., 6.9147e-04,
          9.9677e-01, 9.9646e-01],
         [1.8881e-03, 9.9801e-01, 9.9728e-01,  ..., 9.9793e-01,
          1.0757e-03, 1.1799e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.8296e-03, 1.2560e-04, 9.9792e-01,  ..., 4.7933e-03,
          3.8142e-04, 5.8705e-03],
         [5.8296e-03, 1.2560e-04, 4.8200e-04,  ..., 4.7933e-03,
          3.8142e-04, 5.8705e-03],
         [9.8164e-01, 1.2560e-04, 4.8200e-04,  ..., 9.8562e-01,
          3.8142e-04, 9.8177e-01],
         [6.7021e-03, 9.9962e-01, 1.1167e-03,  ..., 4.7933e-03,
          9.9886e-01, 6.4858e-03]],
        [[5.0341e-03, 3.3948e-05, 1.6790e-05,  ..., 3.8519e-03,
          5.0429e-03, 9.9501e-01],
         [5.0341e-03, 3.3948e-05, 1.7333e-05,  ..., 3.8519e-03,
          5.0429e-03, 5.6478e-04],
         [9.8490e-01, 3.3948e-05, 1.6790e-05,  ..., 9.8844e-01,
          9.8337e-01, 5.6478e-04],
         [5.0341e-03, 9.9990e-01, 9.9995e-01,  ..., 3.8519e-03,
          6.5400e-03, 3.8650e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 365:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9905e-01, 9.6485e-03, 4.0602e-03,  ..., 9.9780e-01,
          9.9483e-01, 1.2145e-02],
         [3.1700e-04, 9.6485e-03, 4.0602e-03,  ..., 7.3393e-04,
          1.5727e-03, 7.1288e-03],
         [3.1700e-04, 3.0176e-02, 1.1933e-02,  ..., 7.3393e-04,
          1.8747e-03, 1.5972e-02],
         [3.1700e-04, 9.5053e-01, 9.7995e-01,  ..., 7.3393e-04,
          1.7244e-03, 9.6475e-01]],
        [[5.1990e-04, 2.7298e-02, 1.0677e-03,  ..., 2.8152e-04,
          7.7531e-04, 9.6550e-04],
         [5.1990e-04, 1.1682e-02, 1.0677e-03,  ..., 2.8152e-04,
          7.7531e-04, 9.6550e-04],
         [9.9844e-01, 3.4333e-02, 1.0677e-03,  ..., 2.8152e-04,
          9.9767e-01, 9.9710e-01],
         [5.1990e-04, 9.2669e-01, 9.9680e-01,  ..., 9.9916e-01,
          7.7531e-04, 9.6550e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-18 15:09:07,060 [Process: 0] Synchronize training processes
2024-08-18 15:09:07,061 [Process: 0] Evaluating...
2024-08-18 15:09:07,062 [Process: 0] EPOCH 365:
2024-08-18 15:09:07,064 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:08,197 [Process: 0] Synchronize training processes
2024-08-18 15:09:08,197 [Process: 0] Evaluating...
2024-08-18 15:09:08,199 [Process: 0] EPOCH 366:
2024-08-18 15:09:08,201 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6689e-03, 3.5937e-04, 9.9908e-01,  ..., 1.5361e-03,
          3.7967e-04, 2.7207e-03],
         [3.6689e-03, 3.5937e-04, 3.0602e-04,  ..., 1.5361e-03,
          3.5507e-04, 2.7207e-03],
         [9.8899e-01, 3.5937e-04, 3.0602e-04,  ..., 9.9539e-01,
          3.5507e-04, 9.9184e-01],
         [3.6689e-03, 9.9892e-01, 3.0602e-04,  ..., 1.5361e-03,
          9.9891e-01, 2.7207e-03]],
        [[5.7668e-03, 5.3171e-06, 5.8212e-05,  ..., 3.2703e-03,
          5.0175e-03, 9.9797e-01],
         [5.7668e-03, 5.6514e-06, 5.8212e-05,  ..., 3.2703e-03,
          4.3546e-03, 4.4594e-04],
         [9.8270e-01, 5.3171e-06, 5.8212e-05,  ..., 9.9019e-01,
          9.8627e-01, 4.4594e-04],
         [5.7668e-03, 9.9998e-01, 9.9983e-01,  ..., 3.2703e-03,
          4.3546e-03, 1.1383e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 366:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9727e-01, 3.0412e-03, 1.2185e-03,  ..., 9.9923e-01,
          9.9693e-01, 9.3133e-04],
         [8.6781e-04, 3.0412e-03, 1.2185e-03,  ..., 2.5760e-04,
          1.0096e-03, 9.3133e-04],
         [9.9615e-04, 4.5819e-03, 1.2185e-03,  ..., 2.5760e-04,
          1.0479e-03, 9.3133e-04],
         [8.6781e-04, 9.8934e-01, 9.9634e-01,  ..., 2.5760e-04,
          1.0096e-03, 9.9721e-01]],
        [[1.0310e-03, 1.8860e-02, 3.3358e-04,  ..., 8.0977e-04,
          7.9453e-04, 8.7381e-04],
         [1.0310e-03, 3.4325e-03, 3.3358e-04,  ..., 8.0977e-04,
          7.9453e-04, 8.7381e-04],
         [9.9691e-01, 3.4325e-03, 3.3358e-04,  ..., 8.0977e-04,
          9.9762e-01, 9.9738e-01],
         [1.0310e-03, 9.7428e-01, 9.9900e-01,  ..., 9.9757e-01,
          7.9453e-04, 8.7381e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0505e-03, 4.6149e-05, 9.9892e-01,  ..., 2.8073e-03,
          7.3561e-04, 4.7677e-03],
         [4.0505e-03, 4.6149e-05, 3.4138e-04,  ..., 2.8073e-03,
          5.6222e-04, 4.7677e-03],
         [9.8785e-01, 4.6149e-05, 3.4138e-04,  ..., 9.9158e-01,
          5.6222e-04, 9.8546e-01],
         [4.0505e-03, 9.9986e-01, 3.9365e-04,  ..., 2.8073e-03,
          9.9814e-01, 5.0040e-03]],
        [[4.7855e-03, 2.1046e-05, 3.9536e-06,  ..., 5.1952e-03,
          3.5040e-03, 9.9933e-01],
         [4.7855e-03, 2.1046e-05, 3.9536e-06,  ..., 5.1952e-03,
          3.5040e-03, 2.2167e-04],
         [9.8550e-01, 2.1046e-05, 3.9536e-06,  ..., 9.8441e-01,
          9.8949e-01, 2.2167e-04],
         [4.9254e-03, 9.9994e-01, 9.9999e-01,  ..., 5.1952e-03,
          3.5040e-03, 2.2167e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 367:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9104e-01, 1.0920e-03, 1.4619e-03,  ..., 9.9756e-01,
          9.9557e-01, 4.4433e-03],
         [2.2616e-03, 1.0920e-03, 1.0522e-03,  ..., 8.1439e-04,
          1.4530e-03, 4.4433e-03],
         [4.4328e-03, 1.0920e-03, 1.0522e-03,  ..., 8.1439e-04,
          1.5287e-03, 7.9379e-03],
         [2.2616e-03, 9.9672e-01, 9.9643e-01,  ..., 8.1439e-04,
          1.4530e-03, 9.8318e-01]],
        [[8.3132e-04, 1.1091e-02, 1.6722e-03,  ..., 8.9298e-04,
          4.2853e-04, 6.8020e-04],
         [8.3132e-04, 4.8300e-03, 1.6722e-03,  ..., 8.9298e-04,
          4.2853e-04, 6.8020e-04],
         [9.9751e-01, 8.1132e-03, 1.6722e-03,  ..., 8.9298e-04,
          9.9871e-01, 9.9796e-01],
         [8.3132e-04, 9.7597e-01, 9.9498e-01,  ..., 9.9732e-01,
          4.2853e-04, 6.8020e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:09:09,341 [Process: 0] Synchronize training processes
2024-08-18 15:09:09,341 [Process: 0] Evaluating...
2024-08-18 15:09:09,343 [Process: 0] EPOCH 367:
2024-08-18 15:09:09,345 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:10,487 [Process: 0] Synchronize training processes
2024-08-18 15:09:10,487 [Process: 0] Evaluating...
2024-08-18 15:09:10,489 [Process: 0] EPOCH 368:
2024-08-18 15:09:10,491 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8375e-03, 2.1084e-04, 9.9897e-01,  ..., 3.2750e-03,
          3.9803e-04, 3.5216e-03],
         [2.8375e-03, 2.1084e-04, 1.8364e-04,  ..., 3.2750e-03,
          3.9803e-04, 3.5216e-03],
         [9.9149e-01, 2.1084e-04, 1.8364e-04,  ..., 9.9018e-01,
          3.9803e-04, 9.8944e-01],
         [2.8375e-03, 9.9937e-01, 6.6630e-04,  ..., 3.2750e-03,
          9.9881e-01, 3.5216e-03]],
        [[4.3240e-03, 1.4073e-05, 8.4410e-05,  ..., 5.8721e-03,
          2.0138e-03, 9.9756e-01],
         [4.3240e-03, 1.5367e-05, 8.4410e-05,  ..., 5.8721e-03,
          2.0138e-03, 4.6551e-04],
         [9.8703e-01, 1.4073e-05, 8.4410e-05,  ..., 9.8099e-01,
          9.9396e-01, 4.6551e-04],
         [4.3240e-03, 9.9996e-01, 9.9975e-01,  ..., 7.2630e-03,
          2.0138e-03, 1.5072e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 368:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8552e-01, 8.7720e-04, 8.3701e-04,  ..., 9.9745e-01,
          9.9492e-01, 2.3083e-04],
         [3.1507e-03, 8.7720e-04, 8.3701e-04,  ..., 8.3111e-04,
          1.3944e-03, 2.3083e-04],
         [3.9040e-03, 8.7720e-04, 8.3701e-04,  ..., 8.9049e-04,
          2.2893e-03, 2.3083e-04],
         [7.4301e-03, 9.9737e-01, 9.9749e-01,  ..., 8.3111e-04,
          1.3944e-03, 9.9931e-01]],
        [[3.4373e-03, 2.2636e-03, 2.1599e-03,  ..., 2.1808e-03,
          1.0637e-03, 1.5261e-03],
         [3.4373e-03, 2.2636e-03, 1.9664e-03,  ..., 2.1808e-03,
          1.0637e-03, 1.5261e-03],
         [9.8969e-01, 2.6060e-03, 2.0533e-03,  ..., 3.9519e-03,
          9.9681e-01, 9.9542e-01],
         [3.4373e-03, 9.9287e-01, 9.9382e-01,  ..., 9.9169e-01,
          1.0637e-03, 1.5261e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6771e-03, 5.3371e-04, 9.9726e-01,  ..., 3.4344e-03,
          9.4376e-04, 3.0555e-03],
         [3.6771e-03, 5.3371e-04, 4.4104e-04,  ..., 3.4344e-03,
          9.4376e-04, 3.0555e-03],
         [9.8897e-01, 5.3371e-04, 4.4104e-04,  ..., 9.8970e-01,
          9.4376e-04, 9.9083e-01],
         [3.6771e-03, 9.9840e-01, 1.8604e-03,  ..., 3.4344e-03,
          9.9717e-01, 3.0555e-03]],
        [[4.4688e-03, 2.3839e-05, 2.5675e-05,  ..., 3.1144e-03,
          3.5357e-03, 9.9764e-01],
         [4.4688e-03, 2.4767e-05, 2.5675e-05,  ..., 3.1144e-03,
          3.5357e-03, 7.8795e-04],
         [9.8611e-01, 2.3839e-05, 2.5675e-05,  ..., 9.9066e-01,
          9.8939e-01, 7.8795e-04],
         [4.9561e-03, 9.9993e-01, 9.9992e-01,  ..., 3.1144e-03,
          3.5357e-03, 7.8795e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 369:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:11,642 [Process: 0] Synchronize training processes
2024-08-18 15:09:11,642 [Process: 0] Evaluating...
2024-08-18 15:09:11,644 [Process: 0] EPOCH 369:
2024-08-18 15:09:11,645 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:12,813 [Process: 0] Synchronize training processes
2024-08-18 15:09:12,814 [Process: 0] Evaluating...
2024-08-18 15:09:12,816 [Process: 0] EPOCH 370:
2024-08-18 15:09:12,817 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9747e-01, 8.8361e-04, 5.4254e-03,  ..., 9.9915e-01,
          9.9873e-01, 1.2236e-03],
         [8.4206e-04, 8.8361e-04, 5.4254e-03,  ..., 2.8452e-04,
          4.2195e-04, 1.2236e-03],
         [8.4206e-04, 8.8361e-04, 1.4316e-02,  ..., 2.8452e-04,
          4.2195e-04, 1.2236e-03],
         [8.4206e-04, 9.9735e-01, 9.7483e-01,  ..., 2.8452e-04,
          4.2195e-04, 9.9633e-01]],
        [[5.9365e-04, 1.8568e-03, 1.5715e-02,  ..., 1.5620e-03,
          2.1994e-03, 8.7103e-04],
         [5.9365e-04, 1.8568e-03, 5.4156e-03,  ..., 1.5620e-03,
          1.9173e-03, 8.7103e-04],
         [9.9822e-01, 2.1224e-03, 5.9008e-03,  ..., 1.6229e-03,
          9.9397e-01, 9.9739e-01],
         [5.9365e-04, 9.9416e-01, 9.7297e-01,  ..., 9.9525e-01,
          1.9173e-03, 8.7103e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2288e-03, 6.7676e-04, 9.9802e-01,  ..., 1.0131e-02,
          1.4457e-04, 3.0121e-03],
         [5.2288e-03, 6.7676e-04, 5.5364e-04,  ..., 7.2068e-03,
          8.7396e-05, 3.0121e-03],
         [9.8409e-01, 6.7676e-04, 5.5364e-04,  ..., 9.7329e-01,
          8.7396e-05, 9.9096e-01],
         [5.4481e-03, 9.9797e-01, 8.7564e-04,  ..., 9.3751e-03,
          9.9968e-01, 3.0121e-03]],
        [[5.5778e-03, 1.4072e-05, 1.6894e-05,  ..., 2.8408e-03,
          3.0365e-03, 9.9855e-01],
         [5.5778e-03, 1.4072e-05, 1.6894e-05,  ..., 2.8408e-03,
          3.0365e-03, 4.8336e-04],
         [9.8327e-01, 1.4072e-05, 1.6894e-05,  ..., 9.9148e-01,
          9.9089e-01, 4.8336e-04],
         [5.5778e-03, 9.9996e-01, 9.9995e-01,  ..., 2.8408e-03,
          3.0365e-03, 4.8336e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 370:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9809e-01, 3.7322e-04, 2.5710e-03,  ..., 9.9927e-01,
          9.9803e-01, 5.1504e-03],
         [6.3599e-04, 3.7322e-04, 2.5710e-03,  ..., 2.4319e-04,
          6.5772e-04, 5.1504e-03],
         [6.3599e-04, 3.7322e-04, 3.2722e-03,  ..., 2.4319e-04,
          6.5772e-04, 1.1465e-02],
         [6.3599e-04, 9.9888e-01, 9.9159e-01,  ..., 2.4319e-04,
          6.5772e-04, 9.7823e-01]],
        [[6.9695e-04, 4.2661e-04, 5.6104e-03,  ..., 1.1530e-03,
          6.9314e-04, 1.1452e-03],
         [6.9695e-04, 4.2661e-04, 3.4491e-03,  ..., 1.1530e-03,
          6.9314e-04, 1.1452e-03],
         [9.9791e-01, 4.2661e-04, 3.4491e-03,  ..., 1.1530e-03,
          9.9792e-01, 9.9656e-01],
         [6.9695e-04, 9.9872e-01, 9.8749e-01,  ..., 9.9654e-01,
          6.9314e-04, 1.1452e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.9701e-03, 4.2835e-05, 9.9892e-01,  ..., 2.0736e-03,
          4.7625e-04, 4.9330e-03],
         [6.9701e-03, 4.2835e-05, 3.5853e-04,  ..., 2.0736e-03,
          4.7625e-04, 4.9330e-03],
         [9.7645e-01, 4.2835e-05, 3.5853e-04,  ..., 9.9378e-01,
          4.7625e-04, 9.8479e-01],
         [9.6077e-03, 9.9987e-01, 3.5853e-04,  ..., 2.0736e-03,
          9.9857e-01, 5.3475e-03]],
        [[4.4053e-03, 1.5411e-05, 7.3860e-05,  ..., 2.5184e-03,
          6.0107e-03, 9.9805e-01],
         [4.4053e-03, 1.5411e-05, 7.3860e-05,  ..., 2.5184e-03,
          5.0767e-03, 6.4944e-04],
         [9.8678e-01, 1.5411e-05, 7.3860e-05,  ..., 9.9244e-01,
          9.8384e-01, 6.4944e-04],
         [4.4053e-03, 9.9995e-01, 9.9978e-01,  ..., 2.5184e-03,
          5.0767e-03, 6.4944e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 371:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:13,962 [Process: 0] Synchronize training processes
2024-08-18 15:09:13,963 [Process: 0] Evaluating...
2024-08-18 15:09:13,964 [Process: 0] EPOCH 371:
2024-08-18 15:09:13,966 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9875e-01, 1.8494e-03, 3.5241e-03,  ..., 9.9796e-01,
          9.8699e-01, 4.8695e-04],
         [4.1589e-04, 1.8494e-03, 3.5241e-03,  ..., 6.7935e-04,
          2.4209e-03, 4.8695e-04],
         [4.1589e-04, 2.6582e-03, 6.0627e-03,  ..., 6.7935e-04,
          8.1662e-03, 4.8695e-04],
         [4.1589e-04, 9.9364e-01, 9.8689e-01,  ..., 6.7935e-04,
          2.4209e-03, 9.9854e-01]],
        [[1.7447e-04, 3.3024e-03, 4.9864e-03,  ..., 2.5281e-03,
          1.0128e-03, 1.8639e-03],
         [1.7447e-04, 1.9785e-03, 4.1415e-03,  ..., 2.5281e-03,
          1.0128e-03, 1.8639e-03],
         [9.9948e-01, 1.9785e-03, 6.1647e-03,  ..., 3.8233e-03,
          9.9696e-01, 9.9441e-01],
         [1.7447e-04, 9.9274e-01, 9.8471e-01,  ..., 9.9112e-01,
          1.0128e-03, 1.8639e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5688e-03, 2.2528e-04, 9.9434e-01,  ..., 2.7776e-03,
          7.8367e-05, 3.8569e-03],
         [3.5688e-03, 2.2528e-04, 1.4318e-03,  ..., 2.7776e-03,
          7.8367e-05, 3.8569e-03],
         [9.8929e-01, 2.2528e-04, 1.4318e-03,  ..., 9.9167e-01,
          7.8367e-05, 9.8843e-01],
         [3.5688e-03, 9.9932e-01, 2.7952e-03,  ..., 2.7776e-03,
          9.9976e-01, 3.8569e-03]],
        [[3.2796e-03, 1.0380e-04, 2.7220e-04,  ..., 4.5081e-03,
          6.6638e-03, 9.9911e-01],
         [3.2796e-03, 1.0380e-04, 2.7220e-04,  ..., 4.5081e-03,
          5.8301e-03, 1.9609e-04],
         [9.9016e-01, 1.0380e-04, 2.7220e-04,  ..., 9.8648e-01,
          9.8168e-01, 1.9609e-04],
         [3.2796e-03, 9.9969e-01, 9.9918e-01,  ..., 4.5081e-03,
          5.8301e-03, 4.9403e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 372:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9615e-01, 2.0053e-03, 2.7680e-03,  ..., 9.9261e-01,
          9.9938e-01, 9.8651e-04],
         [1.0978e-03, 2.0053e-03, 2.4360e-03,  ..., 2.0318e-03,
          2.0498e-04, 9.8651e-04],
         [1.6584e-03, 2.2476e-03, 2.4360e-03,  ..., 3.3301e-03,
          2.0498e-04, 9.8651e-04],
         [1.0978e-03, 9.9374e-01, 9.9236e-01,  ..., 2.0318e-03,
          2.0498e-04, 9.9704e-01]],
        [[1.0264e-03, 3.3607e-03, 5.5490e-03,  ..., 2.4905e-03,
          8.3681e-04, 5.5911e-04],
         [1.0264e-03, 1.8732e-03, 1.5901e-03,  ..., 2.4905e-03,
          8.3681e-04, 5.5911e-04],
         [9.9692e-01, 1.8732e-03, 1.5901e-03,  ..., 5.6188e-03,
          9.9749e-01, 9.9832e-01],
         [1.0264e-03, 9.9289e-01, 9.9127e-01,  ..., 9.8940e-01,
          8.3681e-04, 5.5911e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:09:15,124 [Process: 0] Synchronize training processes
2024-08-18 15:09:15,124 [Process: 0] Evaluating...
2024-08-18 15:09:15,129 [Process: 0] EPOCH 372:
2024-08-18 15:09:15,130 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:16,278 [Process: 0] Synchronize training processes
2024-08-18 15:09:16,278 [Process: 0] Evaluating...
2024-08-18 15:09:16,280 [Process: 0] EPOCH 373:
2024-08-18 15:09:16,282 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7612e-03, 5.0394e-04, 9.9731e-01,  ..., 8.3777e-03,
          6.1651e-05, 5.9422e-03],
         [2.7612e-03, 5.0394e-04, 6.7728e-04,  ..., 6.9169e-03,
          6.1651e-05, 4.9772e-03],
         [9.9172e-01, 5.0394e-04, 6.7728e-04,  ..., 9.7617e-01,
          6.1651e-05, 9.8410e-01],
         [2.7612e-03, 9.9849e-01, 1.3397e-03,  ..., 8.5384e-03,
          9.9982e-01, 4.9772e-03]],
        [[4.5995e-03, 8.8567e-05, 1.1290e-03,  ..., 2.1464e-03,
          5.0312e-03, 9.9951e-01],
         [4.5995e-03, 8.8567e-05, 1.1290e-03,  ..., 2.1464e-03,
          5.0312e-03, 1.6214e-04],
         [9.8620e-01, 8.8567e-05, 1.1290e-03,  ..., 9.9356e-01,
          9.8453e-01, 1.6214e-04],
         [4.5995e-03, 9.9973e-01, 9.9661e-01,  ..., 2.1464e-03,
          5.4107e-03, 1.6214e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 373:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9723e-01, 1.1505e-03, 9.4017e-04,  ..., 9.9238e-01,
          9.9330e-01, 2.6751e-04],
         [9.2498e-04, 1.1505e-03, 9.4017e-04,  ..., 1.7948e-03,
          1.8750e-03, 2.6751e-04],
         [9.2498e-04, 1.4273e-03, 1.4124e-03,  ..., 4.0268e-03,
          2.9485e-03, 2.6751e-04],
         [9.2498e-04, 9.9627e-01, 9.9671e-01,  ..., 1.7948e-03,
          1.8750e-03, 9.9920e-01]],
        [[7.6019e-04, 2.8575e-03, 2.2357e-03,  ..., 4.1882e-03,
          2.9410e-04, 1.0410e-03],
         [7.6019e-04, 2.7773e-03, 1.5842e-03,  ..., 1.8724e-03,
          2.9410e-04, 1.0410e-03],
         [9.9772e-01, 2.7773e-03, 1.5842e-03,  ..., 1.8724e-03,
          9.9912e-01, 9.9688e-01],
         [7.6019e-04, 9.9159e-01, 9.9460e-01,  ..., 9.9207e-01,
          2.9410e-04, 1.0410e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.3836e-03, 1.9849e-05, 9.9884e-01,  ..., 3.8862e-03,
          2.1180e-04, 1.1370e-02],
         [5.3836e-03, 1.9849e-05, 3.1229e-04,  ..., 3.8862e-03,
          2.1180e-04, 6.7900e-03],
         [9.8385e-01, 1.9849e-05, 3.1229e-04,  ..., 9.8834e-01,
          2.1180e-04, 9.7505e-01],
         [5.3836e-03, 9.9994e-01, 5.4002e-04,  ..., 3.8862e-03,
          9.9936e-01, 6.7900e-03]],
        [[4.1210e-03, 1.4820e-04, 8.9935e-06,  ..., 5.9287e-03,
          4.3993e-03, 9.9555e-01],
         [4.1210e-03, 1.4820e-04, 9.3519e-06,  ..., 5.2210e-03,
          4.3288e-03, 1.0330e-03],
         [9.8764e-01, 1.4820e-04, 8.9935e-06,  ..., 9.8363e-01,
          9.8694e-01, 1.0330e-03],
         [4.1210e-03, 9.9956e-01, 9.9997e-01,  ..., 5.2210e-03,
          4.3288e-03, 2.3795e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 374:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2486e-01, 1.1267e-03, 6.0258e-04,  ..., 9.9723e-01,
          9.9860e-01, 2.9425e-03],
         [6.6477e-03, 1.1267e-03, 6.0258e-04,  ..., 8.9454e-04,
          4.5745e-04, 2.6469e-03],
         [6.1843e-02, 1.9570e-03, 6.0258e-04,  ..., 9.7719e-04,
          4.8993e-04, 3.1732e-03],
         [6.6477e-03, 9.9579e-01, 9.9819e-01,  ..., 8.9454e-04,
          4.5745e-04, 9.9124e-01]],
        [[4.5192e-04, 6.4073e-04, 8.2067e-04,  ..., 6.3593e-03,
          2.0670e-03, 1.1200e-03],
         [4.5192e-04, 6.4073e-04, 8.2067e-04,  ..., 6.3593e-03,
          2.0670e-03, 1.1200e-03],
         [9.9864e-01, 6.4073e-04, 8.2067e-04,  ..., 1.5153e-02,
          9.9380e-01, 9.9664e-01],
         [4.5192e-04, 9.9808e-01, 9.9754e-01,  ..., 9.7213e-01,
          2.0670e-03, 1.1200e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:09:17,425 [Process: 0] Synchronize training processes
2024-08-18 15:09:17,425 [Process: 0] Evaluating...
2024-08-18 15:09:17,427 [Process: 0] EPOCH 374:
2024-08-18 15:09:17,429 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:18,576 [Process: 0] Synchronize training processes
2024-08-18 15:09:18,576 [Process: 0] Evaluating...
2024-08-18 15:09:18,578 [Process: 0] EPOCH 375:
2024-08-18 15:09:18,580 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.1744e-03, 4.5956e-04, 9.9953e-01,  ..., 4.4009e-03,
          5.6310e-04, 4.0227e-03],
         [5.1744e-03, 4.2647e-04, 1.5734e-04,  ..., 4.4009e-03,
          4.9118e-04, 4.0227e-03],
         [9.8347e-01, 4.2647e-04, 1.5734e-04,  ..., 9.8680e-01,
          4.9118e-04, 9.8793e-01],
         [6.1819e-03, 9.9869e-01, 1.5734e-04,  ..., 4.4009e-03,
          9.9845e-01, 4.0227e-03]],
        [[3.9838e-03, 1.1063e-03, 6.2968e-05,  ..., 2.9368e-03,
          3.1220e-03, 9.9407e-01],
         [3.9838e-03, 1.1063e-03, 6.2968e-05,  ..., 2.9368e-03,
          3.1220e-03, 1.2576e-03],
         [9.8805e-01, 1.1063e-03, 6.2968e-05,  ..., 9.9119e-01,
          9.9063e-01, 1.2576e-03],
         [3.9838e-03, 9.9668e-01, 9.9981e-01,  ..., 2.9368e-03,
          3.1220e-03, 3.4196e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 375:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9393e-01, 2.5124e-03, 2.2168e-04,  ..., 9.9901e-01,
          9.9857e-01, 2.3442e-03],
         [1.7061e-03, 2.5124e-03, 2.2168e-04,  ..., 3.2958e-04,
          4.7628e-04, 2.3442e-03],
         [2.6545e-03, 3.7643e-03, 2.2168e-04,  ..., 3.2958e-04,
          4.7628e-04, 3.6249e-03],
         [1.7061e-03, 9.9121e-01, 9.9933e-01,  ..., 3.2958e-04,
          4.7628e-04, 9.9169e-01]],
        [[3.6810e-04, 1.1428e-02, 2.3597e-02,  ..., 6.2039e-03,
          8.8515e-04, 9.0849e-04],
         [3.6810e-04, 9.6436e-03, 1.3606e-02,  ..., 3.1903e-03,
          8.8515e-04, 9.0849e-04],
         [9.9890e-01, 4.5441e-02, 4.4445e-02,  ..., 3.3940e-03,
          9.9734e-01, 9.9727e-01],
         [3.6810e-04, 9.3349e-01, 9.1835e-01,  ..., 9.8721e-01,
          8.8515e-04, 9.0849e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7372e-03, 9.0916e-03, 9.9937e-01,  ..., 3.2003e-03,
          1.1836e-05, 5.4119e-03],
         [3.7372e-03, 1.6403e-03, 1.7002e-04,  ..., 3.2003e-03,
          1.1836e-05, 5.4119e-03],
         [9.8879e-01, 1.6403e-03, 1.7002e-04,  ..., 9.9040e-01,
          1.1836e-05, 9.8289e-01],
         [3.7372e-03, 9.8763e-01, 2.9292e-04,  ..., 3.2003e-03,
          9.9996e-01, 6.2907e-03]],
        [[3.7502e-03, 9.3623e-05, 1.8160e-05,  ..., 3.3714e-03,
          4.4097e-03, 9.9657e-01],
         [3.7502e-03, 9.5678e-05, 1.8160e-05,  ..., 3.3714e-03,
          4.4097e-03, 1.0108e-03],
         [9.8875e-01, 9.3623e-05, 1.8160e-05,  ..., 9.8989e-01,
          9.8652e-01, 1.0108e-03],
         [3.7502e-03, 9.9972e-01, 9.9995e-01,  ..., 3.3714e-03,
          4.6565e-03, 1.4042e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 376:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:19,729 [Process: 0] Synchronize training processes
2024-08-18 15:09:19,730 [Process: 0] Evaluating...
2024-08-18 15:09:19,731 [Process: 0] EPOCH 376:
2024-08-18 15:09:19,733 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:20,901 [Process: 0] Synchronize training processes
2024-08-18 15:09:20,901 [Process: 0] Evaluating...
2024-08-18 15:09:20,903 [Process: 0] EPOCH 377:
2024-08-18 15:09:20,904 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9420e-01, 9.1958e-03, 1.0336e-03,  ..., 9.9948e-01,
          9.9131e-01, 5.9947e-04],
         [1.5438e-03, 5.6128e-03, 1.0336e-03,  ..., 1.7187e-04,
          2.3461e-03, 5.9947e-04],
         [2.7152e-03, 1.0970e-02, 1.0336e-03,  ..., 1.7187e-04,
          4.0014e-03, 5.9947e-04],
         [1.5438e-03, 9.7422e-01, 9.9690e-01,  ..., 1.7187e-04,
          2.3461e-03, 9.9820e-01]],
        [[5.1267e-04, 6.1879e-04, 1.2811e-02,  ..., 1.2962e-03,
          5.1447e-04, 7.9502e-04],
         [5.1267e-04, 6.1879e-04, 6.7418e-03,  ..., 1.2962e-03,
          5.1447e-04, 7.9502e-04],
         [9.9846e-01, 6.1879e-04, 1.1619e-02,  ..., 1.2962e-03,
          9.9846e-01, 9.9761e-01],
         [5.1267e-04, 9.9814e-01, 9.6883e-01,  ..., 9.9611e-01,
          5.1447e-04, 7.9502e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0956e-03, 3.4514e-05, 9.9920e-01,  ..., 5.0738e-03,
          5.3381e-04, 5.8614e-03],
         [4.0956e-03, 3.4514e-05, 2.6723e-04,  ..., 5.0738e-03,
          5.3381e-04, 5.8614e-03],
         [9.8757e-01, 3.4514e-05, 2.6723e-04,  ..., 9.8402e-01,
          5.3381e-04, 9.7981e-01],
         [4.2373e-03, 9.9990e-01, 2.6723e-04,  ..., 5.8355e-03,
          9.9840e-01, 8.4666e-03]],
        [[2.5226e-03, 1.4732e-04, 1.0073e-04,  ..., 3.9883e-03,
          4.9881e-03, 9.9869e-01],
         [2.5226e-03, 1.4732e-04, 1.0073e-04,  ..., 3.9883e-03,
          4.9881e-03, 4.3798e-04],
         [9.9243e-01, 1.4732e-04, 1.0073e-04,  ..., 9.8799e-01,
          9.8377e-01, 4.3798e-04],
         [2.5226e-03, 9.9956e-01, 9.9970e-01,  ..., 4.0325e-03,
          6.2570e-03, 4.3798e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 377:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9181e-01, 4.4359e-04, 2.6855e-03,  ..., 9.9716e-01,
          9.9342e-01, 1.5341e-03],
         [1.9479e-03, 4.4359e-04, 2.6855e-03,  ..., 9.4726e-04,
          1.8638e-03, 1.5341e-03],
         [4.2967e-03, 4.4359e-04, 3.5611e-03,  ..., 9.4726e-04,
          2.8517e-03, 1.5341e-03],
         [1.9479e-03, 9.9867e-01, 9.9107e-01,  ..., 9.4726e-04,
          1.8638e-03, 9.9540e-01]],
        [[1.8435e-03, 7.0950e-04, 9.8002e-04,  ..., 9.2185e-04,
          3.5280e-04, 1.8228e-03],
         [1.8435e-03, 7.0950e-04, 9.8002e-04,  ..., 9.2185e-04,
          3.5280e-04, 1.8228e-03],
         [9.9447e-01, 7.0950e-04, 9.8002e-04,  ..., 9.2185e-04,
          9.9894e-01, 9.9453e-01],
         [1.8435e-03, 9.9787e-01, 9.9706e-01,  ..., 9.9723e-01,
          3.5280e-04, 1.8228e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7225e-03, 6.6578e-05, 9.9968e-01,  ..., 4.5251e-03,
          2.6896e-04, 4.5546e-03],
         [5.7225e-03, 6.6578e-05, 1.0580e-04,  ..., 4.5251e-03,
          2.6896e-04, 4.5546e-03],
         [9.8197e-01, 6.6578e-05, 1.0580e-04,  ..., 9.8612e-01,
          2.6896e-04, 9.8634e-01],
         [6.5899e-03, 9.9980e-01, 1.0580e-04,  ..., 4.8280e-03,
          9.9919e-01, 4.5546e-03]],
        [[3.3483e-03, 2.1924e-05, 7.4567e-06,  ..., 9.4049e-03,
          2.8618e-03, 9.9096e-01],
         [3.3483e-03, 2.3399e-05, 7.4733e-06,  ..., 7.9360e-03,
          2.8618e-03, 2.6063e-03],
         [9.8995e-01, 2.1924e-05, 7.4567e-06,  ..., 9.6963e-01,
          9.9141e-01, 2.9083e-03],
         [3.3483e-03, 9.9993e-01, 9.9998e-01,  ..., 1.3025e-02,
          2.8618e-03, 3.5232e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 378:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:22,047 [Process: 0] Synchronize training processes
2024-08-18 15:09:22,048 [Process: 0] Evaluating...
2024-08-18 15:09:22,049 [Process: 0] EPOCH 378:
2024-08-18 15:09:22,051 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9467e-01, 8.3643e-04, 9.9324e-04,  ..., 9.9831e-01,
          9.9888e-01, 1.7452e-03],
         [1.6658e-03, 8.3643e-04, 9.9324e-04,  ..., 4.9048e-04,
          3.7421e-04, 1.7452e-03],
         [1.7939e-03, 8.3643e-04, 9.9324e-04,  ..., 7.0984e-04,
          3.7421e-04, 1.7452e-03],
         [1.8700e-03, 9.9749e-01, 9.9702e-01,  ..., 4.9048e-04,
          3.7421e-04, 9.9476e-01]],
        [[1.7752e-03, 2.9837e-03, 1.5774e-03,  ..., 6.9284e-04,
          8.3157e-04, 4.7431e-04],
         [1.7752e-03, 2.9837e-03, 1.5774e-03,  ..., 6.9284e-04,
          8.3157e-04, 4.7431e-04],
         [9.9467e-01, 4.8102e-03, 2.1356e-03,  ..., 6.9284e-04,
          9.9751e-01, 9.9858e-01],
         [1.7752e-03, 9.8922e-01, 9.9471e-01,  ..., 9.9792e-01,
          8.3157e-04, 4.7431e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.2034e-03, 2.6799e-04, 9.9767e-01,  ..., 3.8572e-03,
          3.2291e-04, 6.5400e-03],
         [4.2034e-03, 2.6799e-04, 7.7527e-04,  ..., 3.8572e-03,
          3.2291e-04, 6.5400e-03],
         [9.8725e-01, 2.6799e-04, 7.7527e-04,  ..., 9.8843e-01,
          3.2291e-04, 9.7650e-01],
         [4.3467e-03, 9.9920e-01, 7.7527e-04,  ..., 3.8572e-03,
          9.9903e-01, 1.0425e-02]],
        [[4.2917e-03, 4.3757e-05, 8.7666e-06,  ..., 8.8968e-03,
          4.4044e-03, 9.9815e-01],
         [4.2917e-03, 4.3757e-05, 8.9585e-06,  ..., 7.7765e-03,
          3.8049e-03, 5.6012e-04],
         [9.8712e-01, 4.3757e-05, 8.7666e-06,  ..., 9.7023e-01,
          9.8799e-01, 5.6012e-04],
         [4.2917e-03, 9.9987e-01, 9.9997e-01,  ..., 1.3099e-02,
          3.8049e-03, 7.2914e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 379:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9316e-01, 2.9339e-03, 9.9738e-04,  ..., 9.9913e-01,
          9.8950e-01, 1.2910e-03],
         [1.9704e-03, 2.9339e-03, 9.9738e-04,  ..., 2.9033e-04,
          2.0857e-03, 1.2910e-03],
         [2.2652e-03, 6.6579e-03, 1.3190e-03,  ..., 2.9033e-04,
          6.3284e-03, 1.2910e-03],
         [2.6008e-03, 9.8747e-01, 9.9669e-01,  ..., 2.9033e-04,
          2.0857e-03, 9.9613e-01]],
        [[6.0007e-04, 1.0450e-03, 3.5476e-03,  ..., 5.8281e-04,
          4.4177e-04, 7.5871e-04],
         [6.0007e-04, 1.0450e-03, 3.5476e-03,  ..., 5.8281e-04,
          4.4177e-04, 7.5871e-04],
         [9.9820e-01, 1.0450e-03, 4.3240e-03,  ..., 5.8281e-04,
          9.9867e-01, 9.9772e-01],
         [6.0007e-04, 9.9686e-01, 9.8858e-01,  ..., 9.9825e-01,
          4.4177e-04, 7.5871e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:09:23,201 [Process: 0] Synchronize training processes
2024-08-18 15:09:23,202 [Process: 0] Evaluating...
2024-08-18 15:09:23,203 [Process: 0] EPOCH 379:
2024-08-18 15:09:23,205 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:24,353 [Process: 0] Synchronize training processes
2024-08-18 15:09:24,354 [Process: 0] Evaluating...
2024-08-18 15:09:24,355 [Process: 0] EPOCH 380:
2024-08-18 15:09:24,357 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7667e-03, 1.9660e-04, 9.9790e-01,  ..., 3.7314e-03,
          1.2980e-04, 4.3790e-03],
         [4.7667e-03, 1.9660e-04, 6.0169e-04,  ..., 3.7314e-03,
          1.2980e-04, 4.3790e-03],
         [9.8568e-01, 1.9660e-04, 6.0169e-04,  ..., 9.8881e-01,
          1.2980e-04, 9.8686e-01],
         [4.7870e-03, 9.9941e-01, 8.9668e-04,  ..., 3.7314e-03,
          9.9961e-01, 4.3790e-03]],
        [[3.1241e-03, 5.4513e-05, 6.5365e-05,  ..., 4.4041e-03,
          2.8516e-03, 9.9524e-01],
         [3.1241e-03, 5.4513e-05, 6.5365e-05,  ..., 4.4041e-03,
          2.8516e-03, 1.4150e-03],
         [9.9063e-01, 5.4513e-05, 6.5365e-05,  ..., 9.8656e-01,
          9.9145e-01, 1.4150e-03],
         [3.1241e-03, 9.9984e-01, 9.9980e-01,  ..., 4.6331e-03,
          2.8516e-03, 1.9339e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 380:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9637e-01, 2.3282e-03, 1.3039e-03,  ..., 9.9813e-01,
          9.9611e-01, 2.2846e-03],
         [1.0744e-03, 1.1628e-03, 1.3039e-03,  ..., 6.2408e-04,
          1.1696e-03, 2.2846e-03],
         [1.4781e-03, 1.1628e-03, 1.3039e-03,  ..., 6.2408e-04,
          1.5490e-03, 2.2846e-03],
         [1.0744e-03, 9.9535e-01, 9.9609e-01,  ..., 6.2408e-04,
          1.1696e-03, 9.9315e-01]],
        [[6.5291e-04, 6.9580e-04, 8.1099e-04,  ..., 1.3236e-02,
          1.1836e-03, 1.0456e-03],
         [6.5291e-04, 6.9580e-04, 8.1099e-04,  ..., 1.0189e-02,
          1.1836e-03, 1.0456e-03],
         [9.9804e-01, 6.9580e-04, 8.1099e-04,  ..., 2.9701e-02,
          9.9645e-01, 9.9686e-01],
         [6.5291e-04, 9.9791e-01, 9.9757e-01,  ..., 9.4687e-01,
          1.1836e-03, 1.0456e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.1119e-03, 2.4473e-04, 9.9536e-01,  ..., 3.0072e-03,
          2.6373e-04, 2.8909e-03],
         [6.1119e-03, 2.4473e-04, 1.4975e-03,  ..., 3.0072e-03,
          1.9033e-04, 2.8909e-03],
         [9.7856e-01, 2.4473e-04, 1.6467e-03,  ..., 9.9098e-01,
          1.9033e-04, 9.9133e-01],
         [9.2115e-03, 9.9927e-01, 1.4975e-03,  ..., 3.0072e-03,
          9.9936e-01, 2.8909e-03]],
        [[5.9189e-03, 1.1847e-04, 2.8669e-05,  ..., 4.6774e-03,
          5.6509e-03, 9.8853e-01],
         [5.9189e-03, 1.1847e-04, 2.8669e-05,  ..., 4.6710e-03,
          5.6509e-03, 1.9167e-03],
         [9.8038e-01, 1.1847e-04, 2.8669e-05,  ..., 9.8588e-01,
          9.8134e-01, 1.9167e-03],
         [7.7872e-03, 9.9964e-01, 9.9991e-01,  ..., 4.7727e-03,
          7.3567e-03, 7.6410e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 381:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9793e-01, 1.8180e-03, 6.1233e-04,  ..., 9.9654e-01,
          9.9405e-01, 6.2012e-03],
         [6.8150e-04, 1.8180e-03, 6.1233e-04,  ..., 8.6327e-04,
          1.5644e-03, 6.2012e-03],
         [7.0975e-04, 1.8180e-03, 6.1233e-04,  ..., 1.7338e-03,
          2.8166e-03, 2.0102e-02],
         [6.8150e-04, 9.9455e-01, 9.9816e-01,  ..., 8.6327e-04,
          1.5644e-03, 9.6750e-01]],
        [[2.6291e-04, 1.5036e-03, 1.3564e-03,  ..., 3.9477e-03,
          9.1600e-04, 9.8978e-04],
         [2.6291e-04, 1.5036e-03, 1.3564e-03,  ..., 3.9477e-03,
          9.1600e-04, 9.8978e-04],
         [9.9921e-01, 1.5036e-03, 1.3564e-03,  ..., 8.1945e-03,
          9.9725e-01, 9.9703e-01],
         [2.6291e-04, 9.9549e-01, 9.9593e-01,  ..., 9.8391e-01,
          9.1600e-04, 9.8978e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:09:25,501 [Process: 0] Synchronize training processes
2024-08-18 15:09:25,502 [Process: 0] Evaluating...
2024-08-18 15:09:25,503 [Process: 0] EPOCH 381:
2024-08-18 15:09:25,505 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:26,649 [Process: 0] Synchronize training processes
2024-08-18 15:09:26,649 [Process: 0] Evaluating...
2024-08-18 15:09:26,657 [Process: 0] EPOCH 382:
2024-08-18 15:09:26,659 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9688e-03, 2.2844e-05, 9.9961e-01,  ..., 5.0510e-03,
          9.2843e-05, 5.4986e-03],
         [4.9688e-03, 2.2844e-05, 1.3011e-04,  ..., 5.0510e-03,
          7.6963e-05, 5.0260e-03],
         [9.8424e-01, 2.2844e-05, 1.3011e-04,  ..., 9.8483e-01,
          7.6963e-05, 9.8445e-01],
         [5.8238e-03, 9.9993e-01, 1.3011e-04,  ..., 5.0632e-03,
          9.9975e-01, 5.0260e-03]],
        [[2.7928e-03, 2.6083e-04, 1.4155e-04,  ..., 4.3199e-03,
          4.8643e-03, 9.9944e-01],
         [2.7928e-03, 2.6083e-04, 1.4155e-04,  ..., 3.8484e-03,
          4.8643e-03, 1.8662e-04],
         [9.9159e-01, 2.6083e-04, 1.4155e-04,  ..., 9.8798e-01,
          9.8477e-01, 1.8662e-04],
         [2.8245e-03, 9.9922e-01, 9.9958e-01,  ..., 3.8484e-03,
          5.5012e-03, 1.8662e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 382:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9480e-01, 2.8846e-03, 6.0853e-04,  ..., 9.9673e-01,
          9.9941e-01, 2.1599e-03],
         [1.2534e-03, 2.8846e-03, 6.0853e-04,  ..., 7.6992e-04,
          1.9537e-04, 1.7929e-03],
         [2.6914e-03, 4.3726e-03, 6.0853e-04,  ..., 1.7288e-03,
          1.9537e-04, 1.7929e-03],
         [1.2534e-03, 9.8986e-01, 9.9817e-01,  ..., 7.6992e-04,
          1.9537e-04, 9.9425e-01]],
        [[4.0335e-04, 9.9063e-04, 1.3447e-03,  ..., 6.1246e-04,
          3.3714e-04, 1.1543e-03],
         [4.0335e-04, 9.9063e-04, 1.3447e-03,  ..., 6.1246e-04,
          3.3714e-04, 1.1543e-03],
         [9.9879e-01, 9.9063e-04, 1.3447e-03,  ..., 6.1246e-04,
          9.9899e-01, 9.9654e-01],
         [4.0335e-04, 9.9703e-01, 9.9597e-01,  ..., 9.9816e-01,
          3.3714e-04, 1.1543e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2918e-03, 2.1114e-04, 9.9929e-01,  ..., 4.4200e-03,
          2.9819e-04, 3.7317e-03],
         [3.2918e-03, 2.1165e-04, 2.3432e-04,  ..., 3.8070e-03,
          2.9819e-04, 3.7317e-03],
         [9.9012e-01, 2.1114e-04, 2.3432e-04,  ..., 9.8797e-01,
          2.9819e-04, 9.8880e-01],
         [3.2918e-03, 9.9937e-01, 2.3925e-04,  ..., 3.8070e-03,
          9.9911e-01, 3.7317e-03]],
        [[5.7405e-03, 5.0153e-05, 3.0570e-04,  ..., 3.6137e-03,
          2.4719e-03, 9.9842e-01],
         [5.7405e-03, 5.0153e-05, 3.0570e-04,  ..., 3.6137e-03,
          2.4719e-03, 4.2311e-04],
         [9.8004e-01, 5.0153e-05, 3.0570e-04,  ..., 9.8916e-01,
          9.9258e-01, 4.2311e-04],
         [8.4787e-03, 9.9985e-01, 9.9908e-01,  ..., 3.6137e-03,
          2.4719e-03, 7.3445e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 383:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:27,805 [Process: 0] Synchronize training processes
2024-08-18 15:09:27,806 [Process: 0] Evaluating...
2024-08-18 15:09:27,807 [Process: 0] EPOCH 383:
2024-08-18 15:09:27,809 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9700e-01, 3.9928e-03, 1.1590e-03,  ..., 9.9713e-01,
          9.9768e-01, 2.2959e-03],
         [8.9807e-04, 2.6146e-03, 1.1590e-03,  ..., 9.5675e-04,
          7.7196e-04, 2.2959e-03],
         [1.2053e-03, 2.6146e-03, 1.1590e-03,  ..., 9.5858e-04,
          7.7196e-04, 4.0236e-03],
         [8.9807e-04, 9.9078e-01, 9.9652e-01,  ..., 9.5675e-04,
          7.7196e-04, 9.9138e-01]],
        [[6.7303e-04, 1.6807e-03, 1.1418e-03,  ..., 4.0306e-04,
          4.6375e-04, 8.4275e-04],
         [6.7303e-04, 1.6807e-03, 9.6197e-04,  ..., 4.0306e-04,
          4.6375e-04, 8.4275e-04],
         [9.9798e-01, 2.1180e-03, 9.6197e-04,  ..., 4.0306e-04,
          9.9861e-01, 9.9747e-01],
         [6.7303e-04, 9.9452e-01, 9.9693e-01,  ..., 9.9879e-01,
          4.6375e-04, 8.4275e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.5179e-03, 7.4501e-05, 9.9883e-01,  ..., 3.2196e-03,
          1.3702e-04, 4.9279e-03],
         [5.5179e-03, 7.4501e-05, 3.8987e-04,  ..., 3.2196e-03,
          1.3702e-04, 4.9279e-03],
         [9.8147e-01, 7.4501e-05, 3.8987e-04,  ..., 9.9034e-01,
          1.3702e-04, 9.8471e-01],
         [7.4908e-03, 9.9978e-01, 3.8987e-04,  ..., 3.2196e-03,
          9.9959e-01, 5.4367e-03]],
        [[1.9021e-03, 2.8309e-05, 3.4982e-05,  ..., 5.5206e-03,
          2.9233e-03, 9.9693e-01],
         [1.9021e-03, 2.8309e-05, 3.7141e-05,  ..., 4.7380e-03,
          2.9233e-03, 8.6612e-04],
         [9.9429e-01, 2.8309e-05, 3.4982e-05,  ..., 9.8500e-01,
          9.9123e-01, 8.6612e-04],
         [1.9021e-03, 9.9992e-01, 9.9989e-01,  ..., 4.7380e-03,
          2.9233e-03, 1.3358e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 384:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9809e-01, 1.0990e-02, 1.3114e-03,  ..., 9.9632e-01,
          9.9933e-01, 3.8453e-04],
         [6.1907e-04, 6.7099e-03, 1.3114e-03,  ..., 1.0856e-03,
          2.2367e-04, 3.8453e-04],
         [6.7333e-04, 1.6131e-02, 1.3690e-03,  ..., 1.5087e-03,
          2.2367e-04, 3.8453e-04],
         [6.1907e-04, 9.6617e-01, 9.9601e-01,  ..., 1.0856e-03,
          2.2367e-04, 9.9885e-01]],
        [[1.8827e-04, 7.9680e-04, 9.8845e-03,  ..., 1.4078e-02,
          3.9175e-04, 1.4198e-03],
         [1.8827e-04, 7.9680e-04, 5.0962e-03,  ..., 9.0873e-03,
          3.9175e-04, 1.4198e-03],
         [9.9944e-01, 7.9680e-04, 8.1018e-03,  ..., 2.8015e-02,
          9.9882e-01, 9.9574e-01],
         [1.8827e-04, 9.9761e-01, 9.7692e-01,  ..., 9.4882e-01,
          3.9175e-04, 1.4198e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8887e-03, 3.4819e-04, 9.9627e-01,  ..., 2.4804e-03,
          1.3631e-04, 3.6096e-03],
         [6.3671e-03, 3.4819e-04, 7.5384e-04,  ..., 2.4804e-03,
          1.3692e-04, 3.6096e-03],
         [9.7853e-01, 3.4819e-04, 7.5384e-04,  ..., 9.9256e-01,
          1.3631e-04, 9.8917e-01],
         [7.2135e-03, 9.9896e-01, 2.2240e-03,  ..., 2.4804e-03,
          9.9959e-01, 3.6096e-03]],
        [[5.4821e-03, 1.9976e-05, 6.3543e-05,  ..., 2.9233e-03,
          2.4126e-03, 9.9870e-01],
         [5.4821e-03, 2.0248e-05, 6.7381e-05,  ..., 2.9233e-03,
          2.4126e-03, 2.5466e-04],
         [9.8355e-01, 1.9976e-05, 6.3543e-05,  ..., 9.9123e-01,
          9.9276e-01, 2.5466e-04],
         [5.4821e-03, 9.9994e-01, 9.9981e-01,  ..., 2.9233e-03,
          2.4126e-03, 7.8765e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 385:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:28,952 [Process: 0] Synchronize training processes
2024-08-18 15:09:28,952 [Process: 0] Evaluating...
2024-08-18 15:09:28,954 [Process: 0] EPOCH 384:
2024-08-18 15:09:28,955 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:30,098 [Process: 0] Synchronize training processes
2024-08-18 15:09:30,098 [Process: 0] Evaluating...
2024-08-18 15:09:30,100 [Process: 0] EPOCH 385:
2024-08-18 15:09:30,101 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9956e-01, 7.8752e-04, 1.8409e-03,  ..., 9.9916e-01,
          9.8991e-01, 4.8101e-03],
         [1.4641e-04, 7.8752e-04, 1.8409e-03,  ..., 2.7965e-04,
          2.5691e-03, 4.8101e-03],
         [1.4641e-04, 7.8752e-04, 2.0401e-03,  ..., 2.7965e-04,
          4.0469e-03, 1.0985e-02],
         [1.4641e-04, 9.9764e-01, 9.9428e-01,  ..., 2.7965e-04,
          3.4771e-03, 9.7939e-01]],
        [[4.9083e-04, 1.2513e-03, 1.4040e-03,  ..., 7.1916e-04,
          4.6791e-04, 7.1074e-04],
         [4.9083e-04, 1.0686e-03, 1.2275e-03,  ..., 7.1916e-04,
          4.6791e-04, 7.1074e-04],
         [9.9853e-01, 1.0686e-03, 1.2275e-03,  ..., 7.1916e-04,
          9.9860e-01, 9.9787e-01],
         [4.9083e-04, 9.9661e-01, 9.9614e-01,  ..., 9.9784e-01,
          4.6791e-04, 7.1074e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8464e-03, 1.0669e-04, 9.9879e-01,  ..., 3.2569e-03,
          1.6039e-05, 4.6224e-03],
         [2.8464e-03, 1.0678e-04, 3.1730e-04,  ..., 3.2569e-03,
          1.6039e-05, 4.6224e-03],
         [9.9146e-01, 1.0669e-04, 3.1730e-04,  ..., 9.9023e-01,
          1.6039e-05, 9.8613e-01],
         [2.8464e-03, 9.9968e-01, 5.7674e-04,  ..., 3.2569e-03,
          9.9995e-01, 4.6224e-03]],
        [[3.1808e-03, 7.6133e-05, 7.2000e-05,  ..., 2.2855e-03,
          2.9671e-03, 9.9708e-01],
         [3.1808e-03, 7.6133e-05, 7.2000e-05,  ..., 2.2855e-03,
          2.9671e-03, 9.7429e-04],
         [9.9046e-01, 7.6133e-05, 7.2000e-05,  ..., 9.9314e-01,
          9.9110e-01, 9.7429e-04],
         [3.1808e-03, 9.9977e-01, 9.9978e-01,  ..., 2.2855e-03,
          2.9671e-03, 9.7429e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 386:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9925e-01, 3.6995e-02, 1.5959e-03,  ..., 9.9849e-01,
          9.9863e-01, 1.6496e-03],
         [2.5047e-04, 1.1476e-02, 1.5959e-03,  ..., 5.0397e-04,
          4.5647e-04, 1.6496e-03],
         [2.5047e-04, 3.1949e-02, 1.6100e-03,  ..., 5.0397e-04,
          4.5647e-04, 2.4758e-03],
         [2.5047e-04, 9.1958e-01, 9.9520e-01,  ..., 5.0397e-04,
          4.5647e-04, 9.9422e-01]],
        [[4.5998e-04, 4.8372e-04, 1.2913e-03,  ..., 6.5122e-04,
          3.8499e-04, 1.2384e-03],
         [4.5998e-04, 4.8528e-04, 1.2913e-03,  ..., 6.5122e-04,
          3.9427e-04, 1.2384e-03],
         [9.9862e-01, 4.8372e-04, 1.6164e-03,  ..., 6.5122e-04,
          9.9884e-01, 9.9628e-01],
         [4.5998e-04, 9.9855e-01, 9.9580e-01,  ..., 9.9805e-01,
          3.8499e-04, 1.2384e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:09:31,242 [Process: 0] Synchronize training processes
2024-08-18 15:09:31,242 [Process: 0] Evaluating...
2024-08-18 15:09:31,244 [Process: 0] EPOCH 386:
2024-08-18 15:09:31,246 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:32,396 [Process: 0] Synchronize training processes
2024-08-18 15:09:32,396 [Process: 0] Evaluating...
2024-08-18 15:09:32,398 [Process: 0] EPOCH 387:
2024-08-18 15:09:32,400 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3256e-03, 1.2340e-04, 9.9916e-01,  ..., 2.7276e-03,
          1.9987e-04, 2.5046e-03],
         [3.3256e-03, 1.2340e-04, 2.7894e-04,  ..., 2.7276e-03,
          1.9987e-04, 2.5046e-03],
         [9.9002e-01, 1.2340e-04, 2.7894e-04,  ..., 9.9182e-01,
          1.9987e-04, 9.9249e-01],
         [3.3256e-03, 9.9963e-01, 2.7894e-04,  ..., 2.7276e-03,
          9.9940e-01, 2.5046e-03]],
        [[3.1525e-03, 4.7442e-05, 9.9571e-06,  ..., 1.9163e-03,
          1.6072e-03, 9.9907e-01],
         [3.1525e-03, 4.7442e-05, 9.9571e-06,  ..., 1.9163e-03,
          1.6072e-03, 2.6833e-04],
         [9.9054e-01, 4.7442e-05, 9.9571e-06,  ..., 9.9425e-01,
          9.9518e-01, 2.6833e-04],
         [3.1525e-03, 9.9986e-01, 9.9997e-01,  ..., 1.9163e-03,
          1.6072e-03, 3.8911e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 387:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9175e-01, 1.5729e-03, 1.2473e-03,  ..., 9.9959e-01,
          9.9867e-01, 2.7921e-03],
         [1.5596e-03, 1.5729e-03, 1.2473e-03,  ..., 1.3580e-04,
          4.4452e-04, 2.7921e-03],
         [5.1284e-03, 1.5729e-03, 1.2473e-03,  ..., 1.3580e-04,
          4.4452e-04, 5.8326e-03],
         [1.5596e-03, 9.9528e-01, 9.9626e-01,  ..., 1.3580e-04,
          4.4452e-04, 9.8858e-01]],
        [[6.8703e-04, 7.1057e-04, 4.1868e-03,  ..., 1.7799e-03,
          3.6655e-04, 4.1594e-04],
         [6.8703e-04, 7.1057e-04, 2.9504e-03,  ..., 1.7799e-03,
          3.6655e-04, 4.1594e-04],
         [9.9794e-01, 7.4404e-04, 3.2181e-03,  ..., 2.1638e-03,
          9.9890e-01, 9.9875e-01],
         [6.8703e-04, 9.9783e-01, 9.8964e-01,  ..., 9.9428e-01,
          3.6655e-04, 4.1594e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7012e-03, 5.3222e-05, 9.9875e-01,  ..., 1.3651e-03,
          1.8380e-04, 3.3350e-03],
         [2.7012e-03, 5.3222e-05, 4.1536e-04,  ..., 1.3651e-03,
          1.8380e-04, 3.3350e-03],
         [9.9190e-01, 5.3222e-05, 4.1536e-04,  ..., 9.9590e-01,
          1.8380e-04, 9.9000e-01],
         [2.7012e-03, 9.9984e-01, 4.1536e-04,  ..., 1.3651e-03,
          9.9945e-01, 3.3350e-03]],
        [[4.4522e-03, 7.3959e-05, 5.1670e-05,  ..., 3.5213e-03,
          2.7737e-03, 9.9728e-01],
         [4.4522e-03, 7.3959e-05, 5.1670e-05,  ..., 3.5213e-03,
          2.7737e-03, 9.0533e-04],
         [9.8664e-01, 7.3959e-05, 5.1670e-05,  ..., 9.8944e-01,
          9.9168e-01, 9.0533e-04],
         [4.4522e-03, 9.9978e-01, 9.9984e-01,  ..., 3.5213e-03,
          2.7737e-03, 9.0533e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 388:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9888e-01, 1.2741e-03, 1.0958e-03,  ..., 9.9964e-01,
          9.9713e-01, 2.9209e-04],
         [3.7225e-04, 1.2741e-03, 1.0958e-03,  ..., 1.1857e-04,
          9.5657e-04, 2.9209e-04],
         [3.7225e-04, 2.6536e-03, 1.0958e-03,  ..., 1.1857e-04,
          9.5657e-04, 2.9209e-04],
         [3.7225e-04, 9.9480e-01, 9.9671e-01,  ..., 1.1857e-04,
          9.5657e-04, 9.9912e-01]],
        [[6.7208e-04, 5.8912e-03, 9.8058e-04,  ..., 3.7057e-03,
          1.4786e-03, 1.5526e-03],
         [6.7208e-04, 3.6705e-03, 9.8058e-04,  ..., 3.7057e-03,
          1.4786e-03, 1.5526e-03],
         [9.9798e-01, 5.2840e-03, 1.1128e-03,  ..., 7.2654e-03,
          9.9556e-01, 9.9534e-01],
         [6.7208e-04, 9.8515e-01, 9.9693e-01,  ..., 9.8532e-01,
          1.4786e-03, 1.5526e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:09:33,545 [Process: 0] Synchronize training processes
2024-08-18 15:09:33,545 [Process: 0] Evaluating...
2024-08-18 15:09:33,547 [Process: 0] EPOCH 388:
2024-08-18 15:09:33,549 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:34,697 [Process: 0] Synchronize training processes
2024-08-18 15:09:34,698 [Process: 0] Evaluating...
2024-08-18 15:09:34,699 [Process: 0] EPOCH 389:
2024-08-18 15:09:34,701 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3324e-03, 2.5319e-04, 9.9740e-01,  ..., 3.4531e-03,
          4.4746e-05, 2.0638e-03],
         [3.3324e-03, 2.5319e-04, 8.6759e-04,  ..., 3.4531e-03,
          4.4746e-05, 2.0638e-03],
         [9.8994e-01, 2.5319e-04, 8.6759e-04,  ..., 9.8964e-01,
          4.4746e-05, 9.9381e-01],
         [3.3981e-03, 9.9924e-01, 8.6759e-04,  ..., 3.4531e-03,
          9.9987e-01, 2.0638e-03]],
        [[3.7344e-03, 2.7051e-05, 9.2831e-04,  ..., 3.3466e-03,
          4.7480e-03, 9.9879e-01],
         [3.7344e-03, 2.7051e-05, 2.7810e-04,  ..., 3.3466e-03,
          4.7480e-03, 3.6490e-04],
         [9.8839e-01, 2.7051e-05, 2.7810e-04,  ..., 9.8996e-01,
          9.8469e-01, 3.6490e-04],
         [4.1447e-03, 9.9992e-01, 9.9852e-01,  ..., 3.3466e-03,
          5.8165e-03, 4.8114e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 389:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9252e-01, 1.7752e-03, 2.3098e-03,  ..., 9.9874e-01,
          9.9215e-01, 1.9351e-03],
         [1.8157e-03, 1.7752e-03, 2.3098e-03,  ..., 4.1937e-04,
          2.0814e-03, 1.9351e-03],
         [3.8506e-03, 1.7752e-03, 2.3098e-03,  ..., 4.1937e-04,
          3.6838e-03, 1.9351e-03],
         [1.8157e-03, 9.9467e-01, 9.9307e-01,  ..., 4.1937e-04,
          2.0814e-03, 9.9419e-01]],
        [[4.9268e-04, 3.8746e-03, 3.5234e-04,  ..., 2.8607e-03,
          5.7146e-04, 5.9137e-04],
         [4.9268e-04, 2.2664e-03, 3.5234e-04,  ..., 2.8607e-03,
          5.7146e-04, 5.9137e-04],
         [9.9852e-01, 2.2664e-03, 3.5234e-04,  ..., 6.2377e-03,
          9.9829e-01, 9.9823e-01],
         [4.9268e-04, 9.9159e-01, 9.9894e-01,  ..., 9.8804e-01,
          5.7146e-04, 5.9137e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1737e-03, 6.5878e-05, 9.7456e-01,  ..., 2.5860e-03,
          7.0690e-04, 5.9729e-03],
         [3.1737e-03, 6.5878e-05, 2.2073e-03,  ..., 2.5860e-03,
          5.7659e-04, 5.9729e-03],
         [9.9048e-01, 6.5878e-05, 2.2073e-03,  ..., 9.9224e-01,
          5.7659e-04, 9.8001e-01],
         [3.1737e-03, 9.9980e-01, 2.1023e-02,  ..., 2.5860e-03,
          9.9814e-01, 8.0415e-03]],
        [[1.5413e-03, 5.9589e-05, 1.0132e-04,  ..., 3.6423e-03,
          3.0071e-03, 9.9822e-01],
         [1.5413e-03, 5.9589e-05, 1.0399e-04,  ..., 3.6423e-03,
          3.0071e-03, 5.9198e-04],
         [9.9538e-01, 5.9589e-05, 1.0132e-04,  ..., 9.8907e-01,
          9.9098e-01, 5.9198e-04],
         [1.5413e-03, 9.9982e-01, 9.9969e-01,  ..., 3.6423e-03,
          3.0071e-03, 5.9198e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 390:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:35,841 [Process: 0] Synchronize training processes
2024-08-18 15:09:35,841 [Process: 0] Evaluating...
2024-08-18 15:09:35,843 [Process: 0] EPOCH 390:
2024-08-18 15:09:35,845 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9918e-01, 1.2114e-03, 1.1094e-03,  ..., 9.9674e-01,
          9.9867e-01, 8.4350e-03],
         [2.7267e-04, 1.2114e-03, 1.1094e-03,  ..., 9.7635e-04,
          4.4171e-04, 4.4091e-03],
         [2.7267e-04, 1.3154e-03, 1.5780e-03,  ..., 1.3040e-03,
          4.4171e-04, 6.8254e-03],
         [2.7267e-04, 9.9626e-01, 9.9620e-01,  ..., 9.7635e-04,
          4.4171e-04, 9.8033e-01]],
        [[1.3122e-03, 1.2568e-03, 1.4876e-03,  ..., 2.5358e-03,
          1.0817e-03, 7.2137e-04],
         [1.3122e-03, 1.2568e-03, 1.4876e-03,  ..., 2.5358e-03,
          1.0817e-03, 7.2137e-04],
         [9.9606e-01, 1.2568e-03, 1.5627e-03,  ..., 3.4517e-03,
          9.9675e-01, 9.9784e-01],
         [1.3122e-03, 9.9623e-01, 9.9546e-01,  ..., 9.9148e-01,
          1.0817e-03, 7.2137e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0119e-03, 5.8980e-05, 9.9886e-01,  ..., 3.6494e-03,
          1.1358e-04, 4.0314e-03],
         [2.0119e-03, 5.8980e-05, 2.7171e-04,  ..., 3.6248e-03,
          1.1358e-04, 4.0314e-03],
         [9.9396e-01, 5.8980e-05, 2.7171e-04,  ..., 9.8910e-01,
          1.1358e-04, 9.8789e-01],
         [2.0119e-03, 9.9982e-01, 5.9821e-04,  ..., 3.6248e-03,
          9.9966e-01, 4.0506e-03]],
        [[2.0509e-03, 6.6786e-05, 2.0975e-05,  ..., 3.3339e-03,
          2.5667e-03, 9.9772e-01],
         [2.0509e-03, 7.0383e-05, 2.1295e-05,  ..., 3.3339e-03,
          2.5667e-03, 7.6092e-04],
         [9.9385e-01, 6.6786e-05, 2.0975e-05,  ..., 9.9000e-01,
          9.9230e-01, 7.6092e-04],
         [2.0509e-03, 9.9980e-01, 9.9994e-01,  ..., 3.3339e-03,
          2.5667e-03, 7.6092e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 391:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9867e-01, 1.3460e-03, 1.7785e-03,  ..., 9.9804e-01,
          9.9617e-01, 4.6349e-03],
         [4.4444e-04, 1.3460e-03, 1.7785e-03,  ..., 6.5178e-04,
          1.1758e-03, 4.6349e-03],
         [4.4444e-04, 1.5911e-03, 2.8241e-03,  ..., 6.5178e-04,
          1.4769e-03, 1.1501e-02],
         [4.4444e-04, 9.9572e-01, 9.9362e-01,  ..., 6.5178e-04,
          1.1758e-03, 9.7923e-01]],
        [[2.8408e-04, 1.3034e-03, 1.0705e-03,  ..., 4.3034e-03,
          9.1744e-04, 1.8388e-03],
         [2.8408e-04, 1.3034e-03, 1.0705e-03,  ..., 4.3034e-03,
          9.1744e-04, 1.8388e-03],
         [9.9915e-01, 1.3034e-03, 1.0705e-03,  ..., 1.1602e-02,
          9.9725e-01, 9.9448e-01],
         [2.8408e-04, 9.9609e-01, 9.9679e-01,  ..., 9.7979e-01,
          9.1744e-04, 1.8388e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1248e-03, 2.1999e-04, 9.8748e-01,  ..., 4.0179e-03,
          1.5778e-04, 3.5053e-03],
         [2.1248e-03, 2.1999e-04, 3.3665e-03,  ..., 4.0179e-03,
          1.5778e-04, 3.3626e-03],
         [9.9363e-01, 2.1999e-04, 4.6152e-03,  ..., 9.8795e-01,
          1.5778e-04, 9.8977e-01],
         [2.1248e-03, 9.9934e-01, 4.5369e-03,  ..., 4.0179e-03,
          9.9953e-01, 3.3626e-03]],
        [[7.0722e-03, 4.9535e-04, 2.2499e-05,  ..., 7.2144e-03,
          2.5551e-03, 9.9633e-01],
         [7.0722e-03, 4.9535e-04, 2.2828e-05,  ..., 5.8709e-03,
          2.5551e-03, 5.9622e-04],
         [9.7246e-01, 4.9535e-04, 2.2499e-05,  ..., 9.7983e-01,
          9.9233e-01, 5.9622e-04],
         [1.3396e-02, 9.9851e-01, 9.9993e-01,  ..., 7.0840e-03,
          2.5551e-03, 2.4763e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 392:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:36,976 [Process: 0] Synchronize training processes
2024-08-18 15:09:36,977 [Process: 0] Evaluating...
2024-08-18 15:09:36,978 [Process: 0] EPOCH 391:
2024-08-18 15:09:36,980 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 15:09:38,116 [Process: 0] Synchronize training processes
2024-08-18 15:09:38,116 [Process: 0] Evaluating...
2024-08-18 15:09:38,121 [Process: 0] EPOCH 392:
2024-08-18 15:09:38,122 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9740e-01, 4.8150e-04, 4.2625e-03,  ..., 9.9917e-01,
          9.9705e-01, 5.2645e-04],
         [8.0120e-04, 4.8150e-04, 4.2625e-03,  ..., 2.7702e-04,
          8.4842e-04, 5.2645e-04],
         [9.9279e-04, 4.8150e-04, 1.7084e-02,  ..., 2.7702e-04,
          1.2538e-03, 5.2645e-04],
         [8.0120e-04, 9.9856e-01, 9.7439e-01,  ..., 2.7702e-04,
          8.4842e-04, 9.9842e-01]],
        [[6.9943e-04, 9.2436e-04, 5.1403e-04,  ..., 1.1049e-03,
          5.1028e-04, 1.2113e-03],
         [6.9943e-04, 9.2436e-04, 5.1403e-04,  ..., 1.1049e-03,
          5.1028e-04, 1.2113e-03],
         [9.9790e-01, 9.2436e-04, 5.1403e-04,  ..., 1.1049e-03,
          9.9847e-01, 9.9637e-01],
         [6.9943e-04, 9.9723e-01, 9.9846e-01,  ..., 9.9669e-01,
          5.1028e-04, 1.2113e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9423e-03, 1.0760e-04, 9.9712e-01,  ..., 4.0674e-03,
          1.9218e-04, 2.3287e-03],
         [3.9423e-03, 1.0760e-04, 8.0494e-04,  ..., 4.0674e-03,
          1.9218e-04, 2.3287e-03],
         [9.8817e-01, 1.0760e-04, 8.0494e-04,  ..., 9.8780e-01,
          1.9218e-04, 9.9301e-01],
         [3.9423e-03, 9.9968e-01, 1.2668e-03,  ..., 4.0674e-03,
          9.9942e-01, 2.3287e-03]],
        [[2.6634e-03, 7.7826e-05, 2.9920e-05,  ..., 3.2571e-03,
          2.4508e-03, 9.9613e-01],
         [2.6634e-03, 7.8141e-05, 3.0937e-05,  ..., 3.2571e-03,
          2.4508e-03, 7.0955e-04],
         [9.9201e-01, 7.7826e-05, 2.9920e-05,  ..., 9.9023e-01,
          9.9265e-01, 7.0955e-04],
         [2.6634e-03, 9.9977e-01, 9.9991e-01,  ..., 3.2571e-03,
          2.4508e-03, 2.4549e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 393:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9870e-01, 3.2904e-04, 6.9484e-04,  ..., 9.9891e-01,
          9.9872e-01, 2.0797e-03],
         [4.3406e-04, 3.2904e-04, 6.9484e-04,  ..., 3.6438e-04,
          4.2617e-04, 2.0797e-03],
         [4.3406e-04, 3.2904e-04, 6.9484e-04,  ..., 3.6438e-04,
          4.2617e-04, 2.6997e-03],
         [4.3406e-04, 9.9901e-01, 9.9792e-01,  ..., 3.6438e-04,
          4.2617e-04, 9.9314e-01]],
        [[1.0028e-03, 3.3942e-03, 1.9078e-03,  ..., 1.2316e-03,
          2.7584e-04, 2.1709e-04],
         [1.0028e-03, 3.3942e-03, 1.9078e-03,  ..., 1.2316e-03,
          2.8146e-04, 2.1709e-04],
         [9.9699e-01, 4.1826e-03, 1.9078e-03,  ..., 1.2316e-03,
          9.9917e-01, 9.9935e-01],
         [1.0028e-03, 9.8903e-01, 9.9428e-01,  ..., 9.9631e-01,
          2.7584e-04, 2.1709e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
shape of inputs: torch.Size([2, 4, 512])
shape of targets: torch.Size([2, 4, 512])
2024-08-18 15:09:39,262 [Process: 0] Synchronize training processes
2024-08-18 15:09:39,262 [Process: 0] Evaluating...
2024-08-18 15:09:39,264 [Process: 0] EPOCH 393:
2024-08-18 15:09:39,265 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 198, in train_one_epoch
    outputs = self.model(batch=batch)["affordance"].squeeze(1)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/GeoL.py", line 45, in forward
    print(texts)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/wandb/sdk/lib/redirect.py", line 640, in write
    self._old_write(data)
KeyboardInterrupt
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]