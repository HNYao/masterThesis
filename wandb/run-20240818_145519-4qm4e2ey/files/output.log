2024-08-18 14:55:23,359 [Worker 0] Is distributed: False
2024-08-18 14:55:23,361 [Process: 0] Starting training
2024-08-18 14:55:23,361 [Process: 0] EPOCH 1:
2024-08-18 14:55:23,366 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.3370, 0.5255, 0.5000,  ..., 0.5106, 0.7065, 0.3277],
         [0.6630, 0.4745, 0.5000,  ..., 0.4894, 0.2935, 0.6723]],
        [[0.6239, 0.2656, 0.8894,  ..., 0.3953, 0.5000, 0.4257],
         [0.3761, 0.7344, 0.1106,  ..., 0.6047, 0.5000, 0.5743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.4919, 0.7550, 0.5000,  ..., 0.5000, 0.5000, 0.4632],
         [0.5081, 0.2450, 0.5000,  ..., 0.5000, 0.5000, 0.5368]],
        [[0.5514, 0.5000, 0.5136,  ..., 0.7678, 0.2918, 0.3851],
         [0.4486, 0.5000, 0.4864,  ..., 0.2322, 0.7082, 0.6149]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5270, 0.5000, 0.5000,  ..., 0.5000, 0.6814, 0.5000],
         [0.4730, 0.5000, 0.5000,  ..., 0.5000, 0.3186, 0.5000]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5000, 0.5000, 0.3959,  ..., 0.5000, 0.9270, 0.3259],
         [0.5000, 0.5000, 0.6041,  ..., 0.5000, 0.0730, 0.6741]],
        [[0.5000, 0.6891, 0.7793,  ..., 0.6074, 0.7280, 0.5000],
         [0.5000, 0.3109, 0.2207,  ..., 0.3926, 0.2720, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.6485, 0.7296, 0.5000,  ..., 0.5000, 0.8543, 0.5000],
         [0.3515, 0.2704, 0.5000,  ..., 0.5000, 0.1457, 0.5000]],
        [[0.8733, 0.5000, 0.6856,  ..., 0.6351, 0.5000, 0.5000],
         [0.1267, 0.5000, 0.3144,  ..., 0.3649, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:55:25,126 [Process: 0] Synchronize training processes
2024-08-18 14:55:25,126 [Process: 0] Evaluating...
2024-08-18 14:55:25,131 [Process: 0] EPOCH 2:
2024-08-18 14:55:25,132 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:26,209 [Process: 0] Synchronize training processes
2024-08-18 14:55:26,210 [Process: 0] Evaluating...
2024-08-18 14:55:26,211 [Process: 0] EPOCH 3:
2024-08-18 14:55:26,213 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5000, 0.8505, 0.5000,  ..., 0.6316, 0.6816, 0.6723],
         [0.5000, 0.1495, 0.5000,  ..., 0.3684, 0.3184, 0.3277]],
        [[0.7956, 0.5000, 0.6326,  ..., 0.7524, 0.5000, 0.7133],
         [0.2044, 0.5000, 0.3674,  ..., 0.2476, 0.5000, 0.2867]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.6442, 0.7742, 0.4651,  ..., 0.5000, 0.8395, 0.4514],
         [0.3558, 0.2258, 0.5349,  ..., 0.5000, 0.1605, 0.5486]],
        [[0.6559, 0.5000, 0.7500,  ..., 0.5000, 0.8175, 0.5000],
         [0.3441, 0.5000, 0.2500,  ..., 0.5000, 0.1825, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7428, 0.7268, 0.7400,  ..., 0.7347, 0.7619, 0.7815],
         [0.2572, 0.2732, 0.2600,  ..., 0.2653, 0.2381, 0.2185]],
        [[0.7495, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
         [0.2505, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7350, 0.7368, 0.5000,  ..., 0.7411, 0.7261, 0.5000],
         [0.2650, 0.2632, 0.5000,  ..., 0.2589, 0.2739, 0.5000]],
        [[0.7730, 0.5000, 0.5000,  ..., 0.5000, 0.7641, 0.7556],
         [0.2270, 0.5000, 0.5000,  ..., 0.5000, 0.2359, 0.2444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:55:27,297 [Process: 0] Synchronize training processes
2024-08-18 14:55:27,297 [Process: 0] Evaluating...
2024-08-18 14:55:27,298 [Process: 0] EPOCH 4:
2024-08-18 14:55:27,300 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:28,376 [Process: 0] Synchronize training processes
2024-08-18 14:55:28,376 [Process: 0] Evaluating...
2024-08-18 14:55:28,378 [Process: 0] EPOCH 5:
2024-08-18 14:55:28,380 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:29,461 [Process: 0] Synchronize training processes
2024-08-18 14:55:29,461 [Process: 0] Evaluating...
2024-08-18 14:55:29,462 [Process: 0] EPOCH 6:
2024-08-18 14:55:29,464 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:30,550 [Process: 0] Synchronize training processes
2024-08-18 14:55:30,550 [Process: 0] Evaluating...
2024-08-18 14:55:30,552 [Process: 0] EPOCH 7:
2024-08-18 14:55:30,554 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7174, 0.7292, 0.6792,  ..., 0.7539, 0.7703, 0.7076],
         [0.2826, 0.2708, 0.3208,  ..., 0.2461, 0.2297, 0.2924]],
        [[0.7043, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
         [0.2957, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 6.4137e-01, 5.0000e-01,  ..., 6.9229e-01,
          6.9189e-01, 5.0000e-01],
         [5.0000e-01, 3.5863e-01, 5.0000e-01,  ..., 3.0771e-01,
          3.0811e-01, 5.0000e-01]],
        [[4.6393e-04, 5.0000e-01, 7.6062e-01,  ..., 5.0000e-01,
          6.5509e-01, 7.4389e-01],
         [9.9954e-01, 5.0000e-01, 2.3938e-01,  ..., 5.0000e-01,
          3.4491e-01, 2.5611e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5000, 0.5000, 0.5644,  ..., 0.5000, 0.6873, 0.6795],
         [0.5000, 0.5000, 0.4356,  ..., 0.5000, 0.3127, 0.3205]],
        [[0.7463, 0.5000, 0.5000,  ..., 0.5000, 0.7285, 0.5000],
         [0.2537, 0.5000, 0.5000,  ..., 0.5000, 0.2715, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 2.9866e-01, 7.5659e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01],
         [5.0000e-01, 7.0134e-01, 2.4341e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01]],
        [[5.6062e-07, 5.6707e-01, 6.5968e-01,  ..., 6.4831e-01,
          7.5081e-01, 6.9377e-01],
         [1.0000e+00, 4.3293e-01, 3.4032e-01,  ..., 3.5169e-01,
          2.4919e-01, 3.0623e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:55:31,634 [Process: 0] Synchronize training processes
2024-08-18 14:55:31,635 [Process: 0] Evaluating...
2024-08-18 14:55:31,637 [Process: 0] EPOCH 8:
2024-08-18 14:55:31,638 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:32,725 [Process: 0] Synchronize training processes
2024-08-18 14:55:32,725 [Process: 0] Evaluating...
2024-08-18 14:55:32,727 [Process: 0] EPOCH 9:
2024-08-18 14:55:32,729 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7615, 0.7482, 0.7623,  ..., 0.7260, 0.7629, 0.7388],
         [0.2385, 0.2518, 0.2377,  ..., 0.2740, 0.2371, 0.2612]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.6942, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.3058, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 3.9529e-02, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01],
         [5.0000e-01, 9.6047e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01]],
        [[3.0311e-07, 7.4607e-01, 7.4351e-01,  ..., 7.0195e-01,
          7.6201e-01, 8.1225e-01],
         [1.0000e+00, 2.5393e-01, 2.5649e-01,  ..., 2.9805e-01,
          2.3799e-01, 1.8775e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7306, 0.7338, 0.7315,  ..., 0.7363, 0.7478, 0.7508],
         [0.2694, 0.2662, 0.2685,  ..., 0.2637, 0.2522, 0.2492]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-18 14:55:33,808 [Process: 0] Synchronize training processes
2024-08-18 14:55:33,808 [Process: 0] Evaluating...
2024-08-18 14:55:33,810 [Process: 0] EPOCH 10:
2024-08-18 14:55:33,812 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:34,900 [Process: 0] Synchronize training processes
2024-08-18 14:55:34,900 [Process: 0] Evaluating...
2024-08-18 14:55:34,902 [Process: 0] EPOCH 11:
2024-08-18 14:55:34,904 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 5.2094e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01],
         [5.0000e-01, 4.7906e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01]],
        [[1.2053e-06, 6.7256e-01, 7.5317e-01,  ..., 7.1827e-01,
          7.5180e-01, 7.7633e-01],
         [1.0000e+00, 3.2744e-01, 2.4683e-01,  ..., 2.8173e-01,
          2.4820e-01, 2.2367e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7187, 0.7535, 0.7296,  ..., 0.7484, 0.7237, 0.7322],
         [0.2813, 0.2465, 0.2704,  ..., 0.2516, 0.2763, 0.2678]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.6968, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.3032, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 5.0933e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01],
         [5.0000e-01, 4.9067e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01]],
        [[8.3999e-07, 7.6101e-01, 7.7699e-01,  ..., 7.3633e-01,
          7.1483e-01, 7.6537e-01],
         [1.0000e+00, 2.3899e-01, 2.2301e-01,  ..., 2.6367e-01,
          2.8517e-01, 2.3463e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7271, 0.7504, 0.7596,  ..., 0.7372, 0.7669, 0.7242],
         [0.2729, 0.2496, 0.2404,  ..., 0.2628, 0.2331, 0.2758]],
        [[0.5000, 0.5000, 0.7556,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.2444,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:35,988 [Process: 0] Synchronize training processes
2024-08-18 14:55:35,989 [Process: 0] Evaluating...
2024-08-18 14:55:35,993 [Process: 0] EPOCH 12:
2024-08-18 14:55:35,994 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:37,074 [Process: 0] Synchronize training processes
2024-08-18 14:55:37,074 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 8.8762e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01],
         [5.0000e-01, 1.1238e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01]],
        [[8.1566e-07, 7.6148e-01, 7.6608e-01,  ..., 7.5235e-01,
          7.5686e-01, 7.7449e-01],
         [1.0000e+00, 2.3852e-01, 2.3392e-01,  ..., 2.4765e-01,
          2.4314e-01, 2.2551e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7377, 0.7451, 0.7534,  ..., 0.7358, 0.7349, 0.7181],
         [0.2623, 0.2549, 0.2466,  ..., 0.2642, 0.2651, 0.2819]],
        [[0.5000, 0.5000, 0.7187,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.2813,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 8.6913e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01],
         [5.0000e-01, 1.3087e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01]],
        [[1.4887e-08, 7.1976e-01, 7.5724e-01,  ..., 7.5118e-01,
          7.3195e-01, 7.6520e-01],
         [1.0000e+00, 2.8024e-01, 2.4276e-01,  ..., 2.4882e-01,
          2.6805e-01, 2.3480e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7569, 0.7569, 0.7394,  ..., 0.7499, 0.7173, 0.7350],
         [0.2431, 0.2431, 0.2606,  ..., 0.2501, 0.2827, 0.2650]],
        [[0.5000, 0.5000, 0.7289,  ..., 0.5000, 0.5000, 0.5141],
         [0.5000, 0.5000, 0.2711,  ..., 0.5000, 0.5000, 0.4859]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:37,076 [Process: 0] EPOCH 13:
2024-08-18 14:55:37,078 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:38,164 [Process: 0] Synchronize training processes
2024-08-18 14:55:38,165 [Process: 0] Evaluating...
2024-08-18 14:55:38,167 [Process: 0] EPOCH 14:
2024-08-18 14:55:38,168 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 8.1722e-01, 4.9928e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01],
         [5.0000e-01, 1.8278e-01, 5.0072e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01]],
        [[3.0650e-05, 7.6067e-01, 7.7481e-01,  ..., 7.4577e-01,
          7.4885e-01, 7.9033e-01],
         [9.9997e-01, 2.3933e-01, 2.2519e-01,  ..., 2.5423e-01,
          2.5115e-01, 2.0967e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7688, 0.7442, 0.7576,  ..., 0.7582, 0.7706, 0.7572],
         [0.2312, 0.2558, 0.2424,  ..., 0.2418, 0.2294, 0.2428]],
        [[0.5000, 0.5000, 0.7581,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.2419,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 8.1105e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01],
         [5.0000e-01, 1.8895e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01]],
        [[3.7355e-09, 7.6825e-01, 7.9178e-01,  ..., 7.7834e-01,
          7.1838e-01, 7.8457e-01],
         [1.0000e+00, 2.3175e-01, 2.0822e-01,  ..., 2.2166e-01,
          2.8162e-01, 2.1543e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
2024-08-18 14:55:39,254 [Process: 0] Synchronize training processes
2024-08-18 14:55:39,254 [Process: 0] Evaluating...
2024-08-18 14:55:39,256 [Process: 0] EPOCH 15:
2024-08-18 14:55:39,258 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:40,338 [Process: 0] Synchronize training processes
2024-08-18 14:55:40,339 [Process: 0] Evaluating...
2024-08-18 14:55:40,340 [Process: 0] EPOCH 16:
2024-08-18 14:55:40,342 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.7894, 0.7684, 0.7704,  ..., 0.7782, 0.7863, 0.7671],
         [0.2106, 0.2316, 0.2296,  ..., 0.2218, 0.2137, 0.2329]],
        [[0.5000, 0.5000, 0.7722,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.2278,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 7.9322e-01, 5.0000e-01,  ..., 4.9679e-01,
          5.0000e-01, 5.0000e-01],
         [5.0000e-01, 2.0678e-01, 5.0000e-01,  ..., 5.0321e-01,
          5.0000e-01, 5.0000e-01]],
        [[2.8319e-07, 7.4461e-01, 7.9511e-01,  ..., 7.5146e-01,
          7.3209e-01, 8.0487e-01],
         [1.0000e+00, 2.5539e-01, 2.0489e-01,  ..., 2.4854e-01,
          2.6791e-01, 1.9513e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7747, 0.7657, 0.7684,  ..., 0.7653, 0.7553, 0.7655],
         [0.2253, 0.2343, 0.2316,  ..., 0.2347, 0.2447, 0.2345]],
        [[0.5000, 0.5000, 0.7467,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.2533,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 7.9069e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01],
         [5.0000e-01, 2.0931e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01]],
        [[1.1237e-05, 7.7921e-01, 7.8640e-01,  ..., 7.6583e-01,
          7.4074e-01, 7.9537e-01],
         [9.9999e-01, 2.2079e-01, 2.1360e-01,  ..., 2.3417e-01,
          2.5926e-01, 2.0463e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:55:41,423 [Process: 0] Synchronize training processes
2024-08-18 14:55:41,424 [Process: 0] Evaluating...
2024-08-18 14:55:41,425 [Process: 0] EPOCH 17:
2024-08-18 14:55:41,427 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:42,507 [Process: 0] Synchronize training processes
2024-08-18 14:55:42,508 [Process: 0] Evaluating...
2024-08-18 14:55:42,510 [Process: 0] EPOCH 18:
2024-08-18 14:55:42,511 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7708, 0.7486, 0.7719,  ..., 0.7593, 0.7743, 0.7713],
         [0.2292, 0.2514, 0.2281,  ..., 0.2407, 0.2257, 0.2287]],
        [[0.5000, 0.5000, 0.7672,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.2328,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 8.1305e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 4.7999e-01],
         [5.0000e-01, 1.8695e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.2001e-01]],
        [[4.2294e-09, 7.7260e-01, 8.1815e-01,  ..., 7.6957e-01,
          7.3398e-01, 7.6083e-01],
         [1.0000e+00, 2.2740e-01, 1.8185e-01,  ..., 2.3043e-01,
          2.6602e-01, 2.3917e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7756, 0.7572, 0.7671,  ..., 0.7700, 0.7916, 0.7559],
         [0.2244, 0.2428, 0.2329,  ..., 0.2300, 0.2084, 0.2441]],
        [[0.5000, 0.5000, 0.7556,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.2444,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 8.1590e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01],
         [5.0000e-01, 1.8410e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01]],
        [[5.3952e-05, 7.7355e-01, 7.9180e-01,  ..., 7.4843e-01,
          7.5569e-01, 7.9027e-01],
         [9.9995e-01, 2.2645e-01, 2.0820e-01,  ..., 2.5157e-01,
          2.4431e-01, 2.0973e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:55:43,592 [Process: 0] Synchronize training processes
2024-08-18 14:55:43,593 [Process: 0] Evaluating...
2024-08-18 14:55:43,594 [Process: 0] EPOCH 19:
2024-08-18 14:55:43,596 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:44,706 [Process: 0] Synchronize training processes
2024-08-18 14:55:44,706 [Process: 0] Evaluating...
2024-08-18 14:55:44,708 [Process: 0] EPOCH 20:
2024-08-18 14:55:44,709 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7503, 0.7363, 0.7847,  ..., 0.7679, 0.7743, 0.7670],
         [0.2497, 0.2637, 0.2153,  ..., 0.2321, 0.2257, 0.2330]],
        [[0.5000, 0.5000, 0.7471,  ..., 0.7561, 0.5000, 0.7671],
         [0.5000, 0.5000, 0.2529,  ..., 0.2439, 0.5000, 0.2329]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 7.7398e-05, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01],
         [5.0000e-01, 9.9992e-01, 5.0000e-01,  ..., 5.0000e-01,
          5.0000e-01, 5.0000e-01]],
        [[5.9336e-01, 8.4131e-01, 8.2117e-01,  ..., 7.9706e-01,
          8.0102e-01, 8.1768e-01],
         [4.0664e-01, 1.5869e-01, 1.7883e-01,  ..., 2.0294e-01,
          1.9898e-01, 1.8232e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7539, 0.7695, 0.7557,  ..., 0.7761, 0.7711, 0.7449],
         [0.2461, 0.2305, 0.2443,  ..., 0.2239, 0.2289, 0.2551]],
        [[0.5000, 0.5000, 0.7411,  ..., 0.7839, 0.5000, 0.7669],
         [0.5000, 0.5000, 0.2589,  ..., 0.2161, 0.5000, 0.2331]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8608, 0.7895, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
         [0.1392, 0.2105, 0.5000,  ..., 0.5000, 0.5000, 0.5000]],
        [[0.3919, 0.8416, 0.8156,  ..., 0.8119, 0.8087, 0.8084],
         [0.6081, 0.1584, 0.1844,  ..., 0.1881, 0.1913, 0.1916]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:55:45,792 [Process: 0] Synchronize training processes
2024-08-18 14:55:45,792 [Process: 0] Evaluating...
2024-08-18 14:55:45,794 [Process: 0] EPOCH 21:
2024-08-18 14:55:45,796 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:46,882 [Process: 0] Synchronize training processes
2024-08-18 14:55:46,882 [Process: 0] Evaluating...
2024-08-18 14:55:46,886 [Process: 0] EPOCH 22:
2024-08-18 14:55:46,888 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8059, 0.7780, 0.7811,  ..., 0.7790, 0.7676, 0.7806],
         [0.1941, 0.2220, 0.2189,  ..., 0.2210, 0.2324, 0.2194]],
        [[0.5000, 0.5000, 0.7920,  ..., 0.7877, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.2080,  ..., 0.2123, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8017, 0.5000, 0.5000,  ..., 0.5000, 0.7931, 0.5000],
         [0.1983, 0.5000, 0.5000,  ..., 0.5000, 0.2069, 0.5000]],
        [[0.3805, 0.7823, 0.5000,  ..., 0.7856, 0.7650, 0.5000],
         [0.6195, 0.2177, 0.5000,  ..., 0.2144, 0.2350, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7731, 0.7699, 0.7752,  ..., 0.7883, 0.8074, 0.8062],
         [0.2269, 0.2301, 0.2248,  ..., 0.2117, 0.1926, 0.1938]],
        [[0.5000, 0.5000, 0.7730,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.2270,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:47,972 [Process: 0] Synchronize training processes
2024-08-18 14:55:47,973 [Process: 0] Evaluating...
2024-08-18 14:55:47,974 [Process: 0] EPOCH 23:
2024-08-18 14:55:47,976 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:49,056 [Process: 0] Synchronize training processes
2024-08-18 14:55:49,057 [Process: 0] Evaluating...
2024-08-18 14:55:49,058 [Process: 0] EPOCH 24:
2024-08-18 14:55:49,060 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8513, 0.5000, 0.8170,  ..., 0.5000, 0.8122, 0.5000],
         [0.1487, 0.5000, 0.1830,  ..., 0.5000, 0.1878, 0.5000]],
        [[0.7720, 0.8159, 0.8376,  ..., 0.8246, 0.7849, 0.8276],
         [0.2280, 0.1841, 0.1624,  ..., 0.1754, 0.2151, 0.1724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7921, 0.8066, 0.7941,  ..., 0.8262, 0.8038, 0.7966],
         [0.2079, 0.1934, 0.2059,  ..., 0.1738, 0.1962, 0.2034]],
        [[0.5000, 0.5000, 0.8084,  ..., 0.5000, 0.5000, 0.8166],
         [0.5000, 0.5000, 0.1916,  ..., 0.5000, 0.5000, 0.1834]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8181, 0.5000, 0.5000,  ..., 0.8108, 0.8043, 0.5000],
         [0.1819, 0.5000, 0.5000,  ..., 0.1892, 0.1957, 0.5000]],
        [[0.8296, 0.8106, 0.8197,  ..., 0.8002, 0.7961, 0.8251],
         [0.1704, 0.1894, 0.1803,  ..., 0.1998, 0.2039, 0.1749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7598, 0.7583, 0.7690,  ..., 0.7492, 0.7471, 0.7422],
         [0.2402, 0.2417, 0.2310,  ..., 0.2508, 0.2529, 0.2578]],
        [[0.4468, 0.7509, 0.7548,  ..., 0.5000, 0.5000, 0.7894],
         [0.5532, 0.2491, 0.2452,  ..., 0.5000, 0.5000, 0.2106]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:50,145 [Process: 0] Synchronize training processes
2024-08-18 14:55:50,145 [Process: 0] Evaluating...
2024-08-18 14:55:50,147 [Process: 0] EPOCH 25:
2024-08-18 14:55:50,148 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7895, 0.5000, 0.7865],
         [0.5000, 0.5000, 0.5000,  ..., 0.2105, 0.5000, 0.2135]],
        [[0.7957, 0.7998, 0.7876,  ..., 0.7797, 0.7258, 0.8026],
         [0.2043, 0.2002, 0.2124,  ..., 0.2203, 0.2742, 0.1974]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7725, 0.7399, 0.7439,  ..., 0.7589, 0.7787, 0.7592],
         [0.2275, 0.2601, 0.2561,  ..., 0.2411, 0.2213, 0.2408]],
        [[0.5000, 0.7926, 0.5000,  ..., 0.5000, 0.5000, 0.7825],
         [0.5000, 0.2074, 0.5000,  ..., 0.5000, 0.5000, 0.2175]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7335, 0.5000, 0.5000,  ..., 0.8014, 0.8029, 0.7758],
         [0.2665, 0.5000, 0.5000,  ..., 0.1986, 0.1971, 0.2242]],
        [[0.6890, 0.8104, 0.8079,  ..., 0.8162, 0.7638, 0.8199],
         [0.3110, 0.1896, 0.1921,  ..., 0.1838, 0.2362, 0.1801]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
2024-08-18 14:55:51,235 [Process: 0] Synchronize training processes
2024-08-18 14:55:51,236 [Process: 0] Evaluating...
2024-08-18 14:55:51,238 [Process: 0] EPOCH 26:
2024-08-18 14:55:51,239 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:52,319 [Process: 0] Synchronize training processes
2024-08-18 14:55:52,320 [Process: 0] Evaluating...
2024-08-18 14:55:52,321 [Process: 0] EPOCH 27:
2024-08-18 14:55:52,323 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7840, 0.7852, 0.7731,  ..., 0.7693, 0.7902, 0.7632],
         [0.2160, 0.2148, 0.2269,  ..., 0.2307, 0.2098, 0.2368]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.7754],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.2246]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[7.7394e-01, 5.0000e-01, 3.0915e-01,  ..., 7.8835e-01,
          7.8004e-01, 7.9434e-01],
         [2.2606e-01, 5.0000e-01, 6.9085e-01,  ..., 2.1165e-01,
          2.1996e-01, 2.0566e-01]],
        [[1.2329e-06, 7.9719e-01, 7.8788e-01,  ..., 8.0027e-01,
          7.5631e-01, 7.8571e-01],
         [1.0000e+00, 2.0281e-01, 2.1212e-01,  ..., 1.9973e-01,
          2.4369e-01, 2.1429e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7811, 0.7744, 0.7847,  ..., 0.7756, 0.7966, 0.7727],
         [0.2189, 0.2256, 0.2153,  ..., 0.2244, 0.2034, 0.2273]],
        [[0.5000, 0.7540, 0.5000,  ..., 0.5000, 0.5000, 0.7741],
         [0.5000, 0.2460, 0.5000,  ..., 0.5000, 0.5000, 0.2259]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7803, 0.5000, 0.7659],
         [0.5000, 0.5000, 0.5000,  ..., 0.2197, 0.5000, 0.2341]],
        [[0.0231, 0.7824, 0.7735,  ..., 0.6350, 0.7648, 0.8038],
         [0.9769, 0.2176, 0.2265,  ..., 0.3650, 0.2352, 0.1962]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:55:53,405 [Process: 0] Synchronize training processes
2024-08-18 14:55:53,405 [Process: 0] Evaluating...
2024-08-18 14:55:53,407 [Process: 0] EPOCH 28:
2024-08-18 14:55:53,409 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:54,490 [Process: 0] Synchronize training processes
2024-08-18 14:55:54,490 [Process: 0] Evaluating...
2024-08-18 14:55:54,492 [Process: 0] EPOCH 29:
2024-08-18 14:55:54,494 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8160, 0.8116, 0.8112,  ..., 0.8345, 0.7991, 0.8158],
         [0.1840, 0.1884, 0.1888,  ..., 0.1655, 0.2009, 0.1842]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8076],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1924]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 5.0000e-01, 5.0000e-01,  ..., 8.1765e-01,
          5.0000e-01, 7.9628e-01],
         [5.0000e-01, 5.0000e-01, 5.0000e-01,  ..., 1.8235e-01,
          5.0000e-01, 2.0372e-01]],
        [[3.4516e-06, 7.9858e-01, 7.7948e-01,  ..., 7.6866e-01,
          7.6904e-01, 8.0362e-01],
         [1.0000e+00, 2.0142e-01, 2.2052e-01,  ..., 2.3134e-01,
          2.3096e-01, 1.9638e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7987, 0.8087, 0.8390,  ..., 0.8139, 0.8058, 0.8227],
         [0.2013, 0.1913, 0.1610,  ..., 0.1861, 0.1942, 0.1773]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8003],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1997]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8097, 0.8064, 0.8200],
         [0.5000, 0.5000, 0.5000,  ..., 0.1903, 0.1936, 0.1800]],
        [[0.8152, 0.7993, 0.8197,  ..., 0.8034, 0.8030, 0.8199],
         [0.1848, 0.2007, 0.1803,  ..., 0.1966, 0.1970, 0.1801]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:55:55,575 [Process: 0] Synchronize training processes
2024-08-18 14:55:55,576 [Process: 0] Evaluating...
2024-08-18 14:55:55,577 [Process: 0] EPOCH 30:
2024-08-18 14:55:55,579 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:56,662 [Process: 0] Synchronize training processes
2024-08-18 14:55:56,662 [Process: 0] Evaluating...
2024-08-18 14:55:56,664 [Process: 0] EPOCH 31:
2024-08-18 14:55:56,666 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8408, 0.8121, 0.8202,  ..., 0.8240, 0.8129, 0.8268],
         [0.1592, 0.1879, 0.1798,  ..., 0.1760, 0.1871, 0.1732]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8308],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8099, 0.8263, 0.7941],
         [0.5000, 0.5000, 0.5000,  ..., 0.1901, 0.1737, 0.2059]],
        [[0.8111, 0.7892, 0.8231,  ..., 0.8187, 0.8204, 0.8116],
         [0.1889, 0.2108, 0.1769,  ..., 0.1813, 0.1796, 0.1884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8317, 0.8307, 0.8078,  ..., 0.8249, 0.8471, 0.8228],
         [0.1683, 0.1693, 0.1922,  ..., 0.1751, 0.1529, 0.1772]],
        [[0.5000, 0.7556, 0.5000,  ..., 0.5000, 0.5000, 0.8194],
         [0.5000, 0.2444, 0.5000,  ..., 0.5000, 0.5000, 0.1806]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5000, 0.8342, 0.5000,  ..., 0.8281, 0.5000, 0.8140],
         [0.5000, 0.1658, 0.5000,  ..., 0.1719, 0.5000, 0.1860]],
        [[0.8151, 0.8354, 0.5000,  ..., 0.8305, 0.8388, 0.8098],
         [0.1849, 0.1646, 0.5000,  ..., 0.1695, 0.1612, 0.1902]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:55:57,749 [Process: 0] Synchronize training processes
2024-08-18 14:55:57,749 [Process: 0] Evaluating...
2024-08-18 14:55:57,753 [Process: 0] EPOCH 32:
2024-08-18 14:55:57,755 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:55:58,838 [Process: 0] Synchronize training processes
2024-08-18 14:55:58,838 [Process: 0] Evaluating...
2024-08-18 14:55:58,840 [Process: 0] EPOCH 33:
2024-08-18 14:55:58,842 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8262, 0.8105, 0.8044,  ..., 0.8253, 0.8094, 0.8134],
         [0.1738, 0.1895, 0.1956,  ..., 0.1747, 0.1906, 0.1866]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8266],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8165, 0.8147, 0.8184],
         [0.5000, 0.5000, 0.5000,  ..., 0.1835, 0.1853, 0.1816]],
        [[0.8184, 0.8130, 0.5000,  ..., 0.8322, 0.5000, 0.8162],
         [0.1816, 0.1870, 0.5000,  ..., 0.1678, 0.5000, 0.1838]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8072, 0.8171, 0.8019,  ..., 0.7994, 0.7980, 0.8148],
         [0.1928, 0.1829, 0.1981,  ..., 0.2006, 0.2020, 0.1852]],
        [[0.5000, 0.8079, 0.5000,  ..., 0.5000, 0.5000, 0.7840],
         [0.5000, 0.1921, 0.5000,  ..., 0.5000, 0.5000, 0.2160]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 14:55:59,922 [Process: 0] Synchronize training processes
2024-08-18 14:55:59,923 [Process: 0] Evaluating...
2024-08-18 14:55:59,925 [Process: 0] EPOCH 34:
2024-08-18 14:55:59,926 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:01,013 [Process: 0] Synchronize training processes
2024-08-18 14:56:01,013 [Process: 0] Evaluating...
2024-08-18 14:56:01,015 [Process: 0] EPOCH 35:
2024-08-18 14:56:01,016 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8268, 0.8156, 0.8199],
         [0.5000, 0.5000, 0.5000,  ..., 0.1732, 0.1844, 0.1801]],
        [[0.8224, 0.8289, 0.8261,  ..., 0.8100, 0.8369, 0.8141],
         [0.1776, 0.1711, 0.1739,  ..., 0.1900, 0.1631, 0.1859]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7055, 0.8165, 0.7996,  ..., 0.8170, 0.8138, 0.8094],
         [0.2945, 0.1835, 0.2004,  ..., 0.1830, 0.1862, 0.1906]],
        [[0.5000, 0.8082, 0.5000,  ..., 0.5000, 0.5000, 0.8082],
         [0.5000, 0.1918, 0.5000,  ..., 0.5000, 0.5000, 0.1918]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7376, 0.5000, 0.8419,  ..., 0.8560, 0.8397, 0.8490],
         [0.2624, 0.5000, 0.1581,  ..., 0.1440, 0.1603, 0.1510]],
        [[0.5000, 0.7862, 0.7441,  ..., 0.8333, 0.5000, 0.8771],
         [0.5000, 0.2138, 0.2559,  ..., 0.1667, 0.5000, 0.1229]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8086, 0.8096, 0.8162,  ..., 0.8084, 0.8167, 0.8081],
         [0.1914, 0.1904, 0.1838,  ..., 0.1916, 0.1833, 0.1919]],
        [[0.5000, 0.7829, 0.5000,  ..., 0.5000, 0.5000, 0.8094],
         [0.5000, 0.2171, 0.5000,  ..., 0.5000, 0.5000, 0.1906]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:02,098 [Process: 0] Synchronize training processes
2024-08-18 14:56:02,098 [Process: 0] Evaluating...
2024-08-18 14:56:02,100 [Process: 0] EPOCH 36:
2024-08-18 14:56:02,101 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[5.0000e-01, 5.1330e-01, 8.4283e-01,  ..., 8.1832e-01,
          5.0000e-01, 8.2545e-01],
         [5.0000e-01, 4.8670e-01, 1.5717e-01,  ..., 1.8168e-01,
          5.0000e-01, 1.7455e-01]],
        [[3.0841e-05, 8.0752e-01, 8.1909e-01,  ..., 8.5106e-01,
          7.8463e-01, 8.1887e-01],
         [9.9997e-01, 1.9248e-01, 1.8091e-01,  ..., 1.4894e-01,
          2.1537e-01, 1.8113e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8153, 0.8046, 0.7817,  ..., 0.8187, 0.8182, 0.8122],
         [0.1847, 0.1954, 0.2183,  ..., 0.1813, 0.1818, 0.1878]],
        [[0.5000, 0.7724, 0.5000,  ..., 0.7958, 0.7961, 0.7174],
         [0.5000, 0.2276, 0.5000,  ..., 0.2042, 0.2039, 0.2826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7762, 0.5000, 0.7783,  ..., 0.7949, 0.8107, 0.7852],
         [0.2238, 0.5000, 0.2217,  ..., 0.2051, 0.1893, 0.2148]],
        [[0.8215, 0.8053, 0.8001,  ..., 0.8372, 0.8255, 0.5000],
         [0.1785, 0.1947, 0.1999,  ..., 0.1628, 0.1745, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8009, 0.7964, 0.7962,  ..., 0.8182, 0.5000, 0.5000],
         [0.1991, 0.2036, 0.2038,  ..., 0.1818, 0.5000, 0.5000]],
        [[0.5000, 0.7815, 0.8474,  ..., 0.8142, 0.7946, 0.7997],
         [0.5000, 0.2185, 0.1526,  ..., 0.1858, 0.2054, 0.2003]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:03,183 [Process: 0] Synchronize training processes
2024-08-18 14:56:03,184 [Process: 0] Evaluating...
2024-08-18 14:56:03,185 [Process: 0] EPOCH 37:
2024-08-18 14:56:03,187 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:04,267 [Process: 0] Synchronize training processes
2024-08-18 14:56:04,268 [Process: 0] Evaluating...
2024-08-18 14:56:04,269 [Process: 0] EPOCH 38:
2024-08-18 14:56:04,271 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5000, 0.5000, 0.7752,  ..., 0.7950, 0.5000, 0.7781],
         [0.5000, 0.5000, 0.2248,  ..., 0.2050, 0.5000, 0.2219]],
        [[0.8128, 0.7839, 0.7836,  ..., 0.5000, 0.8124, 0.5000],
         [0.1872, 0.2161, 0.2164,  ..., 0.5000, 0.1876, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7811, 0.7723, 0.7589,  ..., 0.8246, 0.8224, 0.5000],
         [0.2189, 0.2277, 0.2411,  ..., 0.1754, 0.1776, 0.5000]],
        [[0.5000, 0.7326, 0.8115,  ..., 0.7570, 0.7783, 0.7854],
         [0.5000, 0.2674, 0.1885,  ..., 0.2430, 0.2217, 0.2146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7793, 0.5000, 0.8067,  ..., 0.7759, 0.8116, 0.8006],
         [0.2207, 0.5000, 0.1933,  ..., 0.2241, 0.1884, 0.1994]],
        [[0.8097, 0.8021, 0.8019,  ..., 0.5000, 0.7974, 0.5000],
         [0.1903, 0.1979, 0.1981,  ..., 0.5000, 0.2026, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8044, 0.7921, 0.8064,  ..., 0.7909, 0.5000, 0.5000],
         [0.1956, 0.2079, 0.1936,  ..., 0.2091, 0.5000, 0.5000]],
        [[0.5000, 0.7951, 0.8070,  ..., 0.8125, 0.7993, 0.8042],
         [0.5000, 0.2049, 0.1930,  ..., 0.1875, 0.2007, 0.1958]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:05,353 [Process: 0] Synchronize training processes
2024-08-18 14:56:05,354 [Process: 0] Evaluating...
2024-08-18 14:56:05,355 [Process: 0] EPOCH 39:
2024-08-18 14:56:05,357 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:06,439 [Process: 0] Synchronize training processes
2024-08-18 14:56:06,439 [Process: 0] Evaluating...
2024-08-18 14:56:06,441 [Process: 0] EPOCH 40:
2024-08-18 14:56:06,443 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7918, 0.5000, 0.8065,  ..., 0.7880, 0.8055, 0.7921],
         [0.2082, 0.5000, 0.1935,  ..., 0.2120, 0.1945, 0.2079]],
        [[0.5000, 0.7985, 0.7956,  ..., 0.5000, 0.7894, 0.7869],
         [0.5000, 0.2015, 0.2044,  ..., 0.5000, 0.2106, 0.2131]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8111, 0.8019, 0.8186,  ..., 0.8094, 0.8113, 0.5441],
         [0.1889, 0.1981, 0.1814,  ..., 0.1906, 0.1887, 0.4559]],
        [[0.8294, 0.8046, 0.8237,  ..., 0.8142, 0.8124, 0.8131],
         [0.1706, 0.1954, 0.1763,  ..., 0.1858, 0.1876, 0.1869]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8389, 0.5984, 0.8366,  ..., 0.8392, 0.8467, 0.5000],
         [0.1611, 0.4016, 0.1634,  ..., 0.1608, 0.1533, 0.5000]],
        [[0.8220, 0.8323, 0.8429,  ..., 0.4785, 0.5000, 0.8198],
         [0.1780, 0.1677, 0.1571,  ..., 0.5215, 0.5000, 0.1802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:07,526 [Process: 0] Synchronize training processes
2024-08-18 14:56:07,526 [Process: 0] Evaluating...
2024-08-18 14:56:07,528 [Process: 0] EPOCH 41:
2024-08-18 14:56:07,529 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:08,612 [Process: 0] Synchronize training processes
2024-08-18 14:56:08,612 [Process: 0] Evaluating...
2024-08-18 14:56:08,616 [Process: 0] EPOCH 42:
2024-08-18 14:56:08,618 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8095, 0.5000, 0.5000,  ..., 0.8144, 0.8125, 0.8077],
         [0.1905, 0.5000, 0.5000,  ..., 0.1856, 0.1875, 0.1923]],
        [[0.8220, 0.8101, 0.8079,  ..., 0.8123, 0.8136, 0.8073],
         [0.1780, 0.1899, 0.1921,  ..., 0.1877, 0.1864, 0.1927]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8395, 0.8392, 0.8311,  ..., 0.7659, 0.5000, 0.5000],
         [0.1605, 0.1608, 0.1689,  ..., 0.2341, 0.5000, 0.5000]],
        [[0.8406, 0.8385, 0.8313,  ..., 0.5000, 0.8306, 0.8237],
         [0.1594, 0.1615, 0.1687,  ..., 0.5000, 0.1694, 0.1763]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8198, 0.5000, 0.5000,  ..., 0.8187, 0.8214, 0.8193],
         [0.1802, 0.5000, 0.5000,  ..., 0.1813, 0.1786, 0.1807]],
        [[0.8309, 0.8239, 0.8306,  ..., 0.8254, 0.8292, 0.8115],
         [0.1691, 0.1761, 0.1694,  ..., 0.1746, 0.1708, 0.1885]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7981, 0.8099, 0.8013,  ..., 0.8148, 0.8181, 0.7996],
         [0.2019, 0.1901, 0.1987,  ..., 0.1852, 0.1819, 0.2004]],
        [[0.5000, 0.7986, 0.8133,  ..., 0.5000, 0.5000, 0.7948],
         [0.5000, 0.2014, 0.1867,  ..., 0.5000, 0.5000, 0.2052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:09,699 [Process: 0] Synchronize training processes
2024-08-18 14:56:09,700 [Process: 0] Evaluating...
2024-08-18 14:56:09,702 [Process: 0] EPOCH 43:
2024-08-18 14:56:09,703 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:10,786 [Process: 0] Synchronize training processes
2024-08-18 14:56:10,786 [Process: 0] Evaluating...
2024-08-18 14:56:10,788 [Process: 0] EPOCH 44:
2024-08-18 14:56:10,789 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.7952, 0.7701, 0.7643,  ..., 0.7827, 0.7543, 0.7334],
         [0.2048, 0.2299, 0.2357,  ..., 0.2173, 0.2457, 0.2666]],
        [[0.5000, 0.7902, 0.7812,  ..., 0.7857, 0.7824, 0.7860],
         [0.5000, 0.2098, 0.2188,  ..., 0.2143, 0.2176, 0.2140]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8362, 0.5000, 0.8278,  ..., 0.8294, 0.8341, 0.5000],
         [0.1638, 0.5000, 0.1722,  ..., 0.1706, 0.1659, 0.5000]],
        [[0.5000, 0.8169, 0.8249,  ..., 0.5000, 0.7413, 0.8204],
         [0.5000, 0.1831, 0.1751,  ..., 0.5000, 0.2587, 0.1796]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8306, 0.8134, 0.8070,  ..., 0.8135, 0.7986, 0.8237],
         [0.1694, 0.1866, 0.1930,  ..., 0.1865, 0.2014, 0.1763]],
        [[0.5000, 0.8206, 0.8192,  ..., 0.8254, 0.8219, 0.8232],
         [0.5000, 0.1794, 0.1808,  ..., 0.1746, 0.1781, 0.1768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8450, 0.5000, 0.8662,  ..., 0.8454, 0.5000, 0.5000],
         [0.1550, 0.5000, 0.1338,  ..., 0.1546, 0.5000, 0.5000]],
        [[0.2249, 0.8429, 0.8443,  ..., 0.8514, 0.8419, 0.8481],
         [0.7751, 0.1571, 0.1557,  ..., 0.1486, 0.1581, 0.1519]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:11,877 [Process: 0] Synchronize training processes
2024-08-18 14:56:11,878 [Process: 0] Evaluating...
2024-08-18 14:56:11,879 [Process: 0] EPOCH 45:
2024-08-18 14:56:11,881 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:12,965 [Process: 0] Synchronize training processes
2024-08-18 14:56:12,965 [Process: 0] Evaluating...
2024-08-18 14:56:12,967 [Process: 0] EPOCH 46:
2024-08-18 14:56:12,969 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8478, 0.8326, 0.5000,  ..., 0.8339, 0.7910, 0.8566],
         [0.1522, 0.1674, 0.5000,  ..., 0.1661, 0.2090, 0.1434]],
        [[0.5000, 0.8449, 0.8499,  ..., 0.8472, 0.8507, 0.8454],
         [0.5000, 0.1551, 0.1501,  ..., 0.1528, 0.1493, 0.1546]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8429, 0.5000, 0.8499,  ..., 0.8410, 0.5000, 0.5000],
         [0.1571, 0.5000, 0.1501,  ..., 0.1590, 0.5000, 0.5000]],
        [[0.0229, 0.8396, 0.8348,  ..., 0.8285, 0.8347, 0.6574],
         [0.9771, 0.1604, 0.1652,  ..., 0.1715, 0.1653, 0.3426]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5791, 0.8347, 0.8446,  ..., 0.8490, 0.8302, 0.8325],
         [0.4209, 0.1653, 0.1554,  ..., 0.1510, 0.1698, 0.1675]],
        [[0.3781, 0.8367, 0.8600,  ..., 0.8430, 0.8181, 0.8478],
         [0.6219, 0.1633, 0.1400,  ..., 0.1570, 0.1819, 0.1522]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:14,053 [Process: 0] Synchronize training processes
2024-08-18 14:56:14,054 [Process: 0] Evaluating...
2024-08-18 14:56:14,055 [Process: 0] EPOCH 47:
2024-08-18 14:56:14,057 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8374, 0.8290, 0.8262,  ..., 0.8255, 0.5000, 0.7895],
         [0.1626, 0.1710, 0.1738,  ..., 0.1745, 0.5000, 0.2105]],
        [[0.0177, 0.8255, 0.8214,  ..., 0.8402, 0.8339, 0.8408],
         [0.9823, 0.1745, 0.1786,  ..., 0.1598, 0.1661, 0.1592]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5000, 0.8288, 0.8347,  ..., 0.7969, 0.8251, 0.5000],
         [0.5000, 0.1712, 0.1653,  ..., 0.2031, 0.1749, 0.5000]],
        [[0.8237, 0.8287, 0.8292,  ..., 0.8328, 0.8163, 0.8264],
         [0.1763, 0.1713, 0.1708,  ..., 0.1672, 0.1837, 0.1736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.5000, 0.5000, 0.5519,  ..., 0.8577, 0.5000, 0.8715],
         [0.5000, 0.5000, 0.4481,  ..., 0.1423, 0.5000, 0.1285]],
        [[0.0012, 0.8575, 0.8641,  ..., 0.8759, 0.5000, 0.8737],
         [0.9988, 0.1425, 0.1359,  ..., 0.1241, 0.5000, 0.1263]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8456, 0.8443, 0.8433,  ..., 0.8422, 0.8395, 0.8430],
         [0.1544, 0.1557, 0.1567,  ..., 0.1578, 0.1605, 0.1570]],
        [[0.5000, 0.8527, 0.8440,  ..., 0.8447, 0.8433, 0.5000],
         [0.5000, 0.1473, 0.1560,  ..., 0.1553, 0.1567, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:15,145 [Process: 0] Synchronize training processes
2024-08-18 14:56:15,145 [Process: 0] Evaluating...
2024-08-18 14:56:15,147 [Process: 0] EPOCH 48:
2024-08-18 14:56:15,149 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:16,240 [Process: 0] Synchronize training processes
2024-08-18 14:56:16,240 [Process: 0] Evaluating...
2024-08-18 14:56:16,242 [Process: 0] EPOCH 49:
2024-08-18 14:56:16,244 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[8.5756e-01, 8.7545e-01, 5.0000e-01,  ..., 5.0000e-01,
          8.6891e-01, 8.6169e-01],
         [1.4244e-01, 1.2455e-01, 5.0000e-01,  ..., 5.0000e-01,
          1.3109e-01, 1.3831e-01]],
        [[3.4028e-05, 8.5794e-01, 8.3740e-01,  ..., 8.7113e-01,
          8.6617e-01, 8.5188e-01],
         [9.9997e-01, 1.4206e-01, 1.6260e-01,  ..., 1.2887e-01,
          1.3383e-01, 1.4812e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8639, 0.8457, 0.8506,  ..., 0.8496, 0.8467, 0.8483],
         [0.1361, 0.1543, 0.1494,  ..., 0.1504, 0.1533, 0.1517]],
        [[0.5000, 0.8495, 0.5000,  ..., 0.8514, 0.8477, 0.8441],
         [0.5000, 0.1505, 0.5000,  ..., 0.1486, 0.1523, 0.1559]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[8.4686e-01, 8.4993e-01, 8.3754e-01,  ..., 8.4028e-01,
          8.5850e-01, 8.5155e-01],
         [1.5314e-01, 1.5007e-01, 1.6246e-01,  ..., 1.5972e-01,
          1.4150e-01, 1.4845e-01]],
        [[8.2510e-04, 8.1663e-01, 8.2846e-01,  ..., 8.5539e-01,
          8.3850e-01, 8.4648e-01],
         [9.9917e-01, 1.8337e-01, 1.7154e-01,  ..., 1.4461e-01,
          1.6150e-01, 1.5352e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8667, 0.8654, 0.8650,  ..., 0.8698, 0.8715, 0.8654],
         [0.1333, 0.1346, 0.1350,  ..., 0.1302, 0.1285, 0.1346]],
        [[0.8714, 0.8564, 0.8633,  ..., 0.8578, 0.8575, 0.5000],
         [0.1286, 0.1436, 0.1367,  ..., 0.1422, 0.1425, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:17,326 [Process: 0] Synchronize training processes
2024-08-18 14:56:17,327 [Process: 0] Evaluating...
2024-08-18 14:56:17,328 [Process: 0] EPOCH 50:
2024-08-18 14:56:17,330 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:18,443 [Process: 0] Synchronize training processes
2024-08-18 14:56:18,444 [Process: 0] Evaluating...
2024-08-18 14:56:18,445 [Process: 0] EPOCH 51:
2024-08-18 14:56:18,447 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8665, 0.8662, 0.8605,  ..., 0.8519, 0.8599, 0.8623],
         [0.1335, 0.1338, 0.1395,  ..., 0.1481, 0.1401, 0.1377]],
        [[0.0543, 0.8448, 0.8610,  ..., 0.8597, 0.8643, 0.8497],
         [0.9457, 0.1552, 0.1390,  ..., 0.1403, 0.1357, 0.1503]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8553, 0.8757, 0.8669,  ..., 0.8667, 0.8673, 0.8686],
         [0.1447, 0.1243, 0.1331,  ..., 0.1333, 0.1327, 0.1314]],
        [[0.5000, 0.8635, 0.8567,  ..., 0.8658, 0.8641, 0.8699],
         [0.5000, 0.1365, 0.1433,  ..., 0.1342, 0.1359, 0.1301]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8555, 0.8522, 0.8583,  ..., 0.8502, 0.8474, 0.8575],
         [0.1445, 0.1478, 0.1417,  ..., 0.1498, 0.1526, 0.1425]],
        [[0.5000, 0.8581, 0.8536,  ..., 0.8645, 0.8587, 0.8444],
         [0.5000, 0.1419, 0.1464,  ..., 0.1355, 0.1413, 0.1556]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:19,607 [Process: 0] Synchronize training processes
2024-08-18 14:56:19,607 [Process: 0] Evaluating...
2024-08-18 14:56:19,611 [Process: 0] EPOCH 52:
2024-08-18 14:56:19,613 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:20,788 [Process: 0] Synchronize training processes
2024-08-18 14:56:20,789 [Process: 0] Evaluating...
2024-08-18 14:56:20,791 [Process: 0] EPOCH 53:
2024-08-18 14:56:20,792 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8630, 0.6696, 0.8764,  ..., 0.8685, 0.8755, 0.8663],
         [0.1370, 0.3304, 0.1236,  ..., 0.1315, 0.1245, 0.1337]],
        [[0.5000, 0.8642, 0.8680,  ..., 0.8797, 0.8697, 0.8686],
         [0.5000, 0.1358, 0.1320,  ..., 0.1203, 0.1303, 0.1314]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8715, 0.8550, 0.8522,  ..., 0.8493, 0.8470, 0.8521],
         [0.1285, 0.1450, 0.1478,  ..., 0.1507, 0.1530, 0.1479]],
        [[0.4863, 0.8329, 0.5000,  ..., 0.8457, 0.5000, 0.8313],
         [0.5137, 0.1671, 0.5000,  ..., 0.1543, 0.5000, 0.1687]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8460, 0.8482, 0.8635,  ..., 0.8550, 0.8647, 0.8463],
         [0.1540, 0.1518, 0.1365,  ..., 0.1450, 0.1353, 0.1537]],
        [[0.5000, 0.8561, 0.8604,  ..., 0.8575, 0.8487, 0.8592],
         [0.5000, 0.1439, 0.1396,  ..., 0.1425, 0.1513, 0.1408]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8698, 0.8631, 0.8599,  ..., 0.8675, 0.8652, 0.8693],
         [0.1302, 0.1369, 0.1401,  ..., 0.1325, 0.1348, 0.1307]],
        [[0.5000, 0.8719, 0.8699,  ..., 0.8715, 0.8584, 0.5000],
         [0.5000, 0.1281, 0.1301,  ..., 0.1285, 0.1416, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:21,951 [Process: 0] Synchronize training processes
2024-08-18 14:56:21,951 [Process: 0] Evaluating...
2024-08-18 14:56:21,953 [Process: 0] EPOCH 54:
2024-08-18 14:56:21,955 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:23,114 [Process: 0] Synchronize training processes
2024-08-18 14:56:23,114 [Process: 0] Evaluating...
2024-08-18 14:56:23,117 [Process: 0] EPOCH 55:
2024-08-18 14:56:23,120 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8765, 0.8796, 0.8719,  ..., 0.8674, 0.8788, 0.8744],
         [0.1235, 0.1204, 0.1281,  ..., 0.1326, 0.1212, 0.1256]],
        [[0.8663, 0.8632, 0.8654,  ..., 0.8685, 0.8675, 0.8595],
         [0.1337, 0.1368, 0.1346,  ..., 0.1315, 0.1325, 0.1405]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8610, 0.8512, 0.8503,  ..., 0.8503, 0.8561, 0.8459],
         [0.1390, 0.1488, 0.1497,  ..., 0.1497, 0.1439, 0.1541]],
        [[0.0370, 0.8248, 0.8071,  ..., 0.5000, 0.8618, 0.8371],
         [0.9630, 0.1752, 0.1929,  ..., 0.5000, 0.1382, 0.1629]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8970, 0.5000, 0.5000,  ..., 0.8892, 0.8879, 0.8877],
         [0.1030, 0.5000, 0.5000,  ..., 0.1108, 0.1121, 0.1123]],
        [[0.8897, 0.5000, 0.8944,  ..., 0.8776, 0.8753, 0.5039],
         [0.1103, 0.5000, 0.1056,  ..., 0.1224, 0.1247, 0.4961]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:24,275 [Process: 0] Synchronize training processes
2024-08-18 14:56:24,275 [Process: 0] Evaluating...
2024-08-18 14:56:24,277 [Process: 0] EPOCH 56:
2024-08-18 14:56:24,278 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8651, 0.8601, 0.8714,  ..., 0.8675, 0.8589, 0.8605],
         [0.1349, 0.1399, 0.1286,  ..., 0.1325, 0.1411, 0.1395]],
        [[0.5000, 0.8751, 0.8668,  ..., 0.8671, 0.5000, 0.8534],
         [0.5000, 0.1249, 0.1332,  ..., 0.1329, 0.5000, 0.1466]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8770, 0.8727, 0.5000,  ..., 0.8642, 0.8812, 0.8623],
         [0.1230, 0.1273, 0.5000,  ..., 0.1358, 0.1188, 0.1377]],
        [[0.8687, 0.5000, 0.8760,  ..., 0.8688, 0.8755, 0.8688],
         [0.1313, 0.5000, 0.1240,  ..., 0.1312, 0.1245, 0.1312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8604, 0.8699, 0.8539,  ..., 0.8628, 0.8769, 0.8570],
         [0.1396, 0.1301, 0.1461,  ..., 0.1372, 0.1231, 0.1430]],
        [[0.5000, 0.8702, 0.8777,  ..., 0.8710, 0.5000, 0.8479],
         [0.5000, 0.1298, 0.1223,  ..., 0.1290, 0.5000, 0.1521]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8887, 0.5000, 0.5000,  ..., 0.8779, 0.8864, 0.8830],
         [0.1113, 0.5000, 0.5000,  ..., 0.1221, 0.1136, 0.1170]],
        [[0.8753, 0.8721, 0.8773,  ..., 0.8781, 0.8723, 0.8632],
         [0.1247, 0.1279, 0.1227,  ..., 0.1219, 0.1277, 0.1368]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:25,431 [Process: 0] Synchronize training processes
2024-08-18 14:56:25,431 [Process: 0] Evaluating...
2024-08-18 14:56:25,433 [Process: 0] EPOCH 57:
2024-08-18 14:56:25,435 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:26,599 [Process: 0] Synchronize training processes
2024-08-18 14:56:26,599 [Process: 0] Evaluating...
2024-08-18 14:56:26,601 [Process: 0] EPOCH 58:
2024-08-18 14:56:26,603 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8589, 0.8540, 0.8673,  ..., 0.8669, 0.8606, 0.8618],
         [0.1411, 0.1460, 0.1327,  ..., 0.1331, 0.1394, 0.1382]],
        [[0.5000, 0.8665, 0.8722,  ..., 0.8560, 0.5000, 0.5000],
         [0.5000, 0.1335, 0.1278,  ..., 0.1440, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8697, 0.5000, 0.5000,  ..., 0.8833, 0.8829, 0.8797],
         [0.1303, 0.5000, 0.5000,  ..., 0.1167, 0.1171, 0.1203]],
        [[0.8740, 0.8739, 0.8760,  ..., 0.8787, 0.8783, 0.8681],
         [0.1260, 0.1261, 0.1240,  ..., 0.1213, 0.1217, 0.1319]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8673, 0.8694, 0.8674,  ..., 0.8574, 0.8624, 0.8718],
         [0.1327, 0.1306, 0.1326,  ..., 0.1426, 0.1376, 0.1282]],
        [[0.5000, 0.8673, 0.8839,  ..., 0.8716, 0.5000, 0.5000],
         [0.5000, 0.1327, 0.1161,  ..., 0.1284, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:27,760 [Process: 0] Synchronize training processes
2024-08-18 14:56:27,760 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8702, 0.5000, 0.5000,  ..., 0.8810, 0.8859, 0.8756],
         [0.1298, 0.5000, 0.5000,  ..., 0.1190, 0.1141, 0.1244]],
        [[0.8830, 0.8744, 0.8764,  ..., 0.8747, 0.8701, 0.8661],
         [0.1170, 0.1256, 0.1236,  ..., 0.1253, 0.1299, 0.1339]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-18 14:56:27,762 [Process: 0] EPOCH 59:
2024-08-18 14:56:27,764 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:28,919 [Process: 0] Synchronize training processes
2024-08-18 14:56:28,919 [Process: 0] Evaluating...
2024-08-18 14:56:28,921 [Process: 0] EPOCH 60:
2024-08-18 14:56:28,923 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:30,418 [Process: 0] Synchronize training processes
2024-08-18 14:56:30,418 [Process: 0] Evaluating...
2024-08-18 14:56:30,420 [Process: 0] EPOCH 61:
2024-08-18 14:56:30,422 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8617, 0.8697, 0.8584,  ..., 0.8688, 0.8528, 0.8600],
         [0.1383, 0.1303, 0.1416,  ..., 0.1312, 0.1472, 0.1400]],
        [[0.5000, 0.8635, 0.8649,  ..., 0.8719, 0.8671, 0.5000],
         [0.5000, 0.1365, 0.1351,  ..., 0.1281, 0.1329, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8752, 0.5000, 0.5000,  ..., 0.8767, 0.8765, 0.8802],
         [0.1248, 0.5000, 0.5000,  ..., 0.1233, 0.1235, 0.1198]],
        [[0.8743, 0.8740, 0.8673,  ..., 0.8671, 0.8769, 0.8763],
         [0.1257, 0.1260, 0.1327,  ..., 0.1329, 0.1231, 0.1237]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8726, 0.8625, 0.8564,  ..., 0.8708, 0.8597, 0.8572],
         [0.1274, 0.1375, 0.1436,  ..., 0.1292, 0.1403, 0.1428]],
        [[0.5000, 0.8692, 0.8617,  ..., 0.8699, 0.8655, 0.5000],
         [0.5000, 0.1308, 0.1383,  ..., 0.1301, 0.1345, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8660, 0.5000, 0.5000,  ..., 0.8750, 0.8652, 0.8715],
         [0.1340, 0.5000, 0.5000,  ..., 0.1250, 0.1348, 0.1285]],
        [[0.8703, 0.8698, 0.8717,  ..., 0.8611, 0.8698, 0.8686],
         [0.1297, 0.1302, 0.1283,  ..., 0.1389, 0.1302, 0.1314]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8629, 0.8664, 0.8698,  ..., 0.8646, 0.8716, 0.8636],
         [0.1371, 0.1336, 0.1302,  ..., 0.1354, 0.1284, 0.1364]],
        [[0.8190, 0.8580, 0.8715,  ..., 0.8637, 0.8615, 0.5000],
         [0.1810, 0.1420, 0.1285,  ..., 0.1363, 0.1385, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 14:56:31,563 [Process: 0] Synchronize training processes
2024-08-18 14:56:31,563 [Process: 0] Evaluating...
2024-08-18 14:56:31,572 [Process: 0] EPOCH 62:
2024-08-18 14:56:31,574 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:32,729 [Process: 0] Synchronize training processes
2024-08-18 14:56:32,729 [Process: 0] Evaluating...
2024-08-18 14:56:32,731 [Process: 0] EPOCH 63:
2024-08-18 14:56:32,733 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8652, 0.5000, 0.5000,  ..., 0.8670, 0.8768, 0.8701],
         [0.1348, 0.5000, 0.5000,  ..., 0.1330, 0.1232, 0.1299]],
        [[0.8625, 0.8642, 0.8651,  ..., 0.8656, 0.8642, 0.8688],
         [0.1375, 0.1358, 0.1349,  ..., 0.1344, 0.1358, 0.1312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8608, 0.8620, 0.8679,  ..., 0.8692, 0.8718, 0.8665],
         [0.1392, 0.1380, 0.1321,  ..., 0.1308, 0.1282, 0.1335]],
        [[0.8717, 0.8637, 0.8661,  ..., 0.8654, 0.8740, 0.5000],
         [0.1283, 0.1363, 0.1339,  ..., 0.1346, 0.1260, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8650, 0.8675, 0.5000,  ..., 0.8656, 0.8792, 0.8709],
         [0.1350, 0.1325, 0.5000,  ..., 0.1344, 0.1208, 0.1291]],
        [[0.8733, 0.8687, 0.8719,  ..., 0.8606, 0.8650, 0.8694],
         [0.1267, 0.1313, 0.1281,  ..., 0.1394, 0.1350, 0.1306]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8662, 0.8663, 0.8712,  ..., 0.8667, 0.8710, 0.8659],
         [0.1338, 0.1337, 0.1288,  ..., 0.1333, 0.1290, 0.1341]],
        [[0.8515, 0.8599, 0.8654,  ..., 0.8604, 0.8612, 0.5000],
         [0.1485, 0.1401, 0.1346,  ..., 0.1396, 0.1388, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:33,887 [Process: 0] Synchronize training processes
2024-08-18 14:56:33,887 [Process: 0] Evaluating...
2024-08-18 14:56:33,889 [Process: 0] EPOCH 64:
2024-08-18 14:56:33,891 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:35,051 [Process: 0] Synchronize training processes
2024-08-18 14:56:35,051 [Process: 0] Evaluating...
2024-08-18 14:56:35,053 [Process: 0] EPOCH 65:
2024-08-18 14:56:35,054 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8695, 0.8672, 0.5000,  ..., 0.8666, 0.8714, 0.8743],
         [0.1305, 0.1328, 0.5000,  ..., 0.1334, 0.1286, 0.1257]],
        [[0.8621, 0.8718, 0.8723,  ..., 0.8673, 0.8647, 0.8669],
         [0.1379, 0.1282, 0.1277,  ..., 0.1327, 0.1353, 0.1331]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8675, 0.8758, 0.8684,  ..., 0.8730, 0.8686, 0.8598],
         [0.1325, 0.1242, 0.1316,  ..., 0.1270, 0.1314, 0.1402]],
        [[0.7648, 0.8678, 0.8684,  ..., 0.8778, 0.8672, 0.5000],
         [0.2352, 0.1322, 0.1316,  ..., 0.1222, 0.1328, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8759, 0.8680, 0.5000,  ..., 0.8683, 0.8621, 0.8698],
         [0.1241, 0.1320, 0.5000,  ..., 0.1317, 0.1379, 0.1302]],
        [[0.8717, 0.8704, 0.8761,  ..., 0.8737, 0.8749, 0.8690],
         [0.1283, 0.1296, 0.1239,  ..., 0.1263, 0.1251, 0.1310]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:36,213 [Process: 0] Synchronize training processes
2024-08-18 14:56:36,214 [Process: 0] Evaluating...
2024-08-18 14:56:36,215 [Process: 0] EPOCH 66:
2024-08-18 14:56:36,217 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8775, 0.8707, 0.8689,  ..., 0.8606, 0.8708, 0.8679],
         [0.1225, 0.1293, 0.1311,  ..., 0.1394, 0.1292, 0.1321]],
        [[0.8634, 0.8744, 0.8650,  ..., 0.8732, 0.8622, 0.5000],
         [0.1366, 0.1256, 0.1350,  ..., 0.1268, 0.1378, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8701, 0.8787, 0.8724,  ..., 0.8687, 0.8702, 0.8730],
         [0.1299, 0.1213, 0.1276,  ..., 0.1313, 0.1298, 0.1270]],
        [[0.8760, 0.8660, 0.8878,  ..., 0.8660, 0.8751, 0.8700],
         [0.1240, 0.1340, 0.1122,  ..., 0.1340, 0.1249, 0.1300]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8731, 0.8728, 0.8659,  ..., 0.8696, 0.8790, 0.8740],
         [0.1269, 0.1272, 0.1341,  ..., 0.1304, 0.1210, 0.1260]],
        [[0.8724, 0.8722, 0.8691,  ..., 0.8754, 0.8704, 0.5000],
         [0.1276, 0.1278, 0.1309,  ..., 0.1246, 0.1296, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8766, 0.8704, 0.8713,  ..., 0.8807, 0.8786, 0.8798],
         [0.1234, 0.1296, 0.1287,  ..., 0.1193, 0.1214, 0.1202]],
        [[0.8763, 0.8669, 0.8700,  ..., 0.8653, 0.8705, 0.8746],
         [0.1237, 0.1331, 0.1300,  ..., 0.1347, 0.1295, 0.1254]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:37,371 [Process: 0] Synchronize training processes
2024-08-18 14:56:37,371 [Process: 0] Evaluating...
2024-08-18 14:56:37,373 [Process: 0] EPOCH 67:
2024-08-18 14:56:37,375 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:38,530 [Process: 0] Synchronize training processes
2024-08-18 14:56:38,530 [Process: 0] Evaluating...
2024-08-18 14:56:38,532 [Process: 0] EPOCH 68:
2024-08-18 14:56:38,533 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8741, 0.8771, 0.8717,  ..., 0.8695, 0.8657, 0.8687],
         [0.1259, 0.1229, 0.1283,  ..., 0.1305, 0.1343, 0.1313]],
        [[0.8756, 0.8730, 0.8651,  ..., 0.8680, 0.8735, 0.5000],
         [0.1244, 0.1270, 0.1349,  ..., 0.1320, 0.1265, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8830, 0.8754, 0.8670,  ..., 0.8781, 0.8798, 0.8712],
         [0.1170, 0.1246, 0.1330,  ..., 0.1219, 0.1202, 0.1288]],
        [[0.8755, 0.8717, 0.8837,  ..., 0.8813, 0.8782, 0.8681],
         [0.1245, 0.1283, 0.1163,  ..., 0.1187, 0.1218, 0.1319]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8690, 0.8749, 0.8737,  ..., 0.8766, 0.8753, 0.8663],
         [0.1310, 0.1251, 0.1263,  ..., 0.1234, 0.1247, 0.1337]],
        [[0.8865, 0.8760, 0.8758,  ..., 0.8815, 0.8691, 0.5000],
         [0.1135, 0.1240, 0.1242,  ..., 0.1185, 0.1309, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:39,725 [Process: 0] Synchronize training processes
2024-08-18 14:56:39,725 [Process: 0] Evaluating...
2024-08-18 14:56:39,727 [Process: 0] EPOCH 69:
2024-08-18 14:56:39,729 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:40,885 [Process: 0] Synchronize training processes
2024-08-18 14:56:40,885 [Process: 0] Evaluating...
2024-08-18 14:56:40,887 [Process: 0] EPOCH 70:
2024-08-18 14:56:40,889 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8709, 0.8876, 0.8845,  ..., 0.8799, 0.8819, 0.8763],
         [0.1291, 0.1124, 0.1155,  ..., 0.1201, 0.1181, 0.1237]],
        [[0.8772, 0.8698, 0.8807,  ..., 0.8754, 0.8830, 0.8697],
         [0.1228, 0.1302, 0.1193,  ..., 0.1246, 0.1170, 0.1303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8812, 0.8715, 0.8642,  ..., 0.8716, 0.8750, 0.8807],
         [0.1188, 0.1285, 0.1358,  ..., 0.1284, 0.1250, 0.1193]],
        [[0.8760, 0.8773, 0.8781,  ..., 0.8779, 0.8837, 0.5000],
         [0.1240, 0.1227, 0.1219,  ..., 0.1221, 0.1163, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8800, 0.8952, 0.8927,  ..., 0.8819, 0.8857, 0.8809],
         [0.1200, 0.1048, 0.1073,  ..., 0.1181, 0.1143, 0.1191]],
        [[0.8906, 0.8800, 0.8790,  ..., 0.8698, 0.8783, 0.8799],
         [0.1094, 0.1200, 0.1210,  ..., 0.1302, 0.1217, 0.1201]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8768, 0.8731, 0.8799,  ..., 0.8816, 0.8763, 0.8847],
         [0.1232, 0.1269, 0.1201,  ..., 0.1184, 0.1237, 0.1153]],
        [[0.8898, 0.8766, 0.8761,  ..., 0.8825, 0.8848, 0.5000],
         [0.1102, 0.1234, 0.1239,  ..., 0.1175, 0.1152, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:42,050 [Process: 0] Synchronize training processes
2024-08-18 14:56:42,050 [Process: 0] Evaluating...
2024-08-18 14:56:42,052 [Process: 0] EPOCH 71:
2024-08-18 14:56:42,054 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8830, 0.8895, 0.8753,  ..., 0.8846, 0.8893, 0.8769],
         [0.1170, 0.1105, 0.1247,  ..., 0.1154, 0.1107, 0.1231]],
        [[0.8792, 0.8833, 0.8838,  ..., 0.8808, 0.8830, 0.8868],
         [0.1208, 0.1167, 0.1162,  ..., 0.1192, 0.1170, 0.1132]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8836, 0.8929, 0.8848,  ..., 0.8785, 0.8774, 0.8747],
         [0.1164, 0.1071, 0.1152,  ..., 0.1215, 0.1226, 0.1253]],
        [[0.8915, 0.8899, 0.8871,  ..., 0.8811, 0.8775, 0.5000],
         [0.1085, 0.1101, 0.1129,  ..., 0.1189, 0.1225, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:43,749 [Process: 0] Synchronize training processes
2024-08-18 14:56:43,749 [Process: 0] Evaluating...
2024-08-18 14:56:43,753 [Process: 0] EPOCH 72:
2024-08-18 14:56:43,755 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:44,873 [Process: 0] Synchronize training processes
2024-08-18 14:56:44,873 [Process: 0] Evaluating...
2024-08-18 14:56:44,875 [Process: 0] EPOCH 73:
2024-08-18 14:56:44,877 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8847, 0.8956, 0.8971,  ..., 0.8862, 0.8895, 0.8797],
         [0.1153, 0.1044, 0.1029,  ..., 0.1138, 0.1105, 0.1203]],
        [[0.8914, 0.8759, 0.8850,  ..., 0.8811, 0.8869, 0.8824],
         [0.1086, 0.1241, 0.1150,  ..., 0.1189, 0.1131, 0.1176]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8869, 0.8781, 0.8788,  ..., 0.8802, 0.8836, 0.8818],
         [0.1131, 0.1219, 0.1212,  ..., 0.1198, 0.1164, 0.1182]],
        [[0.9007, 0.8807, 0.8835,  ..., 0.8778, 0.8836, 0.5000],
         [0.0993, 0.1193, 0.1165,  ..., 0.1222, 0.1164, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8819, 0.8899, 0.8974,  ..., 0.8881, 0.8877, 0.8859],
         [0.1181, 0.1101, 0.1026,  ..., 0.1119, 0.1123, 0.1141]],
        [[0.8863, 0.8728, 0.8862,  ..., 0.8807, 0.8869, 0.8885],
         [0.1137, 0.1272, 0.1138,  ..., 0.1193, 0.1131, 0.1115]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8855, 0.8917, 0.8901,  ..., 0.8877, 0.8824, 0.8864],
         [0.1145, 0.1083, 0.1099,  ..., 0.1123, 0.1176, 0.1136]],
        [[0.9044, 0.8851, 0.8741,  ..., 0.8872, 0.8772, 0.5000],
         [0.0956, 0.1149, 0.1259,  ..., 0.1128, 0.1228, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:46,034 [Process: 0] Synchronize training processes
2024-08-18 14:56:46,034 [Process: 0] Evaluating...
2024-08-18 14:56:46,036 [Process: 0] EPOCH 74:
2024-08-18 14:56:46,038 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8894, 0.8872, 0.9065,  ..., 0.8866, 0.8895, 0.8891],
         [0.1106, 0.1128, 0.0935,  ..., 0.1134, 0.1105, 0.1109]],
        [[0.8904, 0.8812, 0.8872,  ..., 0.8844, 0.8850, 0.8821],
         [0.1096, 0.1188, 0.1128,  ..., 0.1156, 0.1150, 0.1179]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8906, 0.8914, 0.8862,  ..., 0.8900, 0.8885, 0.8883],
         [0.1094, 0.1086, 0.1138,  ..., 0.1100, 0.1115, 0.1117]],
        [[0.8905, 0.8839, 0.8921,  ..., 0.8798, 0.8792, 0.5000],
         [0.1095, 0.1161, 0.1079,  ..., 0.1202, 0.1208, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8870, 0.8867, 0.9011,  ..., 0.8953, 0.8927, 0.8952],
         [0.1130, 0.1133, 0.0989,  ..., 0.1047, 0.1073, 0.1048]],
        [[0.8896, 0.8870, 0.8917,  ..., 0.8850, 0.8879, 0.8792],
         [0.1104, 0.1130, 0.1083,  ..., 0.1150, 0.1121, 0.1208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:47,195 [Process: 0] Synchronize training processes
2024-08-18 14:56:47,195 [Process: 0] Evaluating...
2024-08-18 14:56:47,197 [Process: 0] EPOCH 75:
2024-08-18 14:56:47,199 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:48,357 [Process: 0] Synchronize training processes
2024-08-18 14:56:48,357 [Process: 0] Evaluating...
2024-08-18 14:56:48,359 [Process: 0] EPOCH 76:
2024-08-18 14:56:48,361 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8882, 0.8990, 0.8919,  ..., 0.8952, 0.8843, 0.8918],
         [0.1118, 0.1010, 0.1081,  ..., 0.1048, 0.1157, 0.1082]],
        [[0.8933, 0.8856, 0.8961,  ..., 0.8888, 0.8844, 0.5000],
         [0.1067, 0.1144, 0.1039,  ..., 0.1112, 0.1156, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9012, 0.8902, 0.8889,  ..., 0.8873, 0.8982, 0.8979],
         [0.0988, 0.1098, 0.1111,  ..., 0.1127, 0.1018, 0.1021]],
        [[0.8867, 0.8929, 0.8929,  ..., 0.8876, 0.8959, 0.8816],
         [0.1133, 0.1071, 0.1071,  ..., 0.1124, 0.1041, 0.1184]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8891, 0.8978, 0.8945,  ..., 0.8973, 0.8884, 0.8898],
         [0.1109, 0.1022, 0.1055,  ..., 0.1027, 0.1116, 0.1102]],
        [[0.8919, 0.8891, 0.8901,  ..., 0.8874, 0.8869, 0.5000],
         [0.1081, 0.1109, 0.1099,  ..., 0.1126, 0.1131, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 14:56:49,640 [Process: 0] Synchronize training processes
2024-08-18 14:56:49,640 [Process: 0] Evaluating...
2024-08-18 14:56:49,642 [Process: 0] EPOCH 77:
2024-08-18 14:56:49,643 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:50,807 [Process: 0] Synchronize training processes
2024-08-18 14:56:50,807 [Process: 0] Evaluating...
2024-08-18 14:56:50,809 [Process: 0] EPOCH 78:
2024-08-18 14:56:50,811 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8967, 0.9006, 0.8930,  ..., 0.8974, 0.9014, 0.8923],
         [0.1033, 0.0994, 0.1070,  ..., 0.1026, 0.0986, 0.1077]],
        [[0.8968, 0.8899, 0.8999,  ..., 0.8920, 0.8899, 0.8939],
         [0.1032, 0.1101, 0.1001,  ..., 0.1080, 0.1101, 0.1061]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8994, 0.8943, 0.8889,  ..., 0.8916, 0.8971, 0.8972],
         [0.1006, 0.1057, 0.1111,  ..., 0.1084, 0.1029, 0.1028]],
        [[0.8980, 0.8880, 0.8962,  ..., 0.8898, 0.8871, 0.5000],
         [0.1020, 0.1120, 0.1038,  ..., 0.1102, 0.1129, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9029, 0.8913, 0.8967,  ..., 0.8972, 0.9023, 0.8898],
         [0.0971, 0.1087, 0.1033,  ..., 0.1028, 0.0977, 0.1102]],
        [[0.8940, 0.8912, 0.8990,  ..., 0.8969, 0.8952, 0.8936],
         [0.1060, 0.1088, 0.1010,  ..., 0.1031, 0.1048, 0.1064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8978, 0.8986, 0.8973,  ..., 0.8899, 0.8987, 0.8963],
         [0.1022, 0.1014, 0.1027,  ..., 0.1101, 0.1013, 0.1037]],
        [[0.9023, 0.8936, 0.8929,  ..., 0.8930, 0.8905, 0.5000],
         [0.0977, 0.1064, 0.1071,  ..., 0.1070, 0.1095, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:51,968 [Process: 0] Synchronize training processes
2024-08-18 14:56:51,969 [Process: 0] Evaluating...
2024-08-18 14:56:51,970 [Process: 0] EPOCH 79:
2024-08-18 14:56:51,972 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:53,133 [Process: 0] Synchronize training processes
2024-08-18 14:56:53,133 [Process: 0] Evaluating...
2024-08-18 14:56:53,135 [Process: 0] EPOCH 80:
2024-08-18 14:56:53,136 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9032, 0.8933, 0.8948,  ..., 0.8983, 0.9078, 0.9025],
         [0.0968, 0.1067, 0.1052,  ..., 0.1017, 0.0922, 0.0975]],
        [[0.8980, 0.8968, 0.8917,  ..., 0.9002, 0.8960, 0.8917],
         [0.1020, 0.1032, 0.1083,  ..., 0.0998, 0.1040, 0.1083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.8984, 0.9011, 0.8984,  ..., 0.8914, 0.9040, 0.8996],
         [0.1016, 0.0989, 0.1016,  ..., 0.1086, 0.0960, 0.1004]],
        [[0.8931, 0.8949, 0.8957,  ..., 0.8935, 0.8947, 0.5000],
         [0.1069, 0.1051, 0.1043,  ..., 0.1065, 0.1053, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9056, 0.9029, 0.9004,  ..., 0.9022, 0.9009, 0.8982],
         [0.0944, 0.0972, 0.0996,  ..., 0.0978, 0.0991, 0.1018]],
        [[0.9005, 0.8954, 0.8944,  ..., 0.8978, 0.8971, 0.8936],
         [0.0995, 0.1046, 0.1056,  ..., 0.1022, 0.1029, 0.1064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:54,300 [Process: 0] Synchronize training processes
2024-08-18 14:56:54,300 [Process: 0] Evaluating...
2024-08-18 14:56:54,302 [Process: 0] EPOCH 81:
2024-08-18 14:56:54,304 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9034, 0.8984, 0.9030,  ..., 0.9027, 0.8986, 0.8997],
         [0.0966, 0.1016, 0.0970,  ..., 0.0973, 0.1014, 0.1003]],
        [[0.9008, 0.8967, 0.8996,  ..., 0.8912, 0.9012, 0.5000],
         [0.0992, 0.1033, 0.1004,  ..., 0.1088, 0.0988, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9018, 0.9041, 0.9120,  ..., 0.9068, 0.8979, 0.8990],
         [0.0982, 0.0959, 0.0880,  ..., 0.0932, 0.1021, 0.1010]],
        [[0.8990, 0.8977, 0.8980,  ..., 0.8984, 0.8965, 0.8989],
         [0.1010, 0.1023, 0.1020,  ..., 0.1016, 0.1035, 0.1011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9064, 0.9055, 0.9036,  ..., 0.9012, 0.9064, 0.9012],
         [0.0936, 0.0945, 0.0964,  ..., 0.0988, 0.0936, 0.0988]],
        [[0.8985, 0.8997, 0.8992,  ..., 0.8965, 0.8954, 0.5000],
         [0.1015, 0.1003, 0.1008,  ..., 0.1035, 0.1046, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9073, 0.9021, 0.9018,  ..., 0.9007, 0.9091, 0.9062],
         [0.0927, 0.0979, 0.0982,  ..., 0.0993, 0.0909, 0.0938]],
        [[0.9003, 0.8998, 0.8975,  ..., 0.9011, 0.8985, 0.9009],
         [0.0997, 0.1002, 0.1025,  ..., 0.0989, 0.1015, 0.0991]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:55,459 [Process: 0] Synchronize training processes
2024-08-18 14:56:55,459 [Process: 0] Evaluating...
2024-08-18 14:56:55,468 [Process: 0] EPOCH 82:
2024-08-18 14:56:55,470 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:56,629 [Process: 0] Synchronize training processes
2024-08-18 14:56:56,629 [Process: 0] Evaluating...
2024-08-18 14:56:56,631 [Process: 0] EPOCH 83:
2024-08-18 14:56:56,633 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9127, 0.9008, 0.9061,  ..., 0.9044, 0.9039, 0.9037],
         [0.0873, 0.0992, 0.0939,  ..., 0.0956, 0.0961, 0.0963]],
        [[0.9072, 0.8988, 0.9001,  ..., 0.8983, 0.9014, 0.5000],
         [0.0928, 0.1012, 0.0999,  ..., 0.1017, 0.0986, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9029, 0.9079, 0.9138,  ..., 0.9031, 0.9097, 0.9063],
         [0.0971, 0.0921, 0.0862,  ..., 0.0969, 0.0903, 0.0937]],
        [[0.9065, 0.8997, 0.9044,  ..., 0.8998, 0.9047, 0.8976],
         [0.0935, 0.1003, 0.0956,  ..., 0.1002, 0.0953, 0.1024]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9084, 0.9100, 0.9067,  ..., 0.9102, 0.9064, 0.8989],
         [0.0916, 0.0900, 0.0933,  ..., 0.0898, 0.0936, 0.1011]],
        [[0.9003, 0.9056, 0.9039,  ..., 0.8996, 0.8935, 0.5000],
         [0.0997, 0.0944, 0.0961,  ..., 0.1004, 0.1065, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:56:57,788 [Process: 0] Synchronize training processes
2024-08-18 14:56:57,788 [Process: 0] Evaluating...
2024-08-18 14:56:57,790 [Process: 0] EPOCH 84:
2024-08-18 14:56:57,792 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:56:58,951 [Process: 0] Synchronize training processes
2024-08-18 14:56:58,951 [Process: 0] Evaluating...
2024-08-18 14:56:58,953 [Process: 0] EPOCH 85:
2024-08-18 14:56:58,955 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9044, 0.9078, 0.9140,  ..., 0.9061, 0.9081, 0.9059],
         [0.0956, 0.0922, 0.0860,  ..., 0.0939, 0.0919, 0.0941]],
        [[0.9125, 0.9043, 0.8998,  ..., 0.9049, 0.9027, 0.8982],
         [0.0875, 0.0957, 0.1002,  ..., 0.0951, 0.0973, 0.1018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9049, 0.9132, 0.9152,  ..., 0.9084, 0.9111, 0.9065],
         [0.0951, 0.0868, 0.0848,  ..., 0.0916, 0.0889, 0.0935]],
        [[0.9121, 0.9100, 0.9027,  ..., 0.8996, 0.9006, 0.5000],
         [0.0879, 0.0900, 0.0973,  ..., 0.1004, 0.0994, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9075, 0.9060, 0.9175,  ..., 0.9096, 0.9043, 0.9080],
         [0.0925, 0.0940, 0.0825,  ..., 0.0904, 0.0957, 0.0920]],
        [[0.9065, 0.9051, 0.9056,  ..., 0.9022, 0.9047, 0.9021],
         [0.0935, 0.0949, 0.0944,  ..., 0.0978, 0.0953, 0.0979]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9159, 0.9151, 0.9086,  ..., 0.9074, 0.9063, 0.9100],
         [0.0841, 0.0849, 0.0914,  ..., 0.0926, 0.0937, 0.0900]],
        [[0.9178, 0.9045, 0.9063,  ..., 0.9052, 0.8982, 0.5000],
         [0.0822, 0.0955, 0.0937,  ..., 0.0948, 0.1018, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:00,120 [Process: 0] Synchronize training processes
2024-08-18 14:57:00,120 [Process: 0] Evaluating...
2024-08-18 14:57:00,122 [Process: 0] EPOCH 86:
2024-08-18 14:57:00,124 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9126, 0.9136, 0.9145,  ..., 0.9076, 0.9151, 0.9150],
         [0.0874, 0.0864, 0.0855,  ..., 0.0924, 0.0849, 0.0850]],
        [[0.9138, 0.9036, 0.9054,  ..., 0.9067, 0.9060, 0.9010],
         [0.0862, 0.0964, 0.0946,  ..., 0.0933, 0.0940, 0.0990]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9133, 0.9131, 0.9135,  ..., 0.9125, 0.9098, 0.9082],
         [0.0867, 0.0869, 0.0865,  ..., 0.0875, 0.0902, 0.0918]],
        [[0.9087, 0.9065, 0.9093,  ..., 0.9013, 0.8924, 0.5000],
         [0.0913, 0.0935, 0.0907,  ..., 0.0987, 0.1076, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9102, 0.9118, 0.9201,  ..., 0.9105, 0.9089, 0.9141],
         [0.0898, 0.0882, 0.0799,  ..., 0.0895, 0.0911, 0.0859]],
        [[0.9124, 0.9064, 0.9070,  ..., 0.9092, 0.9063, 0.9069],
         [0.0876, 0.0936, 0.0930,  ..., 0.0908, 0.0937, 0.0931]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:01,280 [Process: 0] Synchronize training processes
2024-08-18 14:57:01,281 [Process: 0] Evaluating...
2024-08-18 14:57:01,282 [Process: 0] EPOCH 87:
2024-08-18 14:57:01,284 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:02,446 [Process: 0] Synchronize training processes
2024-08-18 14:57:02,446 [Process: 0] Evaluating...
2024-08-18 14:57:02,448 [Process: 0] EPOCH 88:
2024-08-18 14:57:02,449 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9181, 0.9192, 0.9123,  ..., 0.9142, 0.9132, 0.9101],
         [0.0819, 0.0808, 0.0877,  ..., 0.0858, 0.0868, 0.0899]],
        [[0.9179, 0.9078, 0.9133,  ..., 0.9062, 0.8977, 0.5000],
         [0.0821, 0.0922, 0.0867,  ..., 0.0938, 0.1023, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9156, 0.9113, 0.9223,  ..., 0.9166, 0.9086, 0.9163],
         [0.0844, 0.0887, 0.0777,  ..., 0.0834, 0.0914, 0.0837]],
        [[0.9144, 0.9093, 0.9086,  ..., 0.9105, 0.9065, 0.9119],
         [0.0856, 0.0907, 0.0914,  ..., 0.0895, 0.0935, 0.0881]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9147, 0.9189, 0.9130,  ..., 0.9081, 0.9182, 0.9051],
         [0.0853, 0.0811, 0.0870,  ..., 0.0919, 0.0818, 0.0949]],
        [[0.9258, 0.9084, 0.9097,  ..., 0.9024, 0.8974, 0.5000],
         [0.0742, 0.0916, 0.0903,  ..., 0.0976, 0.1026, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9150, 0.9109, 0.9213,  ..., 0.9170, 0.9056, 0.9152],
         [0.0850, 0.0891, 0.0787,  ..., 0.0830, 0.0944, 0.0848]],
        [[0.9130, 0.9052, 0.9027,  ..., 0.9168, 0.9151, 0.9072],
         [0.0870, 0.0948, 0.0973,  ..., 0.0832, 0.0849, 0.0928]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:03,607 [Process: 0] Synchronize training processes
2024-08-18 14:57:03,608 [Process: 0] Evaluating...
2024-08-18 14:57:03,609 [Process: 0] EPOCH 89:
2024-08-18 14:57:03,611 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:04,768 [Process: 0] Synchronize training processes
2024-08-18 14:57:04,768 [Process: 0] Evaluating...
2024-08-18 14:57:04,770 [Process: 0] EPOCH 90:
2024-08-18 14:57:04,772 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9182, 0.9248, 0.9160,  ..., 0.9124, 0.9218, 0.9139],
         [0.0818, 0.0752, 0.0840,  ..., 0.0876, 0.0782, 0.0861]],
        [[0.9215, 0.9097, 0.9056,  ..., 0.9094, 0.8946, 0.5000],
         [0.0785, 0.0903, 0.0944,  ..., 0.0906, 0.1054, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9091, 0.9194, 0.9203,  ..., 0.9119, 0.9126, 0.9139],
         [0.0909, 0.0806, 0.0797,  ..., 0.0881, 0.0874, 0.0861]],
        [[0.9176, 0.9093, 0.9104,  ..., 0.9094, 0.9126, 0.9096],
         [0.0824, 0.0907, 0.0896,  ..., 0.0906, 0.0874, 0.0904]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9151, 0.9158, 0.9157,  ..., 0.9113, 0.9192, 0.9130],
         [0.0849, 0.0842, 0.0843,  ..., 0.0887, 0.0808, 0.0870]],
        [[0.9247, 0.9144, 0.9115,  ..., 0.9061, 0.8917, 0.5000],
         [0.0753, 0.0856, 0.0885,  ..., 0.0939, 0.1083, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:05,927 [Process: 0] Synchronize training processes
2024-08-18 14:57:05,927 [Process: 0] Evaluating...
2024-08-18 14:57:05,929 [Process: 0] EPOCH 91:
2024-08-18 14:57:05,931 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:07,091 [Process: 0] Synchronize training processes
2024-08-18 14:57:07,092 [Process: 0] Evaluating...
2024-08-18 14:57:07,095 [Process: 0] EPOCH 92:
2024-08-18 14:57:07,097 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9112, 0.9135, 0.9221,  ..., 0.9199, 0.9202, 0.9201],
         [0.0888, 0.0865, 0.0779,  ..., 0.0801, 0.0798, 0.0799]],
        [[0.9051, 0.9073, 0.9137,  ..., 0.9101, 0.9112, 0.9119],
         [0.0949, 0.0927, 0.0863,  ..., 0.0899, 0.0888, 0.0881]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9248, 0.9206, 0.9197,  ..., 0.9279, 0.9227, 0.9167],
         [0.0752, 0.0794, 0.0803,  ..., 0.0721, 0.0773, 0.0833]],
        [[0.9118, 0.9117, 0.9132,  ..., 0.9140, 0.8908, 0.4546],
         [0.0882, 0.0883, 0.0868,  ..., 0.0860, 0.1092, 0.5454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9171, 0.9171, 0.9195,  ..., 0.9153, 0.9122, 0.9206],
         [0.0829, 0.0829, 0.0805,  ..., 0.0847, 0.0878, 0.0794]],
        [[0.9142, 0.9115, 0.9143,  ..., 0.9158, 0.9189, 0.9110],
         [0.0858, 0.0885, 0.0857,  ..., 0.0842, 0.0811, 0.0890]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9223, 0.9279, 0.9212,  ..., 0.9221, 0.9284, 0.9156],
         [0.0777, 0.0721, 0.0788,  ..., 0.0779, 0.0716, 0.0844]],
        [[0.9235, 0.9221, 0.9192,  ..., 0.9102, 0.8431, 0.5000],
         [0.0765, 0.0779, 0.0808,  ..., 0.0898, 0.1569, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:08,262 [Process: 0] Synchronize training processes
2024-08-18 14:57:08,263 [Process: 0] Evaluating...
2024-08-18 14:57:08,264 [Process: 0] EPOCH 93:
2024-08-18 14:57:08,266 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9231, 0.9196, 0.9252,  ..., 0.9215, 0.9239, 0.9188],
         [0.0769, 0.0804, 0.0748,  ..., 0.0785, 0.0761, 0.0812]],
        [[0.9187, 0.9104, 0.9169,  ..., 0.9232, 0.9184, 0.9103],
         [0.0813, 0.0896, 0.0831,  ..., 0.0768, 0.0816, 0.0897]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9321, 0.9257, 0.9208,  ..., 0.9234, 0.9210, 0.9230],
         [0.0679, 0.0743, 0.0792,  ..., 0.0766, 0.0790, 0.0770]],
        [[0.9222, 0.9170, 0.9203,  ..., 0.9125, 0.8010, 0.5000],
         [0.0778, 0.0830, 0.0797,  ..., 0.0875, 0.1990, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9206, 0.9249, 0.9282,  ..., 0.9166, 0.9177, 0.9183],
         [0.0794, 0.0751, 0.0718,  ..., 0.0834, 0.0823, 0.0817]],
        [[0.9174, 0.9137, 0.9135,  ..., 0.9148, 0.9158, 0.9075],
         [0.0826, 0.0863, 0.0865,  ..., 0.0852, 0.0842, 0.0925]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:09,420 [Process: 0] Synchronize training processes
2024-08-18 14:57:09,421 [Process: 0] Evaluating...
2024-08-18 14:57:09,423 [Process: 0] EPOCH 94:
2024-08-18 14:57:09,424 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:10,583 [Process: 0] Synchronize training processes
2024-08-18 14:57:10,584 [Process: 0] Evaluating...
2024-08-18 14:57:10,586 [Process: 0] EPOCH 95:
2024-08-18 14:57:10,587 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9220, 0.9247, 0.9238,  ..., 0.9239, 0.9251, 0.9216],
         [0.0780, 0.0753, 0.0762,  ..., 0.0761, 0.0749, 0.0784]],
        [[0.9210, 0.9242, 0.9156,  ..., 0.9141, 0.8633, 0.5000],
         [0.0790, 0.0758, 0.0844,  ..., 0.0859, 0.1367, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9235, 0.9206, 0.9275,  ..., 0.9239, 0.9168, 0.9196],
         [0.0765, 0.0794, 0.0725,  ..., 0.0761, 0.0832, 0.0804]],
        [[0.9200, 0.9109, 0.9212,  ..., 0.9187, 0.9223, 0.9174],
         [0.0800, 0.0891, 0.0788,  ..., 0.0813, 0.0777, 0.0826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9274, 0.9249, 0.9169,  ..., 0.9207, 0.9236, 0.9238],
         [0.0726, 0.0751, 0.0831,  ..., 0.0793, 0.0764, 0.0762]],
        [[0.9291, 0.9238, 0.9222,  ..., 0.9135, 0.8644, 0.5000],
         [0.0709, 0.0762, 0.0778,  ..., 0.0865, 0.1356, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9265, 0.9204, 0.9249,  ..., 0.9249, 0.9223, 0.9242],
         [0.0735, 0.0796, 0.0751,  ..., 0.0751, 0.0777, 0.0758]],
        [[0.9231, 0.9157, 0.9193,  ..., 0.9194, 0.9187, 0.9105],
         [0.0769, 0.0843, 0.0807,  ..., 0.0806, 0.0813, 0.0895]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:11,742 [Process: 0] Synchronize training processes
2024-08-18 14:57:11,742 [Process: 0] Evaluating...
2024-08-18 14:57:11,744 [Process: 0] EPOCH 96:
2024-08-18 14:57:11,746 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:12,902 [Process: 0] Synchronize training processes
2024-08-18 14:57:12,903 [Process: 0] Evaluating...
2024-08-18 14:57:12,905 [Process: 0] EPOCH 97:
2024-08-18 14:57:12,907 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9283, 0.9256, 0.9200,  ..., 0.9211, 0.9298, 0.9214],
         [0.0717, 0.0744, 0.0800,  ..., 0.0789, 0.0702, 0.0786]],
        [[0.9274, 0.9233, 0.9282,  ..., 0.9164, 0.8289, 0.5000],
         [0.0726, 0.0767, 0.0718,  ..., 0.0836, 0.1711, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9243, 0.9230, 0.9233,  ..., 0.9209, 0.9261, 0.9183],
         [0.0757, 0.0770, 0.0767,  ..., 0.0791, 0.0739, 0.0817]],
        [[0.9210, 0.9094, 0.9240,  ..., 0.9209, 0.9221, 0.9163],
         [0.0790, 0.0906, 0.0760,  ..., 0.0791, 0.0779, 0.0837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9287, 0.9319, 0.9252,  ..., 0.9279, 0.9333, 0.9271],
         [0.0713, 0.0681, 0.0748,  ..., 0.0721, 0.0667, 0.0729]],
        [[0.9282, 0.9291, 0.9303,  ..., 0.9204, 0.7813, 0.5000],
         [0.0718, 0.0709, 0.0697,  ..., 0.0796, 0.2187, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:14,061 [Process: 0] Synchronize training processes
2024-08-18 14:57:14,061 [Process: 0] Evaluating...
2024-08-18 14:57:14,063 [Process: 0] EPOCH 98:
2024-08-18 14:57:14,065 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:15,218 [Process: 0] Synchronize training processes
2024-08-18 14:57:15,219 [Process: 0] Evaluating...
2024-08-18 14:57:15,220 [Process: 0] EPOCH 99:
2024-08-18 14:57:15,222 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9235, 0.9201, 0.9224,  ..., 0.9244, 0.9258, 0.9208],
         [0.0765, 0.0799, 0.0776,  ..., 0.0756, 0.0742, 0.0792]],
        [[0.9233, 0.9165, 0.9227,  ..., 0.9224, 0.9178, 0.9138],
         [0.0767, 0.0835, 0.0773,  ..., 0.0776, 0.0822, 0.0862]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9331, 0.9317, 0.9233,  ..., 0.9261, 0.9340, 0.9241],
         [0.0669, 0.0683, 0.0767,  ..., 0.0739, 0.0660, 0.0759]],
        [[0.9255, 0.9306, 0.9303,  ..., 0.9196, 0.7274, 0.5000],
         [0.0745, 0.0694, 0.0697,  ..., 0.0804, 0.2726, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9354, 0.9200, 0.9211,  ..., 0.9236, 0.9240, 0.9218],
         [0.0646, 0.0800, 0.0789,  ..., 0.0764, 0.0760, 0.0782]],
        [[0.9223, 0.9169, 0.9232,  ..., 0.9255, 0.9222, 0.9187],
         [0.0777, 0.0831, 0.0768,  ..., 0.0745, 0.0778, 0.0813]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 14:57:16,379 [Process: 0] Synchronize training processes
2024-08-18 14:57:16,379 [Process: 0] Evaluating...
2024-08-18 14:57:16,381 [Process: 0] EPOCH 100:
2024-08-18 14:57:16,382 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9326, 0.9289, 0.9299,  ..., 0.9263, 0.9304, 0.9296],
         [0.0674, 0.0711, 0.0701,  ..., 0.0737, 0.0696, 0.0704]],
        [[0.9271, 0.9237, 0.9242,  ..., 0.9237, 0.8127, 0.5000],
         [0.0729, 0.0763, 0.0758,  ..., 0.0763, 0.1873, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9288, 0.9245, 0.9284,  ..., 0.9265, 0.9283, 0.9233],
         [0.0712, 0.0755, 0.0716,  ..., 0.0735, 0.0717, 0.0767]],
        [[0.9200, 0.9161, 0.9211,  ..., 0.9268, 0.9219, 0.9188],
         [0.0800, 0.0839, 0.0789,  ..., 0.0732, 0.0781, 0.0812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9327, 0.9267, 0.9280,  ..., 0.9264, 0.9299, 0.9274],
         [0.0673, 0.0733, 0.0720,  ..., 0.0736, 0.0701, 0.0726]],
        [[0.9281, 0.9196, 0.9247,  ..., 0.9237, 0.8509, 0.5000],
         [0.0719, 0.0804, 0.0753,  ..., 0.0763, 0.1491, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9332, 0.9232, 0.9256,  ..., 0.9222, 0.9247, 0.9251],
         [0.0668, 0.0768, 0.0744,  ..., 0.0778, 0.0753, 0.0749]],
        [[0.9252, 0.9164, 0.9207,  ..., 0.9279, 0.9290, 0.9185],
         [0.0748, 0.0836, 0.0793,  ..., 0.0721, 0.0710, 0.0815]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:17,540 [Process: 0] Synchronize training processes
2024-08-18 14:57:17,540 [Process: 0] Evaluating...
2024-08-18 14:57:17,542 [Process: 0] EPOCH 101:
2024-08-18 14:57:17,544 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:18,698 [Process: 0] Synchronize training processes
2024-08-18 14:57:18,698 [Process: 0] Evaluating...
2024-08-18 14:57:18,703 [Process: 0] EPOCH 102:
2024-08-18 14:57:18,704 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9348, 0.9314, 0.9260,  ..., 0.9252, 0.9358, 0.9232],
         [0.0652, 0.0686, 0.0740,  ..., 0.0748, 0.0642, 0.0768]],
        [[0.9379, 0.9199, 0.9249,  ..., 0.9249, 0.7645, 0.5000],
         [0.0621, 0.0801, 0.0751,  ..., 0.0751, 0.2355, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9349, 0.9262, 0.9279,  ..., 0.9271, 0.9334, 0.9216],
         [0.0651, 0.0738, 0.0721,  ..., 0.0729, 0.0666, 0.0784]],
        [[0.9300, 0.9183, 0.9258,  ..., 0.9263, 0.9236, 0.9182],
         [0.0700, 0.0817, 0.0742,  ..., 0.0737, 0.0764, 0.0818]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9377, 0.9344, 0.9350,  ..., 0.9329, 0.9386, 0.9350],
         [0.0623, 0.0656, 0.0650,  ..., 0.0671, 0.0614, 0.0650]],
        [[0.9346, 0.9249, 0.9192,  ..., 0.9220, 0.6150, 0.5000],
         [0.0654, 0.0751, 0.0808,  ..., 0.0780, 0.3850, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape:
2024-08-18 14:57:19,856 [Process: 0] Synchronize training processes
2024-08-18 14:57:19,857 [Process: 0] Evaluating...
2024-08-18 14:57:19,859 [Process: 0] EPOCH 103:
2024-08-18 14:57:19,860 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:21,025 [Process: 0] Synchronize training processes
2024-08-18 14:57:21,025 [Process: 0] Evaluating...
2024-08-18 14:57:21,027 [Process: 0] EPOCH 104:
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9308, 0.9242, 0.9256,  ..., 0.9297, 0.9312, 0.9207],
         [0.0692, 0.0758, 0.0744,  ..., 0.0703, 0.0688, 0.0793]],
        [[0.9212, 0.9192, 0.9333,  ..., 0.9268, 0.9276, 0.9173],
         [0.0788, 0.0808, 0.0667,  ..., 0.0732, 0.0724, 0.0827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9313, 0.9353, 0.9283,  ..., 0.9331, 0.9346, 0.9286],
         [0.0687, 0.0647, 0.0717,  ..., 0.0669, 0.0654, 0.0714]],
        [[0.9334, 0.9338, 0.9264,  ..., 0.9316, 0.5970, 0.5000],
         [0.0666, 0.0662, 0.0736,  ..., 0.0684, 0.4030, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9347, 0.9278, 0.9222,  ..., 0.9306, 0.9299, 0.9256],
         [0.0653, 0.0722, 0.0778,  ..., 0.0694, 0.0701, 0.0744]],
        [[0.9315, 0.9182, 0.9262,  ..., 0.9289, 0.9253, 0.9222],
         [0.0685, 0.0818, 0.0738,  ..., 0.0711, 0.0747, 0.0778]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9383, 0.9337, 0.9330,  ..., 0.9269, 0.9343, 0.9296],
         [0.0617, 0.0663, 0.0670,  ..., 0.0731, 0.0657, 0.0704]],
        [[0.9298, 0.9352, 0.9320,  ..., 0.9325, 0.6482, 0.5000],
         [0.0702, 0.0648, 0.0680,  ..., 0.0675, 0.3518, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:22,185 [Process: 0] Synchronize training processes
2024-08-18 14:57:22,185 [Process: 0] Evaluating...
2024-08-18 14:57:22,187 [Process: 0] EPOCH 105:
2024-08-18 14:57:22,189 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9381, 0.9258, 0.9280,  ..., 0.9339, 0.9330, 0.9305],
         [0.0619, 0.0742, 0.0720,  ..., 0.0661, 0.0670, 0.0695]],
        [[0.9300, 0.9224, 0.9293,  ..., 0.9282, 0.9253, 0.9227],
         [0.0700, 0.0776, 0.0707,  ..., 0.0718, 0.0747, 0.0773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9350, 0.9332, 0.9343,  ..., 0.9314, 0.9410, 0.9339],
         [0.0650, 0.0668, 0.0657,  ..., 0.0686, 0.0590, 0.0661]],
        [[0.9326, 0.9355, 0.9283,  ..., 0.9307, 0.6172, 0.5000],
         [0.0674, 0.0645, 0.0717,  ..., 0.0693, 0.3828, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9371, 0.9291, 0.9294,  ..., 0.9394, 0.9344, 0.9310],
         [0.0629, 0.0709, 0.0706,  ..., 0.0606, 0.0656, 0.0690]],
        [[0.9326, 0.9246, 0.9252,  ..., 0.9296, 0.9328, 0.9240],
         [0.0674, 0.0754, 0.0748,  ..., 0.0704, 0.0672, 0.0760]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:23,346 [Process: 0] Synchronize training processes
2024-08-18 14:57:23,346 [Process: 0] Evaluating...
2024-08-18 14:57:23,348 [Process: 0] EPOCH 106:
2024-08-18 14:57:23,350 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:24,534 [Process: 0] Synchronize training processes
2024-08-18 14:57:24,534 [Process: 0] Evaluating...
2024-08-18 14:57:24,536 [Process: 0] EPOCH 107:
2024-08-18 14:57:24,538 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9421, 0.9452, 0.9379,  ..., 0.9375, 0.9432, 0.9356],
         [0.0579, 0.0548, 0.0621,  ..., 0.0625, 0.0568, 0.0644]],
        [[0.9365, 0.8949, 0.8719,  ..., 0.9412, 0.6322, 0.5000],
         [0.0635, 0.1051, 0.1281,  ..., 0.0588, 0.3678, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9278, 0.9234, 0.9277,  ..., 0.9322, 0.9345, 0.9290],
         [0.0722, 0.0766, 0.0723,  ..., 0.0678, 0.0655, 0.0710]],
        [[0.9316, 0.9247, 0.9303,  ..., 0.9277, 0.9318, 0.9241],
         [0.0684, 0.0753, 0.0697,  ..., 0.0723, 0.0682, 0.0759]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9237, 0.9323, 0.9300,  ..., 0.9285, 0.9308, 0.9297],
         [0.0763, 0.0677, 0.0700,  ..., 0.0715, 0.0692, 0.0703]],
        [[0.9238, 0.9380, 0.9362,  ..., 0.9314, 0.9291, 0.5000],
         [0.0762, 0.0620, 0.0638,  ..., 0.0686, 0.0709, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9266, 0.9299, 0.9277,  ..., 0.9322, 0.9347, 0.9309],
         [0.0734, 0.0701, 0.0723,  ..., 0.0678, 0.0653, 0.0691]],
        [[0.9348, 0.9272, 0.9319,  ..., 0.9328, 0.9368, 0.9273],
         [0.0652, 0.0728, 0.0681,  ..., 0.0672, 0.0632, 0.0727]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:25,691 [Process: 0] Synchronize training processes
2024-08-18 14:57:25,692 [Process: 0] Evaluating...
2024-08-18 14:57:25,693 [Process: 0] EPOCH 108:
2024-08-18 14:57:25,695 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:26,852 [Process: 0] Synchronize training processes
2024-08-18 14:57:26,852 [Process: 0] Evaluating...
2024-08-18 14:57:26,854 [Process: 0] EPOCH 109:
2024-08-18 14:57:26,856 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9260, 0.9260, 0.9331,  ..., 0.9289, 0.9214, 0.9341],
         [0.0740, 0.0740, 0.0669,  ..., 0.0711, 0.0786, 0.0659]],
        [[0.9284, 0.9390, 0.9331,  ..., 0.9346, 0.9347, 0.5000],
         [0.0716, 0.0610, 0.0669,  ..., 0.0654, 0.0653, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9362, 0.9343, 0.9286,  ..., 0.9320, 0.9396, 0.9292],
         [0.0638, 0.0657, 0.0714,  ..., 0.0680, 0.0604, 0.0708]],
        [[0.9304, 0.9232, 0.9309,  ..., 0.9307, 0.9309, 0.9236],
         [0.0696, 0.0768, 0.0691,  ..., 0.0693, 0.0691, 0.0764]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9361, 0.9331, 0.9285,  ..., 0.9317, 0.9345, 0.9301],
         [0.0639, 0.0669, 0.0715,  ..., 0.0683, 0.0655, 0.0699]],
        [[0.9262, 0.9350, 0.9319,  ..., 0.9289, 0.9317, 0.5000],
         [0.0738, 0.0650, 0.0681,  ..., 0.0711, 0.0683, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:28,013 [Process: 0] Synchronize training processes
2024-08-18 14:57:28,014 [Process: 0] Evaluating...
2024-08-18 14:57:28,015 [Process: 0] EPOCH 110:
2024-08-18 14:57:28,017 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:29,174 [Process: 0] Synchronize training processes
2024-08-18 14:57:29,175 [Process: 0] Evaluating...
2024-08-18 14:57:29,177 [Process: 0] EPOCH 111:
2024-08-18 14:57:29,178 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9348, 0.9285, 0.9309,  ..., 0.9375, 0.9336, 0.9310],
         [0.0652, 0.0715, 0.0691,  ..., 0.0625, 0.0664, 0.0690]],
        [[0.9320, 0.9241, 0.9303,  ..., 0.9338, 0.9297, 0.9262],
         [0.0680, 0.0759, 0.0697,  ..., 0.0662, 0.0703, 0.0738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9323, 0.9350, 0.9300,  ..., 0.9302, 0.9370, 0.9319],
         [0.0677, 0.0650, 0.0700,  ..., 0.0698, 0.0630, 0.0681]],
        [[0.9339, 0.9371, 0.9356,  ..., 0.9329, 0.9332, 0.5000],
         [0.0661, 0.0629, 0.0644,  ..., 0.0671, 0.0668, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9331, 0.9306, 0.9277,  ..., 0.9308, 0.9364, 0.9285],
         [0.0669, 0.0694, 0.0723,  ..., 0.0692, 0.0636, 0.0715]],
        [[0.9289, 0.9208, 0.9346,  ..., 0.9358, 0.9332, 0.9246],
         [0.0711, 0.0792, 0.0654,  ..., 0.0642, 0.0668, 0.0754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9394, 0.9330, 0.9333,  ..., 0.9296, 0.9352, 0.9324],
         [0.0606, 0.0670, 0.0667,  ..., 0.0704, 0.0648, 0.0676]],
        [[0.9384, 0.9356, 0.9390,  ..., 0.9353, 0.9378, 0.5000],
         [0.0616, 0.0644, 0.0610,  ..., 0.0647, 0.0622, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:30,331 [Process: 0] Synchronize training processes
2024-08-18 14:57:30,331 [Process: 0] Evaluating...
2024-08-18 14:57:30,335 [Process: 0] EPOCH 112:
2024-08-18 14:57:30,337 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9330, 0.9327, 0.9286,  ..., 0.9330, 0.9375, 0.9328],
         [0.0670, 0.0673, 0.0714,  ..., 0.0670, 0.0625, 0.0672]],
        [[0.9295, 0.9226, 0.9307,  ..., 0.9306, 0.9248, 0.9262],
         [0.0705, 0.0774, 0.0693,  ..., 0.0694, 0.0752, 0.0738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9321, 0.9317, 0.9327,  ..., 0.9282, 0.9331, 0.9315],
         [0.0679, 0.0683, 0.0673,  ..., 0.0718, 0.0669, 0.0685]],
        [[0.9422, 0.9318, 0.9359,  ..., 0.9342, 0.9355, 0.5000],
         [0.0578, 0.0682, 0.0641,  ..., 0.0658, 0.0645, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9335, 0.9278, 0.9310,  ..., 0.9351, 0.9332, 0.9315],
         [0.0665, 0.0722, 0.0690,  ..., 0.0649, 0.0668, 0.0685]],
        [[0.9290, 0.9264, 0.9288,  ..., 0.9289, 0.9302, 0.9226],
         [0.0710, 0.0736, 0.0712,  ..., 0.0711, 0.0698, 0.0774]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:31,497 [Process: 0] Synchronize training processes
2024-08-18 14:57:31,497 [Process: 0] Evaluating...
2024-08-18 14:57:31,499 [Process: 0] EPOCH 113:
2024-08-18 14:57:31,500 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:32,655 [Process: 0] Synchronize training processes
2024-08-18 14:57:32,655 [Process: 0] Evaluating...
2024-08-18 14:57:32,657 [Process: 0] EPOCH 114:
2024-08-18 14:57:32,659 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9305, 0.9307, 0.9284,  ..., 0.9277, 0.9360, 0.9340],
         [0.0695, 0.0693, 0.0716,  ..., 0.0723, 0.0640, 0.0660]],
        [[0.9387, 0.9364, 0.9355,  ..., 0.9360, 0.9345, 0.5000],
         [0.0613, 0.0636, 0.0645,  ..., 0.0640, 0.0655, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9368, 0.9317, 0.9309,  ..., 0.9309, 0.9403, 0.9336],
         [0.0632, 0.0683, 0.0691,  ..., 0.0691, 0.0597, 0.0664]],
        [[0.9316, 0.9235, 0.9248,  ..., 0.9343, 0.9274, 0.9260],
         [0.0684, 0.0765, 0.0752,  ..., 0.0657, 0.0726, 0.0740]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9308, 0.9297, 0.9292,  ..., 0.9298, 0.9380, 0.9332],
         [0.0692, 0.0703, 0.0708,  ..., 0.0702, 0.0620, 0.0668]],
        [[0.9369, 0.9357, 0.9348,  ..., 0.9320, 0.9364, 0.5000],
         [0.0631, 0.0643, 0.0652,  ..., 0.0680, 0.0636, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9338, 0.9323, 0.9269,  ..., 0.9329, 0.9346, 0.9252],
         [0.0662, 0.0677, 0.0731,  ..., 0.0671, 0.0654, 0.0748]],
        [[0.9332, 0.9209, 0.9294,  ..., 0.9274, 0.9271, 0.9258],
         [0.0668, 0.0791, 0.0706,  ..., 0.0726, 0.0729, 0.0742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:33,827 [Process: 0] Synchronize training processes
2024-08-18 14:57:33,827 [Process: 0] Evaluating...
2024-08-18 14:57:33,829 [Process: 0] EPOCH 115:
2024-08-18 14:57:33,831 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:34,987 [Process: 0] Synchronize training processes
2024-08-18 14:57:34,988 [Process: 0] Evaluating...
2024-08-18 14:57:34,989 [Process: 0] EPOCH 116:
2024-08-18 14:57:34,991 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9325, 0.9274, 0.9263,  ..., 0.9256, 0.9270, 0.9272],
         [0.0675, 0.0726, 0.0737,  ..., 0.0744, 0.0730, 0.0728]],
        [[0.9031, 0.9323, 0.9305,  ..., 0.9246, 0.9297, 0.5000],
         [0.0969, 0.0677, 0.0695,  ..., 0.0754, 0.0703, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9331, 0.9333, 0.9271,  ..., 0.9306, 0.9331, 0.9281],
         [0.0669, 0.0667, 0.0729,  ..., 0.0694, 0.0669, 0.0719]],
        [[0.9228, 0.9238, 0.9259,  ..., 0.9254, 0.9250, 0.9245],
         [0.0772, 0.0762, 0.0741,  ..., 0.0746, 0.0750, 0.0755]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9333, 0.9290, 0.9290,  ..., 0.9271, 0.9284, 0.9272],
         [0.0667, 0.0710, 0.0710,  ..., 0.0729, 0.0716, 0.0728]],
        [[0.9347, 0.9303, 0.9305,  ..., 0.9260, 0.9307, 0.5000],
         [0.0653, 0.0697, 0.0695,  ..., 0.0740, 0.0693, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:36,148 [Process: 0] Synchronize training processes
2024-08-18 14:57:36,148 [Process: 0] Evaluating...
2024-08-18 14:57:36,150 [Process: 0] EPOCH 117:
2024-08-18 14:57:36,152 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9317, 0.9257, 0.9237,  ..., 0.9282, 0.9279, 0.9267],
         [0.0683, 0.0743, 0.0763,  ..., 0.0718, 0.0721, 0.0733]],
        [[0.9310, 0.9235, 0.9261,  ..., 0.9329, 0.9350, 0.9233],
         [0.0690, 0.0765, 0.0739,  ..., 0.0671, 0.0650, 0.0767]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9366, 0.9385, 0.9318,  ..., 0.9332, 0.9406, 0.9345],
         [0.0634, 0.0615, 0.0682,  ..., 0.0668, 0.0594, 0.0655]],
        [[0.9317, 0.9382, 0.9345,  ..., 0.9339, 0.9373, 0.5000],
         [0.0683, 0.0618, 0.0655,  ..., 0.0661, 0.0627, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9293, 0.9276, 0.9258,  ..., 0.9302, 0.9297, 0.9289],
         [0.0707, 0.0724, 0.0742,  ..., 0.0698, 0.0703, 0.0711]],
        [[0.9316, 0.9264, 0.9319,  ..., 0.9304, 0.9295, 0.9253],
         [0.0684, 0.0736, 0.0681,  ..., 0.0696, 0.0705, 0.0747]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9331, 0.9351, 0.9305,  ..., 0.9288, 0.9326, 0.9301],
         [0.0669, 0.0649, 0.0695,  ..., 0.0712, 0.0674, 0.0699]],
        [[0.9253, 0.9307, 0.9277,  ..., 0.9303, 0.9292, 0.5000],
         [0.0747, 0.0693, 0.0723,  ..., 0.0697, 0.0708, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:37,305 [Process: 0] Synchronize training processes
2024-08-18 14:57:37,305 [Process: 0] Evaluating...
2024-08-18 14:57:37,307 [Process: 0] EPOCH 118:
2024-08-18 14:57:37,308 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:38,462 [Process: 0] Synchronize training processes
2024-08-18 14:57:38,462 [Process: 0] Evaluating...
2024-08-18 14:57:38,464 [Process: 0] EPOCH 119:
2024-08-18 14:57:38,466 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9293, 0.9254, 0.9227,  ..., 0.9292, 0.9279, 0.9274],
         [0.0707, 0.0746, 0.0773,  ..., 0.0708, 0.0721, 0.0726]],
        [[0.9321, 0.9229, 0.9286,  ..., 0.9308, 0.9287, 0.9231],
         [0.0679, 0.0771, 0.0714,  ..., 0.0692, 0.0713, 0.0769]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9321, 0.9308, 0.9232,  ..., 0.9248, 0.9280, 0.9262],
         [0.0679, 0.0692, 0.0768,  ..., 0.0752, 0.0720, 0.0738]],
        [[0.5000, 0.9266, 0.9284,  ..., 0.9244, 0.9264, 0.5000],
         [0.5000, 0.0734, 0.0716,  ..., 0.0756, 0.0736, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9269, 0.9287, 0.9260,  ..., 0.9308, 0.9322, 0.9288],
         [0.0731, 0.0713, 0.0740,  ..., 0.0692, 0.0678, 0.0712]],
        [[0.9251, 0.9246, 0.9298,  ..., 0.9235, 0.9316, 0.9213],
         [0.0749, 0.0754, 0.0702,  ..., 0.0765, 0.0684, 0.0787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:39,621 [Process: 0] Synchronize training processes
2024-08-18 14:57:39,622 [Process: 0] Evaluating...
2024-08-18 14:57:39,623 [Process: 0] EPOCH 120:
2024-08-18 14:57:39,625 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:40,784 [Process: 0] Synchronize training processes
2024-08-18 14:57:40,784 [Process: 0] Evaluating...
2024-08-18 14:57:40,786 [Process: 0] EPOCH 121:
2024-08-18 14:57:40,788 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9327, 0.9366, 0.9299,  ..., 0.9296, 0.9356, 0.9313],
         [0.0673, 0.0634, 0.0701,  ..., 0.0704, 0.0644, 0.0687]],
        [[0.5000, 0.9365, 0.9360,  ..., 0.9320, 0.5000, 0.5000],
         [0.5000, 0.0635, 0.0640,  ..., 0.0680, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9347, 0.9321, 0.9280,  ..., 0.9359, 0.9331, 0.9337],
         [0.0653, 0.0679, 0.0720,  ..., 0.0641, 0.0669, 0.0663]],
        [[0.9215, 0.9241, 0.9259,  ..., 0.9110, 0.9180, 0.9264],
         [0.0785, 0.0759, 0.0741,  ..., 0.0890, 0.0820, 0.0736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9424, 0.9429, 0.9333,  ..., 0.9360, 0.9407, 0.9358],
         [0.0576, 0.0571, 0.0667,  ..., 0.0640, 0.0593, 0.0642]],
        [[0.5000, 0.9372, 0.9331,  ..., 0.9371, 0.5000, 0.5000],
         [0.5000, 0.0628, 0.0669,  ..., 0.0629, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 14:57:41,944 [Process: 0] Synchronize training processes
2024-08-18 14:57:41,944 [Process: 0] Evaluating...
2024-08-18 14:57:41,952 [Process: 0] EPOCH 122:
2024-08-18 14:57:41,955 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:43,134 [Process: 0] Synchronize training processes
2024-08-18 14:57:43,135 [Process: 0] Evaluating...
2024-08-18 14:57:43,137 [Process: 0] EPOCH 123:
2024-08-18 14:57:43,140 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9346, 0.9213, 0.9298,  ..., 0.9344, 0.9392, 0.9334],
         [0.0654, 0.0787, 0.0702,  ..., 0.0656, 0.0608, 0.0666]],
        [[0.9269, 0.9212, 0.9341,  ..., 0.9316, 0.9304, 0.9228],
         [0.0731, 0.0788, 0.0659,  ..., 0.0684, 0.0696, 0.0772]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9174, 0.9108, 0.9375,  ..., 0.9378, 0.9029, 0.9402],
         [0.0826, 0.0892, 0.0625,  ..., 0.0622, 0.0971, 0.0598]],
        [[0.5000, 0.9383, 0.9411,  ..., 0.9384, 0.5000, 0.5000],
         [0.5000, 0.0617, 0.0589,  ..., 0.0616, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9331, 0.9251, 0.9198,  ..., 0.9357, 0.9335, 0.9271],
         [0.0669, 0.0749, 0.0802,  ..., 0.0643, 0.0665, 0.0729]],
        [[0.9322, 0.9219, 0.9271,  ..., 0.9259, 0.9314, 0.9196],
         [0.0678, 0.0781, 0.0729,  ..., 0.0741, 0.0686, 0.0804]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9413, 0.9434, 0.9350,  ..., 0.9365, 0.9402, 0.9368],
         [0.0587, 0.0566, 0.0650,  ..., 0.0635, 0.0598, 0.0632]],
        [[0.5000, 0.9386, 0.9416,  ..., 0.9375, 0.5000, 0.5000],
         [0.5000, 0.0614, 0.0584,  ..., 0.0625, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:44,301 [Process: 0] Synchronize training processes
2024-08-18 14:57:44,301 [Process: 0] Evaluating...
2024-08-18 14:57:44,303 [Process: 0] EPOCH 124:
2024-08-18 14:57:44,306 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9308, 0.9187, 0.9246,  ..., 0.9328, 0.9316, 0.9287],
         [0.0692, 0.0813, 0.0754,  ..., 0.0672, 0.0684, 0.0713]],
        [[0.9370, 0.9223, 0.9329,  ..., 0.9318, 0.9300, 0.9166],
         [0.0630, 0.0777, 0.0671,  ..., 0.0682, 0.0700, 0.0834]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9452, 0.9476, 0.9408,  ..., 0.9403, 0.9471, 0.9450],
         [0.0548, 0.0524, 0.0592,  ..., 0.0597, 0.0529, 0.0550]],
        [[0.5000, 0.8570, 0.8082,  ..., 0.9096, 0.8823, 0.5000],
         [0.5000, 0.1430, 0.1918,  ..., 0.0904, 0.1177, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9282, 0.9199, 0.9203,  ..., 0.9318, 0.9373, 0.9212],
         [0.0718, 0.0801, 0.0797,  ..., 0.0682, 0.0627, 0.0788]],
        [[0.9245, 0.9144, 0.9291,  ..., 0.9283, 0.9332, 0.9155],
         [0.0755, 0.0856, 0.0709,  ..., 0.0717, 0.0668, 0.0845]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:45,461 [Process: 0] Synchronize training processes
2024-08-18 14:57:45,461 [Process: 0] Evaluating...
2024-08-18 14:57:45,463 [Process: 0] EPOCH 125:
2024-08-18 14:57:45,465 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:46,621 [Process: 0] Synchronize training processes
2024-08-18 14:57:46,621 [Process: 0] Evaluating...
2024-08-18 14:57:46,623 [Process: 0] EPOCH 126:
2024-08-18 14:57:46,625 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9343, 0.9312, 0.9206,  ..., 0.9158, 0.9272, 0.9268],
         [0.0657, 0.0688, 0.0794,  ..., 0.0842, 0.0728, 0.0732]],
        [[0.5000, 0.9232, 0.9232,  ..., 0.9212, 0.9333, 0.5000],
         [0.5000, 0.0768, 0.0768,  ..., 0.0788, 0.0667, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9215, 0.9188, 0.9206,  ..., 0.9262, 0.9345, 0.9191],
         [0.0785, 0.0812, 0.0794,  ..., 0.0738, 0.0655, 0.0809]],
        [[0.9165, 0.9089, 0.9160,  ..., 0.9209, 0.9159, 0.9074],
         [0.0835, 0.0911, 0.0840,  ..., 0.0791, 0.0841, 0.0926]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9381, 0.9420, 0.8897,  ..., 0.8433, 0.9291, 0.8954],
         [0.0619, 0.0580, 0.1103,  ..., 0.1567, 0.0709, 0.1046]],
        [[0.5000, 0.9312, 0.9304,  ..., 0.9306, 0.7383, 0.5000],
         [0.5000, 0.0688, 0.0696,  ..., 0.0694, 0.2617, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9224, 0.9146, 0.9200,  ..., 0.9260, 0.9266, 0.9180],
         [0.0776, 0.0854, 0.0800,  ..., 0.0740, 0.0734, 0.0820]],
        [[0.9072, 0.9212, 0.9063,  ..., 0.9206, 0.9117, 0.9187],
         [0.0928, 0.0788, 0.0937,  ..., 0.0794, 0.0883, 0.0813]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:47,780 [Process: 0] Synchronize training processes
2024-08-18 14:57:47,780 [Process: 0] Evaluating...
2024-08-18 14:57:47,782 [Process: 0] EPOCH 127:
2024-08-18 14:57:47,784 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:48,943 [Process: 0] Synchronize training processes
2024-08-18 14:57:48,944 [Process: 0] Evaluating...
2024-08-18 14:57:48,945 [Process: 0] EPOCH 128:
2024-08-18 14:57:48,947 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9413, 0.9418, 0.9361,  ..., 0.9094, 0.9423, 0.9306],
         [0.0587, 0.0582, 0.0639,  ..., 0.0906, 0.0577, 0.0694]],
        [[0.5000, 0.9309, 0.9327,  ..., 0.9320, 0.5000, 0.5000],
         [0.5000, 0.0691, 0.0673,  ..., 0.0680, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9247, 0.9216, 0.9258,  ..., 0.9309, 0.9334, 0.9239],
         [0.0753, 0.0784, 0.0742,  ..., 0.0691, 0.0666, 0.0761]],
        [[0.9131, 0.9255, 0.9181,  ..., 0.9194, 0.9103, 0.8922],
         [0.0869, 0.0745, 0.0819,  ..., 0.0806, 0.0897, 0.1078]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9428, 0.9364, 0.9456,  ..., 0.9396, 0.9492, 0.9441],
         [0.0572, 0.0636, 0.0544,  ..., 0.0604, 0.0508, 0.0559]],
        [[0.5000, 0.9335, 0.9336,  ..., 0.9331, 0.5000, 0.5000],
         [0.5000, 0.0665, 0.0664,  ..., 0.0669, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:50,104 [Process: 0] Synchronize training processes
2024-08-18 14:57:50,104 [Process: 0] Evaluating...
2024-08-18 14:57:50,106 [Process: 0] EPOCH 129:
2024-08-18 14:57:50,108 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:51,266 [Process: 0] Synchronize training processes
2024-08-18 14:57:51,266 [Process: 0] Evaluating...
2024-08-18 14:57:51,268 [Process: 0] EPOCH 130:
2024-08-18 14:57:51,269 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9222, 0.9207, 0.9204,  ..., 0.9297, 0.9274, 0.9192],
         [0.0778, 0.0793, 0.0796,  ..., 0.0703, 0.0726, 0.0808]],
        [[0.9317, 0.9217, 0.9312,  ..., 0.9322, 0.9335, 0.9256],
         [0.0683, 0.0783, 0.0688,  ..., 0.0678, 0.0665, 0.0744]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9454, 0.9496, 0.9434,  ..., 0.9458, 0.9437, 0.9423],
         [0.0546, 0.0504, 0.0566,  ..., 0.0542, 0.0563, 0.0577]],
        [[0.5000, 0.9371, 0.9378,  ..., 0.9358, 0.5000, 0.5000],
         [0.5000, 0.0629, 0.0622,  ..., 0.0642, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9275, 0.9272, 0.9246,  ..., 0.9358, 0.9316, 0.9247],
         [0.0725, 0.0728, 0.0754,  ..., 0.0642, 0.0684, 0.0753]],
        [[0.9305, 0.9246, 0.9318,  ..., 0.9339, 0.9396, 0.9288],
         [0.0695, 0.0754, 0.0682,  ..., 0.0661, 0.0604, 0.0712]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9505, 0.9471, 0.9470,  ..., 0.9423, 0.9440, 0.9436],
         [0.0495, 0.0529, 0.0530,  ..., 0.0577, 0.0560, 0.0564]],
        [[0.5000, 0.9371, 0.9384,  ..., 0.9370, 0.5000, 0.5000],
         [0.5000, 0.0629, 0.0616,  ..., 0.0630, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:52,446 [Process: 0] Synchronize training processes
2024-08-18 14:57:52,447 [Process: 0] Evaluating...
2024-08-18 14:57:52,448 [Process: 0] EPOCH 131:
2024-08-18 14:57:52,450 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9338, 0.9323, 0.9302,  ..., 0.9377, 0.9381, 0.9280],
         [0.0662, 0.0677, 0.0698,  ..., 0.0623, 0.0619, 0.0720]],
        [[0.9393, 0.9339, 0.9372,  ..., 0.9372, 0.9371, 0.9355],
         [0.0607, 0.0661, 0.0628,  ..., 0.0628, 0.0629, 0.0645]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9506, 0.9427, 0.9404,  ..., 0.9434, 0.9457, 0.9448],
         [0.0494, 0.0573, 0.0596,  ..., 0.0566, 0.0543, 0.0552]],
        [[0.5000, 0.9357, 0.9387,  ..., 0.9356, 0.5000, 0.5000],
         [0.5000, 0.0643, 0.0613,  ..., 0.0644, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9397, 0.9346, 0.9338,  ..., 0.9395, 0.9360, 0.9299],
         [0.0603, 0.0654, 0.0662,  ..., 0.0605, 0.0640, 0.0701]],
        [[0.9389, 0.9340, 0.9361,  ..., 0.9400, 0.9387, 0.9349],
         [0.0611, 0.0660, 0.0639,  ..., 0.0600, 0.0613, 0.0651]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:53,607 [Process: 0] Synchronize training processes
2024-08-18 14:57:53,607 [Process: 0] Evaluating...
2024-08-18 14:57:53,611 [Process: 0] EPOCH 132:
2024-08-18 14:57:53,612 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:54,771 [Process: 0] Synchronize training processes
2024-08-18 14:57:54,771 [Process: 0] Evaluating...
2024-08-18 14:57:54,773 [Process: 0] EPOCH 133:
2024-08-18 14:57:54,775 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9445, 0.9452, 0.9429,  ..., 0.9435, 0.9460, 0.9453],
         [0.0555, 0.0548, 0.0571,  ..., 0.0565, 0.0540, 0.0547]],
        [[0.5000, 0.9394, 0.9407,  ..., 0.9382, 0.5000, 0.5000],
         [0.5000, 0.0606, 0.0593,  ..., 0.0618, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9393, 0.9342, 0.9327,  ..., 0.9392, 0.8841, 0.9330],
         [0.0607, 0.0658, 0.0673,  ..., 0.0608, 0.1159, 0.0670]],
        [[0.9383, 0.9344, 0.9411,  ..., 0.9427, 0.9402, 0.9384],
         [0.0617, 0.0656, 0.0589,  ..., 0.0573, 0.0598, 0.0616]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9436, 0.9465, 0.9418,  ..., 0.9420, 0.9415, 0.9474],
         [0.0564, 0.0535, 0.0582,  ..., 0.0580, 0.0585, 0.0526]],
        [[0.5000, 0.9364, 0.9370,  ..., 0.9363, 0.5000, 0.5000],
         [0.5000, 0.0636, 0.0630,  ..., 0.0637, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9374, 0.9312, 0.9320,  ..., 0.9401, 0.5000, 0.9353],
         [0.0626, 0.0688, 0.0680,  ..., 0.0599, 0.5000, 0.0647]],
        [[0.9407, 0.9344, 0.9416,  ..., 0.9405, 0.9407, 0.9395],
         [0.0593, 0.0656, 0.0584,  ..., 0.0595, 0.0593, 0.0605]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:55,928 [Process: 0] Synchronize training processes
2024-08-18 14:57:55,929 [Process: 0] Evaluating...
2024-08-18 14:57:55,930 [Process: 0] EPOCH 134:
2024-08-18 14:57:55,932 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:57:57,090 [Process: 0] Synchronize training processes
2024-08-18 14:57:57,090 [Process: 0] Evaluating...
2024-08-18 14:57:57,092 [Process: 0] EPOCH 135:
2024-08-18 14:57:57,094 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9423, 0.9401, 0.9393,  ..., 0.9390, 0.9428, 0.9444],
         [0.0577, 0.0599, 0.0607,  ..., 0.0610, 0.0572, 0.0556]],
        [[0.5000, 0.9347, 0.9343,  ..., 0.9371, 0.5000, 0.5000],
         [0.5000, 0.0653, 0.0657,  ..., 0.0629, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9400, 0.9375, 0.9392,  ..., 0.9447, 0.5000, 0.9366],
         [0.0600, 0.0625, 0.0608,  ..., 0.0553, 0.5000, 0.0634]],
        [[0.9465, 0.9421, 0.9458,  ..., 0.9412, 0.9424, 0.9421],
         [0.0535, 0.0579, 0.0542,  ..., 0.0588, 0.0576, 0.0579]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9365, 0.9357, 0.9363,  ..., 0.9398, 0.9333, 0.9356],
         [0.0635, 0.0643, 0.0637,  ..., 0.0602, 0.0667, 0.0644]],
        [[0.5000, 0.9355, 0.9350,  ..., 0.9337, 0.8732, 0.5000],
         [0.5000, 0.0645, 0.0650,  ..., 0.0663, 0.1268, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:58,249 [Process: 0] Synchronize training processes
2024-08-18 14:57:58,249 [Process: 0] Evaluating...
2024-08-18 14:57:58,251 [Process: 0] EPOCH 136:
2024-08-18 14:57:58,253 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9416, 0.9365, 0.9355,  ..., 0.9475, 0.5000, 0.9396],
         [0.0584, 0.0635, 0.0645,  ..., 0.0525, 0.5000, 0.0604]],
        [[0.9461, 0.9423, 0.9441,  ..., 0.9439, 0.9462, 0.9427],
         [0.0539, 0.0577, 0.0559,  ..., 0.0561, 0.0538, 0.0573]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9419, 0.9425, 0.9366,  ..., 0.9374, 0.9388, 0.9389],
         [0.0581, 0.0575, 0.0634,  ..., 0.0626, 0.0612, 0.0611]],
        [[0.5000, 0.9367, 0.9371,  ..., 0.9376, 0.9349, 0.5000],
         [0.5000, 0.0633, 0.0629,  ..., 0.0624, 0.0651, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9451, 0.9402, 0.9448,  ..., 0.9436, 0.9402, 0.9419],
         [0.0549, 0.0598, 0.0552,  ..., 0.0564, 0.0598, 0.0581]],
        [[0.9455, 0.9431, 0.9439,  ..., 0.9493, 0.9474, 0.9436],
         [0.0545, 0.0569, 0.0561,  ..., 0.0507, 0.0526, 0.0564]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9409, 0.9346, 0.9424,  ..., 0.9429, 0.9426, 0.9387],
         [0.0591, 0.0654, 0.0576,  ..., 0.0571, 0.0574, 0.0613]],
        [[0.5000, 0.9375, 0.9396,  ..., 0.9391, 0.9156, 0.5000],
         [0.5000, 0.0625, 0.0604,  ..., 0.0609, 0.0844, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:57:59,408 [Process: 0] Synchronize training processes
2024-08-18 14:57:59,409 [Process: 0] Evaluating...
2024-08-18 14:57:59,411 [Process: 0] EPOCH 137:
2024-08-18 14:57:59,412 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:00,569 [Process: 0] Synchronize training processes
2024-08-18 14:58:00,569 [Process: 0] Evaluating...
2024-08-18 14:58:00,571 [Process: 0] EPOCH 138:
2024-08-18 14:58:00,573 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9433, 0.9410, 0.9422,  ..., 0.9460, 0.9427, 0.9417],
         [0.0567, 0.0590, 0.0578,  ..., 0.0539, 0.0573, 0.0583]],
        [[0.9483, 0.9429, 0.9471,  ..., 0.9450, 0.9430, 0.9443],
         [0.0517, 0.0571, 0.0529,  ..., 0.0550, 0.0570, 0.0557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9352, 0.9342, 0.9399,  ..., 0.9406, 0.9350, 0.9419],
         [0.0648, 0.0658, 0.0601,  ..., 0.0594, 0.0650, 0.0581]],
        [[0.5000, 0.9416, 0.9414,  ..., 0.9437, 0.8402, 0.5000],
         [0.5000, 0.0584, 0.0586,  ..., 0.0563, 0.1598, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9457, 0.9435, 0.9431,  ..., 0.9447, 0.9389, 0.9452],
         [0.0543, 0.0565, 0.0569,  ..., 0.0553, 0.0611, 0.0548]],
        [[0.9458, 0.9413, 0.9466,  ..., 0.9428, 0.9474, 0.9426],
         [0.0542, 0.0587, 0.0534,  ..., 0.0572, 0.0526, 0.0574]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:01,733 [Process: 0] Synchronize training processes
2024-08-18 14:58:01,733 [Process: 0] Evaluating...
2024-08-18 14:58:01,735 [Process: 0] EPOCH 139:
2024-08-18 14:58:01,737 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:02,895 [Process: 0] Synchronize training processes
2024-08-18 14:58:02,896 [Process: 0] Evaluating...
2024-08-18 14:58:02,898 [Process: 0] EPOCH 140:
2024-08-18 14:58:02,900 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9266, 0.9186, 0.9400,  ..., 0.9372, 0.9295, 0.9354],
         [0.0734, 0.0814, 0.0600,  ..., 0.0628, 0.0705, 0.0646]],
        [[0.5000, 0.9389, 0.9435,  ..., 0.9430, 0.9398, 0.5000],
         [0.5000, 0.0611, 0.0565,  ..., 0.0570, 0.0602, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9438, 0.9437, 0.9432,  ..., 0.9481, 0.9451, 0.9450],
         [0.0562, 0.0563, 0.0568,  ..., 0.0519, 0.0549, 0.0550]],
        [[0.9444, 0.9400, 0.9453,  ..., 0.9460, 0.9451, 0.9403],
         [0.0556, 0.0600, 0.0547,  ..., 0.0540, 0.0549, 0.0597]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9426, 0.9419, 0.9413,  ..., 0.9417, 0.9427, 0.9464],
         [0.0574, 0.0581, 0.0587,  ..., 0.0583, 0.0573, 0.0536]],
        [[0.5000, 0.9461, 0.9433,  ..., 0.9416, 0.6825, 0.5000],
         [0.5000, 0.0539, 0.0567,  ..., 0.0584, 0.3175, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
2024-08-18 14:58:04,053 [Process: 0] Synchronize training processes
2024-08-18 14:58:04,053 [Process: 0] Evaluating...
2024-08-18 14:58:04,055 [Process: 0] EPOCH 141:
2024-08-18 14:58:04,058 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:05,216 [Process: 0] Synchronize training processes
2024-08-18 14:58:05,216 [Process: 0] Evaluating...
2024-08-18 14:58:05,220 [Process: 0] EPOCH 142:
2024-08-18 14:58:05,222 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9502, 0.9467, 0.9444,  ..., 0.9458, 0.9477, 0.9469],
         [0.0498, 0.0533, 0.0556,  ..., 0.0542, 0.0523, 0.0531]],
        [[0.9408, 0.9377, 0.9491,  ..., 0.9426, 0.9449, 0.9383],
         [0.0592, 0.0623, 0.0509,  ..., 0.0574, 0.0551, 0.0617]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9476, 0.9467, 0.9421,  ..., 0.9432, 0.9482, 0.9475],
         [0.0524, 0.0533, 0.0579,  ..., 0.0568, 0.0518, 0.0525]],
        [[0.8256, 0.9461, 0.9488,  ..., 0.9481, 0.5000, 0.5000],
         [0.1744, 0.0539, 0.0512,  ..., 0.0519, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9483, 0.9467, 0.9487,  ..., 0.9500, 0.9479, 0.9501],
         [0.0517, 0.0533, 0.0513,  ..., 0.0500, 0.0521, 0.0499]],
        [[0.9451, 0.9434, 0.9489,  ..., 0.9441, 0.9456, 0.9370],
         [0.0549, 0.0566, 0.0511,  ..., 0.0559, 0.0544, 0.0630]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9426, 0.9464, 0.9406,  ..., 0.9448, 0.9461, 0.9494],
         [0.0574, 0.0536, 0.0594,  ..., 0.0552, 0.0539, 0.0506]],
        [[0.9410, 0.9467, 0.9462,  ..., 0.9459, 0.5000, 0.5000],
         [0.0590, 0.0533, 0.0538,  ..., 0.0541, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:06,373 [Process: 0] Synchronize training processes
2024-08-18 14:58:06,373 [Process: 0] Evaluating...
2024-08-18 14:58:06,375 [Process: 0] EPOCH 143:
2024-08-18 14:58:06,376 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9518, 0.9483, 0.9476,  ..., 0.9508, 0.9469, 0.9507],
         [0.0482, 0.0517, 0.0524,  ..., 0.0492, 0.0531, 0.0493]],
        [[0.9424, 0.9304, 0.9496,  ..., 0.9461, 0.9445, 0.9446],
         [0.0576, 0.0696, 0.0504,  ..., 0.0539, 0.0555, 0.0554]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9490, 0.9505, 0.9421,  ..., 0.9456, 0.9473, 0.9472],
         [0.0510, 0.0495, 0.0579,  ..., 0.0544, 0.0527, 0.0528]],
        [[0.9453, 0.9451, 0.9481,  ..., 0.9451, 0.5000, 0.5000],
         [0.0547, 0.0549, 0.0519,  ..., 0.0549, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9519, 0.9471, 0.9482,  ..., 0.9500, 0.9483, 0.9500],
         [0.0481, 0.0529, 0.0518,  ..., 0.0500, 0.0517, 0.0500]],
        [[0.9486, 0.9415, 0.9503,  ..., 0.9466, 0.9479, 0.9434],
         [0.0514, 0.0585, 0.0497,  ..., 0.0534, 0.0521, 0.0566]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 14:58:07,527 [Process: 0] Synchronize training processes
2024-08-18 14:58:07,528 [Process: 0] Evaluating...
2024-08-18 14:58:07,529 [Process: 0] EPOCH 144:
2024-08-18 14:58:07,531 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:08,690 [Process: 0] Synchronize training processes
2024-08-18 14:58:08,690 [Process: 0] Evaluating...
2024-08-18 14:58:08,692 [Process: 0] EPOCH 145:
2024-08-18 14:58:08,694 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9502, 0.9457, 0.9424,  ..., 0.9463, 0.9462, 0.9463],
         [0.0498, 0.0543, 0.0576,  ..., 0.0537, 0.0538, 0.0537]],
        [[0.9393, 0.9481, 0.9473,  ..., 0.9469, 0.5000, 0.5000],
         [0.0607, 0.0519, 0.0527,  ..., 0.0531, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9492, 0.9409, 0.9437,  ..., 0.9505, 0.9485, 0.9465],
         [0.0508, 0.0591, 0.0563,  ..., 0.0495, 0.0515, 0.0535]],
        [[0.9474, 0.9355, 0.9465,  ..., 0.9462, 0.9469, 0.9412],
         [0.0526, 0.0645, 0.0535,  ..., 0.0538, 0.0531, 0.0588]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9466, 0.9464, 0.9385,  ..., 0.9320, 0.9501, 0.9493],
         [0.0534, 0.0536, 0.0615,  ..., 0.0680, 0.0499, 0.0507]],
        [[0.9320, 0.9453, 0.9447,  ..., 0.9465, 0.9454, 0.5000],
         [0.0680, 0.0547, 0.0553,  ..., 0.0535, 0.0546, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9470, 0.9437, 0.9464,  ..., 0.9486, 0.9456, 0.9480],
         [0.0530, 0.0563, 0.0536,  ..., 0.0514, 0.0544, 0.0520]],
        [[0.9451, 0.9208, 0.9458,  ..., 0.9438, 0.9476, 0.9224],
         [0.0549, 0.0792, 0.0542,  ..., 0.0562, 0.0524, 0.0776]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:09,850 [Process: 0] Synchronize training processes
2024-08-18 14:58:09,851 [Process: 0] Evaluating...
2024-08-18 14:58:09,852 [Process: 0] EPOCH 146:
2024-08-18 14:58:09,854 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:11,011 [Process: 0] Synchronize training processes
2024-08-18 14:58:11,011 [Process: 0] Evaluating...
2024-08-18 14:58:11,013 [Process: 0] EPOCH 147:
2024-08-18 14:58:11,015 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9603, 0.9565, 0.9364,  ..., 0.9540, 0.9568, 0.9592],
         [0.0397, 0.0435, 0.0636,  ..., 0.0460, 0.0432, 0.0408]],
        [[0.9601, 0.5000, 0.5000,  ..., 0.9569, 0.9387, 0.5000],
         [0.0399, 0.5000, 0.5000,  ..., 0.0431, 0.0613, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9494, 0.9452, 0.9402,  ..., 0.9444, 0.9499, 0.9446],
         [0.0506, 0.0548, 0.0598,  ..., 0.0556, 0.0501, 0.0554]],
        [[0.9365, 0.9374, 0.9402,  ..., 0.9397, 0.9378, 0.9344],
         [0.0635, 0.0626, 0.0598,  ..., 0.0603, 0.0622, 0.0656]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9455, 0.9512, 0.9345,  ..., 0.9351, 0.9513, 0.9474],
         [0.0545, 0.0488, 0.0655,  ..., 0.0649, 0.0487, 0.0526]],
        [[0.9464, 0.9365, 0.9360,  ..., 0.9330, 0.9432, 0.5000],
         [0.0536, 0.0635, 0.0640,  ..., 0.0670, 0.0568, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:12,172 [Process: 0] Synchronize training processes
2024-08-18 14:58:12,173 [Process: 0] Evaluating...
2024-08-18 14:58:12,174 [Process: 0] EPOCH 148:
2024-08-18 14:58:12,176 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9489, 0.9334, 0.9391,  ..., 0.9458, 0.9490, 0.9491],
         [0.0511, 0.0666, 0.0609,  ..., 0.0542, 0.0510, 0.0509]],
        [[0.9381, 0.9336, 0.9419,  ..., 0.9390, 0.9441, 0.9256],
         [0.0619, 0.0664, 0.0581,  ..., 0.0610, 0.0559, 0.0744]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9461, 0.9472, 0.9437,  ..., 0.9381, 0.9480, 0.9496],
         [0.0539, 0.0528, 0.0563,  ..., 0.0619, 0.0520, 0.0504]],
        [[0.9386, 0.9470, 0.9472,  ..., 0.9458, 0.9329, 0.5000],
         [0.0614, 0.0530, 0.0528,  ..., 0.0542, 0.0671, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9457, 0.9437, 0.9332,  ..., 0.9462, 0.9482, 0.9517],
         [0.0543, 0.0563, 0.0668,  ..., 0.0538, 0.0518, 0.0483]],
        [[0.9448, 0.9321, 0.9443,  ..., 0.9432, 0.9420, 0.9382],
         [0.0552, 0.0679, 0.0557,  ..., 0.0568, 0.0580, 0.0618]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9506, 0.9526, 0.9462,  ..., 0.9409, 0.9501, 0.9438],
         [0.0494, 0.0474, 0.0538,  ..., 0.0591, 0.0499, 0.0562]],
        [[0.9331, 0.9532, 0.9538,  ..., 0.9427, 0.5000, 0.5000],
         [0.0669, 0.0468, 0.0462,  ..., 0.0573, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:13,337 [Process: 0] Synchronize training processes
2024-08-18 14:58:13,337 [Process: 0] Evaluating...
2024-08-18 14:58:13,339 [Process: 0] EPOCH 149:
2024-08-18 14:58:13,341 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:14,497 [Process: 0] Synchronize training processes
2024-08-18 14:58:14,497 [Process: 0] Evaluating...
2024-08-18 14:58:14,499 [Process: 0] EPOCH 150:
2024-08-18 14:58:14,501 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9471, 0.9403, 0.9403,  ..., 0.9473, 0.9457, 0.9501],
         [0.0529, 0.0597, 0.0597,  ..., 0.0527, 0.0543, 0.0499]],
        [[0.9488, 0.9388, 0.9438,  ..., 0.9453, 0.9475, 0.9381],
         [0.0512, 0.0612, 0.0562,  ..., 0.0547, 0.0525, 0.0619]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9532, 0.9509, 0.9488,  ..., 0.9466, 0.9488, 0.9518],
         [0.0468, 0.0491, 0.0512,  ..., 0.0534, 0.0512, 0.0482]],
        [[0.9431, 0.9533, 0.9511,  ..., 0.9486, 0.9301, 0.5000],
         [0.0569, 0.0467, 0.0489,  ..., 0.0514, 0.0699, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9504, 0.9444, 0.9427,  ..., 0.9508, 0.9502, 0.9501],
         [0.0496, 0.0556, 0.0573,  ..., 0.0492, 0.0498, 0.0499]],
        [[0.9482, 0.9353, 0.9497,  ..., 0.9494, 0.9494, 0.9390],
         [0.0518, 0.0647, 0.0503,  ..., 0.0506, 0.0506, 0.0610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:15,658 [Process: 0] Synchronize training processes
2024-08-18 14:58:15,658 [Process: 0] Evaluating...
2024-08-18 14:58:15,660 [Process: 0] EPOCH 151:
2024-08-18 14:58:15,662 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:16,816 [Process: 0] Synchronize training processes
2024-08-18 14:58:16,816 [Process: 0] Evaluating...
2024-08-18 14:58:16,820 [Process: 0] EPOCH 152:
2024-08-18 14:58:16,822 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9547, 0.9517, 0.9496,  ..., 0.9453, 0.9551, 0.9526],
         [0.0453, 0.0483, 0.0504,  ..., 0.0547, 0.0449, 0.0474]],
        [[0.9416, 0.9523, 0.9570,  ..., 0.9448, 0.5000, 0.5000],
         [0.0584, 0.0477, 0.0430,  ..., 0.0552, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9555, 0.9488, 0.9501,  ..., 0.9527, 0.9525, 0.9495],
         [0.0445, 0.0512, 0.0499,  ..., 0.0473, 0.0475, 0.0505]],
        [[0.9505, 0.9418, 0.9537,  ..., 0.9530, 0.9522, 0.9379],
         [0.0495, 0.0582, 0.0463,  ..., 0.0470, 0.0478, 0.0621]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9527, 0.9566, 0.9533,  ..., 0.9464, 0.9536, 0.9540],
         [0.0473, 0.0434, 0.0467,  ..., 0.0536, 0.0464, 0.0460]],
        [[0.9530, 0.9553, 0.9515,  ..., 0.9473, 0.5000, 0.5000],
         [0.0470, 0.0447, 0.0485,  ..., 0.0527, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9502, 0.9493, 0.9461,  ..., 0.9522, 0.9502, 0.9534],
         [0.0498, 0.0507, 0.0539,  ..., 0.0478, 0.0498, 0.0466]],
        [[0.9540, 0.9419, 0.9545,  ..., 0.9549, 0.9544, 0.9442],
         [0.0460, 0.0581, 0.0455,  ..., 0.0451, 0.0456, 0.0558]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:17,976 [Process: 0] Synchronize training processes
2024-08-18 14:58:17,976 [Process: 0] Evaluating...
2024-08-18 14:58:17,978 [Process: 0] EPOCH 153:
2024-08-18 14:58:17,980 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:19,131 [Process: 0] Synchronize training processes
2024-08-18 14:58:19,132 [Process: 0] Evaluating...
2024-08-18 14:58:19,133 [Process: 0] EPOCH 154:
2024-08-18 14:58:19,135 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9534, 0.9558, 0.9590,  ..., 0.9481, 0.9565, 0.9521],
         [0.0466, 0.0442, 0.0410,  ..., 0.0519, 0.0435, 0.0479]],
        [[0.9555, 0.9578, 0.9585,  ..., 0.9476, 0.5000, 0.5000],
         [0.0445, 0.0422, 0.0415,  ..., 0.0524, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9519, 0.9488, 0.9471,  ..., 0.9536, 0.9496, 0.9512],
         [0.0481, 0.0512, 0.0529,  ..., 0.0464, 0.0504, 0.0488]],
        [[0.9516, 0.9331, 0.9528,  ..., 0.9554, 0.9559, 0.9407],
         [0.0484, 0.0669, 0.0472,  ..., 0.0446, 0.0441, 0.0593]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9545, 0.9584, 0.9547,  ..., 0.9392, 0.9537, 0.9545],
         [0.0455, 0.0416, 0.0453,  ..., 0.0608, 0.0463, 0.0455]],
        [[0.9548, 0.9576, 0.9560,  ..., 0.9499, 0.5000, 0.5000],
         [0.0452, 0.0424, 0.0440,  ..., 0.0501, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:20,290 [Process: 0] Synchronize training processes
2024-08-18 14:58:20,290 [Process: 0] Evaluating...
2024-08-18 14:58:20,292 [Process: 0] EPOCH 155:
2024-08-18 14:58:20,294 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9497, 0.9468, 0.9474,  ..., 0.9513, 0.9521, 0.9516],
         [0.0503, 0.0532, 0.0526,  ..., 0.0487, 0.0479, 0.0484]],
        [[0.9483, 0.9222, 0.9528,  ..., 0.9510, 0.9513, 0.9044],
         [0.0517, 0.0778, 0.0472,  ..., 0.0490, 0.0487, 0.0956]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9554, 0.9554, 0.9539,  ..., 0.9439, 0.9538, 0.9556],
         [0.0446, 0.0446, 0.0461,  ..., 0.0561, 0.0462, 0.0444]],
        [[0.9572, 0.9560, 0.9549,  ..., 0.9522, 0.5000, 0.5000],
         [0.0428, 0.0440, 0.0451,  ..., 0.0478, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9509, 0.9478, 0.9443,  ..., 0.9514, 0.9484, 0.9520],
         [0.0491, 0.0522, 0.0557,  ..., 0.0486, 0.0516, 0.0480]],
        [[0.9539, 0.8851, 0.9521,  ..., 0.9549, 0.9543, 0.9128],
         [0.0461, 0.1149, 0.0479,  ..., 0.0451, 0.0457, 0.0872]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9591, 0.9569, 0.9530,  ..., 0.9436, 0.9543, 0.9520],
         [0.0409, 0.0431, 0.0470,  ..., 0.0564, 0.0457, 0.0480]],
        [[0.9529, 0.9581, 0.9543,  ..., 0.9509, 0.5000, 0.5000],
         [0.0471, 0.0419, 0.0457,  ..., 0.0491, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:21,448 [Process: 0] Synchronize training processes
2024-08-18 14:58:21,449 [Process: 0] Evaluating...
2024-08-18 14:58:21,450 [Process: 0] EPOCH 156:
2024-08-18 14:58:21,452 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:22,605 [Process: 0] Synchronize training processes
2024-08-18 14:58:22,606 [Process: 0] Evaluating...
2024-08-18 14:58:22,607 [Process: 0] EPOCH 157:
2024-08-18 14:58:22,609 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9518, 0.9470, 0.9443,  ..., 0.9521, 0.9484, 0.9492],
         [0.0482, 0.0530, 0.0557,  ..., 0.0479, 0.0516, 0.0508]],
        [[0.9548, 0.9079, 0.9550,  ..., 0.9526, 0.9498, 0.9181],
         [0.0452, 0.0921, 0.0450,  ..., 0.0474, 0.0502, 0.0819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9570, 0.9576, 0.9587,  ..., 0.9496, 0.9591, 0.9571],
         [0.0430, 0.0424, 0.0413,  ..., 0.0504, 0.0409, 0.0429]],
        [[0.9557, 0.9534, 0.9558,  ..., 0.9490, 0.5000, 0.5000],
         [0.0443, 0.0466, 0.0442,  ..., 0.0510, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9559, 0.9522, 0.9510,  ..., 0.9507, 0.9515, 0.9538],
         [0.0441, 0.0478, 0.0490,  ..., 0.0493, 0.0485, 0.0462]],
        [[0.9593, 0.9278, 0.9578,  ..., 0.9557, 0.9549, 0.9324],
         [0.0407, 0.0722, 0.0422,  ..., 0.0443, 0.0451, 0.0676]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:23,766 [Process: 0] Synchronize training processes
2024-08-18 14:58:23,766 [Process: 0] Evaluating...
2024-08-18 14:58:23,768 [Process: 0] EPOCH 158:
2024-08-18 14:58:23,770 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:24,922 [Process: 0] Synchronize training processes
2024-08-18 14:58:24,922 [Process: 0] Evaluating...
2024-08-18 14:58:24,924 [Process: 0] EPOCH 159:
2024-08-18 14:58:24,926 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9578, 0.9603, 0.9564,  ..., 0.9501, 0.9589, 0.9588],
         [0.0422, 0.0397, 0.0436,  ..., 0.0499, 0.0411, 0.0412]],
        [[0.9546, 0.9561, 0.9599,  ..., 0.9500, 0.5000, 0.5000],
         [0.0454, 0.0439, 0.0401,  ..., 0.0500, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9558, 0.9519, 0.9471,  ..., 0.9574, 0.9568, 0.9546],
         [0.0442, 0.0481, 0.0529,  ..., 0.0426, 0.0432, 0.0454]],
        [[0.9616, 0.8426, 0.9576,  ..., 0.9552, 0.9612, 0.9069],
         [0.0384, 0.1574, 0.0424,  ..., 0.0448, 0.0388, 0.0931]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9568, 0.9599, 0.9548,  ..., 0.9349, 0.9591, 0.9544],
         [0.0432, 0.0401, 0.0452,  ..., 0.0651, 0.0409, 0.0456]],
        [[0.9568, 0.9560, 0.9577,  ..., 0.9556, 0.5000, 0.8451],
         [0.0432, 0.0440, 0.0423,  ..., 0.0444, 0.5000, 0.1549]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9602, 0.9530, 0.9482,  ..., 0.9532, 0.9586, 0.9575],
         [0.0398, 0.0470, 0.0518,  ..., 0.0468, 0.0414, 0.0425]],
        [[0.9575, 0.8199, 0.9622,  ..., 0.9577, 0.9612, 0.8998],
         [0.0425, 0.1801, 0.0378,  ..., 0.0423, 0.0388, 0.1002]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:26,079 [Process: 0] Synchronize training processes
2024-08-18 14:58:26,079 [Process: 0] Evaluating...
2024-08-18 14:58:26,081 [Process: 0] EPOCH 160:
2024-08-18 14:58:26,083 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:27,236 [Process: 0] Synchronize training processes
2024-08-18 14:58:27,236 [Process: 0] Evaluating...
2024-08-18 14:58:27,238 [Process: 0] EPOCH 161:
2024-08-18 14:58:27,240 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9606, 0.9588, 0.5000,  ..., 0.9007, 0.9623, 0.9234],
         [0.0394, 0.0412, 0.5000,  ..., 0.0993, 0.0377, 0.0766]],
        [[0.9575, 0.9609, 0.9579,  ..., 0.9615, 0.9549, 0.5000],
         [0.0425, 0.0391, 0.0421,  ..., 0.0385, 0.0451, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9525, 0.9473, 0.9551,  ..., 0.9544, 0.9556, 0.9577],
         [0.0475, 0.0527, 0.0449,  ..., 0.0456, 0.0444, 0.0423]],
        [[0.9593, 0.9077, 0.9581,  ..., 0.9568, 0.9541, 0.9210],
         [0.0407, 0.0923, 0.0419,  ..., 0.0432, 0.0459, 0.0790]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9577, 0.9583, 0.9589,  ..., 0.9598, 0.9612, 0.9549],
         [0.0423, 0.0417, 0.0411,  ..., 0.0402, 0.0388, 0.0451]],
        [[0.9539, 0.9550, 0.9518,  ..., 0.9459, 0.5000, 0.9507],
         [0.0461, 0.0450, 0.0482,  ..., 0.0541, 0.5000, 0.0493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:28,419 [Process: 0] Synchronize training processes
2024-08-18 14:58:28,419 [Process: 0] Evaluating...
2024-08-18 14:58:28,423 [Process: 0] EPOCH 162:
2024-08-18 14:58:28,425 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9549, 0.9510, 0.9530,  ..., 0.9548, 0.9555, 0.9553],
         [0.0451, 0.0490, 0.0470,  ..., 0.0452, 0.0445, 0.0447]],
        [[0.9538, 0.9060, 0.9553,  ..., 0.9577, 0.9562, 0.9358],
         [0.0462, 0.0940, 0.0447,  ..., 0.0423, 0.0438, 0.0642]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9587, 0.9531, 0.9516,  ..., 0.9599, 0.9591, 0.9537],
         [0.0413, 0.0469, 0.0484,  ..., 0.0401, 0.0409, 0.0463]],
        [[0.9566, 0.9558, 0.9509,  ..., 0.9527, 0.5000, 0.9476],
         [0.0434, 0.0442, 0.0491,  ..., 0.0473, 0.5000, 0.0524]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9558, 0.9487, 0.9474,  ..., 0.9562, 0.9567, 0.9569],
         [0.0442, 0.0513, 0.0526,  ..., 0.0438, 0.0433, 0.0431]],
        [[0.9566, 0.8287, 0.9559,  ..., 0.9568, 0.9590, 0.9368],
         [0.0434, 0.1713, 0.0441,  ..., 0.0432, 0.0410, 0.0632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9586, 0.9587, 0.9542,  ..., 0.9607, 0.9598, 0.9575],
         [0.0414, 0.0413, 0.0458,  ..., 0.0393, 0.0402, 0.0425]],
        [[0.9498, 0.9497, 0.9452,  ..., 0.9523, 0.5000, 0.9495],
         [0.0502, 0.0503, 0.0548,  ..., 0.0477, 0.5000, 0.0505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:29,599 [Process: 0] Synchronize training processes
2024-08-18 14:58:29,599 [Process: 0] Evaluating...
2024-08-18 14:58:29,601 [Process: 0] EPOCH 163:
2024-08-18 14:58:29,603 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:30,757 [Process: 0] Synchronize training processes
2024-08-18 14:58:30,757 [Process: 0] Evaluating...
2024-08-18 14:58:30,759 [Process: 0] EPOCH 164:
2024-08-18 14:58:30,761 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9526, 0.9532, 0.9501,  ..., 0.9622, 0.9585, 0.9584],
         [0.0474, 0.0468, 0.0499,  ..., 0.0378, 0.0415, 0.0416]],
        [[0.9611, 0.7573, 0.9626,  ..., 0.9610, 0.9603, 0.6457],
         [0.0389, 0.2427, 0.0374,  ..., 0.0390, 0.0397, 0.3543]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9599, 0.9623, 0.9603,  ..., 0.9574, 0.9589, 0.9594],
         [0.0401, 0.0377, 0.0397,  ..., 0.0426, 0.0411, 0.0406]],
        [[0.9512, 0.9464, 0.9516,  ..., 0.9556, 0.5000, 0.9513],
         [0.0488, 0.0536, 0.0484,  ..., 0.0444, 0.5000, 0.0487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9292, 0.9400, 0.9337,  ..., 0.9553, 0.9586, 0.9546],
         [0.0708, 0.0600, 0.0663,  ..., 0.0447, 0.0414, 0.0454]],
        [[0.9570, 0.7759, 0.9588,  ..., 0.9580, 0.9592, 0.8977],
         [0.0430, 0.2241, 0.0412,  ..., 0.0420, 0.0408, 0.1023]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:31,916 [Process: 0] Synchronize training processes
2024-08-18 14:58:31,917 [Process: 0] Evaluating...
2024-08-18 14:58:31,918 [Process: 0] EPOCH 165:
2024-08-18 14:58:31,920 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:33,075 [Process: 0] Synchronize training processes
2024-08-18 14:58:33,076 [Process: 0] Evaluating...
2024-08-18 14:58:33,077 [Process: 0] EPOCH 166:
2024-08-18 14:58:33,079 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9562, 0.9598, 0.9569,  ..., 0.9613, 0.9567, 0.9616],
         [0.0438, 0.0402, 0.0431,  ..., 0.0387, 0.0433, 0.0384]],
        [[0.9591, 0.9536, 0.9516,  ..., 0.9545, 0.5000, 0.9521],
         [0.0409, 0.0464, 0.0484,  ..., 0.0455, 0.5000, 0.0479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9651, 0.9584, 0.9388,  ..., 0.9597, 0.9640, 0.9607],
         [0.0349, 0.0416, 0.0612,  ..., 0.0403, 0.0360, 0.0393]],
        [[0.9630, 0.9112, 0.9633,  ..., 0.9613, 0.9591, 0.8945],
         [0.0370, 0.0888, 0.0367,  ..., 0.0387, 0.0409, 0.1055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9569, 0.9559, 0.9546,  ..., 0.9539, 0.9583, 0.9556],
         [0.0431, 0.0441, 0.0454,  ..., 0.0461, 0.0417, 0.0444]],
        [[0.9562, 0.9566, 0.9521,  ..., 0.9518, 0.5000, 0.9537],
         [0.0438, 0.0434, 0.0479,  ..., 0.0482, 0.5000, 0.0463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 14:58:34,234 [Process: 0] Synchronize training processes
2024-08-18 14:58:34,234 [Process: 0] Evaluating...
2024-08-18 14:58:34,236 [Process: 0] EPOCH 167:
2024-08-18 14:58:34,238 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9630, 0.9585, 0.9553,  ..., 0.9615, 0.9605, 0.9614],
         [0.0370, 0.0415, 0.0447,  ..., 0.0385, 0.0395, 0.0386]],
        [[0.9574, 0.9571, 0.9605,  ..., 0.9582, 0.9600, 0.9597],
         [0.0426, 0.0429, 0.0395,  ..., 0.0418, 0.0400, 0.0403]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9545, 0.9550, 0.9534,  ..., 0.9531, 0.9525, 0.9537],
         [0.0455, 0.0450, 0.0466,  ..., 0.0469, 0.0475, 0.0463]],
        [[0.9578, 0.9550, 0.9521,  ..., 0.9491, 0.5000, 0.9499],
         [0.0422, 0.0450, 0.0479,  ..., 0.0509, 0.5000, 0.0501]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9602, 0.9561, 0.9535,  ..., 0.9568, 0.9582, 0.9582],
         [0.0398, 0.0439, 0.0465,  ..., 0.0432, 0.0418, 0.0418]],
        [[0.9582, 0.9578, 0.9593,  ..., 0.9554, 0.9570, 0.9570],
         [0.0418, 0.0422, 0.0407,  ..., 0.0446, 0.0430, 0.0430]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9508, 0.9580, 0.9529,  ..., 0.9538, 0.9552, 0.9545],
         [0.0492, 0.0420, 0.0471,  ..., 0.0462, 0.0448, 0.0455]],
        [[0.9541, 0.9529, 0.9528,  ..., 0.9514, 0.5000, 0.9561],
         [0.0459, 0.0471, 0.0472,  ..., 0.0486, 0.5000, 0.0439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:35,389 [Process: 0] Synchronize training processes
2024-08-18 14:58:35,390 [Process: 0] Evaluating...
2024-08-18 14:58:35,391 [Process: 0] EPOCH 168:
2024-08-18 14:58:35,393 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:36,559 [Process: 0] Synchronize training processes
2024-08-18 14:58:36,560 [Process: 0] Evaluating...
2024-08-18 14:58:36,562 [Process: 0] EPOCH 169:
2024-08-18 14:58:36,563 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9659, 0.9646, 0.9638,  ..., 0.9625, 0.9635, 0.9621],
         [0.0341, 0.0354, 0.0362,  ..., 0.0375, 0.0365, 0.0379]],
        [[0.9603, 0.7499, 0.9614,  ..., 0.9611, 0.9602, 0.7960],
         [0.0397, 0.2501, 0.0386,  ..., 0.0389, 0.0398, 0.2040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9581, 0.9604, 0.9590,  ..., 0.9597, 0.9611, 0.9556],
         [0.0419, 0.0396, 0.0410,  ..., 0.0403, 0.0389, 0.0444]],
        [[0.9580, 0.9596, 0.9572,  ..., 0.9524, 0.5000, 0.9488],
         [0.0420, 0.0404, 0.0428,  ..., 0.0476, 0.5000, 0.0512]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9637, 0.9585, 0.9637,  ..., 0.9625, 0.9616, 0.9608],
         [0.0363, 0.0415, 0.0363,  ..., 0.0375, 0.0384, 0.0392]],
        [[0.9605, 0.7764, 0.9597,  ..., 0.9597, 0.9611, 0.5532],
         [0.0395, 0.2236, 0.0403,  ..., 0.0403, 0.0389, 0.4468]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 14:58:37,720 [Process: 0] Synchronize training processes
2024-08-18 14:58:37,721 [Process: 0] Evaluating...
2024-08-18 14:58:37,722 [Process: 0] EPOCH 170:
2024-08-18 14:58:37,724 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:38,881 [Process: 0] Synchronize training processes
2024-08-18 14:58:38,881 [Process: 0] Evaluating...
2024-08-18 14:58:38,883 [Process: 0] EPOCH 171:
2024-08-18 14:58:38,885 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9567, 0.9561, 0.9562,  ..., 0.9570, 0.9572, 0.9567],
         [0.0433, 0.0439, 0.0438,  ..., 0.0430, 0.0428, 0.0433]],
        [[0.9535, 0.9549, 0.9575,  ..., 0.9523, 0.5000, 0.9523],
         [0.0465, 0.0451, 0.0425,  ..., 0.0477, 0.5000, 0.0477]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9583, 0.9455, 0.9593,  ..., 0.9529, 0.9567, 0.9547],
         [0.0417, 0.0545, 0.0407,  ..., 0.0471, 0.0433, 0.0453]],
        [[0.9563, 0.9309, 0.9544,  ..., 0.9556, 0.9525, 0.9629],
         [0.0437, 0.0691, 0.0456,  ..., 0.0444, 0.0475, 0.0371]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9576, 0.9595, 0.9541,  ..., 0.9548, 0.9596, 0.9552],
         [0.0424, 0.0405, 0.0459,  ..., 0.0452, 0.0404, 0.0448]],
        [[0.9541, 0.9509, 0.9538,  ..., 0.9464, 0.7830, 0.9477],
         [0.0459, 0.0491, 0.0462,  ..., 0.0536, 0.2170, 0.0523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9439, 0.9320, 0.9284,  ..., 0.9498, 0.9429, 0.9436],
         [0.0561, 0.0680, 0.0716,  ..., 0.0502, 0.0571, 0.0564]],
        [[0.9447, 0.9538, 0.9522,  ..., 0.9427, 0.9436, 0.9472],
         [0.0553, 0.0462, 0.0478,  ..., 0.0573, 0.0564, 0.0528]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:40,042 [Process: 0] Synchronize training processes
2024-08-18 14:58:40,042 [Process: 0] Evaluating...
2024-08-18 14:58:40,046 [Process: 0] EPOCH 172:
2024-08-18 14:58:40,048 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:41,204 [Process: 0] Synchronize training processes
2024-08-18 14:58:41,205 [Process: 0] Evaluating...
2024-08-18 14:58:41,206 [Process: 0] EPOCH 173:
2024-08-18 14:58:41,208 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9567, 0.9587, 0.9566,  ..., 0.9534, 0.9567, 0.9530],
         [0.0433, 0.0413, 0.0434,  ..., 0.0466, 0.0433, 0.0470]],
        [[0.9530, 0.9465, 0.9487,  ..., 0.9401, 0.9331, 0.9400],
         [0.0470, 0.0535, 0.0513,  ..., 0.0599, 0.0669, 0.0600]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9532, 0.9339, 0.9282,  ..., 0.9477, 0.9474, 0.9462],
         [0.0468, 0.0661, 0.0718,  ..., 0.0523, 0.0526, 0.0538]],
        [[0.9422, 0.9463, 0.9481,  ..., 0.9500, 0.9540, 0.9470],
         [0.0578, 0.0537, 0.0519,  ..., 0.0500, 0.0460, 0.0530]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9593, 0.9581, 0.9582,  ..., 0.9559, 0.9559, 0.9544],
         [0.0407, 0.0419, 0.0418,  ..., 0.0441, 0.0441, 0.0456]],
        [[0.9573, 0.9554, 0.9563,  ..., 0.9444, 0.9385, 0.9458],
         [0.0427, 0.0446, 0.0437,  ..., 0.0556, 0.0615, 0.0542]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:42,363 [Process: 0] Synchronize training processes
2024-08-18 14:58:42,364 [Process: 0] Evaluating...
2024-08-18 14:58:42,365 [Process: 0] EPOCH 174:
2024-08-18 14:58:42,367 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9527, 0.9452, 0.9326,  ..., 0.9564, 0.9558, 0.9569],
         [0.0473, 0.0548, 0.0674,  ..., 0.0436, 0.0442, 0.0431]],
        [[0.9561, 0.9482, 0.9585,  ..., 0.9553, 0.9593, 0.9582],
         [0.0439, 0.0518, 0.0415,  ..., 0.0447, 0.0407, 0.0418]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9620, 0.9584, 0.9564,  ..., 0.9534, 0.9554, 0.9575],
         [0.0380, 0.0416, 0.0436,  ..., 0.0466, 0.0446, 0.0425]],
        [[0.9561, 0.9577, 0.9549,  ..., 0.9495, 0.9189, 0.9491],
         [0.0439, 0.0423, 0.0451,  ..., 0.0505, 0.0811, 0.0509]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9352, 0.9373, 0.8866,  ..., 0.9465, 0.9463, 0.9472],
         [0.0648, 0.0627, 0.1134,  ..., 0.0535, 0.0537, 0.0528]],
        [[0.9559, 0.9506, 0.9551,  ..., 0.9526, 0.9554, 0.9517],
         [0.0441, 0.0494, 0.0449,  ..., 0.0474, 0.0446, 0.0483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9552, 0.9563, 0.9582,  ..., 0.9466, 0.9499, 0.9591],
         [0.0448, 0.0437, 0.0418,  ..., 0.0534, 0.0501, 0.0409]],
        [[0.9544, 0.9515, 0.9511,  ..., 0.9492, 0.9339, 0.9447],
         [0.0456, 0.0485, 0.0489,  ..., 0.0508, 0.0661, 0.0553]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:43,522 [Process: 0] Synchronize training processes
2024-08-18 14:58:43,522 [Process: 0] Evaluating...
2024-08-18 14:58:43,524 [Process: 0] EPOCH 175:
2024-08-18 14:58:43,526 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:44,682 [Process: 0] Synchronize training processes
2024-08-18 14:58:44,682 [Process: 0] Evaluating...
2024-08-18 14:58:44,684 [Process: 0] EPOCH 176:
2024-08-18 14:58:44,685 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9421, 0.9445, 0.9328,  ..., 0.9498, 0.9478, 0.9528],
         [0.0579, 0.0555, 0.0672,  ..., 0.0502, 0.0522, 0.0472]],
        [[0.9566, 0.9576, 0.9554,  ..., 0.9574, 0.9539, 0.9519],
         [0.0434, 0.0424, 0.0446,  ..., 0.0426, 0.0461, 0.0481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9583, 0.9579, 0.9568,  ..., 0.9542, 0.9604, 0.9625],
         [0.0417, 0.0421, 0.0432,  ..., 0.0458, 0.0396, 0.0375]],
        [[0.9556, 0.9545, 0.9557,  ..., 0.9511, 0.9464, 0.9526],
         [0.0444, 0.0455, 0.0443,  ..., 0.0489, 0.0536, 0.0474]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9528, 0.6310, 0.5000,  ..., 0.9556, 0.9534, 0.9541],
         [0.0472, 0.3690, 0.5000,  ..., 0.0444, 0.0466, 0.0459]],
        [[0.9583, 0.9604, 0.9622,  ..., 0.9581, 0.9557, 0.9569],
         [0.0417, 0.0396, 0.0378,  ..., 0.0419, 0.0443, 0.0431]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:45,841 [Process: 0] Synchronize training processes
2024-08-18 14:58:45,842 [Process: 0] Evaluating...
2024-08-18 14:58:45,843 [Process: 0] EPOCH 177:
2024-08-18 14:58:45,845 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:46,995 [Process: 0] Synchronize training processes
2024-08-18 14:58:46,996 [Process: 0] Evaluating...
2024-08-18 14:58:46,997 [Process: 0] EPOCH 178:
2024-08-18 14:58:46,999 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9590, 0.9599, 0.9653,  ..., 0.9600, 0.9640, 0.9644],
         [0.0410, 0.0401, 0.0347,  ..., 0.0400, 0.0360, 0.0356]],
        [[0.9590, 0.9585, 0.9571,  ..., 0.9567, 0.9452, 0.9557],
         [0.0410, 0.0415, 0.0429,  ..., 0.0433, 0.0548, 0.0443]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9508, 0.9482, 0.5000,  ..., 0.9523, 0.9527, 0.9529],
         [0.0492, 0.0518, 0.5000,  ..., 0.0477, 0.0473, 0.0471]],
        [[0.9585, 0.9560, 0.9572,  ..., 0.9533, 0.9564, 0.9599],
         [0.0415, 0.0440, 0.0428,  ..., 0.0467, 0.0436, 0.0401]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9582, 0.9553, 0.9615,  ..., 0.9551, 0.9587, 0.9571],
         [0.0418, 0.0447, 0.0385,  ..., 0.0449, 0.0413, 0.0429]],
        [[0.9556, 0.9560, 0.9538,  ..., 0.9544, 0.9375, 0.9539],
         [0.0444, 0.0440, 0.0462,  ..., 0.0456, 0.0625, 0.0461]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:48,154 [Process: 0] Synchronize training processes
2024-08-18 14:58:48,155 [Process: 0] Evaluating...
2024-08-18 14:58:48,156 [Process: 0] EPOCH 179:
2024-08-18 14:58:48,158 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:49,313 [Process: 0] Synchronize training processes
2024-08-18 14:58:49,313 [Process: 0] Evaluating...
2024-08-18 14:58:49,315 [Process: 0] EPOCH 180:
2024-08-18 14:58:49,317 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9483, 0.9390, 0.9429,  ..., 0.9498, 0.9492, 0.9475],
         [0.0517, 0.0610, 0.0571,  ..., 0.0502, 0.0508, 0.0525]],
        [[0.9514, 0.9541, 0.9520,  ..., 0.9517, 0.9548, 0.9518],
         [0.0486, 0.0459, 0.0480,  ..., 0.0483, 0.0452, 0.0482]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9475, 0.9539, 0.9539,  ..., 0.9533, 0.9461, 0.9521],
         [0.0525, 0.0461, 0.0461,  ..., 0.0467, 0.0539, 0.0479]],
        [[0.9483, 0.9471, 0.9501,  ..., 0.9452, 0.9419, 0.9468],
         [0.0517, 0.0529, 0.0499,  ..., 0.0548, 0.0581, 0.0532]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9459, 0.9465, 0.9416,  ..., 0.9496, 0.9465, 0.9487],
         [0.0541, 0.0535, 0.0584,  ..., 0.0504, 0.0535, 0.0513]],
        [[0.9519, 0.9507, 0.9499,  ..., 0.9509, 0.9522, 0.9478],
         [0.0481, 0.0493, 0.0501,  ..., 0.0491, 0.0478, 0.0522]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:50,472 [Process: 0] Synchronize training processes
2024-08-18 14:58:50,473 [Process: 0] Evaluating...
2024-08-18 14:58:50,475 [Process: 0] EPOCH 181:
2024-08-18 14:58:50,476 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9506, 0.9484, 0.9504,  ..., 0.9508, 0.9522, 0.9471],
         [0.0494, 0.0516, 0.0496,  ..., 0.0492, 0.0478, 0.0529]],
        [[0.9484, 0.9470, 0.9487,  ..., 0.9475, 0.9340, 0.9480],
         [0.0516, 0.0530, 0.0513,  ..., 0.0525, 0.0660, 0.0520]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9472, 0.9464, 0.9414,  ..., 0.9480, 0.9485, 0.9498],
         [0.0528, 0.0536, 0.0586,  ..., 0.0520, 0.0515, 0.0502]],
        [[0.9491, 0.9479, 0.9498,  ..., 0.9499, 0.9509, 0.9506],
         [0.0509, 0.0521, 0.0502,  ..., 0.0501, 0.0491, 0.0494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9495, 0.9526, 0.9537,  ..., 0.9477, 0.9520, 0.9515],
         [0.0505, 0.0474, 0.0463,  ..., 0.0523, 0.0480, 0.0485]],
        [[0.9499, 0.9483, 0.9492,  ..., 0.9482, 0.9477, 0.9484],
         [0.0501, 0.0517, 0.0508,  ..., 0.0518, 0.0523, 0.0516]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9481, 0.9498, 0.9469,  ..., 0.9499, 0.9487, 0.9501],
         [0.0519, 0.0502, 0.0531,  ..., 0.0501, 0.0513, 0.0499]],
        [[0.9498, 0.9490, 0.9495,  ..., 0.9479, 0.9489, 0.9507],
         [0.0502, 0.0510, 0.0505,  ..., 0.0521, 0.0511, 0.0493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:51,630 [Process: 0] Synchronize training processes
2024-08-18 14:58:51,630 [Process: 0] Evaluating...
2024-08-18 14:58:51,635 [Process: 0] EPOCH 182:
2024-08-18 14:58:51,637 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:52,789 [Process: 0] Synchronize training processes
2024-08-18 14:58:52,790 [Process: 0] Evaluating...
2024-08-18 14:58:52,791 [Process: 0] EPOCH 183:
2024-08-18 14:58:52,793 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9522, 0.9533, 0.9524,  ..., 0.9510, 0.9517, 0.9510],
         [0.0478, 0.0467, 0.0476,  ..., 0.0490, 0.0483, 0.0490]],
        [[0.9501, 0.9471, 0.9485,  ..., 0.9504, 0.9431, 0.9485],
         [0.0499, 0.0529, 0.0515,  ..., 0.0496, 0.0569, 0.0515]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9490, 0.9482, 0.9485,  ..., 0.9508, 0.9491, 0.9498],
         [0.0510, 0.0518, 0.0515,  ..., 0.0492, 0.0509, 0.0502]],
        [[0.9505, 0.9495, 0.9501,  ..., 0.9504, 0.9498, 0.9501],
         [0.0495, 0.0505, 0.0499,  ..., 0.0496, 0.0502, 0.0499]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9535, 0.9509, 0.9522,  ..., 0.9514, 0.9516, 0.9530],
         [0.0465, 0.0491, 0.0478,  ..., 0.0486, 0.0484, 0.0470]],
        [[0.9524, 0.9499, 0.9499,  ..., 0.9493, 0.9508, 0.9499],
         [0.0476, 0.0501, 0.0501,  ..., 0.0507, 0.0492, 0.0501]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:53,948 [Process: 0] Synchronize training processes
2024-08-18 14:58:53,948 [Process: 0] Evaluating...
2024-08-18 14:58:53,950 [Process: 0] EPOCH 184:
2024-08-18 14:58:53,951 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:55,106 [Process: 0] Synchronize training processes
2024-08-18 14:58:55,106 [Process: 0] Evaluating...
2024-08-18 14:58:55,108 [Process: 0] EPOCH 185:
2024-08-18 14:58:55,109 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9506, 0.9500, 0.9489,  ..., 0.9518, 0.9519, 0.9517],
         [0.0494, 0.0500, 0.0511,  ..., 0.0482, 0.0481, 0.0483]],
        [[0.9509, 0.9491, 0.9507,  ..., 0.9494, 0.9497, 0.9500],
         [0.0491, 0.0509, 0.0493,  ..., 0.0506, 0.0503, 0.0500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9527, 0.9498, 0.9513,  ..., 0.9510, 0.9522, 0.9517],
         [0.0473, 0.0502, 0.0487,  ..., 0.0490, 0.0478, 0.0483]],
        [[0.9526, 0.9499, 0.9495,  ..., 0.9506, 0.9450, 0.9503],
         [0.0474, 0.0501, 0.0505,  ..., 0.0494, 0.0550, 0.0497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9514, 0.9531, 0.9505,  ..., 0.9514, 0.9513, 0.9521],
         [0.0486, 0.0469, 0.0495,  ..., 0.0486, 0.0487, 0.0479]],
        [[0.9509, 0.9493, 0.9497,  ..., 0.9513, 0.9521, 0.9512],
         [0.0491, 0.0507, 0.0503,  ..., 0.0487, 0.0479, 0.0488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9527, 0.9525, 0.9518,  ..., 0.9530, 0.9537, 0.9528],
         [0.0473, 0.0475, 0.0482,  ..., 0.0470, 0.0463, 0.0472]],
        [[0.9523, 0.9508, 0.9515,  ..., 0.9508, 0.9445, 0.9508],
         [0.0477, 0.0492, 0.0485,  ..., 0.0492, 0.0555, 0.0492]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:58:56,262 [Process: 0] Synchronize training processes
2024-08-18 14:58:56,262 [Process: 0] Evaluating...
2024-08-18 14:58:56,264 [Process: 0] EPOCH 186:
2024-08-18 14:58:56,265 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9526, 0.9523, 0.9511,  ..., 0.9510, 0.9519, 0.9523],
         [0.0474, 0.0477, 0.0489,  ..., 0.0490, 0.0481, 0.0477]],
        [[0.9502, 0.9505, 0.9514,  ..., 0.9510, 0.9519, 0.9500],
         [0.0498, 0.0495, 0.0486,  ..., 0.0490, 0.0481, 0.0500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9535, 0.9546, 0.9542,  ..., 0.9545, 0.9524, 0.9530],
         [0.0465, 0.0454, 0.0458,  ..., 0.0455, 0.0476, 0.0470]],
        [[0.9538, 0.9522, 0.9529,  ..., 0.9536, 0.9450, 0.9541],
         [0.0462, 0.0478, 0.0471,  ..., 0.0464, 0.0550, 0.0459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9511, 0.9522, 0.9521,  ..., 0.9525, 0.9514, 0.9524],
         [0.0489, 0.0478, 0.0479,  ..., 0.0475, 0.0486, 0.0476]],
        [[0.9523, 0.9492, 0.9513,  ..., 0.9518, 0.9506, 0.9512],
         [0.0477, 0.0508, 0.0487,  ..., 0.0482, 0.0494, 0.0488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:57,421 [Process: 0] Synchronize training processes
2024-08-18 14:58:57,421 [Process: 0] Evaluating...
2024-08-18 14:58:57,423 [Process: 0] EPOCH 187:
2024-08-18 14:58:57,425 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:58,577 [Process: 0] Synchronize training processes
2024-08-18 14:58:58,578 [Process: 0] Evaluating...
2024-08-18 14:58:58,579 [Process: 0] EPOCH 188:
2024-08-18 14:58:58,581 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9499, 0.9497, 0.9501,  ..., 0.9502, 0.9507, 0.9507],
         [0.0501, 0.0503, 0.0499,  ..., 0.0498, 0.0493, 0.0493]],
        [[0.9509, 0.9487, 0.9486,  ..., 0.9499, 0.9400, 0.9503],
         [0.0491, 0.0513, 0.0514,  ..., 0.0501, 0.0600, 0.0497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9529, 0.9532, 0.9530,  ..., 0.9535, 0.9534, 0.9529],
         [0.0471, 0.0468, 0.0470,  ..., 0.0465, 0.0466, 0.0471]],
        [[0.9530, 0.9503, 0.9515,  ..., 0.9521, 0.9517, 0.9518],
         [0.0470, 0.0497, 0.0485,  ..., 0.0479, 0.0483, 0.0482]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9511, 0.9503, 0.9494,  ..., 0.9523, 0.9504, 0.9501],
         [0.0489, 0.0497, 0.0506,  ..., 0.0477, 0.0496, 0.0499]],
        [[0.9507, 0.9499, 0.9483,  ..., 0.9484, 0.9294, 0.9511],
         [0.0493, 0.0501, 0.0517,  ..., 0.0516, 0.0706, 0.0489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9552, 0.9544, 0.9539,  ..., 0.9540, 0.9538, 0.9551],
         [0.0448, 0.0456, 0.0461,  ..., 0.0460, 0.0462, 0.0449]],
        [[0.9532, 0.9500, 0.9533,  ..., 0.9529, 0.9522, 0.9524],
         [0.0468, 0.0500, 0.0467,  ..., 0.0471, 0.0478, 0.0476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:58:59,736 [Process: 0] Synchronize training processes
2024-08-18 14:58:59,736 [Process: 0] Evaluating...
2024-08-18 14:58:59,738 [Process: 0] EPOCH 189:
2024-08-18 14:58:59,739 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:59:00,893 [Process: 0] Synchronize training processes
2024-08-18 14:59:00,893 [Process: 0] Evaluating...
2024-08-18 14:59:00,895 [Process: 0] EPOCH 190:
2024-08-18 14:59:00,897 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9501, 0.9497, 0.9514,  ..., 0.9513, 0.9509, 0.9515],
         [0.0499, 0.0503, 0.0486,  ..., 0.0487, 0.0491, 0.0485]],
        [[0.9501, 0.9497, 0.9474,  ..., 0.9517, 0.9349, 0.9484],
         [0.0499, 0.0503, 0.0526,  ..., 0.0483, 0.0651, 0.0516]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9533, 0.9531, 0.9540,  ..., 0.9543, 0.9531, 0.9550],
         [0.0467, 0.0469, 0.0460,  ..., 0.0457, 0.0469, 0.0450]],
        [[0.9544, 0.9513, 0.9531,  ..., 0.9521, 0.9536, 0.9522],
         [0.0456, 0.0487, 0.0469,  ..., 0.0479, 0.0464, 0.0478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9549, 0.9519, 0.9535,  ..., 0.9529, 0.9544, 0.9535],
         [0.0451, 0.0481, 0.0465,  ..., 0.0471, 0.0456, 0.0465]],
        [[0.9527, 0.9514, 0.9496,  ..., 0.9529, 0.9244, 0.9531],
         [0.0473, 0.0486, 0.0504,  ..., 0.0471, 0.0756, 0.0469]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:59:02,049 [Process: 0] Synchronize training processes
2024-08-18 14:59:02,049 [Process: 0] Evaluating...
2024-08-18 14:59:02,051 [Process: 0] EPOCH 191:
2024-08-18 14:59:02,052 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:59:03,209 [Process: 0] Synchronize training processes
2024-08-18 14:59:03,209 [Process: 0] Evaluating...
2024-08-18 14:59:03,214 [Process: 0] EPOCH 192:
2024-08-18 14:59:03,216 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9560, 0.9543, 0.9540,  ..., 0.9546, 0.9548, 0.9547],
         [0.0440, 0.0457, 0.0460,  ..., 0.0454, 0.0452, 0.0453]],
        [[0.9534, 0.9513, 0.9535,  ..., 0.9549, 0.9537, 0.9520],
         [0.0466, 0.0487, 0.0465,  ..., 0.0451, 0.0463, 0.0480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9564, 0.9577, 0.9560,  ..., 0.9569, 0.9555, 0.9565],
         [0.0436, 0.0423, 0.0440,  ..., 0.0431, 0.0445, 0.0435]],
        [[0.9541, 0.9557, 0.9535,  ..., 0.9537, 0.9408, 0.9554],
         [0.0459, 0.0443, 0.0465,  ..., 0.0463, 0.0592, 0.0446]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9550, 0.9550, 0.9547,  ..., 0.9546, 0.9537, 0.9554],
         [0.0450, 0.0450, 0.0453,  ..., 0.0454, 0.0463, 0.0446]],
        [[0.9541, 0.9542, 0.9536,  ..., 0.9560, 0.9549, 0.9539],
         [0.0459, 0.0458, 0.0464,  ..., 0.0440, 0.0451, 0.0461]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9577, 0.9567, 0.9569,  ..., 0.9579, 0.9567, 0.9563],
         [0.0423, 0.0433, 0.0431,  ..., 0.0421, 0.0433, 0.0437]],
        [[0.9565, 0.9561, 0.9554,  ..., 0.9565, 0.9549, 0.9567],
         [0.0435, 0.0439, 0.0446,  ..., 0.0435, 0.0451, 0.0433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:59:04,370 [Process: 0] Synchronize training processes
2024-08-18 14:59:04,370 [Process: 0] Evaluating...
2024-08-18 14:59:04,372 [Process: 0] EPOCH 193:
2024-08-18 14:59:04,374 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9558, 0.9554, 0.9566,  ..., 0.9560, 0.9556, 0.9562],
         [0.0442, 0.0446, 0.0434,  ..., 0.0440, 0.0444, 0.0438]],
        [[0.9552, 0.9549, 0.9562,  ..., 0.9555, 0.9558, 0.9553],
         [0.0448, 0.0451, 0.0438,  ..., 0.0445, 0.0442, 0.0447]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9567, 0.9556, 0.9560,  ..., 0.9557, 0.9560, 0.9564],
         [0.0433, 0.0444, 0.0440,  ..., 0.0443, 0.0440, 0.0436]],
        [[0.9560, 0.9557, 0.9566,  ..., 0.9559, 0.9515, 0.9562],
         [0.0440, 0.0443, 0.0434,  ..., 0.0441, 0.0485, 0.0438]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9543, 0.9544, 0.9546,  ..., 0.9549, 0.9540, 0.9538],
         [0.0457, 0.0456, 0.0454,  ..., 0.0451, 0.0460, 0.0462]],
        [[0.9545, 0.9531, 0.9541,  ..., 0.9535, 0.9532, 0.9533],
         [0.0455, 0.0469, 0.0459,  ..., 0.0465, 0.0468, 0.0467]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:59:05,526 [Process: 0] Synchronize training processes
2024-08-18 14:59:05,526 [Process: 0] Evaluating...
2024-08-18 14:59:05,528 [Process: 0] EPOCH 194:
2024-08-18 14:59:05,530 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:59:06,684 [Process: 0] Synchronize training processes
2024-08-18 14:59:06,684 [Process: 0] Evaluating...
2024-08-18 14:59:06,686 [Process: 0] EPOCH 195:
2024-08-18 14:59:06,688 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9549, 0.9554, 0.9560,  ..., 0.9548, 0.9562, 0.9555],
         [0.0451, 0.0446, 0.0440,  ..., 0.0452, 0.0438, 0.0445]],
        [[0.9561, 0.9556, 0.9553,  ..., 0.9554, 0.9524, 0.9546],
         [0.0439, 0.0444, 0.0447,  ..., 0.0446, 0.0476, 0.0454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9522, 0.9526, 0.9537,  ..., 0.9541, 0.9522, 0.9538],
         [0.0478, 0.0474, 0.0463,  ..., 0.0459, 0.0478, 0.0462]],
        [[0.9526, 0.9513, 0.9527,  ..., 0.9527, 0.9517, 0.9522],
         [0.0474, 0.0487, 0.0473,  ..., 0.0473, 0.0483, 0.0478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9541, 0.9554, 0.9550,  ..., 0.9553, 0.9551, 0.9554],
         [0.0459, 0.0446, 0.0450,  ..., 0.0447, 0.0449, 0.0446]],
        [[0.9550, 0.9550, 0.9557,  ..., 0.9557, 0.9517, 0.9547],
         [0.0450, 0.0450, 0.0443,  ..., 0.0444, 0.0483, 0.0453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9527, 0.9526, 0.9524,  ..., 0.9527, 0.9525, 0.9540],
         [0.0473, 0.0474, 0.0476,  ..., 0.0473, 0.0475, 0.0460]],
        [[0.9524, 0.9509, 0.9530,  ..., 0.9515, 0.9527, 0.9530],
         [0.0476, 0.0491, 0.0470,  ..., 0.0485, 0.0473, 0.0470]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])
2024-08-18 14:59:07,842 [Process: 0] Synchronize training processes
2024-08-18 14:59:07,842 [Process: 0] Evaluating...
2024-08-18 14:59:07,844 [Process: 0] EPOCH 196:
2024-08-18 14:59:07,846 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 179, in train_one_epoch
    for i, batch in enumerate(self.train_loader):
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in __getitem__
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in <listcomp>
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 55, in is_yellow
    return (color[0] > 1 - tolerance and color[1] > 1 - tolerance and color[2] < tolerance)
KeyboardInterrupt
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 2, 512])
------target shape: torch.Size([2, 512, 2])
tensor([[[0.9557, 0.9560, 0.9556,  ..., 0.9554, 0.9552, 0.9559],
         [0.0443, 0.0440, 0.0444,  ..., 0.0446, 0.0448, 0.0441]],
        [[0.9555, 0.9547, 0.9563,  ..., 0.9560, 0.9455, 0.9559],
         [0.0445, 0.0453, 0.0437,  ..., 0.0440, 0.0545, 0.0441]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 512])
mask shape: torch.Size([2, 512, 2])
shape of inputs: torch.Size([2, 2, 512])
shape of targets: torch.Size([2, 2, 512])