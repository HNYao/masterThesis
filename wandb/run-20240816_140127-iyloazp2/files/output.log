2024-08-16 14:01:32,182 [Worker 0] Is distributed: False
2024-08-16 14:01:32,183 [Process: 0] Starting training
2024-08-16 14:01:32,183 [Process: 0] EPOCH 1:
2024-08-16 14:01:32,186 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2288, 0.2102, 0.2691,  ..., 0.3613, 0.3844, 0.3568],
         [0.2360, 0.3695, 0.2254,  ..., 0.2129, 0.2029, 0.2303],
         [0.3065, 0.2102, 0.2067,  ..., 0.2129, 0.2029, 0.2065],
         [0.2288, 0.2102, 0.2988,  ..., 0.2129, 0.2099, 0.2065]],
        [[0.2659, 0.2759, 0.2439,  ..., 0.2364, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2683,  ..., 0.2658, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2439,  ..., 0.2615, 0.3221, 0.2638],
         [0.2447, 0.2414, 0.2439,  ..., 0.2364, 0.2260, 0.2454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0986, 0.1806, 0.2988,  ..., 0.1523, 0.1675, 0.2500],
         [0.4868, 0.4582, 0.1400,  ..., 0.4079, 0.2931, 0.2500],
         [0.2574, 0.1806, 0.1748,  ..., 0.2876, 0.4111, 0.2500],
         [0.1571, 0.1806, 0.3864,  ..., 0.1523, 0.1283, 0.2500]],
        [[0.3503, 0.2016, 0.1917,  ..., 0.3604, 0.5047, 0.2002],
         [0.1800, 0.2016, 0.1814,  ..., 0.1945, 0.0912, 0.2259],
         [0.2896, 0.2016, 0.4456,  ..., 0.1882, 0.0800, 0.2732],
         [0.1800, 0.3951, 0.1814,  ..., 0.2569, 0.3242, 0.3006]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-16 14:01:34,717 [Process: 0] Synchronize training processes
2024-08-16 14:01:34,718 [Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:01:54,470 [Process: 0] EPOCH 2:
2024-08-16 14:01:54,477 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2816, 0.2646, 0.2492,  ..., 0.2696, 0.2466, 0.2628],
         [0.2822, 0.2338, 0.3302,  ..., 0.2199, 0.2586, 0.2851],
         [0.2000, 0.2160, 0.1965,  ..., 0.2054, 0.2466, 0.2100],
         [0.2361, 0.2856, 0.2242,  ..., 0.3051, 0.2483, 0.2420]],
        [[0.2281, 0.2500, 0.2498,  ..., 0.2410, 0.2625, 0.3055],
         [0.2590, 0.2500, 0.2498,  ..., 0.2410, 0.2458, 0.2188],
         [0.2281, 0.2500, 0.2498,  ..., 0.2410, 0.2458, 0.2569],
         [0.2847, 0.2500, 0.2507,  ..., 0.2770, 0.2458, 0.2188]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3967, 0.1545, 0.1673,  ..., 0.2500, 0.1515, 0.1769],
         [0.2011, 0.3637, 0.1673,  ..., 0.2500, 0.1515, 0.1614],
         [0.2011, 0.2575, 0.4335,  ..., 0.2500, 0.3620, 0.3234],
         [0.2011, 0.2243, 0.2318,  ..., 0.2500, 0.3351, 0.3384]],
        [[0.2461, 0.4856, 0.1413,  ..., 0.1168, 0.2500, 0.1884],
         [0.2616, 0.0650, 0.1413,  ..., 0.6310, 0.2500, 0.3978],
         [0.2461, 0.0801, 0.2378,  ..., 0.1355, 0.2500, 0.2255],
         [0.2461, 0.3693, 0.4796,  ..., 0.1168, 0.2500, 0.1884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:01:56,501 [Process: 0] Synchronize training processes
2024-08-16 14:01:56,501 [Process: 0] Evaluating...
2024-08-16 14:01:56,503 [Process: 0] EPOCH 3:
2024-08-16 14:01:56,505 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2773, 0.3099, 0.1900,  ..., 0.2300, 0.2516, 0.2393],
         [0.2379, 0.3227, 0.4092,  ..., 0.2693, 0.3031, 0.3951],
         [0.2082, 0.1837, 0.1900,  ..., 0.2300, 0.2227, 0.1828],
         [0.2766, 0.1837, 0.2107,  ..., 0.2707, 0.2227, 0.1828]],
        [[0.2335, 0.2337, 0.2500,  ..., 0.2961, 0.2800, 0.2431],
         [0.2335, 0.2337, 0.2500,  ..., 0.2511, 0.2051, 0.2251],
         [0.2524, 0.2337, 0.2500,  ..., 0.2264, 0.2575, 0.2587],
         [0.2806, 0.2989, 0.2500,  ..., 0.2264, 0.2574, 0.2731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.7532, 0.2298, 0.1471,  ..., 0.3889, 0.2127, 0.1300],
         [0.0464, 0.1382, 0.2112,  ..., 0.1336, 0.1718, 0.2819],
         [0.0369, 0.4816, 0.1948,  ..., 0.1336, 0.2536, 0.4166],
         [0.1635, 0.1504, 0.4469,  ..., 0.3438, 0.3620, 0.1715]],
        [[0.1945, 0.1591, 0.1064,  ..., 0.1187, 0.1364, 0.1037],
         [0.4164, 0.5227, 0.6807,  ..., 0.2070, 0.2557, 0.1037],
         [0.1945, 0.1591, 0.1064,  ..., 0.5555, 0.4714, 0.6888],
         [0.1945, 0.1591, 0.1064,  ..., 0.1187, 0.1364, 0.1037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:01:58,502 [Process: 0] Synchronize training processes
2024-08-16 14:01:58,503 [Process: 0] Evaluating...
2024-08-16 14:01:58,505 [Process: 0] EPOCH 4:
2024-08-16 14:01:58,507 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2191, 0.2003, 0.2292,  ..., 0.2359, 0.2121, 0.2420],
         [0.2191, 0.2024, 0.2292,  ..., 0.2311, 0.2121, 0.2904],
         [0.2191, 0.1496, 0.2932,  ..., 0.2108, 0.2778, 0.2298],
         [0.3427, 0.4477, 0.2485,  ..., 0.3222, 0.2980, 0.2378]],
        [[0.2367, 0.2419, 0.2890,  ..., 0.2580, 0.2224, 0.2986],
         [0.2900, 0.2920, 0.2771,  ..., 0.2799, 0.2615, 0.2338],
         [0.2367, 0.2130, 0.2170,  ..., 0.2310, 0.2133, 0.2338],
         [0.2367, 0.2530, 0.2170,  ..., 0.2310, 0.3029, 0.2338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1989, 0.2435, 0.3135,  ..., 0.1774, 0.2259, 0.3919],
         [0.2596, 0.2694, 0.2350,  ..., 0.4679, 0.3223, 0.2347],
         [0.2774, 0.2435, 0.1842,  ..., 0.1774, 0.2259, 0.1727],
         [0.2641, 0.2435, 0.2673,  ..., 0.1774, 0.2259, 0.2008]],
        [[0.2664, 0.2811, 0.2500,  ..., 0.2450, 0.2749, 0.2345],
         [0.1859, 0.2829, 0.2500,  ..., 0.2649, 0.2291, 0.2345],
         [0.1859, 0.2180, 0.2500,  ..., 0.2450, 0.2291, 0.2345],
         [0.3618, 0.2180, 0.2500,  ..., 0.2450, 0.2668, 0.2966]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:02:00,429 [Process: 0] Synchronize training processes
2024-08-16 14:02:00,429 [Process: 0] Evaluating...
2024-08-16 14:02:00,431 [Process: 0] EPOCH 5:
2024-08-16 14:02:00,433 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2293, 0.2089, 0.2676,  ..., 0.2607, 0.2450, 0.2725],
         [0.2293, 0.3334, 0.2441,  ..., 0.2723, 0.2450, 0.1919],
         [0.2516, 0.1949, 0.2441,  ..., 0.2218, 0.2650, 0.1919],
         [0.2898, 0.2628, 0.2441,  ..., 0.2452, 0.2450, 0.3438]],
        [[0.2485, 0.2113, 0.2349,  ..., 0.2813, 0.2419, 0.2587],
         [0.2727, 0.3485, 0.2690,  ..., 0.2648, 0.2742, 0.2282],
         [0.2394, 0.2113, 0.2349,  ..., 0.2264, 0.2419, 0.2282],
         [0.2394, 0.2289, 0.2613,  ..., 0.2275, 0.2419, 0.2850]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4305, 0.4749, 0.3564,  ..., 0.1893, 0.2916, 0.2948],
         [0.1894, 0.2172, 0.1861,  ..., 0.3503, 0.2800, 0.3442],
         [0.1809, 0.1539, 0.1617,  ..., 0.2112, 0.2085, 0.1805],
         [0.1993, 0.1539, 0.2958,  ..., 0.2492, 0.2199, 0.1805]],
        [[0.1904, 0.2500, 0.2958,  ..., 0.3516, 0.1452, 0.1258],
         [0.3783, 0.2500, 0.4203,  ..., 0.1245, 0.2847, 0.2015],
         [0.1904, 0.2500, 0.1242,  ..., 0.1392, 0.0553, 0.0991],
         [0.2409, 0.2500, 0.1597,  ..., 0.3846, 0.5148, 0.5736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:02:02,394 [Process: 0] Synchronize training processes
2024-08-16 14:02:02,395 [Process: 0] Evaluating...
2024-08-16 14:02:02,397 [Process: 0] EPOCH 6:
2024-08-16 14:02:02,399 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2125, 0.2490, 0.2061,  ..., 0.2216, 0.2431, 0.3273],
         [0.2915, 0.2490, 0.1601,  ..., 0.2454, 0.2115, 0.2409],
         [0.2125, 0.2490, 0.1787,  ..., 0.1598, 0.2083, 0.1988],
         [0.2835, 0.2531, 0.4551,  ..., 0.3733, 0.3371, 0.2329]],
        [[0.3452, 0.2677, 0.3126,  ..., 0.3423, 0.2675, 0.2378],
         [0.2459, 0.2441, 0.2133,  ..., 0.2007, 0.2442, 0.2378],
         [0.2044, 0.2441, 0.2227,  ..., 0.2007, 0.2442, 0.2867],
         [0.2044, 0.2441, 0.2513,  ..., 0.2564, 0.2442, 0.2378]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2296, 0.3225, 0.2042,  ..., 0.1966, 0.3314, 0.1826],
         [0.3112, 0.2126, 0.2485,  ..., 0.3407, 0.2694, 0.2451],
         [0.2296, 0.2013, 0.3431,  ..., 0.2661, 0.2215, 0.3897],
         [0.2296, 0.2636, 0.2042,  ..., 0.1966, 0.1777, 0.1826]],
        [[0.2188, 0.2339, 0.1863,  ..., 0.2051, 0.2834, 0.2593],
         [0.2657, 0.2339, 0.3874,  ..., 0.3678, 0.1701, 0.2093],
         [0.2964, 0.2339, 0.1679,  ..., 0.2051, 0.1486, 0.1895],
         [0.2191, 0.2983, 0.2585,  ..., 0.2220, 0.3978, 0.3419]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:02:04,328 [Process: 0] Synchronize training processes
2024-08-16 14:02:04,328 [Process: 0] Evaluating...
2024-08-16 14:02:04,330 [Process: 0] EPOCH 7:
2024-08-16 14:02:04,332 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2082, 0.2257, 0.2315,  ..., 0.2262, 0.2252, 0.2206],
         [0.2082, 0.3025, 0.2590,  ..., 0.2838, 0.1664, 0.2206],
         [0.2507, 0.2138, 0.1596,  ..., 0.2118, 0.1664, 0.2655],
         [0.3330, 0.2580, 0.3500,  ..., 0.2782, 0.4420, 0.2933]],
        [[0.2473, 0.2500, 0.3263,  ..., 0.2398, 0.2417, 0.2466],
         [0.2582, 0.2500, 0.2246,  ..., 0.2808, 0.2749, 0.3088],
         [0.2473, 0.2500, 0.2246,  ..., 0.2397, 0.2417, 0.2223],
         [0.2473, 0.2500, 0.2246,  ..., 0.2397, 0.2417, 0.2223]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2000, 0.1309,  ..., 0.2148, 0.1740, 0.1151],
         [0.2500, 0.2000, 0.1309,  ..., 0.2148, 0.1740, 0.1151],
         [0.2500, 0.3519, 0.4230,  ..., 0.2983, 0.4780, 0.6546],
         [0.2500, 0.2481, 0.3152,  ..., 0.2721, 0.1740, 0.1151]],
        [[0.4539, 0.3505, 0.1941,  ..., 0.3027, 0.1731, 0.3069],
         [0.2217, 0.1562, 0.3305,  ..., 0.2494, 0.1448, 0.3016],
         [0.1286, 0.1562, 0.1716,  ..., 0.2277, 0.1092, 0.1060],
         [0.1958, 0.3370, 0.3038,  ..., 0.2202, 0.5729, 0.2856]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:02:06,273 [Process: 0] Synchronize training processes
2024-08-16 14:02:06,273 [Process: 0] Evaluating...
2024-08-16 14:02:06,275 [Process: 0] EPOCH 8:
2024-08-16 14:02:06,278 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:02:08,184 [Process: 0] Synchronize training processes
2024-08-16 14:02:08,184 [Process: 0] Evaluating...
2024-08-16 14:02:08,186 [Process: 0] EPOCH 9:
2024-08-16 14:02:08,188 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2215, 0.2124, 0.2272,  ..., 0.2085, 0.2583, 0.2307],
         [0.2215, 0.2174, 0.2303,  ..., 0.2085, 0.2625, 0.2024],
         [0.2215, 0.2124, 0.2322,  ..., 0.2460, 0.2396, 0.2451],
         [0.3356, 0.3578, 0.3103,  ..., 0.3370, 0.2396, 0.3218]],
        [[0.2830, 0.2149, 0.2459,  ..., 0.3342, 0.2837, 0.2491],
         [0.2345, 0.3119, 0.2459,  ..., 0.2104, 0.2246, 0.2491],
         [0.2345, 0.2149, 0.2459,  ..., 0.2104, 0.2001, 0.2491],
         [0.2480, 0.2583, 0.2624,  ..., 0.2450, 0.2916, 0.2527]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2366, 0.2122, 0.3791,  ..., 0.1980, 0.2127, 0.0289],
         [0.2572, 0.3633, 0.2228,  ..., 0.4060, 0.2108, 0.0289],
         [0.2413, 0.2122, 0.1799,  ..., 0.1980, 0.3657, 0.1335],
         [0.2649, 0.2122, 0.2182,  ..., 0.1980, 0.2108, 0.8088]],
        [[0.2933, 0.2647, 0.2642,  ..., 0.2836, 0.3132, 0.2863],
         [0.2750, 0.2653, 0.2326,  ..., 0.2228, 0.2360, 0.2594],
         [0.2159, 0.2350, 0.2326,  ..., 0.2228, 0.2254, 0.1845],
         [0.2159, 0.2350, 0.2707,  ..., 0.2707, 0.2254, 0.2699]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:02:10,093 [Process: 0] Synchronize training processes
2024-08-16 14:02:10,093 [Process: 0] Evaluating...
2024-08-16 14:02:10,095 [Process: 0] EPOCH 10:
2024-08-16 14:02:10,097 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2443, 0.1855, 0.2060,  ..., 0.2359, 0.2896, 0.2005],
         [0.1690, 0.2553, 0.1613,  ..., 0.2033, 0.1883, 0.2492],
         [0.1690, 0.1714, 0.1660,  ..., 0.1933, 0.1883, 0.2309],
         [0.4177, 0.3877, 0.4667,  ..., 0.3674, 0.3338, 0.3194]],
        [[0.2278, 0.2500, 0.2708,  ..., 0.2480, 0.2500, 0.2639],
         [0.3165, 0.2500, 0.2431,  ..., 0.2480, 0.2500, 0.2788],
         [0.2278, 0.2500, 0.2431,  ..., 0.2560, 0.2500, 0.2204],
         [0.2278, 0.2500, 0.2431,  ..., 0.2480, 0.2500, 0.2369]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.6461, 0.2300,  ..., 0.4314, 0.1034, 0.4800],
         [0.2500, 0.1239, 0.2915,  ..., 0.3713, 0.1827, 0.1532],
         [0.2500, 0.1172, 0.2485,  ..., 0.0987, 0.6104, 0.1415],
         [0.2500, 0.1127, 0.2300,  ..., 0.0987, 0.1034, 0.2253]],
        [[0.3009, 0.2500, 0.2165,  ..., 0.1288, 0.5878, 0.1570],
         [0.1440, 0.2500, 0.2165,  ..., 0.0728, 0.0785, 0.1570],
         [0.2431, 0.2500, 0.2165,  ..., 0.0728, 0.1009, 0.1780],
         [0.3120, 0.2500, 0.3506,  ..., 0.7255, 0.2328, 0.5080]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:02:12,007 [Process: 0] Synchronize training processes
2024-08-16 14:02:12,008 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2136, 0.2096, 0.2095,  ..., 0.2100, 0.2097, 0.2158],
         [0.1581, 0.2401, 0.2063,  ..., 0.2100, 0.2097, 0.2158],
         [0.1840, 0.1821, 0.2164,  ..., 0.2100, 0.2569, 0.2158],
         [0.4444, 0.3683, 0.3678,  ..., 0.3700, 0.3237, 0.3526]],
        [[0.2555, 0.2645, 0.2939,  ..., 0.2500, 0.3509, 0.2254],
         [0.2482, 0.2452, 0.2344,  ..., 0.2500, 0.2132, 0.2611],
         [0.2482, 0.2452, 0.2344,  ..., 0.2500, 0.2132, 0.2114],
         [0.2482, 0.2452, 0.2372,  ..., 0.2500, 0.2227, 0.3021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2289, 0.2837, 0.2440,  ..., 0.1901, 0.1531, 0.4134],
         [0.1280, 0.1852, 0.2333,  ..., 0.1765, 0.1227, 0.1338],
         [0.3861, 0.2148, 0.2717,  ..., 0.2805, 0.3930, 0.2661],
         [0.2570, 0.3163, 0.2509,  ..., 0.3529, 0.3312, 0.1867]],
        [[0.2081, 0.2390, 0.2470,  ..., 0.1974, 0.2324, 0.3033],
         [0.3758, 0.2829, 0.4193,  ..., 0.3560, 0.4858, 0.2322],
         [0.2081, 0.2390, 0.1391,  ..., 0.1974, 0.1409, 0.2322],
         [0.2081, 0.2390, 0.1946,  ..., 0.2493, 0.1409, 0.2322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...